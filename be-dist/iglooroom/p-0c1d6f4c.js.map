{"version":3,"names":["BookingListingAppService","detectPaymentOrigin","booking","console","log","extras","code","_a","find","e","key","value","_b","app_store","property","allowed_payment_methods","apm","getBookingActions","canView","canCancel","status","isBefore","Date","from_date","is_requested_to_cancel","canMakePayment","some","paymentMethod","is_payment_gateway","makePaymentLabel","formattedAmount","prepayment_amount","formatAmount","currency","localizedWords","entries","Lcz_PayToGuarantee","replace","cancel","show","label","Lcz_CancelBooking","payment","view","Lcz_BookingDetails"],"sources":["src/services/app/booking-listing.service.ts"],"sourcesContent":["import { Booking } from '@/models/booking.dto';\r\nimport app_store from '@/stores/app.store';\r\nimport localizedWords from '@/stores/localization.store';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport { isBefore } from 'date-fns';\r\ntype TBookingActions = {\r\n  cancel: { show: boolean; label: string };\r\n  payment: { show: boolean; label: string; formattedAmount: string };\r\n  view: { show: boolean; label: string };\r\n};\r\nexport class BookingListingAppService {\r\n  public detectPaymentOrigin(booking: Booking) {\r\n    console.log(booking.extras);\r\n    if (!booking.extras) {\r\n      return null;\r\n    }\r\n    const code = booking.extras.find(e => e.key === 'payment_code')?.value;\r\n    if (!code) {\r\n      return null;\r\n    }\r\n    return app_store.property.allowed_payment_methods.find(apm => apm.code === code) ?? null;\r\n  }\r\n\r\n  public getBookingActions(booking: Booking): TBookingActions {\r\n    // const canView = booking.status.code !== '003';\r\n    const canView = true;\r\n    const canCancel = booking.status.code !== '003' && isBefore(new Date(), new Date(booking.from_date)) && !booking.is_requested_to_cancel;\r\n    const canMakePayment = booking.status.code === '001' && app_store.property.allowed_payment_methods.some(paymentMethod => paymentMethod.is_payment_gateway);\r\n    let makePaymentLabel = '';\r\n    let formattedAmount = '';\r\n    if (canMakePayment) {\r\n      const prepayment_amount = booking.extras.find(e => e.key === 'prepayment_amount');\r\n      if (prepayment_amount) {\r\n        formattedAmount = formatAmount(prepayment_amount.value || 0, booking.currency.code);\r\n        makePaymentLabel = localizedWords.entries.Lcz_PayToGuarantee.replace('%1', formattedAmount);\r\n      }\r\n    }\r\n    return {\r\n      cancel: { show: canCancel, label: localizedWords.entries.Lcz_CancelBooking },\r\n      payment: { show: canMakePayment, label: makePaymentLabel, formattedAmount },\r\n      view: { show: canView, label: localizedWords.entries.Lcz_BookingDetails },\r\n    };\r\n  }\r\n}\r\n"],"mappings":"+DAUaA,EACJ,mBAAAC,CAAoBC,G,QACzBC,QAAQC,IAAIF,EAAQG,QACpB,IAAKH,EAAQG,OAAQ,CACnB,OAAO,I,CAET,MAAMC,GAAOC,EAAAL,EAAQG,OAAOG,MAAKC,GAAKA,EAAEC,MAAQ,oBAAe,MAAAH,SAAA,SAAAA,EAAEI,MACjE,IAAKL,EAAM,CACT,OAAO,I,CAET,OAAOM,EAAAC,EAAUC,SAASC,wBAAwBP,MAAKQ,GAAOA,EAAIV,OAASA,OAAK,MAAAM,SAAA,EAAAA,EAAI,I,CAG/E,iBAAAK,CAAkBf,GAEvB,MAAMgB,EAAU,KAChB,MAAMC,EAAYjB,EAAQkB,OAAOd,OAAS,OAASe,WAAS,IAAIC,KAAQ,IAAIA,KAAKpB,EAAQqB,cAAgBrB,EAAQsB,uBACjH,MAAMC,EAAiBvB,EAAQkB,OAAOd,OAAS,OAASO,EAAUC,SAASC,wBAAwBW,MAAKC,GAAiBA,EAAcC,qBACvI,IAAIC,EAAmB,GACvB,IAAIC,EAAkB,GACtB,GAAIL,EAAgB,CAClB,MAAMM,EAAoB7B,EAAQG,OAAOG,MAAKC,GAAKA,EAAEC,MAAQ,sBAC7D,GAAIqB,EAAmB,CACrBD,EAAkBE,EAAaD,EAAkBpB,OAAS,EAAGT,EAAQ+B,SAAS3B,MAC9EuB,EAAmBK,EAAeC,QAAQC,mBAAmBC,QAAQ,KAAMP,E,EAG/E,MAAO,CACLQ,OAAQ,CAAEC,KAAMpB,EAAWqB,MAAON,EAAeC,QAAQM,mBACzDC,QAAS,CAAEH,KAAMd,EAAgBe,MAAOX,EAAkBC,mBAC1Da,KAAM,CAAEJ,KAAMrB,EAASsB,MAAON,EAAeC,QAAQS,oB","ignoreList":[]}