{"version":3,"names":["initialState","state","interceptor_requests","onChange","onCalendarDatesChange","createStore","irInterceptorCss","IrInterceptorStyle0","IrInterceptor","componentWillLoad","this","setupAxiosInterceptors","axios","interceptors","request","use","handleRequest","bind","handleError","response","handleResponse","extractEndpoint","url","split","isHandledEndpoint","handledEndpoints","includes","config","extractedUrl","isLoading","_a","data","ExceptionMsg","trim","Error","error","Promise","reject","render","h","Host","key","class"],"sources":["src/stores/ir-interceptor.store.ts","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=shadow","src/components/ir-interceptor/ir-interceptor.tsx"],"sourcesContent":["import { createStore } from '@stencil/store';\r\n\r\nexport type TIrInterceptorStatus = 'pending' | 'done' | null;\r\n\r\nexport interface IRequestStatus {\r\n  [key: string]: TIrInterceptorStatus;\r\n}\r\n\r\nconst initialState: IRequestStatus = {};\r\n\r\nexport const { state: interceptor_requests, onChange: onCalendarDatesChange } = createStore<IRequestStatus>(initialState);\r\nexport function isRequestPending(url: string): boolean {\r\n  return interceptor_requests[url] === 'pending';\r\n}\r\n\r\nexport default interceptor_requests;\r\n",".loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loaderContainer {\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  background: white;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  pointer-events: all;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n// import { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  shadow: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/ReAllocate_Exposed_Room', '/Do_Payment', '/Get_Exposed_Bookings'];\r\n  //@Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(url);\r\n  }\r\n\r\n  handleRequest(config: AxiosRequestConfig) {\r\n    const extractedUrl = this.extractEndpoint(config.url);\r\n    interceptor_requests[extractedUrl] = 'pending';\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = true;\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response: AxiosResponse) {\r\n    const extractedUrl = this.extractEndpoint(response.config.url);\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = false;\r\n    }\r\n    interceptor_requests[extractedUrl] = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error: string) {\r\n    // this.toast.emit({\r\n    //   type: 'error',\r\n    //   title: error,\r\n    //   description: '',\r\n    //   position: 'top-right',\r\n    // });\r\n    return Promise.reject(error);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loaderContainer\">\r\n              <span class=\"loader\"></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"0HAQA,MAAMA,EAA+B,GAE9B,MAAQC,MAAOC,EAAsBC,SAAUC,GAA0BC,EAA4BL,GCV5G,MAAMM,EAAmB,ukIACzB,MAAAC,EAAeD,E,MCSFE,EAAa,M,sCACL,M,eACE,M,sBACO,M,sBAEgB,CAAC,2BAA4B,cAAe,wB,CAExF,iBAAAC,GACEC,KAAKC,wB,CAGP,sBAAAA,GACEC,EAAMC,aAAaC,QAAQC,IAAIL,KAAKM,cAAcC,KAAKP,MAAOA,KAAKQ,YAAYD,KAAKP,OACpFE,EAAMC,aAAaM,SAASJ,IAAIL,KAAKU,eAAeH,KAAKP,MAAOA,KAAKQ,YAAYD,KAAKP,M,CAGxF,eAAAW,CAAgBC,GACd,OAAOA,EAAIC,MAAM,KAAK,E,CAGxB,iBAAAC,CAAkBF,GAChB,OAAOZ,KAAKe,iBAAiBC,SAASJ,E,CAGxC,aAAAN,CAAcW,GACZ,MAAMC,EAAelB,KAAKW,gBAAgBM,EAAOL,KACjDpB,EAAqB0B,GAAgB,UACrC,GAAIlB,KAAKc,kBAAkBI,GAAe,CACxClB,KAAKmB,UAAY,I,CAEnB,OAAOF,C,CAGT,cAAAP,CAAeD,G,MACb,MAAMS,EAAelB,KAAKW,gBAAgBF,EAASQ,OAAOL,KAC1D,GAAIZ,KAAKc,kBAAkBI,GAAe,CACxClB,KAAKmB,UAAY,K,CAEnB3B,EAAqB0B,GAAgB,OACrC,IAAIE,EAAAX,EAASY,KAAKC,gBAAY,MAAAF,SAAA,SAAAA,EAAEG,OAAQ,CACtCvB,KAAKQ,YAAYC,EAASY,KAAKC,cAC/B,MAAM,IAAIE,MAAMf,EAASY,KAAKC,a,CAEhC,OAAOb,C,CAGT,WAAAD,CAAYiB,GAOV,OAAOC,QAAQC,OAAOF,E,CAExB,MAAAG,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACF/B,KAAKmB,WACJU,EAAA,OAAKG,MAAM,0BACTH,EAAA,OAAKG,MAAM,mBACTH,EAAA,QAAMG,MAAM,a"}