{"version":3,"names":["initialState","userFormData","prepaymentAmount","modifiedGuestName","pickup","arrival_date","format","Date","payment","agreed_to_services","state","checkout_store","onChange","onCheckoutDataChange","createStore","updateUserFormData","key","value","Object","assign","updatePickupFormData","location","updatePartialPickupFormData","params"],"sources":["src/stores/checkout.store.ts"],"sourcesContent":["import { TPickupFormData } from '@/models/pickup';\r\nimport { TUserFormData } from '@/models/user_form';\r\nimport { createStore } from '@stencil/store';\r\nimport { format } from 'date-fns';\r\nexport interface ICardProcessing {\r\n  code: string;\r\n  cardNumber: string;\r\n  cardHolderName: string;\r\n  expiry_month: string;\r\n  expiry_year: string;\r\n}\r\nexport interface ICardProcessingWithoutCVC extends ICardProcessing {\r\n  code: '004';\r\n}\r\nexport interface ICardProcessingWithCVC extends ICardProcessing {\r\n  code: '001';\r\n  cvc: string;\r\n}\r\n\r\nexport type TPayment = ICardProcessingWithCVC | { code: string };\r\ninterface CheckoutStore {\r\n  userFormData: TUserFormData;\r\n  pickup: TPickupFormData;\r\n  modifiedGuestName: boolean;\r\n  payment: TPayment | null;\r\n  agreed_to_services: boolean;\r\n  prepaymentAmount: number;\r\n}\r\n\r\nconst initialState: CheckoutStore = {\r\n  userFormData: {},\r\n  prepaymentAmount: 0,\r\n  modifiedGuestName: false,\r\n  pickup: {\r\n    arrival_date: format(new Date(), 'yyyy-MM-dd'),\r\n  },\r\n  payment: null,\r\n  agreed_to_services: false,\r\n};\r\n\r\nexport const { state: checkout_store, onChange: onCheckoutDataChange } = createStore<CheckoutStore>(initialState);\r\n\r\nexport function updateUserFormData(key: keyof TUserFormData, value: any) {\r\n  checkout_store.userFormData = {\r\n    ...checkout_store.userFormData,\r\n    [key]: value,\r\n  };\r\n}\r\nexport function updatePickupFormData(key: keyof TPickupFormData, value: any) {\r\n  if (key === 'location' && value === null) {\r\n    checkout_store.pickup = {\r\n      arrival_date: format(new Date(), 'yyyy-MM-dd'),\r\n      location: null,\r\n    };\r\n  } else {\r\n    checkout_store.pickup = {\r\n      ...checkout_store.pickup,\r\n      [key]: value,\r\n    };\r\n  }\r\n}\r\nexport function updatePartialPickupFormData(params: Partial<TPickupFormData>) {\r\n  checkout_store.pickup = {\r\n    ...checkout_store.pickup,\r\n    ...params,\r\n  };\r\n}\r\n"],"mappings":"wEA6BA,MAAMA,EAA8B,CAClCC,aAAc,GACdC,iBAAkB,EAClBC,kBAAmB,MACnBC,OAAQ,CACNC,aAAcC,SAAO,IAAIC,KAAQ,eAEnCC,QAAS,KACTC,mBAAoB,O,MAGPC,MAAOC,EAAgBC,SAAUC,GAAyBC,EAA2Bd,G,SAEpFe,EAAmBC,EAA0BC,GAC3DN,EAAeV,aAAYiB,OAAAC,OAAAD,OAAAC,OAAA,GACtBR,EAAeV,cAAY,CAC9Be,CAACA,GAAMC,GAEX,C,SACgBG,EAAqBJ,EAA4BC,GAC/D,GAAID,IAAQ,YAAcC,IAAU,KAAM,CACxCN,EAAeP,OAAS,CACtBC,aAAcC,SAAO,IAAIC,KAAQ,cACjCc,SAAU,K,KAEP,CACLV,EAAeP,OAAMc,OAAAC,OAAAD,OAAAC,OAAA,GAChBR,EAAeP,QAAM,CACxBY,CAACA,GAAMC,G,CAGb,C,SACgBK,EAA4BC,GAC1CZ,EAAeP,OAAMc,OAAAC,OAAAD,OAAAC,OAAA,GAChBR,EAAeP,QACfmB,EAEP,Q","ignoreList":[]}