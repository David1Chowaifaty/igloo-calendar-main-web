{"version":3,"names":["Queue","constructor","this","items","rear","front","enqueue","element","dequeue","isEmpty","undefined","item","peek","size","print","console","log","Object","values","slice","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","alphabet","map","seed","prev","num","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","name","poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","assign","Request","req","method","xhrStatus","pollXhr","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","SocketManager","isConnected","initializeSocket","getInstance","instance","AvailabiltyService","queue","intervalId","PROCESSING_INTERVAL","subscribers","roomTypes","socketManager","subscribe","unsubscribe","filter","sub","disconnectSocket","clearInterval","initSocket","resetVariations","message_obj","KEY","PAYLOAD","notifySubscribers","startProcessingQueue","setInterval","processQueue","payloads","processPayloads","booking_store","resetBooking","rt","rateplans","rp","variations","validateNumberString","input","z","string","refine","val","numberString","isNaN","safeParse","success","enableBooking","ROOM_CATEGORY_ID","selectedRoomTypeIndex","findIndex","roomType","selectedRatePlanIndex","ROOM_TYPE_ID","rateplan","oldVariation","variation","adult_child_offering","ADULT_CHILD_OFFERING","adult_nbr","ADULTS_NBR","amount","_c","_b","ALLOT_RATE_V","child_nbr","CHILD_NBR","amount_per_night","_f","_e","_d","AMOUNT_PER_NIGHT_VAL","discount_pct","_j","_h","_g","DISCOUNT","is_lmd","IS_LMD","nights_nbr","_m","_l","_k","NIGHTS_NBR","total_before_discount","_q","_p","_o","TOTAL_BEFORE_DISCOUNT","is_calculated","IS_CALCULATED","MLS_ALERT","IS_MLS_VIOLATED","variationIndex","bookingAvailabilityParams","inventory"],"sources":["src/models/queue.ts","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/@socket.io/component-emitter/index.mjs","node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/url.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js","src/services/app/availability.service.ts"],"sourcesContent":["export class Queue<T> {\r\n  private items: Record<number, T> = {};\r\n  private rear = 0;\r\n  private front = 0;\r\n\r\n  enqueue(element: T): void {\r\n    this.items[this.rear] = element;\r\n    this.rear++;\r\n  }\r\n\r\n  dequeue(): T | undefined {\r\n    if (this.isEmpty()) {\r\n      return undefined;\r\n    }\r\n    const item = this.items[this.front];\r\n    delete this.items[this.front];\r\n    this.front++;\r\n    if (this.isEmpty()) {\r\n      this.rear = 0;\r\n      this.front = 0;\r\n    }\r\n    return item;\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.rear === this.front;\r\n  }\r\n\r\n  peek(): T | undefined {\r\n    return this.items[this.front];\r\n  }\r\n\r\n  size(): number {\r\n    return this.rear - this.front;\r\n  }\r\n\r\n  print(): void {\r\n    console.log(Object.values(this.items).slice(this.front, this.rear));\r\n  }\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { RoomType } from '@/models/property';\r\nimport { Queue } from '@/models/queue';\r\nimport booking_store from '@/stores/booking';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { z } from 'zod';\r\n\r\ninterface IPAYLOAD {\r\n  ROOM_CATEGORY_ID: number;\r\n  ROOM_TYPE_ID: number;\r\n  ADULTS_NBR: number;\r\n  CHILD_NBR: number;\r\n  ADULT_CHILD_OFFERING: string;\r\n  TOTAL_BEFORE_DISCOUNT: string;\r\n  ALLOT_RATE_V: number;\r\n  DISCOUNTED_ALLOTMENT_RATE: string;\r\n  DISCOUNT: number;\r\n  NIGHTS_NBR: number;\r\n  AMOUNT_PER_NIGHT: string;\r\n  AMOUNT_PER_NIGHT_VAL: number;\r\n  CURRENCY_SYMBOL: string;\r\n  IS_LMD: boolean;\r\n  IS_CALCULATED: boolean;\r\n  IS_MLS_VIOLATED: boolean;\r\n  MLS_ALERT: string | null;\r\n}\r\n\r\nclass SocketManager {\r\n  private static instance: SocketManager;\r\n  public socket: Socket;\r\n  public isConnected: boolean = false;\r\n\r\n  private constructor() {\r\n    this.initializeSocket();\r\n  }\r\n\r\n  private initializeSocket() {\r\n    this.socket = io('https://realtime.igloorooms.com/', {\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 2000,\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to the socket server');\r\n      this.isConnected = true;\r\n    });\r\n\r\n    this.socket.on('connect_error', error => {\r\n      console.error('Connection error:', error);\r\n    });\r\n\r\n    this.socket.on('disconnect', reason => {\r\n      console.log('Disconnected:', reason);\r\n      this.isConnected = false;\r\n      // this.reconnect();\r\n    });\r\n  }\r\n\r\n  public static getInstance(): SocketManager {\r\n    if (!SocketManager.instance) {\r\n      SocketManager.instance = new SocketManager();\r\n    }\r\n    return SocketManager.instance;\r\n  }\r\n\r\n  public reconnect() {\r\n    console.log('Attempting to reconnect...');\r\n    this.initializeSocket();\r\n  }\r\n\r\n  public close() {\r\n    this.socket.close();\r\n  }\r\n}\r\n\r\nexport default SocketManager;\r\n\r\nexport class AvailabiltyService {\r\n  private socketManager: SocketManager;\r\n  private queue = new Queue<string>();\r\n  private intervalId: NodeJS.Timeout | null = null;\r\n  private readonly PROCESSING_INTERVAL = 400;\r\n  private subscribers: ((b: boolean) => void)[] = [];\r\n  private roomTypes: RoomType[] = [];\r\n  // private variationSorter = new VariationSorter();\r\n  constructor() {\r\n    this.socketManager = SocketManager.getInstance();\r\n  }\r\n\r\n  public subscribe(callback: (b: boolean) => void) {\r\n    this.subscribers.push(callback);\r\n  }\r\n\r\n  public unsubscribe(callback: (b: boolean) => void) {\r\n    this.subscribers = this.subscribers.filter(sub => sub !== callback);\r\n  }\r\n  public disconnectSocket() {\r\n    this.socketManager.socket.on('disconnect', reason => {\r\n      console.log('Disconnected:', reason);\r\n      if (this.intervalId) {\r\n        clearInterval(this.intervalId);\r\n      }\r\n    });\r\n    this.socketManager.socket.close();\r\n  }\r\n  public initSocket(id?: string, view: boolean = false): void {\r\n    if (!this.socketManager.isConnected) {\r\n      this.socketManager.reconnect();\r\n    }\r\n    if (!view) {\r\n      this.resetVariations();\r\n    }\r\n\r\n    this.socketManager.socket.on('MSG', (msg: string) => {\r\n      try {\r\n        const message_obj = JSON.parse(msg);\r\n        if (message_obj && message_obj.KEY && message_obj.KEY.toString() === id) {\r\n          if (view) {\r\n            return console.log(JSON.parse(message_obj.PAYLOAD));\r\n          }\r\n          // console.log(currentTime - this.duration);\r\n\r\n          this.notifySubscribers();\r\n          this.queue.enqueue(message_obj.PAYLOAD);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing message:', error);\r\n      }\r\n    });\r\n    this.startProcessingQueue();\r\n  }\r\n\r\n  private startProcessingQueue(): void {\r\n    this.intervalId = setInterval(() => this.processQueue(), this.PROCESSING_INTERVAL);\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    const payloads: IPAYLOAD[] = [];\r\n\r\n    while (!this.queue.isEmpty()) {\r\n      const payload = this.queue.dequeue();\r\n      if (payload) {\r\n        payloads.push(JSON.parse(payload));\r\n      }\r\n    }\r\n\r\n    if (payloads.length > 0) {\r\n      await this.processPayloads(payloads);\r\n    }\r\n  }\r\n  private notifySubscribers() {\r\n    this.subscribers.forEach(callback => callback(false));\r\n  }\r\n  private resetVariations() {\r\n    booking_store.resetBooking = true;\r\n    this.roomTypes = [...booking_store.roomTypes];\r\n    this.roomTypes = this.roomTypes.map(rt => {\r\n      return {\r\n        ...rt,\r\n        rateplans: rt.rateplans.map(rp => ({\r\n          ...rp,\r\n          variations: [],\r\n        })),\r\n      };\r\n    });\r\n  }\r\n  private validateNumberString(input: string): number {\r\n    const schema = z.string().refine(\r\n      val => {\r\n        const numberString = val.replace(/,/g, '');\r\n        return !isNaN(Number(numberString));\r\n      },\r\n      {\r\n        message: 'Invalid number format',\r\n      },\r\n    );\r\n    const result = schema.safeParse(input);\r\n    if (!result.success) {\r\n      throw new Error(`${input} is an invalid number format`);\r\n    }\r\n    return Number(result.data.replace(/,/g, ''));\r\n  }\r\n\r\n  private async processPayloads(payloads: IPAYLOAD[]): Promise<void> {\r\n    try {\r\n      // console.log('payload', payloads);\r\n      if (!booking_store.enableBooking) {\r\n        booking_store.enableBooking = true;\r\n      }\r\n\r\n      payloads.forEach(payload => {\r\n        if (payload.ROOM_CATEGORY_ID === 2345) {\r\n          console.log(payload);\r\n        }\r\n        const selectedRoomTypeIndex = this.roomTypes.findIndex(rt => rt.id === payload.ROOM_CATEGORY_ID);\r\n        if (selectedRoomTypeIndex === -1) {\r\n          console.error('Invalid room type');\r\n          return;\r\n        }\r\n        let roomType = this.roomTypes[selectedRoomTypeIndex];\r\n        const selectedRatePlanIndex = roomType.rateplans.findIndex(rp => rp.id === payload.ROOM_TYPE_ID);\r\n        if (selectedRatePlanIndex === -1) {\r\n          // console.error('Invalid rate plan');\r\n          return;\r\n        }\r\n        let rateplan = roomType.rateplans[selectedRatePlanIndex];\r\n        let oldVariation = rateplan.variations || [];\r\n\r\n        const variation = {\r\n          adult_child_offering: payload.ADULT_CHILD_OFFERING,\r\n          adult_nbr: Number(payload.ADULTS_NBR ?? 0),\r\n          amount: (() => {\r\n            const amount = this.validateNumberString((payload.ALLOT_RATE_V ?? 0)?.toString()) ?? 0;\r\n            return amount === 0 ? null : amount;\r\n          })(),\r\n          child_nbr: Number(payload.CHILD_NBR ?? 0),\r\n          amount_per_night: this.validateNumberString((payload.AMOUNT_PER_NIGHT_VAL ?? 0)?.toString() ?? '').toString() ?? '',\r\n          discount_pct: this.validateNumberString((payload.DISCOUNT ?? 0)?.toString()) ?? 0,\r\n          is_lmd: payload.IS_LMD,\r\n          nights_nbr: this.validateNumberString((payload.NIGHTS_NBR ?? 0)?.toString()) ?? 0,\r\n          total_before_discount: this.validateNumberString((payload.TOTAL_BEFORE_DISCOUNT ?? 0)?.toString()) ?? 0,\r\n          is_calculated: payload.IS_CALCULATED,\r\n          MLS_ALERT: payload.MLS_ALERT,\r\n          IS_MLS_VIOLATED: payload.IS_MLS_VIOLATED,\r\n        };\r\n        const variationIndex = oldVariation.findIndex(v => v.adult_child_offering === payload.ADULT_CHILD_OFFERING);\r\n\r\n        if (variationIndex === -1) {\r\n          oldVariation.push(variation);\r\n        } else {\r\n          oldVariation[variationIndex] = variation;\r\n        }\r\n\r\n        oldVariation = oldVariation.filter(\r\n          v => Number(v.adult_nbr) <= Number(booking_store.bookingAvailabilityParams.adult_nbr) && Number(v.child_nbr) <= Number(booking_store.bookingAvailabilityParams.child_nbr),\r\n        );\r\n\r\n        rateplan = { ...rateplan, variations: oldVariation };\r\n        roomType.rateplans[selectedRatePlanIndex] = rateplan;\r\n\r\n        this.roomTypes[selectedRoomTypeIndex] = { ...roomType, inventory: 1 };\r\n      });\r\n      booking_store.resetBooking = true;\r\n      booking_store.roomTypes = [...this.roomTypes];\r\n    } catch (error) {\r\n      console.error('Error processing payloads:', error);\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}