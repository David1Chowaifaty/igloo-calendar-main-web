{"version":3,"names":["PaymentService","getExposedCancelationDueAmount","params","data","axios","post","Object","assign","Error","ExceptionMsg","res","GeneratePaymentCaller","token","onRedirect","onScriptRun","callback_url","generateCheckoutUrl","app_store","property","perma_link","headers","Authorization","type","caller","RequestBookingCancellation","booking_nbr","BOOK_NBR","GetExposedApplicablePolicies","book_date","result","amount","this","processAlicablePolicies","room_type_id","rate_plan_id","policies","guarenteeAmount","_b","_a","find","po","brackets","gross_amount","cancelation","some","b","isBefore","Date","due_on","isSameDay","cancelationAmount","_d","_c","checkFreeCancelationZone","now","isInFreeCancelationZone","getCancelationMessage","applicablePolicies","showCancelation","includeGuarentee","cancelationMessage","t","combined_statement","message","localizedWords","entries","Lcz_Cancelation","guarenteeMessage","Lcz_Guarantee","fetchCancelationMessage","id","roomTypeId","bookingNbr","booking_store","fictus_booking_nbr","nbr","currency_id","currencies","c","code","toLowerCase","userPreferences","language","language_id","property_id","app_data","getBookingPrepaymentAmount","booking","list","setUpBooking","requests","Promise","all","map","l","booked_on","date","currency","ratePlanId","cancelation_message","guarantee_message","cancelation_policies","r","idx","c_data","f","rp_name","rt_name","statement","filter","reduce","prev","curr","rooms","push","rateplan","roomtype","name","findClosestDate","closestDateObj","item","currentDueDate","parseISO"],"sources":["src/services/api/payment.service.ts"],"sourcesContent":["import { Booking } from '@/models/booking.dto';\r\nimport { IBrackets, IExposedApplicablePolicies } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store from '@/stores/booking';\r\nimport localizedWords from '@/stores/localization.store';\r\nimport { generateCheckoutUrl } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { isBefore, isSameDay, parseISO } from 'date-fns';\r\n\r\ntype TExposedApplicablePolicies = { data: IExposedApplicablePolicies[]; amount: number; room_type_id?: number; rate_plan_id?: number };\r\ninterface FetchCancelationMessageWithData {\r\n  data: IExposedApplicablePolicies[];\r\n  showCancelation?: boolean;\r\n}\r\n\r\ninterface FetchCancelationMessageWithoutData {\r\n  id: number;\r\n  roomTypeId: number;\r\n  bookingNbr?: string;\r\n  showCancelation?: boolean;\r\n  data?: null;\r\n}\r\n\r\ntype FetchCancelationMessageParams = FetchCancelationMessageWithData | FetchCancelationMessageWithoutData;\r\nexport type TBookingInfo = { statement: string; rp_name: string; rt_name: string };\r\nexport class PaymentService {\r\n  public async getExposedCancelationDueAmount(params: { booking_nbr: string; currency_id: number }) {\r\n    const { data } = await axios.post(`/Get_Exposed_Cancelation_Due_Amount`, {\r\n      ...params,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    return res;\r\n  }\r\n\r\n  public async GeneratePaymentCaller({\r\n    token,\r\n    params,\r\n    onRedirect,\r\n    onScriptRun,\r\n  }: {\r\n    token: string;\r\n    params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string };\r\n    onRedirect: (url: string) => void;\r\n    onScriptRun: (script: string) => void;\r\n  }) {\r\n    // const resp = await fetch(`https://gateway.igloorooms.com/IRBE/Generate_Payment_Caller`, {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Authorization': token,\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   body: JSON.stringify({ ...params, callback_url: `https://${app_store.property.perma_link}.bookingmystay.com/invoice` }),\r\n    // });\r\n    // const data = await resp.json();\r\n    const { data } = await axios.post(\r\n      '/Generate_Payment_Caller',\r\n      { ...params, callback_url: generateCheckoutUrl(app_store.property.perma_link) },\r\n      { headers: { Authorization: token } },\r\n    );\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    if (res.type === 1) {\r\n      onRedirect(res.caller);\r\n    } else {\r\n      onScriptRun(res.caller);\r\n    }\r\n    return res;\r\n  }\r\n  public async RequestBookingCancellation(booking_nbr: string) {\r\n    const { data } = await axios.post(`/Request_Booking_Cancelation`, { BOOK_NBR: booking_nbr });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async GetExposedApplicablePolicies({\r\n    params,\r\n    book_date,\r\n  }: {\r\n    params: {\r\n      booking_nbr: string;\r\n      property_id: number;\r\n      room_type_id: number;\r\n      rate_plan_id: number;\r\n      currency_id: number;\r\n      language: number | string;\r\n    };\r\n    book_date: Date;\r\n  }): Promise<TExposedApplicablePolicies> {\r\n    const { data } = await axios.post(`/Get_Exposed_Applicable_Policies`, params);\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const result = data['My_Result'] as IExposedApplicablePolicies[];\r\n    return { data: result, amount: this.processAlicablePolicies(result, book_date).amount, room_type_id: params.room_type_id, rate_plan_id: params.rate_plan_id };\r\n  }\r\n  public processAlicablePolicies(policies: IExposedApplicablePolicies[], book_date: Date) {\r\n    const guarenteeAmount = policies.find(po => po.type === 'guarantee')?.brackets[0]?.gross_amount || 0;\r\n    let cancelation = policies.find(\r\n      po => po.type === 'cancelation' && po?.brackets?.some(b => isBefore(new Date(b.due_on), book_date) || isSameDay(new Date(b.due_on), book_date)),\r\n    );\r\n    if (cancelation) {\r\n      const cancelationAmount = cancelation.brackets.find(b => isBefore(new Date(b.due_on), book_date) || isSameDay(new Date(b.due_on), book_date))?.gross_amount ?? null;\r\n      return { amount: cancelationAmount > guarenteeAmount ? cancelationAmount : guarenteeAmount };\r\n    }\r\n    return { amount: guarenteeAmount };\r\n  }\r\n\r\n  public checkFreeCancelationZone(policies: IExposedApplicablePolicies[]) {\r\n    const now = new Date();\r\n    let isInFreeCancelationZone = false;\r\n    let cancelation = policies?.find(po => po.type === 'cancelation' && po?.brackets?.some(b => isBefore(new Date(b.due_on), now) || isSameDay(new Date(b.due_on), now)));\r\n    if (!cancelation) {\r\n      isInFreeCancelationZone = true;\r\n    }\r\n    return isInFreeCancelationZone;\r\n  }\r\n\r\n  public getCancelationMessage(applicablePolicies: IExposedApplicablePolicies[] | null, showCancelation = false, includeGuarentee = true) {\r\n    const cancelationMessage = applicablePolicies.find(t => t.type === 'cancelation')?.combined_statement;\r\n    let message = cancelationMessage ? `${showCancelation ? `<b><u>${localizedWords.entries.Lcz_Cancelation}: </u></b>` : ''}${cancelationMessage}<br/>` : '<span></span>';\r\n\r\n    if (includeGuarentee) {\r\n      const guarenteeMessage = applicablePolicies.find(t => t.type === 'guarantee')?.combined_statement;\r\n      if (guarenteeMessage) {\r\n        message += `${showCancelation ? `<b><u>${localizedWords.entries.Lcz_Guarantee}: </u></b>` : ''}${guarenteeMessage}<br/>`;\r\n      }\r\n    }\r\n\r\n    return {\r\n      message,\r\n      data: applicablePolicies,\r\n    };\r\n  }\r\n\r\n  public async fetchCancelationMessage(params: FetchCancelationMessageParams) {\r\n    let applicablePolicies: IExposedApplicablePolicies[] | null;\r\n    if ('data' in params && params.data) {\r\n      applicablePolicies = params.data;\r\n    } else {\r\n      const { id, roomTypeId, bookingNbr = booking_store.fictus_booking_nbr?.nbr } = params as FetchCancelationMessageWithoutData;\r\n      const result = await this.GetExposedApplicablePolicies({\r\n        book_date: new Date(),\r\n        params: {\r\n          booking_nbr: bookingNbr,\r\n          currency_id: app_store.currencies.find(c => c.code.toLowerCase() === (app_store.userPreferences.currency_id.toLowerCase() || 'usd')).id,\r\n          language: app_store.userPreferences.language_id,\r\n          property_id: app_store.app_data.property_id,\r\n          rate_plan_id: id,\r\n          room_type_id: roomTypeId,\r\n        },\r\n      });\r\n      applicablePolicies = result.data;\r\n    }\r\n    const message = applicablePolicies.find(t => t.type === 'cancelation')?.combined_statement;\r\n    return { message: message ? `${params.showCancelation ? '<b><u>Cancellation: </u></b>' : ''}${message}<br/>` : '<span></span>', data: applicablePolicies };\r\n  }\r\n  public async getBookingPrepaymentAmount(booking: Booking) {\r\n    const list = this.setUpBooking(booking);\r\n    let requests = await Promise.all(\r\n      list.map(l =>\r\n        this.GetExposedApplicablePolicies({\r\n          book_date: new Date(booking.booked_on.date),\r\n          params: {\r\n            booking_nbr: l.booking_nbr,\r\n            currency_id: booking.currency.id,\r\n            language: app_store.userPreferences.language_id,\r\n            rate_plan_id: l.ratePlanId,\r\n            room_type_id: l.roomTypeId,\r\n            property_id: app_store.property.id,\r\n          },\r\n        }),\r\n      ),\r\n    );\r\n    const cancelation_message = requests[0].data.find(t => t.type === 'cancelation')?.combined_statement;\r\n    const guarantee_message = requests[0].data.find(t => t.type === 'guarantee')?.combined_statement;\r\n    const cancelation_policies = requests\r\n      .map((r, idx) => {\r\n        const c_data = r.data.find(f => f.type === 'cancelation');\r\n        const { rp_name, rt_name } = list[idx];\r\n        if (c_data) {\r\n          return { statement: c_data.combined_statement, rp_name, rt_name };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(f => f !== null);\r\n    return { amount: requests.reduce((prev, curr) => prev + curr.amount, 0), cancelation_message, guarantee_message, cancelation_policies };\r\n  }\r\n  private setUpBooking(booking: Booking) {\r\n    let list: { booking_nbr: string; ratePlanId: number; roomTypeId: number; rt_name: string; rp_name: string }[] = [];\r\n    booking.rooms.map(r =>\r\n      list.push({ booking_nbr: booking.booking_nbr, ratePlanId: r.rateplan.id, roomTypeId: r.roomtype.id, rp_name: r.rateplan.name, rt_name: r.roomtype.name }),\r\n    );\r\n    return list;\r\n  }\r\n  public findClosestDate(data: IBrackets[]): IBrackets {\r\n    let closestDateObj: IBrackets | null = null;\r\n    for (const item of data) {\r\n      const currentDueDate = parseISO(item.due_on);\r\n      if (!closestDateObj || isBefore(currentDueDate, parseISO(closestDateObj.due_on))) {\r\n        closestDateObj = item;\r\n      }\r\n    }\r\n    return closestDateObj;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}