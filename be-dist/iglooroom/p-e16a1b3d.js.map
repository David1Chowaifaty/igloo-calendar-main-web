{"version":3,"names":["Token","constructor","this","baseUrl","axios","defaults","baseURL","initialize","isInterceptorAdded","interceptors","request","use","config","token","MissingTokenError","headers","Authorization","setToken","Error","message","super","name","PaymentService","getExposedCancelationDueAmount","params","data","post","Object","assign","ExceptionMsg","res","GeneratePaymentCaller","onRedirect","onScriptRun","callback_url","app_store","property","perma_link","type","caller","RequestBookingCancelation","booking_nbr","BOOK_NBR","GetExposedApplicablePolicies","book_date","result","amount","processAlicablePolicies","room_type_id","rate_plan_id","policies","isInFreeCancelationZone","guarenteeAmount","_b","_a","find","po","brackets","gross_amount","cancelation","some","b","isBefore","Date","due_on","cancelationAmount","_d","_c","fetchCancelationMessage","applicablePolicies","console","log","id","roomTypeId","bookingNbr","booking_store","fictus_booking_nbr","nbr","currency_id","currencies","c","code","toLowerCase","userPreferences","language","language_id","property_id","app_data","t","combined_statement","showCancelation","getBookingPrepaymentAmount","booking","list","setUpBooking","requests","Promise","all","map","l","booked_on","date","currency","ratePlanId","cancelation_message","guarantee_message","cancelation_policies","r","idx","c_data","f","rp_name","rt_name","statement","filter","reduce","prev","curr","rooms","push","rateplan","roomtype","findClosestDate","closestDateObj","item","currentDueDate","parseISO"],"sources":["src/models/Token.ts","src/services/api/payment.service.ts"],"sourcesContent":["import axios from 'axios';\r\nclass Token {\r\n  private baseUrl = 'https://gateway.igloorooms.com/IRBE';\r\n  private static token: string | null = '';\r\n\r\n  private static isInterceptorAdded = false;\r\n  constructor() {\r\n    axios.defaults.baseURL = this.baseUrl;\r\n  }\r\n  private initialize() {\r\n    if (Token.isInterceptorAdded) {\r\n      return;\r\n    }\r\n\r\n    axios.interceptors.request.use(config => {\r\n      if (!Token.token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      config.headers.Authorization = Token.token;\r\n      // config.params = config.params || {};\r\n      // config.params.Ticket = Token.token;\r\n      return config;\r\n    });\r\n\r\n    Token.isInterceptorAdded = true;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    if (token === Token.token) {\r\n      return;\r\n    }\r\n    Token.token = token;\r\n\r\n    this.initialize();\r\n  }\r\n}\r\nexport default Token;\r\nexport class MissingTokenError extends Error {\r\n  constructor(message = 'Missing token!!') {\r\n    super(message);\r\n    this.name = 'MissingTokenError';\r\n  }\r\n}\r\n","import { Booking } from '@/models/booking.dto';\r\nimport { IBrackets, IExposedApplicablePolicies } from '@/models/property';\r\nimport { MissingTokenError } from '@/models/Token';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store from '@/stores/booking';\r\nimport axios from 'axios';\r\nimport { isBefore, parseISO } from 'date-fns';\r\n\r\ntype TExposedApplicablePolicies = { data: IExposedApplicablePolicies[]; amount: number; room_type_id?: number; rate_plan_id?: number };\r\ninterface FetchCancelationMessageWithData {\r\n  data: IExposedApplicablePolicies[];\r\n  showCancelation?: boolean;\r\n}\r\n\r\ninterface FetchCancelationMessageWithoutData {\r\n  id: number;\r\n  roomTypeId: number;\r\n  bookingNbr?: string;\r\n  showCancelation?: boolean;\r\n  data?: null;\r\n}\r\n\r\ntype FetchCancelationMessageParams = FetchCancelationMessageWithData | FetchCancelationMessageWithoutData;\r\nexport type TBookingInfo = { statement: string; rp_name: string; rt_name: string };\r\nexport class PaymentService {\r\n  public async getExposedCancelationDueAmount(params: { booking_nbr: string; currency_id: number }) {\r\n    const { data } = await axios.post(`/Get_Exposed_Cancelation_Due_Amount`, {\r\n      ...params,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    return res;\r\n  }\r\n\r\n  public async GeneratePaymentCaller({\r\n    token,\r\n    params,\r\n    onRedirect,\r\n    onScriptRun,\r\n  }: {\r\n    token: string;\r\n    params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string };\r\n    onRedirect: (url: string) => void;\r\n    onScriptRun: (script: string) => void;\r\n  }) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Generate_Payment_Caller`, {\r\n      ...params,\r\n      callback_url: `https://${app_store.property.perma_link}.bookingmystay.com/invoice`,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    if (res.type === 1) {\r\n      onRedirect(res.caller);\r\n    } else {\r\n      onScriptRun(res.caller);\r\n    }\r\n    return res;\r\n  }\r\n  public async RequestBookingCancelation(booking_nbr: string) {\r\n    const { data } = await axios.post(`/Request_Booking_Cancelation`, { BOOK_NBR: booking_nbr });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async GetExposedApplicablePolicies({\r\n    params,\r\n    book_date,\r\n  }: {\r\n    params: {\r\n      booking_nbr: string;\r\n      property_id: number;\r\n      room_type_id: number;\r\n      rate_plan_id: number;\r\n      currency_id: number;\r\n      language: number | string;\r\n    };\r\n    book_date: Date;\r\n  }): Promise<TExposedApplicablePolicies> {\r\n    const { data } = await axios.post(`/Get_Exposed_Applicable_Policies`, params);\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const result = data['My_Result'] as IExposedApplicablePolicies[];\r\n    return { data: result, amount: this.processAlicablePolicies(result, book_date).amount, room_type_id: params.room_type_id, rate_plan_id: params.rate_plan_id };\r\n  }\r\n  public processAlicablePolicies(policies: IExposedApplicablePolicies[], book_date: Date) {\r\n    let isInFreeCancelationZone = false;\r\n    const guarenteeAmount = policies.find(po => po.type === 'guarantee')?.brackets[0]?.gross_amount || 0;\r\n    let cancelation = policies.find(po => po.type === 'cancelation' && po?.brackets?.some(b => isBefore(book_date, new Date(b.due_on)), book_date));\r\n    if (cancelation) {\r\n      isInFreeCancelationZone = true;\r\n      const cancelationAmount = cancelation.brackets.find(b => isBefore(new Date(b.due_on), book_date))?.gross_amount ?? null;\r\n      return { amount: cancelationAmount > guarenteeAmount ? cancelationAmount : guarenteeAmount, isInFreeCancelationZone };\r\n    }\r\n    return { amount: guarenteeAmount, isInFreeCancelationZone };\r\n  }\r\n  public async fetchCancelationMessage(params: FetchCancelationMessageParams) {\r\n    let applicablePolicies: IExposedApplicablePolicies[] | null;\r\n    if ('data' in params && params.data) {\r\n      applicablePolicies = params.data;\r\n    } else {\r\n      console.log('fetching cancelation message');\r\n      const { id, roomTypeId, bookingNbr = booking_store.fictus_booking_nbr?.nbr } = params as FetchCancelationMessageWithoutData;\r\n      const result = await this.GetExposedApplicablePolicies({\r\n        book_date: new Date(),\r\n        params: {\r\n          booking_nbr: bookingNbr,\r\n          currency_id: app_store.currencies.find(c => c.code.toLowerCase() === (app_store.userPreferences.currency_id.toLowerCase() || 'usd')).id,\r\n          language: app_store.userPreferences.language_id,\r\n          property_id: app_store.app_data.property_id,\r\n          rate_plan_id: id,\r\n          room_type_id: roomTypeId,\r\n        },\r\n      });\r\n      applicablePolicies = result.data;\r\n    }\r\n    const message = applicablePolicies.find(t => t.type === 'cancelation')?.combined_statement;\r\n    return { message: message ? `${params.showCancelation ? '<b><u>Cancellation: </u></b>' : ''}${message}<br/>` : '<span></span>', data: applicablePolicies };\r\n  }\r\n  public async getBookingPrepaymentAmount(booking: Booking) {\r\n    const list = this.setUpBooking(booking);\r\n    let requests = await Promise.all(\r\n      list.map(l =>\r\n        this.GetExposedApplicablePolicies({\r\n          book_date: new Date(booking.booked_on.date),\r\n          params: {\r\n            booking_nbr: l.booking_nbr,\r\n            currency_id: booking.currency.id,\r\n            language: app_store.userPreferences.language_id,\r\n            rate_plan_id: l.ratePlanId,\r\n            room_type_id: l.roomTypeId,\r\n            property_id: app_store.property.id,\r\n          },\r\n        }),\r\n      ),\r\n    );\r\n    const cancelation_message = requests[0].data.find(t => t.type === 'cancelation')?.combined_statement;\r\n    const guarantee_message = requests[0].data.find(t => t.type === 'guarantee')?.combined_statement;\r\n    const cancelation_policies = requests\r\n      .map((r, idx) => {\r\n        const c_data = r.data.find(f => f.type === 'cancelation');\r\n        const { rp_name, rt_name } = list[idx];\r\n        if (c_data) {\r\n          return { statement: c_data.combined_statement, rp_name, rt_name };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(f => f !== null);\r\n    return { amount: requests.reduce((prev, curr) => prev + curr.amount, 0), cancelation_message, guarantee_message, cancelation_policies };\r\n  }\r\n  private setUpBooking(booking: Booking) {\r\n    let list: { booking_nbr: string; ratePlanId: number; roomTypeId: number; rt_name: string; rp_name: string }[] = [];\r\n    booking.rooms.map(r =>\r\n      list.push({ booking_nbr: booking.booking_nbr, ratePlanId: r.rateplan.id, roomTypeId: r.roomtype.id, rp_name: r.rateplan.name, rt_name: r.roomtype.name }),\r\n    );\r\n    return list;\r\n  }\r\n  public findClosestDate(data: IBrackets[]): IBrackets {\r\n    let closestDateObj: IBrackets | null = null;\r\n    for (const item of data) {\r\n      const currentDueDate = parseISO(item.due_on);\r\n      if (!closestDateObj || isBefore(currentDueDate, parseISO(closestDateObj.due_on))) {\r\n        closestDateObj = item;\r\n      }\r\n    }\r\n    return closestDateObj;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}