{"version":3,"names":["isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","this","value","slice","startChangePos","oldValue","oldSelection","start","insertedCount","cursorPos","end","Math","min","inserted","substr","removedCount","max","removed","head","substring","tail","removeDirection","IMask","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","undefined","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","selectionStart","_unsafeSelectionStart","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","KEY_Z","KEY_Y","HTMLMaskElement","input","super","_onKeydown","bind","_onInput","_onBeforeinput","_onCompositionEnd","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","bindEvents","handlers","addEventListener","drop","click","focus","commit","_handlers","e","redo","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","undo","isComposing","selectionChange","inputType","unbindEvents","removeEventListener","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","InputHistory","states","currentIndex","currentState","isEmpty","push","state","MAX_LENGTH","shift","go","steps","clear","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_rawInputValue","history","_saveSelection","_onChange","_onDrop","_onFocus","_onClick","_onUndo","_onRedo","alignCursor","alignCursorFriendly","_bindEvents","maskEquals","_this$masked","updateOptions","unmaskedValue","updateControl","rawInputValue","typedValue","val","typedValueEquals","displayValue","_unbindEvents","_fireEvent","ev","listeners","forEach","l","_cursorChanging","_changingCursorPos","pos","_selection","updateValue","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","restOpts","updateMask","updateOpts","optionsIsChanged","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","on","handler","off","hIndex","indexOf","splice","details","oldRawValue","offset","raw","doCommit","stopPropagation","_applyHistoryState","destroy","ChangeDetails","normalize","prep","rawInserted","tailShift","skip","aggregate","consumed","Boolean","equals","ContinuousTailDetails","from","stop","extend","appendTo","append","_appendPlaceholder","unshift","beforePos","shiftChar","_update","DEFAULTS","_initialized","withValueRefresh","reset","resolve","flags","parse","format","extractInput","isFilled","totalInputPositions","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","checkTail","consistentState","doPrepareChar","autofix","noFixState","fixDetails","pad","chDetails","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","_beforeTailState","doPrepare","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","runIsolated","_isolated","skipInvalid","prepare","prepareChar","validate","parent","deleteCount","tailPos","eagerRemove","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","isFixed","pushLeftBeforeInput","pushLeftBeforeRequired","isOptional","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","PatternFixedDefinition","isUnmasking","_isRawInput","minPos","maxPos","appendEager","char","isResolved","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","expose","repeat","bOpts","blockOpts","maskedBlock","RepeatBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","patternOpts","fromStr","padStart","toStr","sameCharsCount","boundaries","minstr","maxstr","placeholder","num","match","padEnd","firstNonZero","padLength","split","extractPatternOptions","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","date","isDateExist","day","month","year","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_autofix","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matches","matchValue","mch","estr","istr","_MaskedNumber","_updateRegExps","allowNegative","mid","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","allowPositive","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","number","accepted","isNaN","fixedNum","UNMASKED_RADIX","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","pipe","repeatFrom","Infinity","repeatTo","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","_allocateBlock","_this$_mapPosToBlock$","allocated","_this$_blocks$bi","_trimEmptyTail","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","globalThis"],"sources":["node_modules/imask/esm/core/utils.js","node_modules/imask/esm/core/action-details.js","node_modules/imask/esm/core/holder.js","node_modules/imask/esm/masked/factory.js","node_modules/imask/esm/controls/mask-element.js","node_modules/imask/esm/controls/html-mask-element.js","node_modules/imask/esm/controls/html-input-mask-element.js","node_modules/imask/esm/controls/html-contenteditable-mask-element.js","node_modules/imask/esm/controls/input-history.js","node_modules/imask/esm/controls/input.js","node_modules/imask/esm/core/change-details.js","node_modules/imask/esm/core/continuous-tail-details.js","node_modules/imask/esm/masked/base.js","node_modules/imask/esm/masked/pattern/chunk-tail-details.js","node_modules/imask/esm/masked/pattern/cursor.js","node_modules/imask/esm/masked/pattern/fixed-definition.js","node_modules/imask/esm/masked/pattern/input-definition.js","node_modules/imask/esm/masked/regexp.js","node_modules/imask/esm/masked/pattern.js","node_modules/imask/esm/masked/range.js","node_modules/imask/esm/masked/date.js","node_modules/imask/esm/masked/dynamic.js","node_modules/imask/esm/masked/enum.js","node_modules/imask/esm/masked/function.js","node_modules/imask/esm/masked/number.js","node_modules/imask/esm/masked/pipe.js","node_modules/imask/esm/masked/repeat.js","node_modules/imask/esm/index.js"],"sourcesContent":["/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: 'd{.}`m{.}`Y',\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n"],"mappings":"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"}