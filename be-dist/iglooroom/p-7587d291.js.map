{"version":3,"names":["CommonService","getCurrencies","data","axios","post","app_store","currencies","getExposedLanguages","languages","My_Result","getCountries","language","ExceptionMsg","Error","getUserDefaultCountry","params","Object","assign","IP","error","console","getExposedCountryByIp","lang","userDefaultCountry","getBEToken","getExposedLanguage","code","userPreferences","language_id","sections","entries","this","transformArrayToObject","localizedWords","direction","checkUserAuthState","anchor","JSON","parse","sessionStorage","getItem","login","is_signed_in","object","d","description"],"sources":["src/services/api/common.service.ts"],"sourcesContent":["import axios from 'axios';\r\nimport app_store from '@/stores/app.store';\r\nimport localizedWords from '@/stores/localization.store';\r\n\r\nexport class CommonService {\r\n  public async getCurrencies() {\r\n    const { data } = await axios.post(`/Get_Exposed_Currencies`);\r\n    app_store.currencies = [...data['My_Result']];\r\n    return data['My_Result'];\r\n  }\r\n  public async getExposedLanguages() {\r\n    const { data } = await axios.post(`/Get_Exposed_Languages`);\r\n    app_store.languages = [...data.My_Result];\r\n    return data['My_Result'];\r\n  }\r\n  public async getCountries(language: string) {\r\n    const { data } = await axios.post(`/Get_Exposed_Countries`, {\r\n      language,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data.My_Result;\r\n  }\r\n  public async getUserDefaultCountry(params: { id: string; aname: string; perma_link: string }) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Country_By_IP`, {\r\n        IP: '',\r\n        ...params,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedCountryByIp(params: { id: string; aname: string; perma_link: string }) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Country_By_IP`, {\r\n        IP: '',\r\n        lang: 'en',\r\n        ...params,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      app_store.userDefaultCountry = data['My_Result'];\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getBEToken() {\r\n    try {\r\n      const { data } = await axios.post(`/Get_BE_Token`, {});\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedLanguage() {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Language`, { code: app_store.userPreferences.language_id, sections: ['_BE_FRONT'] });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      let entries = this.transformArrayToObject(data.My_Result.entries);\r\n      localizedWords.entries = { ...localizedWords.entries, ...entries };\r\n      localizedWords.direction = data.My_Result.direction;\r\n      return { entries, direction: data.My_Result.direction };\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public checkUserAuthState() {\r\n    const anchor = JSON.parse(sessionStorage.getItem('anchor'));\r\n    if (anchor) {\r\n      if (anchor.login) {\r\n        app_store.is_signed_in = true;\r\n      }\r\n      return anchor.login || null;\r\n    }\r\n    return null;\r\n  }\r\n  private transformArrayToObject(data: any) {\r\n    let object: any = {};\r\n    for (const d of data) {\r\n      object[d.code] = `${d.description}`;\r\n    }\r\n    return object;\r\n  }\r\n}\r\n"],"mappings":"qFAIaA,EACJ,mBAAMC,GACX,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,2BAClCC,EAAUC,WAAa,IAAIJ,EAAK,cAChC,OAAOA,EAAK,Y,CAEP,yBAAMK,GACX,MAAML,KAAEA,SAAeC,EAAMC,KAAK,0BAClCC,EAAUG,UAAY,IAAIN,EAAKO,WAC/B,OAAOP,EAAK,Y,CAEP,kBAAMQ,CAAaC,GACxB,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,yBAA0B,CAC1DO,aAEF,GAAIT,EAAKU,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMX,EAAKU,a,CAEvB,OAAOV,EAAKO,S,CAEP,2BAAMK,CAAsBC,GACjC,IACE,MAAMb,KAAEA,SAAeC,EAAMC,KAAK,qBAAoBY,OAAAC,OAAA,CACpDC,GAAI,IACDH,IAEL,GAAIb,EAAKU,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMX,EAAKU,a,CAEvB,OAAOV,EAAK,Y,CACZ,MAAOiB,GACPC,QAAQD,MAAMA,GACd,MAAM,IAAIN,MAAMM,E,EAGb,2BAAME,CAAsBN,GACjC,IACE,MAAMb,KAAEA,SAAeC,EAAMC,KAAK,6BAA4BY,OAAAC,OAAA,CAC5DC,GAAI,GACJI,KAAM,MACHP,IAEL,GAAIb,EAAKU,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMX,EAAKU,a,CAEvBP,EAAUkB,mBAAqBrB,EAAK,aACpC,OAAOA,EAAK,Y,CACZ,MAAOiB,GACPC,QAAQD,MAAMA,GACd,MAAM,IAAIN,MAAMM,E,EAGb,gBAAMK,GACX,IACE,MAAMtB,KAAEA,SAAeC,EAAMC,KAAK,gBAAiB,IACnD,GAAIF,EAAKU,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMX,EAAKU,a,CAEvB,OAAOV,EAAK,Y,CACZ,MAAOiB,GACPC,QAAQD,MAAMA,GACd,MAAM,IAAIN,MAAMM,E,EAGb,wBAAMM,GACX,IACE,MAAMvB,KAAEA,SAAeC,EAAMC,KAAK,wBAAyB,CAAEsB,KAAMrB,EAAUsB,gBAAgBC,YAAaC,SAAU,CAAC,eACrH,GAAI3B,EAAKU,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMX,EAAKU,a,CAEvB,IAAIkB,EAAUC,KAAKC,uBAAuB9B,EAAKO,UAAUqB,SACzDG,EAAeH,QAAOd,OAAAC,OAAAD,OAAAC,OAAA,GAAQgB,EAAeH,SAAYA,GACzDG,EAAeC,UAAYhC,EAAKO,UAAUyB,UAC1C,MAAO,CAAEJ,UAASI,UAAWhC,EAAKO,UAAUyB,U,CAC5C,MAAOf,GACPC,QAAQD,MAAMA,GACd,MAAM,IAAIN,MAAMM,E,EAGb,kBAAAgB,GACL,MAAMC,EAASC,KAAKC,MAAMC,eAAeC,QAAQ,WACjD,GAAIJ,EAAQ,CACV,GAAIA,EAAOK,MAAO,CAChBpC,EAAUqC,aAAe,I,CAE3B,OAAON,EAAOK,OAAS,I,CAEzB,OAAO,I,CAED,sBAAAT,CAAuB9B,GAC7B,IAAIyC,EAAc,GAClB,IAAK,MAAMC,KAAK1C,EAAM,CACpByC,EAAOC,EAAElB,MAAQ,GAAGkB,EAAEC,a,CAExB,OAAOF,C","ignoreList":[]}