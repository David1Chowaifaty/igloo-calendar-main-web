{"version":3,"names":["PropertyHelpers","constructor","this","paymentService","PaymentService","validateModeProps","props","mode","MODE_MODIFY_RT","rp_id","rt_id","Error","convertPickup","pickup","res","hour","minute","arrival_time","split","booking_nbr","is_remove","currency","date","arrival_date","details","flight_details","Number","nbr_of_units","number_of_vehicles","selected_option","total","due_upon_booking","updateBookingStore","data","roomtypes","booking_store","roomTypes","newRoomtypes","My_Result","MODE_DEFAULT","updateInventory","sortRoomTypes","adult_nbr","params","child_nbr","updateRoomTypeRatePlans","tax_statement","message","enableBooking","error","console","validateToken","token","MissingTokenError","collectRoomTypeIds","collectRatePlanIds","generateDays","from_date","to_date","amount","endDate","currentDate","days","push","format","cost","addDays","extractFirstNameAndLastName","index","guestName","names","first_name","last_name","fetchAvailabilityData","roomtypeIds","rateplanIds","response","axios","post","Object","assign","identifier","room_type_ids","rate_plan_ids","skip_getting_assignable_units","is_specific_variation","is_backend","result","ExceptionMsg","modifyBookingStore","nbr","validateFreeCancelationZone","setToken","log","app_store","currencies","find","c","_a","code","toLowerCase","userPreferences","currency_id","GetExposedApplicablePolicies","book_date","Date","id","language","language_id","property_id","app_data","rate_plan_id","room_type_id","isInFreeCancelationZone","processAlicablePolicies","newRoomtypesMap","Map","map","rt","reduce","updatedRoomtypes","newRoomtype","get","updatedRoomtype","inventory","pre_payment_amount","rateplans","updatedRatePlans","rp","newRatePlan","newRP","is_active","is_booking_engine_enabled","variations","selected_variation","userCriteria","sort","a","b","zeroCalculatedA","some","plan","variation","is_calculated","zeroCalculatedB","matchA","matchB","maxVariationA","Math","max","flatMap","maxVariationB","selectedRoomTypeIdx","findIndex","selectednewRoomTypeIdx","newVariation","v","adult_child_offering","adultChildConstraint","Colors","hexToRgb","hex","replace","r","parseInt","substring","g","rgbToHsl","rgb","cmin","min","cmax","delta","h","s","l","round","abs","toFixed","hexToHSL","generateColorShades","baseHex","baseL","shades","i","initTheme","property","space_theme","root","document","documentElement","button_bg_color","shade_number","forEach","shade","style","setProperty","button_border_radius","PropertyService","Token","propertyHelpers","colors","getExposedProperty","getToken","include_sales_rate_plans","bookingAvailabilityParams","agent","tags","key","value","injectHTML","fetchedBooking","aname","perma_link","getExposedBookingAvailability","getExposedBooking","withExtras","extras","fetchSetupEntries","setup_entries","TBL_NAMES","setupEntries","arrivalTime","filter","e","TBL_NAME","ratePricingMode","bedPreferenceType","updateUserFormData","CODE_NAME","filterRooms","rooms","values","ratePlanSelections","reserved","Array","_","roomtype","rateplan","ratePlan","unit","smoking_option","checkoutSmokingSelection","occupancy","checkoutVariations","children_nbr","infant_nbr","bed_preference","is_bed_configuration_enabled","checkoutBedSelection","notes","getDateDifference","guest","email","country_id","city","mobile","address","dob","subscribe_to_news_letter","cci","includes","checkout_store","payment","cardNumber","holder_name","cardHolderName","expiry_month","expiry_year","cvc","editExposedGuest","book_nbr","bookUser","prePaymentAmount","calculateTotalCost","userFormData","firstName","lastName","mobile_number","country_phone_prefix","body","assign_units","check_in","is_pms","is_direct","is_in_loyalty_mode","loyalty","promo_key","coupon","booking","remark","source","referrer_site","affiliate","window","location","href","arrival","pickup_info","getExposedGuest","is_signed_in"],"sources":["src/services/app/property-helpers.service.ts","src/services/app/colors.service.ts","src/services/api/property.service.ts"],"sourcesContent":["import { DataStructure } from '@/models/commun';\r\nimport { TPickupFormData } from '@/models/pickup';\r\nimport { RoomType } from '@/models/property';\r\nimport { MissingTokenError } from '@/models/Token';\r\nimport booking_store, { modifyBookingStore } from '@/stores/booking';\r\nimport axios from 'axios';\r\nimport { addDays, format } from 'date-fns';\r\nimport { PaymentService } from '../api/payment.service';\r\nimport app_store from '@/stores/app.store';\r\n\r\nexport class PropertyHelpers {\r\n  private static readonly MODE_MODIFY_RT = 'modify_rt';\r\n  private static readonly MODE_DEFAULT = 'default';\r\n  private paymentService = new PaymentService();\r\n  public validateModeProps(props: any) {\r\n    if (props.mode === PropertyHelpers.MODE_MODIFY_RT && (!props.rp_id || !props.rt_id)) {\r\n      throw new Error('Missing property: rp_id or rt_id is required in modify_rt mode');\r\n    }\r\n  }\r\n  public convertPickup(pickup: TPickupFormData) {\r\n    let res: any = {};\r\n    const [hour, minute] = pickup.arrival_time.split(':');\r\n    res = {\r\n      booking_nbr: null,\r\n      is_remove: false,\r\n      currency: pickup.currency,\r\n      date: pickup.arrival_date,\r\n      details: pickup.flight_details || null,\r\n      hour: Number(hour),\r\n      minute: Number(minute),\r\n      nbr_of_units: pickup.number_of_vehicles,\r\n      selected_option: pickup.selected_option,\r\n      total: Number(pickup.due_upon_booking),\r\n    };\r\n    return res;\r\n  }\r\n  public updateBookingStore(data: any, props: any) {\r\n    try {\r\n      let roomtypes = [...booking_store.roomTypes];\r\n      const newRoomtypes = data.My_Result.roomtypes;\r\n      if (props.mode === PropertyHelpers.MODE_DEFAULT) {\r\n        roomtypes = this.updateInventory(roomtypes, newRoomtypes);\r\n        roomtypes = this.sortRoomTypes(roomtypes, {\r\n          adult_nbr: props.params.adult_nbr,\r\n          child_nbr: props.params.child_nbr,\r\n        });\r\n      } else {\r\n        roomtypes = this.updateRoomTypeRatePlans(roomtypes, newRoomtypes, props);\r\n      }\r\n      booking_store.roomTypes = roomtypes;\r\n      booking_store.tax_statement = { message: data.My_Result.tax_statement };\r\n      booking_store.enableBooking = true;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  public validateToken(token: string | null) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n  }\r\n\r\n  public collectRoomTypeIds(props: any): number[] {\r\n    return props.rt_id ? [props.rt_id] : [];\r\n  }\r\n\r\n  public collectRatePlanIds(props: any): number[] {\r\n    return props.rp_id ? [props.rp_id] : [];\r\n  }\r\n  public generateDays(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = to_date;\r\n    let currentDate = from_date;\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate < endDate) {\r\n      days.push({\r\n        date: format(currentDate, 'yyyy-MM-dd'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate = addDays(currentDate, 1);\r\n    }\r\n    return days;\r\n  }\r\n\r\n  public extractFirstNameAndLastName(index: number, guestName: string[]) {\r\n    const names = guestName[index].split(' ');\r\n    return { first_name: names[0] || null, last_name: names[1] || null };\r\n  }\r\n  public async fetchAvailabilityData(token: string, props: any, roomtypeIds: number[], rateplanIds: number[]): Promise<any> {\r\n    const response = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, {\r\n      ...props.params,\r\n      identifier: props.identifier,\r\n      room_type_ids: roomtypeIds,\r\n      rate_plan_ids: rateplanIds,\r\n      skip_getting_assignable_units: true,\r\n      is_specific_variation: true,\r\n      is_backend: false,\r\n    });\r\n    const result = response.data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    if (result.My_Result.booking_nbr) {\r\n      modifyBookingStore('fictus_booking_nbr', {\r\n        nbr: result.My_Result.booking_nbr,\r\n      });\r\n      this.validateFreeCancelationZone(token, result.My_Result.booking_nbr);\r\n    }\r\n    return result;\r\n  }\r\n  private async validateFreeCancelationZone(token: string, booking_nbr: string) {\r\n    this.paymentService.setToken(token);\r\n    console.log(app_store.currencies.find(c => c.code.toLowerCase() === app_store.userPreferences.currency_id?.toLowerCase()));\r\n    const result = await this.paymentService.GetExposedApplicablePolicies({\r\n      book_date: new Date(),\r\n      params: {\r\n        booking_nbr,\r\n        currency_id: app_store.currencies.find(c => c.code.toLowerCase() === (app_store.userPreferences.currency_id.toLowerCase() || 'usd')).id,\r\n        language: app_store.userPreferences.language_id,\r\n        property_id: app_store.app_data.property_id,\r\n        rate_plan_id: 0,\r\n        room_type_id: 0,\r\n      },\r\n      token,\r\n    });\r\n    console.log('applicable policies', result);\r\n    if (!result) {\r\n      booking_store.isInFreeCancelationZone = true;\r\n    }\r\n    if (result) {\r\n      const { isInFreeCancelationZone } = this.paymentService.processAlicablePolicies(result.data, new Date());\r\n      console.log(result, isInFreeCancelationZone);\r\n      booking_store.isInFreeCancelationZone = isInFreeCancelationZone;\r\n    }\r\n  }\r\n  private updateInventory(roomtypes: RoomType[], newRoomtypes: RoomType[]): RoomType[] {\r\n    const newRoomtypesMap = new Map(newRoomtypes.map(rt => [rt.id, rt]));\r\n    return roomtypes.reduce((updatedRoomtypes, rt) => {\r\n      const newRoomtype = newRoomtypesMap.get(rt.id);\r\n      if (!newRoomtype) {\r\n        return updatedRoomtypes;\r\n      }\r\n      const updatedRoomtype = {\r\n        ...rt,\r\n        inventory: newRoomtype.inventory,\r\n        pre_payment_amount: newRoomtype.pre_payment_amount,\r\n        rateplans: rt.rateplans.reduce((updatedRatePlans, rp) => {\r\n          const newRatePlan = newRoomtype.rateplans.find(newRP => newRP.id === rp.id);\r\n          if (!newRatePlan || !newRatePlan.is_active || !newRatePlan.is_booking_engine_enabled) {\r\n            return updatedRatePlans;\r\n          }\r\n          updatedRatePlans.push({\r\n            ...newRatePlan,\r\n            variations: rp.variations,\r\n            // variations: rp.variations.map(v => {\r\n            //   if (!newRatePlan.variations) {\r\n            //     return v;\r\n            //   }\r\n            //   if (v.adult_child_offering === newRatePlan.variations[0].adult_child_offering) {\r\n            //     return newRatePlan.variations[0];\r\n            //   }\r\n            //   return v;\r\n            // }),\r\n            selected_variation: newRatePlan.variations ? newRatePlan.variations[0] : null,\r\n            // selected_variation: newRatePlan.variations ? rp.variations.find(v => v.adult_child_offering === newRatePlan.variations[0].adult_child_offering) : null,\r\n          });\r\n          return updatedRatePlans;\r\n        }, []),\r\n      };\r\n      updatedRoomtypes.push(updatedRoomtype);\r\n      return updatedRoomtypes;\r\n    }, []);\r\n  }\r\n\r\n  private sortRoomTypes(roomTypes: RoomType[], userCriteria: { adult_nbr: number; child_nbr: number }): RoomType[] {\r\n    return roomTypes.sort((a, b) => {\r\n      // Move room types with zero inventory to the end\r\n      if (a.inventory === 0 && b.inventory !== 0) return 1;\r\n      if (a.inventory !== 0 && b.inventory === 0) return -1;\r\n\r\n      // Check for variations where is_calculated is true and amount is 0\r\n      const zeroCalculatedA = a.rateplans.some(plan => plan.variations.some(variation => variation.is_calculated && (variation.amount === 0 || variation.amount === null)));\r\n      const zeroCalculatedB = b.rateplans.some(plan => plan.variations.some(variation => variation.is_calculated && (variation.amount === 0 || variation.amount === null)));\r\n\r\n      // Prioritize these types to be before inventory 0 but after all others\r\n      if (zeroCalculatedA && !zeroCalculatedB) return 1;\r\n      if (!zeroCalculatedA && zeroCalculatedB) return -1;\r\n\r\n      // Check for exact matching variations\r\n      const matchA = a.rateplans.some(plan => plan.variations.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr));\r\n      const matchB = b.rateplans.some(plan => plan.variations.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr));\r\n\r\n      if (matchA && !matchB) return -1;\r\n      if (!matchA && matchB) return 1;\r\n\r\n      // Sort by the highest variation in any attribute, for example `amount`\r\n      const maxVariationA = Math.max(...a.rateplans.flatMap(plan => plan.variations.map(variation => variation.amount)));\r\n      const maxVariationB = Math.max(...b.rateplans.flatMap(plan => plan.variations.map(variation => variation.amount)));\r\n\r\n      if (maxVariationA < maxVariationB) return -1;\r\n      if (maxVariationA > maxVariationB) return 1;\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  private updateRoomTypeRatePlans(roomtypes: RoomType[], newRoomtypes: RoomType[], props: any) {\r\n    const selectedRoomTypeIdx = roomtypes.findIndex(rt => rt.id === props.rt_id);\r\n    if (selectedRoomTypeIdx === -1) {\r\n      throw new Error('Invalid RoomType');\r\n    }\r\n    const selectednewRoomTypeIdx = newRoomtypes.findIndex(rt => rt.id === props.rt_id);\r\n    if (selectedRoomTypeIdx === -1) {\r\n      throw new Error('Invalid RoomType');\r\n    }\r\n    if (selectednewRoomTypeIdx === -1) {\r\n      throw new Error('Invalid New RoomType');\r\n    }\r\n    const newRatePlan = newRoomtypes[selectednewRoomTypeIdx].rateplans?.find(rp => rp.id === props.rp_id);\r\n    if (!newRatePlan) {\r\n      throw new Error('Invalid New Rateplan');\r\n    }\r\n    const newVariation = newRatePlan.variations.find(v => v.adult_child_offering === props.adultChildConstraint);\r\n    console.log(newRatePlan.variations, props.adultChildConstraint);\r\n    if (!newVariation) {\r\n      throw new Error('Missing variation');\r\n    }\r\n    roomtypes[selectedRoomTypeIdx] = {\r\n      ...roomtypes[selectedRoomTypeIdx],\r\n      rateplans: roomtypes[selectedRoomTypeIdx].rateplans.map(rp => {\r\n        return {\r\n          ...rp,\r\n          variations: rp.variations.map(v => {\r\n            if (v.adult_child_offering === props.adultChildConstraint && rp.id === props.rp_id) {\r\n              return newVariation;\r\n            }\r\n            return v;\r\n          }),\r\n        };\r\n      }),\r\n    };\r\n    return roomtypes;\r\n  }\r\n}\r\n","import { IExposedProperty } from '@/models/property';\r\n\r\ntype HSLColor = {\r\n  h: number;\r\n  s: number;\r\n  l: number;\r\n};\r\nexport class Colors {\r\n  public hexToRgb(hex) {\r\n    hex = hex.replace(/^#/, '');\r\n    var r = parseInt(hex.substring(0, 2), 16);\r\n    var g = parseInt(hex.substring(2, 4), 16);\r\n    var b = parseInt(hex.substring(4, 6), 16);\r\n    return { r, g, b };\r\n  }\r\n  public rgbToHsl(rgb) {\r\n    let r = parseInt(rgb.r);\r\n    let g = parseInt(rgb.g);\r\n    let b = parseInt(rgb.b);\r\n\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    let cmin = Math.min(r, g, b),\r\n      cmax = Math.max(r, g, b),\r\n      delta = cmax - cmin,\r\n      h = 0,\r\n      s = 0,\r\n      l = 0;\r\n\r\n    if (delta == 0) h = 0;\r\n    else if (cmax == r) h = ((g - b) / delta) % 6;\r\n    else if (cmax == g) h = (b - r) / delta + 2;\r\n    else h = (r - g) / delta + 4;\r\n\r\n    h = Math.round(h * 60);\r\n    if (h < 0) h += 360;\r\n    l = (cmax + cmin) / 2;\r\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n    s = +(s * 100).toFixed(1);\r\n    l = +(l * 100).toFixed(1);\r\n\r\n    return { h: Math.round(h), s: Math.round(s), l: Math.round(l) };\r\n  }\r\n  public hexToHSL(hex: string): HSLColor {\r\n    const rgb = this.hexToRgb(hex);\r\n    return this.rgbToHsl(rgb);\r\n  }\r\n  public generateColorShades(baseHex: string): string[] {\r\n    const { h, s, l: baseL } = this.hexToHSL(baseHex);\r\n    let shades = [];\r\n    for (let i = -3; i <= 6; i++) {\r\n      let l = baseL + i * 4;\r\n      shades.push({ h, s, l: Math.min(Math.max(l, 0), 100) });\r\n    }\r\n    return shades;\r\n  }\r\n  public initTheme(property: IExposedProperty) {\r\n    if (property.space_theme) {\r\n      const root = document.documentElement;\r\n      const shades = this.generateColorShades(property.space_theme.button_bg_color);\r\n      let shade_number = 900;\r\n      shades.forEach((shade: any, index) => {\r\n        root.style.setProperty(`--brand-${shade_number}`, `${shade.h}, ${shade.s}%, ${shade.l}%`);\r\n        if (index === 9) {\r\n          shade_number = 25;\r\n        } else if (index === 8) {\r\n          shade_number = 50;\r\n        } else {\r\n          shade_number = shade_number - 100;\r\n        }\r\n      });\r\n      root.style.setProperty('--radius', property.space_theme.button_border_radius + 'px');\r\n    }\r\n  }\r\n}\r\n","import { PropertyHelpers } from './../app/property-helpers.service';\r\nimport { TExposedBookingAvailability } from '@/components/ir-booking-engine/ir-booking-page/ir-availibility-header/availability';\r\nimport { MissingTokenError, Token } from '@/models/Token';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { DataStructure } from '@/models/commun';\r\nimport { ISetupEntries } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store, { calculateTotalCost, IRatePlanSelection } from '@/stores/booking';\r\nimport { checkout_store, ICardProcessingWithCVC, ICardProcessingWithoutCVC, updateUserFormData } from '@/stores/checkout.store';\r\nimport { getDateDifference, injectHTML } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { Colors } from '../app/colors.service';\r\nimport { TGuest } from '@/models/user_form';\r\n\r\nexport class PropertyService extends Token {\r\n  private propertyHelpers = new PropertyHelpers();\r\n  colors: Colors = new Colors();\r\n\r\n  public async getExposedProperty(params: { id: number; language: string; aname: string | null; perma_link: string | null }, initTheme: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, {\r\n      ...params,\r\n      currency: app_store.userPreferences.currency_id,\r\n      include_sales_rate_plans: !!booking_store.bookingAvailabilityParams.agent,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    if (result.My_Result.tags) {\r\n      result.My_Result.tags.map(({ key, value }) => {\r\n        if (!value) {\r\n          return;\r\n        }\r\n        switch (key) {\r\n          case 'header':\r\n            return injectHTML(value, 'head', 'first');\r\n          case 'body':\r\n            return injectHTML(value, 'body', 'first');\r\n          case 'footer':\r\n            return injectHTML(value, 'body', 'last');\r\n        }\r\n      });\r\n    }\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...result.My_Result.roomtypes];\r\n    }\r\n    if (params.aname || params.perma_link) {\r\n      app_store.app_data = { ...app_store.app_data, property_id: result.My_Result.id };\r\n    }\r\n    app_store.property = { ...result.My_Result };\r\n    if (initTheme) {\r\n      this.colors.initTheme(result.My_Result);\r\n    }\r\n    return result.My_Result;\r\n  }\r\n\r\n  public async getExposedBookingAvailability(props: {\r\n    params: TExposedBookingAvailability;\r\n    identifier: string;\r\n    rp_id?: number;\r\n    rt_id?: number;\r\n    mode: 'modify_rt' | 'default';\r\n    adultChildConstraint?: string;\r\n  }): Promise<DataStructure> {\r\n    const token = this.getToken();\r\n    this.propertyHelpers.validateToken(token);\r\n    this.propertyHelpers.validateModeProps(props);\r\n\r\n    const roomtypeIds = this.propertyHelpers.collectRoomTypeIds(props);\r\n    const rateplanIds = this.propertyHelpers.collectRatePlanIds(props);\r\n    const data = await this.propertyHelpers.fetchAvailabilityData(token, props, roomtypeIds, rateplanIds);\r\n\r\n    this.propertyHelpers.updateBookingStore(data, props);\r\n\r\n    return data;\r\n  }\r\n\r\n  public async getExposedBooking(params: { booking_nbr: string; language: string }, withExtras: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Booking?Ticket=${token}`, {\r\n      ...params,\r\n      extras: withExtras\r\n        ? [\r\n            { key: 'payment_code', value: '' },\r\n            {\r\n              key: 'prepayment_amount',\r\n              value: '',\r\n            },\r\n          ]\r\n        : null,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    return result.My_Result as Booking;\r\n  }\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        if (app_store.setup_entries) {\r\n          return app_store.setup_entries;\r\n        }\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        const setupEntries = {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n        app_store.setup_entries = setupEntries;\r\n        updateUserFormData('arrival_time', setupEntries.arrivalTime[0].CODE_NAME);\r\n        return setupEntries;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  private filterRooms() {\r\n    let rooms = [];\r\n    Object.values(booking_store.ratePlanSelections).map(rt => {\r\n      Object.values(rt).map((rp: IRatePlanSelection) => {\r\n        if (rp.reserved > 0) {\r\n          [...new Array(rp.reserved)].map((_, index) => {\r\n            const { first_name, last_name } = this.propertyHelpers.extractFirstNameAndLastName(index, rp.guestName);\r\n            rooms.push({\r\n              identifier: null,\r\n              roomtype: rp.roomtype,\r\n              rateplan: rp.ratePlan,\r\n              unit: null,\r\n              smoking_option: rp.checkoutSmokingSelection[index],\r\n              occupancy: {\r\n                adult_nbr: rp.checkoutVariations[index].adult_nbr,\r\n                children_nbr: rp.checkoutVariations[index].child_nbr,\r\n                infant_nbr: null,\r\n              },\r\n              bed_preference: rp.is_bed_configuration_enabled ? rp.checkoutBedSelection[index] : null,\r\n              from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n              to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n              notes: null,\r\n              days: this.propertyHelpers.generateDays(\r\n                booking_store.bookingAvailabilityParams.from_date,\r\n                booking_store.bookingAvailabilityParams.to_date,\r\n                +rp.checkoutVariations[index].amount / getDateDifference(booking_store.bookingAvailabilityParams.from_date, booking_store.bookingAvailabilityParams.to_date),\r\n              ),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: ['001', '004'].includes(checkout_store.payment?.code)\r\n                  ? () => {\r\n                      const payment = checkout_store.payment as ICardProcessingWithoutCVC | ICardProcessingWithCVC;\r\n                      return {\r\n                        nbr: payment?.cardNumber,\r\n                        holder_name: payment?.cardHolderName,\r\n                        expiry_month: payment?.expiry_month.split('/')[0],\r\n                        expiry_year: payment?.expiry_year.split('/')[1],\r\n                        cvc: payment?.code === '001' ? payment.cvc : null,\r\n                      };\r\n                    }\r\n                  : null,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rooms;\r\n  }\r\n  public async editExposedGuest(guest: TGuest, book_nbr: string): Promise<any> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Edit_Exposed_Guest?Ticket=${token}`, { ...guest, book_nbr });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async bookUser() {\r\n    const { prePaymentAmount } = calculateTotalCost();\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      let guest: any = {\r\n        email: checkout_store.userFormData.email,\r\n        first_name: checkout_store.userFormData.firstName,\r\n        last_name: checkout_store.userFormData.lastName,\r\n        country_id: checkout_store.userFormData.country_id,\r\n        city: null,\r\n        mobile: checkout_store.userFormData.mobile_number,\r\n        address: '',\r\n        country_phone_prefix: checkout_store.userFormData.country_phone_prefix,\r\n        dob: null,\r\n        subscribe_to_news_letter: true,\r\n        cci: null,\r\n      };\r\n      const body = {\r\n        assign_units: false,\r\n        check_in: false,\r\n        is_pms: false,\r\n        is_direct: true,\r\n        agent: booking_store.bookingAvailabilityParams.agent ? { id: booking_store.bookingAvailabilityParams.agent } : null,\r\n        is_in_loyalty_mode: booking_store.bookingAvailabilityParams.loyalty,\r\n        promo_key: booking_store.bookingAvailabilityParams.coupon ?? null,\r\n        booking: {\r\n          booking_nbr: '',\r\n          from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n          to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n          remark: checkout_store.userFormData.message || null,\r\n          property: {\r\n            id: app_store.app_data.property_id,\r\n          },\r\n          source: app_store.app_data.source,\r\n          referrer_site: app_store.app_data.affiliate ? window.location.href : 'www.igloorooms.com',\r\n          currency: app_store.property.currency,\r\n          arrival: { code: checkout_store.userFormData.arrival_time },\r\n          guest,\r\n          rooms: this.filterRooms(),\r\n        },\r\n        extras: [\r\n          {\r\n            key: 'payment_code',\r\n            value: checkout_store.payment.code,\r\n          },\r\n          {\r\n            key: 'prepayment_amount',\r\n            value: prePaymentAmount,\r\n          },\r\n        ],\r\n        pickup_info: checkout_store.pickup.location ? this.propertyHelpers.convertPickup(checkout_store.pickup) : null,\r\n      };\r\n      const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getExposedGuest() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Guest?Ticket=${token}`, {\r\n      email: null,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data.My_Result;\r\n    if (res === null) {\r\n      app_store.is_signed_in = false;\r\n      return;\r\n    }\r\n    // app_store.is_signed_in = true;\r\n    checkout_store.userFormData = {\r\n      ...checkout_store.userFormData,\r\n      country_id: res.country_id,\r\n      email: res.email,\r\n      firstName: res.first_name,\r\n      lastName: res.last_name,\r\n      mobile_number: res.mobile,\r\n      country_phone_prefix: res.country_phone_prefix,\r\n      id: res.id,\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}