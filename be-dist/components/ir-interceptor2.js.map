{"file":"ir-interceptor2.js","mappings":";;;;;;AAAA,MAAM,gBAAgB,GAAG,8riBAA8riB,CAAC;AACxtiB,4BAAe,gBAAgB;;MCSlB,aAAa;;;;;uBACL,KAAK;yBACH,KAAK;gCACE,KAAK;4BACM,IAAI;gCAEC,CAAC,0BAA0B,EAAE,aAAa,EAAE,uBAAuB,CAAC;;;IAGhH,iBAAiB;QACf,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAED,sBAAsB;QACpB,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3F,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9F;IAED,eAAe,CAAC,GAAW;QACzB,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1B;IAED,iBAAiB,CAAC,GAAW;QAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KAC5C;IAED,aAAa,CAAC,MAA0B;QACtC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtD,oBAAoB,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;QAC/C,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;YACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QACD,OAAO,MAAM,CAAC;KACf;IAED,cAAc,CAAC,QAAuB;;QACpC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;YACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QACD,oBAAoB,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;QAC5C,IAAI,MAAA,QAAQ,CAAC,IAAI,CAAC,YAAY,0CAAE,IAAI,EAAE,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7C;QACD,OAAO,QAAQ,CAAC;KACjB;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1B,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC9B;IACD,MAAM;QACJ,QACE,EAAC,IAAI,uDACH,wEAAiB,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAC9C,2DAAI,IAAI,EAAC,aAAa,EAAC,KAAK,EAAE,mBAAmB,IAC9C,GAAG,EACJ,iEAAU,IAAI,EAAC,QAAQ,GAAY,EACnC,uFAAkC,CAC/B,EACL,4DAAK,IAAI,EAAC,YAAY,IACpB,4DAAI,IAAI,CAAC,YAAY,CAAK,EAC1B,0EAAuB,EACvB,sEAAmB,CACf,CACU,CACb,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=shadow","src/components/ir-interceptor/ir-interceptor.tsx"],"sourcesContent":[".loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loaderContainer {\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  background: white;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100000;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  pointer-events: all;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n// import { IToast } from '../ir-toast/toast';\r\nimport interceptor_requests from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  shadow: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isUnassignedUnit = false;\r\n  @State() errorMessage: string | null = null;\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/ReAllocate_Exposed_Room', '/Do_Payment', '/Get_Exposed_Bookings'];\r\n  alertRef: HTMLIrAlertDialogElement;\r\n  //@Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(url);\r\n  }\r\n\r\n  handleRequest(config: AxiosRequestConfig) {\r\n    const extractedUrl = this.extractEndpoint(config.url);\r\n    interceptor_requests[extractedUrl] = 'pending';\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = true;\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response: AxiosResponse) {\r\n    console.log('handleResponse');\r\n    const extractedUrl = this.extractEndpoint(response.config.url);\r\n    if (this.isHandledEndpoint(extractedUrl)) {\r\n      this.isLoading = false;\r\n    }\r\n    interceptor_requests[extractedUrl] = 'done';\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  handleError(error: string) {\r\n    console.log('error', error);\r\n    this.errorMessage = error;\r\n    this.alertRef.openModal();\r\n    return Promise.reject(error);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-alert-dialog ref={el => (this.alertRef = el)}>\r\n          <h1 slot=\"modal-title\" class={'flex items-center'}>\r\n            {' '}\r\n            <ir-icons name=\"danger\"></ir-icons>\r\n            <span>Something went wrong!</span>\r\n          </h1>\r\n          <div slot=\"modal-body\">\r\n            <p>{this.errorMessage}</p>\r\n            <button>Cancel</button>\r\n            <button>Ok</button>\r\n          </div>\r\n        </ir-alert-dialog>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}