{"file":"ir-signin2.js","mappings":"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","names":[],"sources":["src/services/api/auth.service.ts","src/components/ir-booking-engine/ir-nav/ir-auth/ir-signin/ir-signin.css?tag=ir-signin&encapsulation=scoped","src/components/ir-booking-engine/ir-nav/ir-auth/ir-signin/ir-signin.tsx"],"sourcesContent":["import { MissingTokenError, Token } from '@/models/Token';\r\nimport app_store from '@/stores/app.store';\r\nimport { TSignInValidator, TSignUpValidator } from '@/validators/auth.validator';\r\nimport axios from 'axios';\r\n\r\nexport class AuthService extends Token {\r\n  public async login(params: TSignInValidator, booking_nbr: string | number = '') {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Exposed_Guest_SignIn?Ticket=${token}`, { ...params, booking_nbr });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data['ExceptionMsg']);\r\n    }\r\n    localStorage.setItem('ir-token', data['My_Result']);\r\n    app_store.app_data.token = data['My_Result'];\r\n    return data['My_Result'];\r\n  }\r\n  public async signUp(params: TSignUpValidator) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Exposed_Guest_SignUp?Ticket=${token}`, params);\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data['ExceptionMsg']);\r\n    }\r\n    localStorage.setItem('ir-token', data['My_Result']);\r\n    app_store.app_data.token = data['My_Result'];\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.title {\r\n  height: 32px;\r\n  align-self: stretch;\r\n  flex-grow: 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.33;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #101828;\r\n}\r\n.Supporting-text {\r\n  height: 24px;\r\n  align-self: stretch;\r\n  flex-grow: 0;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.5;\r\n  letter-spacing: normal;\r\n  text-align: center;\r\n  color: #475467;\r\n}\r\n.dont-have-an-account {\r\n  width: 155px;\r\n  height: 20px;\r\n  flex-grow: 0;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.43;\r\n  letter-spacing: normal;\r\n  text-align: left;\r\n  color: #475467;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport { SignInValidtor, TSignInAuthTrigger, TSignInValidator } from '@/validators/auth.validator';\r\nimport { ZodError } from 'zod';\r\nimport { AuthService } from '@/services/api/auth.service';\r\nimport app_store from '@/stores/app.store';\r\nimport { TAuthNavigation } from '../auth.types';\r\n\r\n@Component({\r\n  tag: 'ir-signin',\r\n  styleUrl: 'ir-signin.css',\r\n  scoped: true,\r\n})\r\nexport class IrSignin {\r\n  @Prop() enableSignUp: boolean = true;\r\n  @State() signInParams: TSignInValidator = {};\r\n  @State() formState: {\r\n    cause: 'zod' | 'auth' | null;\r\n    status: 'empty' | 'valid' | 'invalid';\r\n    errors: Record<keyof TSignInValidator, string> | null;\r\n  } = { cause: null, errors: null, status: 'empty' };\r\n  @Event() authFinish: EventEmitter<{ state: 'success' | 'failed'; token: string }>;\r\n  @Event() navigate: EventEmitter<TAuthNavigation>;\r\n  @Event() signIn: EventEmitter<TSignInAuthTrigger>;\r\n\r\n  private authService = new AuthService();\r\n\r\n  componentWillLoad() {\r\n    this.authService.setToken(app_store.app_data.token);\r\n  }\r\n\r\n  modifySignInParams(params: Partial<TSignInValidator>) {\r\n    if (!this.signInParams) {\r\n      this.signInParams = {};\r\n    }\r\n    this.signInParams = { ...this.signInParams, ...params };\r\n  }\r\n\r\n  async login(params: { email?: string; password?: string }) {\r\n    try {\r\n      const token = await this.authService.login({ ...params, password: '' }, params.password);\r\n      this.authFinish.emit({ state: 'success', token });\r\n    } catch (error) {\r\n      this.authFinish.emit({ state: 'failed', token: null });\r\n      this.formState = {\r\n        cause: 'auth',\r\n        status: 'invalid',\r\n        errors: { email: error.message, password: error.message },\r\n      };\r\n    }\r\n  }\r\n  async handleSignIn(e: Event) {\r\n    e.preventDefault();\r\n    try {\r\n      this.formState.errors = null;\r\n      const params = SignInValidtor.parse(this.signInParams);\r\n      this.signIn.emit({ trigger: 'be', params });\r\n      await this.login(params);\r\n    } catch (error) {\r\n      let newErrors: Record<keyof TSignInValidator, string> = {\r\n        email: null,\r\n        password: null,\r\n      };\r\n      if (error instanceof ZodError) {\r\n        error.issues.map(e => {\r\n          newErrors[e.path[0]] = e.message;\r\n        });\r\n        this.formState = {\r\n          cause: 'zod',\r\n          status: 'invalid',\r\n          errors: { ...newErrors },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <h1 class=\"title mb-4\">Sign in to your booking</h1>\r\n        <form onSubmit={this.handleSignIn.bind(this)} class=\"space-y-4 \">\r\n          {this.formState?.cause === 'auth' && this.formState?.errors && (\r\n            <div class=\"mx-auto\">\r\n              <ir-badge-group variant=\"error\" badge=\"Error\" message={this.formState?.errors?.email ?? ''}></ir-badge-group>\r\n            </div>\r\n          )}\r\n          <fieldset class=\"mb-5\">\r\n            <ir-input\r\n              error={!!this.formState?.errors?.email}\r\n              onTextChanged={e => this.modifySignInParams({ email: e.detail })}\r\n              autofocus\r\n              inputId=\"email\"\r\n              label=\"Enter your email\"\r\n            ></ir-input>\r\n          </fieldset>\r\n          <fieldset>\r\n            <ir-input\r\n              error={!!this.formState?.errors?.password}\r\n              onTextChanged={e => this.modifySignInParams({ password: e.detail })}\r\n              inputId=\"password\"\r\n              type=\"password\"\r\n              label=\"Enter your booking number \"\r\n            ></ir-input>\r\n          </fieldset>\r\n          {/* <div class=\"my-6 flex justify-end\">\r\n            <ir-button type=\"button\" variants=\"ghost-primary\" label=\"Forgot password\"></ir-button>\r\n          </div> */}\r\n          <ir-button type=\"submit\" class=\"w-full\" label=\"Sign in\" size=\"md\"></ir-button>\r\n          <div class=\"mb-4 flex items-center justify-center gap-4\">\r\n            <div class=\"h-[1px] w-[45%] bg-[var(--gray-200)]\"></div>\r\n            <span class=\"text-[var(--gray-500)]\">OR</span>\r\n            <div class=\"h-[1px] w-[45%] bg-[var(--gray-200)]\"></div>\r\n          </div>\r\n        </form>\r\n        {/* {this.enableSignUp && (\r\n          <div class=\"flex items-center justify-center\">\r\n            <p class=\"dont-have-an-account\">Don't have an account?</p>\r\n            <ir-button label=\"Sign up\" variants=\"ghost-primary\" onButtonClick={() => this.navigate.emit('register')}></ir-button>\r\n          </div>\r\n        )} */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}