{"file":"ir-drawer.js","mappings":"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","names":["IrDrawer"],"sources":["src/utils/modal.ts","src/utils/scroll.ts","src/utils/slot.ts","src/components/ui/ir-drawer/ir-drawer.css?tag=ir-drawer&encapsulation=shadow","src/components/ui/ir-drawer/ir-drawer.tsx"],"sourcesContent":["interface ModalOptions {\r\n  onFocusOut?: (event: Event) => void;\r\n}\r\n\r\nlet activeModals: HTMLElement[] = [];\r\n\r\nexport default class Modal {\r\n  element: HTMLElement;\r\n  options?: ModalOptions;\r\n\r\n  constructor(element: HTMLElement, options?: ModalOptions) {\r\n    this.element = element;\r\n    this.options = options;\r\n    this.handleFocusIn = this.handleFocusIn.bind(this);\r\n  }\r\n\r\n  activate() {\r\n    activeModals.push(this.element);\r\n    document.addEventListener('focusin', this.handleFocusIn);\r\n  }\r\n\r\n  deactivate() {\r\n    activeModals = activeModals.filter(modal => modal !== this.element);\r\n    document.removeEventListener('focusin', this.handleFocusIn);\r\n  }\r\n\r\n  isActive() {\r\n    return activeModals[activeModals.length - 1] === this.element;\r\n  }\r\n\r\n  handleFocusIn(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n    const tagName = this.element.tagName.toLowerCase();\r\n    if (this.isActive() && target.closest(tagName) !== this.element && typeof this.options?.onFocusOut === 'function') {\r\n      this.options?.onFocusOut(event);\r\n    }\r\n  }\r\n}\r\n","import { getOffset } from './offset';\n\nconst locks = new Set();\n\n//\n// Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible\n// without premature unlocking.\n//\nexport function lockBodyScrolling(lockingEl: HTMLElement) {\n  locks.add(lockingEl);\n  document.body.classList.add('six-scroll-lock');\n}\n\n//\n// Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method.\n//\nexport function unlockBodyScrolling(lockingEl: HTMLElement) {\n  locks.delete(lockingEl);\n\n  if (locks.size === 0) {\n    document.body.classList.remove('six-scroll-lock');\n  }\n}\n\n//\n// Scrolls an element into view of its container. If the element is already in view, nothing will happen.\n//\nexport function scrollIntoView(element: HTMLElement, container: HTMLElement, direction: 'horizontal' | 'vertical' | 'both' = 'vertical', behavior: 'smooth' | 'auto' = 'smooth') {\n  const offset = getOffset(element, container);\n  const offsetTop = offset.top + container.scrollTop;\n  const offsetLeft = offset.left + container.scrollLeft;\n  const minX = container.scrollLeft;\n  const maxX = container.scrollLeft + container.offsetWidth;\n  const minY = container.scrollTop;\n  const maxY = container.scrollTop + container.offsetHeight;\n\n  if (direction === 'horizontal' || direction === 'both') {\n    if (offsetLeft < minX) {\n      container.scrollTo({ left: offsetLeft, behavior });\n    } else if (offsetLeft + element.clientWidth > maxX) {\n      container.scrollTo({ left: offsetLeft - container.offsetWidth + element.clientWidth, behavior });\n    }\n  }\n\n  if (direction === 'vertical' || direction === 'both') {\n    if (offsetTop < minY) {\n      container.scrollTo({ top: offsetTop, behavior });\n    } else if (offsetTop + element.clientHeight > maxY) {\n      container.scrollTo({ top: offsetTop - container.offsetHeight + element.clientHeight, behavior });\n    }\n  }\n}\n","//\n// Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n// string. This is useful because we can't use slot.textContent as an alternative.\n//\nexport function getTextContent(slot?: HTMLSlotElement): string {\n  const nodes = slot != null ? slot.assignedNodes({ flatten: true }) : [];\n  let text = '';\n\n  [...nodes].map(node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n\n//\n// Determines whether an element has a slot. If name is specified, the function will look for a corresponding named\n// slot, otherwise it will look for a \"default\" slot (e.g. a non-empty text node or an element with no slot attribute).\n//\nexport function hasSlot(el: HTMLElement, name?: string): boolean {\n  // Look for a named slot\n  if (name != null && name !== '') {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n\n  // Look for a default slot\n  return Array.from(el.childNodes).some(node => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent?.trim() !== '') {\n      return true;\n    }\n\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node as HTMLElement;\n      if (!el.hasAttribute('slot')) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nexport function getSlot(element: ParentNode | null | undefined, slotName: string): HTMLElement | null {\n  if (element == null) return null;\n  return element.querySelector(`[slot=\"${slotName}\"]`);\n}\n",":host {\r\n  display: block;\r\n  --size: 25rem;\r\n}\r\n\r\n.drawer {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  overflow: hidden;\r\n}\r\n.drawer--visible {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(50%);\r\n  overflow: hidden;\r\n  pointer-events: none;\r\n  visibility: hidden;\r\n}\r\n.drawer--contained {\r\n  position: absolute;\r\n  z-index: initial;\r\n}\r\n\r\n.drawer--fixed {\r\n  position: fixed;\r\n  z-index: 999999;\r\n}\r\n.drawer__panel {\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 2;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  background-color: var(--background, white);\r\n  color: var(--gray-800);\r\n  box-shadow: 1px 0 9px 4px rgba(0, 0, 0, 0.1);\r\n  transition: 0.3s transform;\r\n  overflow: auto;\r\n  pointer-events: all;\r\n}\r\n.drawer__panel:focus {\r\n  outline: none;\r\n}\r\n.drawer--top .drawer__panel {\r\n  top: 0;\r\n  right: auto;\r\n  bottom: auto;\r\n  left: 0;\r\n  width: 100%;\r\n  height: var(--size);\r\n  transform: translate(0, -100%);\r\n}\r\n\r\n.drawer--right .drawer__panel {\r\n  top: 0;\r\n  right: 0;\r\n  bottom: auto;\r\n  left: auto;\r\n  width: var(--size);\r\n  height: 100%;\r\n  transform: translate(100%, 0);\r\n}\r\n.drawer--open .drawer__panel {\r\n  transform: none;\r\n}\r\n\r\n.drawer__header {\r\n  display: flex;\r\n}\r\n\r\n.drawer__title {\r\n  flex: 1 1 auto;\r\n  font-size: 18;\r\n  line-height: 0;\r\n  padding: 10px;\r\n}\r\n\r\n.drawer__close {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  padding: 0 10px;\r\n}\r\n\r\n.drawer__body {\r\n  flex: 1 1 auto;\r\n  padding: 10px;\r\n  overflow: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\n.drawer__footer {\r\n  text-align: right;\r\n  padding: 10px;\r\n}\r\n.drawer__footer ::slotted(six-button:not(:last-of-type)) {\r\n  margin-right: 5px;\r\n}\r\n\r\n.drawer:not(.drawer--has-footer) .drawer__footer {\r\n  display: none;\r\n}\r\n\r\n.drawer__overlay {\r\n  display: block;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  opacity: 0;\r\n  transition: 0.3s opacity;\r\n  pointer-events: none;\r\n}\r\n\r\n.drawer--contained .drawer__overlay {\r\n  position: absolute;\r\n}\r\n.drawer--open .drawer__overlay {\r\n  opacity: 0.4;\r\n}\r\n","import { Component, Element, Prop, State, Watch, h, Event, EventEmitter, Method } from '@stencil/core';\r\nimport Modal from '@/utils/modal';\r\nimport { v4 } from 'uuid';\r\nimport { lockBodyScrolling, unlockBodyScrolling } from '../../../utils/scroll';\r\nimport { hasSlot } from '@/utils/slot';\r\n\r\n@Component({\r\n  tag: 'ir-drawer',\r\n  styleUrl: 'ir-drawer.css',\r\n  shadow: true,\r\n})\r\nexport class IrDrawer {\r\n  private componentId = `drawer-${v4()}`;\r\n  private drawer?: HTMLElement;\r\n  private modal?: Modal;\r\n  private panel?: HTMLElement;\r\n  private willShow = false;\r\n  private willHide = false;\r\n\r\n  @Element() host!: HTMLIrDrawerElement;\r\n\r\n  @State() hasFooter = false;\r\n  @State() isVisible = false;\r\n\r\n  @Prop({ mutable: true, reflect: true }) open = false;\r\n  @Prop() label = '';\r\n  @Prop() placement: 'top' | 'right' | 'bottom' | 'left' = 'right';\r\n  @Prop() contained = false;\r\n  @Prop() noHeader = false;\r\n\r\n  @Watch('open')\r\n  handleOpenChange() {\r\n    this.open ? this.show() : this.hide();\r\n  }\r\n  @Event({ eventName: 'six-drawer-show' }) sixShow!: EventEmitter<null>;\r\n\r\n  /** Emitted after the drawer opens and all transitions are complete. */\r\n  @Event({ eventName: 'six-drawer-after-show' }) sixAfterShow!: EventEmitter<null>;\r\n\r\n  /** Emitted when the drawer closes. Calling `event.preventDefault()` will prevent it from being closed. */\r\n  @Event({ eventName: 'six-drawer-hide' }) sixHide!: EventEmitter<null>;\r\n\r\n  /** Emitted after the drawer closes and all transitions are complete. */\r\n  @Event({ eventName: 'six-drawer-after-hide' }) sixAfterHide!: EventEmitter<null>;\r\n\r\n  /**\r\n   * Emitted when the drawer opens and the panel gains focus. Calling `event.preventDefault()` will prevent focus and\r\n   * allow you to set it on a different element in the drawer, such as an input or button.\r\n   */\r\n  @Event({ eventName: 'six-drawer-initial-focus' }) sixInitialFocus!: EventEmitter<null>;\r\n\r\n  /** Emitted when the overlay is clicked. Calling `event.preventDefault()` will prevent the drawer from closing. */\r\n  @Event({ eventName: 'six-drawer-overlay-dismiss' }) sixOverlayDismiss!: EventEmitter<null>;\r\n\r\n  connectedCallback() {\r\n    this.modal = new Modal(this.host, {\r\n      onFocusOut: () => (this.contained ? null : this.panel?.focus()),\r\n    });\r\n  }\r\n  componentWillLoad() {\r\n    this.handleSlotChange();\r\n\r\n    // Show on init if open\r\n    if (this.open) {\r\n      this.show();\r\n      // if the sidebar is open by default we need to manually reset the\r\n      // transition variables since there will be no transition event\r\n      this.resetTransitionVariables();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n  @Method()\r\n  async show() {\r\n    if (this.willShow || this.modal == null || this.panel == null || this.drawer == null) {\r\n      return;\r\n    }\r\n    const panel = this.panel;\r\n\r\n    const sixShow = this.sixShow.emit();\r\n    if (sixShow.defaultPrevented) {\r\n      this.open = false;\r\n      return;\r\n    }\r\n\r\n    this.willShow = true;\r\n    this.isVisible = true;\r\n    this.open = true;\r\n\r\n    // Lock body scrolling only if the drawer isn't contained\r\n    if (!this.contained) {\r\n      this.modal.activate();\r\n      lockBodyScrolling(this.host);\r\n    }\r\n\r\n    if (this.open) {\r\n      // Wait for the next frame before setting initial focus so the dialog is technically visible\r\n      requestAnimationFrame(() => {\r\n        const sixInitialFocus = this.sixInitialFocus.emit();\r\n        if (!sixInitialFocus.defaultPrevented) {\r\n          panel.focus({ preventScroll: true });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  @Method()\r\n  async hide() {\r\n    if (this.willHide || this.modal == null) {\r\n      return;\r\n    }\r\n\r\n    const sixHide = this.sixHide.emit();\r\n    if (sixHide.defaultPrevented) {\r\n      this.open = true;\r\n      return;\r\n    }\r\n\r\n    this.willHide = true;\r\n    this.open = false;\r\n    this.modal.deactivate();\r\n\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n\r\n  private handleCloseClick = () => {\r\n    this.hide();\r\n  };\r\n\r\n  private handleKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      this.hide();\r\n    }\r\n  };\r\n  private handleOverlayClick = () => {\r\n    const sixOverlayDismiss = this.sixOverlayDismiss.emit();\r\n\r\n    if (!sixOverlayDismiss.defaultPrevented) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  private handleSlotChange = () => {\r\n    this.hasFooter = hasSlot(this.host, 'footer');\r\n  };\r\n\r\n  private handleTransitionEnd = (event: TransitionEvent) => {\r\n    const target = event.target as HTMLElement;\r\n\r\n    // Ensure we only emit one event when the target element is no longer visible\r\n    if (event.propertyName === 'transform' && target.classList.contains('drawer__panel')) {\r\n      this.resetTransitionVariables();\r\n    }\r\n  };\r\n\r\n  private resetTransitionVariables() {\r\n    this.isVisible = this.open;\r\n    this.willShow = false;\r\n    this.willHide = false;\r\n    this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={el => (this.drawer = el)}\r\n        part=\"base\"\r\n        class={{\r\n          'drawer': true,\r\n          'drawer--open': this.open,\r\n          'drawer--visible': this.isVisible,\r\n          'drawer--top': this.placement === 'top',\r\n          'drawer--right': this.placement === 'right',\r\n          'drawer--bottom': this.placement === 'bottom',\r\n          'drawer--left': this.placement === 'left',\r\n          'drawer--contained': this.contained,\r\n          'drawer--fixed': !this.contained,\r\n          'drawer--has-footer': this.hasFooter,\r\n        }}\r\n        onKeyDown={this.handleKeyDown}\r\n        onTransitionEnd={this.handleTransitionEnd}\r\n      >\r\n        <div part=\"overlay\" class=\"drawer__overlay\" onClick={this.handleOverlayClick} tabIndex={-1} />\r\n\r\n        <div\r\n          ref={el => (this.panel = el)}\r\n          part=\"panel\"\r\n          class=\"drawer__panel\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-hidden={this.open ? 'false' : 'true'}\r\n          aria-label={this.noHeader ? this.label : null}\r\n          aria-labelledby={!this.noHeader ? `${this.componentId}-title` : null}\r\n          tabIndex={0}\r\n        >\r\n          {!this.noHeader && (\r\n            <header part=\"header\" class=\"drawer__header\">\r\n              <span part=\"title\" class=\"drawer__title\" id={`${this.componentId}-title`}>\r\n                <slot name=\"label\">\r\n                  {/* If there's no label, use an invisible character to prevent the heading from collapsing */}\r\n                  {this.label || String.fromCharCode(65279)}\r\n                </slot>\r\n              </span>\r\n              <six-icon-button exportparts=\"base:close-button\" class=\"drawer__close\" name=\"close\" onClick={this.handleCloseClick} />\r\n            </header>\r\n          )}\r\n\r\n          <div part=\"body\" class=\"drawer__body\">\r\n            <slot />\r\n          </div>\r\n\r\n          <footer part=\"footer\" class=\"drawer__footer\">\r\n            <slot name=\"footer\" onSlotchange={this.handleSlotChange} />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}