{"file":"ir-user-profile2.js","mappings":"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","names":[],"sources":["src/components/ir-booking-engine/ir-nav/ir-user-profile/ir-user-profile.css?tag=ir-user-profile&encapsulation=shadow","src/components/ir-booking-engine/ir-nav/ir-user-profile/ir-user-profile.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n","import { IrGuest, TGuest } from '@/models/user_form';\r\nimport { Component, h, Prop, State } from '@stencil/core';\r\nimport phone_input_store from '../../../ui/ir-phone-input/phone.store';\r\nimport { checkout_store } from '@/stores/checkout.store';\r\nimport { ZodError } from 'zod';\r\nimport { PropertyService } from '@/services/api/property.service';\r\nimport app_store from '@/stores/app.store';\r\nimport { CommonService } from '@/services/api/common.service';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport localizedWords from '@/stores/localization.store';\r\n\r\n@Component({\r\n  tag: 'ir-user-profile',\r\n  styleUrl: 'ir-user-profile.css',\r\n  shadow: true,\r\n})\r\nexport class IrUserProfile {\r\n  @Prop() user_data: TGuest = {};\r\n  @Prop() be: boolean = true;\r\n\r\n  @State() user: TGuest = {};\r\n  @State() isLoading: boolean = false;\r\n  @State() isPageLoading: boolean = false;\r\n\r\n  private propertyService = new PropertyService();\r\n  private commonService = new CommonService();\r\n\r\n  async componentWillLoad() {\r\n    await this.fetchData();\r\n    this.user = { ...this.user_data };\r\n  }\r\n  async fetchData() {\r\n    if (this.be) {\r\n      return;\r\n    }\r\n    await this.commonService.getExposedCountryByIp({\r\n      id: app_store.app_data.property_id?.toString(),\r\n      aname: app_store.app_data.aName,\r\n      perma_link: app_store.app_data.perma_link,\r\n    });\r\n  }\r\n\r\n  updateUserData(key: keyof TGuest, value: unknown) {\r\n    this.user = {\r\n      ...this.user,\r\n      [key]: value,\r\n    };\r\n  }\r\n\r\n  async handleSubmit(e: Event) {\r\n    e.preventDefault();\r\n    try {\r\n      IrGuest.parse(this.user);\r\n      this.isLoading = true;\r\n      await this.propertyService.editExposedGuest(this.user, '');\r\n      const { email, country_id, first_name, last_name, mobile, country_phone_prefix } = this.user;\r\n      checkout_store.userFormData = {\r\n        ...checkout_store.userFormData,\r\n        country_phone_prefix: country_phone_prefix,\r\n        email,\r\n        firstName: first_name,\r\n        lastName: last_name,\r\n        mobile_number: mobile,\r\n        country_id,\r\n      };\r\n    } catch (error) {\r\n      if (error instanceof ZodError) {\r\n        console.error(error.issues);\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (isRequestPending('/Get_Exposed_Country_By_IP')) {\r\n      return null;\r\n    }\r\n    return (\r\n      <section class={`mx-auto h-full min-h-[80vh] max-w-xl ${!this.be ? 'p-4 md:p-6' : ''}`}>\r\n        <h1 class=\"mb-6 text-lg font-medium\">{localizedWords.entries.Lcz_PersonalProfile}</h1>\r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <div class=\"relative  flex flex-col gap-4 md:grid md:grid-cols-2 \">\r\n            <ir-input\r\n              label={localizedWords.entries.Lcz_FirstName}\r\n              onTextChanged={e => this.updateUserData('first_name', e.detail)}\r\n              value={this.user.first_name}\r\n              placeholder=\"\"\r\n              onInputBlur={e => {\r\n                const emailSchema = IrGuest.pick({ first_name: true });\r\n                const schemaValidation = emailSchema.safeParse({ first_name: this.user?.first_name });\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (!schemaValidation.success) {\r\n                  target.setAttribute('data-state', 'error');\r\n                  target.setAttribute('aria-invalid', 'true');\r\n                } else {\r\n                  if (target.hasAttribute('aria-invalid')) {\r\n                    target.setAttribute('aria-invalid', 'false');\r\n                  }\r\n                }\r\n              }}\r\n              onInputFocus={e => {\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (target.hasAttribute('data-state')) target.removeAttribute('data-state');\r\n              }}\r\n            ></ir-input>\r\n            <ir-input\r\n              value={this.user.last_name}\r\n              label={localizedWords.entries.Lcz_LastName}\r\n              placeholder=\"\"\r\n              onTextChanged={e => this.updateUserData('last_name', e.detail)}\r\n              onInputBlur={e => {\r\n                const emailSchema = IrGuest.pick({ last_name: true });\r\n                const schemaValidation = emailSchema.safeParse({ last_name: this.user?.last_name });\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (!schemaValidation.success) {\r\n                  target.setAttribute('data-state', 'error');\r\n                  target.setAttribute('aria-invalid', 'true');\r\n                } else {\r\n                  if (target.hasAttribute('aria-invalid')) {\r\n                    target.setAttribute('aria-invalid', 'false');\r\n                  }\r\n                }\r\n              }}\r\n              onInputFocus={e => {\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (target.hasAttribute('data-state')) target.removeAttribute('data-state');\r\n              }}\r\n            ></ir-input>\r\n            <ir-input\r\n              label={localizedWords.entries.Lcz_EmailAddress}\r\n              placeholder=\"\"\r\n              value={this.user.email}\r\n              onInputBlur={e => {\r\n                const emailSchema = IrGuest.pick({ email: true });\r\n                const schemaValidation = emailSchema.safeParse({ email: this.user?.email });\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (!schemaValidation.success) {\r\n                  target.setAttribute('data-state', 'error');\r\n                  target.setAttribute('aria-invalid', 'true');\r\n                } else {\r\n                  if (target.hasAttribute('aria-invalid')) {\r\n                    target.setAttribute('aria-invalid', 'false');\r\n                  }\r\n                }\r\n              }}\r\n              onInputFocus={e => {\r\n                const target: HTMLIrInputElement = e.target;\r\n                if (target.hasAttribute('data-state')) target.removeAttribute('data-state');\r\n              }}\r\n              onTextChanged={e => this.updateUserData('email', e.detail)}\r\n            ></ir-input>\r\n            <ir-select\r\n              value={this.user.country_id}\r\n              label={localizedWords.entries.Lcz_Country}\r\n              variant=\"double-line\"\r\n              data={phone_input_store.countries?.map(country => ({\r\n                id: country.id,\r\n                value: country.name,\r\n              }))}\r\n              onValueChange={e => this.updateUserData('country_id', e.detail)}\r\n            ></ir-select>\r\n\r\n            <ir-phone-input\r\n              class=\"col-span-2 w-full\"\r\n              country_code={this.user.country_id || null}\r\n              mode=\"prefix_only\"\r\n              country_phone_prefix={this.user.country_phone_prefix || null}\r\n              onTextChange={e => {\r\n                this.updateUserData('mobile', e.detail.mobile);\r\n                this.updateUserData('country_phone_prefix', e.detail.phone_prefix);\r\n              }}\r\n              mobile_number={(this.user.mobile || '').toString()}\r\n              onPhoneInputBlur={e => {\r\n                const schema = IrGuest.pick({ mobile: true });\r\n                const schemaValidation = schema.safeParse({ mobile: this.user.mobile });\r\n                const target: HTMLIrPhoneInputElement = e.target;\r\n                if (!schemaValidation.success) {\r\n                  target.setAttribute('data-state', 'error');\r\n                  target.setAttribute('aria-invalid', 'true');\r\n                } else {\r\n                  if (target.hasAttribute('aria-invalid')) {\r\n                    target.setAttribute('aria-invalid', 'false');\r\n                  }\r\n                }\r\n              }}\r\n              onPhoneInputFocus={e => {\r\n                const target: HTMLIrPhoneInputElement = e.target;\r\n                if (target.hasAttribute('data-state')) target.removeAttribute('data-state');\r\n              }}\r\n            ></ir-phone-input>\r\n          </div>\r\n          <div class=\"mt-4\">\r\n            <ir-checkbox onCheckChange={e => this.updateUserData('subscribe_to_news_letter', e.detail)} label={localizedWords.entries.Lcz_RegisterForExclusiveDeals}></ir-checkbox>\r\n          </div>\r\n          <div class=\"flex items-center justify-end\">\r\n            <ir-button type=\"submit\" isLoading={this.isLoading} label={localizedWords.entries.Lcz_save} class=\"mt-6 w-full md:w-fit\"></ir-button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"],"version":3}