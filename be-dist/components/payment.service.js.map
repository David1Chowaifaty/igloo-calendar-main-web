{"file":"payment.service.js","mappings":";;;;;MAQa,cAAe,SAAQ,KAAK;IAChC,qBAAqB,MAAK;IAC1B,MAAM,qBAAqB,CAAC,EACjC,KAAK,EACL,MAAM,EACN,UAAU,EACV,WAAW,GAMZ;QACC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,mCAAmC,KAAK,EAAE,kCACvE,MAAM,KACT,YAAY,EAAE,WAAW,SAAS,CAAC,QAAQ,CAAC,UAAU,4BAA4B,IAClF,CAAC;QACH,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE;YAClB,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACxB;aAAM;YACL,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzB;QACD,OAAO,GAAG,CAAC;KACZ;IACM,MAAM,yBAAyB,CAAC,WAAmB;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,uCAAuC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QAC7G,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IAEM,MAAM,4BAA4B,CAAC,EACxC,KAAK,EACL,MAAM,EACN,SAAS,GAYV;QACC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,2CAA2C,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QAC9F,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;KACzF;IACM,uBAAuB,CAAC,QAAsC,EAAE,SAAe;;QACpF,IAAI,uBAAuB,GAAG,KAAK,CAAC;QACpC,MAAM,eAAe,GAAG,CAAA,MAAA,MAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,WAAW,CAAC,0CAAE,QAAQ,CAAC,CAAC,CAAC,0CAAE,YAAY,KAAI,CAAC,CAAC;QACrG,IAAI,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,cAAI,OAAA,EAAE,CAAC,IAAI,KAAK,aAAa,KAAI,MAAA,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,QAAQ,0CAAE,IAAI,CAAC,CAAC,IAAIA,gBAAQ,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA,CAAA,EAAA,CAAC,CAAC;QAChJ,IAAI,WAAW,EAAE;YACf,uBAAuB,GAAG,IAAI,CAAC;YAC/B,MAAM,iBAAiB,GAAG,MAAA,MAAA,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAIA,gBAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,CAAC,0CAAE,YAAY,mCAAI,IAAI,CAAC;YACxH,OAAO,EAAE,MAAM,EAAE,iBAAiB,GAAG,eAAe,GAAG,iBAAiB,GAAG,eAAe,EAAE,uBAAuB,EAAE,CAAC;SACvH;QACD,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,uBAAuB,EAAE,CAAC;KAC7D;IACM,MAAM,uBAAuB,CAAC,EAAU,EAAE,UAAkB,EAAE,WAA2D,EAAE,eAAsB;;oCAAnF,EAAA,oBAAsB,aAAa,CAAC,kBAAkB,0CAAE,GAAG;wCAAE,EAAA,sBAAsB;QACtJ,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QAC5B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC;YACrD,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,MAAM,EAAE;gBACN,WAAW;gBACX,WAAW,EAAE,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBACvI,QAAQ,EAAE,SAAS,CAAC,eAAe,CAAC,WAAW;gBAC/C,WAAW,EAAE,SAAS,CAAC,QAAQ,CAAC,WAAW;gBAC3C,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,UAAU;aACzB;YACD,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,KAAK;SAChC,CAAC,CAAC;QACH,MAAM,OAAO,GAAG,MAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,0CAAE,kBAAkB,CAAC;QACpF,OAAO,OAAO,GAAG,GAAG,eAAe,GAAG,8BAA8B,GAAG,EAAE,GAAG,OAAO,OAAO,GAAG,eAAe,CAAC;KAC9G;IACM,MAAM,0BAA0B,CAAC,OAAgB;;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAC9B,IAAI,CAAC,GAAG,CAAC,CAAC,IACR,IAAI,CAAC,4BAA4B,CAAC;YAChC,KAAK;YACL,SAAS,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;YAC3C,MAAM,EAAE;gBACN,WAAW,EAAE,CAAC,CAAC,WAAW;gBAC1B,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAChC,QAAQ,EAAE,SAAS,CAAC,eAAe,CAAC,WAAW;gBAC/C,YAAY,EAAE,CAAC,CAAC,UAAU;gBAC1B,YAAY,EAAE,CAAC,CAAC,UAAU;gBAC1B,WAAW,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE;aACnC;SACF,CAAC,CACH,CACF,CAAC;QACF,MAAM,mBAAmB,GAAG,MAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,0CAAE,kBAAkB,CAAC;QACrG,MAAM,iBAAiB,GAAG,MAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,0CAAE,kBAAkB,CAAC;QACjG,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,CAAC;KACnH;IACO,YAAY,CAAC,OAAgB;QACnC,IAAI,IAAI,GAAsE,EAAE,CAAC;QACjF,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9H,OAAO,IAAI,CAAC;KACb;;;;;","names":["isBefore"],"sources":["src/services/api/payment.service.ts"],"sourcesContent":["import { Booking } from '@/models/booking.dto';\r\nimport { IExposedApplicablePolicies } from '@/models/property';\r\nimport { MissingTokenError, Token } from '@/models/Token';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store from '@/stores/booking';\r\nimport axios from 'axios';\r\nimport { isBefore } from 'date-fns';\r\n\r\nexport class PaymentService extends Token {\r\n  public processBookingPayment() {}\r\n  public async GeneratePaymentCaller({\r\n    token,\r\n    params,\r\n    onRedirect,\r\n    onScriptRun,\r\n  }: {\r\n    token: string;\r\n    params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string };\r\n    onRedirect: (url: string) => void;\r\n    onScriptRun: (script: string) => void;\r\n  }) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Generate_Payment_Caller?Ticket=${token}`, {\r\n      ...params,\r\n      callback_url: `https://${app_store.property.perma_link}.bookingmystay.com/invoice`,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    if (res.type === 1) {\r\n      onRedirect(res.caller);\r\n    } else {\r\n      onScriptRun(res.caller);\r\n    }\r\n    return res;\r\n  }\r\n  public async RequestBookingCancelation(booking_nbr: string) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Request_Booking_Cancelation?Ticket=${token}`, { BOOK_NBR: booking_nbr });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async GetExposedApplicablePolicies({\r\n    token,\r\n    params,\r\n    book_date,\r\n  }: {\r\n    token: string;\r\n    params: {\r\n      booking_nbr: string;\r\n      property_id: number;\r\n      room_type_id: number;\r\n      rate_plan_id: number;\r\n      currency_id: number;\r\n      language: number | string;\r\n    };\r\n    book_date: Date;\r\n  }) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Applicable_Policies?Ticket=${token}`, params);\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const result = data['My_Result'];\r\n    return { data: result, amount: this.processAlicablePolicies(result, book_date).amount };\r\n  }\r\n  public processAlicablePolicies(policies: IExposedApplicablePolicies[], book_date: Date) {\r\n    let isInFreeCancelationZone = false;\r\n    const guarenteeAmount = policies.find(po => po.type === 'guarantee')?.brackets[0]?.gross_amount || 0;\r\n    let cancelation = policies.find(po => po.type === 'cancelation' && po?.brackets?.some(b => isBefore(book_date, new Date(b.due_on)), book_date));\r\n    if (cancelation) {\r\n      isInFreeCancelationZone = true;\r\n      const cancelationAmount = cancelation.brackets.find(b => isBefore(new Date(b.due_on), book_date))?.gross_amount ?? null;\r\n      return { amount: cancelationAmount > guarenteeAmount ? cancelationAmount : guarenteeAmount, isInFreeCancelationZone };\r\n    }\r\n    return { amount: guarenteeAmount, isInFreeCancelationZone };\r\n  }\r\n  public async fetchCancelationMessage(id: number, roomTypeId: number, booking_nbr: string = booking_store.fictus_booking_nbr?.nbr, showCancelation = true) {\r\n    console.log(id, roomTypeId);\r\n    const result = await this.GetExposedApplicablePolicies({\r\n      book_date: new Date(),\r\n      params: {\r\n        booking_nbr,\r\n        currency_id: app_store.currencies.find(c => c.code.toLowerCase() === (app_store.userPreferences.currency_id.toLowerCase() || 'usd')).id,\r\n        language: app_store.userPreferences.language_id,\r\n        property_id: app_store.app_data.property_id,\r\n        rate_plan_id: id,\r\n        room_type_id: roomTypeId,\r\n      },\r\n      token: app_store.app_data.token,\r\n    });\r\n    const message = result.data.find(t => t.type === 'cancelation')?.combined_statement;\r\n    return message ? `${showCancelation ? '<b><u>Cancellation: </u></b>' : ''}${message}<br/>` : '<span></span>';\r\n  }\r\n  public async getBookingPrepaymentAmount(booking: Booking) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const list = this.setUpBooking(booking);\r\n    let requests = await Promise.all(\r\n      list.map(l =>\r\n        this.GetExposedApplicablePolicies({\r\n          token,\r\n          book_date: new Date(booking.booked_on.date),\r\n          params: {\r\n            booking_nbr: l.booking_nbr,\r\n            currency_id: booking.currency.id,\r\n            language: app_store.userPreferences.language_id,\r\n            rate_plan_id: l.ratePlanId,\r\n            room_type_id: l.roomTypeId,\r\n            property_id: app_store.property.id,\r\n          },\r\n        }),\r\n      ),\r\n    );\r\n    const cancelation_message = requests[0].data.find(t => t.type === 'cancelation')?.combined_statement;\r\n    const guarantee_message = requests[0].data.find(t => t.type === 'guarantee')?.combined_statement;\r\n    return { amount: requests.reduce((prev, curr) => prev + curr.amount, 0), cancelation_message, guarantee_message };\r\n  }\r\n  private setUpBooking(booking: Booking) {\r\n    let list: { booking_nbr: string; ratePlanId: number; roomTypeId: number }[] = [];\r\n    booking.rooms.map(r => list.push({ booking_nbr: booking.booking_nbr, ratePlanId: r.rateplan.id, roomTypeId: r.roomtype.id }));\r\n    return list;\r\n  }\r\n}\r\n"],"version":3}