{"file":"payment.service.js","mappings":";;;MAGa,cAAe,SAAQ,KAAK;IAChC,MAAM,qBAAqB,CAAC,EACjC,KAAK,EACL,MAAM,EACN,UAAU,EACV,WAAW,GAMZ;QACC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,mCAAmC,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QACtF,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE;YAClB,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACxB;aAAM;YACL,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzB;QACD,OAAO,GAAG,CAAC;KACZ;IACM,MAAM,yBAAyB,CAAC,WAAmB;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,iBAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,uCAAuC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QAC7G,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;;;;;","names":[],"sources":["src/services/api/payment.service.ts"],"sourcesContent":["import { MissingTokenError, Token } from '@/models/Token';\nimport axios from 'axios';\n\nexport class PaymentService extends Token {\n  public async GeneratePaymentCaller({\n    token,\n    params,\n    onRedirect,\n    onScriptRun,\n  }: {\n    token: string;\n    params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string };\n    onRedirect: (url: string) => void;\n    onScriptRun: (script: string) => void;\n  }) {\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Generate_Payment_Caller?Ticket=${token}`, params);\n    if (data['ExceptionMsg'] !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    const res = data['My_Result'];\n    if (res.type === 1) {\n      onRedirect(res.caller);\n    } else {\n      onScriptRun(res.caller);\n    }\n    return res;\n  }\n  public async RequestBookingCancelation(booking_nbr: string) {\n    const token = this.getToken();\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Request_Booking_Cancelation?Ticket=${token}`, { BOOK_NBR: booking_nbr });\n    if (data['ExceptionMsg'] !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n\n    return data['My_Result'];\n  }\n}\n"],"version":3}