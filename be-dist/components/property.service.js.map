{"file":"property.service.js","mappings":"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","names":["format"],"sources":["src/services/api/property.service.ts"],"sourcesContent":["import { PropertyHelpers } from './../app/property-helpers.service';\r\nimport { TExposedBookingAvailability } from '@/components/ir-booking-engine/ir-booking-page/ir-availibility-header/availability';\r\nimport { MissingTokenError, Token } from '@/models/Token';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { DataStructure } from '@/models/common';\r\nimport { ISetupEntries } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store, { calculateTotalCost, IRatePlanSelection } from '@/stores/booking';\r\nimport { checkout_store, ICardProcessingWithCVC, ICardProcessingWithoutCVC, updateUserFormData } from '@/stores/checkout.store';\r\nimport { getDateDifference, injectHTML } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { Colors } from '../app/colors.service';\r\nimport { TGuest } from '@/models/user_form';\r\n\r\nexport class PropertyService extends Token {\r\n  private propertyHelpers = new PropertyHelpers();\r\n  colors: Colors = new Colors();\r\n\r\n  public async getExposedProperty(params: { id: number; language: string; aname: string | null; perma_link: string | null }, initTheme: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, {\r\n      ...params,\r\n      currency: app_store.userPreferences.currency_id,\r\n      include_sales_rate_plans: !!booking_store.bookingAvailabilityParams.agent,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    if (result.My_Result.tags) {\r\n      result.My_Result.tags.map(({ key, value }) => {\r\n        if (!value) {\r\n          return;\r\n        }\r\n        switch (key) {\r\n          case 'header':\r\n            return injectHTML(value, 'head', 'first');\r\n          case 'body':\r\n            return injectHTML(value, 'body', 'first');\r\n          case 'footer':\r\n            return injectHTML(value, 'body', 'last');\r\n        }\r\n      });\r\n    }\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...result.My_Result.roomtypes];\r\n    }\r\n    if (params.aname || params.perma_link) {\r\n      app_store.app_data = { ...app_store.app_data, property_id: result.My_Result.id };\r\n    }\r\n    app_store.property = { ...result.My_Result };\r\n    if (initTheme) {\r\n      this.colors.initTheme(result.My_Result);\r\n    }\r\n    return result.My_Result;\r\n  }\r\n\r\n  public async getExposedBookingAvailability(props: {\r\n    params: TExposedBookingAvailability;\r\n    identifier: string;\r\n    rp_id?: number;\r\n    rt_id?: number;\r\n    mode: 'modify_rt' | 'default';\r\n    adultChildConstraint?: string;\r\n  }): Promise<DataStructure> {\r\n    const token = this.getToken();\r\n    this.propertyHelpers.validateToken(token);\r\n    this.propertyHelpers.validateModeProps(props);\r\n\r\n    const roomtypeIds = this.propertyHelpers.collectRoomTypeIds(props);\r\n    const rateplanIds = this.propertyHelpers.collectRatePlanIds(props);\r\n    const data = await this.propertyHelpers.fetchAvailabilityData(token, props, roomtypeIds, rateplanIds);\r\n\r\n    this.propertyHelpers.updateBookingStore(data, props);\r\n\r\n    return data;\r\n  }\r\n\r\n  public async getExposedBooking(params: { booking_nbr: string; language: string }, withExtras: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Booking?Ticket=${token}`, {\r\n      ...params,\r\n      extras: withExtras\r\n        ? [\r\n            { key: 'payment_code', value: '' },\r\n            {\r\n              key: 'prepayment_amount',\r\n              value: '',\r\n            },\r\n          ]\r\n        : null,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    return result.My_Result as Booking;\r\n  }\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        if (app_store.setup_entries) {\r\n          return app_store.setup_entries;\r\n        }\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        const setupEntries = {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n        app_store.setup_entries = setupEntries;\r\n        updateUserFormData('arrival_time', setupEntries.arrivalTime[0].CODE_NAME);\r\n        return setupEntries;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  private filterRooms() {\r\n    let rooms = [];\r\n    Object.values(booking_store.ratePlanSelections).map(rt => {\r\n      Object.values(rt).map((rp: IRatePlanSelection) => {\r\n        if (rp.reserved > 0) {\r\n          [...new Array(rp.reserved)].map((_, index) => {\r\n            const { first_name, last_name } = this.propertyHelpers.extractFirstNameAndLastName(index, rp.guestName);\r\n            rooms.push({\r\n              identifier: null,\r\n              roomtype: rp.roomtype,\r\n              rateplan: rp.ratePlan,\r\n              unit: null,\r\n              smoking_option: rp.checkoutSmokingSelection[index],\r\n              occupancy: {\r\n                adult_nbr: rp.checkoutVariations[index].adult_nbr,\r\n                children_nbr: rp.checkoutVariations[index].child_nbr,\r\n                infant_nbr: null,\r\n              },\r\n              bed_preference: rp.is_bed_configuration_enabled ? rp.checkoutBedSelection[index] : null,\r\n              from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n              to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n              notes: null,\r\n              days: this.propertyHelpers.generateDays(\r\n                booking_store.bookingAvailabilityParams.from_date,\r\n                booking_store.bookingAvailabilityParams.to_date,\r\n                +rp.checkoutVariations[index].amount / getDateDifference(booking_store.bookingAvailabilityParams.from_date, booking_store.bookingAvailabilityParams.to_date),\r\n              ),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: ['001', '004'].includes(checkout_store.payment?.code)\r\n                  ? () => {\r\n                      const payment = checkout_store.payment as ICardProcessingWithoutCVC | ICardProcessingWithCVC;\r\n                      return {\r\n                        nbr: payment?.cardNumber,\r\n                        holder_name: payment?.cardHolderName,\r\n                        expiry_month: payment?.expiry_month.split('/')[0],\r\n                        expiry_year: payment?.expiry_year.split('/')[1],\r\n                        cvc: payment?.code === '001' ? payment.cvc : null,\r\n                      };\r\n                    }\r\n                  : null,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rooms;\r\n  }\r\n  public async editExposedGuest(guest: TGuest, book_nbr: string): Promise<any> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Edit_Exposed_Guest?Ticket=${token}`, { ...guest, book_nbr });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async bookUser() {\r\n    const { prePaymentAmount } = calculateTotalCost();\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      let guest: any = {\r\n        email: checkout_store.userFormData.email,\r\n        first_name: checkout_store.userFormData.firstName,\r\n        last_name: checkout_store.userFormData.lastName,\r\n        country_id: checkout_store.userFormData.country_id,\r\n        city: null,\r\n        mobile: checkout_store.userFormData.mobile_number,\r\n        address: '',\r\n        country_phone_prefix: checkout_store.userFormData.country_phone_prefix,\r\n        dob: null,\r\n        subscribe_to_news_letter: true,\r\n        cci: null,\r\n      };\r\n      const body = {\r\n        assign_units: false,\r\n        check_in: false,\r\n        is_pms: false,\r\n        is_direct: true,\r\n        agent: booking_store.bookingAvailabilityParams.agent ? { id: booking_store.bookingAvailabilityParams.agent } : null,\r\n        is_in_loyalty_mode: booking_store.bookingAvailabilityParams.loyalty,\r\n        promo_key: booking_store.bookingAvailabilityParams.coupon ?? null,\r\n        booking: {\r\n          booking_nbr: '',\r\n          from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n          to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n          remark: checkout_store.userFormData.message || null,\r\n          property: {\r\n            id: app_store.app_data.property_id,\r\n          },\r\n          source: app_store.app_data.source,\r\n          referrer_site: app_store.app_data.affiliate ? window.location.href : 'www.igloorooms.com',\r\n          currency: app_store.property.currency,\r\n          arrival: { code: checkout_store.userFormData.arrival_time },\r\n          guest,\r\n          rooms: this.filterRooms(),\r\n        },\r\n        extras: [\r\n          {\r\n            key: 'payment_code',\r\n            value: checkout_store.payment.code,\r\n          },\r\n          {\r\n            key: 'prepayment_amount',\r\n            value: prePaymentAmount,\r\n          },\r\n        ],\r\n        pickup_info: checkout_store.pickup.location ? this.propertyHelpers.convertPickup(checkout_store.pickup) : null,\r\n      };\r\n      const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getExposedGuest() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Guest?Ticket=${token}`, {\r\n      email: null,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data.My_Result;\r\n    if (res === null) {\r\n      app_store.is_signed_in = false;\r\n      return;\r\n    }\r\n    app_store.is_signed_in = true;\r\n    checkout_store.userFormData = {\r\n      ...checkout_store.userFormData,\r\n      country_id: res.country_id,\r\n      email: res.email,\r\n      firstName: res.first_name,\r\n      lastName: res.last_name,\r\n      mobile_number: res.mobile,\r\n      country_phone_prefix: res.country_phone_prefix,\r\n      id: res.id,\r\n    };\r\n  }\r\n}\r\n"],"version":3}