{"file":"ir-credit-card-input2.js","mappings":"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","names":[],"sources":["src/components/ir-booking-engine/ir-checkout-page/ir-credit-card-input/ir-credit-card-input.css?tag=ir-credit-card-input&encapsulation=shadow","src/components/ir-booking-engine/ir-checkout-page/ir-credit-card-input/ir-credit-card-input.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.card-container {\r\n  border-radius: var(--radius, 8px);\r\n  border: 1px solid var(--gray-300, #d0d5dd);\r\n  transition: all 0.3s ease-in-out;\r\n  width: 100%;\r\n  position: relative;\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.card-container input {\r\n  all: unset;\r\n  width: 3rem;\r\n  border-bottom: 1px solid var(--gray-600, #475467);\r\n}\r\n.card-number {\r\n  position: absolute;\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--gray-600, #475467);\r\n  top: 50%;\r\n  transform: translateY(-1.3rem);\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n}\r\n.input-container {\r\n  min-block-size: 3rem;\r\n  width: 100%;\r\n  border-radius: var(--radius, 8px);\r\n  padding: 0px 14px;\r\n  padding-block-start: 1rem;\r\n  outline: none;\r\n  font-size: 16px;\r\n}\r\nlabel:dir(rtl) {\r\n  padding-right: 14px;\r\n}\r\nlabel:dir(ltr) {\r\n  padding-left: 14px;\r\n}\r\n","import { Component, Host, h, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-credit-card-input',\r\n  styleUrl: 'ir-credit-card-input.css',\r\n  shadow: true,\r\n})\r\nexport class IrCreditCardInput {\r\n  @State() cardType: '' | 'AMEX' | 'VISA' | 'Mastercard' = '';\r\n\r\n  @Event() creditCardChange: EventEmitter<string>;\r\n\r\n  private value: string[] = [];\r\n\r\n  private handleInput = (event: KeyboardEvent, index: number, inputs: NodeListOf<HTMLInputElement>) => {\r\n    const input = event.target as HTMLInputElement;\r\n    let value = input.value;\r\n    value = value.replace(/\\D/g, '');\r\n    input.value = value;\r\n    if (index === 0) {\r\n      this.detectCardType(value);\r\n    }\r\n    if (event.key !== 'Backspace') {\r\n      if (value.length >= input.maxLength && index < inputs.length - 1) {\r\n        inputs[index + 1].focus();\r\n      }\r\n    } else {\r\n      if (value.length === 0 && index > 0) {\r\n        inputs[index - 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  private detectCardType(value: string) {\r\n    if (value.startsWith('4')) {\r\n      this.cardType = 'VISA';\r\n    } else if (value.startsWith('5') || value.startsWith('2')) {\r\n      this.cardType = 'Mastercard';\r\n    } else if (value.startsWith('34') || value.startsWith('37')) {\r\n      this.cardType = 'AMEX';\r\n    } else {\r\n      this.cardType = '';\r\n    }\r\n  }\r\n\r\n  getMaxLength(index: number) {\r\n    return this.cardType === 'AMEX' && index === 3 ? 3 : 4;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"card-container\">\r\n          <label htmlFor=\"first_input\" class=\"card-number\">\r\n            Card number\r\n          </label>\r\n          <div class=\"input-container flex w-full items-center justify-between gap-4\">\r\n            {[...Array(this.cardType === 'AMEX' ? 4 : 4)].map((_, index) => (\r\n              <input\r\n                id={index === 0 ? 'first_input' : 'credit_card' + index}\r\n                type=\"text\"\r\n                class=\"card-input\"\r\n                maxLength={this.getMaxLength(index)}\r\n                onKeyDown={event => this.handleInput(event, index, (event.currentTarget as HTMLInputElement).parentElement!.querySelectorAll('input'))}\r\n                onInput={event => {\r\n                  const input = event.target as HTMLInputElement;\r\n                  input.value = input.value.replace(/\\D/g, '');\r\n                  this.value[index] = input.value;\r\n                  this.creditCardChange.emit(this.value.join(''));\r\n                  if (input.value.length >= input.maxLength && index < 3) {\r\n                    ((event.currentTarget as HTMLInputElement).parentElement!.querySelectorAll('input')[index + 1] as HTMLInputElement).focus();\r\n                  }\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}