{"file":"payment.service-979781cc.js","mappings":";;;;;AAQA,MAAM,YAAY,GAAmB,EAAE,CAAC;MAE3B,EAAE,KAAK,EAAE,oBAAoB,EAAE,QAAQ,EAAE,wBAAwB,EAAE,GAAGA,iBAAW,CAAiB,YAAY,EAAE;SAC7G,gBAAgB,CAAC,GAAW;IAC1C,OAAO,oBAAoB,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;AACjD;;MCVa,cAAe,SAAQC,sBAAK;IAChC,MAAM,qBAAqB,CAAC,KAAa,EAAE,MAA4G;QAC5J,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAIC,kCAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMC,sBAAK,CAAC,IAAI,CAAC,mCAAmC,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QACtF,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,yBAAyB,CAAC,WAAmB;QACxD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAID,kCAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMC,sBAAK,CAAC,IAAI,CAAC,uCAAuC,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QACnG,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;;;;;;;","names":["createStore","Token","MissingTokenError","axios"],"sources":["src/stores/ir-interceptor.store.ts","src/services/api/payment.service.ts"],"sourcesContent":["import { createStore } from '@stencil/store';\r\n\r\nexport type TIrInterceptorStatus = 'pending' | 'done' | null;\r\n\r\nexport interface IRequestStatus {\r\n  [key: string]: TIrInterceptorStatus;\r\n}\r\n\r\nconst initialState: IRequestStatus = {};\r\n\r\nexport const { state: interceptor_requests, onChange: onInterceptorStateChange } = createStore<IRequestStatus>(initialState);\r\nexport function isRequestPending(url: string): boolean {\r\n  return interceptor_requests[url] === 'pending';\r\n}\r\n\r\nexport default interceptor_requests;\r\n","import { MissingTokenError, Token } from '@/models/Token';\nimport axios from 'axios';\n\nexport class PaymentService extends Token {\n  public async GeneratePaymentCaller(token: string, params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string }) {\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Generate_Payment_Caller?Ticket=${token}`, params);\n    if (data['ExceptionMsg'] !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data['My_Result'];\n  }\n  public async RequestBookingCancelation(booking_nbr: string) {\n    const token = this.getToken();\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Request_Booking_Cancelation?Ticket=${token}`, { booking_nbr });\n    if (data['ExceptionMsg'] !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data['My_Result'];\n  }\n}\n"],"version":3}