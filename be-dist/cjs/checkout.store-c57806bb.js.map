{"file":"checkout.store-c57806bb.js","mappings":";;;;;;AA4BA,MAAM,YAAY,GAAkB;IAClC,YAAY,EAAE,EAAE;IAChB,iBAAiB,EAAE,KAAK;IACxB,MAAM,EAAE;QACN,YAAY,EAAEA,oBAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC;KAC/C;IACD,OAAO,EAAE,IAAI;IACb,kBAAkB,EAAE,KAAK;CAC1B,CAAC;MAEW,EAAE,KAAK,EAAE,cAAc,EAAE,QAAQ,EAAE,oBAAoB,EAAE,GAAGC,mBAAW,CAAgB,YAAY,EAAE;SAElG,kBAAkB,CAAC,GAAwB,EAAE,KAAU;IACrE,cAAc,CAAC,YAAY,mCACtB,cAAc,CAAC,YAAY,KAC9B,CAAC,GAAG,GAAG,KAAK,GACb,CAAC;AACJ,CAAC;SACe,oBAAoB,CAAC,GAA0B,EAAE,KAAU;IACzE,IAAI,GAAG,KAAK,UAAU,IAAI,KAAK,KAAK,IAAI,EAAE;QACxC,cAAc,CAAC,MAAM,GAAG;YACtB,YAAY,EAAED,oBAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC;YAC9C,QAAQ,EAAE,IAAI;SACf,CAAC;KACH;SAAM;QACL,cAAc,CAAC,MAAM,mCAChB,cAAc,CAAC,MAAM,KACxB,CAAC,GAAG,GAAG,KAAK,GACb,CAAC;KACH;AACH,CAAC;SACe,2BAA2B,CAAC,MAAgC;IAC1E,cAAc,CAAC,MAAM,mCAChB,cAAc,CAAC,MAAM,GACrB,MAAM,CACV,CAAC;AACJ;;;;;;;;","names":["format","createStore"],"sources":["src/stores/checkout.store.ts"],"sourcesContent":["import { TPickupFormData } from '@/models/pickup';\r\nimport { TUserFormData } from '@/models/user_form';\r\nimport { createStore } from '@stencil/store';\r\nimport { format } from 'date-fns';\r\nexport interface ICardProcessing {\r\n  code: string;\r\n  cardNumber: string;\r\n  cardHolderName: string;\r\n  expiry_month: string;\r\n  expiry_year: string;\r\n}\r\nexport interface ICardProcessingWithoutCVC extends ICardProcessing {\r\n  code: '004';\r\n}\r\nexport interface ICardProcessingWithCVC extends ICardProcessing {\r\n  code: '001';\r\n  cvc: string;\r\n}\r\n\r\nexport type TPayment = ICardProcessingWithoutCVC | ICardProcessingWithCVC | { code: string };\r\ninterface CheckoutStore {\r\n  userFormData: TUserFormData;\r\n  pickup: TPickupFormData;\r\n  modifiedGuestName: boolean;\r\n  payment: TPayment | null;\r\n  agreed_to_services: boolean;\r\n}\r\n\r\nconst initialState: CheckoutStore = {\r\n  userFormData: {},\r\n  modifiedGuestName: false,\r\n  pickup: {\r\n    arrival_date: format(new Date(), 'yyyy-MM-dd'),\r\n  },\r\n  payment: null,\r\n  agreed_to_services: false,\r\n};\r\n\r\nexport const { state: checkout_store, onChange: onCheckoutDataChange } = createStore<CheckoutStore>(initialState);\r\n\r\nexport function updateUserFormData(key: keyof TUserFormData, value: any) {\r\n  checkout_store.userFormData = {\r\n    ...checkout_store.userFormData,\r\n    [key]: value,\r\n  };\r\n}\r\nexport function updatePickupFormData(key: keyof TPickupFormData, value: any) {\r\n  if (key === 'location' && value === null) {\r\n    checkout_store.pickup = {\r\n      arrival_date: format(new Date(), 'yyyy-MM-dd'),\r\n      location: null,\r\n    };\r\n  } else {\r\n    checkout_store.pickup = {\r\n      ...checkout_store.pickup,\r\n      [key]: value,\r\n    };\r\n  }\r\n}\r\nexport function updatePartialPickupFormData(params: Partial<TPickupFormData>) {\r\n  checkout_store.pickup = {\r\n    ...checkout_store.pickup,\r\n    ...params,\r\n  };\r\n}\r\n"],"version":3}