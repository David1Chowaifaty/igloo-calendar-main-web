{"file":"app.store-de3ea06b.js","mappings":";;;;;;AAiDA,MAAM,YAAY,GAAc;IAC9B,WAAW,EAAE,SAAS;IACtB,GAAG,EAAE,KAAK;IACV,cAAc,EAAEA,WAAI;IACpB,cAAc,EAAE,EAAE;IAClB,eAAe,EAAE;QACf,WAAW,EAAE,KAAK;QAClB,WAAW,EAAE,IAAI;KAClB;IACD,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE;QACR,SAAS,EAAE,KAAK;QAChB,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,IAAI;QACjB,QAAQ,EAAE,KAAK;QACf,WAAW,EAAE,IAAI;QACjB,YAAY,EAAE,IAAI;KACnB;IACD,QAAQ,EAAE,SAAS;IACnB,aAAa,EAAE,SAAS;IACxB,UAAU,EAAE,EAAE;IACd,kBAAkB,EAAE,SAAS;IAC7B,cAAc,EAAE,KAAK;IACrB,SAAS,EAAE,EAAE;IACb,YAAY,EAAE,KAAK;IACnB,KAAK,EAAE,IAAI;CACZ,CAAC;MACI,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAGC,iBAAW,CAAY,YAAY,EAAE;SAE7E,YAAY,CAAC,GAAe,EAAE,MAAc;IAC1D,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACxB,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;IACpB,SAAS,CAAC,cAAc,GAAG,MAAM,CAAC;AACpC,CAAC;SACe,oBAAoB,CAAC,MAA+B;IAClE,SAAS,CAAC,eAAe,mCACpB,SAAS,CAAC,eAAe,GACzB,MAAM,CACV,CAAC;AACJ;;;;;;;;","names":["enUS","createStore"],"sources":["src/stores/app.store.ts"],"sourcesContent":["import { ICurrency, IExposedLanguages, pages, TCurrency, TDirection } from '@/models/common';\r\nimport { IEntries, IExposedProperty } from '@/models/property';\r\nimport { createStore } from '@stencil/store';\r\nimport { enUS, Locale } from 'date-fns/locale';\r\nexport type UserPreference = {\r\n  language_id: string;\r\n  currency_id: string;\r\n};\r\ninterface IUserDefaultCountry {\r\n  cities: [];\r\n  currency: ICurrency;\r\n  flag: string;\r\n  id: number;\r\n  name: string;\r\n  phone_prefix: string;\r\n}\r\n\r\nexport interface IAppStore {\r\n  currencies: TCurrency[];\r\n  localizedWords: string[];\r\n  dir: TDirection;\r\n  selectedLocale: Locale;\r\n  userPreferences: UserPreference;\r\n  app_data: {\r\n    token: string;\r\n    property_id: number;\r\n    injected: boolean;\r\n    roomtype_id: number | null;\r\n    redirect_url: string;\r\n    affiliate: boolean;\r\n  };\r\n  property: IExposedProperty;\r\n  setup_entries: {\r\n    arrivalTime: IEntries[];\r\n    ratePricingMode: IEntries[];\r\n    bedPreferenceType: IEntries[];\r\n  };\r\n  userDefaultCountry: IUserDefaultCountry;\r\n  fetchedBooking: boolean;\r\n  currentPage: pages;\r\n  languages: IExposedLanguages[];\r\n  is_signed_in: boolean;\r\n  email: string | null;\r\n  invoice: {\r\n    booking_number: string;\r\n    email: string;\r\n  } | null;\r\n}\r\n\r\nconst initialState: IAppStore = {\r\n  currentPage: 'booking',\r\n  dir: 'LTR',\r\n  selectedLocale: enUS,\r\n  localizedWords: [],\r\n  userPreferences: {\r\n    currency_id: 'usd',\r\n    language_id: 'en',\r\n  },\r\n  invoice: null,\r\n  app_data: {\r\n    affiliate: false,\r\n    token: '',\r\n    property_id: null,\r\n    injected: false,\r\n    roomtype_id: null,\r\n    redirect_url: null,\r\n  },\r\n  property: undefined,\r\n  setup_entries: undefined,\r\n  currencies: [],\r\n  userDefaultCountry: undefined,\r\n  fetchedBooking: false,\r\n  languages: [],\r\n  is_signed_in: false,\r\n  email: null,\r\n};\r\nconst { state: app_store, onChange: onAppDataChange } = createStore<IAppStore>(initialState);\r\n\r\nexport function changeLocale(dir: TDirection, locale: Locale) {\r\n  document.body.dir = dir;\r\n  app_store.dir = dir;\r\n  app_store.selectedLocale = locale;\r\n}\r\nexport function updateUserPreference(params: Partial<UserPreference>) {\r\n  app_store.userPreferences = {\r\n    ...app_store.userPreferences,\r\n    ...params,\r\n  };\r\n}\r\nexport { onAppDataChange };\r\nexport default app_store;\r\n"],"version":3}