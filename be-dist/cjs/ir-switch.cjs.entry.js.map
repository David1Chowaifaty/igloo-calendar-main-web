{"file":"ir-switch.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,WAAW,GAAG,ypKAAypK,CAAC;AAC9qK,uBAAe,WAAW;;MCOb,QAAQ;IALrB;;;QAM2B,YAAO,GAAG,KAAK,CAAC;QAEjC,aAAQ,GAAY,KAAK,CAAC;QAK1B,QAAG,GAAGA,KAAE,EAAE,CAAC;KAmCpB;IAjCC,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QACD,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;KAC/E;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACrC;IAED,MAAM;QACJ,QACEC,QAACC,UAAI,uDACHD,qEACE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC,EACjC,IAAI,EAAC,QAAQ,EACb,EAAE,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAC7B,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,IAAI,EAAC,QAAQ,gBACD,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,WAAW,EAClD,KAAK,EAAE,IAAI,EACX,KAAK,EAAC,YAAY,IAElBA,mEAAM,KAAK,EAAC,aAAa,gBAAa,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,WAAW,GAAS,CAC9E,EACTA,oEAAO,IAAI,EAAC,UAAU,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,iBAAc,MAAM,EAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC,cAAc,GAAG,CAC9G,EACP;KACH;;;;;;","names":["v4","h","Host"],"sources":["src/components/ui/ir-switch/ir-switch.css?tag=ir-switch&encapsulation=shadow","src/components/ui/ir-switch/ir-switch.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  --ir-root-width: 36px;\r\n  --ir-root-height: 22px;\r\n  width: fit-content;\r\n}\r\n\r\n.hidden-input {\r\n  transform: translateX(-100%);\r\n  position: absolute;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  margin: 0;\r\n  width: var(--ir-root-width);\r\n  height: var(--ir-root-height);\r\n}\r\n.SwitchRoot {\r\n  all: unset;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: var(--ir-root-width);\r\n  height: var(--ir-root-height);\r\n  background-color: var(--gray-100, #f2f4f7);\r\n  position: relative;\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;\r\n  --webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  border-radius: 9999px;\r\n  box-sizing: border-box;\r\n}\r\n.SwitchRoot:disabled {\r\n  opacity: 80%;\r\n}\r\n.SwitchRoot:focus-visible,\r\n.SwitchRoot:active {\r\n  border-color: hsl(var(--brand-300, 206, 100%, 76%));\r\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.1), 0 0 0 4px hsl(var(--brand-100, 209, 100%, 91%));\r\n}\r\n\r\n.SwitchRoot[data-state='checked'] {\r\n  background-color: hsl(var(--brand-600, 215, 87%, 51%));\r\n}\r\n.SwitchThumb {\r\n  padding: 0;\r\n  margin: 0;\r\n  display: block;\r\n  width: calc(var(--ir-root-height) - 5px);\r\n  height: calc(var(--ir-root-height) - 5px);\r\n  border-radius: 9999px;\r\n  background: white;\r\n  box-shadow: 2px 3px 3px 0 rgba(0, 0, 0, 0.1), 0 2px 8px 0 rgba(0, 0, 0, 0.1);\r\n  transition: transform 100ms ease 0s;\r\n  transform: translateX(3px);\r\n  will-change: transform;\r\n}\r\n.SwitchThumb[data-state='checked'] {\r\n  transform: translateX(calc(var(--ir-root-height) - 5px));\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'ir-switch',\r\n  styleUrl: 'ir-switch.css',\r\n  shadow: true,\r\n})\r\nexport class IrSwitch {\r\n  @Prop({ mutable: true }) checked = false;\r\n  @Prop() switchId: string;\r\n  @Prop() disabled: boolean = false;\r\n\r\n  @Event() checkChange: EventEmitter<boolean>;\r\n\r\n  private switchRoot: HTMLButtonElement;\r\n  private _id = v4();\r\n\r\n  componentDidLoad() {\r\n    if (!this.switchRoot) {\r\n      return;\r\n    }\r\n    this.switchRoot.setAttribute('aria-checked', this.checked ? 'true' : 'false');\r\n  }\r\n\r\n  handleCheckChange() {\r\n    this.checked = !this.checked;\r\n    this.switchRoot.setAttribute('aria-checked', this.checked ? 'true' : 'false');\r\n    this.checkChange.emit(this.checked);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button\r\n          disabled={this.disabled}\r\n          ref={el => (this.switchRoot = el)}\r\n          type=\"button\"\r\n          id={this.switchId || this._id}\r\n          onClick={this.handleCheckChange.bind(this)}\r\n          role=\"switch\"\r\n          data-state={this.checked ? 'checked' : 'unchecked'}\r\n          value={'on'}\r\n          class=\"SwitchRoot\"\r\n        >\r\n          <span class=\"SwitchThumb\" data-state={this.checked ? 'checked' : 'unchecked'}></span>\r\n        </button>\r\n        <input type=\"checkbox\" checked={this.checked} aria-hidden=\"true\" tabIndex={-1} value={'on'} class=\"hidden-input\" />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}