import { Locale } from 'date-fns';
import { IExposedProperty } from "../../models/property";
import { TSource } from "../../stores/app.store";
import Stack from "../../models/stack";
import { ICurrency, IExposedLanguages } from "../../models/common";
export declare class IrBookingEngine {
    propertyId: number;
    injected: boolean;
    rt_id: number;
    rp_id: number;
    perma_link: string;
    p: string;
    checkin: string;
    checkout: string;
    language: string;
    adults: string;
    child: string;
    ages: string;
    cur: string;
    aff: string;
    stag: string | null;
    property: IExposedProperty | null;
    source: TSource | null;
    hideGoogleSignIn: boolean;
    origin: string | null;
    coupon: string;
    loyalty: boolean;
    agent_code: string;
    selectedLocale: Locale;
    currencies: ICurrency[];
    languages: IExposedLanguages[];
    isLoading: boolean;
    router: Stack<HTMLElement>;
    bookingListingScreenOptions: {
        screen: 'bookings' | 'booking-details';
        params: unknown;
    };
    private version;
    private baseUrl;
    private commonService;
    private propertyService;
    private token;
    private privacyPolicyRef;
    componentWillLoad(): Promise<void>;
    handleSourceChange(newSource: TSource, oldSource: TSource): void;
    handleCurrencyChange(newValue: string, oldValue: string): void;
    handleCouponChange(newValue: string, oldValue: string): void;
    handleLoyaltyChange(newValue: boolean, oldValue: boolean): void;
    handleAgentCodeChange(newValue: string, oldValue: string): void;
    private setSource;
    private modifyLanguage;
    private initializeApp;
    private initRequest;
    private checkAndApplyDiscounts;
    private modifyLoyalty;
    handleNavigation(e: CustomEvent): void;
    handleResetBooking(e: CustomEvent): Promise<void>;
    openPrivacyPolicy(e: CustomEvent): Promise<void>;
    handleAuthFinish(e: CustomEvent): void;
    private resetBooking;
    private checkAvailability;
    private renderScreens;
    render(): any;
}
