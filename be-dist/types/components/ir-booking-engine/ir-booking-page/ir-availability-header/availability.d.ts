import moment from 'moment';
import { z } from 'zod';
export declare const ExposedBookingAvailability: z.ZodObject<{
    propertyid: z.ZodNumber;
    from_date: z.ZodType<moment.Moment, z.ZodTypeDef, moment.Moment>;
    to_date: z.ZodType<moment.Moment, z.ZodTypeDef, moment.Moment>;
    room_type_ids: z.ZodDefault<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    adult_nbr: z.ZodNumber;
    child_nbr: z.ZodNumber;
    infant_nbr: z.ZodNumber;
    language: z.ZodDefault<z.ZodString>;
    currency_ref: z.ZodString;
    is_in_loyalty_mode: z.ZodDefault<z.ZodBoolean>;
    promo_key: z.ZodString;
    is_in_agent_mode: z.ZodDefault<z.ZodBoolean>;
    agent_id: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    is_in_affiliate_mode: z.ZodDefault<z.ZodBoolean>;
    affiliate_id: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    adult_nbr?: number;
    child_nbr?: number;
    infant_nbr?: number;
    language?: string;
    from_date?: moment.Moment;
    to_date?: moment.Moment;
    room_type_ids?: string[];
    propertyid?: number;
    currency_ref?: string;
    is_in_loyalty_mode?: boolean;
    promo_key?: string;
    is_in_agent_mode?: boolean;
    agent_id?: number;
    is_in_affiliate_mode?: boolean;
    affiliate_id?: number;
}, {
    adult_nbr?: number;
    child_nbr?: number;
    infant_nbr?: number;
    language?: string;
    from_date?: moment.Moment;
    to_date?: moment.Moment;
    room_type_ids?: string[];
    propertyid?: number;
    currency_ref?: string;
    is_in_loyalty_mode?: boolean;
    promo_key?: string;
    is_in_agent_mode?: boolean;
    agent_id?: number;
    is_in_affiliate_mode?: boolean;
    affiliate_id?: number;
}>;
export type TExposedBookingAvailability = z.infer<typeof ExposedBookingAvailability>;
