{"version":3,"file":"property.service.js","sourceRoot":"","sources":["../../../src/services/api/property.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { PropertyHelpers } from './../app/property-helpers.service';\r\nimport { TExposedBookingAvailability } from '@/components/ir-booking-engine/ir-booking-page/ir-availability-header/availability';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { ISetupEntries } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking';\r\nimport { checkout_store, ICardProcessingWithCVC, updateUserFormData } from '@/stores/checkout.store';\r\nimport { injectHTML } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { Colors } from '../app/colors.service';\r\nimport { TGuest } from '@/models/user_form';\r\nimport { DataStructure } from '@/models/common';\r\nimport VariationService from '../app/variation.service';\r\n\r\nexport class PropertyService {\r\n  private propertyHelpers = new PropertyHelpers();\r\n  private static initialized = false;\r\n  colors: Colors = new Colors();\r\n\r\n  public async getExposedProperty(params: { id: number; language: string; aname: string | null; perma_link: string | null }, initTheme: boolean = true) {\r\n    const { data } = await axios.post(`/Get_Exposed_Property`, {\r\n      ...params,\r\n      currency: app_store.userPreferences.currency_id,\r\n      include_sales_rate_plans: true,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    if (result.My_Result.tags && !PropertyService.initialized) {\r\n      PropertyService.initialized = true;\r\n      result.My_Result.tags.map(({ key, value }) => {\r\n        if (!value) {\r\n          return;\r\n        }\r\n        switch (key) {\r\n          case 'header':\r\n            return injectHTML(value, 'head', 'first');\r\n          case 'body':\r\n            return injectHTML(value, 'body', 'first');\r\n          case 'footer':\r\n            return injectHTML(value, 'body', 'last');\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...(result.My_Result?.roomtypes ?? [])];\r\n    }\r\n    // } else {\r\n    //   const oldBookingStoreRoomTypes = [...booking_store.roomTypes];\r\n    //   booking_store.roomTypes = result.My_Result.roomtypes?.map(rt => {\r\n    //     const selectedRt = oldBookingStoreRoomTypes.find(r => r.id === rt.id);\r\n    //     return {\r\n    //       ...rt,\r\n    //       rateplans: rt.rateplans.map(rp => {\r\n    //         const currentRp = selectedRt.rateplans.find(s => s.id === rp.id);\r\n    //         if (currentRp) {\r\n    //           return { ...currentRp, short_name: rp.short_name };\r\n    //         }\r\n    //         return null;\r\n    //       }),\r\n    //     };\r\n    //   });\r\n    // }\r\n\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...(result.My_Result?.roomtypes ?? [])];\r\n    }\r\n    if (params.aname || params.perma_link) {\r\n      app_store.app_data = { ...app_store.app_data, property_id: result.My_Result.id };\r\n    }\r\n    app_store.app_data.displayMode = result.My_Result.be_listing_mode === 'grid' ? 'grid' : 'default';\r\n    app_store.property = { ...result.My_Result };\r\n    app_store.app_data.property_id = result.My_Result.id;\r\n    booking_store.tax_statement = { message: data.My_Result.tax_statement };\r\n    if (initTheme) {\r\n      this.colors.initTheme(result.My_Result);\r\n    }\r\n    return result.My_Result;\r\n  }\r\n  public async getExposedNonBookableNights(params: { from_date: string; to_date: string; porperty_id: number; aname: string; perma_link: string }) {\r\n    const { data } = await axios.post(`/Get_Exposed_Non_Bookable_Nights`, params);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const nights = {};\r\n    data.My_Result?.forEach(nbn => {\r\n      nights[nbn.night] = true;\r\n    });\r\n    app_store.nonBookableNights = nights;\r\n    return data.My_Result;\r\n  }\r\n  public async getExposedBookingAvailability(props: TExposedBookingAvailability): Promise<DataStructure> {\r\n    const roomtypeIds = this.propertyHelpers.collectRoomTypeIds(props);\r\n    const rateplanIds = this.propertyHelpers.collectRatePlanIds(props);\r\n    const data = await this.propertyHelpers.fetchAvailabilityData(props, roomtypeIds, rateplanIds);\r\n    this.propertyHelpers.updateBookingStore(data);\r\n    return data;\r\n  }\r\n\r\n  public async getExposedBooking(params: { booking_nbr: string; language: string; currency: string }, withExtras: boolean = true) {\r\n    const { data } = await axios.post(`/Get_Exposed_Booking`, {\r\n      ...params,\r\n      extras: withExtras\r\n        ? [\r\n            { key: 'payment_code', value: '' },\r\n            {\r\n              key: 'prepayment_amount',\r\n              value: '',\r\n            },\r\n            { key: 'payment_code', value: '' },\r\n            { key: 'agent_payment_mode', value: '' },\r\n          ]\r\n        : null,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    return result.My_Result as Booking;\r\n  }\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    if (app_store.setup_entries) {\r\n      return app_store.setup_entries;\r\n    }\r\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`, {\r\n      TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res: any[] = data.My_Result;\r\n    const setupEntries = {\r\n      arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n      ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n      bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n    };\r\n    app_store.setup_entries = setupEntries;\r\n    updateUserFormData('arrival_time', setupEntries.arrivalTime[0].CODE_NAME);\r\n    return setupEntries;\r\n  }\r\n\r\n  private filterRooms() {\r\n    let rooms = [];\r\n    const variationService = new VariationService();\r\n    Object.values(booking_store.ratePlanSelections).map(rt => {\r\n      Object.values(rt).map((rp: IRatePlanSelection) => {\r\n        if (rp.reserved > 0) {\r\n          [...new Array(rp.reserved)].map((_, index) => {\r\n            const { first_name, last_name } = this.propertyHelpers.extractFirstNameAndLastName(index, rp.guestName);\r\n            const variation = variationService.getVariationBasedOnInfants({\r\n              baseVariation: rp.checkoutVariations[index],\r\n              variations: rp.ratePlan.variations,\r\n              infants: rp.infant_nbr[index],\r\n            });\r\n            rooms.push({\r\n              identifier: null,\r\n              roomtype: rp.roomtype,\r\n              rateplan: rp.ratePlan,\r\n              prepayment_amount_gross: rp?.selected_variation?.prepayment_amount_gross,\r\n              unit: null,\r\n              smoking_option: rp.checkoutSmokingSelection[index],\r\n              occupancy: {\r\n                adult_nbr: rp.checkoutVariations[index].adult_nbr,\r\n                children_nbr: rp.checkoutVariations[index].child_nbr - rp.infant_nbr[index],\r\n                infant_nbr: rp.infant_nbr[index],\r\n              },\r\n              bed_preference: rp.is_bed_configuration_enabled ? rp.checkoutBedSelection[index] : null,\r\n              from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n              to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n              notes: null,\r\n              // days: this.propertyHelpers.generateDays(\r\n              //   booking_store.bookingAvailabilityParams.from_date,\r\n              //   booking_store.bookingAvailabilityParams.to_date,\r\n              //   Number(variation.discounted_amount) / getDateDifference(booking_store.bookingAvailabilityParams.from_date, booking_store.bookingAvailabilityParams.to_date),\r\n              // ),\r\n              days: variation.nights.map(n => ({\r\n                date: n.night,\r\n                amount: n.discounted_amount,\r\n                cost: null,\r\n              })),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: null,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rooms;\r\n  }\r\n  public async editExposedGuest(guest: TGuest, book_nbr: string): Promise<any> {\r\n    const { data } = await axios.post(`/Edit_Exposed_Guest`, { ...guest, book_nbr });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data.My_Result;\r\n  }\r\n\r\n  public async bookUser() {\r\n    const prePaymentAmount = checkout_store.prepaymentAmount;\r\n    try {\r\n      let guest: any = {\r\n        email: checkout_store.userFormData.email,\r\n        first_name: checkout_store.userFormData.firstName,\r\n        last_name: checkout_store.userFormData.lastName,\r\n        country_id: checkout_store.userFormData.country_id,\r\n        city: null,\r\n        mobile: checkout_store.userFormData.mobile_number,\r\n        address: '',\r\n        country_phone_prefix: checkout_store.userFormData.country_phone_prefix,\r\n        dob: null,\r\n        subscribe_to_news_letter: true,\r\n        cci:\r\n          booking_store.bookingAvailabilityParams.agent && booking_store.bookingAvailabilityParams.agent?.payment_mode?.code === '001'\r\n            ? null\r\n            : checkout_store.payment?.code === '001'\r\n              ? {\r\n                  nbr: (checkout_store.payment as ICardProcessingWithCVC)?.cardNumber?.replace(/ /g, ''),\r\n                  holder_name: (checkout_store.payment as ICardProcessingWithCVC)?.cardHolderName,\r\n                  expiry_month: (checkout_store.payment as ICardProcessingWithCVC)?.expiry_month.split('/')[0],\r\n                  expiry_year: (checkout_store.payment as ICardProcessingWithCVC)?.expiry_year.split('/')[1],\r\n                  cvc: (checkout_store.payment as ICardProcessingWithCVC).cvc,\r\n                }\r\n              : null,\r\n      };\r\n      const body = {\r\n        assign_units: false,\r\n        check_in: false,\r\n        is_pms: false,\r\n        is_direct: true,\r\n        language: app_store?.userPreferences?.language_id ?? 'en',\r\n        agent: booking_store.bookingAvailabilityParams.agent ? { id: booking_store.bookingAvailabilityParams.agent?.id } : null,\r\n        is_in_loyalty_mode: booking_store.bookingAvailabilityParams.loyalty,\r\n        promo_key: booking_store.bookingAvailabilityParams.coupon ?? null,\r\n        booking: {\r\n          booking_nbr: '',\r\n          from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n          to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n          remark: checkout_store.userFormData.message || null,\r\n          property: {\r\n            id: app_store.app_data.property_id,\r\n          },\r\n          source: { code: app_store.app_data.isFromGhs ? 'ghs' : new URL(window.location.href).origin, tag: app_store.app_data.stag, description: '' },\r\n          referrer_site: app_store.app_data.affiliate ? `https://${app_store.app_data.affiliate.sites[0].url}` : 'www.igloorooms.com',\r\n          currency: app_store.currencies.find(currency => currency.code.toString().toLowerCase() === app_store.userPreferences.currency_id.toLowerCase()),\r\n          arrival: { code: checkout_store.userFormData.arrival_time },\r\n          guest,\r\n          rooms: this.filterRooms(),\r\n        },\r\n        extras: [\r\n          {\r\n            key: 'payment_code',\r\n            value: checkout_store.payment.code,\r\n          },\r\n          prePaymentAmount > 0\r\n            ? {\r\n                key: 'prepayment_amount',\r\n                value: prePaymentAmount,\r\n              }\r\n            : null,\r\n          booking_store.bookingAvailabilityParams.agent\r\n            ? {\r\n                key: 'agent_payment_mode',\r\n                value: booking_store.bookingAvailabilityParams.agent.payment_mode.code,\r\n              }\r\n            : null,\r\n          {\r\n            key: 'selected_currency',\r\n            value: app_store.userPreferences.currency_id,\r\n          },\r\n        ].filter(f => f !== null),\r\n        pickup_info: checkout_store.pickup.location ? this.propertyHelpers.convertPickup(checkout_store.pickup) : null,\r\n      };\r\n\r\n      const { data } = await axios.post(`/DoReservation`, body);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getExposedGuest() {\r\n    const { data } = await axios.post(`/Get_Exposed_Guest`, {\r\n      email: null,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data.My_Result;\r\n    if (res === null) {\r\n      app_store.is_signed_in = false;\r\n      return;\r\n    }\r\n    // app_store.is_signed_in = true;\r\n    checkout_store.userFormData = {\r\n      ...checkout_store.userFormData,\r\n      country_id: res.country_id,\r\n      email: res.email,\r\n      firstName: res.first_name,\r\n      lastName: res.last_name,\r\n      mobile_number: res.mobile,\r\n      country_phone_prefix: res.country_phone_prefix,\r\n      id: res.id,\r\n    };\r\n  }\r\n}\r\n"]}