{"version":3,"file":"property.service.js","sourceRoot":"","sources":["../../../src/services/api/property.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { TExposedBookingAvailability } from '@/components/ir-booking-engine/ir-booking-page/ir-availibility-header/availability';\r\nimport { MissingTokenError, Token } from '@/models/Token';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { DataStructure } from '@/models/common';\r\nimport { TPickupFormData } from '@/models/pickup';\r\nimport { ISetupEntries } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking';\r\nimport { checkout_store, ICardProcessingWithCVC, ICardProcessingWithoutCVC, updateUserFormData } from '@/stores/checkout.store';\r\nimport { getDateDifference } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { addDays, format } from 'date-fns';\r\nimport { Colors } from '../app/colors.service';\r\nimport { RoomType } from '@/models/property';\r\nexport class PropertyService extends Token {\r\n  private static readonly MODE_MODIFY_RT = 'modify_rt';\r\n  private static readonly MODE_DEFAULT = 'default';\r\n  colors: Colors = new Colors();\r\n\r\n  public async getExposedProperty(params: { id: number; language: string; aname: string | null; perma_link: string | null }, initTheme: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, {\r\n      ...params,\r\n      currency: app_store.userPreferences.currency_id,\r\n      include_sales_rate_plans: !!booking_store.bookingAvailabilityParams.agent,\r\n    });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    // if (result.My_Result.tags) {\r\n    //   result.My_Result.tags.map(({ key, value }) => {\r\n    //     if (!value) {\r\n    //       return;\r\n    //     }\r\n    //     const script = document.createElement('script');\r\n    //     script.innerHTML = value;\r\n    //     if (key === 'header') {\r\n    //       document.head.appendChild(script)\r\n    //     } else if (key === 'body') {\r\n    //       document.body.appendChild(script)\r\n    //     }\r\n    //   })\r\n    // }\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...result.My_Result.roomtypes];\r\n    }\r\n    if (params.aname || params.perma_link) {\r\n      app_store.app_data = { ...app_store.app_data, property_id: result.My_Result.id };\r\n    }\r\n    app_store.property = { ...result.My_Result };\r\n    if (initTheme) {\r\n      this.colors.initTheme(result.My_Result);\r\n    }\r\n    return result.My_Result;\r\n  }\r\n\r\n  public async getExposedBookingAvailability(props: {\r\n    params: TExposedBookingAvailability;\r\n    identifier: string;\r\n    rp_id?: number;\r\n    rt_id?: number;\r\n    mode: 'modify_rt' | 'default';\r\n    adultChildConstraint?: string;\r\n  }): Promise<DataStructure> {\r\n    const token = this.getToken();\r\n    this.validateToken(token);\r\n    this.validateModeProps(props);\r\n\r\n    const roomtypeIds = this.collectRoomTypeIds(props);\r\n    const rateplanIds = this.collectRatePlanIds(props);\r\n    const data = await this.fetchAvailabilityData(token, props, roomtypeIds, rateplanIds);\r\n\r\n    this.updateBookingStore(data, props);\r\n\r\n    return data;\r\n  }\r\n\r\n  private validateToken(token: string | null) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n  }\r\n\r\n  private validateModeProps(props: any) {\r\n    if (props.mode === PropertyService.MODE_MODIFY_RT && (!props.rp_id || !props.rt_id)) {\r\n      throw new Error('Missing property: rp_id or rt_id is required in modify_rt mode');\r\n    }\r\n  }\r\n\r\n  private collectRoomTypeIds(props: any): number[] {\r\n    return props.rt_id ? [props.rt_id] : [];\r\n  }\r\n\r\n  private collectRatePlanIds(props: any): number[] {\r\n    return props.rp_id ? [props.rp_id] : [];\r\n  }\r\n\r\n  private async fetchAvailabilityData(token: string, props: any, roomtypeIds: number[], rateplanIds: number[]): Promise<any> {\r\n    const response = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, {\r\n      ...props.params,\r\n      identifier: props.identifier,\r\n      room_type_ids: roomtypeIds,\r\n      rate_plan_ids: rateplanIds,\r\n      skip_getting_assignable_units: true,\r\n      is_specific_variation: true,\r\n    });\r\n    const result = response.data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    return result;\r\n  }\r\n  sortRoomTypes(roomTypes: RoomType[], userCriteria: { adult_nbr: number; child_nbr: number }): RoomType[] {\r\n    return roomTypes.sort((a, b) => {\r\n      // Move room types with zero inventory to the end\r\n      if (a.inventory === 0 && b.inventory !== 0) return 1;\r\n      if (a.inventory !== 0 && b.inventory === 0) return -1;\r\n\r\n      // Check for matching or close variations\r\n      const matchA = a.rateplans.some(plan => plan.variations.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr));\r\n      const matchB = b.rateplans.some(plan => plan.variations.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr));\r\n\r\n      if (matchA && !matchB) return -1;\r\n      if (!matchA && matchB) return 1;\r\n\r\n      return 0; // If none of the above conditions apply, maintain original order\r\n    });\r\n  }\r\n\r\n  private updateBookingStore(data: any, props: any) {\r\n    let roomtypes = [...booking_store.roomTypes];\r\n    const newRoomtypes = data.My_Result.roomtypes;\r\n    if (props.mode === PropertyService.MODE_DEFAULT) {\r\n      roomtypes = this.updateInventory(roomtypes, newRoomtypes);\r\n      roomtypes = this.sortRoomTypes(roomtypes, {\r\n        adult_nbr: props.params.adult_nbr,\r\n        child_nbr: props.params.child_nbr,\r\n      });\r\n    } else {\r\n      roomtypes = this.updateRoomTypeRatePlans(roomtypes, newRoomtypes, props);\r\n    }\r\n    booking_store.roomTypes = roomtypes;\r\n    booking_store.tax_statement = { message: data.My_Result.tax_statement };\r\n    booking_store.enableBooking = true;\r\n  }\r\n\r\n  private updateInventory(roomtypes: RoomType[], newRoomtypes: RoomType[]): RoomType[] {\r\n    const newRoomtypesMap = new Map(newRoomtypes.map(rt => [rt.id, rt]));\r\n    console.log(roomtypes);\r\n    return roomtypes.reduce((updatedRoomtypes, rt) => {\r\n      const newRoomtype = newRoomtypesMap.get(rt.id);\r\n      if (!newRoomtype) {\r\n        return updatedRoomtypes;\r\n      }\r\n      console.log(rt);\r\n      const updatedRoomtype = {\r\n        ...rt,\r\n        inventory: newRoomtype.inventory,\r\n        rateplans: rt.rateplans.reduce((updatedRatePlans, rp) => {\r\n          const newRatePlan = newRoomtype.rateplans.find(newRP => newRP.id === rp.id);\r\n          if (!newRatePlan || !newRatePlan.is_active || !newRatePlan.is_booking_engine_enabled) {\r\n            return updatedRatePlans;\r\n          }\r\n          console.log(rp.variations);\r\n          updatedRatePlans.push({\r\n            ...newRatePlan,\r\n            variations: rp.variations,\r\n            selected_variation: newRatePlan.variations[0],\r\n          });\r\n          return updatedRatePlans;\r\n        }, []),\r\n      };\r\n      updatedRoomtypes.push(updatedRoomtype);\r\n      return updatedRoomtypes;\r\n    }, []);\r\n  }\r\n\r\n  private updateRoomTypeRatePlans(roomtypes: RoomType[], newRoomtypes: RoomType[], props: any) {\r\n    const selectedRoomTypeIdx = roomtypes.findIndex(rt => rt.id === props.rt_id);\r\n    if (selectedRoomTypeIdx === -1) {\r\n      throw new Error('Invalid RoomType');\r\n    }\r\n    const selectednewRoomTypeIdx = newRoomtypes.findIndex(rt => rt.id === props.rt_id);\r\n    if (selectedRoomTypeIdx === -1) {\r\n      throw new Error('Invalid RoomType');\r\n    }\r\n    if (selectednewRoomTypeIdx === -1) {\r\n      throw new Error('Invalid New RoomType');\r\n    }\r\n    const newRatePlan = newRoomtypes[selectednewRoomTypeIdx].rateplans?.find(rp => rp.id === props.rp_id);\r\n    if (!newRatePlan) {\r\n      throw new Error('Invalid New Rateplan');\r\n    }\r\n    const newVariation = newRatePlan.variations.find(v => v.adult_child_offering === props.adultChildConstraint);\r\n    console.log(newRatePlan.variations, props.adultChildConstraint);\r\n    if (!newVariation) {\r\n      throw new Error('Missing variation');\r\n    }\r\n    roomtypes[selectedRoomTypeIdx] = {\r\n      ...roomtypes[selectedRoomTypeIdx],\r\n      rateplans: roomtypes[selectedRoomTypeIdx].rateplans.map(rp => {\r\n        return {\r\n          ...rp,\r\n          variations: rp.variations.map(v => {\r\n            if (v.adult_child_offering === props.adultChildConstraint && rp.id === props.rp_id) {\r\n              return newVariation;\r\n            }\r\n            return v;\r\n          }),\r\n        };\r\n      }),\r\n    };\r\n    return roomtypes;\r\n  }\r\n\r\n  public async getExposedBooking(params: { booking_nbr: string; language: string }, withExtras: boolean = true) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Booking?Ticket=${token}`, { ...params, extras: withExtras ? [{ payment_code: '' }] : null });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    return result.My_Result as Booking;\r\n  }\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        if (app_store.setup_entries) {\r\n          return app_store.setup_entries;\r\n        }\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        const setupEntries = {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n        app_store.setup_entries = setupEntries;\r\n        updateUserFormData('arrival_time', setupEntries.arrivalTime[0].CODE_NAME);\r\n        return setupEntries;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private generateDays(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = to_date;\r\n    let currentDate = from_date;\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate < endDate) {\r\n      days.push({\r\n        date: format(currentDate, 'yyyy-MM-dd'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate = addDays(currentDate, 1);\r\n    }\r\n    return days;\r\n  }\r\n\r\n  private extractFirstNameAndLastName(index: number, guestName: string[]) {\r\n    const names = guestName[index].split(' ');\r\n    return { first_name: names[0] || null, last_name: names[1] || null };\r\n  }\r\n  private filterRooms() {\r\n    let rooms = [];\r\n    Object.values(booking_store.ratePlanSelections).map(rt => {\r\n      Object.values(rt).map((rp: IRatePlanSelection) => {\r\n        if (rp.reserved > 0) {\r\n          [...new Array(rp.reserved)].map((_, index) => {\r\n            const { first_name, last_name } = this.extractFirstNameAndLastName(index, rp.guestName);\r\n            rooms.push({\r\n              identifier: null,\r\n              roomtype: rp.roomtype,\r\n              rateplan: rp.ratePlan,\r\n              unit: null,\r\n              smoking_option: rp.checkoutSmokingSelection[index],\r\n              occupancy: {\r\n                adult_nbr: rp.checkoutVariations[index].adult_nbr,\r\n                children_nbr: rp.checkoutVariations[index].child_nbr,\r\n                infant_nbr: null,\r\n              },\r\n              bed_preference: rp.is_bed_configuration_enabled ? rp.checkoutBedSelection[index] : null,\r\n              from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n              to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n              notes: null,\r\n              days: this.generateDays(\r\n                booking_store.bookingAvailabilityParams.from_date,\r\n                booking_store.bookingAvailabilityParams.to_date,\r\n                +rp.checkoutVariations[index].amount / getDateDifference(booking_store.bookingAvailabilityParams.from_date, booking_store.bookingAvailabilityParams.to_date),\r\n              ),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: ['001', '004'].includes(checkout_store.payment?.code)\r\n                  ? () => {\r\n                      const payment = checkout_store.payment as ICardProcessingWithoutCVC | ICardProcessingWithCVC;\r\n                      return {\r\n                        nbr: payment?.cardNumber,\r\n                        holder_name: payment?.cardHolderName,\r\n                        expiry_month: payment?.expiry_month.split('/')[0],\r\n                        expiry_year: payment?.expiry_year.split('/')[1],\r\n                        cvc: payment?.code === '001' ? payment.cvc : null,\r\n                      };\r\n                    }\r\n                  : null,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rooms;\r\n  }\r\n  private convertPickup(pickup: TPickupFormData) {\r\n    let res: any = {};\r\n    const [hour, minute] = pickup.arrival_time.split(':');\r\n    res = {\r\n      booking_nbr: null,\r\n      is_remove: false,\r\n      currency: pickup.currency,\r\n      date: pickup.arrival_date,\r\n      details: pickup.flight_details || null,\r\n      hour: Number(hour),\r\n      minute: Number(minute),\r\n      nbr_of_units: pickup.number_of_vehicles,\r\n      selected_option: pickup.selected_option,\r\n      total: Number(pickup.due_upon_booking),\r\n    };\r\n    return res;\r\n  }\r\n  public async bookUser() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      let guest: any = {\r\n        email: checkout_store.userFormData.email,\r\n        first_name: checkout_store.userFormData.firstName,\r\n        last_name: checkout_store.userFormData.lastName,\r\n        country_id: checkout_store.userFormData.country_id,\r\n        city: null,\r\n        mobile: checkout_store.userFormData.mobile_number,\r\n        address: '',\r\n        phone_prefix: checkout_store.userFormData.country_code,\r\n        dob: null,\r\n        subscribe_to_news_letter: true,\r\n        cci: null,\r\n      };\r\n      const body = {\r\n        assign_units: false,\r\n        check_in: false,\r\n        is_pms: false,\r\n        is_direct: true,\r\n        agent: booking_store.bookingAvailabilityParams.agent ? { id: booking_store.bookingAvailabilityParams.agent } : null,\r\n        is_in_loyalty_mode: booking_store.bookingAvailabilityParams.loyalty,\r\n        promo_key: booking_store.bookingAvailabilityParams.coupon ?? null,\r\n        booking: {\r\n          booking_nbr: '',\r\n          from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n          to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n          remark: checkout_store.userFormData.message || null,\r\n          property: {\r\n            id: app_store.app_data.property_id,\r\n          },\r\n          source: app_store.app_data.source,\r\n          referrer_site: app_store.app_data.affiliate ? window.location.href : 'www.igloorooms.com',\r\n          currency: app_store.property.currency,\r\n          arrival: { code: checkout_store.userFormData.arrival_time },\r\n          guest,\r\n          rooms: this.filterRooms(),\r\n        },\r\n        extras: [\r\n          {\r\n            key: 'payment_code',\r\n            value: checkout_store.payment.code,\r\n          },\r\n        ],\r\n        pickup_info: checkout_store.pickup.location ? this.convertPickup(checkout_store.pickup) : null,\r\n      };\r\n\r\n      const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getExposedGuest() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n\r\n    const { data } = await axios.post(`/Get_Exposed_Guest?Ticket=${token}`, {\r\n      email: null,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data.My_Result;\r\n    if (res === null) {\r\n      app_store.is_signed_in = false;\r\n      return;\r\n    }\r\n    app_store.is_signed_in = true;\r\n    checkout_store.userFormData = {\r\n      ...checkout_store.userFormData,\r\n      country_id: res.country_id,\r\n      email: res.email,\r\n      firstName: res.first_name,\r\n      lastName: res.last_name,\r\n      mobile_number: res.mobile,\r\n      country_code: res.country_id,\r\n    };\r\n  }\r\n}\r\n"]}