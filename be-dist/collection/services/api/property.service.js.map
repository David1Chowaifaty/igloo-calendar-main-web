{"version":3,"file":"property.service.js","sourceRoot":"","sources":["../../../src/services/api/property.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAE1D,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAC7C,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,OAAO,eAAgB,SAAQ,KAAK;IACjC,KAAK,CAAC,kBAAkB,CAAC,MAAwC;QACtE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,iBAAiB,EAAE,CAAC;QAChC,CAAC;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,gCAAgC,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QACnF,MAAM,MAAM,GAAI,IAAsB,CAAC,SAAS,CAAC;QACjD,aAAa,CAAC,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAChD,OAAO,MAAM,CAAC;IAChB,CAAC;IACM,KAAK,CAAC,6BAA6B,CAAC,MAAmC;QAC5E,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,iBAAiB,EAAE,CAAC;QAChC,CAAC;QACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,4CAA4C,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;QAC/F,MAAM,MAAM,GAAI,IAAsB,CAAC,SAAS,CAAC;QACjD,aAAa,CAAC,SAAS,GAAG,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAChD,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;QACnC,OAAO,MAAM,CAAC;IAChB,CAAC;CACF","sourcesContent":["import { TExposedBookingAvailability } from '@/components/ir-availibility-header/availability';\nimport { MissingTokenError, Token } from '@/models/Token';\nimport { DataStructure } from '@/models/common';\nimport booking_store from '@/stores/booking';\nimport axios from 'axios';\n\nexport class PropertyService extends Token {\n  public async getExposedProperty(params: { id: number; language: string }) {\n    const token = this.getToken();\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, params);\n    const result = (data as DataStructure).My_Result;\n    booking_store.roomTypes = [...result.roomtypes];\n    return result;\n  }\n  public async getExposedBookingAvailability(params: TExposedBookingAvailability) {\n    const token = this.getToken();\n    if (!token) {\n      throw new MissingTokenError();\n    }\n    const { data } = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, params);\n    const result = (data as DataStructure).My_Result;\n    booking_store.roomTypes = [...result.roomtypes];\n    booking_store.enableBooking = true;\n    return result;\n  }\n}\n"]}