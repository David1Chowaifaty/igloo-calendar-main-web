{"version":3,"file":"property.service.js","sourceRoot":"","sources":["../../../src/services/api/property.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { TExposedBookingAvailability } from '@/components/ir-booking-engine/ir-booking-page/ir-availibility-header/availability';\r\nimport { MissingTokenError, Token } from '@/models/Token';\r\nimport { DataStructure } from '@/models/common';\r\nimport { TPickupFormData } from '@/models/pickup';\r\nimport { ISetupEntries } from '@/models/property';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking';\r\nimport { checkout_store, updateUserFormData } from '@/stores/checkout.store';\r\nimport { getDateDifference } from '@/utils/utils';\r\nimport axios from 'axios';\r\nimport { addDays, format } from 'date-fns';\r\n\r\nexport class PropertyService extends Token {\r\n  public async getExposedProperty(params: { id: number; language: string }) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Property?Ticket=${token}`, params);\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n    if (!app_store.fetchedBooking) {\r\n      booking_store.roomTypes = [...result.My_Result.roomtypes];\r\n    }\r\n    app_store.property = { ...result.My_Result };\r\n    return result.My_Result;\r\n  }\r\n  public async getExposedBookingAvailability(params: TExposedBookingAvailability) {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    let roomtypeIds = [];\r\n    const { injected, roomtype_id } = app_store.app_data;\r\n    if (injected) {\r\n      roomtypeIds.push(roomtype_id);\r\n    }\r\n    const { data } = await axios.post(`/Get_Exposed_Booking_Availability?Ticket=${token}`, { ...params, room_type_ids: roomtypeIds });\r\n    const result = data as DataStructure;\r\n    if (result.ExceptionMsg !== '') {\r\n      throw new Error(result.ExceptionMsg);\r\n    }\r\n\r\n    booking_store.roomTypes = [...result.My_Result.roomtypes];\r\n\r\n    booking_store.tax_statement = { message: result.My_Result.tax_statement };\r\n    booking_store.enableBooking = true;\r\n    return result;\r\n  }\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token) {\r\n        if (app_store.setup_entries) {\r\n          return app_store.setup_entries;\r\n        }\r\n        const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${token}`, {\r\n          TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const res: any[] = data.My_Result;\r\n        const setupEntries = {\r\n          arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n          ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n          bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n        };\r\n        app_store.setup_entries = setupEntries;\r\n        updateUserFormData('arrival_time', setupEntries.arrivalTime[0].CODE_NAME);\r\n        return setupEntries;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private generateDays(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = to_date;\r\n    let currentDate = from_date;\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate < endDate) {\r\n      days.push({\r\n        date: format(currentDate, 'yyyy-MM-dd'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate = addDays(currentDate, 1);\r\n    }\r\n    return days;\r\n  }\r\n\r\n  public filterRooms() {\r\n    let rooms = [];\r\n    Object.values(booking_store.ratePlanSelections).map(rt => {\r\n      Object.values(rt).map((rp: IRatePlanSelection) => {\r\n        if (rp.reserved > 0) {\r\n          [...new Array(rp.reserved)].map((_, index) => {\r\n            rooms.push({\r\n              identifier: null,\r\n              roomtype: rp.roomtype,\r\n              rateplan: rp.ratePlan,\r\n              unit: null,\r\n              smoking_option: rp.checkoutSmokingSelection[index],\r\n              occupancy: {\r\n                adult_nbr: rp.checkoutVariations[index].adult_nbr,\r\n                children_nbr: rp.checkoutVariations[index].child_nbr,\r\n                infant_nbr: null,\r\n              },\r\n              bed_preference: rp.is_bed_configuration_enabled ? rp.checkoutBedSelection[index] : null,\r\n              from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n              to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n              notes: null,\r\n              days: this.generateDays(\r\n                booking_store.bookingAvailabilityParams.from_date,\r\n                booking_store.bookingAvailabilityParams.to_date,\r\n                +rp.checkoutVariations[index].amount / getDateDifference(booking_store.bookingAvailabilityParams.from_date, booking_store.bookingAvailabilityParams.to_date),\r\n              ),\r\n              guest: {\r\n                email: null,\r\n                first_name: checkout_store.userFormData?.bookingForSomeoneElse\r\n                  ? rp.guestName[index]\r\n                  : (checkout_store.userFormData?.firstName || '') + ' ' + (checkout_store.userFormData?.lastName || ''),\r\n                last_name: null,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rooms;\r\n  }\r\n  private convertPickup(pickup: TPickupFormData) {\r\n    let res: any = {};\r\n    const [hour, minute] = pickup.arrival_time.split(':');\r\n    res = {\r\n      booking_nbr: null,\r\n      is_remove: false,\r\n      currency: pickup.currency,\r\n      date: pickup.arrival_date,\r\n      details: pickup.flight_details || null,\r\n      hour: Number(hour),\r\n      minute: Number(minute),\r\n      nbr_of_units: pickup.number_of_vehicles,\r\n      selected_option: pickup.selected_option,\r\n      total: Number(pickup.due_upon_booking),\r\n    };\r\n    return res;\r\n  }\r\n  public async bookUser() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      let guest: any = {\r\n        email: checkout_store.userFormData.email,\r\n        first_name: checkout_store.userFormData.firstName,\r\n        last_name: checkout_store.userFormData.lastName,\r\n        country_id: checkout_store.userFormData.country_id,\r\n        city: null,\r\n        mobile: checkout_store.userFormData.country_code + checkout_store.userFormData.mobile_number,\r\n        address: '',\r\n        dob: null,\r\n        subscribe_to_news_letter: true,\r\n        cci: null,\r\n      };\r\n      const body = {\r\n        assign_units: false,\r\n        check_in: false,\r\n        is_pms: false,\r\n        is_direct: true,\r\n        agent: booking_store.bookingAvailabilityParams.agent ? { id: booking_store.bookingAvailabilityParams.agent } : null,\r\n        is_in_loyalty_mode: booking_store.bookingAvailabilityParams.loyalty,\r\n        promo_key: booking_store.bookingAvailabilityParams.coupon ?? null,\r\n        booking: {\r\n          booking_nbr: '',\r\n          from_date: format(booking_store.bookingAvailabilityParams.from_date, 'yyyy-MM-dd'),\r\n          to_date: format(booking_store.bookingAvailabilityParams.to_date, 'yyyy-MM-dd'),\r\n          remark: checkout_store.userFormData.message || null,\r\n          property: {\r\n            id: app_store.app_data.property_id,\r\n          },\r\n          source: null,\r\n          referrer_site: 'www.igloorooms.com',\r\n          currency: app_store.property.currency,\r\n          arrival: { code: checkout_store.userFormData.arrival_time },\r\n          guest,\r\n          rooms: this.filterRooms(),\r\n        },\r\n        pickup_info: checkout_store.pickup.location ? this.convertPickup(checkout_store.pickup) : null,\r\n      };\r\n      const { data } = await axios.post(`/DoReservation?Ticket=${token}`, body);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n"]}