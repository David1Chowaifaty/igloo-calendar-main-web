{"version":3,"file":"payment.service.js","sourceRoot":"","sources":["../../../src/services/api/payment.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Booking } from '@/models/booking.dto';\r\nimport { IBrackets, IExposedApplicablePolicies } from '@/models/property';\r\nimport { MissingTokenError } from '@/models/Token';\r\nimport app_store from '@/stores/app.store';\r\nimport booking_store from '@/stores/booking';\r\nimport axios from 'axios';\r\nimport { isBefore, isSameDay, parseISO } from 'date-fns';\r\n\r\ntype TExposedApplicablePolicies = { data: IExposedApplicablePolicies[]; amount: number; room_type_id?: number; rate_plan_id?: number };\r\ninterface FetchCancelationMessageWithData {\r\n  data: IExposedApplicablePolicies[];\r\n  showCancelation?: boolean;\r\n}\r\n\r\ninterface FetchCancelationMessageWithoutData {\r\n  id: number;\r\n  roomTypeId: number;\r\n  bookingNbr?: string;\r\n  showCancelation?: boolean;\r\n  data?: null;\r\n}\r\n\r\ntype FetchCancelationMessageParams = FetchCancelationMessageWithData | FetchCancelationMessageWithoutData;\r\nexport type TBookingInfo = { statement: string; rp_name: string; rt_name: string };\r\nexport class PaymentService {\r\n  public async getExposedCancelationDueAmount(params: { booking_nbr: string; currency_id: number }) {\r\n    const { data } = await axios.post(`/Get_Exposed_Cancelation_Due_Amount`, {\r\n      ...params,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    return res;\r\n  }\r\n\r\n  public async GeneratePaymentCaller({\r\n    token,\r\n    params,\r\n    onRedirect,\r\n    onScriptRun,\r\n  }: {\r\n    token: string;\r\n    params: { booking_nbr: string; amount: number; currency_id: string | number; email: string; pgw_id: string };\r\n    onRedirect: (url: string) => void;\r\n    onScriptRun: (script: string) => void;\r\n  }) {\r\n    if (!token) {\r\n      throw new MissingTokenError();\r\n    }\r\n    const { data } = await axios.post(`/Generate_Payment_Caller`, {\r\n      ...params,\r\n      callback_url: `https://${app_store.property.perma_link}.bookingmystay.com/invoice`,\r\n    });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res = data['My_Result'];\r\n    if (res.type === 1) {\r\n      onRedirect(res.caller);\r\n    } else {\r\n      onScriptRun(res.caller);\r\n    }\r\n    return res;\r\n  }\r\n  public async RequestBookingCancelation(booking_nbr: string) {\r\n    const { data } = await axios.post(`/Request_Booking_Cancelation`, { BOOK_NBR: booking_nbr });\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async GetExposedApplicablePolicies({\r\n    params,\r\n    book_date,\r\n  }: {\r\n    params: {\r\n      booking_nbr: string;\r\n      property_id: number;\r\n      room_type_id: number;\r\n      rate_plan_id: number;\r\n      currency_id: number;\r\n      language: number | string;\r\n    };\r\n    book_date: Date;\r\n  }): Promise<TExposedApplicablePolicies> {\r\n    const { data } = await axios.post(`/Get_Exposed_Applicable_Policies`, params);\r\n    if (data['ExceptionMsg'] !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const result = data['My_Result'] as IExposedApplicablePolicies[];\r\n    return { data: result, amount: this.processAlicablePolicies(result, book_date).amount, room_type_id: params.room_type_id, rate_plan_id: params.rate_plan_id };\r\n  }\r\n  public processAlicablePolicies(policies: IExposedApplicablePolicies[], book_date: Date) {\r\n    let isInFreeCancelationZone = false;\r\n    const guarenteeAmount = policies.find(po => po.type === 'guarantee')?.brackets[0]?.gross_amount || 0;\r\n    let cancelation = policies.find(\r\n      po => po.type === 'cancelation' && po?.brackets?.some(b => isBefore(book_date, new Date(b.due_on)) || isSameDay(new Date(b.due_on), book_date), book_date),\r\n    );\r\n    if (cancelation) {\r\n      isInFreeCancelationZone = true;\r\n      const cancelationAmount = cancelation.brackets.find(b => isBefore(book_date, new Date(b.due_on)) || isSameDay(new Date(b.due_on), book_date))?.gross_amount ?? null;\r\n      return { amount: cancelationAmount > guarenteeAmount ? cancelationAmount : guarenteeAmount, isInFreeCancelationZone };\r\n    }\r\n    return { amount: guarenteeAmount, isInFreeCancelationZone };\r\n  }\r\n  public async fetchCancelationMessage(params: FetchCancelationMessageParams) {\r\n    let applicablePolicies: IExposedApplicablePolicies[] | null;\r\n    if ('data' in params && params.data) {\r\n      applicablePolicies = params.data;\r\n    } else {\r\n      console.log('fetching cancelation message');\r\n      const { id, roomTypeId, bookingNbr = booking_store.fictus_booking_nbr?.nbr } = params as FetchCancelationMessageWithoutData;\r\n      const result = await this.GetExposedApplicablePolicies({\r\n        book_date: new Date(),\r\n        params: {\r\n          booking_nbr: bookingNbr,\r\n          currency_id: app_store.currencies.find(c => c.code.toLowerCase() === (app_store.userPreferences.currency_id.toLowerCase() || 'usd')).id,\r\n          language: app_store.userPreferences.language_id,\r\n          property_id: app_store.app_data.property_id,\r\n          rate_plan_id: id,\r\n          room_type_id: roomTypeId,\r\n        },\r\n      });\r\n      applicablePolicies = result.data;\r\n    }\r\n    const message = applicablePolicies.find(t => t.type === 'cancelation')?.combined_statement;\r\n    return { message: message ? `${params.showCancelation ? '<b><u>Cancellation: </u></b>' : ''}${message}<br/>` : '<span></span>', data: applicablePolicies };\r\n  }\r\n  public async getBookingPrepaymentAmount(booking: Booking) {\r\n    const list = this.setUpBooking(booking);\r\n    let requests = await Promise.all(\r\n      list.map(l =>\r\n        this.GetExposedApplicablePolicies({\r\n          book_date: new Date(booking.booked_on.date),\r\n          params: {\r\n            booking_nbr: l.booking_nbr,\r\n            currency_id: booking.currency.id,\r\n            language: app_store.userPreferences.language_id,\r\n            rate_plan_id: l.ratePlanId,\r\n            room_type_id: l.roomTypeId,\r\n            property_id: app_store.property.id,\r\n          },\r\n        }),\r\n      ),\r\n    );\r\n    const cancelation_message = requests[0].data.find(t => t.type === 'cancelation')?.combined_statement;\r\n    const guarantee_message = requests[0].data.find(t => t.type === 'guarantee')?.combined_statement;\r\n    const cancelation_policies = requests\r\n      .map((r, idx) => {\r\n        const c_data = r.data.find(f => f.type === 'cancelation');\r\n        const { rp_name, rt_name } = list[idx];\r\n        if (c_data) {\r\n          return { statement: c_data.combined_statement, rp_name, rt_name };\r\n        }\r\n        return null;\r\n      })\r\n      .filter(f => f !== null);\r\n    return { amount: requests.reduce((prev, curr) => prev + curr.amount, 0), cancelation_message, guarantee_message, cancelation_policies };\r\n  }\r\n  private setUpBooking(booking: Booking) {\r\n    let list: { booking_nbr: string; ratePlanId: number; roomTypeId: number; rt_name: string; rp_name: string }[] = [];\r\n    booking.rooms.map(r =>\r\n      list.push({ booking_nbr: booking.booking_nbr, ratePlanId: r.rateplan.id, roomTypeId: r.roomtype.id, rp_name: r.rateplan.name, rt_name: r.roomtype.name }),\r\n    );\r\n    return list;\r\n  }\r\n  public findClosestDate(data: IBrackets[]): IBrackets {\r\n    let closestDateObj: IBrackets | null = null;\r\n    for (const item of data) {\r\n      const currentDueDate = parseISO(item.due_on);\r\n      if (!closestDateObj || isBefore(currentDueDate, parseISO(closestDateObj.due_on))) {\r\n        closestDateObj = item;\r\n      }\r\n    }\r\n    return closestDateObj;\r\n  }\r\n}\r\n"]}