{"version":3,"file":"pickup.service.js","sourceRoot":"","sources":["../../../src/services/app/pickup.service.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { renderTime } from '@/utils/utils';\nimport { TPickupFormData } from '@/models/pickup';\nimport app_store from '@/stores/app.store';\n\nexport class PickupService {\n  public async savePickup(params: TPickupFormData, booking_nbr: string, is_remove: boolean) {\n    try {\n      const splitTime = params.arrival_time.split(':');\n      await axios.post(`/Do_Pickup?Ticket=${app_store.app_data.token}`, {\n        booking_nbr,\n        is_remove,\n        currency: params.currency,\n        date: params.arrival_date,\n        details: params.flight_details,\n        hour: splitTime[0],\n        minute: splitTime[1],\n        nbr_of_units: params.number_of_vehicles,\n        selected_option: params.selected_option,\n        total: +params.due_upon_booking,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public transformDefaultPickupData(data: any) {\n    const arrival_time = renderTime(data.hour) + ':' + renderTime(data.minute);\n    return {\n      arrival_date: data.date,\n      arrival_time,\n      currency: data.currency,\n      due_upon_booking: data.total.toFixed(2),\n      flight_details: data.details,\n      location: data.selected_option.location.id,\n      number_of_vehicles: data.nbr_of_units,\n      selected_option: data.selected_option,\n      vehicle_type_code: data.selected_option.vehicle.code,\n    };\n  }\n  public getAvailableLocations(message: string): Array<{ id: number; value: string }> {\n    let locationsMap = new Map<number, { id: number; value: string }>();\n    app_store.property.pickup_service.allowed_options.forEach(option => {\n      if (!locationsMap.has(option.location.id)) {\n        locationsMap.set(option.location.id, {\n          value: message + ' ' + option.location.description,\n          id: option.location.id,\n        });\n      }\n    });\n    return Array.from(locationsMap.values());\n  }\n\n  public getNumberOfVehicles(capacity: number, numberOfPersons: number) {\n    let total_number_of_vehicles = Math.ceil(numberOfPersons / capacity);\n    let startNumber = total_number_of_vehicles > 1 ? total_number_of_vehicles : 1;\n    let bonus_number = total_number_of_vehicles > 1 ? 2 : 3;\n    return Array.from({ length: total_number_of_vehicles + bonus_number }, (_, i) => startNumber + i);\n  }\n  private getPickUpPersonStatus(code: string) {\n    const getCodeDescription = app_store.property.pickup_service.allowed_pricing_models.find(model => model.code === code);\n    if (!getCodeDescription) {\n      return null;\n    }\n    return getCodeDescription.description;\n  }\n  public updateDue(params: any) {\n    const getCodeDescription = this.getPickUpPersonStatus(params.code);\n    if (!getCodeDescription) {\n      return;\n    }\n    if (getCodeDescription === 'Person') {\n      return params.amount * params.numberOfPersons;\n    } else {\n      return params.amount * params.number_of_vehicles;\n    }\n  }\n}\n"]}