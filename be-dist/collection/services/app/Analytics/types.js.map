{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/services/app/Analytics/types.ts"],"names":[],"mappings":"","sourcesContent":["export type SearchParams = { from_date: string; to_date: string };\r\n\r\nexport type CheckoutParams = { value: string; currency: string };\r\n\r\nexport type PurchaseParams = { value: string; currency: string };\r\n\r\nexport type ConversionType = 'google' | 'facebook';\r\nexport type GooglePurchaseParams = PurchaseParams & { transaction_id: string; roomnights: string };\r\nexport interface IConversion {\r\n  init(): void;\r\n  trackSearch(params: SearchParams): void;\r\n  trackCheckout(params: CheckoutParams): void;\r\n  trackPurchase(params: PurchaseParams): void;\r\n}\r\n\r\ninterface Gtag {\r\n  (event: 'event', eventName: string, eventParams?: { [key: string]: any }): void;\r\n  (command: 'config', targetId: string, configParams?: GtagConfigParams): void;\r\n  (command: 'set', setConfig: GtagConfigParams): void;\r\n  (command: 'set', targetId: string, setConfig: GtagConfigParams): void;\r\n  (command: 'js', config: Date): void;\r\n  (command: 'get', targetId: string, fieldName: string, callback?: (value: any) => void): void;\r\n  (command: 'event', eventName: string, eventParams?: ControlParams & { [key: string]: any }): void;\r\n}\r\n\r\ninterface GtagConfigParams {\r\n  [key: string]: any;\r\n  send_page_view?: boolean;\r\n}\r\n\r\ninterface ControlParams {\r\n  groups?: string | string[];\r\n  non_interaction?: boolean;\r\n  transport_type?: 'beacon' | 'xhr' | 'image';\r\n  event_callback?: () => void;\r\n  event_timeout?: number;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    gtag: Gtag | undefined;\r\n    dataLayer: any[]; // You might need a more specific type if you use dataLayer directly\r\n  }\r\n}\r\n"]}