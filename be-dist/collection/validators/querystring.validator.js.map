{"version":3,"file":"querystring.validator.js","sourceRoot":"","sources":["../../src/validators/querystring.validator.ts"],"names":[],"mappings":"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","sourcesContent":["import app_store from '@/stores/app.store';\r\nimport { parseISO, isValid, isAfter, isSameDay, isBefore } from 'date-fns';\r\nimport { z } from 'zod';\r\n\r\nexport class QueryStringValidator {\r\n  private errors: string[] = [];\r\n\r\n  private dateSchema = z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, {\r\n    message: 'Date must be in YYYY-MM-DD format.',\r\n  });\r\n\r\n  public validateCheckin(checkinStr: string): Date | null {\r\n    this.errors = [];\r\n    try {\r\n      this.dateSchema.parse(checkinStr);\r\n    } catch (e) {\r\n      this.errors.push('Checkin date must be in YYYY-MM-DD format.');\r\n      return null;\r\n    }\r\n\r\n    const checkinDate = parseISO(checkinStr);\r\n    const today = new Date();\r\n\r\n    if (!isValid(checkinDate)) {\r\n      this.errors.push('Checkin date is not a valid date.');\r\n      return null;\r\n    }\r\n    if (isBefore(checkinDate, today) && !isSameDay(checkinDate, today)) {\r\n      this.errors.push('Checkin date must be today or in the future.');\r\n      return null;\r\n    }\r\n    if (app_store.nonBookableNights[checkinStr]) {\r\n      this.errors.push('Checkin date is unavailable.');\r\n      return null;\r\n    }\r\n    return checkinDate;\r\n  }\r\n\r\n  public validateCheckout(checkoutStr: string, checkinDate: Date): Date | null {\r\n    try {\r\n      this.dateSchema.parse(checkoutStr);\r\n    } catch (e) {\r\n      this.errors.push('Checkout date must be in YYYY-MM-DD format.');\r\n      return null;\r\n    }\r\n\r\n    const checkoutDate = parseISO(checkoutStr);\r\n\r\n    if (!isValid(checkoutDate)) {\r\n      this.errors.push('Checkout date is not a valid date.');\r\n      return null;\r\n    }\r\n\r\n    if (!isAfter(checkoutDate, checkinDate)) {\r\n      this.errors.push('Checkout date must be at least one day after checkin date.');\r\n      return null;\r\n    }\r\n    if (app_store.nonBookableNights[checkoutStr]) {\r\n      this.errors.push('Checkout date is unavailable.');\r\n      return null;\r\n    }\r\n    return checkoutDate;\r\n  }\r\n\r\n  public validateAdultCount(adultCount: string) {\r\n    return isNaN(Number(adultCount));\r\n  }\r\n\r\n  public validateChildrenCount(children: string) {\r\n    return isNaN(Number(children));\r\n  }\r\n\r\n  public getErrors(): string[] {\r\n    return this.errors;\r\n  }\r\n}\r\n"]}