{"version":3,"file":"ir-gallery.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-gallery/ir-gallery.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAO5C,MAAM,OAAO,SAAS;;sBAC6B,EAAE;2BACrB,CAAC;;IAQ/B,iBAAiB;QACf,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YAChD,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,aAAa,EAAE,KAAK;YACpB,cAAc,EAAE,KAAK;YACrB,SAAS,EAAE,YAAY;YACvB,wBAAwB,EAAE,KAAK;YAC/B,UAAU,EAAE;gBACV,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB;SACF,CAAC,CAAC;IACL,CAAC;IACD,kBAAkB;QAChB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,mBAAmB;YAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CACvB,+DAAQ,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAC,qBAAqB;gBAC7E,4DAAK,KAAK,EAAC,4BAA4B,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,aAAa;oBACrF,6DACE,IAAI,EAAC,cAAc,EACnB,CAAC,EAAC,uhBAAuhB,GACzhB,CACE;gBACN;oBAAO,IAAI,CAAC,WAAW;yBAAU,CAC1B,CACV;YACD,4DAAK,KAAK,EAAC,QAAQ,EAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACnD,4DAAK,KAAK,EAAC,gBAAgB,IACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CACxB,WAAK,KAAK,EAAC,cAAc;oBACvB,cAAQ,KAAK,EAAC,UAAU;wBACtB,SAAG,KAAK,EAAC,SAAS,mBAAiB,CAC5B;oBACT,WAAK,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAI,CACjG,CACP,CAAC,CACE;gBACN,4DAAK,KAAK,EAAC,oBAAoB,EAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC3D,4DAAK,KAAK,EAAC,4BAA4B,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,OAAO,EAAC,aAAa;wBACpF,6DAAM,CAAC,EAAC,0KAA0K,GAAG,CACjL,CACF;gBACN,4DAAK,KAAK,EAAC,oBAAoB,EAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;oBAC3D,4DAAK,KAAK,EAAC,4BAA4B,EAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,MAAM,EAAC,OAAO,EAAC,aAAa;wBACpF,6DAAM,CAAC,EAAC,2KAA2K,GAAG,CAClL,CACF,CACF;YACN,4DAAK,KAAK,EAAC,SAAS,IACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CACxB,cAAQ,KAAK,EAAC,cAAc;gBAC1B,cAAQ,KAAK,EAAC,UAAU;oBACtB,SAAG,KAAK,EAAC,SAAS,mBAAiB,CAC5B;gBACT,WAAK,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,GAAI,CAC5E,CACV,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { onAppDataChange } from '@/stores/app.store';\r\nimport { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\r\nimport Swiper from 'swiper';\r\nimport { Navigation } from 'swiper/modules';\r\n\r\n@Component({\r\n  tag: 'ir-gallery',\r\n  styleUrl: 'ir-gallery.css',\r\n  shadow: true,\r\n})\r\nexport class IrGallery {\r\n  @Prop() images: { url: string; alt: string }[] = [];\r\n  @Prop() totalImages: number = 0;\r\n  @Event() openGallery: EventEmitter<null>;\r\n  private swiperInstance: Swiper;\r\n\r\n  carouselEl: HTMLDivElement;\r\n  nextEl: HTMLElement;\r\n  prevEl: HTMLElement;\r\n\r\n  componentWillLoad() {\r\n    onAppDataChange('dir', () => {\r\n      this.reinitializeSwiper();\r\n    });\r\n  }\r\n  componentDidLoad() {\r\n    this.initializeSwiper();\r\n  }\r\n  initializeSwiper() {\r\n    this.swiperInstance = new Swiper(this.carouselEl, {\r\n      modules: [Navigation],\r\n      simulateTouch: false,\r\n      allowTouchMove: false,\r\n      direction: 'horizontal',\r\n      touchMoveStopPropagation: false,\r\n      navigation: {\r\n        nextEl: this.nextEl,\r\n        prevEl: this.prevEl,\r\n      },\r\n    });\r\n  }\r\n  reinitializeSwiper() {\r\n    if (this.swiperInstance) {\r\n      this.swiperInstance.destroy(true, true);\r\n    }\r\n    this.initializeSwiper();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"gallery-container\">\r\n        {this.totalImages > 0 && (\r\n          <button onClick={() => this.openGallery.emit(null)} class=\"total-images-number\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"15.75\" viewBox=\"0 0 576 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M160 80H512c8.8 0 16 7.2 16 16V320c0 8.8-7.2 16-16 16H490.8L388.1 178.9c-4.4-6.8-12-10.9-20.1-10.9s-15.7 4.1-20.1 10.9l-52.2 79.8-12.4-16.9c-4.5-6.2-11.7-9.8-19.4-9.8s-14.8 3.6-19.4 9.8L175.6 336H160c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16zM96 96V320c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H160c-35.3 0-64 28.7-64 64zM48 120c0-13.3-10.7-24-24-24S0 106.7 0 120V344c0 75.1 60.9 136 136 136H456c13.3 0 24-10.7 24-24s-10.7-24-24-24H136c-48.6 0-88-39.4-88-88V120zm208 24a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"\r\n              />\r\n            </svg>\r\n            <span>{this.totalImages} +</span>\r\n          </button>\r\n        )}\r\n        <div class=\"swiper\" ref={el => (this.carouselEl = el)}>\r\n          <div class=\"swiper-wrapper\">\r\n            {this.images.map(image => (\r\n              <div class=\"swiper-slide\">\r\n                <button class=\"absolute\">\r\n                  <p class=\"sr-only\">open gallery</p>\r\n                </button>\r\n                <img onClick={() => this.openGallery.emit(null)} draggable={false} src={image.url} alt={image.alt} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div class=\"swiper-button-prev\" ref={el => (this.prevEl = el)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"10\" width=\"6.25\" viewBox=\"0 0 320 512\">\r\n              <path d=\"M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\" />\r\n            </svg>\r\n          </div>\r\n          <div class=\"swiper-button-next\" ref={el => (this.nextEl = el)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"10\" width=\"6.25\" viewBox=\"0 0 320 512\">\r\n              <path d=\"M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"gallery\">\r\n          {this.images.map(image => (\r\n            <figure class=\"gallery-item\">\r\n              <button class=\"absolute\">\r\n                <p class=\"sr-only\">open gallery</p>\r\n              </button>\r\n              <img onClick={() => this.openGallery.emit(null)} src={image.url} alt={image.alt} />\r\n            </figure>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}