{"version":3,"file":"ir-drawer.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-drawer/ir-drawer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Prop, State, Watch, h, Event, EventEmitter, Method } from '@stencil/core';\r\nimport Modal from '@/utils/modal';\r\nimport { v4 } from 'uuid';\r\nimport { lockBodyScrolling, unlockBodyScrolling } from '../../../utils/scroll';\r\nimport { hasSlot } from '@/utils/slot';\r\n\r\n@Component({\r\n  tag: 'ir-drawer',\r\n  styleUrl: 'ir-drawer.css',\r\n  shadow: true,\r\n})\r\nexport class IrDrawer {\r\n  private componentId = `drawer-${v4()}`;\r\n  private drawer?: HTMLElement;\r\n  private modal?: Modal;\r\n  private panel?: HTMLElement;\r\n  private willShow = false;\r\n  private willHide = false;\r\n\r\n  @Element() host!: HTMLIrDrawerElement;\r\n\r\n  @State() hasFooter = false;\r\n  @State() isVisible = false;\r\n\r\n  @Prop({ mutable: true, reflect: true }) open = false;\r\n  @Prop() label = '';\r\n  @Prop() placement: 'top' | 'right' | 'bottom' | 'left' = 'right';\r\n  @Prop() contained = false;\r\n  @Prop() noHeader = false;\r\n\r\n  @Watch('open')\r\n  handleOpenChange() {\r\n    this.open ? this.show() : this.hide();\r\n  }\r\n  @Event({ eventName: 'six-drawer-show' }) sixShow!: EventEmitter<null>;\r\n\r\n  /** Emitted after the drawer opens and all transitions are complete. */\r\n  @Event({ eventName: 'six-drawer-after-show' }) sixAfterShow!: EventEmitter<null>;\r\n\r\n  /** Emitted when the drawer closes. Calling `event.preventDefault()` will prevent it from being closed. */\r\n  @Event({ eventName: 'six-drawer-hide' }) sixHide!: EventEmitter<null>;\r\n\r\n  /** Emitted after the drawer closes and all transitions are complete. */\r\n  @Event({ eventName: 'six-drawer-after-hide' }) sixAfterHide!: EventEmitter<null>;\r\n\r\n  /**\r\n   * Emitted when the drawer opens and the panel gains focus. Calling `event.preventDefault()` will prevent focus and\r\n   * allow you to set it on a different element in the drawer, such as an input or button.\r\n   */\r\n  @Event({ eventName: 'six-drawer-initial-focus' }) sixInitialFocus!: EventEmitter<null>;\r\n\r\n  /** Emitted when the overlay is clicked. Calling `event.preventDefault()` will prevent the drawer from closing. */\r\n  @Event({ eventName: 'six-drawer-overlay-dismiss' }) sixOverlayDismiss!: EventEmitter<null>;\r\n\r\n  connectedCallback() {\r\n    this.modal = new Modal(this.host, {\r\n      onFocusOut: () => (this.contained ? null : this.panel?.focus()),\r\n    });\r\n  }\r\n  componentWillLoad() {\r\n    this.handleSlotChange();\r\n\r\n    // Show on init if open\r\n    if (this.open) {\r\n      this.show();\r\n      // if the sidebar is open by default we need to manually reset the\r\n      // transition variables since there will be no transition event\r\n      this.resetTransitionVariables();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n  @Method()\r\n  async show() {\r\n    if (this.willShow || this.modal == null || this.panel == null || this.drawer == null) {\r\n      return;\r\n    }\r\n    const panel = this.panel;\r\n\r\n    const sixShow = this.sixShow.emit();\r\n    if (sixShow.defaultPrevented) {\r\n      this.open = false;\r\n      return;\r\n    }\r\n\r\n    this.willShow = true;\r\n    this.isVisible = true;\r\n    this.open = true;\r\n\r\n    // Lock body scrolling only if the drawer isn't contained\r\n    if (!this.contained) {\r\n      this.modal.activate();\r\n      lockBodyScrolling(this.host);\r\n    }\r\n\r\n    if (this.open) {\r\n      // Wait for the next frame before setting initial focus so the dialog is technically visible\r\n      requestAnimationFrame(() => {\r\n        const sixInitialFocus = this.sixInitialFocus.emit();\r\n        if (!sixInitialFocus.defaultPrevented) {\r\n          panel.focus({ preventScroll: true });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  @Method()\r\n  async hide() {\r\n    if (this.willHide || this.modal == null) {\r\n      return;\r\n    }\r\n\r\n    const sixHide = this.sixHide.emit();\r\n    if (sixHide.defaultPrevented) {\r\n      this.open = true;\r\n      return;\r\n    }\r\n\r\n    this.willHide = true;\r\n    this.open = false;\r\n    this.modal.deactivate();\r\n\r\n    unlockBodyScrolling(this.host);\r\n  }\r\n\r\n  private handleCloseClick = () => {\r\n    this.hide();\r\n  };\r\n\r\n  private handleKeyDown = (event: KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      this.hide();\r\n    }\r\n  };\r\n  private handleOverlayClick = () => {\r\n    const sixOverlayDismiss = this.sixOverlayDismiss.emit();\r\n\r\n    if (!sixOverlayDismiss.defaultPrevented) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  private handleSlotChange = () => {\r\n    this.hasFooter = hasSlot(this.host, 'footer');\r\n  };\r\n\r\n  private handleTransitionEnd = (event: TransitionEvent) => {\r\n    const target = event.target as HTMLElement;\r\n\r\n    // Ensure we only emit one event when the target element is no longer visible\r\n    if (event.propertyName === 'transform' && target.classList.contains('drawer__panel')) {\r\n      this.resetTransitionVariables();\r\n    }\r\n  };\r\n\r\n  private resetTransitionVariables() {\r\n    this.isVisible = this.open;\r\n    this.willShow = false;\r\n    this.willHide = false;\r\n    this.open ? this.sixAfterShow.emit() : this.sixAfterHide.emit();\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={el => (this.drawer = el)}\r\n        part=\"base\"\r\n        class={{\r\n          'drawer': true,\r\n          'drawer--open': this.open,\r\n          'drawer--visible': this.isVisible,\r\n          'drawer--top': this.placement === 'top',\r\n          'drawer--right': this.placement === 'right',\r\n          'drawer--bottom': this.placement === 'bottom',\r\n          'drawer--left': this.placement === 'left',\r\n          'drawer--contained': this.contained,\r\n          'drawer--fixed': !this.contained,\r\n          'drawer--has-footer': this.hasFooter,\r\n        }}\r\n        onKeyDown={this.handleKeyDown}\r\n        onTransitionEnd={this.handleTransitionEnd}\r\n      >\r\n        <div part=\"overlay\" class=\"drawer__overlay\" onClick={this.handleOverlayClick} tabIndex={-1} />\r\n\r\n        <div\r\n          ref={el => (this.panel = el)}\r\n          part=\"panel\"\r\n          class=\"drawer__panel\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-hidden={this.open ? 'false' : 'true'}\r\n          aria-label={this.noHeader ? this.label : null}\r\n          aria-labelledby={!this.noHeader ? `${this.componentId}-title` : null}\r\n          tabIndex={0}\r\n        >\r\n          {!this.noHeader && (\r\n            <header part=\"header\" class=\"drawer__header\">\r\n              <span part=\"title\" class=\"drawer__title\" id={`${this.componentId}-title`}>\r\n                <slot name=\"label\">\r\n                  {/* If there's no label, use an invisible character to prevent the heading from collapsing */}\r\n                  {this.label || String.fromCharCode(65279)}\r\n                </slot>\r\n              </span>\r\n              <six-icon-button exportparts=\"base:close-button\" class=\"drawer__close\" name=\"close\" onClick={this.handleCloseClick} />\r\n            </header>\r\n          )}\r\n\r\n          <div part=\"body\" class=\"drawer__body\">\r\n            <slot />\r\n          </div>\r\n\r\n          <footer part=\"footer\" class=\"drawer__footer\">\r\n            <slot name=\"footer\" onSlotchange={this.handleSlotChange} />\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}