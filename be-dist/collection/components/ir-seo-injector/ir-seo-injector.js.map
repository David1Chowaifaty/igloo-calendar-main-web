{"version":3,"file":"ir-seo-injector.js","sourceRoot":"","sources":["../../../src/components/ir-seo-injector/ir-seo-injector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAMhE,MAAM,OAAO,aAAa;;;;;;IAUxB,cAAc;QACZ,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,wCAAwC;IACxC,UAAU,CAAC,IAAY,EAAE,OAAe;QACtC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YACzC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QACD,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,4DAA4D;IAC5D,iBAAiB;QACf,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,kDAAkD;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Watch, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-seo-injector',\r\n  shadow: false,\r\n})\r\nexport class IrSeoInjector {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() pageTitle: string;\r\n  @Prop() pageDescription: string;\r\n  @Prop() pageKeywords: string;\r\n\r\n  @Watch('pageTitle')\r\n  @Watch('pageDescription')\r\n  @Watch('pageKeywords')\r\n  updateMetaTags() {\r\n    if (this.pageTitle) {\r\n      document.title = this.pageTitle;\r\n    }\r\n    this.updateMeta('description', this.pageDescription);\r\n    this.updateMeta('keywords', this.pageKeywords);\r\n  }\r\n\r\n  // Method to update or create a meta tag\r\n  updateMeta(name: string, content: string) {\r\n    let element = document.querySelector(`meta[name=\"${name}\"]`);\r\n    if (!element) {\r\n      element = document.createElement('meta');\r\n      element.setAttribute('name', name);\r\n      document.head.appendChild(element);\r\n    }\r\n    element.setAttribute('content', content);\r\n  }\r\n\r\n  // Lifecycle method to update meta tags when component loads\r\n  componentWillLoad() {\r\n    this.updateMetaTags();\r\n  }\r\n\r\n  render() {\r\n    // This component does not render anything visible\r\n    return null;\r\n  }\r\n}\r\n"]}