{"version":3,"file":"ir-signin.js","sourceRoot":"","sources":["../../../../../../src/components/ir-booking-engine/ir-nav/ir-auth/ir-signin/ir-signin.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\r\nimport { SignInValidtor, TSignInAuthTrigger, TSignInValidator } from '@/validators/auth.validator';\r\nimport { ZodError } from 'zod';\r\nimport { AuthService } from '@/services/api/auth.service';\r\nimport app_store from '@/stores/app.store';\r\nimport { TAuthNavigation } from '../auth.types';\r\n\r\n@Component({\r\n  tag: 'ir-signin',\r\n  styleUrl: 'ir-signin.css',\r\n  scoped: true,\r\n})\r\nexport class IrSignin {\r\n  @Prop() enableSignUp: boolean = false;\r\n  @State() signInParams: TSignInValidator = {};\r\n  @State() formState: {\r\n    cause: 'zod' | 'auth' | null;\r\n    status: 'empty' | 'valid' | 'invalid';\r\n    errors: Record<keyof TSignInValidator, string> | null;\r\n  } = { cause: null, errors: null, status: 'empty' };\r\n  @Event() authFinish: EventEmitter<{ state: 'success' | 'failed'; token: string }>;\r\n  @Event() navigate: EventEmitter<TAuthNavigation>;\r\n  @Event() signIn: EventEmitter<TSignInAuthTrigger>;\r\n\r\n  private authService = new AuthService();\r\n\r\n  componentWillLoad() {\r\n    this.authService.setToken(app_store.app_data.token);\r\n  }\r\n\r\n  modifySignInParams(params: Partial<TSignInValidator>) {\r\n    if (!this.signInParams) {\r\n      this.signInParams = {};\r\n    }\r\n    this.signInParams = { ...this.signInParams, ...params };\r\n  }\r\n\r\n  async login(params: { email?: string; password?: string }) {\r\n    try {\r\n      const token = await this.authService.login({ option: 'direct', bookingNumber: params.password, params });\r\n      this.authFinish.emit({ state: 'success', token });\r\n    } catch (error) {\r\n      this.authFinish.emit({ state: 'failed', token: null });\r\n      this.formState = {\r\n        cause: 'auth',\r\n        status: 'invalid',\r\n        errors: { email: error.message, password: error.message },\r\n      };\r\n    }\r\n  }\r\n  async handleSignIn(e: Event) {\r\n    e.preventDefault();\r\n    try {\r\n      this.formState.errors = null;\r\n      const params = SignInValidtor.parse(this.signInParams);\r\n      this.signIn.emit({ trigger: 'be', params });\r\n      await this.login(params);\r\n    } catch (error) {\r\n      let newErrors: Record<keyof TSignInValidator, string> = {\r\n        email: null,\r\n        password: null,\r\n      };\r\n      if (error instanceof ZodError) {\r\n        error.issues.map(e => {\r\n          newErrors[e.path[0]] = e.message;\r\n        });\r\n        this.formState = {\r\n          cause: 'zod',\r\n          status: 'invalid',\r\n          errors: { ...newErrors },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <h1 class=\"title\">Sign in to your booking</h1>\r\n        <form onSubmit={this.handleSignIn.bind(this)}>\r\n          {this.formState?.cause === 'auth' && this.formState?.errors && (\r\n            <div class=\"error\">\r\n              <ir-badge-group variant=\"error\" badge=\"Error\" message={this.formState?.errors?.email ?? ''}></ir-badge-group>\r\n            </div>\r\n          )}\r\n          <fieldset>\r\n            <ir-input\r\n              error={!!this.formState?.errors?.email}\r\n              onTextChanged={e => this.modifySignInParams({ email: e.detail })}\r\n              autofocus\r\n              inputId=\"email\"\r\n              label=\"Enter your email\"\r\n            ></ir-input>\r\n          </fieldset>\r\n          <fieldset>\r\n            <ir-input\r\n              error={!!this.formState?.errors?.password}\r\n              onTextChanged={e => this.modifySignInParams({ password: e.detail })}\r\n              inputId=\"password\"\r\n              type=\"password\"\r\n              label=\"Enter your booking number\"\r\n            ></ir-input>\r\n          </fieldset>\r\n          <ir-button type=\"submit\" class=\"ir-button\" label=\"Sign in\" size=\"md\"></ir-button>\r\n          <div class=\"divider\">\r\n            <div class=\"divider-line\"></div>\r\n            <span class=\"divider-text\">OR</span>\r\n            <div class=\"divider-line\"></div>\r\n          </div>\r\n        </form>\r\n        {/* {this.enableSignUp && (\r\n          <div class=\"flex items-center justify-center\">\r\n            <p class=\"dont-have-an-account\">Don't have an account?</p>\r\n            <button class=\"sign-up-button\" onClick={() => this.navigate.emit('register')}>\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        )} */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}