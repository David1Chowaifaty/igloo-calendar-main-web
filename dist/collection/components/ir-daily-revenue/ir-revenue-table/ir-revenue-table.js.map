{"version":3,"file":"ir-revenue-table.js","sourceRoot":"","sources":["../../../../src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-table.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAS7D,MAAM,OAAO,cAAc;IAL3B;QAMU,aAAQ,GAAwB,IAAI,GAAG,EAAE,CAAC;KAiCnD;IA3BC,iBAAiB;QACf,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,EAAE,mCAAQ,EAAE,KAAE,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,aAAa,GAAE,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,+BAA+B,IACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CACxB,EAAC,QAAQ;YACP,WAAK,KAAK,EAAC,uBAAuB;gBAChC,sBAAa;gBACb,sBAAa,CACT;YACL,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;gBACpD,OAAO,sBAAgB,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAmB,CAAC;YACpG,CAAC,CAAC,CACO,CACZ,CAAC,CAAC,CAAC,CACF,SAAG,KAAK,EAAC,6BAA6B,wEAAsE,CAC7G,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Fragment, h, Prop } from '@stencil/core';\nimport { DailyPaymentFilter, GroupedFolioPayment } from '../types';\nimport { IEntries } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-revenue-table',\n  styleUrl: 'ir-revenue-table.css',\n  scoped: true,\n})\nexport class IrRevenueTable {\n  @Prop() payments: GroupedFolioPayment = new Map();\n  @Prop() payTypes: IEntries[];\n  @Prop() filters: DailyPaymentFilter;\n\n  private payTypesObj: {};\n\n  componentWillLoad() {\n    let pt = {};\n    this.payTypes.forEach(p => {\n      pt = { ...pt, [p.CODE_NAME]: p.CODE_VALUE_EN };\n    });\n    this.payTypesObj = pt;\n  }\n\n  render() {\n    return (\n      <div class=\"card p-1 revenue-table__table\">\n        {this.payments.size > 0 ? (\n          <Fragment>\n            <div class=\"revenue-table__header\">\n              <p>Method</p>\n              <p>Amount</p>\n            </div>\n            {Array.from(this.payments.entries()).map(([key, p]) => {\n              return <ir-revenue-row key={key} payments={p} groupName={this.payTypesObj[key]}></ir-revenue-row>;\n            })}\n          </Fragment>\n        ) : (\n          <p class=\"text-center my-auto mx-auto\">There are no payment transactions recorded for the selected date.</p>\n        )}\n      </div>\n    );\n  }\n}\n"]}