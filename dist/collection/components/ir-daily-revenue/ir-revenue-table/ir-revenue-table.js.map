{"version":3,"file":"ir-revenue-table.js","sourceRoot":"","sources":["../../../../src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-table.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAGlF,OAAO,MAAM,MAAM,QAAQ,CAAC;AAO5B,MAAM,OAAO,cAAc;IAL3B;QAMU,aAAQ,GAAwB,IAAI,GAAG,EAAE,CAAC;KA0DnD;IAnDC,iBAAiB;QACf,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,EAAE,mCAAQ,EAAE,KAAE,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,aAAa,GAAE,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,+BAA+B;YACxC,4DAAK,KAAK,EAAE,8BAA8B;gBACxC,0DAAG,KAAK,EAAC,SAAS,2BAAyB;gBAC3C,4DAAK,KAAK,EAAC,EAAE;oBACX,sFACc,aAAa,EACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAC,OAAO,EACb,aAAa,EAAE,IAAI,EACnB,OAAO,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EACtC,aAAa,EAAE,GAAG,CAAC,EAAE;;4BACnB,GAAG,CAAC,wBAAwB,EAAE,CAAC;4BAC/B,GAAG,CAAC,eAAe,EAAE,CAAC;4BACtB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAA,GAAG,CAAC,MAAM,CAAC,KAAK,0CAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;wBACpE,CAAC;wBAED,4DAAK,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,4BAA4B;4BACpD,4DAAK,KAAK,EAAC,iCAAiC;gCAC1C,iEAAU,IAAI,EAAC,UAAU,EAAC,KAAK,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE,GAAa,CACnE;4BACN,8DAAO,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE,2EAA2E,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAU,CACxJ,CACS,CACb,CACF;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CACxB,EAAC,QAAQ;gBACP,WAAK,KAAK,EAAC,uBAAuB;oBAChC,sBAAa;oBACb,sBAAa,CACT;gBACL,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE;oBACpD,OAAO,sBAAgB,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAmB,CAAC;gBACpG,CAAC,CAAC,CACO,CACZ,CAAC,CAAC,CAAC,CACF,SAAG,KAAK,EAAC,6BAA6B,wEAAsE,CAC7G,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Fragment, h, Prop } from '@stencil/core';\nimport { GroupedFolioPayment } from '../types';\nimport { IEntries } from '@/models/IBooking';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-revenue-table',\n  styleUrl: 'ir-revenue-table.css',\n  scoped: true,\n})\nexport class IrRevenueTable {\n  @Prop() payments: GroupedFolioPayment = new Map();\n  @Prop() payTypes: IEntries[];\n  @Prop() date: string;\n\n  private payTypesObj: {};\n  @Event() fetchNewReports: EventEmitter<string>;\n\n  componentWillLoad() {\n    let pt = {};\n    this.payTypes.forEach(p => {\n      pt = { ...pt, [p.CODE_NAME]: p.CODE_VALUE_EN };\n    });\n    this.payTypesObj = pt;\n  }\n\n  render() {\n    return (\n      <div class=\"card p-1 revenue-table__table\">\n        <div class={'revenue-table__title-section'}>\n          <p class=\"m-0 p-0\">Payment transactions</p>\n          <div class=\"\">\n            <ir-date-picker\n              data-testid=\"pickup_date\"\n              date={this.date}\n              class=\"w-100\"\n              emitEmptyDate={true}\n              maxDate={moment().format('YYYY-MM-DD')}\n              onDateChanged={evt => {\n                evt.stopImmediatePropagation();\n                evt.stopPropagation();\n                this.fetchNewReports.emit(evt.detail.start?.format('YYYY-MM-DD'));\n              }}\n            >\n              <div slot=\"trigger\" class=\"revenue-table__date-picker\">\n                <div class=\"revenue-table__date-picker-icon\">\n                  <ir-icons name=\"calendar\" style={{ '--icon-size': '1rem' }}></ir-icons>\n                </div>\n                <input type=\"text\" value={this?.date} class={`revenue-table__date-picker-input form-control w-100 input-sm  text-center`} style={{ width: '100%' }}></input>\n              </div>\n            </ir-date-picker>\n          </div>\n        </div>\n        {this.payments.size > 0 ? (\n          <Fragment>\n            <div class=\"revenue-table__header\">\n              <p>Method</p>\n              <p>Amount</p>\n            </div>\n            {Array.from(this.payments.entries()).map(([key, p]) => {\n              return <ir-revenue-row key={key} payments={p} groupName={this.payTypesObj[key]}></ir-revenue-row>;\n            })}\n          </Fragment>\n        ) : (\n          <p class=\"text-center my-auto mx-auto\">There are no payment transactions recorded for the selected date.</p>\n        )}\n      </div>\n    );\n  }\n}\n"]}