{"version":3,"file":"ir-date-picker.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-date-picker/ir-date-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createPopper } from '@popperjs/core';\r\nimport { Component, h, Prop, Element, Event, EventEmitter, Method, Watch, State } from '@stencil/core';\r\nimport AirDatepicker from 'air-datepicker';\r\nimport localeEn from 'air-datepicker/locale/en';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-picker',\r\n  styleUrl: 'ir-date-picker.css',\r\n  shadow: false,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Determines whether the date picker is rendered inline or in a pop-up.\r\n   * If `true`, the picker is always visible inline.\r\n   */\r\n  @Prop() inline: boolean = false;\r\n\r\n  /**\r\n   * The initially selected date; can be a `Date` object or a string recognized by `AirDatepicker`.\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) date: string | Date | null = null;\r\n\r\n  /**\r\n   * Enables multiple dates.\r\n   * If `true`, multiple selection is allowed.\r\n   * If you pass a number (e.g. 3), that is the maximum number of selectable dates.\r\n   */\r\n  @Prop() multipleDates: boolean | number = false;\r\n\r\n  /**\r\n   * Whether the picker should allow range selection (start and end date).\r\n   */\r\n  @Prop() range: boolean = false;\r\n\r\n  /**\r\n   * Format for the date as it appears in the input field.\r\n   * Follows the `AirDatepicker` format rules.\r\n   */\r\n  @Prop() dateFormat: string = 'yyyy-MM-dd';\r\n\r\n  /**\r\n   * Enables the timepicker functionality (select hours and minutes).\r\n   */\r\n  @Prop() timepicker: boolean = false;\r\n\r\n  /**\r\n   * The earliest date that can be selected.\r\n   */\r\n  @Prop() minDate?: string | Date;\r\n\r\n  /**\r\n   * The latest date that can be selected.\r\n   */\r\n  @Prop() maxDate?: string | Date;\r\n\r\n  /**\r\n   * Disables the input and prevents interaction.\r\n   */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  /**\r\n   * Closes the picker automatically after a date is selected.\r\n   */\r\n  @Prop() autoClose: boolean = true;\r\n\r\n  /**\r\n   * Shows days from previous/next month in the current month's calendar.\r\n   */\r\n  @Prop() showOtherMonths: boolean = true;\r\n\r\n  /**\r\n   * Allows selecting days from previous/next month shown in the current view.\r\n   */\r\n  @Prop() selectOtherMonths: boolean = true;\r\n\r\n  /**\r\n   * Controls how the date picker is triggered.\r\n   * - **`true`**: The picker can be triggered by custom UI elements (provided via a `<slot name=\"trigger\">`).\r\n   * - **`false`**: A default button input is used to open the picker.\r\n   *\r\n   * Defaults to `true`.\r\n   */\r\n  @Prop() customPicker: boolean = true;\r\n\r\n  /**\r\n   * Pass a container element if you need the date picker to be appended to a specific element\r\n   * for styling or positioning (particularly for arrow rendering).\r\n   * If not provided, it defaults to `this.el`.\r\n   */\r\n  @Prop() container?: HTMLElement;\r\n\r\n  /**\r\n   * If `true`, the date picker instance is destroyed and rebuilt each time the `date` prop changes.\r\n   * This can be useful if you need the picker to fully re-initialize in response to dynamic changes,\r\n   * but note that it may affect performance if triggered frequently.\r\n   * Defaults to `false`.\r\n   */\r\n  @Prop() forceDestroyOnUpdate: boolean = false;\r\n\r\n  /**\r\n   * If `true`, the component will emit a `dateChanged` event when the selected date becomes empty (null).\r\n   * Otherwise, empty-date changes will be ignored (no event emitted).\r\n   *\r\n   * Defaults to `false`.\r\n   */\r\n  @Prop() emitEmptyDate: boolean = false;\r\n\r\n  @State() currentDate: Date | null = null;\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  @Event() datePickerFocus: EventEmitter<void>;\r\n  @Event() datePickerBlur: EventEmitter<void>;\r\n\r\n  private pickerRef!: HTMLInputElement;\r\n  private datePicker!: AirDatepicker<HTMLElement>;\r\n  private openDatePickerTimeout?: ReturnType<typeof setTimeout>;\r\n  private triggerSlot: HTMLElement | null = null;\r\n\r\n  componentWillLoad() {\r\n    // Sync initial @Prop to internal state\r\n    if (this.date) {\r\n      this.currentDate = this.toValidDate(this.date);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeDatepicker();\r\n    this.setupTriggerFocusHandling();\r\n  }\r\n\r\n  /**\r\n   * Set up focus handling for the custom trigger slot\r\n   */\r\n  private setupTriggerFocusHandling() {\r\n    if (!this.customPicker) return;\r\n\r\n    // Get the slot element\r\n    const slotEl = this.el.querySelector('[slot=\"trigger\"]') as HTMLSlotElement;\r\n    if (!slotEl) return;\r\n\r\n    // We'll consider the first assigned element as our trigger\r\n    this.triggerSlot = slotEl as HTMLElement;\r\n\r\n    // Add focus event listener to the trigger element\r\n    this.triggerSlot.addEventListener('focus', this.handleTriggerFocus.bind(this));\r\n\r\n    // Also handle click events on the trigger\r\n    this.triggerSlot.addEventListener('click', this.handleTriggerClick.bind(this));\r\n  }\r\n\r\n  private handleTriggerFocus() {\r\n    if (this.disabled) return;\r\n    this.openDatePicker();\r\n  }\r\n\r\n  private handleTriggerClick(event: Event) {\r\n    if (this.disabled) return;\r\n    event.preventDefault();\r\n    this.openDatePicker();\r\n  }\r\n\r\n  @Watch('date')\r\n  datePropChanged(newDate: string | Date | null, oldDate: string | Date | null) {\r\n    if (this.isSameDates(newDate, oldDate)) {\r\n      return;\r\n    }\r\n    this.updatePickerDate(newDate);\r\n  }\r\n\r\n  @Watch('minDate')\r\n  minDatePropChanged(newVal: string | Date, oldVal: string | Date) {\r\n    if (!this.datePicker) {\r\n      return;\r\n    }\r\n    if (!this.isSameDates(newVal, oldVal)) {\r\n      this.datePicker?.update({ minDate: this.toValidDate(newVal) });\r\n    }\r\n  }\r\n\r\n  @Watch('maxDate')\r\n  maxDatePropChanged(newVal: string | Date, oldVal: string | Date) {\r\n    if (!this.isSameDates(newVal, oldVal)) {\r\n      this.datePicker?.update({ maxDate: this.toValidDate(newVal) });\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async openDatePicker() {\r\n    // small delay to let the input mount if needed\r\n    this.openDatePickerTimeout = setTimeout(() => {\r\n      this.pickerRef.focus();\r\n    }, 20);\r\n  }\r\n\r\n  @Method()\r\n  async clearDatePicker() {\r\n    this.datePicker?.clear();\r\n  }\r\n\r\n  private isSameDates(d1: string | Date | null, d2: string | Date | null): boolean {\r\n    if (!d1 && !d2) return true;\r\n    if (!d1 || !d2) return false;\r\n    return moment(d1).isSame(moment(d2), 'day');\r\n  }\r\n\r\n  private toValidDate(value: string | Date | null): Date | null {\r\n    if (!value) return null;\r\n    const d = new Date(value);\r\n    return isNaN(d.getTime()) ? null : d;\r\n  }\r\n\r\n  private updatePickerDate(newDate: string | Date | null) {\r\n    const valid = this.toValidDate(newDate);\r\n\r\n    if (!valid) {\r\n      // If invalid or null, just clear\r\n      this.datePicker?.clear();\r\n      this.currentDate = null;\r\n      return;\r\n    }\r\n\r\n    // If it's a truly new date, select it\r\n    if (!this.isSameDates(this.currentDate, valid)) {\r\n      this.currentDate = valid;\r\n      if (this.forceDestroyOnUpdate) {\r\n        this.datePicker.destroy();\r\n        this.datePicker = null;\r\n        this.initializeDatepicker();\r\n      } else {\r\n        this.datePicker?.selectDate(valid);\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializeDatepicker() {\r\n    if (this.datePicker) return;\r\n\r\n    this.datePicker = new AirDatepicker(this.pickerRef, {\r\n      container: this.container,\r\n      inline: this.inline,\r\n      selectedDates: this.date ? [this.date] : [],\r\n      multipleDates: this.multipleDates,\r\n      range: this.range,\r\n      dateFormat: this.dateFormat,\r\n      timepicker: this.timepicker,\r\n      minDate: this.minDate,\r\n      maxDate: this.maxDate,\r\n      autoClose: this.autoClose,\r\n      locale: localeEn,\r\n      showOtherMonths: this.showOtherMonths,\r\n      selectOtherMonths: this.selectOtherMonths,\r\n      onHide: () => {\r\n        this.datePickerBlur.emit();\r\n      },\r\n      onShow: () => {\r\n        this.datePickerFocus.emit();\r\n      },\r\n      onSelect: ({ date }) => {\r\n        if (!date || !(date instanceof Date)) {\r\n          if (this.emitEmptyDate) {\r\n            this.dateChanged.emit({\r\n              start: null,\r\n              end: null,\r\n            });\r\n          }\r\n          return;\r\n        }\r\n        this.currentDate = date;\r\n        this.date = date;\r\n        this.dateChanged.emit({\r\n          start: moment(date),\r\n          end: moment(date),\r\n        });\r\n      },\r\n\r\n      position({ $datepicker, $target, $pointer, done }) {\r\n        let popper = createPopper($target, $datepicker, {\r\n          placement: 'top',\r\n          modifiers: [\r\n            {\r\n              name: 'flip',\r\n              options: { padding: { top: 0 } },\r\n            },\r\n            {\r\n              name: 'offset',\r\n              options: { offset: [0, 10] },\r\n            },\r\n            {\r\n              name: 'arrow',\r\n              options: { element: $pointer },\r\n            },\r\n          ],\r\n        });\r\n\r\n        return function completeHide() {\r\n          popper.destroy();\r\n          done();\r\n        };\r\n      },\r\n    });\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.openDatePickerTimeout) {\r\n      clearTimeout(this.openDatePickerTimeout);\r\n    }\r\n\r\n    // Clean up event listeners\r\n    if (this.triggerSlot) {\r\n      this.triggerSlot.removeEventListener('focus', this.handleTriggerFocus);\r\n      this.triggerSlot.removeEventListener('click', this.handleTriggerClick);\r\n    }\r\n\r\n    this.datePicker?.destroy?.();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"ir-date-picker-trigger\">\r\n        {this.customPicker && <slot name=\"trigger\"></slot>}\r\n        <input type=\"button\" disabled={this.disabled} class={this.customPicker ? 'ir-date-picker-element' : 'form-control input-sm'} ref={el => (this.pickerRef = el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}