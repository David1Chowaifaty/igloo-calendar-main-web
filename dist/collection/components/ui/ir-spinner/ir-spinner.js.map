{"version":3,"file":"ir-spinner.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-spinner/ir-spinner.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOzE,MAAM,OAAO,SAAS;;;;oBAKS,KAAK;;;IAGlC,iBAAiB;QACf,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,8BAA8B;QAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACO,UAAU;QAChB,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,mBAAmB,CAAC,CAAC;QACxE,CAAC;QACD,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAC/E,CAAC;QACD,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,oBAAoB,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IACO,eAAe,CAAC,KAAa,EAAE,GAA6F;QAClI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IACD,MAAM;QACJ,OAAO,EAAC,IAAI,sDAAQ,CAAC;IACvB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-spinner',\r\n  styleUrl: 'ir-spinner.css',\r\n  shadow: true,\r\n})\r\nexport class IrSpinner {\r\n  @Element() el: HTMLIrSpinnerElement;\r\n\r\n  @Prop() size: number;\r\n  @Prop() borderWidth: number;\r\n  @Prop() unit: 'px' | 'rem' = 'rem';\r\n  @Prop() color: string;\r\n\r\n  componentWillLoad() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('size')\r\n  handleSpinnerSizeChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('borderWidth')\r\n  handleSpinnerBorderWidthChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('unit')\r\n  handleSpinnerUnitChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('color')\r\n  handleSpinnerColorChange() {\r\n    this.initStyles();\r\n  }\r\n  private initStyles() {\r\n    if (this.size) {\r\n      this.applyCssElement(`${this.size}${this.unit}`, '--ir-spinner-size');\r\n    }\r\n    if (this.borderWidth) {\r\n      this.applyCssElement(`${this.borderWidth}${this.unit}`, '--ir-spinner-size');\r\n    }\r\n    if (this.color) {\r\n      this.applyCssElement(`${this.color}`, '--ir-spinner-color');\r\n    }\r\n  }\r\n  private applyCssElement(value: string, key: '--ir-spinner-color' | '--ir-spinner-border-width' | '--ir-spinner-size' | (string & {})) {\r\n    this.el.style.setProperty(key, value);\r\n  }\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n"]}