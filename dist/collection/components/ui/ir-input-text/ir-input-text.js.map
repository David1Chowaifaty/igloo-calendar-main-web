{"version":3,"file":"ir-input-text.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-input-text/ir-input-text.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAC/F,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAC1B,OAAO,KAAgC,MAAM,OAAO,CAAC;AAQrD,MAAM,OAAO,WAAW;IALxB;QAmBE,6CAA6C;QACrC,gBAAW,GAAG,EAAE,CAAC;QAKzB,2CAA2C;QACnC,aAAQ,GAAY,KAAK,CAAC;QAElC,+CAA+C;QACvC,SAAI,GAsBE,MAAM,CAAC;QAErB,0CAA0C;QAClC,cAAS,GAAY,KAAK,CAAC;QAEnC,6CAA6C;QACrC,eAAU,GAAY,IAAI,CAAC;QAEnC,uCAAuC;QAC/B,aAAQ,GAAuB,IAAI,CAAC;QAE5C,oDAAoD;QAC5C,kBAAa,GAAgC,MAAM,CAAC;QAE5D,oCAAoC;QAC5B,oBAAe,GAAkG,IAAI,CAAC;QAE9H,8BAA8B;QACtB,eAAU,GAA2F,MAAM,CAAC;QAEpH,sCAAsC;QAC9B,gBAAW,GAA8G,OAAO,CAAC;QAEzI,qDAAqD;QAC7C,eAAU,GAAgD,CAAC,CAAC;QAEpE,4CAA4C;QACpC,YAAO,GAAuB,SAAS,CAAC;QAEhD,oCAAoC;QAC5B,aAAQ,GAAY,KAAK,CAAC;QAElC,qCAAqC;QACZ,UAAK,GAAY,KAAK,CAAC;QAKhD,6CAA6C;QACrC,iBAAY,GAAa,IAAI,CAAC;QA0B7B,iBAAY,GAAY,KAAK,CAAC;KA2LxC;IAhLC,iBAAiB;QACf,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAGD,gBAAgB;QACd,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGD,iBAAiB,CAAC,QAAiB,EAAE,QAAiB;QACpD,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAGD,iBAAiB,CAAC,QAAgB,EAAE,QAAgB;QAClD,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpC,OAAO;QACT,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAClC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,KAAK,EAAE,CAAC;YAC5F,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAChD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,KAAa,EAAE,kBAA2B,KAAK;QACzE,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACb,IAAI,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;oBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACnE,CAAC;qBAAM,CAAC;oBACN,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC9E,CAAC;gBACD,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QACvD,MAAM,OAAO,GAAG,KAAK,KAAK,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAClC,CAAC;QACD,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAEO,gBAAgB,CAAC,CAAU;QACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACnE,CAAC;IAEO,UAAU,CAAC,CAAa;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE,CAAC;YAC5B,OAAO,CACL,gBAAU,KAAK,EAAC,iDAAiD;gBAC/D,aAAO,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAC,kCAAkC;oBAC/D,6BACiB,IAAI,CAAC,QAAQ,gBAChB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAC5C,KAAK,EAAE,4CAA4C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EACtF,EAAE,EAAC,cAAc;wBAEjB,YAAM,IAAI,EAAC,MAAM,GAAQ,CACpB,CACD;gBACR,aACE,SAAS,EAAE,IAAI,CAAC,SAAS,iBACZ,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,gBAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EACtE,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,oFAAoF,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAC9H,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,OAAO,EAAE,CAAC,CAAC,EAAE;wBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,EACD,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACvB,CACO,CACZ,CAAC;QACJ,CAAC;QACD,OAAO,CACL,WAAK,KAAK,EAAE,YAAY;YACtB,WAAK,KAAK,EAAC,qBAAqB;gBAC7B,IAAI,CAAC,KAAK,IAAI,CACb,WAAK,KAAK,EAAE,2BAA2B,IAAI,CAAC,UAAU,aAAa,IAAI,CAAC,UAAU,EAAE;oBAClF,aACE,OAAO,EAAE,IAAI,CAAC,EAAE,EAChB,KAAK,EAAE,oBAAoB,IAAI,CAAC,aAAa,KAAK,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,IACjJ,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EACxD,qBAAqB,IAAI,CAAC,UAAU,WAAW,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG;wBAEnG,IAAI,CAAC,KAAK;wBACV,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACnB,CACJ,CACP;gBACD,aACE,SAAS,EAAE,IAAI,CAAC,SAAS,iBACZ,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,gBAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EACtE,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EACH,IAAI,CAAC,eAAe;wBAClB,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;wBACvB,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,sBAAsB,IAAI,CAAC,QAAQ,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IACtJ,IAAI,CAAC,WACP,EAAE,EAER,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,OAAO,EAAE,CAAC,CAAC,EAAE;wBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,EACD,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACvB,CACE;YACL,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,IAAI,SAAG,KAAK,EAAC,eAAe,IAAE,IAAI,CAAC,YAAY,CAAK,CAChF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Event, EventEmitter, State, Watch, Element } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport IMask, { FactoryArg, InputMask } from 'imask';\r\nimport { ZodType } from 'zod';\r\n\r\n@Component({\r\n  tag: 'ir-input-text',\r\n  styleUrl: 'ir-input-text.css',\r\n  scoped: true,\r\n})\r\nexport class IrInputText {\r\n  @Element() el: HTMLIrInputTextElement;\r\n  /** Name attribute for the input field */\r\n  @Prop() name: string;\r\n\r\n  /** Value of the input field */\r\n  @Prop() value: string;\r\n\r\n  /** Label text for the input */\r\n  @Prop() label: string;\r\n\r\n  /** Placeholder text for the input */\r\n  @Prop() placeholder: string;\r\n\r\n  /** Additional inline styles for the input */\r\n  @Prop() inputStyles = '';\r\n\r\n  /** Whether the input field is required */\r\n  @Prop() required: boolean;\r\n\r\n  /** Whether the input field is read-only */\r\n  @Prop() readonly: boolean = false;\r\n\r\n  /** Input type (e.g., text, password, email) */\r\n  @Prop() type:\r\n    | 'text'\r\n    | 'password'\r\n    | 'email'\r\n    | 'number'\r\n    | 'tel'\r\n    | 'url'\r\n    | 'search'\r\n    | 'date'\r\n    | 'datetime-local'\r\n    | 'month'\r\n    | 'week'\r\n    | 'time'\r\n    | 'color'\r\n    | 'file'\r\n    | 'hidden'\r\n    | 'checkbox'\r\n    | 'radio'\r\n    | 'range'\r\n    | 'button'\r\n    | 'reset'\r\n    | 'submit'\r\n    | 'image' = 'text';\r\n\r\n  /** Whether the form has been submitted */\r\n  @Prop() submitted: boolean = false;\r\n\r\n  /** Whether to apply default input styling */\r\n  @Prop() inputStyle: boolean = true;\r\n\r\n  /** Text size inside the input field */\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  /** Position of the label: left, right, or center */\r\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\r\n\r\n  /** Background color of the label */\r\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\r\n\r\n  /** Text color of the label */\r\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\r\n\r\n  /** Border color/style of the label */\r\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\r\n\r\n  /** Label width as a fraction of 12 columns (1-11) */\r\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\r\n\r\n  /** Variant of the input: default or icon */\r\n  @Prop() variant: 'default' | 'icon' = 'default';\r\n\r\n  /** Whether the input is disabled */\r\n  @Prop() disabled: boolean = false;\r\n\r\n  /** Whether the input has an error */\r\n  @Prop({ mutable: true }) error: boolean = false;\r\n\r\n  /** Mask for the input field (optional) */\r\n  @Prop() mask: FactoryArg;\r\n\r\n  /** Whether the input should auto-validate */\r\n  @Prop() autoValidate?: boolean = true;\r\n\r\n  /** A Zod schema for validating the input */\r\n  @Prop() zod?: ZodType<any, any>;\r\n\r\n  /** A Zod parse type for validating the input */\r\n  @Prop() asyncParse?: boolean;\r\n\r\n  /** Key to wrap the value (e.g., 'price' or 'cost') */\r\n  @Prop() wrapKey?: string;\r\n\r\n  /** Forcing css style to the input */\r\n  @Prop() inputForcedStyle?: { [key: string]: string };\r\n\r\n  /** Input id for testing purposes*/\r\n  @Prop() testId: string;\r\n\r\n  /** Input max character length*/\r\n  @Prop() maxLength: number;\r\n\r\n  /** To clear all the Input base styling*/\r\n  @Prop() clearBaseStyles: boolean;\r\n\r\n  /** To clear all the Input base styling*/\r\n  @Prop() errorMessage: string;\r\n\r\n  @State() inputFocused: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) textChange: EventEmitter<any>;\r\n  @Event() inputBlur: EventEmitter<FocusEvent>;\r\n  @Event() inputFocus: EventEmitter<FocusEvent>;\r\n\r\n  private inputRef: HTMLInputElement;\r\n  private maskInstance: InputMask<FactoryArg>;\r\n\r\n  private id: string;\r\n\r\n  componentWillLoad() {\r\n    if (this.el.id) {\r\n      this.id = this.el.id;\r\n    } else {\r\n      this.id = v4();\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.mask) this.initMask();\r\n  }\r\n\r\n  @Watch('mask')\r\n  handleMaskChange() {\r\n    this.initMask();\r\n  }\r\n\r\n  @Watch('error')\r\n  handleErrorChange(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue) {\r\n      this.validateInput(this.value, true);\r\n    }\r\n  }\r\n\r\n  @Watch('value')\r\n  handleValueChange(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.validateInput(this.value);\r\n    }\r\n  }\r\n\r\n  private initMask() {\r\n    if (!this.mask || this.maskInstance) {\r\n      return;\r\n    }\r\n\r\n    this.maskInstance = IMask(this.inputRef, this.mask);\r\n    this.maskInstance.on('accept', () => {\r\n      const isEmpty = this.inputRef.value.trim() === '' || this.maskInstance.unmaskedValue === '';\r\n      if (isEmpty) {\r\n        this.inputRef.value = '';\r\n        this.textChange.emit(null);\r\n      } else {\r\n        this.inputRef.value = this.maskInstance.value;\r\n        this.textChange.emit(this.maskInstance.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async validateInput(value: string, forceValidation: boolean = false) {\r\n    if (!this.autoValidate && !forceValidation) {\r\n      return;\r\n    }\r\n    if (this.zod) {\r\n      try {\r\n        if (!this.asyncParse) {\r\n          this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value);\r\n        } else {\r\n          await this.zod.parseAsync(this.wrapKey ? { [this.wrapKey]: value } : value);\r\n        }\r\n        if (this.error) {\r\n          this.updateErrorState(false);\r\n        }\r\n      } catch (error) {\r\n        this.updateErrorState(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleInputChange(event: InputEvent) {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    const isEmpty = value === '';\r\n    if (this.maskInstance) {\r\n      this.maskInstance.value = value;\r\n    }\r\n    const maskedValue = isEmpty ? null : this.maskInstance ? this.maskInstance.value : value;\r\n    this.textChange.emit(maskedValue);\r\n  }\r\n\r\n  private updateErrorState(b: boolean) {\r\n    this.error = b;\r\n    this.inputRef.setAttribute('aria-invalid', b ? 'true' : 'false');\r\n  }\r\n\r\n  private handleBlur(e: FocusEvent) {\r\n    this.validateInput(this.value, this.submitted);\r\n    this.inputFocused = false;\r\n    this.inputBlur.emit(e);\r\n  }\r\n\r\n  render() {\r\n    if (this.variant === 'icon') {\r\n      return (\r\n        <fieldset class=\"position-relative has-icon-left input-container\">\r\n          <label htmlFor={this.id} class=\"input-group-prepend bg-white m-0\">\r\n            <span\r\n              data-disabled={this.disabled}\r\n              data-state={this.inputFocused ? 'focus' : ''}\r\n              class={`input-group-text icon-container bg-white ${this.error ? 'danger-border' : ''}`}\r\n              id=\"basic-addon1\"\r\n            >\r\n              <slot name=\"icon\"></slot>\r\n            </span>\r\n          </label>\r\n          <input\r\n            maxLength={this.maxLength}\r\n            data-testid={this.testId}\r\n            style={this.inputForcedStyle}\r\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\r\n            id={this.id}\r\n            ref={el => (this.inputRef = el)}\r\n            readOnly={this.readonly}\r\n            type={this.type}\r\n            class={`ir-input form-control bg-white pl-0 input-sm rate-input py-0 m-0 rateInputBorder ${this.error ? 'danger-border' : ''}`}\r\n            onBlur={this.handleBlur.bind(this)}\r\n            onFocus={e => {\r\n              this.inputFocused = true;\r\n              this.inputFocus.emit(e);\r\n            }}\r\n            placeholder={this.placeholder}\r\n            value={this.value}\r\n            onInput={this.handleInputChange.bind(this)}\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n          />\r\n        </fieldset>\r\n      );\r\n    }\r\n    return (\r\n      <div class={'form-group'}>\r\n        <div class=\"input-group row m-0\">\r\n          {this.label && (\r\n            <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\r\n              <label\r\n                htmlFor={this.id}\r\n                class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\r\n                  this.labelBackground ? 'bg-' + this.labelBackground : ''\r\n                } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\r\n              >\r\n                {this.label}\r\n                {this.required ? '*' : ''}\r\n              </label>\r\n            </div>\r\n          )}\r\n          <input\r\n            maxLength={this.maxLength}\r\n            data-testid={this.testId}\r\n            style={this.inputForcedStyle}\r\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\r\n            id={this.id}\r\n            ref={el => (this.inputRef = el)}\r\n            readOnly={this.readonly}\r\n            type={this.type}\r\n            class={\r\n              this.clearBaseStyles\r\n                ? `${this.inputStyles}`\r\n                : `${this.error ? 'border-danger' : ''} form-control text-${this.textSize} col-${this.label ? 12 - this.labelWidth : 12} ${this.readonly ? 'bg-white' : ''} ${\r\n                    this.inputStyles\r\n                  }`\r\n            }\r\n            onBlur={this.handleBlur.bind(this)}\r\n            onFocus={e => {\r\n              this.inputFocused = true;\r\n              this.inputFocus.emit(e);\r\n            }}\r\n            placeholder={this.placeholder}\r\n            value={this.value}\r\n            onInput={this.handleInputChange.bind(this)}\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n          />\r\n        </div>\r\n        {this.errorMessage && this.error && <p class=\"error-message\">{this.errorMessage}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}