{"version":3,"file":"ir-input-text.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-input-text/ir-input-text.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAC/F,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAC1B,OAAO,KAAgC,MAAM,OAAO,CAAC;AAQrD,MAAM,OAAO,WAAW;IALxB;QAmBE,6CAA6C;QACrC,gBAAW,GAAG,EAAE,CAAC;QAKzB,2CAA2C;QACnC,aAAQ,GAAY,KAAK,CAAC;QAElC,+CAA+C;QACvC,SAAI,GAsBE,MAAM,CAAC;QAErB,0CAA0C;QAClC,cAAS,GAAY,KAAK,CAAC;QAEnC,6CAA6C;QACrC,eAAU,GAAY,IAAI,CAAC;QAEnC,uCAAuC;QAC/B,aAAQ,GAAuB,IAAI,CAAC;QAE5C,oDAAoD;QAC5C,kBAAa,GAAgC,MAAM,CAAC;QAE5D,oCAAoC;QAC5B,oBAAe,GAAkG,IAAI,CAAC;QAE9H,8BAA8B;QACtB,eAAU,GAA2F,MAAM,CAAC;QAEpH,sCAAsC;QAC9B,gBAAW,GAA8G,OAAO,CAAC;QAEzI,qDAAqD;QAC7C,eAAU,GAAgD,CAAC,CAAC;QAEpE,4CAA4C;QACpC,YAAO,GAAuB,SAAS,CAAC;QAEhD,oCAAoC;QAC5B,aAAQ,GAAY,KAAK,CAAC;QAElC,qCAAqC;QACZ,UAAK,GAAY,KAAK,CAAC;QAKhD,6CAA6C;QACrC,iBAAY,GAAa,IAAI,CAAC;QA6B7B,iBAAY,GAAY,KAAK,CAAC;KAuMxC;IA5LC,iBAAiB;QACf,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI;YAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAGD,gBAAgB;QACd,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IAED,kBAAkB;IAClB,4DAA4D;IAC5D,iCAAiC;IACjC,+BAA+B;IAC/B,8CAA8C;IAC9C,QAAQ;IACR,MAAM;IACN,IAAI;IAGJ,iBAAiB,CAAC,QAAgB,EAAE,QAAgB;QAClD,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpC,OAAO;QACT,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAClC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,KAAK,EAAE,CAAC;YAC5F,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC9C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAChD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,KAAa,EAAE,kBAA2B,KAAK;QACzE,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC;YACD,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACb,IAAI,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;oBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACnE,CAAC;qBAAM,CAAC;oBACN,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC9E,CAAC;gBACD,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAiB;QACzC,MAAM,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QACvD,MAAM,OAAO,GAAG,KAAK,KAAK,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAClC,CAAC;QACD,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAEO,gBAAgB,CAAC,CAAU;QACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACnE,CAAC;IAEO,UAAU,CAAC,CAAa;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE,CAAC;YAC5B,OAAO,CACL,gBAAU,KAAK,EAAC,iDAAiD;gBAC/D,aAAO,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAC,kCAAkC;oBAC/D,6BACiB,IAAI,CAAC,QAAQ,gBAChB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAC5C,KAAK,EAAE,4CAA4C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EACtF,EAAE,EAAC,cAAc;wBAEjB,YAAM,IAAI,EAAC,MAAM,GAAQ,CACpB,CACD;gBACR,aACE,SAAS,EAAE,IAAI,CAAC,SAAS,iBACZ,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,gBAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EACtE,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,oFAAoF,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EAC9H,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,OAAO,EAAE,CAAC,CAAC,EAAE;wBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,EACD,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,YAAY,EAAE,IAAI,CAAC,YAAY,GAC/B,CACO,CACZ,CAAC;QACJ,CAAC;QACD,OAAO,CACL,WAAK,KAAK,EAAE,YAAY;YACtB,WAAK,KAAK,EAAC,qBAAqB;gBAC7B,IAAI,CAAC,KAAK,IAAI,CACb,WAAK,KAAK,EAAE,2BAA2B,IAAI,CAAC,UAAU,aAAa,IAAI,CAAC,UAAU,EAAE;oBAClF,aACE,OAAO,EAAE,IAAI,CAAC,EAAE,EAChB,KAAK,EAAE,oBAAoB,IAAI,CAAC,aAAa,KAAK,OAAO,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,EAAE,IACjJ,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EACxD,qBAAqB,IAAI,CAAC,UAAU,WAAW,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG;wBAEnG,IAAI,CAAC,KAAK;wBACV,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CACnB,CACJ,CACP;gBACD,aACE,SAAS,EAAE,IAAI,CAAC,SAAS,iBACZ,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,gBAAgB,gBAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EACtE,EAAE,EAAE,IAAI,CAAC,EAAE,EACX,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EACH,IAAI,CAAC,eAAe;wBAClB,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE;wBACvB,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,sBAAsB,IAAI,CAAC,QAAQ,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IACtJ,IAAI,CAAC,WACP,EAAE,EAER,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAClC,OAAO,EAAE,CAAC,CAAC,EAAE;wBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,EACD,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAC1C,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACvB,CACE;YACL,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,IAAI,SAAG,KAAK,EAAC,eAAe,IAAE,IAAI,CAAC,YAAY,CAAK,CAChsourcesContent":["import { Component, Prop, h, Event, EventEmitter, State, Watch, Element } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport IMask, { FactoryArg, InputMask } from 'imask';\nimport { ZodType } from 'zod';\n\n@Component({\n  tag: 'ir-input-text',\n  styleUrl: 'ir-input-text.css',\n  scoped: true,\n})\nexport class IrInputText {\n  @Element() el: HTMLIrInputTextElement;\n  /** Name attribute for the input field */\n  @Prop() name: string;\n\n  /** Value of the input field */\n  @Prop() value: string;\n\n  /** Label text for the input */\n  @Prop() label: string;\n\n  /** Placeholder text for the input */\n  @Prop() placeholder: string;\n\n  /** Additional inline styles for the input */\n  @Prop() inputStyles = '';\n\n  /** Whether the input field is required */\n  @Prop() required: boolean;\n\n  /** Whether the input field is read-only */\n  @Prop() readonly: boolean = false;\n\n  /** Input type (e.g., text, password, email) */\n  @Prop() type:\n    | 'text'\n    | 'password'\n    | 'email'\n    | 'number'\n    | 'tel'\n    | 'url'\n    | 'search'\n    | 'date'\n    | 'datetime-local'\n    | 'month'\n    | 'week'\n    | 'time'\n    | 'color'\n    | 'file'\n    | 'hidden'\n    | 'checkbox'\n    | 'radio'\n    | 'range'\n    | 'button'\n    | 'reset'\n    | 'submit'\n    | 'image' = 'text';\n\n  /** Whether the form has been submitted */\n  @Prop() submitted: boolean = false;\n\n  /** Whether to apply default input styling */\n  @Prop() inputStyle: boolean = true;\n\n  /** Text size inside the input field */\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  /** Position of the label: left, right, or center */\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\n\n  /** Background color of the label */\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\n\n  /** Text color of the label */\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\n\n  /** Border color/style of the label */\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\n\n  /** Label width as a fraction of 12 columns (1-11) */\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  /** Variant of the input: default or icon */\n  @Prop() variant: 'default' | 'icon' = 'default';\n\n  /** Whether the input is disabled */\n  @Prop() disabled: boolean = false;\n\n  /** Whether the input has an error */\n  @Prop({ mutable: true }) error: boolean = false;\n\n  /** Mask for the input field (optional) */\n  @Prop() mask: FactoryArg;\n\n  /** Whether the input should auto-validate */\n  @Prop() autoValidate?: boolean = true;\n\n  /** A Zod schema for validating the input */\n  @Prop() zod?: ZodType<any, any>;\n\n  /** A Zod parse type for validating the input */\n  @Prop() asyncParse?: boolean;\n\n  /** Key to wrap the value (e.g., 'price' or 'cost') */\n  @Prop() wrapKey?: string;\n\n  /** Forcing css style to the input */\n  @Prop() inputForcedStyle?: { [key: string]: string };\n\n  /** Input id for testing purposes*/\n  @Prop() testId: string;\n\n  /** Input max character length*/\n  @Prop() maxLength: number;\n\n  /** To clear all the Input base styling*/\n  @Prop() clearBaseStyles: boolean;\n\n  /** To clear all the Input base styling*/\n  @Prop() errorMessage: string;\n\n  /** Autocomplete behavior for the input (e.g., 'on', 'off', 'email', etc.) */\n  @Prop() autoComplete: string;\n\n  @State() inputFocused: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) textChange: EventEmitter<any>;\n  @Event() inputBlur: EventEmitter<FocusEvent>;\n  @Event() inputFocus: EventEmitter<FocusEvent>;\n\n  private inputRef: HTMLInputElement;\n  private maskInstance: InputMask<FactoryArg>;\n\n  private id: string;\n\n  componentWillLoad() {\n    if (this.el.id) {\n      this.id = this.el.id;\n    } else {\n      this.id = v4();\n    }\n  }\n\n  componentDidLoad() {\n    if (this.mask) this.initMask();\n  }\n\n  @Watch('mask')\n  handleMaskChange() {\n    this.initMask();\n  }\n  @Watch('autoValidate')\n  handleMaskChange1() {\n    console.log(this.autoValidate);\n  }\n\n  // @Watch('error')\n  // handleErrorChange(newValue: boolean, oldValue: boolean) {\n  //   if (newValue !== oldValue) {\n  //     if (this.autoValidate) {\n  //       this.validateInput(this.value, true);\n  //     }\n  //   }\n  // }\n\n  @Watch('value')\n  handleValueChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.validateInput(this.value);\n    }\n  }\n\n  private initMask() {\n    if (!this.mask || this.maskInstance) {\n      return;\n    }\n\n    this.maskInstance = IMask(this.inputRef, this.mask);\n    this.maskInstance.on('accept', () => {\n      const isEmpty = this.inputRef.value.trim() === '' || this.maskInstance.unmaskedValue === '';\n      if (isEmpty) {\n        this.inputRef.value = '';\n        this.textChange.emit(null);\n      } else {\n        this.inputRef.value = this.maskInstance.value;\n        this.textChange.emit(this.maskInstance.value);\n      }\n    });\n  }\n\n  private async validateInput(value: string, forceValidation: boolean = false) {\n    if (!this.autoValidate && !forceValidation) {\n      if (this.error) {\n        this.updateErrorState(false);\n      }\n      return;\n    }\n    if (this.zod) {\n      try {\n        if (!this.asyncParse) {\n          this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value);\n        } else {\n          await this.zod.parseAsync(this.wrapKey ? { [this.wrapKey]: value } : value);\n        }\n        if (this.error) {\n          this.updateErrorState(false);\n        }\n      } catch (error) {\n        console.log(error);\n        this.updateErrorState(true);\n      }\n    }\n  }\n\n  private handleInputChange(event: InputEvent) {\n    const value = (event.target as HTMLInputElement).value;\n    const isEmpty = value === '';\n    if (this.maskInstance) {\n      this.maskInstance.value = value;\n    }\n    const maskedValue = isEmpty ? null : this.maskInstance ? this.maskInstance.value : value;\n    this.textChange.emit(maskedValue);\n  }\n\n  private updateErrorState(b: boolean) {\n    this.error = b;\n    this.inputRef.setAttribute('aria-invalid', b ? 'true' : 'false');\n  }\n\n  private handleBlur(e: FocusEvent) {\n    this.validateInput(this.value, this.submitted);\n    this.inputFocused = false;\n    this.inputBlur.emit(e);\n  }\n\n  render() {\n    if (this.variant === 'icon') {\n      return (\n        <fieldset class=\"position-relative has-icon-left input-container\">\n          <label htmlFor={this.id} class=\"input-group-prepend bg-white m-0\">\n            <span\n              data-disabled={this.disabled}\n              data-state={this.inputFocused ? 'focus' : ''}\n              class={`input-group-text icon-container bg-white ${this.error ? 'danger-border' : ''}`}\n              id=\"basic-addon1\"\n            >\n              <slot name=\"icon\"></slot>\n            </span>\n          </label>\n          <input\n            maxLength={this.maxLength}\n            data-testid={this.testId}\n            style={this.inputForcedStyle}\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\n            id={this.id}\n            ref={el => (this.inputRef = el)}\n            readOnly={this.readonly}\n            type={this.type}\n            class={`ir-input form-control bg-white pl-0 input-sm rate-input py-0 m-0 rateInputBorder ${this.error ? 'danger-border' : ''}`}\n            onBlur={this.handleBlur.bind(this)}\n            onFocus={e => {\n              this.inputFocused = true;\n              this.inputFocus.emit(e);\n            }}\n            placeholder={this.placeholder}\n            value={this.value}\n            onInput={this.handleInputChange.bind(this)}\n            required={this.required}\n            disabled={this.disabled}\n            autoComplete={this.autoComplete}\n          />\n        </fieldset>\n      );\n    }\n    return (\n      <div class={'form-group'}>\n        <div class=\"input-group row m-0\">\n          {this.label && (\n            <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\n              <label\n                htmlFor={this.id}\n                class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\n                  this.labelBackground ? 'bg-' + this.labelBackground : ''\n                } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\n              >\n                {this.label}\n                {this.required ? '*' : ''}\n              </label>\n            </div>\n          )}\n          <input\n            maxLength={this.maxLength}\n            data-testid={this.testId}\n            style={this.inputForcedStyle}\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\n            id={this.id}\n            ref={el => (this.inputRef = el)}\n            readOnly={this.readonly}\n            type={this.type}\n            class={\n              this.clearBaseStyles\n                ? `${this.inputStyles}`\n                : `${this.error ? 'border-danger' : ''} form-control text-${this.textSize} col-${this.label ? 12 - this.labelWidth : 12} ${this.readonly ? 'bg-white' : ''} ${\n                    this.inputStyles\n                  }`\n            }\n            onBlur={this.handleBlur.bind(this)}\n            onFocus={e => {\n              this.inputFocused = true;\n              this.inputFocus.emit(e);\n            }}\n            placeholder={this.placeholder}\n            autoComplete={this.autoComplete}\n            value={this.value}\n            onInput={this.handleInputChange.bind(this)}\n            required={this.required}\n            disabled={this.disabled}\n          />\n        </div>\n        {this.errorMessage && this.error && <p class=\"error-message\">{this.errorMessage}</p>}\n      </div>\n    );\n  }\n}\n"]}