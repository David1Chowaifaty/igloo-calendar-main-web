{"version":3,"file":"ir-checkbox.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-checkbox/ir-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-checkbox',\n  styleUrl: 'ir-checkbox.css',\n  scoped: true,\n})\nexport class IrCheckbox {\n  @Prop() checked: boolean = false;\n  @Prop() label: string;\n  @Prop() checkboxId = v4();\n  @Prop() name: string;\n  @Prop() indeterminate: boolean;\n  @Prop() disabled: boolean;\n\n  @State() currentChecked = false;\n\n  @Event() checkChange: EventEmitter<boolean>;\n\n  @Watch('checked')\n  handleCheckedChange(newValue: boolean) {\n    if (newValue === this.currentChecked) {\n      return;\n    }\n    this.currentChecked = this.checked;\n  }\n\n  private checkboxRef: HTMLButtonElement;\n\n  componentWillLoad() {\n    this.currentChecked = this.checked;\n  }\n  componentDidLoad() {\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.checked));\n    }\n  }\n  handleCheckChange() {\n    this.currentChecked = !this.currentChecked;\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\n    }\n    this.checkChange.emit(this.currentChecked);\n  }\n  render() {\n    return (\n      <Host>\n        <button\n          disabled={this.disabled}\n          name={this.name}\n          onClick={this.handleCheckChange.bind(this)}\n          id={this.checkboxId}\n          data-state={this.currentChecked || this.indeterminate ? 'checked' : 'unchecked'}\n          value={'on'}\n          ref={ref => (this.checkboxRef = ref)}\n          type=\"button\"\n          role=\"checkbox\"\n          class=\"CheckboxRoot\"\n        >\n          {this.currentChecked && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\n              />\n            </svg>\n          )}\n          {this.indeterminate && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path fill=\"currentColor\" d=\"M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z\" />\n            </svg>\n          )}\n        </button>\n        <input type=\"checkbox\" indeterminate={this.indeterminate} aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.currentChecked} class=\"checkbox\" />\n        {this.label && <label htmlFor={this.checkboxId}>{this.label}</label>}\n      </Host>\n    );\n  }\n}\n"]}