{"version":3,"file":"ir-dropdown.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-dropdown/ir-dropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAO/E,MAAM,OAAO,UAAU;IALvB;QAM2B,SAAI,GAOzB,IAAI,CAAC;QACgB,WAAM,GAAQ,IAAI,CAAC;QACnC,SAAI,GAAY,KAAK,CAAC;KAgDhC;IA7CC,MAAM;QACJ,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;YACvB,OAAO,GAAG,CACR,UAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,mBAAmB,eAAY,UAAU;gBACzF,SACE,KAAK,EAAC,0BAA0B,EAChC,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC,iBACW,UAAU;oBAEtB,eAAS,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAY;oBACzC,yBAAgB,WAAW,EAAC,KAAK,EAAC,cAAc,IAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,CACV,CACL;gBACJ,UAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,eAAe,IAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBAC9B,OAAO,CACL,uBAAc,EAAE;wBACd,SACE,KAAK,EAAC,eAAe,iBACT,EAAE,EACd,OAAO,EAAE,GAAG,EAAE;gCACZ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gCACzE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;4BACpB,CAAC;4BAED,eAAS,IAAI,EAAE,KAAK,CAAC,IAAI,GAAY;4BACrC,yBAAiB,KAAK,CAAC,IAAI,IAAG,KAAK,CAAC,IAAI,CAAQ,CAC9C,CACD,CACN,CAAC;gBACJ,CAAC,CAAC,CACC,CACF,CACN,CAAC;QACJ,CAAC;QACD,OAAO,CACL,UAAI,KAAK,EAAC,gBAAgB,EAAC,EAAE,EAAC,sBAAsB,eAAW,iBAAiB,IAC7E,OAAO,CACL,CACN,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ir-dropdown',\n  styleUrl: 'ir-dropdown.css',\n  scoped: true,\n})\nexport class IrDropdown {\n  @Prop({ reflect: true }) data: {\n    name: string;\n    icon: string;\n    children: {\n      name: string;\n      icon: string;\n    }[];\n  } = null;\n  @Prop({ reflect: true }) object: any = null;\n  @State() show: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) dropdownItemCLicked: EventEmitter<{ name: string; object: any }>;\n  render() {\n    let content = null;\n    if (this.data !== null) {\n      content = (\n        <li class={this.show ? 'dropdown nav-item show' : 'dropdown nav-item'} data-menu=\"dropdown\">\n          <a\n            class=\"dropdown-toggle nav-link\"\n            onClick={() => {\n              this.show = !this.show;\n            }}\n            data-toggle=\"dropdown\"\n          >\n            <ir-icon icon={this.data.icon}></ir-icon>\n            <span data-i18n=\"Dashboard\" class=\"text-primary\">\n              {this.data.name}\n            </span>\n          </a>\n          <ul class={this.show ? 'dropdown-menu show' : 'dropdown-menu'}>\n            {this.data.children.map(child => {\n              return (\n                <li data-menu=\"\">\n                  <a\n                    class=\"dropdown-item\"\n                    data-toggle=\"\"\n                    onClick={() => {\n                      this.dropdownItemCLicked.emit({ name: child.name, object: this.object });\n                      this.show = false;\n                    }}\n                  >\n                    <ir-icon icon={child.icon}></ir-icon>\n                    <span data-i18n={child.name}>{child.name}</span>\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </li>\n      );\n    }\n    return (\n      <ul class=\"nav navbar-nav\" id=\"main-menu-navigation\" data-menu=\"menu-navigation\">\n        {content}\n      </ul>\n    );\n  }\n}\n"]}