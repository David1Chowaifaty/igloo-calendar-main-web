{"version":3,"file":"ir-textarea.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-textarea/ir-textarea.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOtF,MAAM,OAAO,UAAU;IALvB;QAME;;WAEG;QACK,SAAI,GAAG,CAAC,CAAC;QAEjB;;WAEG;QACK,SAAI,GAAG,CAAC,CAAC;QAEjB;;WAEG;QACK,SAAI,GAAG,EAAE,CAAC;QAElB;;WAEG;QACK,UAAK,GAAG,SAAS,CAAC;QAE1B;;WAEG;QACK,gBAAW,GAAG,eAAe,CAAC;QAEtC;;WAEG;QACK,UAAK,GAAG,EAAE,CAAC;QAEnB;;WAEG;QACK,cAAS,GAAW,GAAG,CAAC;QAOhC;;;WAGG;QACK,YAAO,GAA0B,SAAS,CAAC;QAEnD;;WAEG;QACK,eAAU,GAAgD,CAAC,CAAC;QAYpE;;WAEG;QACM,UAAK,GAAG,KAAK,CAAC;KAmDxB;IAtCC,uBAAuB,CAAC,QAAQ;QAC9B,IAAI,CAAC,KAAK,GAAG,QAAQ,KAAK,MAAM,CAAC;IACnC,CAAC;IACD,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YAC/B,OAAO,CACL,gBAAU,KAAK,EAAC,aAAa;gBAC3B,WAAK,KAAK,EAAE,2BAA2B,IAAI,CAAC,UAAU,mBAAmB;oBACvE,YAAM,KAAK,EAAC,kCAAkC,IAAE,IAAI,CAAC,KAAK,CAAQ,CAC9D;gBACN,+BACe,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,cAAc,EACrB,KAAK,kBAAI,MAAM,EAAE,MAAM,IAAK,IAAI,CAAC,MAAM,GACvC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,MAA8B,CAAC,KAAK,CAAC,gBAChE,IAAI,CAAC,KAAK,GACZ,CACH,CACZ,CAAC;QACJ,CAAC;QACD,OAAO,CACL,WAAK,KAAK,EAAE,YAAY;YACtB,iBAAQ,IAAI,CAAC,KAAK,CAAS;YAC3B,+BACe,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,MAAM,EAClB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,gBAAgB,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,EAAE,EACpF,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,MAA8B,CAAC,KAAK,CAAC,GACjE,CACR,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-textarea',\n  styleUrl: 'ir-textarea.css',\n  scoped: true,\n})\nexport class IrTextArea {\n  /**\n   * Number of visible text lines.\n   */\n  @Prop() rows = 3;\n\n  /**\n   * Number of visible character columns.\n   */\n  @Prop() cols = 5;\n\n  /**\n   * Unused property, intended to store textarea text.\n   */\n  @Prop() text = '';\n\n  /**\n   * Text label displayed above or beside the textarea.\n   */\n  @Prop() label = '<label>';\n\n  /**\n   * Placeholder text shown when input is empty.\n   */\n  @Prop() placeholder = '<placeholder>';\n\n  /**\n   * Current value of the textarea (supports two-way binding).\n   */\n  @Prop() value = '';\n\n  /**\n   * Maximum number of characters allowed.\n   */\n  @Prop() maxLength: number = 250;\n\n  /**\n   * Additional classes for the textarea element.\n   */\n  @Prop() textareaClassname: string;\n\n  /**\n   * Layout style of the textarea:\n   * `'default'` shows label above, `'prepend'` shows label on the left.\n   */\n  @Prop() variant: 'default' | 'prepend' = 'default';\n\n  /**\n   * Width of the label in grid columns (for `variant=\"prepend\"`).\n   */\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  /**\n   * Inline styles applied directly to the textarea.\n   */\n  @Prop() styles: { [key: string]: string };\n\n  /**\n   * `data-testid` for targeting in tests.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Indicates if the field is in an error state.\n   */\n  @State() error = false;\n\n  /**\n   * Emits when the textarea content changes.\n   *\n   * Example:\n   * ```tsx\n   * <ir-textarea onTextChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() textChange: EventEmitter<string>;\n\n  @Watch('aria-invalid')\n  handleAriaInvalidChange(newValue) {\n    this.error = newValue === 'true';\n  }\n  render() {\n    if (this.variant === 'prepend') {\n      return (\n        <fieldset class=\"input-group\">\n          <div class={`input-group-prepend col-${this.labelWidth} prepend-textarea`}>\n            <span class=\"input-group-text ta-prepend-text\">{this.label}</span>\n          </div>\n          <textarea\n            data-testid={this.testId}\n            value={this.value}\n            class={`form-control`}\n            style={{ height: '7rem', ...this.styles }}\n            maxLength={this.maxLength}\n            onChange={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n            aria-label={this.label}\n          ></textarea>\n        </fieldset>\n      );\n    }\n    return (\n      <div class={'form-group'}>\n        <label>{this.label}</label>\n        <textarea\n          data-testid={this.testId}\n          style={this.styles}\n          maxLength={this.maxLength}\n          rows={this.rows}\n          value={this.value}\n          class={`form-control ${this.textareaClassname} ${this.error ? 'border-danger' : ''}`}\n          placeholder={this.placeholder}\n          onInput={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n        ></textarea>\n      </div>\n    );\n  }\n}\n"]}