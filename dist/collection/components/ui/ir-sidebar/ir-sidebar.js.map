{"version":3,"file":"ir-sidebar.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-sidebar/ir-sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { handleBodyOverflow } from '@/utils/utils';\nimport { Component, Prop, h, Method, Event, EventEmitter, Watch, Listen, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-sidebar',\n  styleUrl: 'ir-sidebar.css',\n  shadow: true,\n})\nexport class IrSidebar {\n  @Element() el: HTMLIrSidebarElement;\n  @Prop() name: string;\n  @Prop() side: 'right' | 'left' = 'right';\n  @Prop() showCloseButton: boolean = true;\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n  @Prop() sidebarStyles: Partial<CSSStyleDeclaration>;\n  @Prop() label: string;\n  @Prop() preventClose: boolean;\n\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\n  @Event({ bubbles: true, composed: true }) beforeSidebarClose: EventEmitter;\n\n  private sidebarRef: HTMLDivElement;\n\n  applyStyles() {\n    for (const property in this.sidebarStyles) {\n      if (this.sidebarStyles.hasOwnProperty(property)) {\n        this.sidebarRef.style[property] = this.sidebarStyles[property];\n      }\n    }\n  }\n  @Watch('sidebarStyles')\n  handleSidebarStylesChange() {\n    this.applyStyles();\n  }\n  componentWillLoad() {\n    // this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidLoad() {\n    // If esc key is pressed, close the modal\n    this.applyStyles();\n    // document.addEventListener('keydown', this.handleKeyDown);\n  }\n  @Watch('open')\n  handleOpenChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      handleBodyOverflow(newValue);\n    }\n  }\n  @Listen('keydown', { target: 'body' })\n  handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape') {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      return this.toggleSidebar();\n    } else {\n      return;\n    }\n  }\n\n  @Method()\n  async toggleSidebar() {\n    if (this.preventClose) {\n      this.beforeSidebarClose.emit();\n      return;\n    }\n    this.irSidebarToggle.emit(this.open);\n  }\n\n  render() {\n    let className = '';\n    if (this.open) {\n      className = 'active';\n    } else {\n      className = '';\n    }\n\n    return [\n      <div\n        class={`backdrop ${className}`}\n        onClick={() => {\n          this.toggleSidebar();\n        }}\n      ></div>,\n      <div ref={el => (this.sidebarRef = el)} class={`sidebar-${this.side} ${className}`}>\n        {this.showCloseButton && (\n          <div class={'sidebar-title'}>\n            <p class={'p-0 m-0'}>{this.label}</p>\n            <div class={'p-0 m-0 sidebar-icon-container'}>\n              <ir-icon\n                class=\"\"\n                onIconClickHandler={() => {\n                  this.toggleSidebar();\n                }}\n              >\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n                  <path\n                    fill=\"#6b6f82\"\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                  />\n                </svg>\n              </ir-icon>\n            </div>\n          </div>\n        )}\n        <slot name=\"sidebar-body\" />\n      </div>,\n    ];\n  }\n}\n"]}