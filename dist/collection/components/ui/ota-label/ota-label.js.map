{"version":3,"file":"ota-label.js","sourceRoot":"","sources":["../../../../src/components/ui/ota-label/ota-label.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAChE,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAE1B,OAAO,OAAO,MAAM,wBAAwB,CAAC;AAM7C,MAAM,OAAO,QAAQ;IALrB;QAQU,oBAAe,GAAW,CAAC,CAAC;QAE3B,YAAO,GAAY,KAAK,CAAC;QAElC,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/B,CAAC,CAAC;KA4BH;IA1BC,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAEnG,OAAO,CACL,EAAC,IAAI;YACH,SAAG,KAAK,EAAE,aAAa,IAAG,IAAI,CAAC,KAAK,CAAK;YACzC,UAAI,KAAK,EAAC,kBAAkB,IACzB,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CACvC,UAAI,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAC,kBAAkB;gBACpC,MAAM,CAAC,SAAS;gBAAE,GAAG;gBACrB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,IAAI,KAAK,KAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,CACtF,cAAQ,KAAK,EAAC,uBAAuB,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa,IAC9D,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CACpE,CACV,CACE,CACN,CAAC,CACC,CAEA,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { IOtaNotes } from '@/models/booking.dto';\nimport locales from '@/stores/locales.store';\n@Component({\n  tag: 'ota-label',\n  styleUrl: 'ota-label.css',\n  scoped: true,\n})\nexport class OtaLabel {\n  @Prop() label: string;\n  @Prop() remarks: IOtaNotes[];\n  @Prop() maxVisibleItems: number = 3;\n\n  @State() showAll: boolean = false;\n\n  toggleShowAll = () => {\n    this.showAll = !this.showAll;\n  };\n\n  render() {\n    if (!this.remarks) {\n      return null;\n    }\n\n    const displayedRemarks = this.showAll ? this.remarks : this.remarks.slice(0, this.maxVisibleItems);\n\n    return (\n      <Host>\n        <p class={'label_title'}>{this.label}</p>\n        <ul class=\"ota-message-list\">\n          {displayedRemarks.map((remark, index) => (\n            <li key={v4()} class=\"ota-message-item\">\n              {remark.statement}{' '}\n              {this.remarks.length > this.maxVisibleItems && index === displayedRemarks.length - 1 && (\n                <button class=\"ota-visibility-toggle\" onClick={this.toggleShowAll}>\n                  {this.showAll ? locales.entries.Lcz_ShowLess : locales.entries.Lcz_ShowMore}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n        {/* Show toggle button if there are more remarks than `maxVisibleItems` */}\n      </Host>\n    );\n  }\n}\n"]}