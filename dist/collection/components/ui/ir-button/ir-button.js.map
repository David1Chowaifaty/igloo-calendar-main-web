{"version":3,"file":"ir-button.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-button/ir-button.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Event, EventEmitter, h, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { TIcons } from '../ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'ir-button',\r\n  styleUrl: 'ir-button.css',\r\n  scoped: true,\r\n})\r\nexport class IrButton {\r\n  @Prop() name: string;\r\n  @Prop() text: string;\r\n  @Prop() icon = 'ft-save';\r\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'outline' | 'link' = 'primary';\r\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\r\n  @Prop() btn_block = true;\r\n  @Prop() btn_disabled = false;\r\n  @Prop() btn_type = 'button';\r\n  @Prop() isLoading: boolean = false;\r\n  @Prop() btn_styles: string;\r\n  @Prop() btn_id: string = v4();\r\n  @Prop() variant: 'default' | 'icon' = 'default';\r\n  @Prop() icon_name: TIcons;\r\n  @Prop() visibleBackgroundOnHover: boolean = false;\r\n  @Prop() iconPosition: 'left' | 'right' = 'left';\r\n  @Prop() icon_style: any;\r\n  @Prop() btnStyle: { [key: string]: string };\r\n  @Prop() labelStyle: { [key: string]: string };\r\n  /** If true, will render `content` as HTML */\r\n  @Prop() renderContentAsHtml: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) clickHandler: EventEmitter<any>;\r\n\r\n  private buttonEl: HTMLButtonElement;\r\n  @Listen('animateIrButton', { target: 'body' })\r\n  handleButtonAnimation(e: CustomEvent) {\r\n    if (!this.buttonEl || e.detail !== this.btn_id) {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.buttonEl.classList.remove('bounce-3');\r\n    void this.buttonEl.offsetWidth;\r\n    this.buttonEl.classList.add('bounce-3');\r\n  }\r\n  render() {\r\n    if (this.variant === 'icon') {\r\n      return (\r\n        <button\r\n          id={this.btn_id}\r\n          class={`icon-button ${this.btn_styles} ${this.visibleBackgroundOnHover ? 'hovered_bg' : ''}`}\r\n          ref={el => (this.buttonEl = el)}\r\n          onClick={() => this.clickHandler.emit()}\r\n          type={this.btn_type}\r\n          disabled={this.btn_disabled}\r\n        >\r\n          {this.isLoading ? <span class=\"icon-loader\"></span> : <ir-icons class={'m-0 p-0'} name={this.icon_name}></ir-icons>}\r\n        </button>\r\n      );\r\n    }\r\n    let blockClass = this.btn_block ? 'btn-block' : '';\r\n    return (\r\n      <button\r\n        id={this.btn_id}\r\n        ref={el => (this.buttonEl = el)}\r\n        onClick={() => this.clickHandler.emit()}\r\n        class={`btn btn-${this.btn_color} ${this.btn_styles} ir-button-class  btn-${this.size} text-${this.textSize} ${blockClass}`}\r\n        type={this.btn_type}\r\n        style={this.btnStyle}\r\n        disabled={this.btn_disabled || this.isLoading}\r\n      >\r\n        {this.icon_name && this.iconPosition === 'left' && <ir-icons name={this.icon_name} style={this.icon_style}></ir-icons>}\r\n        {this.text &&\r\n          (this.renderContentAsHtml ? (\r\n            <span class=\"button-text m-0\" innerHTML={this.text} style={this.labelStyle}></span>\r\n          ) : (\r\n            <span style={this.labelStyle} class=\"button-text m-0\">\r\n              {this.text}\r\n            </span>\r\n          ))}\r\n        {this.isLoading ? <div class=\"btn_loader m-0 p-0\"></div> : this.iconPosition === 'right' && <ir-icons style={this.icon_style} name={this.icon_name}></ir-icons>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"]}