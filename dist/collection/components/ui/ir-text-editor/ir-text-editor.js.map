{"version":3,"file":"ir-text-editor.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-text-editor/ir-text-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, Event, EventEmitter, Host, Prop, Watch } from '@stencil/core';\nimport {\n  ClassicEditor,\n  AccessibilityHelp,\n  Autoformat,\n  AutoLink,\n  Autosave,\n  Bold,\n  Essentials,\n  Italic,\n  Paragraph,\n  SelectAll,\n  TextTransformation,\n  Undo,\n  Underline,\n  PageBreak,\n  Enter,\n  EditorConfig,\n  GeneralHtmlSupport,\n  ShiftEnter,\n  SourceEditing,\n  FullPage,\n  PluginConstructor,\n  ToolbarConfigItem,\n} from 'ckeditor5';\n@Component({\n  tag: 'ir-text-editor',\n  styleUrl: 'ir-text-editor.css',\n  shadow: false,\n})\nexport class IrTextEditor {\n  @Element() el: HTMLElement;\n  @Prop() value: string;\n  @Prop() error: boolean;\n  @Prop() placeholder: string;\n\n  @Prop() plugins: (string | PluginConstructor)[] = [];\n  @Prop() pluginsMode: 'replace' | 'add' = 'add';\n  @Prop() toolbarItems: ToolbarConfigItem[] = [];\n  @Prop() toolbarItemsMode: 'replace' | 'add' = 'add';\n\n  @Event() textChange: EventEmitter<string>;\n\n  private editorInstance: ClassicEditor;\n  private baseToolbarItems: ToolbarConfigItem[] = ['undo', 'redo', '|', 'sourceEditing', '|', 'bold', 'italic', 'underline'];\n  private basePlugins: (string | PluginConstructor)[] = [\n    SourceEditing,\n    GeneralHtmlSupport,\n    AccessibilityHelp,\n    Autoformat,\n    AutoLink,\n    Autosave,\n    Bold,\n    Underline,\n    PageBreak,\n    Essentials,\n    Enter,\n    Italic,\n    Paragraph,\n    SelectAll,\n    TextTransformation,\n    Undo,\n    ShiftEnter,\n    FullPage,\n  ];\n  componentDidLoad() {\n    this.initEditor();\n  }\n\n  @Watch('value')\n  onValueChanged(newValue: string) {\n    if (this.editorInstance) {\n      const currentEditorValue = this.editorInstance.getData();\n      if (newValue !== currentEditorValue) {\n        this.editorInstance.setData(newValue);\n      }\n    }\n  }\n  @Watch('error')\n  onErrorChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      const editorElement = this.el.querySelector('.ck-content') as HTMLDivElement;\n      if (editorElement) {\n        console.log('first');\n        editorElement.classList.toggle('error', newValue);\n      }\n    }\n  }\n\n  async initEditor() {\n    const plugins = this.pluginsMode === 'replace' ? this.plugins : this.basePlugins.concat(this.plugins);\n    const items = this.toolbarItemsMode === 'replace' ? this.toolbarItems : this.baseToolbarItems.concat(this.toolbarItems);\n    const editorConfig: EditorConfig = {\n      toolbar: {\n        items,\n        shouldNotGroupWhenFull: false,\n      },\n      plugins,\n      initialData: this.value,\n      htmlSupport: {\n        allow: [\n          {\n            name: /^(b|strong|br|p)$/,\n            attributes: true,\n            classes: true,\n            styles: true,\n          },\n        ],\n      },\n      // licenseKey: '',\n      placeholder: this.placeholder,\n    };\n\n    if (this.editorInstance) {\n      return;\n    }\n\n    const editorElement = this.el.querySelector('#editor') as HTMLDivElement;\n\n    try {\n      this.editorInstance = await ClassicEditor.create(editorElement, editorConfig);\n      this.editorInstance.editing.view.document.on('clipboardInput', (evt, data) => {\n        const textData = data.dataTransfer.getData('text/plain');\n        const htmlRegex = /<\\/?[a-z][\\s\\S]*>/i;\n\n        if (htmlRegex.test(textData)) {\n          // Process the text containing HTML tags\n          const fragment = this.editorInstance.data.htmlProcessor.toView(textData);\n          data.content = fragment;\n\n          // Prevent the default handling\n          evt.stop();\n\n          // Fire the 'inputTransformation' event manually\n          this.editorInstance.plugins.get('ClipboardPipeline').fire('inputTransformation', { content: fragment });\n        }\n      });\n      this.editorInstance.model.document.on('change:data', () => {\n        const editorData = this.editorInstance.getData();\n        this.handletextChange(editorData);\n      });\n      this.editorInstance.plugins.get('Enter').fire('');\n    } catch (error) {\n      console.error('There was a problem initializing the editor:', error);\n    }\n  }\n  handletextChange(data: string) {\n    this.textChange.emit(data);\n  }\n\n  disconnectedCallback() {\n    if (this.editorInstance) {\n      this.editorInstance.destroy().catch((error: any) => {\n        console.error('Error destroying editor:', error);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div id=\"editor\"></div>\n      </Host>\n    );\n  }\n}\n"]}