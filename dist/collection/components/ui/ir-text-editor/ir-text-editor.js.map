{"version":3,"file":"ir-text-editor.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-text-editor/ir-text-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, Event, EventEmitter, Host, Prop, Watch } from '@stencil/core';\r\nimport {\r\n  ClassicEditor,\r\n  AccessibilityHelp,\r\n  Autoformat,\r\n  AutoLink,\r\n  Autosave,\r\n  Bold,\r\n  Essentials,\r\n  Italic,\r\n  Paragraph,\r\n  SelectAll,\r\n  TextTransformation,\r\n  Undo,\r\n  Underline,\r\n  PageBreak,\r\n  Enter,\r\n  EditorConfig,\r\n  GeneralHtmlSupport,\r\n  ShiftEnter,\r\n  SourceEditing,\r\n  FullPage,\r\n  PluginConstructor,\r\n  ToolbarConfigItem,\r\n} from 'ckeditor5';\r\n@Component({\r\n  tag: 'ir-text-editor',\r\n  styleUrl: 'ir-text-editor.css',\r\n  shadow: false,\r\n})\r\nexport class IrTextEditor {\r\n  @Element() el: HTMLElement;\r\n  @Prop() value: string;\r\n  @Prop() error: boolean;\r\n  @Prop() placeholder: string;\r\n\r\n  @Prop() plugins: (string | PluginConstructor)[] = [];\r\n  @Prop() pluginsMode: 'replace' | 'add' = 'add';\r\n  @Prop() toolbarItems: ToolbarConfigItem[] = [];\r\n  @Prop() toolbarItemsMode: 'replace' | 'add' = 'add';\r\n\r\n  @Event() textChange: EventEmitter<string>;\r\n\r\n  private editorInstance: ClassicEditor;\r\n  private baseToolbarItems: ToolbarConfigItem[] = ['undo', 'redo', '|', 'sourceEditing', '|', 'bold', 'italic', 'underline'];\r\n  private basePlugins: (string | PluginConstructor)[] = [\r\n    SourceEditing,\r\n    GeneralHtmlSupport,\r\n    AccessibilityHelp,\r\n    Autoformat,\r\n    AutoLink,\r\n    Autosave,\r\n    Bold,\r\n    Underline,\r\n    PageBreak,\r\n    Essentials,\r\n    Enter,\r\n    Italic,\r\n    Paragraph,\r\n    SelectAll,\r\n    TextTransformation,\r\n    Undo,\r\n    ShiftEnter,\r\n    FullPage,\r\n  ];\r\n  componentDidLoad() {\r\n    this.initEditor();\r\n  }\r\n\r\n  @Watch('value')\r\n  onValueChanged(newValue: string) {\r\n    if (this.editorInstance) {\r\n      const currentEditorValue = this.editorInstance.getData();\r\n      if (newValue !== currentEditorValue) {\r\n        this.editorInstance.setData(newValue);\r\n      }\r\n    }\r\n  }\r\n  @Watch('error')\r\n  onErrorChanged(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue) {\r\n      const editorElement = this.el.querySelector('.ck-content') as HTMLDivElement;\r\n      if (editorElement) {\r\n        console.log('first');\r\n        editorElement.classList.toggle('error', newValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  async initEditor() {\r\n    const plugins = this.pluginsMode === 'replace' ? this.plugins : this.basePlugins.concat(this.plugins);\r\n    const items = this.toolbarItemsMode === 'replace' ? this.toolbarItems : this.baseToolbarItems.concat(this.toolbarItems);\r\n    const editorConfig: EditorConfig = {\r\n      toolbar: {\r\n        items,\r\n        shouldNotGroupWhenFull: false,\r\n      },\r\n      plugins,\r\n      initialData: this.value,\r\n      htmlSupport: {\r\n        allow: [\r\n          {\r\n            name: /^(b|strong|br|p)$/,\r\n            attributes: true,\r\n            classes: true,\r\n            styles: true,\r\n          },\r\n        ],\r\n      },\r\n      // licenseKey: '',\r\n      placeholder: this.placeholder,\r\n    };\r\n\r\n    if (this.editorInstance) {\r\n      return;\r\n    }\r\n\r\n    const editorElement = this.el.querySelector('#editor') as HTMLDivElement;\r\n\r\n    try {\r\n      this.editorInstance = await ClassicEditor.create(editorElement, editorConfig);\r\n      this.editorInstance.editing.view.document.on('clipboardInput', (evt, data) => {\r\n        const textData = data.dataTransfer.getData('text/plain');\r\n        const htmlRegex = /<\\/?[a-z][\\s\\S]*>/i;\r\n\r\n        if (htmlRegex.test(textData)) {\r\n          // Process the text containing HTML tags\r\n          const fragment = this.editorInstance.data.htmlProcessor.toView(textData);\r\n          data.content = fragment;\r\n\r\n          // Prevent the default handling\r\n          evt.stop();\r\n\r\n          // Fire the 'inputTransformation' event manually\r\n          this.editorInstance.plugins.get('ClipboardPipeline').fire('inputTransformation', { content: fragment });\r\n        }\r\n      });\r\n      this.editorInstance.model.document.on('change:data', () => {\r\n        const editorData = this.editorInstance.getData();\r\n        this.handletextChange(editorData);\r\n      });\r\n      this.editorInstance.plugins.get('Enter').fire('');\r\n    } catch (error) {\r\n      console.error('There was a problem initializing the editor:', error);\r\n    }\r\n  }\r\n  handletextChange(data: string) {\r\n    this.textChange.emit(data);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.editorInstance) {\r\n      this.editorInstance.destroy().catch((error: any) => {\r\n        console.error('Error destroying editor:', error);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"editor\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}