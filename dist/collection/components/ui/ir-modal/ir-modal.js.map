{"version":3,"file":"ir-modal.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-modal/ir-modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ir-modal',\n  styleUrl: 'ir-modal.css',\n  scoped: true,\n})\nexport class IrModal {\n  @Prop() modalTitle: string = 'Modal Title';\n  @Prop() modalBody: string = 'Modal Body';\n  @Prop() showTitle: boolean;\n\n  @Prop() rightBtnActive: boolean = true;\n  @Prop() leftBtnActive: boolean = true;\n\n  @Prop() rightBtnText: string = 'Confirm';\n  @Prop() leftBtnText: string = 'Close';\n\n  @Prop() isLoading: boolean = false;\n  @Prop() autoClose: boolean = true;\n\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\n\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\n  @Prop() iconAvailable: boolean = false;\n  @Prop() icon: string = '';\n\n  @State() isOpen: boolean = false;\n\n  @Method()\n  async closeModal() {\n    this.isOpen = false;\n  }\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n  }\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\n\n  @Listen('clickHandler')\n  btnClickHandler(event: CustomEvent) {\n    let target = event.target as HTMLInputElement;\n    let name = target.name;\n\n    if (name === this.leftBtnText) {\n      this.cancelModal.emit();\n      this.item = {};\n      this.closeModal();\n    } else if (name === this.rightBtnText) {\n      this.confirmModal.emit(this.item);\n      this.item = {};\n      if (this.autoClose) {\n        this.closeModal();\n      }\n    }\n  }\n\n  @Prop({ mutable: true }) item: any = {};\n\n  render() {\n    return [\n      <div\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\n        onClick={() => {\n          this.cancelModal.emit();\n          if (this.autoClose && !this.isLoading) {\n            this.closeModal();\n          }\n        }}\n      ></div>,\n      <div data-state={this.isOpen ? 'opened' : 'closed'} class={`ir-modal`} tabindex=\"-1\">\n        <div class={`ir-alert-content p-2`}>\n          {this.showTitle && (\n            <div class={`ir-alert-header`}>\n              {/*\n            <p class=\"font-weight-bold p-0 my-0 mb-1\">\n              {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} \n               {this.modalBody} \n              {this.modalTitle}\n            </p>\n            */}\n              {/* <div class=\"font-weight-bold d-flex align-items-center font-size-large my-0 py-0\">\n              <ir-icon\n                icon=\"ft-x\"\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.closeModal();\n                  this.cancelModal.emit();\n                }}\n              ></ir-icon>\n            </div> */}\n              <p>{this.modalTitle}</p>\n            </div>\n          )}\n          <div class=\"modal-body text-left p-0 mb-2\">\n            <div>{this.modalBody}</div>\n          </div>\n\n          <div class={`ir-alert-footer border-0  d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\n            {this.leftBtnActive && <ir-button btn_disabled={this.isLoading} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\n            {this.rightBtnActive && (\n              <ir-button\n                btn_color={this.rightBtnColor}\n                btn_disabled={this.isLoading}\n                isLoading={this.isLoading}\n                btn_block\n                text={this.rightBtnText}\n                name={this.rightBtnText}\n              ></ir-button>\n            )}\n          </div>\n        </div>\n      </div>,\n    ];\n  }\n}\n"]}