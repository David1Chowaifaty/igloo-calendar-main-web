{"version":3,"file":"ir-weekday-selector.js","sourceRoot":"","sources":["../../../../src/components/ui/ir-weekday-selector/ir-weekday-selector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAU5F,MAAM,OAAO,iBAAiB;IAL9B;QAME;;WAEG;QACK,aAAQ,GAAa,EAAE,CAAC;QAEhC;;WAEG;QACM,qBAAgB,GAAgB,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAYxD,cAAS,GAAc;YAC7B,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;YACxB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;YACxB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;YACxB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;YACzB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;YACzB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;YACzB,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;SAC1B,CAAC;KA2CH;IAxCC,mBAAmB,CAAC,OAAiB,EAAE,OAAiB;QACtD,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YACvF,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IACD;;;;;;OAMG;IACK,cAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAyC;QAChF,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5C,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAC,gCAAgC,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAClE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CACvB,mBACE,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAC3C,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAChF,KAAK,EAAE,CAAC,CAAC,KAAK,EACd,UAAU,EAAC,SAAS,EACpB,KAAK,EAAC,eAAe,GACR,CAChB,CAAC,CACG,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Host, Prop, State, Watch } from '@stencil/core';\nexport interface Weekday {\n  value: number;\n  label: string;\n}\n@Component({\n  tag: 'ir-weekday-selector',\n  styleUrl: 'ir-weekday-selector.css',\n  scoped: true,\n})\nexport class IrWeekdaySelector {\n  /**\n   * Initial list of selected weekdays (numeric values).\n   */\n  @Prop() weekdays: number[] = [];\n\n  /**\n   * Internal state tracking currently selected weekdays.\n   */\n  @State() selectedWeekdays: Set<number> = new Set(this.weekdays);\n\n  /**\n   * Emits an updated list of selected weekday values when the selection changes.\n   *\n   * Example:\n   * ```tsx\n   * <ir-weekday-selector onWeekdayChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() weekdayChange: EventEmitter<number[]>;\n\n  private _weekdays: Weekday[] = [\n    { value: 1, label: 'M' },\n    { value: 2, label: 'T' },\n    { value: 3, label: 'W' },\n    { value: 4, label: 'Th' },\n    { value: 5, label: 'Fr' },\n    { value: 6, label: 'Sa' },\n    { value: 0, label: 'Su' },\n  ];\n\n  @Watch('weekdays')\n  handleWeekdayChange(newDays: number[], oldDays: number[]) {\n    if (newDays.length !== oldDays.length && newDays.length !== this.selectedWeekdays.size) {\n      this.selectedWeekdays = new Set(newDays);\n    }\n  }\n  /**\n   * Toggles the selected state of a specific weekday.\n   * Updates internal state and emits `weekdayChange` event.\n   *\n   * @param checked - Whether the checkbox is checked.\n   * @param weekDay - The numeric value of the weekday.\n   */\n  private toggleWeekDays({ checked, weekDay }: { checked: boolean; weekDay: number }): void {\n    const prev = new Set(this.selectedWeekdays);\n    if (checked) {\n      if (!this.selectedWeekdays.has(weekDay)) {\n        prev.add(weekDay);\n        this.selectedWeekdays = new Set(prev);\n      }\n    } else {\n      prev.delete(weekDay);\n      this.selectedWeekdays = new Set(prev);\n    }\n    this.weekdayChange.emit(Array.from(this.selectedWeekdays));\n  }\n  render() {\n    return (\n      <Host class=\"my-1 d-flex align-items-center\" style={{ gap: '1.5rem' }}>\n        {this._weekdays.map(w => (\n          <ir-checkbox\n            checked={this.selectedWeekdays.has(w.value)}\n            onCheckChange={e => this.toggleWeekDays({ checked: e.detail, weekDay: w.value })}\n            label={w.label}\n            labelClass=\"m-0 p-0\"\n            class=\"days-checkbox\"\n          ></ir-checkbox>\n        ))}\n      </Host>\n    );\n  }\n}\n"]}