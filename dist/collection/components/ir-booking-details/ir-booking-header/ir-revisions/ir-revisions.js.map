{"version":3,"file":"ir-revisions.js","sourceRoot":"","sources":["../../../../../src/components/ir-booking-details/ir-booking-header/ir-revisions/ir-revisions.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,cAAc,EAAuB,MAAM,4BAA4B,CAAC;AAOjF,MAAM,OAAO,WAAW;;QAKd,mBAAc,GAAG,IAAI,cAAc,EAAE,CAAC;;;;IAE9C,iBAAiB;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEO,KAAK,CAAC,IAAI;QAChB,IAAI,CAAC;YACH,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7F,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,MAAM;;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,KAAK;YACd,4DAAK,KAAK,EAAC,gCAAgC,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE;gBAClE,2DAAI,KAAK,EAAC,mCAAmC,gBAAe;gBAC5D,6DAAM,KAAK,EAAC,UAAU,WAAY,CAC9B;YAEL,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CACjD,WAAK,KAAK,EAAE,0EAA0E;gBACpF,qBAAyB,CACrB,CACP,CAAC,CAAC,CAAC,CACF,EAAC,QAAQ;gBACP,WAAK,KAAK,EAAC,0BAA0B;oBAClC,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,MAAM,MAAK,CAAC,IAAI,kCAAyB,EAC7D,MAAA,IAAI,CAAC,aAAa;uBAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAC5B,WAAK,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,mDAAmD;wBACxE,WAAK,KAAK,EAAC,mDAAmD;4BAC5D,aAAI,CAAC,CAAC,IAAI,CAAK;4BACf,SAAG,KAAK,EAAC,MAAM;gCACZ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;gCAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;gCAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACtG,CACA;wBACN,aAAI,CAAC,CAAC,IAAI,CAAK,CACX,CACP,CAAC,CACE,CACG,CACZ,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { Component, Fragment, Prop, State, h } from '@stencil/core';\nimport { BookingService, ExposedBookingEvent } from '@/services/booking.service';\n\n@Component({\n  tag: 'ir-revisions',\n  styleUrl: 'ir-revisions.css',\n  scoped: true,\n})\nexport class IrRevisions {\n  @Prop() bookingNumber: string;\n\n  @State() bookingEvents: ExposedBookingEvent[];\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n  }\n\n  private async init() {\n    try {\n      this.bookingEvents = await this.bookingService.getExposedBookingEvents(this.bookingNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"p-1\">\n        <div class=\"d-flex mb-1 align-items-center\" style={{ gap: '0.5rem' }}>\n          <h3 class=\" text-left p-0 m-0  dialog-title \">Revisions</h3>\n          <span class=\"m-0 beta\">Beta</span>\n        </div>\n\n        {isRequestPending('/Get_Exposed_Booking_Events') ? (\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\n            <ir-spinner></ir-spinner>\n          </div>\n        ) : (\n          <Fragment>\n            <div class=\" dialog-container-height\">\n              {this.bookingEvents?.length === 0 && <p>No Revisions Found</p>}\n              {this.bookingEvents?.map(e => (\n                <div key={e.id} class={'d-flex align-items-center justify-content-between'}>\n                  <div class=\"d-flex align-items-center justify-content-between\">\n                    <p>{e.date}</p>\n                    <p class=\"ml-1\">\n                      {String(e.hour).padStart(2, '0')}:{String(e.minute).padStart(2, '0')}:{String(e.second).padStart(2, '0')}\n                    </p>\n                  </div>\n                  <p>{e.type}</p>\n                </div>\n              ))}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n"]}