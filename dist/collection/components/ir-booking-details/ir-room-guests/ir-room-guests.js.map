{"version":3,"file":"ir-room-guests.js","sourceRoot":"","sources":["../../../../src/components/ir-booking-details/ir-room-guests/ir-room-guests.tsx"],"names":[],"mappings":"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","sourcesContent":["import { SharedPerson, ZIdInfo, ZSharedPerson, ZSharedPersons } from '@/models/booking.dto';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, h } from '@stencil/core';\nimport moment from 'moment';\nimport { dateMask, defaultGuest } from './data';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry, IEntries } from '@/models/IBooking';\nimport { ZodError } from 'zod';\n@Component({\n  tag: 'ir-room-guests',\n  styleUrls: ['ir-room-guests.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrRoomGuests {\n  /**\n   * The name of the room currently being displayed.\n   * Used to label the room in the user interface for clarity.\n   */\n  @Prop() roomName: string;\n\n  /**\n   * A unique identifier for the room.\n   * This is used to distinguish between rooms, especially when performing operations like saving or checking in guests.\n   */\n  @Prop() identifier: string;\n\n  /**\n   * An array of people sharing the room.\n   * Contains information about the {locales.entries.Lcz_MainGuest} and additional guests, such as their name, date of birth, {locales.entries.Lcz_Nationality}, and ID details.\n   */\n  @Prop() sharedPersons: SharedPerson[] = [];\n\n  /**\n   * The total number of guests for the room.\n   * Determines how many guest input forms to display in the UI.\n   */\n  @Prop() totalGuests: number = 0;\n\n  /**\n   * A list of available countries.\n   * Used to populate dropdowns for selecting the {locales.entries.Lcz_Nationality} of guests.\n   */\n  @Prop() countries: ICountry[];\n\n  /**\n   * A boolean indicating whether the room is in the process of being checked in.\n   * If true, additional actions like saving the room state as \"checked in\" are performed.\n   */\n  @Prop() checkIn: boolean;\n\n  /**\n   * The language used for displaying text content in the component.\n   * Defaults to English ('en'), but can be set to other supported languages.\n   */\n  @Prop() language: string = 'en';\n\n  /**\n   * A unique booking number associated with the room.\n   * This is used for backend operations like saving guest information or checking in the room.\n   */\n  @Prop() bookingNumber: string;\n\n  @State() guests: SharedPerson[] = [];\n  @State() idTypes: IEntries[] = [];\n  @State() error: Record<string, boolean> = {};\n  @State() isLoading: boolean;\n  @State() propertyCountry: ICountry;\n  @State() autoValidate = false;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event() updateRoomGuests: EventEmitter<{ identifier: string; guests: SharedPerson[] }>;\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n    this.initializeGuests();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      const [country, idTypes] = await Promise.all([this.bookingService.getUserDefaultCountry(), this.bookingService.getSetupEntriesByTableName('_ID_TYPE')]);\n      this.idTypes = idTypes;\n      if (country) {\n        this.propertyCountry = this.countries.find(c => c.id === country.COUNTRY_ID);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private initializeGuests(): void {\n    let guests = [];\n    if (this.totalGuests > this.sharedPersons.length) {\n      const defaultGuestsCount = this.totalGuests - this.sharedPersons.length;\n      guests = [\n        ...this.sharedPersons,\n        ...Array(defaultGuestsCount).fill({\n          ...defaultGuest,\n          id_info: {\n            ...defaultGuest.id_info,\n            type: {\n              code: this.idTypes[0]?.CODE_NAME || '001',\n              description: this.idTypes[0]?.CODE_VALUE_EN || '',\n            },\n            number: '',\n          },\n        }),\n      ];\n    } else {\n      guests = [...this.sharedPersons];\n    }\n    guests = guests.map(g => ({ ...g, dob: new Date(g.dob).getFullYear() === 1900 ? null : g.dob }));\n    this.guests = guests.map(g => ({ ...g, dob: g.dob ? moment(new Date(g.dob)).format('DD/MM/YYYY') : '', country_id: g.country ? g.country.id : null }));\n  }\n\n  private updateGuestInfo(index: number, params: Partial<SharedPerson>) {\n    const tempGuests = [...this.guests];\n    let tempGuest = tempGuests[index];\n    tempGuest = { ...tempGuest, ...params };\n    tempGuests[index] = tempGuest;\n    this.guests = [...tempGuests];\n  }\n\n  private async saveGuests() {\n    try {\n      this.error = {};\n      this.autoValidate = true;\n      console.log(this.guests);\n      ZSharedPersons.parse(this.guests);\n\n      // await this.bookingService.handleExposedRoomGuests({\n      //   booking_nbr: this.bookingNumber,\n      //   identifier: this.identifier,\n      //   guests: this.guests.map(g => ({ ...g, dob: g.dob ? moment(g.dob, 'DD/MM/YYYY').format('YYYY-MM-DD') : null })),\n      // });\n      // if (this.checkIn) {\n      //   await this.bookingService.handleExposedRoomInOut({\n      //     booking_nbr: this.bookingNumber,\n      //     room_identifier: this.identifier,\n      //     status: '001',\n      //   });\n      // }\n      // this.closeModal.emit(null);\n      // this.updateRoomGuests.emit({ identifier: this.identifier, guests: this.guests });\n      // this.resetBookingEvt.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        let errors = {};\n        error.issues.forEach(e => {\n          errors[e.path[1]] = true;\n        });\n        this.error = { ...errors };\n      }\n    }\n  }\n\n  render() {\n    if (this.isLoading) {\n      return (\n        <div class={'loading-container'}>\n          <ir-spinner></ir-spinner>\n        </div>\n      );\n    }\n    return (\n      <form\n        class=\"sheet-container\"\n        style={{ minWidth: '300px' }}\n        onSubmit={e => {\n          e.preventDefault();\n          this.saveGuests();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={`Room ${this.roomName}`} displayContext=\"sidebar\"></ir-title>\n        <section class={'sheet-body px-1'}>\n          <div class=\"\">\n            <div class=\"guest-grid guests-labels\">\n              <p class=\"\">{locales.entries.Lcz_MainGuest}</p>\n              <p class=\"\"></p>\n              <p class=\" \">{locales.entries.Lcz_DOB}</p>\n              <p class=\"\">{locales.entries.Lcz_Nationality}</p>\n              <p class=\" \">{locales.entries.Lcz_Documents}</p>\n            </div>\n            <h5 class=\"main_guest_heading\">{locales.entries.Lcz_MainGuest}</h5>\n            {this.guests.map((guest, idx) => (\n              <Fragment>\n                {idx === 1 && (\n                  <div class=\"d-flex mx-0 px-0\">\n                    <h5 class=\"mx-0 px-0 sharing_persons_heading\">{locales.entries.Lcz_PersonsSharingRoom}</h5>\n                    <p class=\"mx-0 px-0 sharing_persons_label\">{locales.entries.Lcz_PersonsSharingRoom}</p>\n                  </div>\n                )}\n                <div key={idx} class=\"guest-grid\">\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                    <p class=\"guest_label\">First name</p>\n                    <ir-input-text\n                      class=\"flex-grow-1 h-100\"\n                      id={`first_name_${idx}`}\n                      zod={ZSharedPerson.pick({ first_name: true })}\n                      error={!!this.error['first_name']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"first_name\"\n                      placeholder=\"First name\"\n                      onTextChange={e => this.updateGuestInfo(idx, { first_name: e.detail })}\n                      value={guest.first_name}\n                      maxLength={40}\n                    ></ir-input-text>\n                  </div>\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                    <p class=\"guest_label\">Last name</p>\n                    <ir-input-text\n                      maxLength={40}\n                      class=\"flex-grow-1 h-100\"\n                      id={`last_name_${idx}`}\n                      zod={ZSharedPerson.pick({ last_name: true })}\n                      error={!!this.error['last_name']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"last_name\"\n                      placeholder=\"Last name\"\n                      onTextChange={e => this.updateGuestInfo(idx, { last_name: e.detail })}\n                      value={guest.last_name}\n                    ></ir-input-text>\n                  </div>\n                  <div class=\"flex-grow-0 m-0 p-0 h-100 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_DOB}</p>\n                    <ir-input-text\n                      class=\"flex-grow-1 h-100\"\n                      id={`dob_${idx}`}\n                      zod={ZSharedPerson.pick({ dob: true })}\n                      error={!!this.error['dob']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"dob\"\n                      mask={dateMask}\n                      placeholder=\"\"\n                      onTextChange={e => {\n                        this.updateGuestInfo(idx, { dob: e.detail });\n                      }}\n                      value={guest.dob}\n                    ></ir-input-text>\n                  </div>\n                  <div class=\" m-0 p-0 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_Nationality}</p>\n                    <div class=\"mx-0 flex-grow-1  h-100\">\n                      <ir-country-picker\n                        class=\"h-100\"\n                        propertyCountry={this.propertyCountry}\n                        id={`{locales.entries.Lcz_Nationality}_${idx}`}\n                        error={!!this.error['country_id'] && !guest.country_id}\n                        country={this.countries?.find(c => c.id?.toString() === guest.country?.id?.toString())}\n                        onCountryChange={e => this.updateGuestInfo(idx, { country_id: e.detail?.id?.toString() ?? null, country: e.detail })}\n                        countries={this.countries}\n                      ></ir-country-picker>\n                    </div>\n                  </div>\n                  <div class=\"flex-grow-1 m-0 p-0 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_Documents}</p>\n                    <div class={' d-flex m-0 flex-grow-1 h-100'}>\n                      <ir-select\n                        selectForcedStyles={{\n                          borderTopRightRadius: '0px',\n                          borderBottomRightRadius: '0px',\n                          borderRight: '0',\n                        }}\n                        selectStyles={'rounded-top-0 rounded-bottom-0'}\n                        onSelectChange={e => {\n                          this.updateGuestInfo(idx, {\n                            id_info: {\n                              ...this.guests[idx].id_info,\n                              type: {\n                                code: e.detail,\n                                description: '',\n                              },\n                            },\n                          });\n                        }}\n                        selectedValue={guest.id_info.type.code}\n                        LabelAvailable={false}\n                        showFirstOption={false}\n                        data={this.idTypes?.map(t => ({ text: t[`CODE_VALUE_${this.language.toUpperCase()}`] ?? t[`CODE_VALUE_EN`], value: t.CODE_NAME }))}\n                      ></ir-select>\n                      <ir-input-text\n                        autoValidate={this.autoValidate}\n                        maxLength={18}\n                        placeholder=\"12345\"\n                        class=\"flex-grow-1 guest_document\"\n                        type=\"text\"\n                        inputForcedStyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}\n                        value={guest.id_info.number}\n                        zod={ZIdInfo.pick({ number: true })}\n                        error={!!this.error['number']}\n                        wrapKey=\"number\"\n                        inputStyles=\"form-control\"\n                        onTextChange={e =>\n                          this.updateGuestInfo(idx, {\n                            id_info: {\n                              ...this.guests[idx].id_info,\n                              number: e.detail,\n                            },\n                          })\n                        }\n                      ></ir-input-text>\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            ))}\n          </div>\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button onClick={() => this.closeModal.emit(null)} class={`flex-fill`} text={locales.entries.Lcz_Cancel} btn_color=\"secondary\"></ir-button>\n          <ir-button\n            btn_type=\"submit\"\n            class={'flex-fill'}\n            isLoading={isRequestPending('/Handle_Exposed_Room_Guests')}\n            text={this.checkIn ? locales.entries.Lcz_CheckIn : locales.entries.Lcz_Save}\n            btn_color=\"primary\"\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n"]}