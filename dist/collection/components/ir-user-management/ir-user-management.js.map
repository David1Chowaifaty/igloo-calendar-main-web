{"version":3,"file":"ir-user-management.js","sourceRoot":"","sources":["../../../src/components/ir-user-management/ir-user-management.tsx"],"names":[],"mappings":"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","sourcesContent":["import Token from '@/models/Token';\r\nimport { User } from '@/models/Users';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport { UserService } from '@/services/user.service';\r\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { AllowedUser } from './types';\r\nimport { bookingReasons } from '@/models/IBooking';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n@Component({\r\n  tag: 'ir-user-management',\r\n  styleUrl: 'ir-user-management.css',\r\n  scoped: true,\r\n})\r\nexport class IrUserManagement {\r\n  @Prop() language: string = '';\r\n  @Prop() baseUrl: string;\r\n  @Prop() ticket: string;\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n  @Prop() isSuperAdmin: boolean = true;\r\n  @Prop() userTypeCode: string | number;\r\n  @Prop() baseUserTypeCode: string | number;\r\n  @Prop() userId: string | number;\r\n\r\n  @State() isLoading = true;\r\n  @State() users: User[] = [];\r\n  @State() property_id: number;\r\n  @State() allowedUsersTypes: AllowedUser[] = [];\r\n\r\n  private token = new Token();\r\n  private roomService = new RoomService();\r\n  private userService = new UserService();\r\n  private bookingService = new BookingService();\r\n\r\n  private userTypes: Map<number | string, string> = new Map();\r\n  private socket: Socket;\r\n\r\n  private superAdminId = '5';\r\n\r\n  componentWillLoad() {\r\n    if (this.baseUrl) {\r\n      this.token.setBaseUrl(this.baseUrl);\r\n    }\r\n    if (this.ticket) {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    await this.fetchUsers();\r\n  }\r\n\r\n  private async initializeApp() {\r\n    try {\r\n      if (this.baseUrl) {\r\n        this.token.setBaseUrl(this.baseUrl);\r\n      }\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!this.propertyid && !this.p) {\r\n        throw new Error('Property ID or username is required');\r\n      }\r\n      // let roomResp = null;\r\n      if (!propertyId) {\r\n        console.log(propertyId);\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_units_hk_status: true,\r\n        });\r\n        // roomResp = propertyData;\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      this.property_id = propertyId;\r\n      const requests = [this.fetchUserTypes(), this.fetchUsers(), this.roomService.fetchLanguage(this.language)];\r\n      if (this.propertyid) {\r\n        requests.push(\r\n          this.roomService.getExposedProperty({\r\n            id: this.propertyid,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_units_hk_status: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      await Promise.all(requests);\r\n      this.socket = io('https://realtime.igloorooms.com/');\r\n      this.socket.on('MSG', async msg => {\r\n        await this.handleSocketMessage(msg);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private async handleSocketMessage(msg: string) {\r\n    const msgAsObject = JSON.parse(msg);\r\n    if (!msgAsObject) {\r\n      return;\r\n    }\r\n\r\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\r\n\r\n    if (KEY.toString() !== this.property_id.toString()) {\r\n      return;\r\n    }\r\n\r\n    let result = JSON.parse(PAYLOAD);\r\n    console.log(KEY, result);\r\n    // const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\r\n    //   DORESERVATION: this.updateUserVerificationStatus,\r\n    // };\r\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\r\n      EMAIL_VERIFIED: this.updateUserVerificationStatus,\r\n    };\r\n    const handler = reasonHandlers[REASON];\r\n    if (handler) {\r\n      await handler.call(this, result);\r\n    } else {\r\n      console.warn(`Unhandled REASON: ${REASON}`);\r\n    }\r\n  }\r\n\r\n  public updateUserVerificationStatus(result: { id: string | number }) {\r\n    const users = [...this.users];\r\n    const idx = users.findIndex(u => u.id === result.id);\r\n    if (idx === -1) {\r\n      console.warn(`User ${result.id} not found`);\r\n      return;\r\n    }\r\n    users[idx] = {\r\n      ...users[idx],\r\n      is_email_verified: true,\r\n    };\r\n    this.users = users;\r\n  }\r\n\r\n  private async fetchUsers() {\r\n    const users = await this.userService.getExposedPropertyUsers({ property_id: this.propertyid });\r\n    this.users = [...users].sort((u1: User, u2: User) => {\r\n      const priority = (u: User) => {\r\n        const t = u.type.toString();\r\n        if (t === this.superAdminId) return 0;\r\n        if (t === '17') return 1;\r\n        return 2;\r\n      };\r\n      //sort by priority\r\n      const p1 = priority(u1),\r\n        p2 = priority(u2);\r\n      if (p1 !== p2) {\r\n        return p1 - p2;\r\n      }\r\n      // //sort by user id\r\n      // if (p1 === 1) {\r\n      //   const id1 = u1.id.toString(),\r\n      //     id2 = u2.id.toString(),\r\n      //     me = this.userId.toString();\r\n      //   if (id1 === me) return -1; // u1 is me → goes before u2\r\n      //   if (id2 === me) return 1; // u2 is me → u1 goes after\r\n      // }\r\n\r\n      // 3) sort by username\r\n      return u1.username.localeCompare(u2.username);\r\n    });\r\n  }\r\n  private async fetchUserTypes() {\r\n    const res = await Promise.all([this.bookingService.getSetupEntriesByTableName('_USER_TYPE'), this.bookingService.getLov()]);\r\n    const allowedUsers = res[1]?.My_Result?.allowed_user_types;\r\n    for (const e of res[0]) {\r\n      const value = e[`CODE_VALUE_${this.language?.toUpperCase() ?? 'EN'}`];\r\n      if (allowedUsers.find(f => f.code === e.CODE_NAME)) {\r\n        this.allowedUsersTypes.push({ code: e.CODE_NAME, value });\r\n      }\r\n      this.userTypes.set(e.CODE_NAME.toString(), value);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    this.socket.disconnect();\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return (\r\n        <Host>\r\n          <ir-toast></ir-toast>\r\n          <ir-interceptor></ir-interceptor>\r\n          <ir-loading-screen></ir-loading-screen>\r\n        </Host>\r\n      );\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd', '/Handle_Exposed_User']}></ir-interceptor>\r\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\r\n          <div class=\"d-flex  pb-2 align-items-center justify-content-between\">\r\n            <h3 class=\"mb-1 mb-md-0\">Extranet Users</h3>\r\n          </div>\r\n\r\n          <div class=\"\" style={{ gap: '1rem' }}>\r\n            <ir-user-management-table\r\n              property_id={this.property_id}\r\n              baseUserTypeCode={this.baseUserTypeCode}\r\n              allowedUsersTypes={this.allowedUsersTypes}\r\n              userTypeCode={this.userTypeCode}\r\n              haveAdminPrivileges={[this.superAdminId, '17'].includes(this.userTypeCode?.toString())}\r\n              userTypes={this.userTypes}\r\n              class=\"card\"\r\n              isSuperAdmin={this.userTypeCode?.toString() === this.superAdminId}\r\n              users={this.users}\r\n            ></ir-user-management-table>\r\n          </div>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}