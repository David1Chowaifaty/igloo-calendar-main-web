{"version":3,"file":"ir-secure-tasks.js","sourceRoot":"","sources":["../../../src/components/ir-secure-tasks/ir-secure-tasks.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOhE,MAAM,OAAO,aAAa;IAL1B;QASW,oBAAe,GAAY,KAAK,CAAC;QAClC,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;KA6B7B;IA3BC,iBAAiB;QACf,MAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;QAC7C,IAAI,eAAe,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAEO,gBAAgB,CAAC,CAAc;QACrC,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,mBAAmB,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAChF,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,eAAe;YACvB,OAAO,CACL,EAAC,IAAI;gBACH,gBAAU,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAa,CAChE,CACR,CAAC;QACJ,OAAO,CACL,EAAC,IAAI;YACH,mBAAa,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAC,IAAI,EAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAgB,CAC3G,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import Token from '@/models/Token';\nimport { checkUserAuthState, manageAnchorSession } from '@/utils/utils';\nimport { Component, Host, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-secure-tasks',\n  styleUrl: 'ir-secure-tasks.css',\n  scoped: true,\n})\nexport class IrSecureTasks {\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() bookingNumber: string;\n  @State() isAuthenticated: boolean = false;\n  private token = new Token();\n\n  componentWillLoad() {\n    const isAuthenticated = checkUserAuthState();\n    if (isAuthenticated) {\n      this.isAuthenticated = true;\n      this.token.setToken(isAuthenticated.token);\n    }\n  }\n\n  private handleAuthFinish(e: CustomEvent) {\n    const token = e.detail.token;\n    this.token.setToken(token);\n    this.isAuthenticated = true;\n    manageAnchorSession({ login: { method: 'direct', isLoggedIn: true, token } });\n  }\n  render() {\n    if (!this.isAuthenticated)\n      return (\n        <Host>\n          <ir-login onAuthFinish={this.handleAuthFinish.bind(this)}></ir-login>\n        </Host>\n      );\n    return (\n      <Host>\n        <ir-hk-tasks p={this.p} propertyid={this.propertyid} language=\"en\" ticket={this.token.getToken()}></ir-hk-tasks>\n      </Host>\n    );\n  }\n}\n"]}