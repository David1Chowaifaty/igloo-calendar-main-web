{"version":3,"file":"ir-sales-by-channel.js","sourceRoot":"","sources":["../../../src/components/ir-sales-by-channel/ir-sales-by-channel.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport Token from '@/models/Token';\nimport { AllowedProperties, PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport moment from 'moment';\nimport { ChannelReportResult, ChannelSaleFilter } from './types';\n@Component({\n  tag: 'ir-sales-by-channel',\n  styleUrl: 'ir-sales-by-channel.css',\n  scoped: true,\n})\nexport class IrSalesByChannel {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n\n  @State() salesData: ChannelReportResult;\n  @State() channelSalesFilters: ChannelSaleFilter;\n  @State() allowedProperties: AllowedProperties;\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  private baseFilters: ChannelSaleFilter = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.channelSalesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  private async initializeApp() {\n    try {\n      const requests = [this.propertyService.getExposedAllowedProperties(), this.roomService.fetchLanguage(this.language)];\n      const [properties] = await Promise.all(requests);\n      this.allowedProperties = [...(properties as any)];\n\n      this.baseFilters = { ...this.baseFilters, LIST_AC_ID: this.allowedProperties.map(p => p.id) };\n      this.channelSalesFilters = { ...this.baseFilters };\n\n      await this.getChannelSales();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getChannelSales(isExportToExcel = false) {\n    try {\n      const { include_previous_year, ...filterParams } = this.channelSalesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const currentSales = await this.propertyService.getChannelSales({\n        // AC_ID: this.propertyid,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n      let enrichedSales: ChannelReportResult = [];\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getChannelSales({\n          // AC_ID: this.propertyid.toString(),\n          is_export_to_excel: isExportToExcel,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.SOURCE.toLowerCase() === current.SOURCE.toLowerCase());\n          return {\n            ...current,\n            last_year: previous ? previous : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          ...record,\n          last_year: null,\n        }));\n      }\n      // --- Group by PROPERTY_ID and sort so that hotels with most revenue are on top ---\n      const totalsByProperty: Record<number, number> = enrichedSales.reduce((acc, r) => {\n        acc[r.PROPERTY_ID] = (acc[r.PROPERTY_ID] ?? 0) + r.REVENUE;\n        return acc;\n      }, {} as Record<number, number>);\n\n      enrichedSales.sort((a, b) => {\n        const tA = totalsByProperty[a.PROPERTY_ID] ?? 0;\n        const tB = totalsByProperty[b.PROPERTY_ID] ?? 0;\n\n        // 1) Sort groups by total revenue (desc)\n        if (tB !== tA) return tB - tA;\n\n        // 2) Within the same property, sort each channel row by REVENUE (desc),\n        //    then by SOURCE for a stable, readable order\n        if (a.PROPERTY_ID === b.PROPERTY_ID) {\n          if (b.REVENUE !== a.REVENUE) return b.REVENUE - a.REVENUE;\n          return a.SOURCE.localeCompare(b.SOURCE);\n        }\n\n        // 3) Tie-breaker when two different properties have identical totals\n        return String(a.PROPERTY_NAME).localeCompare(String(b.PROPERTY_NAME));\n      });\n      // -------------------------------------------------------------------------------\n\n      this.salesData = [...enrichedSales];\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Channel</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getChannelSales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          {/* <ir-sales-by-country-summary salesReports={this.salesData}></ir-sales-by-country-summary> */}\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-by-channel-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.channelSalesFilters = { ...e.detail };\n                this.getChannelSales();\n              }}\n              allowedProperties={this.allowedProperties}\n              baseFilters={this.baseFilters}\n            ></ir-sales-by-channel-filters>\n            <ir-sales-by-channel-table allowedProperties={this.allowedProperties} class=\"card mb-0\" records={this.salesData}></ir-sales-by-channel-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"]}