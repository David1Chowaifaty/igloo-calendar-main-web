{"version":3,"file":"ir-tasks-table.js","sourceRoot":"","sources":["../../../../../src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\r\nimport { Task } from '../ir-hk-tasks';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-table',\r\n  styleUrl: 'ir-tasks-table.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksTable {\r\n  @Prop({ mutable: true }) tasks: Task[] = [];\r\n\r\n  /**\r\n   * Tracks which task IDs are currently selected via checkboxes.\r\n   */\r\n  @State() selectedIds: number[] = [];\r\n\r\n  /**\r\n   * Controls whether the \"Confirm Clean\" modal is shown.\r\n   */\r\n  @State() showConfirmModal: boolean = false;\r\n\r\n  /**\r\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\r\n   */\r\n  @State() sortKey: string = 'date';\r\n\r\n  /**\r\n   * The sort direction: ASC or DESC.\r\n   */\r\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\r\n\r\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\r\n\r\n  componentWillLoad() {\r\n    this.sortTasks('date', 'ASC');\r\n  }\r\n  /**\r\n   * Sorts the tasks by the given key. If no direction is provided,\r\n   * it toggles between ascending and descending.\r\n   */\r\n  private handleSort(key: string) {\r\n    let newDirection = this.sortDirection;\r\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\r\n    if (this.sortKey === key) {\r\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\r\n    } else {\r\n      newDirection = 'ASC';\r\n    }\r\n    this.sortTasks(key, newDirection);\r\n  }\r\n\r\n  /**\r\n   * Helper to sort tasks array in state.\r\n   */\r\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\r\n    const sorted = [...this.tasks].sort((a, b) => {\r\n      if (a[key] < b[key]) return direction === 'ASC' ? -1 : 1;\r\n      if (a[key] > b[key]) return direction === 'ASC' ? 1 : -1;\r\n      return 0;\r\n    });\r\n    this.tasks = sorted;\r\n    this.sortKey = key;\r\n    this.sortDirection = direction;\r\n  }\r\n\r\n  /**\r\n   * Helper to toggle selection for a single row.\r\n   */\r\n  private toggleSelection(id: number) {\r\n    if (this.selectedIds.includes(id)) {\r\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\r\n    } else {\r\n      this.selectedIds = [...this.selectedIds, id];\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if every row is selected.\r\n   */\r\n  private get allSelected(): boolean {\r\n    return this.tasks.length > 0 && this.selectedIds.length === this.tasks.length;\r\n  }\r\n\r\n  /**\r\n   * Toggles selection on all visible tasks at once.\r\n   */\r\n  private toggleSelectAll() {\r\n    if (this.allSelected) {\r\n      this.selectedIds = [];\r\n    } else {\r\n      this.selectedIds = this.tasks.map(task => task.id);\r\n    }\r\n    console.log('here');\r\n    this.animateCleanedButton.emit(null);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card h-100 p-1 m-0 table-responsive\">\r\n        <table class=\"table \">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <ir-checkbox checked={this.allSelected} onCheckChange={() => this.toggleSelectAll()}></ir-checkbox>\r\n              </th>\r\n              <th>Period</th>\r\n              <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('unit')}>\r\n                {/* Unit {this.sortKey === 'unit' ? `(${this.sortDirection})` : ''} */}\r\n                Unit\r\n              </th>\r\n              <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('status')}>\r\n                Status\r\n              </th>\r\n              <th>Hint</th>\r\n              <th>A</th>\r\n              <th>C</th>\r\n              <th>I</th>\r\n              <th style={{ cursor: 'pointer', textAlign: 'start' }} onClick={() => this.handleSort('housekeeper')}>\r\n                Housekeeper\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.tasks.map(task => {\r\n              const isSelected = this.selectedIds.includes(task.id);\r\n              console.log(isSelected);\r\n              return (\r\n                <tr style={{ cursor: 'pointer' }} onClick={() => this.toggleSelection(task.id)} class={{ 'selected': isSelected, 'task-table-row': true }} key={task.id}>\r\n                  <td class=\"task-row\">\r\n                    <ir-checkbox checked={isSelected}></ir-checkbox>\r\n                  </td>\r\n                  <td class=\"task-row\">{task.date}</td>\r\n                  <td class=\"task-row\">{task.unit}</td>\r\n                  <td class=\"task-row\">{task.status}</td>\r\n                  <td class=\"task-row\">{task.hint}</td>\r\n                  <td class=\"task-row\">{task.a}</td>\r\n                  <td class=\"task-row\">{task.c}</td>\r\n                  <td class=\"task-row\">{task.i}</td>\r\n                  <td class=\"w-50 task-row\" style={{ textAlign: 'start' }}>\r\n                    {task.housekeeper}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}