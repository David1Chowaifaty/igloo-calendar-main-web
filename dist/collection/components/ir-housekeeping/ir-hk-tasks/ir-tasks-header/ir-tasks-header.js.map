{"version":3,"file":"ir-tasks-header.js","sourceRoot":"","sources":["../../../../../src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAOhF,MAAM,OAAO,aAAa;;gCACY,KAAK;;IAOzC,4BAA4B,CAAC,CAAc;QACzC,CAAC,CAAC,wBAAwB,EAAE,CAAC;QAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IACD,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,mDAAmD;YAC5D,kFAA2B;YAC3B,4DAAK,KAAK,EAAC,2BAA2B,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE;gBAC3D,kEACE,IAAI,EAAC,IAAI,EACT,SAAS,EAAC,SAAS,EACnB,IAAI,EAAC,QAAQ,EACb,cAAc,EAAE,CAAC,CAAC,EAAE;wBAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;wBAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAClD,CAAC,GACU;gBACb,kEACE,IAAI,EAAC,IAAI,EACT,SAAS,EAAC,SAAS,EACnB,IAAI,EAAC,SAAS,EACd,cAAc,EAAE,CAAC,CAAC,EAAE;wBAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;wBAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;oBACnD,CAAC,GACU;gBACb,kEACE,cAAc,EAAE,CAAC,CAAC,EAAE;wBAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;wBAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;oBACnD,CAAC,EACD,IAAI,EAAC,IAAI,EACT,YAAY,EAAE,CAAC,IAAI,CAAC,gBAAgB,EACpC,IAAI,EAAC,SAAS,EACd,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,GAClB,CACT,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, h, Listen, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-header',\r\n  styleUrl: 'ir-tasks-header.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksHeader {\r\n  @Prop() isCleanedEnabled: boolean = false;\r\n\r\n  private btnRef: HTMLIrButtonElement;\r\n\r\n  @Event() headerButtonPress: EventEmitter<{ name: 'cleaned' | 'export' | 'archive' }>;\r\n\r\n  @Listen('animateCleanedButton', { target: 'body' })\r\n  handleCleanedButtonAnimation(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.btnRef.bounce();\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"d-flex align-items-center justify-content-between\">\r\n        <h3>Housekeeping Tasks</h3>\r\n        <div class=\"d-flex align-items-center\" style={{ gap: '1rem' }}>\r\n          <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Export\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'export' });\r\n            }}\r\n          ></ir-button>\r\n          <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Archive\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'archive' });\r\n            }}\r\n          ></ir-button>\r\n          <ir-button\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'cleaned' });\r\n            }}\r\n            size=\"sm\"\r\n            btn_disabled={!this.isCleanedEnabled}\r\n            text=\"Cleaned\"\r\n            ref={el => (this.btnRef = el)}\r\n          ></ir-button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}