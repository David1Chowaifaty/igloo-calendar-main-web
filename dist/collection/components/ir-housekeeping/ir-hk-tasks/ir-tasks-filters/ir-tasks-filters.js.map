{"version":3,"file":"ir-tasks-filters.js","sourceRoot":"","sources":["../../../../../src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\r\nimport { TaskFilters } from '../types';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nexport type ModifiedTaskFilters = Omit<TaskFilters, 'housekeepers'> & { housekeepers: string };\r\n@Component({\r\n  tag: 'ir-tasks-filters',\r\n  styleUrl: 'ir-tasks-filters.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksFilters {\r\n  @Prop() isLoading: boolean;\r\n\r\n  @State() filters: ModifiedTaskFilters = {\r\n    cleaning_periods: {\r\n      code: '',\r\n    },\r\n    housekeepers: '000',\r\n    cleaning_frequencies: { code: '' },\r\n    dusty_units: { code: '' },\r\n    highlight_check_ins: { code: '' },\r\n  };\r\n\r\n  @State() collapsed: boolean = false;\r\n\r\n  @Event() applyFilters: EventEmitter<TaskFilters>;\r\n\r\n  private baseFilters: TaskFilters;\r\n\r\n  componentWillLoad() {\r\n    this.baseFilters = {\r\n      cleaning_periods: housekeeping_store?.hk_criteria?.cleaning_periods[0],\r\n      housekeepers: { ids: housekeeping_store.hk_criteria.housekeepers?.map(h => h.id) },\r\n      cleaning_frequencies: housekeeping_store?.hk_criteria?.cleaning_frequencies[0],\r\n      dusty_units: housekeeping_store?.hk_criteria?.dusty_periods[0],\r\n      highlight_check_ins: housekeeping_store?.hk_criteria?.highlight_checkin_options[0],\r\n    };\r\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\r\n  }\r\n\r\n  private updateFilter(params: Partial<ModifiedTaskFilters>) {\r\n    this.filters = { ...this.filters, ...params };\r\n  }\r\n  private applyFiltersEvt(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.applyFilters.emit({\r\n      ...this.filters,\r\n      housekeepers: {\r\n        ids: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers.ids : [Number(this.filters.housekeepers)],\r\n      },\r\n    });\r\n  }\r\n  private resetFilters(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\r\n    this.applyFilters.emit({\r\n      ...this.filters,\r\n      housekeepers: {\r\n        ids: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers.ids : [Number(this.filters.housekeepers)],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card mb-0 p-1 d-flex flex-column\">\r\n        <div class=\"d-flex align-items-center justify-content-between\">\r\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\r\n              />\r\n            </svg>\r\n            <h4 class=\"m-0 p-0 flex-grow-1\">Filters</h4>\r\n          </div>\r\n          <ir-button\r\n            variant=\"icon\"\r\n            id=\"drawer-icon\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#hkTasksFiltersCollapse\"\r\n            aria-expanded={this.collapsed ? 'true' : 'false'}\r\n            aria-controls=\"hkTasksFiltersCollapse\"\r\n            class=\"mr-1 collapse-btn\"\r\n            icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\r\n            onClickHandler={() => {\r\n              this.collapsed = !this.collapsed;\r\n            }}\r\n            style={{ '--icon-size': '1.6rem' }}\r\n          ></ir-button>\r\n        </div>\r\n        <div class=\"m-0 p-0 collapse\" id=\"hkTasksFiltersCollapse\">\r\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\r\n            <fieldset class=\"pt-1\">\r\n              <p class=\"m-0 p-0\">Period</p>\r\n              <ir-select\r\n                testId=\"period\"\r\n                selectedValue={this.filters?.cleaning_periods?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_periods.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_periods: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Housekeepers</p>\r\n              <ir-select\r\n                testId=\"housekeepers\"\r\n                selectedValue={this.filters?.housekeepers}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={[\r\n                  { text: 'All housekeepers', value: '000' },\r\n                  ...housekeeping_store?.hk_criteria?.housekeepers.map(v => ({\r\n                    text: v.name,\r\n                    value: v.id.toString(),\r\n                  })),\r\n                ]}\r\n                onSelectChange={e => {\r\n                  // if (e.detail === '000') {\r\n                  //   this.updateFilter({ housekeepers: { ids: this.baseFilters?.housekeepers?.ids } });\r\n                  // } else {\r\n                  //   this.updateFilter({ housekeepers: { ids: [e.detail] } });\r\n                  // }\r\n                  this.updateFilter({ housekeepers: e.detail });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Cleaning frequency</p>\r\n              <ir-select\r\n                testId=\"cleaning_frequency\"\r\n                selectedValue={this.filters?.cleaning_frequencies?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_frequencies: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Dusty units</p>\r\n              <ir-select\r\n                testId=\"dusty_units\"\r\n                showFirstOption={false}\r\n                LabelAvailable={false}\r\n                selectedValue={this.filters?.dusty_units?.code}\r\n                data={housekeeping_store.hk_criteria?.dusty_periods?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  e.stopImmediatePropagation();\r\n                  e.stopPropagation();\r\n                  this.updateFilter({ dusty_units: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset class=\"mb-1\">\r\n              <p class=\"m-0 p-0\">Highlight check-ins</p>\r\n              <ir-select\r\n                testId=\"highlight_check_ins\"\r\n                selectedValue={this.filters?.highlight_check_ins?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ highlight_check_ins: { code: e.detail } });\r\n                }}\r\n                data={housekeeping_store.hk_criteria?.highlight_checkin_options?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <div class=\"d-flex align-items-center justify-content-end\" style={{ gap: '1rem' }}>\r\n              <ir-button btn_type=\"button\" data-testid=\"reset\" text=\"Reset\" size=\"sm\" btn_color=\"outline\" onClickHandler={e => this.resetFilters(e)}></ir-button>\r\n              <ir-button btn_type=\"button\" data-testid=\"apply\" isLoading={this.isLoading} text=\"Apply\" size=\"sm\" onClickHandler={e => this.applyFiltersEvt(e)}></ir-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}