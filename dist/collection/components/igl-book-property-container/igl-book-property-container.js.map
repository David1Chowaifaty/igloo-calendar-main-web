{"version":3,"file":"igl-book-property-container.js","sourceRoot":"","sources":["../../../src/components/igl-book-property-container/igl-book-property-container.tsx"],"names":[],"mappings":"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","sourcesContent":["import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\nimport Token from '@/models/Token';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, State, h, Prop, Watch, Event, EventEmitter, Fragment } from '@stencil/core';\nimport { ICountry } from '@/models/IBooking';\n@Component({\n  tag: 'igl-book-property-container',\n  styleUrl: 'igl-book-property-container.css',\n  scoped: true,\n})\nexport class IglBookPropertyContainer {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() p: string;\n  @Prop() propertyid: number;\n  @Prop() from_date: string;\n  @Prop() to_date: string;\n  @Prop() withIrToastAndInterceptor: boolean = true;\n\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\n  @State() showPaymentDetails: any;\n  @State() countries: ICountry[];\n  @State() calendarData: any = {};\n\n  @Event() resetBookingData: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token = new Token();\n\n  setRoomsData(roomServiceResp) {\n    let roomsData: { [key: string]: any }[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    this.calendarData.roomsInfo = roomsData;\n  }\n  async initializeApp() {\n    try {\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\n        this.roomService.getExposedProperty({ id: this.propertyid, language: this.language, aname: this.p }),\n        this.roomService.fetchLanguage(this.language),\n        this.bookingService.getCountries(this.language),\n      ]);\n      if (!locales.entries) {\n        locales.entries = languageTexts.entries;\n        locales.direction = languageTexts.direction;\n      }\n      this.countries = countriesList;\n\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\n      this.setRoomsData(roomResponse);\n      const paymentCodesToShow = ['001', '004'];\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    }\n  }\n  componentWillLoad() {\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  handleTriggerClicked() {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\n      FROM_DATE: this.from_date,\n      defaultDateRange: {\n        fromDate: new Date(),\n        fromDateStr: '',\n        toDate: tomorrow,\n        toDateStr: '',\n        dateDifference: 0,\n        message: '',\n      },\n      TO_DATE: this.to_date,\n      EMAIL: '',\n      event_type: 'PLUS_BOOKING',\n      ID: '',\n      NAME: '',\n      PHONE: '',\n      REFERENCE_TYPE: '',\n      TITLE: locales.entries.Lcz_NewBooking,\n    };\n  }\n  render() {\n    return (\n      <Host>\n        {this.withIrToastAndInterceptor && (\n          <Fragment>\n            <ir-toast></ir-toast>\n            <ir-interceptor></ir-interceptor>\n          </Fragment>\n        )}\n\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\n          <slot name=\"trigger\"></slot>\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\n            adultChildConstraints={this.calendarData.adult_child_constraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.propertyid}\n            bookingData={this.bookingItem}\n            onResetBookingEvt={(e: CustomEvent) => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.resetBookingData.emit(null);\n            }}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n      </Host>\n    );\n  }\n}\n"]}