{"version":3,"file":"ir-checlbox.js","sourceRoot":"","sources":["../../../src/components/ir-checkbox/ir-checlbox.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAMxE,MAAM,OAAO,UAAU;;QAUrB,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1F,CAAC;QACH,CAAC,CAAC;;uBAbyD,KAAK;qBACxC,SAAS;wBACL,KAAK;;6BAEW,OAAO;;IAWnD,MAAM;QACJ,OAAO,CACL,8DAAO,KAAK,EAAE,mBAAmB,IAAI,CAAC,aAAa,EAAE;YAClD,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,gBAAO,IAAI,CAAC,KAAK,CAAQ;YAC7D,8DAAO,IAAI,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,GAAI;YAC9I,6DAAM,KAAK,EAAC,WAAW,GAAQ;YAC9B,IAAI,CAAC,aAAa,KAAK,OAAO,IAAI,gBAAO,IAAI,CAAC,KAAK,CAAQ,CACtD,CACT,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ir-checkbox',\n  styleUrl: 'ir-checkbox.css',\n})\nexport class IrCheckBox {\n  @Prop() name: string;\n  @Prop({ mutable: true, reflect: true }) checked: boolean = false;\n  @Prop() label: string = '<label>';\n  @Prop() disabled: boolean = false;\n  @Prop() value: string; // Added value property\n  @Prop() labelPosition: 'before' | 'after' = 'after'; // Added labelPosition property\n\n  @Event({ bubbles: true, composed: true }) checkboxChange: EventEmitter<{ name: string; value: string; checked: boolean }>;\n\n  handleInputChange = () => {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.checkboxChange.emit({ name: this.name, value: this.value, checked: this.checked });\n    }\n  };\n\n  render() {\n    return (\n      <label class={`check-container ${this.labelPosition}`}>\n        {this.labelPosition === 'before' && <span>{this.label}</span>}\n        <input type=\"checkbox\" name={this.name} value={this.value} checked={this.checked} disabled={this.disabled} onInput={this.handleInputChange} />\n        <span class=\"checkmark\"></span>\n        {this.labelPosition === 'after' && <span>{this.label}</span>}\n      </label>\n    );\n  }\n}\n"]}