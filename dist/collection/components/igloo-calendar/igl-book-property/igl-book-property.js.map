{"version":3,"file":"igl-book-property.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-book-property/igl-book-property.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '@/utils/utils';\r\nimport { IEntries, RoomBlockDetails } from '@/models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore } from '@/stores/booking.store';\r\nimport moment from 'moment';\r\nexport type IHistoryEntry = {\r\n  dates: { checkIn: Date; checkOut: Date };\r\n  adults: number;\r\n  children: number;\r\n};\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() bookingHistory: Array<{\r\n    dates: { checkIn: Date; checkOut: Date };\r\n    adults: number;\r\n    children: number;\r\n  }> = [];\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n  private updatedBooking: boolean = false;\r\n  private MAX_HISTORY_LENGTH: number = 2;\r\n  private didReservation: boolean;\r\n  private wasBlockedUnit: boolean;\r\n\r\n  async componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.initializeDefaultDateRange();\r\n\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    console.log('testing');\r\n    // console.log(this.bookingData);\r\n    this.initializeDefaultData();\r\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\r\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\r\n    await this.fetchSetupEntriesAndInitialize();\r\n    this.initializeEventData();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    if (key === 'select' || (key === 'blur' && data !== '')) {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\r\n      this.defaultData = { ...this.defaultData, booking: res };\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  // @Listen('adultChild')\r\n  // handleAdultChildChange(event: CustomEvent) {\r\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n  //   }\r\n  //   const { adult, child } = event.detail;\r\n  //   this.adultChildCount = { ...event.detail };\r\n  //   this.updateBookingHistory({ adults: adult, children: child });\r\n  // }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    const { adult, child } = event.detail;\r\n    this.adultChildCount = { ...event.detail };\r\n\r\n    // Update the booking history\r\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\r\n  }\r\n\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.updateBookingHistory({\r\n      dates: {\r\n        checkIn: new Date(this.dateRangeData.fromDate),\r\n        checkOut: new Date(new Date(opt.data.toDate)),\r\n      },\r\n    });\r\n    console.log('date changed', opt);\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.checkBookingAvailability();\r\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (calculateTotalRooms() > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else if (this.defaultData?.roomsInfo.length === 0) {\r\n          this.animateIrButton.emit('check_availability');\r\n          break;\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.checkBookingAvailability();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\r\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\r\n\r\n    const newEntry: IHistoryEntry = {\r\n      dates: {\r\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\r\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\r\n      },\r\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\r\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\r\n    };\r\n\r\n    // Update the booking history\r\n    this.bookingHistory.push(newEntry);\r\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\r\n      this.bookingHistory.shift();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    }\r\n  }\r\n\r\n  private initializeDefaultDateRange() {\r\n    this.defaultDateRange = {\r\n      from_date: this.bookingData.FROM_DATE,\r\n      to_date: this.bookingData.TO_DATE,\r\n    };\r\n  }\r\n\r\n  private initializeDefaultData() {\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n  }\r\n\r\n  private async fetchSetupEntriesAndInitialize() {\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  private initializeEventData() {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.initializeEditBookingData();\r\n    }\r\n\r\n    if (!this.isEventType('BAR_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n\r\n    this.initializePage();\r\n  }\r\n\r\n  private initializeEditBookingData() {\r\n    this.adultChildCount = {\r\n      adult: this.defaultData.ADULTS_COUNT,\r\n      child: this.defaultData.CHILDREN_COUNT,\r\n    };\r\n\r\n    this.initialRoomIds = {\r\n      roomName: this.defaultData.roomName,\r\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n      roomId: this.defaultData.PR_ID,\r\n      roomTypeId: this.defaultData.RATE_TYPE,\r\n    };\r\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n    console.log(GUEST);\r\n    modifyBookingStore('guest', {\r\n      bed_preference: currentRoomType.bed_preference?.toString(),\r\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n      first_name: GUEST.first_name ?? '',\r\n      last_name: GUEST.last_name ?? '',\r\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n      unit: (currentRoomType.unit as any)?.id?.toString(),\r\n    });\r\n    this.checkBookingAvailability();\r\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n  }\r\n\r\n  private initializePage() {\r\n    switch (this.defaultData.event_type) {\r\n      case 'SPLIT_BOOKING':\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n        break;\r\n      case 'BLOCK_DATES':\r\n        this.page = 'page_block_date';\r\n        break;\r\n      default:\r\n        this.page = 'page_one';\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  private isGuestDataIncomplete() {\r\n    for (const roomtypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (const guest of rateplan.guest) {\r\n            if (guest.first_name === '' || guest.last_name === '') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n    );\r\n  }\r\n\r\n  private setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  private setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  private async checkBookingAvailability() {\r\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\r\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\r\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n        room_type_ids_to_update,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\r\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\r\n        this.updateBooking();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing booking availability:', error);\r\n    }\r\n  }\r\n\r\n  private updateBooking() {\r\n    try {\r\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n      const roomtypeId = currentRoomType.roomtype.id;\r\n      const rateplanId = currentRoomType.rateplan.id;\r\n      reserveRooms({\r\n        roomTypeId: roomtypeId,\r\n        ratePlanId: rateplanId,\r\n        rooms: 1,\r\n        guest: [\r\n          {\r\n            bed_preference: currentRoomType.bed_preference?.toString(),\r\n            infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n            last_name: GUEST.last_name,\r\n            first_name: GUEST.first_name,\r\n            unit: (currentRoomType.unit as any)?.id?.toString(),\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private async checkAndBlockDate() {\r\n    try {\r\n      const { block_exposed_unit_props } = this.defaultData;\r\n      await this.bookingService.getBookingAvailability({\r\n        from_date: block_exposed_unit_props.from_date,\r\n        to_date: block_exposed_unit_props.to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: {\r\n          adult: 2,\r\n          child: 0,\r\n        },\r\n        language: this.language,\r\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\r\n        currency: this.currency,\r\n      });\r\n      const isAvailable = booking_store.roomTypes.every(rt => rt.is_available_to_book);\r\n      if (isAvailable) {\r\n        await this.handleBlockDate(false);\r\n      } else {\r\n        console.log('Blocked date is unavailable. Continuing...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking and blocking date:', error);\r\n    }\r\n  }\r\n  private async closeWindow() {\r\n    resetBookingStore();\r\n    this.closeBookingWindow.emit();\r\n\r\n    if (this.wasBlockedUnit && !this.didReservation) {\r\n      await this.checkAndBlockDate();\r\n    }\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private isEventType(key: TEventType) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n\r\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  private renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  private gotoPage(gotoPage: string) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  private getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n\r\n  private async handleBlockDate(auto_close = true) {\r\n    const props = this.wasBlockedUnit\r\n      ? this.defaultData.block_exposed_unit_props\r\n      : (() => {\r\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n          return {\r\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n            pr_id: this.defaultData.PR_ID.toString(),\r\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n            ...releaseData,\r\n          };\r\n        })();\r\n    await this.bookingService.blockUnit(props);\r\n    // const blockedUnit = await transformNewBLockedRooms(result);\r\n    // this.blockedCreated.emit(blockedUnit);\r\n    if (auto_close) this.closeWindow();\r\n  }\r\n\r\n  private async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else if (this.isButtonDisabled()) {\r\n      this.isLoading = '';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      this.didReservation = true;\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\r\n        context: this,\r\n        sourceOption: this.sourceOption,\r\n        check_in,\r\n      });\r\n      await this.bookingService.doReservation(serviceParams);\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.error('Error booking user:', error);\r\n    } finally {\r\n      // this.isLoading = null;\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  private setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  private resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n\r\n  private getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-booking-form\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-booking-form>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}