{"version":3,"file":"igl-bulk-stop-sale.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-bulk-stop-sale/igl-bulk-stop-sale.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BookingService } from '@/services/booking.service';\nimport calendar_data from '@/stores/calendar-data';\nimport { ReloadInterceptor } from '@/utils/ReloadInterceptor';\nimport { Component, Event, EventEmitter, h, Listen, Prop, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\nimport { z, ZodError } from 'zod';\nimport { IToast } from '@components/ui/ir-toast/toast';\nexport type SelectedRooms = { id: string | number; result: 'open' | 'closed' };\n\n@Component({\n  tag: 'igl-bulk-stop-sale',\n  styleUrls: ['igl-bulk-stop-sale.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBulkStopSale {\n  @Prop() maxDatesLength = 8;\n\n  @State() selectedRoomTypes: SelectedRooms[] = [];\n  @State() errors: 'dates' | 'rooms' | 'weekdays';\n  @State() isLoading: boolean;\n  @State() dates: {\n    from: Moment | null;\n    to: Moment | null;\n  }[] = [{ from: null, to: null }];\n\n  @State() selectedWeekdays: Set<number> = new Set(\n    Array(7)\n      .fill(null)\n      .map((_, i) => i),\n  );\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private sidebar: HTMLIrSidebarElement;\n  private dateRefs: { from?: HTMLIrDatePickerElement; to?: HTMLIrDatePickerElement }[] = [];\n  // private allRoomTypes: SelectedRooms[] = [];\n  private reloadInterceptor: ReloadInterceptor;\n  private minDate = moment().format('YYYY-MM-DD');\n  private bookingService = new BookingService();\n  private getDayIndex(dateStr: string): number {\n    return moment(dateStr, 'YYYY-MM-DD').day();\n  }\n  private datesSchema = z.array(\n    z.object({\n      from: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'from' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n      to: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'to' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n    }),\n  );\n\n  //sections\n  private unitSections: HTMLTableElement;\n  private weekdaysSections: HTMLIrWeekdaySelectorElement;\n  private datesSections: HTMLTableElement;\n\n  componentDidLoad() {\n    this.reloadInterceptor = new ReloadInterceptor({ autoActivate: false });\n    this.sidebar = document.querySelector('ir-sidebar') as HTMLIrSidebarElement;\n  }\n\n  disconnectedCallback() {\n    this.reloadInterceptor.deactivate();\n  }\n\n  @Listen('beforeSidebarClose', { target: 'body' })\n  handleBeforeSidebarClose(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    if (window.confirm('Do you really want to proceed?')) {\n      this.deactivate();\n      this.sidebar.toggleSidebar();\n    }\n  }\n\n  private async addBlockDates() {\n    const generatePeriodsToModify = periods => {\n      const p = [];\n      for (const period of periods) {\n        let current = period.from;\n        const lastDay = moment(period.to, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n        while (current !== lastDay) {\n          const nextDay = moment(current, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n          if (!this.selectedWeekdays.has(this.getDayIndex(current))) {\n            current = nextDay;\n            continue;\n          }\n          for (const selectedRoom of this.selectedRoomTypes) {\n            p.push({\n              room_type_id: selectedRoom.id,\n              night: current,\n            });\n          }\n          current = nextDay;\n        }\n      }\n      return p;\n    };\n    try {\n      this.errors = null;\n      this.isLoading = true;\n      const periods = this.datesSchema.parse(this.dates);\n      if (this.selectedRoomTypes.length === 0) {\n        this.unitSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'rooms';\n        return;\n      }\n      if (this.selectedWeekdays.size === 0) {\n        this.weekdaysSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'weekdays';\n        return;\n      }\n      this.activate();\n      const periods_to_modify = generatePeriodsToModify(periods);\n      const isAllOpen = this.selectedRoomTypes.every(e => e.result === 'open');\n      const isAllClosed = this.selectedRoomTypes.every(e => e.result === 'closed');\n      if (isAllClosed || isAllOpen) {\n        await this.bookingService.setExposedRestrictionPerRoomType({\n          is_closed: isAllClosed,\n          restrictions: periods_to_modify,\n        });\n      } else {\n        const payloads = [];\n        for (const room of this.selectedRoomTypes) {\n          const periods = periods_to_modify.filter(f => f.room_type_id === room.id);\n          payloads.push({\n            is_closed: room.result === 'closed',\n            restrictions: periods,\n          });\n        }\n        await Promise.all(payloads.map(p => this.bookingService.setExposedRestrictionPerRoomType(p)));\n      }\n      this.deactivate();\n      this.toast.emit({\n        type: 'success',\n        title: 'Request was submitted successfully. Your changes have been queued and will be applied shortly.',\n        description: '',\n      });\n      this.isLoading = false;\n      this.closeModal.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        this.datesSections.scrollIntoView({ behavior: 'smooth', block: 'end' });\n        this.errors = 'dates';\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private activate() {\n    this.reloadInterceptor.activate();\n    if (this.sidebar) this.sidebar.preventClose = true;\n  }\n\n  private deactivate() {\n    this.reloadInterceptor.deactivate();\n    if (this.sidebar) this.sidebar.preventClose = false;\n  }\n\n  private handleDateChange({ index, date, key }: { index: number; date: Moment; key: 'from' | 'to' }) {\n    // 1) clone and set the new date\n    const dates = [...this.dates];\n    dates[index] = { ...dates[index], [key]: date };\n\n    // 1a) if they just changed the “from”, always clear that row’s “to”\n    if (key === 'from' && dates[index].to?.isBefore(date, 'dates')) {\n      dates[index].to = null;\n    }\n\n    // 2) clear any subsequent rows whose “from” is on or before the changed date\n    for (let i = index + 1; i < dates.length; i++) {\n      const rowFrom = dates[i]?.from;\n      if (rowFrom && rowFrom.isSameOrBefore(date, 'day')) {\n        dates[i] = { from: null, to: null };\n      }\n    }\n\n    // 3) commit\n    this.dates = dates;\n\n    // 4) open the appropriate picker\n    setTimeout(() => {\n      if (key === 'from') {\n        this.dateRefs[index]?.to.openDatePicker();\n      } else {\n        const nextFrom = dates.findIndex(d => d.from === null);\n        if (nextFrom > -1) {\n          this.dateRefs[nextFrom]?.from.openDatePicker();\n        }\n      }\n    }, 100);\n  }\n\n  private addDateRow() {\n    const last_dates = this.dates[this.dates.length - 1];\n    if (!last_dates.from || !last_dates.to) {\n      this.errors = 'dates';\n      return;\n    }\n    this.errors = null;\n    this.dates = [...this.dates, { from: null, to: null }];\n    setTimeout(() => {\n      this.dateRefs[this.dates.length - 1].to?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }, 100);\n  }\n\n  render() {\n    return (\n      <form\n        class={'bulk-sheet-container'}\n        onSubmit={e => {\n          e.preventDefault();\n          this.addBlockDates();\n        }}\n      >\n        <div class=\"sheet-header d-flex align-items-center\">\n          <ir-title\n            onCloseSideBar={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              if (this.isLoading) {\n                return;\n              }\n              this.closeModal.emit(null);\n            }}\n            class=\"px-1 mb-0\"\n            label=\"Bulk Stop/Open Sale\"\n            displayContext=\"sidebar\"\n          ></ir-title>\n        </div>\n        <div class=\"sheet-body px-1\">\n          <div class=\"text-muted text-left py-0 my-0\">\n            <p>\n              Select the affected unit(s). <span class=\"text-warning\">This operation might require several minutes.</span>\n            </p>\n          </div>\n          <div>\n            {this.errors === 'rooms' && (\n              <p class={'text-danger text-left smaller p-0 '} style={{ 'margin-bottom': '0.5rem' }}>\n                Please select at least one {calendar_data.is_vacation_rental ? 'listing' : 'unit'}\n              </p>\n            )}\n            <table ref={el => (this.unitSections = el)}>\n              <thead>\n                <tr>\n                  <th class=\"sr-only\">choice</th>\n                  <th class=\"sr-only\">room type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {calendar_data.roomsInfo.map((roomType, i) => {\n                  const row_style = i === calendar_data.roomsInfo.length - 1 ? '' : 'pb-1';\n                  return (\n                    <tr key={roomType.id}>\n                      <td class={`choice-row ${row_style}`}>\n                        <div class={'d-flex justify-content-end'}>\n                          <ir-select\n                            LabelAvailable={false}\n                            data={[\n                              { value: 'open', text: 'Open' },\n                              { value: 'closed', text: 'Stop sale' },\n                            ]}\n                            onSelectChange={e => {\n                              const choice = e.detail as 'open' | 'closed' | undefined;\n                              // drop any existing entry for this roomType\n                              const rest = this.selectedRoomTypes.filter(entry => entry.id !== roomType.id);\n                              // if they actually picked something, append it\n                              if (choice) {\n                                rest.push({ id: roomType.id, result: choice });\n                              }\n                              this.selectedRoomTypes = rest;\n                            }}\n                          ></ir-select>\n                        </div>\n                      </td>\n                      <td class={`pl-1 text-left ${row_style}`}>{roomType.name}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <p class=\"text-left mt-2 text-muted\">Included days</p>\n          {this.errors === 'weekdays' && <p class={'text-danger text-left smaller m-0 p-0'}>Please select at least one day</p>}\n          <ir-weekday-selector\n            ref={el => (this.weekdaysSections = el)}\n            weekdays={Array.from(this.selectedWeekdays)}\n            onWeekdayChange={e => {\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n              this.selectedWeekdays = new Set(e.detail);\n            }}\n          ></ir-weekday-selector>\n          {/* Dates */}\n          <table class=\"mt-1\" ref={el => (this.datesSections = el)}>\n            <thead>\n              <tr>\n                <th class=\"text-left\">From</th>\n                <th class=\"text-left\">to (inclusive)</th>\n                <td>\n                  {this.dates.length !== this.maxDatesLength && (\n                    <ir-button\n                      variant=\"icon\"\n                      icon_name=\"plus\"\n                      onClickHandler={() => {\n                        this.addDateRow();\n                      }}\n                    ></ir-button>\n                  )}\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {this.dates.map((d, i) => {\n                if (!this.dateRefs[i]) {\n                  this.dateRefs[i] = {};\n                }\n\n                const fromDateMinDate = i > 0 ? this.dates[i - 1]?.to.clone().add(1, 'days')?.format('YYYY-MM-DD') ?? this.minDate : this.minDate;\n                const toDateMinDate = this.dates[i].from ? this.dates[i]?.from.clone().add(1, 'days')?.format('YYYY-MM-DD') : this.minDate;\n                return (\n                  <tr key={`date_${i}`}>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        ref={el => {\n                          this.dateRefs[i].from = el;\n                        }}\n                        forceDestroyOnUpdate\n                        minDate={fromDateMinDate}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.from?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        aria-invalid={String(this.errors === 'dates' && !d.from)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'from' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          if (i === 0) {\n                            return;\n                          }\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.from ? d.from.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors === 'dates' && !d.to ? 'border-danger' : ''} text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        forceDestroyOnUpdate\n                        ref={el => {\n                          this.dateRefs[i].to = el;\n                        }}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.to?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        minDate={toDateMinDate}\n                        aria-invalid={String(this.errors === 'dates' && !d.to)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'to' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from?.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.to ? d.to.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm \n                          ${this.errors === 'dates' && !d.to ? 'border-danger' : ''}\n                          text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    {i > 0 && (\n                      <td class=\"pb-1\">\n                        <ir-button\n                          variant=\"icon\"\n                          icon_name=\"minus\"\n                          onClickHandler={() => {\n                            this.dates = this.dates.filter((_, j) => j !== i);\n                          }}\n                        ></ir-button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div class={'sheet-footer'}>\n          <ir-button text=\"Cancel\" btn_color=\"secondary\" class={'flex-fill'} onClickHandler={() => this.closeModal.emit(null)}></ir-button>\n          <ir-button isLoading={this.isLoading} text=\"Save\" btn_type=\"submit\" class=\"flex-fill\"></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n"]}