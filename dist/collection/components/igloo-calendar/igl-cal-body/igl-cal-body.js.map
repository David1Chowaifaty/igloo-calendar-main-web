{"version":3,"file":"igl-cal-body.js","sourceRoot":"","sources":["../../../../src/components/igloo-calendar/igl-cal-body/igl-cal-body.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Listen, Prop, State, h, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\n\nimport moment from 'moment';\n\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { compareTime, createDateWithOffsetAndHour } from '@/utils/booking';\n\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\n\nimport { PhysicalRoom, RoomType } from '@/models/booking.dto';\nimport { ICountry } from '@/models/IBooking';\n\nexport type RoomCategory = RoomType & { expanded: boolean };\n\n@Component({\n  tag: 'igl-cal-body',\n  styleUrl: 'igl-cal-body.css',\n  scoped: true,\n})\nexport class IglCalBody {\n  @Prop() isScrollViewDragging: boolean;\n  @Prop() propertyId: number;\n  @Prop() calendarData: { [key: string]: any };\n  @Prop() today: String;\n  @Prop() currency;\n  @Prop() language: string;\n  @Prop() countries: ICountry[];\n  @Prop() highlightedDate: string;\n\n  @State() dragOverElement: string = '';\n  @State() renderAgain: boolean = false;\n  @State() selectedRoom: PhysicalRoom;\n  @State() isLoading: boolean;\n\n  @Event() addBookingDatasEvent: EventEmitter<any[]>;\n  @Event() showBookingPopup: EventEmitter;\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\n\n  @State() selectedRooms: { [key: string]: any } = {};\n  private fromRoomId: number = -1;\n  private newEvent: { [key: string]: any };\n  private currentDate = new Date();\n  private hkModal: HTMLIrModalElement;\n  private housekeepingService = new HouseKeepingService();\n  private bookingMap = new Map<string | number, string | number>();\n  private interactiveTitle: HTMLIrInteractiveTitleElement[] = [];\n  private dayRateMap = new Map<string, (typeof calendar_dates.days)[0]['rate']>();\n  // private disabledCellsCache = new Map<string, boolean>();\n\n  componentWillLoad() {\n    this.currentDate.setHours(0, 0, 0, 0);\n    this.bookingMap = this.getBookingMap(this.getBookingData());\n    calendar_dates.days.forEach(day => {\n      this.dayRateMap.set(day.day, day.rate);\n    });\n    this.updateDisabledCellsCache();\n  }\n\n  @Watch('calendarData')\n  handleCalendarDataChange() {\n    this.bookingMap = this.getBookingMap(this.getBookingData());\n    this.updateDisabledCellsCache();\n  }\n\n  @Listen('dragOverHighlightElement', { target: 'window' })\n  dragOverHighlightElementHandler(event: CustomEvent) {\n    this.dragOverElement = event.detail.dragOverElement;\n  }\n\n  @Listen('gotoRoomEvent', { target: 'window' })\n  gotoRoom(event: CustomEvent) {\n    let roomId = event.detail.roomId;\n    let category = this.getRoomCategoryByRoomId(roomId);\n    if (!category.expanded) {\n      this.toggleCategory(category);\n      setTimeout(() => {\n        this.scrollToRoom(roomId);\n      }, 10);\n    } else {\n      this.scrollToRoom(roomId);\n    }\n  }\n\n  @Listen('addToBeAssignedEvent', { target: 'window' })\n  addToBeAssignedEvents(event: CustomEvent) {\n    // let roomId = event.detail.roomId;\n    this.addBookingDatas(event.detail.data);\n    this.renderElement();\n  }\n\n  @Listen('closeBookingWindow', { target: 'window' })\n  closeWindow() {\n    let ind = this.getBookingData().findIndex(ev => ev.ID === 'NEW_TEMP_EVENT');\n    if (ind !== -1) {\n      this.getBookingData().splice(ind, 1);\n      console.log('removed item..');\n      this.renderElement();\n    }\n  }\n\n  private scrollToRoom(roomId: number) {\n    this.scrollPageToRoom.emit({\n      key: 'scrollPageToRoom',\n      id: roomId,\n      refClass: 'room_' + roomId,\n    });\n  }\n\n  private getRoomCategoryByRoomId(roomId) {\n    return this.calendarData.roomsInfo.find(roomCategory => {\n      return this.getCategoryRooms(roomCategory).find(room => this.getRoomId(room) === roomId);\n    });\n  }\n\n  private getCategoryName(roomCategory) {\n    return roomCategory.name;\n  }\n\n  private getCategoryId(roomCategory) {\n    return roomCategory.id;\n  }\n\n  private getTotalPhysicalRooms(roomCategory) {\n    return this.getCategoryRooms(roomCategory).length;\n  }\n\n  private getCategoryRooms(roomCategory: RoomCategory) {\n    return (roomCategory && roomCategory.physicalrooms) || [];\n  }\n\n  private getRoomName(roomInfo) {\n    return roomInfo.name;\n  }\n\n  private getRoomId(roomInfo) {\n    return roomInfo.id;\n  }\n\n  private getRoomById(physicalRooms, roomId) {\n    return physicalRooms.find(physical_room => this.getRoomId(physical_room) === roomId);\n  }\n\n  private getBookingData() {\n    return this.calendarData.bookingEvents;\n  }\n\n  private addBookingDatas(aData) {\n    this.addBookingDatasEvent.emit(aData);\n  }\n\n  private getSelectedCellRefName(roomId, selectedDay) {\n    return 'room_' + roomId + '_' + selectedDay.currentDate;\n  }\n\n  // getSplitBookingEvents(newEvent) {\n  //   return this.getBookingData().some(bookingEvent => !['003', '002', '004'].includes(bookingEvent.STATUS_CODE) && newEvent.FROM_DATE === bookingEvent.FROM_DATE);\n  // }\n  private getSplitBookingEvents(newEvent) {\n    console.log(newEvent.FROM_DATE);\n    return this.getBookingData().some(bookingEvent => {\n      if (!['003', '002', '004'].includes(bookingEvent.STATUS_CODE)) {\n        if (\n          new Date(newEvent.FROM_DATE).getTime() >= new Date(bookingEvent.FROM_DATE).getTime() &&\n          new Date(newEvent.FROM_DATE).getTime() <= new Date(bookingEvent.TO_DATE).getTime()\n        ) {\n          return bookingEvent;\n        }\n      }\n    });\n  }\n\n  private addNewEvent(roomCategory) {\n    let keys = Object.keys(this.selectedRooms);\n    let startDate: Date, endDate: Date;\n\n    if (this.selectedRooms[keys[0]].currentDate < this.selectedRooms[keys[1]].currentDate) {\n      startDate = new Date(this.selectedRooms[keys[0]].currentDate);\n      endDate = new Date(this.selectedRooms[keys[1]].currentDate);\n    } else {\n      startDate = new Date(this.selectedRooms[keys[1]].currentDate);\n      endDate = new Date(this.selectedRooms[keys[0]].currentDate);\n    }\n\n    const dateDifference = Math.round(Math.abs((endDate.getTime() - startDate.getTime()) / 86_400_000));\n    this.newEvent = {\n      ID: 'NEW_TEMP_EVENT',\n      NAME: <span>&nbsp;</span>,\n      EMAIL: '',\n      PHONE: '',\n      convertBooking: false,\n      REFERENCE_TYPE: 'PHONE',\n      FROM_DATE: startDate.getFullYear() + '-' + this.getTwoDigitNumStr(startDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(startDate.getDate()),\n      TO_DATE: endDate.getFullYear() + '-' + this.getTwoDigitNumStr(endDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(endDate.getDate()),\n      BALANCE: '',\n      NOTES: '',\n      RELEASE_AFTER_HOURS: 0,\n      PR_ID: this.selectedRooms[keys[0]].roomId,\n      ENTRY_DATE: '',\n      NO_OF_DAYS: dateDifference,\n      ADULTS_COUNT: 1,\n      COUNTRY: '',\n      INTERNAL_NOTE: '',\n      RATE: '',\n      TOTAL_PRICE: '',\n      RATE_PLAN: '',\n      ARRIVAL_TIME: '',\n      TITLE: locales.entries.Lcz_NewBookingFor,\n      roomsInfo: [roomCategory],\n      CATEGORY: roomCategory.name,\n      event_type: 'BAR_BOOKING',\n      STATUS: 'TEMP-EVENT',\n      defaultDateRange: {\n        fromDate: null,\n        fromDateStr: '',\n        toDate: null,\n        toDateStr: '',\n        dateDifference,\n        editable: false,\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\n      },\n    };\n\n    let popupTitle = roomCategory.name + ' ' + this.getRoomName(this.getRoomById(this.getCategoryRooms(roomCategory), this.selectedRooms[keys[0]].roomId));\n    this.newEvent.BLOCK_DATES_TITLE = `${locales.entries.Lcz_BlockDatesFor} ${popupTitle}`;\n    this.newEvent.TITLE += popupTitle;\n    this.newEvent.defaultDateRange.toDate = new Date(this.newEvent.TO_DATE + 'T00:00:00');\n    this.newEvent.defaultDateRange.fromDate = new Date(this.newEvent.FROM_DATE + 'T00:00:00');\n    this.newEvent.defaultDateRange.fromDateStr = this.getDateStr(this.newEvent.defaultDateRange.fromDate);\n    this.newEvent.defaultDateRange.toDateStr = this.getDateStr(this.newEvent.defaultDateRange.toDate);\n    this.newEvent.ENTRY_DATE = new Date().toISOString();\n    this.newEvent.legendData = this.calendarData.formattedLegendData;\n\n    let splitBookingEvents = this.getSplitBookingEvents(this.newEvent);\n    if (splitBookingEvents) {\n      this.newEvent.splitBookingEvents = splitBookingEvents;\n    }\n\n    this.getBookingData().push(this.newEvent);\n    return this.newEvent;\n  }\n\n  private getTwoDigitNumStr(num) {\n    return num <= 9 ? '0' + num : num;\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n\n  private removeNewEvent() {\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(events => events.ID !== 'NEW_TEMP_EVENT');\n    this.newEvent = null;\n  }\n\n  // private clickCell(roomId, selectedDay, roomCategory) {\n  //   if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\n  //     let refKey = this.getSelectedCellRefName(roomId, selectedDay);\n  //     if (this.selectedRooms.hasOwnProperty(refKey)) {\n  //       this.removeNewEvent();\n  //       delete this.selectedRooms[refKey];\n  //       this.renderElement();\n  //       return;\n  //     } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\n  //       this.removeNewEvent();\n  //       this.selectedRooms = {};\n  //       this.selectedRooms[refKey] = { ...selectedDay, roomId };\n  //       this.fromRoomId = roomId;\n  //       this.renderElement();\n  //     } else {\n  //       // create bar;\n  //       this.selectedRooms[refKey] = { ...selectedDay, roomId };\n  //       this.addNewEvent(roomCategory);\n  //       this.selectedRooms = {};\n  //       this.renderElement();\n  //       this.showNewBookingPopup(this.newEvent);\n  //     }\n  //   }\n  // }\n  private clickCell(roomId: number, selectedDay: any, roomCategory: RoomCategory) {\n    if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\n      let refKey = this.getSelectedCellRefName(roomId, selectedDay);\n      if (this.selectedRooms.hasOwnProperty(refKey)) {\n        this.removeNewEvent();\n        delete this.selectedRooms[refKey];\n        this.renderElement();\n        return;\n      } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\n        this.removeNewEvent();\n        this.selectedRooms = {};\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\n        this.fromRoomId = roomId;\n        this.renderElement();\n      } else {\n        const keys = Object.keys(this.selectedRooms);\n        const startDate = moment(this.selectedRooms[keys[0]].value, 'YYYY-MM-DD');\n        const endDate = moment(selectedDay.value, 'YYYY-MM-DD');\n        let cursor = startDate.clone().add(1, 'days');\n        let disabledCount = 0;\n        while (cursor.isBefore(endDate, 'day')) {\n          const dateKey = cursor.format('YYYY-MM-DD');\n          if (this.isCellDisabled(roomId, dateKey)) {\n            disabledCount++;\n          }\n          cursor.add(1, 'days');\n        }\n        if (disabledCount >= 1) {\n          this.selectedRooms = {};\n          this.fromRoomId = roomId;\n          this.renderElement();\n          return;\n        }\n\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\n        this.addNewEvent(roomCategory);\n        this.selectedRooms = {};\n        this.renderElement();\n        this.showNewBookingPopup(this.newEvent);\n      }\n    }\n  }\n  private showNewBookingPopup(data) {\n    console.log(data);\n    // this.showBookingPopup.emit({key: \"add\", data});\n  }\n\n  private renderElement() {\n    this.renderAgain = !this.renderAgain;\n  }\n  private getBookingMap(bookings: any[]): Map<string | number, string | number> {\n    const bookingMap = new Map<string | number, string | number>();\n    const today = moment().startOf('day');\n\n    for (const booking of bookings) {\n      const fromDate = moment(booking.FROM_DATE, 'YYYY-MM-DD').startOf('day');\n      const toDate = moment(booking.TO_DATE, 'YYYY-MM-DD').startOf('day');\n\n      // Check if today is between fromDate and toDate, inclusive.\n      if (today.isSameOrAfter(fromDate) && today.isSameOrBefore(toDate)) {\n        if (!bookingMap.has(booking.PR_ID)) {\n          bookingMap.set(booking.PR_ID, booking.BOOKING_NUMBER);\n        } else {\n          if (compareTime(moment().toDate(), createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour))) {\n            bookingMap.set(booking.PR_ID, booking.BOOKING_NUMBER);\n          }\n        }\n      }\n    }\n\n    return bookingMap;\n  }\n  private getGeneralCategoryDayColumns(addClass: string, isCategory: boolean = false, index: number) {\n    return calendar_dates.days.map(dayInfo => {\n      // const isActive = true;\n      return (\n        <div\n          class={`cellData  font-weight-bold categoryPriceColumn ${addClass + '_' + dayInfo.day} ${\n            dayInfo.day === this.today || dayInfo.day === this.highlightedDate ? 'currentDay' : ''\n          }`}\n        >\n          {isCategory ? (\n            <Fragment>\n              <span class={'categoryName'}>\n                {dayInfo.rate[index].exposed_inventory.rts}\n                {/* <button class={'triangle-button'} style={{ '--in-toggle-color': isActive ? 'green' : '#ff4961' }}></button> */}\n                {/* <br />\n              {dayInfo.rate[index].exposed_inventory.offline} */}\n              </span>\n            </Fragment>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    });\n  }\n\n  private getGeneralRoomDayColumns(roomId: string, roomCategory: RoomCategory, roomName: string) {\n    return this.calendarData.days.map(dayInfo => {\n      const isCellDisabled = this.isCellDisabled(Number(roomId), dayInfo.value);\n      const prevDate = moment(dayInfo.value, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD');\n      const isDisabled = (isCellDisabled && Object.keys(this.selectedRooms).length === 0) || (isCellDisabled && this.isCellDisabled(Number(roomId), prevDate));\n      const isSelected = this.selectedRooms.hasOwnProperty(this.getSelectedCellRefName(roomId, dayInfo));\n      const isCurrentDate = dayInfo.day === this.today || dayInfo.day === this.highlightedDate;\n      return (\n        <div\n          class={`cellData position-relative roomCell ${isCellDisabled ? 'disabled' : ''} ${'room_' + roomId + '_' + dayInfo.day} ${isCurrentDate ? 'currentDay' : ''} ${\n            this.dragOverElement === roomId + '_' + dayInfo.day ? 'dragOverHighlight' : ''\n          } ${isSelected ? 'selectedDay' : ''}`}\n          style={!isDisabled && { '--cell-cursor': 'default' }}\n          onClick={() => {\n            if (isDisabled) {\n              return;\n            }\n            this.clickCell(Number(roomId), dayInfo, roomCategory);\n          }}\n          aria-label={roomName}\n          role=\"gridcell\"\n          data-room-id={roomId}\n          data-date={dayInfo.value}\n          aria-current={isCurrentDate ? 'date' : undefined}\n          data-room-name={roomName}\n          aria-disabled={String(isDisabled)}\n          aria-selected={Boolean(isSelected)}\n          // tabIndex={-1}\n        >\n          {/* <button class={'triangle-button'} style={{ '--in-toggle-color': isDisabled ? 'green' : '#ff4961' }}></button> */}\n        </div>\n      );\n    });\n  }\n\n  private toggleCategory(roomCategory: RoomCategory) {\n    roomCategory.expanded = !roomCategory.expanded;\n    this.renderElement();\n  }\n\n  private getRoomCategoryRow(roomCategory: RoomCategory, index: number) {\n    if (this.getTotalPhysicalRooms(roomCategory) <= 1 || !roomCategory.is_active) {\n      return null;\n    }\n    return (\n      <div class=\"roomRow\">\n        <div\n          class={`cellData text-left align-items-center roomHeaderCell categoryTitle ${'category_' + this.getCategoryId(roomCategory)}`}\n          onClick={() => this.toggleCategory(roomCategory)}\n        >\n          <div class={'categoryName'}>\n            <ir-interactive-title popoverTitle={this.getCategoryName(roomCategory)}></ir-interactive-title>\n            {/* <ir-popover popoverTitle={this.getCategoryName(roomCategory)}></ir-popover> */}\n          </div>\n          {roomCategory.expanded ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" height={14} width={14}>\n              <path\n                fill=\"#6b6f82\"\n                d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"\n              />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" height={14} width={14}>\n              <path\n                fill=\"#6b6f82\"\n                d=\"M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z\"\n              />\n            </svg>\n          )}\n          {/* <i class={`la la-angle-${roomCategory.expanded ? 'down' : 'right'}`}></i> */}\n        </div>\n        {this.getGeneralCategoryDayColumns('category_' + this.getCategoryId(roomCategory), true, index)}\n      </div>\n    );\n  }\n\n  /**\n   * Renders a list of active rooms for an expanded room category. Returns an array of JSX elements, including headers and day columns, or an empty array if the category is collapsed or contains no active rooms.\n   *\n   * @param {RoomCategory} roomCategory - The category containing room details.\n   */\n  private getRoomsByCategory(roomCategory: RoomCategory) {\n    // Check accordion is expanded.\n    if (!roomCategory.expanded) {\n      return null;\n    }\n    return this.getCategoryRooms(roomCategory)?.map(room => {\n      if (!room.is_active) {\n        return null;\n      }\n      const haveSingleRooms = this.getTotalPhysicalRooms(roomCategory) <= 1;\n      const name = haveSingleRooms ? this.getCategoryName(roomCategory) : this.getRoomName(room);\n      return (\n        <div class=\"roomRow\">\n          <div\n            class={`cellData room text-left align-items-center roomHeaderCell  roomTitle ${this.getTotalPhysicalRooms(roomCategory) <= 1 ? 'pl10' : ''} ${\n              'room_' + this.getRoomId(room)\n            }`}\n            data-room-name={name}\n            data-hk-enabled={String(calendar_data.housekeeping_enabled)}\n            data-room={this.getRoomId(room)}\n            onClick={() => {\n              if (!calendar_data.housekeeping_enabled) {\n                return;\n              }\n              this.selectedRoom = room;\n              this.hkModal.openModal();\n            }}\n            onMouseEnter={() => {\n              this.interactiveTitle[room.id]?.style?.setProperty('--ir-interactive-hk-bg', '#e0e0e0');\n            }}\n            onMouseLeave={() => {\n              this.interactiveTitle[room.id]?.style?.removeProperty('--ir-interactive-hk-bg');\n            }}\n          >\n            <ir-interactive-title\n              ref={el => {\n                if (el) this.interactiveTitle[room.id] = el;\n              }}\n              style={room.hk_status === '003' && { '--dot-color': '#ededed' }}\n              hkStatus={calendar_data.housekeeping_enabled && room.hk_status !== '001'}\n              broomTooltip={room.hk_status === '002' ? 'This unit is dirty' : undefined}\n              popoverTitle={name}\n            ></ir-interactive-title>\n          </div>\n          {this.getGeneralRoomDayColumns(this.getRoomId(room), roomCategory, name)}\n        </div>\n      );\n    });\n  }\n\n  private getRoomRows() {\n    return this.calendarData.roomsInfo?.map((roomCategory, index) => {\n      if (roomCategory.is_active) {\n        return (\n          <Fragment>\n            {this.getRoomCategoryRow(roomCategory, index)}\n            {roomCategory.expanded && this.getRoomsByCategory(roomCategory)}\n          </Fragment>\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n  private async confirmHousekeepingUpdate(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      this.isLoading = true;\n      const newStatusCode = this.selectedRoom?.hk_status === '002' ? '001' : '002';\n      await this.housekeepingService.setExposedUnitHKStatus({\n        property_id: this.propertyId,\n        // housekeeper: this.selectedRoom?.housekeeper ? { id: this.selectedRoom?.housekeeper?.id } : null,\n        status: {\n          code: newStatusCode,\n        },\n        unit: {\n          id: this.selectedRoom?.id,\n        },\n      });\n      if (newStatusCode === '001') {\n        await this.housekeepingService.executeHKAction({\n          actions: [\n            {\n              description: 'Cleaned',\n              hkm_id: this.selectedRoom?.housekeeper.id || null,\n              unit_id: this.selectedRoom?.id,\n              booking_nbr: this.bookingMap.get(this.selectedRoom?.id) ?? null,\n            },\n          ],\n        });\n      }\n    } finally {\n      this.isLoading = false;\n      this.selectedRoom = null;\n      this.hkModal.closeModal();\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"bodyContainer\">\n          {this.getRoomRows()}\n          <div class=\"bookingEventsContainer preventPageScroll\">\n            {this.getBookingData()?.map(bookingEvent => {\n              return (\n                <igl-booking-event\n                  data-testid={`booking_${bookingEvent.BOOKING_NUMBER}`}\n                  data-room-name={bookingEvent.roomsInfo?.find(r => r.id === bookingEvent.RATE_TYPE)?.physicalrooms.find(r => r.id === bookingEvent.PR_ID)?.name}\n                  language={this.language}\n                  is_vacation_rental={this.calendarData.is_vacation_rental}\n                  countries={this.countries}\n                  currency={this.currency}\n                  data-component-id={bookingEvent.ID}\n                  bookingEvent={bookingEvent}\n                  allBookingEvents={this.getBookingData()}\n                ></igl-booking-event>\n              );\n            })}\n          </div>\n        </div>\n        <ir-modal\n          ref={el => (this.hkModal = el)}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          rightBtnText={locales?.entries?.Lcz_Update}\n          modalBody={this.renderModalBody()}\n          onConfirmModal={this.confirmHousekeepingUpdate.bind(this)}\n          autoClose={false}\n          isLoading={this.isLoading}\n          onCancelModal={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.selectedRoom = null;\n            this.hkModal.closeModal();\n          }}\n        ></ir-modal>\n      </Host>\n    );\n  }\n\n  private renderModalBody() {\n    if (!this.selectedRoom) {\n      return null;\n    }\n    return (\n      <p>\n        Update unit {this.selectedRoom?.name} to <b>{this.selectedRoom?.hk_status === '002' ? 'Clean' : 'Dirty'}?</b>\n      </p>\n      // <ir-select\n      //   LabelAvailable={false}\n      //   showFirstOption={false}\n      //   selectedValue={this.selectedRoom?.hk_status === '001' ? '001' : '002'}\n      //   data={[\n      //     { text: 'Clean', value: '001' },\n      //     { text: 'Dirty', value: '002' },\n      //   ]}\n      //   onSelectChange={e => (this.selectedHKStatus = e.detail)}\n      // ></ir-select>\n    );\n  }\n\n  private updateDisabledCellsCache() {\n    calendar_dates.disabled_cells.clear();\n    this.calendarData.roomsInfo?.forEach((roomCategory, categoryIndex) => {\n      if (roomCategory.is_active) {\n        this.getCategoryRooms(roomCategory)?.forEach(room => {\n          if (room.is_active) {\n            this.calendarData.days.forEach(dayInfo => {\n              const cellKey = this.getCellKey(room.id, dayInfo.value);\n              calendar_dates.disabled_cells.set(cellKey, {\n                disabled: !dayInfo.rate[categoryIndex].is_available_to_book,\n                reason: 'stop_sale',\n              });\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private getCellKey(roomId: number, day: string): string {\n    return `${roomId}_${day}`;\n  }\n\n  private isCellDisabled(roomId: number, day: string): boolean {\n    const key = this.getCellKey(roomId, day);\n    if (!calendar_dates.disabled_cells.has(key)) {\n      return false;\n    }\n    const { disabled } = calendar_dates.disabled_cells.get(key);\n    return disabled;\n  }\n}\n"]}