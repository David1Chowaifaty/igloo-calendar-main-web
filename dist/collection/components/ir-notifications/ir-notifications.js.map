{"version":3,"file":"ir-notifications.js","sourceRoot":"","sources":["../../../src/components/ir-notifications/ir-notifications.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAOzE,MAAM,OAAO,eAAe;IAL5B;QAO2B,sBAAiB,GAAW,CAAC,CAAC;KA+DxD;IA1DC,6BAA6B,CAAC,QAAgB,EAAE,QAAgB;QAC9D,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YACpD,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEO,uBAAuB;QAC7B,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,oBAAoB,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAEO,yBAAyB;QAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,6BAA6B;YAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAE9C,uDAAuD;YACvD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnD,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,iCAAiC;gBAC1C,kEACE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAChC,OAAO,EAAC,MAAM,EACd,SAAS,EAAC,MAAM,wBACI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,EACrD,KAAK,EAAC,sBAAsB,EAC5B,QAAQ,EAAC,QAAQ,oBACF,QAAQ,iBACX,UAAU,mBACR,OAAO,GACV;gBAEb,4DAAK,KAAK,EAAC,mCAAmC;oBAC5C,4DAAK,KAAK,EAAE,eAAe;wBACzB,iEAAU,IAAI,EAAC,QAAQ,QAAa;wBACpC,0DAAG,KAAK,EAAE,SAAS,2BAA0B,CACzC,CACF,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Prop, Element, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ir-notifications',\n  styleUrl: 'ir-notifications.css',\n  scoped: true,\n})\nexport class IrNotifications {\n  @Element() el: HTMLElement;\n  @Prop({ mutable: true }) notificationCount: number = 2;\n\n  private buttonRef: HTMLIrButtonElement;\n\n  @Watch('notificationCount')\n  handleNotificationCountChange(newValue: number, oldValue: number) {\n    if (oldValue !== undefined && newValue !== oldValue) {\n      this.animateNotificationChange();\n    }\n  }\n\n  componentDidLoad() {\n    this.updateNotificationBadge();\n  }\n\n  componentDidUpdate() {\n    this.updateNotificationBadge();\n  }\n\n  private updateNotificationBadge() {\n    if (this.buttonRef) {\n      this.buttonRef.setAttribute('data-notifications', this.notificationCount.toString());\n    }\n  }\n\n  private animateNotificationChange() {\n    if (this.buttonRef) {\n      // Add bounce animation class\n      this.buttonRef.classList.add('badge-animate');\n\n      // Remove the animation class after animation completes\n      setTimeout(() => {\n        this.buttonRef.classList.remove('badge-animate');\n      }, 600);\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"dropdown notifications-dropdown\">\n          <ir-button\n            ref={el => (this.buttonRef = el)}\n            variant=\"icon\"\n            icon_name=\"bell\"\n            data-notifications={this.notificationCount.toString()}\n            class=\"notification-trigger\"\n            btn_type=\"button\"\n            data-reference=\"parent\"\n            data-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          ></ir-button>\n\n          <div class=\"dropdown-menu dropdown-menu-right\">\n            <div class={'dropdown-item'}>\n              <ir-icons name=\"danger\"> </ir-icons>\n              <p class={'p-0 m-0'}>Something went wrong</p>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}