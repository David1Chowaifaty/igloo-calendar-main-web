{"version":3,"file":"ir-password-validator.js","sourceRoot":"","sources":["../../../src/components/ir-password-validator/ir-password-validator.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAO/E,MAAM,OAAO,mBAAmB;IALhC;QAME;;WAEG;QACK,aAAQ,GAAW,EAAE,CAAC;KAwD/B;IAnDC,oBAAoB,CAAC,QAAgB,EAAE,QAAgB;QACrD,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gEAAgE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtH,CAAC;IACH,CAAC;IAED,IAAY,WAAW;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,EAAE,CAAC;IACjE,CAAC;IAED,IAAY,YAAY;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,IAAY,YAAY;QACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,IAAY,QAAQ;QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,IAAY,cAAc;QACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IACD,MAAM;QACJ,OAAO,CACL,4DAAK,KAAK,EAAC,SAAS;YAClB,0EAAmB,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,sBAAsB,GAAqB;YAC9F,0EAAmB,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,+BAA+B,GAAqB;YACxG,0EAAmB,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,+BAA+B,GAAqB;YACxG,0EAAmB,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,oBAAoB,GAAqB;YACzF,0EAAmB,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAC,gCAAgC,GAAqB,CACvG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Event, EventEmitter, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-password-validator',\r\n  styleUrl: 'ir-password-validator.css',\r\n  scoped: true,\r\n})\r\nexport class IrPasswordValidator {\r\n  /**\r\n   * The password string to validate\r\n   */\r\n  @Prop() password: string = '';\r\n\r\n  @Event({ bubbles: true, composed: true }) passwordValidationChange: EventEmitter<boolean>;\r\n\r\n  @Watch('password')\r\n  handlePasswordChange(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.passwordValidationChange.emit(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+]).{8,16}$/.test(newValue));\r\n    }\r\n  }\r\n\r\n  private get validLength(): boolean {\r\n    if (!this.password) {\r\n      return false;\r\n    }\r\n    return this.password.length >= 8 && this.password.length <= 16;\r\n  }\r\n\r\n  private get hasUppercase(): boolean {\r\n    if (!this.password) {\r\n      return false;\r\n    }\r\n    return /[A-Z]/.test(this.password);\r\n  }\r\n\r\n  private get hasLowercase(): boolean {\r\n    if (!this.password) {\r\n      return false;\r\n    }\r\n    return /[a-z]/.test(this.password);\r\n  }\r\n\r\n  private get hasDigit(): boolean {\r\n    if (!this.password) {\r\n      return false;\r\n    }\r\n    return /[0-9]/.test(this.password);\r\n  }\r\n\r\n  private get hasSpecialChar(): boolean {\r\n    if (!this.password) {\r\n      return false;\r\n    }\r\n    return /[!@#$%^&*()\\-_=+]/.test(this.password);\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"m-0 p-0\">\r\n        <requirement-check isValid={this.validLength} text=\"Minimum 8 characters\"></requirement-check>\r\n        <requirement-check isValid={this.hasUppercase} text=\"At least one uppercase letter\"></requirement-check>\r\n        <requirement-check isValid={this.hasLowercase} text=\"At least one lowercase letter\"></requirement-check>\r\n        <requirement-check isValid={this.hasDigit} text=\"At least one digit\"></requirement-check>\r\n        <requirement-check isValid={this.hasSpecialChar} text=\"At least one special character\"></requirement-check>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}