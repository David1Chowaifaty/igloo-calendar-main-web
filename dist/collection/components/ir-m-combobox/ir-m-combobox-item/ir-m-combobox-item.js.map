{"version":3,"file":"ir-m-combobox-item.js","sourceRoot":"","sources":["../../../../src/components/ir-m-combobox/ir-m-combobox-item/ir-m-combobox-item.tsx"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAQ/F,MAAM,OAAO,eAAe;IAL5B;QAwBE;;WAEG;QACqC,WAAM,GAAY,KAAK,CAAC;QA8CxD,gBAAW,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC;KAUH;IAzCC,gBAAgB;QACd,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAEO,QAAQ;;QACd,MAAM,KAAK,GAAG,CAAC,MAAA,MAAA,IAAI,CAAC,KAAK,mCAAI,IAAI,CAAC,EAAE,CAAC,WAAW,mCAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/D,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK;YACL,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;IACJ,CAAC;IAGD,KAAK,CAAC,YAAY,CAAC,KAAa;;QAC9B,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,CAAC,MAAA,MAAA,IAAI,CAAC,KAAK,mCAAI,IAAI,CAAC,EAAE,CAAC,WAAW,mCAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACpE,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAGD,KAAK,CAAC,SAAS,CAAC,IAAa;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAMD,MAAM;QACJ,6DAA6D;QAC7D,OAAO,CACL,EAAC,IAAI,qDAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,mBAAe,OAAO,EAAC,KAAK,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,IAChH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,YAAM,SAAS,EAAE,IAAI,CAAC,YAAY,GAAS,CAAC,CAAC,CAAC,eAAa,CAC3E,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["// src/components/ir-m-combobox-item/ir-m-combobox-item.tsx\nimport { Component, h, Prop, Event, EventEmitter, Element, Method, Host } from '@stencil/core';\nimport { ComboboxOption } from '../types';\n\n@Component({\n  tag: 'ir-m-combobox-item',\n  styleUrl: 'ir-m-combobox-item.css',\n  scoped: true,\n})\nexport class IrMComboboxItem {\n  @Element() el: HTMLElement;\n\n  /**\n   * Required value for the option\n   */\n  @Prop() value!: string;\n\n  /**\n   * Optional label (falls back to textContent)\n   */\n  @Prop() label?: string;\n\n  /**\n   * Optional html_content (when you want rich content);\n   * If omitted, the component will render its own slot content.\n   */\n  @Prop() html_content?: string;\n\n  /**\n   * When true, visually hide the item (used for filtering).\n   */\n  @Prop({ mutable: true, reflect: true }) hidden: boolean = false;\n\n  /**\n   * Emit when this item is chosen. Parent listens and closes dropdown.\n   */\n  @Event({ eventName: 'comboboxItemSelect' }) comboboxItemSelect: EventEmitter<ComboboxOption>;\n\n  /**\n   * Inform the parent this item exists (parent will index and manage focus)\n   */\n  @Event({ eventName: 'comboboxItemRegister' }) comboboxItemRegister: EventEmitter<void>;\n\n  /**\n   * Inform the parent this item is gone\n   */\n  @Event({ eventName: 'comboboxItemUnregister' }) comboboxItemUnregister: EventEmitter<void>;\n\n  componentDidLoad() {\n    this.comboboxItemRegister.emit();\n  }\n\n  disconnectedCallback() {\n    this.comboboxItemUnregister.emit();\n  }\n\n  private toOption(): ComboboxOption {\n    const label = (this.label ?? this.el.textContent ?? '').trim();\n    return {\n      value: this.value,\n      label,\n      html_content: this.html_content,\n    };\n  }\n\n  @Method()\n  async matchesQuery(query: string): Promise<boolean> {\n    const q = query.toLowerCase();\n    const hay = (this.label ?? this.el.textContent ?? '').toLowerCase();\n    return hay.includes(q);\n  }\n\n  @Method()\n  async setHidden(next: boolean) {\n    this.hidden = next;\n  }\n\n  private handleClick = () => {\n    this.comboboxItemSelect.emit(this.toOption());\n  };\n\n  render() {\n    // Render either provided html_content or the slotted content\n    return (\n      <Host role=\"option\" tabindex=\"-1\" aria-selected=\"false\" class={{ 'dropdown-item': true }} onClick={this.handleClick}>\n        {this.html_content ? <span innerHTML={this.html_content}></span> : <slot></slot>}\n      </Host>\n    );\n  }\n}\n"]}