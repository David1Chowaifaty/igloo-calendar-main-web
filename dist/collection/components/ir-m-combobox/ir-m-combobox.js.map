{"version":3,"file":"ir-m-combobox.js","sourceRoot":"","sources":["../../../src/components/ir-m-combobox/ir-m-combobox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, State, Event, EventEmitter, Element, Listen } from '@stencil/core';\n\nexport interface ComboboxOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\nexport type ComboboxType = 'select' | 'editable' | 'multiselect';\n\n@Component({\n  tag: 'ir-m-combobox',\n  styleUrl: 'ir-m-combobox.css',\n  scoped: true,\n})\nexport class IrMCombobox {\n  @Element() el: HTMLElement;\n\n  @Prop() type: ComboboxType = 'select';\n  @Prop() label: string = '';\n  @Prop() placeholder: string = '';\n  @Prop() options: ComboboxOption[] = [];\n  @Prop() value: string | string[] = '';\n  @Prop() disabled: boolean = false;\n  @Prop() readonly: boolean = false;\n\n  @State() isOpen: boolean = false;\n  @State() activeOptionIndex: number = -1;\n  @State() inputValue: string = '';\n  @State() selectedOptions: ComboboxOption[] = [];\n\n  @Event() irChange: EventEmitter<string | string[]>;\n  @Event() irInput: EventEmitter<string>;\n  @Event() irFocus: EventEmitter<void>;\n  @Event() irBlur: EventEmitter<void>;\n\n  private comboboxId = `combo-${Math.random().toString(36).substr(2, 9)}`;\n  private listboxId = `listbox-${this.comboboxId}`;\n  private labelId = `label-${this.comboboxId}`;\n\n  componentWillLoad() {\n    this.initializeValue();\n  }\n\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: Event) {\n    if (!this.el.contains(event.target as Node)) {\n      this.isOpen = false;\n    }\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        this.navigateOptions(1);\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.navigateOptions(-1);\n        break;\n      case 'Enter':\n        event.preventDefault();\n        this.selectCurrentOption();\n        break;\n      case 'Escape':\n        this.isOpen = false;\n        break;\n    }\n  }\n\n  private initializeValue() {\n    if (this.type === 'multiselect' && Array.isArray(this.value)) {\n      this.selectedOptions = this.options.filter(option => \n        (this.value as string[]).includes(option.value)\n      );\n    } else if (typeof this.value === 'string') {\n      this.inputValue = this.value;\n      const selectedOption = this.options.find(option => option.value === this.value);\n      if (selectedOption && this.type === 'multiselect') {\n        this.selectedOptions = [selectedOption];\n      }\n    }\n  }\n\n  private navigateOptions(direction: number) {\n    if (!this.isOpen) {\n      this.isOpen = true;\n      return;\n    }\n\n    const newIndex = this.activeOptionIndex + direction;\n    if (newIndex >= 0 && newIndex < this.options.length) {\n      this.activeOptionIndex = newIndex;\n    }\n  }\n\n  private selectCurrentOption() {\n    if (this.activeOptionIndex >= 0 && this.activeOptionIndex < this.options.length) {\n      this.selectOption(this.options[this.activeOptionIndex]);\n    }\n  }\n\n  private selectOption(option: ComboboxOption) {\n    if (option.disabled) return;\n\n    if (this.type === 'multiselect') {\n      const isSelected = this.selectedOptions.some(selected => selected.value === option.value);\n      if (isSelected) {\n        this.selectedOptions = this.selectedOptions.filter(selected => selected.value !== option.value);\n      } else {\n        this.selectedOptions = [...this.selectedOptions, option];\n      }\n      this.irChange.emit(this.selectedOptions.map(opt => opt.value));\n    } else {\n      this.inputValue = option.label;\n      this.isOpen = false;\n      this.irChange.emit(option.value);\n    }\n  }\n\n  private handleInputChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.inputValue = target.value;\n    this.irInput.emit(this.inputValue);\n    \n    if (!this.isOpen) {\n      this.isOpen = true;\n    }\n  }\n\n  private handleInputFocus() {\n    this.irFocus.emit();\n    if (this.type !== 'editable' || this.options.length > 0) {\n      this.isOpen = true;\n    }\n  }\n\n  private handleInputBlur() {\n    this.irBlur.emit();\n  }\n\n  private toggleCombobox() {\n    if (!this.disabled) {\n      this.isOpen = !this.isOpen;\n    }\n  }\n\n  private removeSelectedOption(option: ComboboxOption) {\n    this.selectedOptions = this.selectedOptions.filter(selected => selected.value !== option.value);\n    this.irChange.emit(this.selectedOptions.map(opt => opt.value));\n  }\n\n  private getFilteredOptions() {\n    if (this.type !== 'editable' || !this.inputValue) {\n      return this.options;\n    }\n    return this.options.filter(option => \n      option.label.toLowerCase().includes(this.inputValue.toLowerCase())\n    );\n  }\n\n  render() {\n    const filteredOptions = this.getFilteredOptions();\n\n    return (\n      <Host>\n        {this.label && (\n          <label id={this.labelId} class=\"combo-label\">\n            {this.label}\n          </label>\n        )}\n\n        {this.type === 'multiselect' && this.selectedOptions.length > 0 && (\n          <ul class=\"selected-options\">\n            {this.selectedOptions.map(option => (\n              <li key={option.value}>\n                <button\n                  type=\"button\"\n                  class=\"remove-option\"\n                  onClick={() => this.removeSelectedOption(option)}\n                  aria-label={`Remove ${option.label}`}\n                >\n                  {option.label}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        <div class={`combo ${this.isOpen ? 'open' : ''}`}>\n          {this.type === 'select' ? (\n            <div\n              id={this.comboboxId}\n              class=\"combo-input\"\n              role=\"combobox\"\n              aria-expanded={this.isOpen.toString()}\n              aria-haspopup=\"listbox\"\n              aria-controls={this.listboxId}\n              aria-labelledby={this.label ? this.labelId : undefined}\n              tabindex={this.disabled ? -1 : 0}\n              onClick={() => this.toggleCombobox()}\n              onFocus={() => this.handleInputFocus()}\n              onBlur={() => this.handleInputBlur()}\n            >\n              {this.inputValue || this.placeholder}\n            </div>\n          ) : (\n            <input\n              id={this.comboboxId}\n              class=\"combo-input\"\n              type=\"text\"\n              role=\"combobox\"\n              aria-expanded={this.isOpen.toString()}\n              aria-haspopup=\"listbox\"\n              aria-controls={this.listboxId}\n              aria-labelledby={this.label ? this.labelId : undefined}\n              value={this.inputValue}\n              placeholder={this.placeholder}\n              disabled={this.disabled}\n              readonly={this.readonly}\n              onInput={(e) => this.handleInputChange(e)}\n              onFocus={() => this.handleInputFocus()}\n              onBlur={() => this.handleInputBlur()}\n            />\n          )}\n\n          {this.isOpen && (\n            <div class=\"combo-menu\" role=\"listbox\" id={this.listboxId}>\n              {filteredOptions.map((option, index) => (\n                <div\n                  key={option.value}\n                  class={`combo-option ${index === this.activeOptionIndex ? 'option-current' : ''} ${\n                    this.type === 'multiselect' && this.selectedOptions.some(selected => selected.value === option.value) \n                      ? 'option-selected' \n                      : ''\n                  }`}\n                  role=\"option\"\n                  aria-selected={\n                    this.type === 'multiselect' \n                      ? this.selectedOptions.some(selected => selected.value === option.value).toString()\n                      : (this.inputValue === option.label).toString()\n                  }\n                  onClick={() => this.selectOption(option)}\n                >\n                  {option.label}\n                </div>\n              ))}\n              {filteredOptions.length === 0 && (\n                <div class=\"combo-option\">No options available</div>\n              )}\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}