{"version":3,"file":"user.service.js","sourceRoot":"","sources":["../../src/services/user.service.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,OAAO,WAAW;IACf,KAAK,CAAC,qBAAqB;QAChC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACM,KAAK,CAAC,kBAAkB,CAAC,MAA4B;QAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,KAAK,CAAC,iBAAiB,CAAC,MAAkB;QAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACM,KAAK,CAAC,uBAAuB;QAClC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,CAAC,CAAC;QACrE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;CACF","sourcesContent":["import { UserParams } from '@/models/Users';\nimport axios from 'axios';\n\nexport class UserService {\n  public async sendVerificationEmail() {\n    throw new Error('Method not implemented.');\n  }\n  public async checkUserExistence(params: { UserName: string }): Promise<boolean> {\n    const { data } = await axios.post('/CheckUserExistence', params);\n    return data.My_Result;\n  }\n  public async handleExposedUser(params: UserParams) {\n    const { data } = await axios.post('/Handle_Exposed_User', params);\n    return data.My_Result;\n  }\n  public async getExposedPropertyUsers() {\n    const { data } = await axios.post('/Get_Exposed_Property_Users', {});\n    return data.My_Result;\n  }\n}\n"]}