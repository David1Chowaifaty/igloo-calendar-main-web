{"version":3,"file":"events.service.js","sourceRoot":"","sources":["../../src/services/events.service.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { BookingService } from './booking.service';\nimport { extras, getReleaseHoursString } from '../utils/utils';\n\nexport class EventsService {\n  private readonly bookingService: BookingService = new BookingService();\n  async reallocateEvent(pool: string, destination_pr_id: number, from_date: string, to_date: string) {\n    try {\n      console.log(pool, destination_pr_id, from_date, to_date);\n      const { data } = await axios.post(`/ReAllocate_Exposed_Room`, { pool, destination_pr_id, from_date, to_date, extras });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async deleteEvent(POOL: string) {\n    try {\n      const { data } = await axios.post(`/UnBlock_Exposed_Unit`, {\n        POOL,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n\n  public async updateBlockedEvent(bookingEvent: any) {\n    try {\n      const releaseData = getReleaseHoursString(+bookingEvent.RELEASE_AFTER_HOURS);\n      await this.deleteEvent(bookingEvent.POOL);\n      const result = await this.bookingService.blockUnit({\n        from_date: this.formatDate(bookingEvent.FROM_DATE),\n        to_date: this.formatDate(bookingEvent.TO_DATE),\n        pr_id: bookingEvent.PR_ID,\n        STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE ? '004' : bookingEvent.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\n        DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || '',\n        NOTES: bookingEvent.OPTIONAL_REASON || '',\n        ...releaseData,\n      });\n      return result;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  private formatDate(date: string) {\n    return date.split('/').join('-');\n  }\n}\n"]}