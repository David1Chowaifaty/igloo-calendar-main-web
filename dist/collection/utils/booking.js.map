{"version":3,"file":"booking.js","sourceRoot":"","sources":["../../src/utils/booking.ts"],"names":[],"mappings":"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","sourcesContent":["import { Extras, Room } from './../models/booking.dto';\nimport moment from 'moment';\nimport { PhysicalRoomType, MonthType, CellType, STATUS, RoomBookingDetails, RoomBlockDetails } from '../models/IBooking';\nimport { dateDifference, isBlockUnit } from './utils';\nimport axios from 'axios';\nimport locales from '@/stores/locales.store';\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport calendar_data from '@/stores/calendar-data';\n\nexport async function getMyBookings(months: MonthType[]): Promise<any[]> {\n  const myBookings: any[] = [];\n  const stayStatus = await getStayStatus();\n  for (const month of months) {\n    for (const day of month.days) {\n      for (const room of day.room_types) {\n        assignBooking(room.physicalrooms, myBookings, stayStatus);\n      }\n    }\n  }\n\n  return myBookings;\n}\n\nfunction assignBooking(physicalRoom: PhysicalRoomType[], myBookings: any[], stayStatus: { code: string; value: string }[]): void {\n  for (const room of physicalRoom) {\n    for (const key in room.calendar_cell) {\n      if (room.calendar_cell[key].Is_Available === false) {\n        addOrUpdateBooking(room.calendar_cell[key], myBookings, stayStatus);\n      }\n    }\n  }\n}\nconst status: Record<string, STATUS> = {\n  '004': 'BLOCKED',\n  '003': 'BLOCKED-WITH-DATES',\n  '002': 'BLOCKED',\n};\nexport const bookingStatus: Record<string, STATUS> = {\n  '000': 'IN-HOUSE',\n  '001': 'PENDING-CONFIRMATION',\n  '002': 'CONFIRMED',\n  '003': 'CHECKED-OUT',\n};\n\nexport function formatName(firstName: string | null, lastName: string | null) {\n  if (firstName === null && lastName === null) return '';\n  if (lastName !== null && lastName !== '') {\n    return `${firstName ?? ''} , ${lastName ?? ''}`;\n  }\n  return firstName;\n}\nasync function getStayStatus() {\n  try {\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_Multi`, {\n      TBL_NAMES: ['_STAY_STATUS'],\n    });\n    return data.My_Result.map(d => ({\n      code: d.CODE_NAME,\n      value: d.CODE_VALUE_EN,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction renderBlock003Date(date, hour, minute) {\n  const dt = new Date(date);\n  dt.setHours(hour);\n  dt.setMinutes(minute);\n  return `${locales.entries.Lcz_BlockedTill} ${moment(dt).format('MMM DD, HH:mm')}`;\n}\nfunction getDefaultData(cell: CellType, stayStatus: { code: string; value: string }[]): any {\n  if (isBlockUnit(cell.STAY_STATUS_CODE)) {\n    const blockedFromDate = moment(cell.My_Block_Info.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.from_date : cell.DATE;\n    const blockedToDate = moment(cell.My_Block_Info.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.to_date : cell.DATE;\n    return {\n      ID: cell.POOL,\n      NOTES: '',\n      BALANCE: '',\n      NAME:\n        cell.My_Block_Info.NOTES !== ''\n          ? cell.My_Block_Info.NOTES\n          : cell.STAY_STATUS_CODE === '003'\n          ? renderBlock003Date(cell.My_Block_Info.BLOCKED_TILL_DATE, cell.My_Block_Info.BLOCKED_TILL_HOUR, cell.My_Block_Info.BLOCKED_TILL_MINUTE)\n          : stayStatus.find(st => st.code === cell.STAY_STATUS_CODE).value || '',\n      RELEASE_AFTER_HOURS: cell.My_Block_Info.DESCRIPTION,\n      PR_ID: cell.My_Block_Info.pr_id,\n      ENTRY_DATE: cell.My_Block_Info.BLOCKED_TILL_DATE,\n      ENTRY_HOUR: cell.My_Block_Info.BLOCKED_TILL_HOUR,\n      ENTRY_MINUTE: cell.My_Block_Info.BLOCKED_TILL_MINUTE,\n      OPTIONAL_REASON: cell.My_Block_Info.NOTES,\n      FROM_DATE: blockedFromDate,\n      TO_DATE: blockedToDate,\n      NO_OF_DAYS: dateDifference(blockedFromDate, blockedToDate),\n      STATUS: status[cell.STAY_STATUS_CODE],\n      POOL: cell.POOL,\n      STATUS_CODE: cell.STAY_STATUS_CODE,\n      OUT_OF_SERVICE: cell.STAY_STATUS_CODE === '004',\n      FROM_DATE_STR: cell.My_Block_Info.format.from_date,\n      TO_DATE_STR: cell.My_Block_Info.format.to_date,\n      defaultDates: {\n        from_date: cell.My_Block_Info.from_date,\n        to_date: cell.My_Block_Info.to_date,\n      },\n    };\n  }\n  if (cell.booking.booking_nbr.toString() === '77054273380') {\n    console.log('booking', cell);\n  }\n\n  // if (cell.booking.booking_nbr === '61249849') {\n  //   console.log('cell');\n  //   console.log(moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE);\n  //   console.log(cell);\n  // }\n  const bookingFromDate = moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE;\n  const bookingToDate = moment(cell.room.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.to_date : cell.DATE;\n  const mainGuest = cell.room.sharing_persons?.find(p => p.is_main);\n  return {\n    ID: cell.POOL,\n    FROM_DATE: bookingFromDate,\n    TO_DATE: bookingToDate,\n    NO_OF_DAYS: dateDifference(bookingFromDate, bookingToDate),\n    STATUS: bookingStatus[cell.booking?.status.code],\n    NAME: formatName(mainGuest?.first_name, mainGuest?.last_name),\n    IDENTIFIER: cell.room.identifier,\n    PR_ID: cell.pr_id,\n    POOL: cell.POOL,\n    BOOKING_NUMBER: cell.booking.booking_nbr,\n    NOTES: cell.booking.is_direct ? cell.booking.remark : null,\n    PRIVATE_NOTE: getPrivateNote(cell.booking.extras),\n    is_direct: cell.booking.is_direct,\n    BALANCE: cell.booking.financial?.due_amount,\n    channel_booking_nbr: cell.booking.channel_booking_nbr,\n    ARRIVAL_TIME: cell.booking.arrival.description,\n    defaultDates: {\n      from_date: cell.room.from_date,\n      to_date: cell.room.to_date,\n    },\n    ///from here\n    ENTRY_DATE: cell.booking.booked_on.date,\n    PHONE_PREFIX: cell.booking.guest.country_phone_prefix,\n    IS_EDITABLE: cell.booking.is_editable,\n    ARRIVAL: cell.booking.arrival,\n    PHONE: cell.booking.guest.mobile_without_prefix ?? '',\n    RATE: cell.room.total,\n    RATE_PLAN: cell.room.rateplan.name,\n    SPLIT_BOOKING: false,\n    RATE_PLAN_ID: cell.room.rateplan.id,\n    RATE_TYPE: cell.room?.roomtype?.id,\n    ADULTS_COUNT: cell.room.occupancy.adult_nbr,\n    CHILDREN_COUNT: cell.room.occupancy.children_nbr,\n    origin: cell.booking.origin,\n    GUEST: cell.booking.guest,\n    ROOMS: cell.booking.rooms,\n    cancelation: cell.room.rateplan.cancelation,\n    guarantee: cell.room.rateplan.guarantee,\n    TOTAL_PRICE: cell.booking.financial?.gross_total,\n    COUNTRY: cell.booking.guest.country_id,\n    FROM_DATE_STR: cell.booking.format.from_date,\n    TO_DATE_STR: cell.booking.format.to_date,\n    adult_child_offering: cell.room.rateplan.selected_variation.adult_child_offering,\n    SOURCE: { code: cell.booking.source.code, description: cell.booking.source.description, tag: cell.booking.source.tag },\n    //TODO:Implement checkin-checkout\n    CHECKIN: cell.room.in_out?.code === '001',\n    CHECKOUT: cell.room.in_out?.code === '002',\n    ROOM_INFO: {\n      occupancy: cell.room.occupancy,\n      sharing_persons: cell.room.sharing_persons,\n      unit: cell.room.unit,\n      in_out: cell.room.in_out,\n    },\n    BASE_STATUS_CODE: cell.booking.status?.code,\n  };\n}\n\n// function updateBookingWithStayData(data: any, cell: CellType): any {\n//   data.NO_OF_DAYS = dateDifference(data.FROM_DATE, cell.DATE);\n//   data.TO_DATE = cell.DATE;\n//   if (cell.booking) {\n//     const { arrival } = cell.booking;\n//     if (cell.booking.booking_nbr === '88231897') {\n//       console.log(data.NO_OF_DAYS, data.TO_DATE);\n//     }\n//     Object.assign(data, {\n//       ARRIVAL_TIME: arrival.description,\n//     });\n//   }\n//   return data;\n// }\nexport function getRoomStatus(params: Pick<Room, 'in_out' | 'from_date' | 'to_date'> & { status_code: string }) {\n  const { in_out, status_code, from_date, to_date } = params;\n  if (calendar_data.checkin_enabled) {\n    if (in_out?.code === '001') {\n      return bookingStatus['000'];\n    } else if (in_out?.code === '002') {\n      if (!calendar_data.is_automatic_check_in_out) {\n        const now = moment();\n        const toDate = moment(to_date, 'YYYY-MM-DD');\n        const fromDate = moment(from_date, 'YYYY-MM-DD');\n        const isNowAfterOrSameAsHotelHour = compareTime(\n          now.toDate(),\n          createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour),\n        );\n        if ((now.isSame(toDate, 'days') && now.isAfter(fromDate, 'days') && isNowAfterOrSameAsHotelHour) || now.isAfter(toDate, 'days')) {\n          return bookingStatus['003'];\n        } else {\n          return bookingStatus['002'];\n        }\n      }\n    }\n    return bookingStatus[status_code || '001'];\n  } else {\n    const now = moment();\n    const toDate = moment(to_date, 'YYYY-MM-DD');\n    const fromDate = moment(from_date, 'YYYY-MM-DD');\n    const isNowAfterOrSameAsHotelHour = compareTime(\n      now.toDate(),\n      createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour),\n    );\n    if (fromDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) {\n      return bookingStatus['000'];\n    } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n      return bookingStatus['000'];\n    } else if (toDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) {\n      return bookingStatus['000'];\n    } else if ((toDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) || toDate.isBefore(now, 'day')) {\n      return bookingStatus['003'];\n    } else {\n      return bookingStatus[status_code || '001'];\n    }\n  }\n}\nfunction addOrUpdateBooking(cell: CellType, myBookings: any[], stayStatus: { code: string; value: string }[]): void {\n  const index = myBookings.findIndex(booking => booking.POOL === cell.POOL);\n  if (index === -1) {\n    const newData = getDefaultData(cell, stayStatus);\n    myBookings.push(newData);\n  }\n  //else {\n  //   const updatedData = updateBookingWithStayData(myBookings[index], cell);\n  //   myBookings[index] = updatedData;\n  // }\n}\nexport function getPrivateNote(extras: Extras[] | null) {\n  if (!extras) {\n    return null;\n  }\n  return extras.find(e => e.key === 'private_note')?.value || null;\n}\nexport function transformNewBooking(data: any): RoomBookingDetails[] {\n  let bookings: RoomBookingDetails[] = [];\n  const rooms = data.rooms.filter(room => !!room['assigned_units_pool']);\n  rooms.forEach(room => {\n    const bookingFromDate = moment(room.from_date, 'YYYY-MM-DD').isAfter(moment(calendar_dates.fromDate, 'YYYY-MM-DD')) ? room.from_date : calendar_dates.fromDate;\n    const bookingToDate = room.to_date;\n    if (moment(room.to_date, 'YYYY-MM-DD').isBefore(moment(calendar_dates.fromDate, 'YYYY-MM-DD'))) {\n      return;\n    }\n    const mainGuest = room.sharing_persons?.find(p => p.is_main);\n    // console.log('bookingToDate:', bookingToDate, 'bookingFromDate:', bookingFromDate, 'room from date:', room.from_date, 'room to date', room.to_date);\n    bookings.push({\n      CHECKIN: false,\n      CHECKOUT: false,\n      ID: room['assigned_units_pool'],\n      TO_DATE: bookingToDate,\n      FROM_DATE: bookingFromDate,\n      PRIVATE_NOTE: getPrivateNote(data.extras),\n      NO_OF_DAYS: dateDifference(bookingFromDate, bookingToDate),\n      ARRIVAL: data.arrival,\n      IS_EDITABLE: true,\n      BALANCE: data.financial?.due_amount,\n      STATUS: getRoomStatus({\n        in_out: room.in_out,\n        from_date: room.from_date,\n        to_date: room.to_date,\n        status_code: data.status?.code,\n      }),\n      NAME: formatName(mainGuest?.first_name, mainGuest.last_name),\n      PHONE: data.guest.mobile_without_prefix ?? '',\n      ENTRY_DATE: '12-12-2023',\n      PHONE_PREFIX: data.guest.country_phone_prefix,\n      RATE: room.total,\n      RATE_PLAN: room.rateplan.name,\n      SPLIT_BOOKING: false,\n      RATE_PLAN_ID: room.rateplan.id,\n      IDENTIFIER: room.identifier,\n      RATE_TYPE: room.roomtype.id,\n      ADULTS_COUNT: room.occupancy.adult_nbr,\n      CHILDREN_COUNT: room.occupancy.children_nbr,\n      PR_ID: +room.unit.id,\n      POOL: room['assigned_units_pool'],\n      GUEST: data.guest,\n      ROOMS: data.rooms,\n      BOOKING_NUMBER: data.booking_nbr,\n      cancelation: room.rateplan.cancelation,\n      guarantee: room.rateplan.guarantee,\n      TOTAL_PRICE: data.financial?.gross_total,\n      COUNTRY: data.guest.country_id,\n      FROM_DATE_STR: data.format.from_date,\n      TO_DATE_STR: data.format.to_date,\n      adult_child_offering: room.rateplan.selected_variation.adult_child_offering,\n      ARRIVAL_TIME: data.arrival.description,\n      origin: data.origin,\n      channel_booking_nbr: data.channel_booking_nbr,\n      is_direct: data.is_direct,\n      NOTES: data.is_direct ? data.remark : null,\n      SOURCE: { code: data.source.code, description: data.source.description, tag: data.source.tag },\n      ota_notes: data.ota_notes,\n      defaultDates: {\n        from_date: room.from_date,\n        to_date: room.to_date,\n      },\n      ROOM_INFO: {\n        occupancy: room.occupancy,\n        sharing_persons: room.sharing_persons,\n        unit: room.unit,\n        in_out: room.in_out,\n      },\n      BASE_STATUS_CODE: data.status?.code,\n    });\n  });\n  return bookings;\n}\nexport async function transformNewBLockedRooms(data: any): Promise<RoomBlockDetails> {\n  const stayStatus = await getStayStatus();\n  return {\n    ID: data.POOL,\n    NOTES: '',\n    BALANCE: '',\n    NAME:\n      data.NOTES !== ''\n        ? data.NOTES\n        : data.STAY_STATUS_CODE === '003'\n        ? renderBlock003Date(data.BLOCKED_TILL_DATE, data.BLOCKED_TILL_HOUR, data.BLOCKED_TILL_MINUTE)\n        : stayStatus.find(st => st.code === data.STAY_STATUS_CODE).value || '',\n    RELEASE_AFTER_HOURS: data.DESCRIPTION,\n    PR_ID: data.pr_id,\n    ENTRY_DATE: data.BLOCKED_TILL_DATE,\n    ENTRY_HOUR: data.BLOCKED_TILL_HOUR,\n    ENTRY_MINUTE: data.BLOCKED_TILL_MINUTE,\n    OPTIONAL_REASON: data.NOTES,\n    FROM_DATE: data.from_date,\n    TO_DATE: data.to_date,\n    NO_OF_DAYS: calculateDaysBetweenDates(data.from_date, data.to_date),\n    STATUS: status[data.STAY_STATUS_CODE],\n    POOL: data.POOL,\n    STATUS_CODE: data.STAY_STATUS_CODE,\n    OUT_OF_SERVICE: data.STAY_STATUS_CODE === '004',\n    FROM_DATE_STR: data.format.from_date,\n    TO_DATE_STR: data.format.to_date,\n    defaultDates: {\n      from_date: data.from_date,\n      to_date: data.to_date,\n    },\n  };\n}\nexport function calculateDaysBetweenDates(from_date: string, to_date: string) {\n  const startDate = moment(from_date, 'YYYY-MM-DD').startOf('day');\n  const endDate = moment(to_date, 'YYYY-MM-DD').endOf('day');\n  const daysDiff = endDate.diff(startDate, 'days');\n  return daysDiff || 1;\n}\nexport function compareTime(date1: Date, date2: Date) {\n  return date1.getHours() >= date2.getHours() && date1.getMinutes() >= date2.getMinutes();\n}\n/**\n * Creates a Date object for today at the specified hour in a given time zone.\n * The offset is the number of hours that the target time zone is ahead of UTC.\n *\n * For example, if offset = 3 and hour = 9, then the function returns a Date\n * which, when converted to the target time zone, represents 9:00.\n *\n * @param offset - The timezone offset in hours (e.g., 2, 3, etc.)\n * @param hour - The desired hour in the target time zone (0-23)\n * @returns Date object representing the target time (in UTC)\n */\nexport function createDateWithOffsetAndHour(offset: number, hour: number): Date {\n  const now = new Date();\n  const offsetMs = offset * 60 * 60 * 1000;\n  const targetTzDate = new Date(now.getTime() + offsetMs);\n  const year = targetTzDate.getUTCFullYear();\n  const month = targetTzDate.getUTCMonth();\n  const day = targetTzDate.getUTCDate();\n  const utcHour = hour - offset;\n  return new Date(Date.UTC(year, month, day, utcHour));\n}\n"]}