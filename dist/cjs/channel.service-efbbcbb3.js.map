{"file":"channel.service-efbbcbb3.js","mappings":";;;;;;MAIa,cAAc;IAClB,MAAM,kBAAkB;QAC7B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMA,WAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/BC,2BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,2BAA2B,CAAC,WAAmB;QAC1D,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YACtF,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YACDC,2BAAa,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SACxD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,oBAAoB,CAAC,KAAa,IAAI,EAAE,SAAkB;QACrE,IAAI;YACF,IAAI,IAAI,GAAQ,EAAE,CAAC;YACnB,IAAI,SAAS,EAAE;gBACb,IAAI,GAAG;oBACL,EAAE;oBACF,SAAS;iBACV,CAAC;aACH;iBAAM;gBACL,IAAI,GAAG;oBACL,EAAE,EAAEA,2BAAa,CAAC,UAAU;oBAC5B,KAAK,EAAEA,2BAAa,CAAC,gBAAgB,CAAC,WAAW;oBACjD,SAAS,EAAEA,2BAAa,CAAC,SAAS;oBAClC,OAAO,EAAE,EAAE,EAAE,EAAEA,2BAAa,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAEA,2BAAa,CAAC,eAAe,CAAC,IAAI,EAAE;oBAC3F,QAAQ,EAAE,EAAE,EAAE,EAAEC,0BAAa,CAAC,EAAE,EAAE,IAAI,EAAEA,0BAAa,CAAC,IAAI,EAAE;oBAC5D,GAAG,EAAED,2BAAa,CAAC,cAAc;oBACjC,SAAS;iBACV,CAAC;aACH;YAED,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;YAErE,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;KACF;;;;;","names":["axios","channels_data","calendar_data"],"sources":["src/services/channel.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\nimport channels_data from '@/stores/channel.store';\nimport axios from 'axios';\n\nexport class ChannelService {\n  public async getExposedChannels() {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Channels`, {});\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = data.My_Result;\n      channels_data.channels = [...results];\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getExposedConnectedChannels(property_id: number) {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Connected_Channels`, { property_id });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      channels_data.connected_channels = [...data.My_Result];\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async saveConnectedChannel(id: number = null, is_remove: boolean) {\n    try {\n      let body: any = {};\n      if (is_remove) {\n        body = {\n          id,\n          is_remove,\n        };\n      } else {\n        body = {\n          id: channels_data.channel_id,\n          title: channels_data.channel_settings.hotel_title,\n          is_active: channels_data.is_active,\n          channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\n          property: { id: calendar_data.id, name: calendar_data.name },\n          map: channels_data.mappedChannels,\n          is_remove,\n        };\n      }\n\n      const { data } = await axios.post(`/Handle_Connected_Channel`, body);\n\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n"],"version":3}