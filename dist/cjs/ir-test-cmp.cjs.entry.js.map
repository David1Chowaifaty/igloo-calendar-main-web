{"file":"ir-test-cmp.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,YAAY,GAAG,kCAAkC,CAAC;AACxD,wBAAe,YAAY;;ACC3B,MAAM,UAAU,GAAGA,OAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAEA,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gEAAgE,CAAC,EAAE,CAAC,CAAC;MAOjH,SAAS;;;oBACE;YACpB,QAAQ,EAAE,EAAE;SACb;;4BAEuB,KAAK;;IAC7B,MAAM;;QACJ,QACEC,UAACC,YAAI,qDAAC,KAAK,EAAC,UAAU,IACpBD,qEACE,QAAQ,EAAE,CAAC;gBACT,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI;oBACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC5B,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACjB;gBAAC,OAAO,KAAK,EAAE;oBACd,MAAM,EAAE,GAAG,EAAE,CAAC;oBACd,IAAI,KAAK,YAAYE,cAAQ,EAAE;wBAC7B,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;yBACtB,CAAC,CAAC;wBACH,IAAI,CAAC,KAAK,GAAG,EAAS,CAAC;qBACxB;oBACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACpB;aACF,IAEDF,8EACE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EACzB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACxC,OAAO,EAAC,UAAU,EAClB,KAAK,EAAE,MAAA,IAAI,CAAC,KAAK,0CAAE,QAAQ,EAC3B,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,UAAU,EAChB,YAAY,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,mCAAQ,IAAI,CAAC,IAAI,KAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,GAAE,CAAC,EACrE,SAAS,EAAE,EAAE,GACE,EACjBA,yEAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAK,OAACA,uEAAQ,KAAK,EAAE,iBAAiB,aAAiB,CACzE,CACF,EACP;KACH;;;;;;","names":["z","h","Host","ZodError"],"sources":["src/components/ir-test-cmp/ir-test-cmp.css?tag=ir-test-cmp&encapsulation=scoped","src/components/ir-test-cmp/ir-test-cmp.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, State, h } from '@stencil/core';\r\nimport { z, ZodError } from 'zod';\r\nconst userSchema = z.object({ password: z.string().regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+]).{8,16}$/) });\r\ntype User = z.infer<typeof userSchema>;\r\n@Component({\r\n  tag: 'ir-test-cmp',\r\n  styleUrl: 'ir-test-cmp.css',\r\n  scoped: true,\r\n})\r\nexport class IrTestCmp {\r\n  @State() user: User = {\r\n    password: '',\r\n  };\r\n  @State() error: Record<keyof User, boolean>;\r\n  @State() autoValidate = false;\r\n  render() {\r\n    return (\r\n      <Host class=\"card p-4\">\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            try {\r\n              this.error = null;\r\n              this.autoValidate = true;\r\n              console.log('here');\r\n              userSchema.parse(this.user);\r\n              alert('passed');\r\n            } catch (error) {\r\n              const er = {};\r\n              if (error instanceof ZodError) {\r\n                error.issues.forEach(e => {\r\n                  er[e.path[0]] = true;\r\n                });\r\n                this.error = er as any;\r\n              }\r\n              console.log(error);\r\n            }\r\n          }}\r\n        >\r\n          <ir-input-text\r\n            value={this.user.password}\r\n            autoValidate={this.autoValidate}\r\n            zod={userSchema.pick({ password: true })}\r\n            wrapKey=\"password\"\r\n            error={this.error?.password}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            onTextChange={e => (this.user = { ...this.user, password: e.detail })}\r\n            maxLength={14}\r\n          ></ir-input-text>\r\n          <p> {this.user.password}</p> <button class={'btn btn-primary'}>Submit</button>\r\n        </form>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}