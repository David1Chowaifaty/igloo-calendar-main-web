{"version":3,"file":"igl-book-property-container.entry.cjs.js","sources":["src/components/igl-book-property-container/igl-book-property-container.css?tag=igl-book-property-container&encapsulation=scoped","src/components/igl-book-property-container/igl-book-property-container.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  letter-spacing: 0px !important;\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\r\n  font-size: 1rem !important;\r\n  font-weight: 400 !important;\r\n  line-height: 1.45 !important;\r\n  color: #6b6f82 !important;\r\n  text-align: left !important;\r\n}\r\n.book-container {\r\n  width: min-content;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nh3 {\r\n  font-size: 1rem;\r\n}\r\n","import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\r\nimport Token from '@/models/Token';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, State, h, Prop, Watch, Event, EventEmitter, Fragment } from '@stencil/core';\r\nimport { ICountry } from '@/models/IBooking';\r\n@Component({\r\n  tag: 'igl-book-property-container',\r\n  styleUrl: 'igl-book-property-container.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyContainer {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() p: string;\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() withIrToastAndInterceptor: boolean = true;\r\n\r\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\r\n  @State() showPaymentDetails: any;\r\n  @State() countries: ICountry[];\r\n  @State() calendarData: any = {};\r\n\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  private bookingService = new BookingService();\r\n  private roomService = new RoomService();\r\n  private token = new Token();\r\n\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n  async initializeApp() {\r\n    try {\r\n      if (!this.propertyid && !this.p) {\r\n        throw new Error('Property ID or username is required');\r\n      }\r\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\r\n        this.roomService.getExposedProperty({ id: this.propertyid, language: this.language, aname: this.p }),\r\n        this.roomService.fetchLanguage(this.language),\r\n        this.bookingService.getCountries(this.language),\r\n      ]);\r\n      if (!locales.entries) {\r\n        locales.entries = languageTexts.entries;\r\n        locales.direction = languageTexts.direction;\r\n      }\r\n      this.countries = countriesList;\r\n\r\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\r\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\r\n      this.setRoomsData(roomResponse);\r\n      const paymentCodesToShow = ['001', '004'];\r\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\r\n    } catch (error) {\r\n      console.error('Error initializing app:', error);\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n  handleCloseBookingWindow() {\r\n    this.bookingItem = null;\r\n  }\r\n  handleTriggerClicked() {\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\r\n      FROM_DATE: this.from_date,\r\n      defaultDateRange: {\r\n        fromDate: new Date(),\r\n        fromDateStr: '',\r\n        toDate: tomorrow,\r\n        toDateStr: '',\r\n        dateDifference: 0,\r\n        message: '',\r\n      },\r\n      TO_DATE: this.to_date,\r\n      EMAIL: '',\r\n      event_type: 'PLUS_BOOKING',\r\n      ID: '',\r\n      NAME: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: '',\r\n      TITLE: locales.entries.Lcz_NewBooking,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.withIrToastAndInterceptor && (\r\n          <Fragment>\r\n            <ir-toast></ir-toast>\r\n            <ir-interceptor></ir-interceptor>\r\n          </Fragment>\r\n        )}\r\n\r\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\r\n          <slot name=\"trigger\"></slot>\r\n        </div>\r\n        {this.bookingItem && (\r\n          <igl-book-property\r\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\r\n            adultChildConstraints={this.calendarData.adult_child_constraints}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            countries={this.countries}\r\n            currency={this.calendarData.currency}\r\n            language={this.language}\r\n            propertyid={this.propertyid}\r\n            bookingData={this.bookingItem}\r\n            onResetBookingEvt={(e: CustomEvent) => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.resetBookingData.emit(null);\r\n            }}\r\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\r\n          ></igl-book-property>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"names":["BookingService","RoomService","Token","locales","h","Host","Fragment"],"mappings":"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"}