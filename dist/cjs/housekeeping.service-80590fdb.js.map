{"file":"housekeeping.service-80590fdb.js","mappings":"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","names":["createStore","axios"],"sources":["src/stores/housekeeping.store.ts","src/services/housekeeping.service.ts"],"sourcesContent":["import { IExposedHouseKeepingSetup, IHKTasks, IPendingActions } from '@/models/housekeeping';\r\nimport { createStore } from '@stencil/store';\r\n\r\nexport interface IHouseKeepingStore {\r\n  hk_criteria: IExposedHouseKeepingSetup;\r\n  default_properties: {\r\n    token: string;\r\n    property_id: number;\r\n    language: string;\r\n  };\r\n  hk_tasks: IHKTasks;\r\n  pending_housekeepers: { original: IPendingActions; selected?: boolean }[];\r\n}\r\n\r\nconst initialValue: IHouseKeepingStore = {\r\n  default_properties: undefined,\r\n  hk_criteria: undefined,\r\n  hk_tasks: undefined,\r\n  pending_housekeepers: [],\r\n};\r\n\r\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\r\nexport function updateHKStore(key: keyof IHouseKeepingStore, value: any) {\r\n  housekeeping_store[key] = value;\r\n}\r\nexport function getDefaultProperties() {\r\n  return housekeeping_store.default_properties;\r\n}\r\nexport default housekeeping_store;\r\n","import { RoomHkStatus } from '@/models/booking.dto';\r\nimport { ArchivedTask, IExposedHouseKeepingSetup, IInspectionMode, IPropertyHousekeepingAssignment, THKUser, TPendingHkSetupParams } from '@/models/housekeeping';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport axios from 'axios';\r\n\r\nexport class HouseKeepingService {\r\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup`, {\r\n      property_id,\r\n    });\r\n    updateHKStore('hk_criteria', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n  public async getExposedHKStatusCriteria(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Status_Criteria`, { property_id });\r\n    updateHKStore('hk_tasks', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n  public async getArchivedHKTasks(params: {\r\n    property_id: number;\r\n    from_date: string;\r\n    to_date: string;\r\n    filtered_by_hkm?: number[];\r\n    filtered_by_unit?: number[];\r\n  }): Promise<ArchivedTask[] | null> {\r\n    const { data } = await axios.post(`/Get_Archived_HK_Tasks`, params);\r\n    return data['My_Result'] ?? [];\r\n  }\r\n\r\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\r\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode`, {\r\n      property_id,\r\n      mode,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async manageExposedAssignedUnitToHKM(property_id: number, assignments: IPropertyHousekeepingAssignment[]) {\r\n    const { data } = await axios.post(`/Manage_Exposed_Assigned_Unit_To_HKM`, {\r\n      property_id,\r\n      links: assignments,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async editExposedHKM(params: THKUser, is_to_remove: boolean = false) {\r\n    const { data } = await axios.post(`/Edit_Exposed_HKM`, { ...params, is_to_remove });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHKPendingActions(params: TPendingHkSetupParams) {\r\n    const { data } = await axios.post(`/Get_HK_Pending_Actions`, { ...params });\r\n    updateHKStore(\r\n      'pending_housekeepers',\r\n      [...data['My_Result']].map(d => ({ original: d, selected: false })),\r\n    );\r\n    return data['My_Result'];\r\n  }\r\n  public async setExposedUnitHKStatus(params: {\r\n    property_id: number;\r\n    status: {\r\n      code: RoomHkStatus;\r\n    };\r\n    unit: {\r\n      id: number;\r\n    };\r\n  }) {\r\n    const { data } = await axios.post(`/Set_Exposed_Unit_HK_Status`, { ...params });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHkTasks(params: {\r\n    property_id: number;\r\n    from_date: string;\r\n    to_date: string;\r\n    housekeepers?: { ids: number[] };\r\n    cleaning_frequencies?: string;\r\n    dusty_units?: string;\r\n    highlight_window?: string;\r\n  }) {\r\n    const { data } = await axios.post('/Get_HK_Tasks', params);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data.My_Result;\r\n  }\r\n  public async executeHKAction(params: {\r\n    actions: {\r\n      unit_id: number;\r\n      hkm_id: number;\r\n      description: string;\r\n    }[];\r\n  }) {\r\n    await axios.post(`/Execute_HK_Action`, { ...params });\r\n  }\r\n  public async generateUserName(name: string) {\r\n    const { data } = await axios.post(`/Generate_UserName`, { name });\r\n    return data.My_Result;\r\n  }\r\n}\r\n"],"version":3}