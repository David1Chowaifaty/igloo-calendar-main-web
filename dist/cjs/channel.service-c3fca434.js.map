{"file":"channel.service-c3fca434.js","mappings":";;;;;;MAKa,cAAe,SAAQA,WAAK;IAChC,MAAM,kBAAkB;QAC7B,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMC,WAAK,CAAC,IAAI,CAAC,gCAAgC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;gBAC/E,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;oBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACpC;gBACD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC/BC,2BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;gBACtC,OAAO,IAAI,CAAC;aACb;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,2BAA2B,CAAC,WAAmB;QAC1D,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,0CAA0C,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;gBACtG,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;oBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACpC;gBACDC,2BAAa,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aACxD;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,oBAAoB,CAAC,KAAa,IAAI,EAAE,SAAkB;QACrE,IAAI;YACF,IAAI,IAAI,GAAQ,EAAE,CAAC;YACnB,IAAI,SAAS,EAAE;gBACb,IAAI,GAAG;oBACL,EAAE;oBACF,SAAS;iBACV,CAAC;aACH;iBAAM;gBACL,IAAI,GAAG;oBACL,EAAE,EAAEA,2BAAa,CAAC,UAAU;oBAC5B,KAAK,EAAEA,2BAAa,CAAC,gBAAgB,CAAC,WAAW;oBACjD,SAAS,EAAEA,2BAAa,CAAC,SAAS;oBAClC,OAAO,EAAE,EAAE,EAAE,EAAEA,2BAAa,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAEA,2BAAa,CAAC,eAAe,CAAC,IAAI,EAAE;oBAC3F,QAAQ,EAAE,EAAE,EAAE,EAAEC,0BAAa,CAAC,EAAE,EAAE,IAAI,EAAEA,0BAAa,CAAC,IAAI,EAAE;oBAC5D,GAAG,EAAED,2BAAa,CAAC,cAAc;oBACjC,SAAS;iBACV,CAAC;aACH;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;aAClC;YACD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,oCAAoC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;YAErF,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;KACF;;;;;","names":["Token","axios","channels_data","calendar_data"],"sources":["src/services/channel.service.ts"],"sourcesContent":["import { Token } from '@/models/Token';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport axios from 'axios';\r\n\r\nexport class ChannelService extends Token {\r\n  public async getExposedChannels() {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Channels?Ticket=${token}`, {});\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        const results = data.My_Result;\r\n        channels_data.channels = [...results];\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const token = this.getToken();\r\n      if (token !== null) {\r\n        const { data } = await axios.post(`/Get_Exposed_Connected_Channels?Ticket=${token}`, { property_id });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        channels_data.connected_channels = [...data.My_Result];\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async saveConnectedChannel(id: number = null, is_remove: boolean) {\r\n    try {\r\n      let body: any = {};\r\n      if (is_remove) {\r\n        body = {\r\n          id,\r\n          is_remove,\r\n        };\r\n      } else {\r\n        body = {\r\n          id: channels_data.channel_id,\r\n          title: channels_data.channel_settings.hotel_title,\r\n          is_active: channels_data.is_active,\r\n          channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\r\n          property: { id: calendar_data.id, name: calendar_data.name },\r\n          map: channels_data.mappedChannels,\r\n          is_remove,\r\n        };\r\n      }\r\n\r\n      const token = this.getToken();\r\n      if (!token) {\r\n        throw new Error('Invalid Token');\r\n      }\r\n      const { data } = await axios.post(`/Handle_Connected_Channel?Ticket=${token}`, body);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n"],"version":3}