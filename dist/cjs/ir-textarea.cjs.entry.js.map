{"file":"ir-textarea.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,aAAa,GAAG,mGAAmG,CAAC;AAC1H,yBAAe,aAAa;;MCMf,UAAU;IALvB;;;QAMU,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,SAAS,CAAC;QAClB,gBAAW,GAAG,eAAe,CAAC;QAC9B,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAW,GAAG,CAAC;QAExB,YAAO,GAA0B,SAAS,CAAC;QAC3C,eAAU,GAAgD,CAAC,CAAC;QAI3D,UAAK,GAAG,KAAK,CAAC;KA6CxB;IAxCC,uBAAuB,CAAC,QAAQ;QAC9B,IAAI,CAAC,KAAK,GAAG,QAAQ,KAAK,MAAM,CAAC;KAClC;IACD,iBAAiB,MAAK;IACtB,oBAAoB,MAAK;IACzB,MAAM;QACJ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;YAC9B,QACEA,sBAAU,KAAK,EAAC,aAAa,IAC3BA,iBAAK,KAAK,EAAE,2BAA2B,IAAI,CAAC,UAAU,mBAAmB,IACvEA,kBAAM,KAAK,EAAC,kCAAkC,IAAE,IAAI,CAAC,KAAK,CAAQ,CAC9D,EACNA,qCACe,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,cAAc,EACrB,KAAK,kBAAI,MAAM,EAAE,MAAM,IAAK,IAAI,CAAC,MAAM,GACvC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,MAA8B,CAAC,KAAK,CAAC,gBAChE,IAAI,CAAC,KAAK,GACZ,CACH,EACX;SACH;QACD,QACEA,iBAAK,KAAK,EAAE,YAAY,IACtBA,uBAAQ,IAAI,CAAC,KAAK,CAAS,EAC3BA,qCACe,IAAI,CAAC,MAAM,EACxB,KAAK,EAAE,IAAI,CAAC,MAAM,EAClB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,KAAK,EAAE,gBAAgB,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,KAAK,GAAG,eAAe,GAAG,EAAE,EAAE,EACpF,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,MAA8B,CAAC,KAAK,CAAC,GACjE,CACR,EACN;KACH;;;;;;;;;","names":["h"],"sources":["src/components/ui/ir-textarea/ir-textarea.css?tag=ir-textarea&encapsulation=scoped","src/components/ui/ir-textarea/ir-textarea.tsx"],"sourcesContent":[".prepend-textarea {\r\n  padding: 0 !important ;\r\n}\r\n.ta-prepend-text {\r\n  width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-textarea',\n  styleUrl: 'ir-textarea.css',\n  scoped: true,\n})\nexport class IrTextArea {\n  @Prop() rows = 3;\n  @Prop() cols = 5;\n  @Prop() text = '';\n  @Prop() label = '<label>';\n  @Prop() placeholder = '<placeholder>';\n  @Prop() value = '';\n  @Prop() maxLength: number = 250;\n  @Prop() textareaClassname: string;\n  @Prop() variant: 'default' | 'prepend' = 'default';\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n  @Prop() styles: { [key: string]: string };\n  @Prop() testId: string;\n\n  @State() error = false;\n\n  @Event() textChange: EventEmitter<string>;\n\n  @Watch('aria-invalid')\n  handleAriaInvalidChange(newValue) {\n    this.error = newValue === 'true';\n  }\n  connectedCallback() {}\n  disconnectedCallback() {}\n  render() {\n    if (this.variant === 'prepend') {\n      return (\n        <fieldset class=\"input-group\">\n          <div class={`input-group-prepend col-${this.labelWidth} prepend-textarea`}>\n            <span class=\"input-group-text ta-prepend-text\">{this.label}</span>\n          </div>\n          <textarea\n            data-testid={this.testId}\n            value={this.value}\n            class={`form-control`}\n            style={{ height: '7rem', ...this.styles }}\n            maxLength={this.maxLength}\n            onChange={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n            aria-label={this.label}\n          ></textarea>\n        </fieldset>\n      );\n    }\n    return (\n      <div class={'form-group'}>\n        <label>{this.label}</label>\n        <textarea\n          data-testid={this.testId}\n          style={this.styles}\n          maxLength={this.maxLength}\n          rows={this.rows}\n          value={this.value}\n          class={`form-control ${this.textareaClassname} ${this.error ? 'border-danger' : ''}`}\n          placeholder={this.placeholder}\n          onInput={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n        ></textarea>\n      </div>\n    );\n  }\n}\n"],"version":3}