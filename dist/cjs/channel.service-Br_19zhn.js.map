{"version":3,"file":"channel.service-Br_19zhn.js","sources":["src/services/channel.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport axios from 'axios';\r\n\r\nexport class ChannelService {\r\n  public async getExposedChannels() {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Channels`, {});\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const results = data.My_Result;\r\n      channels_data.channels = [...results];\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Connected_Channels`, { property_id });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      channels_data.connected_channels = [...data.My_Result];\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async saveConnectedChannel(id: number = null, is_remove: boolean) {\r\n    try {\r\n      let body: any = {};\r\n      if (is_remove) {\r\n        body = {\r\n          id,\r\n          is_remove,\r\n        };\r\n      } else {\r\n        body = {\r\n          id: channels_data.channel_id,\r\n          title: channels_data.channel_settings.hotel_title,\r\n          is_active: channels_data.is_active,\r\n          channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\r\n          property: { id: calendar_data.id, name: calendar_data.name },\r\n          map: channels_data.mappedChannels,\r\n          is_remove,\r\n        };\r\n      }\r\n\r\n      const { data } = await axios.post(`/Handle_Connected_Channel`, body);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n"],"names":["axios","channels_data","calendar_data"],"mappings":";;;;;;MAIa,cAAc,CAAA;AAClB,IAAA,MAAM,kBAAkB,GAAA;AAC7B,QAAA,IAAI;AACF,YAAA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMA,WAAK,CAAC,IAAI,CAAC,CAAA,qBAAA,CAAuB,EAAE,EAAE,CAAC;AAC9D,YAAA,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;AAC5B,gBAAA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;;AAEpC,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS;AAC9B,YAAAC,2BAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC;AACrC,YAAA,OAAO,IAAI;;QACX,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;AAClB,YAAA,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC;;;IAGnB,MAAM,2BAA2B,CAAC,WAAmB,EAAA;AAC1D,QAAA,IAAI;AACF,YAAA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,WAAW,EAAE,CAAC;AACrF,YAAA,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;AAC5B,gBAAA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;;YAEpCC,2BAAa,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;;QACtD,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;AAClB,YAAA,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC;;;AAGnB,IAAA,MAAM,oBAAoB,CAAC,EAAa,GAAA,IAAI,EAAE,SAAkB,EAAA;AACrE,QAAA,IAAI;YACF,IAAI,IAAI,GAAQ,EAAE;YAClB,IAAI,SAAS,EAAE;AACb,gBAAA,IAAI,GAAG;oBACL,EAAE;oBACF,SAAS;iBACV;;iBACI;AACL,gBAAA,IAAI,GAAG;oBACL,EAAE,EAAEA,2BAAa,CAAC,UAAU;AAC5B,oBAAA,KAAK,EAAEA,2BAAa,CAAC,gBAAgB,CAAC,WAAW;oBACjD,SAAS,EAAEA,2BAAa,CAAC,SAAS;AAClC,oBAAA,OAAO,EAAE,EAAE,EAAE,EAAEA,2BAAa,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAEA,2BAAa,CAAC,eAAe,CAAC,IAAI,EAAE;AAC3F,oBAAA,QAAQ,EAAE,EAAE,EAAE,EAAEC,0BAAa,CAAC,EAAE,EAAE,IAAI,EAAEA,0BAAa,CAAC,IAAI,EAAE;oBAC5D,GAAG,EAAED,2BAAa,CAAC,cAAc;oBACjC,SAAS;iBACV;;AAGH,YAAA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAMD,WAAK,CAAC,IAAI,CAAC,CAAA,yBAAA,CAA2B,EAAE,IAAI,CAAC;AAEpE,YAAA,OAAO,IAAI;;QACX,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;;;AAGzB;;;;"}