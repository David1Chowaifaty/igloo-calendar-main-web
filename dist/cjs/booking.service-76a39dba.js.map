{"file":"booking.service-76a39dba.js","mappings":"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","names":["createStore","axios","extras","getMyBookings","convertDateToCustomFormat","convertDateToTime","calendar_data","dateToFormattedString"],"sources":["src/stores/booking.store.ts","src/services/booking.service.ts"],"sourcesContent":["import { Booking, Guest } from '@/models/booking.dto';\nimport { TEventType } from '@/models/igl-book-property';\nimport { BeddingSetup, ISmokingOption, RatePlan, RoomType, Variation } from '@/models/property';\nimport { createStore } from '@stencil/store';\n\nexport interface IRatePlanSelection {\n  reserved: number;\n  visibleInventory: number;\n  selected_variation: Variation | null;\n  ratePlan: RatePlan;\n  guest: RatePlanGuest[] | null;\n  guestName: string[];\n  is_bed_configuration_enabled: boolean;\n  checkoutVariations: Variation[];\n  checkoutBedSelection: string[];\n  is_amount_modified?: boolean;\n  view_mode: '002' | '001';\n  rp_amount: number;\n  checkoutSmokingSelection: string[];\n  roomtype: {\n    id: number;\n    name: string;\n    physicalrooms: null;\n    rateplans: null;\n    availabilities: null;\n    inventory: number;\n    rate: number;\n    smoking_option: ISmokingOption;\n    bedding_setup: BeddingSetup[];\n    is_bed_configuration_enabled: boolean;\n  };\n}\nexport interface RatePlanGuest {\n  first_name: string;\n  last_name: string;\n  unit: string | null;\n  bed_preference: string | null;\n  infant_nbr: number | null;\n  roomtype_id?: number;\n}\n\nexport interface IRoomTypeSelection {\n  [ratePlanId: number]: IRatePlanSelection;\n}\nexport interface ISelectedVariation {\n  variation: Variation;\n  state: 'default' | 'modified';\n}\nexport interface IBookinAvailabilityParams {\n  from_date: Date | null;\n  to_date: Date | null;\n  adult_nbr: number;\n  child_nbr: number;\n  infant_nbr: number;\n  coupon?: string;\n  agent?: number;\n  loyalty?: boolean;\n  agent_code?: string;\n}\nexport interface BookingStore {\n  tax_statement: { message: string } | null;\n  checkout_guest: Guest | null;\n  roomTypes: RoomType[];\n  enableBooking: boolean;\n  ratePlanSelections: { [roomTypeId: number]: IRoomTypeSelection };\n  event_type: { type: TEventType };\n  guest: RatePlanGuest;\n  bookingAvailabilityParams: IBookinAvailabilityParams;\n  booking: Booking;\n  resetBooking: boolean;\n  isInFreeCancelationZone: boolean;\n  fictus_booking_nbr: { nbr: string | null };\n}\n\nconst initialState: BookingStore = {\n  checkout_guest: null,\n  guest: null,\n  tax_statement: null,\n  roomTypes: [],\n  enableBooking: false,\n  resetBooking: false,\n  ratePlanSelections: {},\n  isInFreeCancelationZone: false,\n  bookingAvailabilityParams: {\n    from_date: null,\n    to_date: null,\n    adult_nbr: 0,\n    child_nbr: 0,\n    infant_nbr: 0,\n  },\n  booking: null,\n  fictus_booking_nbr: null,\n  event_type: { type: 'PLUS_BOOKING' },\n};\n\nexport let { state: booking_store, onChange: onRoomTypeChange, reset } = createStore<BookingStore>(initialState);\nexport function resetBookingStore() {\n  reset();\n}\nfunction checkVariation(variations: Variation[], selected_variation: Variation): Variation {\n  if (!variations) {\n    return null;\n  }\n  if (!selected_variation || booking_store.resetBooking) {\n    return variations[0];\n  }\n  return variations?.find(v => v.adult_nbr === selected_variation.adult_nbr && v.child_nbr === selected_variation.child_nbr) ?? null;\n}\n\nonRoomTypeChange('roomTypes', (newValue: RoomType[]) => {\n  const currentSelections = booking_store.ratePlanSelections;\n  const ratePlanSelections: { [roomTypeId: number]: IRoomTypeSelection } = {};\n  newValue.forEach(roomType => {\n    if (!roomType.is_active) return;\n    ratePlanSelections[roomType.id] = ratePlanSelections[roomType.id] || {};\n\n    roomType.rateplans.forEach(ratePlan => {\n      if (!ratePlan.is_active || !ratePlan?.variations?.length) return;\n      let lastVariation = ratePlan.variations[ratePlan.variations.length - 1];\n      lastVariation = ratePlan.selected_variation ?? lastVariation;\n      const currentRatePlanSelection = currentSelections[roomType.id]?.[ratePlan.id];\n      ratePlanSelections[roomType.id][ratePlan.id] =\n        currentRatePlanSelection && Object.keys(currentRatePlanSelection).length > 0\n          ? {\n              ...currentRatePlanSelection,\n              ratePlan,\n              selected_variation: checkVariation(ratePlan.variations, currentRatePlanSelection.selected_variation) ?? null,\n              visibleInventory: roomType.inventory,\n              reserved: roomType.inventory === 0 ? 0 : booking_store.resetBooking ? 0 : currentRatePlanSelection.reserved,\n              checkoutVariations: roomType.inventory === 0 ? [] : currentRatePlanSelection.checkoutVariations,\n              checkoutBedSelection: roomType.inventory === 0 ? [] : currentRatePlanSelection.checkoutBedSelection,\n              checkoutSmokingSelection: roomType.inventory === 0 ? [] : currentRatePlanSelection.checkoutSmokingSelection,\n              guestName: roomType.inventory === 0 ? [] : currentRatePlanSelection.guestName,\n              roomtype: {\n                ...currentRatePlanSelection.roomtype,\n              },\n            }\n          : {\n              reserved: 0,\n              rp_amount: 0,\n              view_mode: '001',\n              guest: null,\n              visibleInventory: roomType.inventory,\n              selected_variation: ratePlan?.variations[0] ?? null,\n              ratePlan,\n              guestName: [],\n              is_bed_configuration_enabled: roomType.is_bed_configuration_enabled,\n              roomtype: {\n                ...roomType,\n                physicalrooms: null,\n                rateplans: null,\n                availabilities: null,\n              },\n              checkoutVariations: [],\n              checkoutBedSelection: [],\n              checkoutSmokingSelection: [],\n            };\n    });\n  });\n  booking_store.ratePlanSelections = ratePlanSelections;\n  booking_store.resetBooking = false;\n});\n\nexport function updateInventory(roomTypeId: number) {\n  const roomTypeSelection = booking_store.ratePlanSelections[roomTypeId];\n  const calculateTotalSelectedRoomsExcludingIndex = (excludedRatePlanId: number) => {\n    return Object.entries(roomTypeSelection).reduce((acc, [ratePlanId, ratePlan]) => {\n      return Number(ratePlanId) !== excludedRatePlanId ? acc + ratePlan.reserved : acc;\n    }, 0);\n  };\n  const newRatePlans = Object.fromEntries(\n    Object.entries(roomTypeSelection).map(([ratePlanId, ratePlan]) => {\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(Number(ratePlanId));\n      const roomTypeData = booking_store.roomTypes.find(rt => rt.id === roomTypeId);\n      const availableRooms = roomTypeData ? roomTypeData.inventory - totalSelectedRoomsExcludingCurrent : 0;\n\n      return [\n        ratePlanId,\n        {\n          ...ratePlan,\n          visibleInventory: availableRooms > 0 ? availableRooms : 0,\n        },\n      ];\n    }),\n  );\n  if (JSON.stringify(roomTypeSelection) !== JSON.stringify(newRatePlans)) {\n    booking_store.ratePlanSelections = {\n      ...booking_store.ratePlanSelections,\n      [roomTypeId]: newRatePlans,\n    };\n  }\n}\nexport function updateRoomParams({ ratePlanId, roomTypeId, params }: { roomTypeId: number; ratePlanId: number; params: Partial<IRatePlanSelection> }) {\n  booking_store.ratePlanSelections = {\n    ...booking_store.ratePlanSelections,\n    [Number(roomTypeId)]: {\n      ...booking_store.ratePlanSelections[Number(roomTypeId)],\n      [ratePlanId]: {\n        ...booking_store.ratePlanSelections[roomTypeId][ratePlanId],\n        ...params,\n      },\n    },\n  };\n}\n\nexport function reserveRooms({ ratePlanId, roomTypeId, rooms, guest }: { roomTypeId: number; ratePlanId: number; rooms: number; guest?: RatePlanGuest[] }) {\n  if (!booking_store.ratePlanSelections[roomTypeId]) {\n    booking_store.ratePlanSelections[roomTypeId] = {};\n  }\n  const roomType = booking_store.roomTypes?.find(r => r.id === roomTypeId);\n  if (!roomType) {\n    throw new Error('Invalid room type id');\n  }\n  const ratePlan = roomType.rateplans.find(r => r.id === ratePlanId);\n  if (!ratePlan) {\n    throw new Error('Invalid rate plan');\n  }\n  let newGuest = Array.from({ length: rooms }, () => ({ first_name: '', last_name: '', unit: null, bed_preference: null, infant_nbr: null }));\n  if (guest) {\n    newGuest = guest;\n  }\n  if (!booking_store.ratePlanSelections[roomTypeId][ratePlanId]) {\n    booking_store.ratePlanSelections[roomTypeId][ratePlanId] = {\n      guestName: null,\n      reserved: 0,\n      view_mode: '001',\n      rp_amount: 0,\n      guest: newGuest,\n      is_bed_configuration_enabled: roomType.is_bed_configuration_enabled,\n      visibleInventory: 0,\n      selected_variation: null,\n      ratePlan,\n      checkoutVariations: [],\n      checkoutBedSelection: [],\n      checkoutSmokingSelection: [],\n      roomtype: {\n        id: roomType.id,\n        name: roomType.name,\n        physicalrooms: null,\n        rateplans: null,\n        availabilities: null,\n        inventory: roomType.inventory,\n        rate: roomType.rate,\n        bedding_setup: roomType.bedding_setup,\n        smoking_option: roomType.smoking_option,\n        is_bed_configuration_enabled: roomType.is_bed_configuration_enabled,\n      },\n    };\n  }\n\n  booking_store.ratePlanSelections = {\n    ...booking_store.ratePlanSelections,\n    [Number(roomTypeId)]: {\n      ...booking_store.ratePlanSelections[Number(roomTypeId)],\n      [ratePlanId]: {\n        ...booking_store.ratePlanSelections[roomTypeId][ratePlanId],\n        reserved: rooms,\n        checkoutVariations: [],\n        guest: newGuest,\n      },\n    },\n  };\n  updateInventory(roomTypeId);\n}\n\nexport function getVisibleInventory(roomTypeId: number, ratePlanId: number): IRatePlanSelection {\n  if (!booking_store.ratePlanSelections || !booking_store.ratePlanSelections[roomTypeId]) {\n    return {\n      reserved: 0,\n      guest: null,\n      visibleInventory: 0,\n      selected_variation: null,\n      ratePlan: null,\n      guestName: [],\n      is_bed_configuration_enabled: false,\n      checkoutVariations: [],\n      checkoutBedSelection: [],\n      checkoutSmokingSelection: [],\n      rp_amount: 0,\n      view_mode: '001',\n      roomtype: null,\n    };\n  }\n  return booking_store.ratePlanSelections[roomTypeId][ratePlanId];\n}\n\nexport function modifyBookingStore(key: keyof BookingStore, value: any) {\n  booking_store[key] = value;\n}\n\nexport function calculateTotalCost(gross: boolean = false): { totalAmount: number; prePaymentAmount: number } {\n  let prePaymentAmount = 0;\n  let totalAmount = 0;\n  const calculateCost = (ratePlan: IRatePlanSelection, isPrePayment: boolean = false) => {\n    if (ratePlan.checkoutVariations.length > 0 && ratePlan.reserved > 0) {\n      if (isPrePayment) {\n        return ratePlan.reserved * ratePlan.ratePlan.pre_payment_amount || 0;\n      }\n      return ratePlan.checkoutVariations.reduce((sum, variation) => {\n        return sum + Number(variation[gross ? 'discounted_gross_amount' : 'discounted_amount']);\n      }, 0);\n    } else if (ratePlan.reserved > 0) {\n      const amount = isPrePayment ? ratePlan.ratePlan.pre_payment_amount ?? 0 : ratePlan.selected_variation[gross ? 'discounted_gross_amount' : 'discounted_amount'];\n      return ratePlan.reserved * (amount ?? 0);\n    }\n    return 0;\n  };\n  Object.values(booking_store.ratePlanSelections).forEach(value => {\n    Object.values(value).forEach(ratePlan => {\n      totalAmount += calculateCost(ratePlan);\n      prePaymentAmount += calculateCost(ratePlan, true);\n    });\n  });\n  return { totalAmount, prePaymentAmount };\n}\n\nexport function validateBooking() {\n  return Object.values(booking_store.ratePlanSelections).every(roomTypeSelection =>\n    Object.values(roomTypeSelection).every(ratePlan => ratePlan.guestName.every(name => name.trim() !== '')),\n  );\n}\nexport function calculateTotalRooms() {\n  return Object.values(booking_store.ratePlanSelections).reduce((total, value) => {\n    return (\n      total +\n      Object.values(value).reduce((innerTotal, ratePlan) => {\n        if (ratePlan.reserved === 0) {\n          return innerTotal;\n        }\n        return innerTotal + ratePlan.reserved;\n      }, 0)\n    );\n  }, 0);\n}\nexport function resetReserved(): void {\n  const updatedSelections = Object.entries(booking_store.ratePlanSelections).reduce((acc, [roomTypeId, ratePlans]) => {\n    const roomType = booking_store.roomTypes.find(rt => rt.id.toString() === roomTypeId.toString());\n    acc[roomTypeId] = Object.entries(ratePlans).reduce((rpAcc, [ratePlanId, ratePlan]) => {\n      rpAcc[ratePlanId] = { ...ratePlan, reserved: 0, visibleInventory: roomType?.inventory ?? ratePlan.visibleInventory };\n      return rpAcc;\n    }, {} as any);\n    return acc;\n  }, {} as any);\n  booking_store.ratePlanSelections = { ...updatedSelections };\n}\nexport default booking_store;\n","import { ExposedBookingEvent, HandleExposedRoomGuestsRequest } from './../models/booking.dto';\nimport { DayData } from '../models/DayType';\nimport axios from 'axios';\nimport { BookingDetails, IBlockUnit, ICountry, IEntries, ISetupEntries, MonthType } from '../models/IBooking';\nimport { convertDateToCustomFormat, convertDateToTime, dateToFormattedString, extras } from '../utils/utils';\nimport { getMyBookings } from '../utils/booking';\nimport { Booking, Day, ExtraService, Guest, IBookingPickupInfo, IPmsLog, RoomInOut } from '../models/booking.dto';\nimport booking_store from '@/stores/booking.store';\nimport calendar_data from '@/stores/calendar-data';\nexport interface IBookingParams {\n  bookedByInfoData: any;\n  check_in: boolean;\n  fromDate: Date;\n  toDate: Date;\n  guestData;\n  totalNights: number;\n  source: { code: string; description: string };\n  propertyid: number;\n  rooms: any[];\n  currency: { id: number; code: string };\n  pickup_info: IBookingPickupInfo | null;\n  bookingNumber?: string;\n  defaultGuest?: any;\n  arrivalTime?: any;\n  pr_id?: number;\n  identifier?: string;\n  extras: { key: string; value: string }[] | null;\n}\n\nexport type TableEntries = '_CALENDAR_BLOCKED_TILL' | '_DEPARTURE_TIME' | '_ARRIVAL_TIME' | '_RATE_PRICING_MODE' | '_BED_PREFERENCE_TYPE' | '_PAY_TYPE' | (string & {});\nexport type GroupedTableEntries = {\n  [K in TableEntries as K extends `_${infer Rest}` ? Lowercase<Rest> : never]: IEntries[];\n};\nexport class BookingService {\n  public async unBlockUnitByPeriod(props: { unit_id: number; from_date: string; to_date: string }) {\n    const { data } = await axios.post(`/Unblock_Unit_By_Period`, props);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n\n  public async handleExposedRoomInOut(props: { booking_nbr: string; room_identifier: string; status: RoomInOut['code'] }) {\n    const { data } = await axios.post(`/Handle_Exposed_Room_InOut`, props);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async setExposedRestrictionPerRoomType(params: { is_closed: boolean; restrictions: { room_type_id: number | string; night: string }[]; operation_type?: string }) {\n    const { data } = await axios.post(`https://gateway.igloorooms.com/IRBE/Set_Exposed_Restriction_Per_Room_Type`, {\n      operation_type: params.operation_type ?? 'close_open',\n      ...params,\n    });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async getLov() {\n    const { data } = await axios.post(`/Get_LOV`, {});\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async sendBookingConfirmationEmail(booking_nbr: string, language: string) {\n    const { data } = await axios.post(`/Send_Booking_Confirmation_Email`, {\n      booking_nbr,\n      language,\n    });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data.My_Result;\n  }\n\n  public async getCalendarData(propertyid: number, from_date: string, to_date: string): Promise<{ [key: string]: any }> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Calendar`, {\n        propertyid,\n        from_date,\n        to_date,\n        extras,\n        include_sales_rate_plans: true,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const months: MonthType[] = data.My_Result.months;\n      const customMonths: { daysCount: number; monthName: string }[] = [];\n      const myBooking = await getMyBookings(months);\n      const days: DayData[] = months\n        .map(month => {\n          customMonths.push({\n            daysCount: month.days.length,\n            monthName: month.description,\n          });\n          return month.days.map(day => {\n            if (day['value'] === '2025-05-30') {\n              console.log(day);\n            }\n            return {\n              day: convertDateToCustomFormat(day.description, month.description),\n              value: day.value,\n              currentDate: convertDateToTime(day.description, month.description),\n              dayDisplayName: day.description,\n              rate: day.room_types,\n              unassigned_units_nbr: day.unassigned_units_nbr,\n              occupancy: day.occupancy,\n            };\n          });\n        })\n        .flat();\n\n      return Promise.resolve({\n        ExceptionCode: null,\n        ExceptionMsg: '',\n        My_Params_Get_Rooming_Data: {\n          AC_ID: propertyid,\n          FROM: data.My_Params_Get_Exposed_Calendar.from_date,\n          TO: data.My_Params_Get_Exposed_Calendar.to_date,\n        },\n        days,\n        months: customMonths,\n        myBookings: myBooking,\n        defaultMonths: months,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  public async handleExposedRoomGuests(props: HandleExposedRoomGuestsRequest) {\n    const { data } = await axios.post('/Handle_Exposed_Room_Guests', props);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async fetchGuest(email: string): Promise<Guest> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Guest`, { email });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async changeExposedBookingStatus(props: { book_nbr: string; status: string }) {\n    try {\n      const { data } = await axios.post(`/Change_Exposed_Booking_Status`, props);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n  public async fetchPMSLogs(booking_nbr: string | number): Promise<IPmsLog> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_PMS_Logs`, { booking_nbr });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getExposedBookingEvents(booking_nbr: string | number): Promise<ExposedBookingEvent[] | null> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Booking_Events`, { booking_nbr });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async editExposedGuest(guest: Guest, book_nbr: string): Promise<any> {\n    try {\n      const { data } = await axios.post(`/Edit_Exposed_Guest`, { ...guest, book_nbr });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getBookingAvailability(props: {\n    from_date: string;\n    to_date: string;\n    propertyid: number;\n    adultChildCount: { adult: number; child: number };\n    language: string;\n    room_type_ids: number[];\n    room_type_ids_to_update?: number[];\n    rate_plan_ids?: number[];\n    currency: { id: number; code: string };\n    is_in_agent_mode?: boolean;\n    agent_id?: string | number;\n  }): Promise<BookingDetails> {\n    try {\n      const { adultChildCount, currency, ...rest } = props;\n      const { data } = await axios.post(`/Check_Availability`, {\n        ...rest,\n        adult_nbr: adultChildCount.adult,\n        child_nbr: adultChildCount.child,\n        currency_ref: currency.code,\n        skip_getting_assignable_units: !calendar_data.is_frontdesk_enabled,\n        is_backend: true,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = this.modifyRateplans(this.sortRoomTypes(data['My_Result'], { adult_nbr: Number(adultChildCount.adult), child_nbr: Number(adultChildCount.child) }));\n      booking_store.roomTypes = [...results];\n      booking_store.tax_statement = { message: data.My_Result.tax_statement };\n      return results;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  private sortRoomTypes(roomTypes, userCriteria: { adult_nbr: number; child_nbr: number }) {\n    return roomTypes.sort((a, b) => {\n      // Priority to available rooms\n      if (a.is_available_to_book && !b.is_available_to_book) return -1;\n      if (!a.is_available_to_book && b.is_available_to_book) return 1;\n\n      // Check for variations where is_calculated is true and amount is 0 or null\n      const zeroCalculatedA = a.rateplans?.some(plan => plan.variations?.some(variation => variation.discounted_amount === 0 || variation.discounted_amount === null));\n      const zeroCalculatedB = b.rateplans?.some(plan => plan.variations?.some(variation => variation.discounted_amount === 0 || variation.discounted_amount === null));\n\n      // Prioritize these types to be before inventory 0 but after all available ones\n      if (zeroCalculatedA && !zeroCalculatedB) return 1;\n      if (!zeroCalculatedA && zeroCalculatedB) return -1;\n\n      // Check for exact matching variations based on user criteria\n      const matchA = a.rateplans?.some(plan =>\n        plan.variations?.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr),\n      );\n      const matchB = b.rateplans?.some(plan =>\n        plan.variations?.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr),\n      );\n\n      if (matchA && !matchB) return -1;\n      if (!matchA && matchB) return 1;\n\n      // Sort by the highest variation amount\n      const maxVariationA = Math.max(...a.rateplans.flatMap(plan => plan.variations?.map(variation => variation.discounted_amount ?? 0)));\n      const maxVariationB = Math.max(...b.rateplans.flatMap(plan => plan.variations?.map(variation => variation.discounted_amount ?? 0)));\n\n      if (maxVariationA < maxVariationB) return -1;\n      if (maxVariationA > maxVariationB) return 1;\n\n      return 0;\n    });\n  }\n  private modifyRateplans(roomTypes) {\n    return roomTypes?.map(rt => ({ ...rt, rateplans: rt.rateplans?.map(rp => ({ ...rp, variations: this.sortVariations(rp?.variations ?? []) })) }));\n  }\n  private sortVariations(variations) {\n    return variations.sort((a, b) => {\n      if (a.adult_nbr !== b.adult_nbr) {\n        return b.adult_nbr - a.adult_nbr;\n      }\n      return b.child_nbr - a.child_nbr;\n    });\n  }\n  public async getCountries(language: string): Promise<ICountry[]> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Countries`, {\n        language,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async getSetupEntriesByTableName(TBL_NAME: string): Promise<IEntries[]> {\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME`, {\n      TBL_NAME,\n    });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    const res: IEntries[] = data.My_Result ?? [];\n    return res;\n  }\n\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\n    try {\n      const data = await this.getSetupEntriesByTableNameMulti(['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE']);\n      const { arrival_time, rate_pricing_mode, bed_preference_type } = this.groupEntryTablesResult(data);\n      return {\n        arrivalTime: arrival_time,\n        ratePricingMode: rate_pricing_mode,\n        bedPreferenceType: bed_preference_type,\n      };\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async doBookingExtraService({ booking_nbr, service, is_remove }: { service: ExtraService; booking_nbr: number | string; is_remove: boolean }) {\n    const { data } = await axios.post(`/Do_Booking_Extra_Service`, { ...service, booking_nbr, is_remove });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data.My_Result;\n  }\n\n  public groupEntryTablesResult(entries: IEntries[]): GroupedTableEntries {\n    let result = {};\n    for (const entry of entries) {\n      const key = entry.TBL_NAME.substring(1, entry.TBL_NAME.length).toLowerCase();\n      if (!result[key]) {\n        result[key] = [];\n      }\n      result[key] = [...result[key], entry];\n    }\n    return result as GroupedTableEntries;\n  }\n  public async getSetupEntriesByTableNameMulti(entries: TableEntries[]): Promise<IEntries[]> {\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`, { TBL_NAMES: entries });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data.My_Result;\n  }\n  public async getBlockedInfo(): Promise<IEntries[]> {\n    return await this.getSetupEntriesByTableNameMulti(['_CALENDAR_BLOCKED_TILL']);\n  }\n  public async getUserDefaultCountry() {\n    try {\n      const { data } = await axios.post(`/Get_Country_By_IP`, {\n        IP: '',\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data['My_Result'];\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n\n  public async blockUnit(params: IBlockUnit) {\n    try {\n      const { data } = await axios.post(`/Block_Exposed_Unit`, params);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      console.log(data);\n      return data['My_Params_Block_Exposed_Unit'];\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async blockAvailabilityForBrackets(params: {\n    unit_id: number;\n    block_status_code?: '003' | '004' | '002';\n    description?: string;\n    brackets: { from_date: string; to_date: string }[];\n  }) {\n    try {\n      const { data } = await axios.post(`/Block_Availability_For_Brackets`, params);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async setDepartureTime(params: { property_id: number; room_identifier: string; code: string }) {\n    const { data } = await axios.post('/Set_Departure_Time', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n\n  public async getUserInfo(email: string) {\n    try {\n      const { data } = await axios.post(`/GET_EXPOSED_GUEST`, {\n        email,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async getExposedBooking(booking_nbr: string, language: string, withExtras: boolean = true): Promise<Booking> {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Booking`, {\n        booking_nbr,\n        language,\n        extras: withExtras ? extras : null,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data.My_Result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  private generateDays(from_date: string, to_date: string, amount: number): Day[] {\n    const startDate = new Date(from_date);\n    const endDate = new Date(to_date);\n    const days: Day[] = [];\n\n    while (startDate < endDate) {\n      days.push({\n        date: startDate.toISOString().split('T')[0],\n        amount: amount,\n        cost: null,\n      });\n      startDate.setDate(startDate.getDate() + 1);\n    }\n\n    return days;\n  }\n  private calculateTotalRate(rate: number, totalNights: number, isRateModified: boolean, preference: number) {\n    if (isRateModified && preference === 2) {\n      return +rate;\n    }\n    return +rate / +totalNights;\n  }\n  public async fetchExposedGuest(email: string, property_id: number) {\n    try {\n      const { data } = await axios.post(`/Fetch_Exposed_Guests`, {\n        email,\n        property_id,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data['My_Result'];\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async fetchExposedBookings(booking_nbr: string, property_id: number, from_date: string, to_date: string) {\n    try {\n      const { data } = await axios.post(`/Fetch_Exposed_Bookings`, {\n        booking_nbr,\n        property_id,\n        from_date,\n        to_date,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data['My_Result'];\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async getPCICardInfoURL(BOOK_NBR: string) {\n    try {\n      const { data } = await axios.post(`/Get_PCI_Card_Info_URL`, {\n        BOOK_NBR,\n      });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      return data['My_Result'];\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n  public async doReservation(body: any) {\n    const { data } = await axios.post(`/DoReservation`, { ...body, extras: body.extras ? body.extras : extras });\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    console.log(data['My_Result']);\n    return data['My_Result'];\n  }\n\n  public async bookUser({\n    bookedByInfoData,\n    check_in,\n    currency,\n    extras = null,\n    fromDate,\n    guestData,\n    pickup_info,\n    propertyid,\n    rooms,\n    source,\n    toDate,\n    totalNights,\n    arrivalTime,\n    bookingNumber,\n    defaultGuest,\n    identifier,\n    pr_id,\n  }: IBookingParams) {\n    try {\n      const fromDateStr = dateToFormattedString(fromDate);\n      const toDateStr = dateToFormattedString(toDate);\n      let guest: any = {\n        email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\n        first_name: bookedByInfoData.firstName,\n        last_name: bookedByInfoData.lastName,\n        country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\n        city: null,\n        mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\n        phone_prefix: null,\n        address: '',\n        dob: null,\n        subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\n        cci: bookedByInfoData.cardNumber\n          ? {\n              nbr: bookedByInfoData.cardNumber,\n              holder_name: bookedByInfoData.cardHolderName,\n              expiry_month: bookedByInfoData.expiryMonth,\n              expiry_year: bookedByInfoData.expiryYear,\n            }\n          : null,\n      };\n      if (defaultGuest) {\n        guest = { ...defaultGuest, email: defaultGuest.email === '' ? null : defaultGuest.email };\n      }\n      if (bookedByInfoData.id) {\n        guest = { ...guest, id: bookedByInfoData.id };\n      }\n      const body = {\n        assign_units: true,\n        check_in,\n        is_pms: true,\n        is_direct: true,\n        is_in_loyalty_mode: false,\n        promo_key: null,\n        extras,\n        booking: {\n          booking_nbr: bookingNumber || '',\n          from_date: fromDateStr,\n          to_date: toDateStr,\n          remark: bookedByInfoData.message || null,\n          property: {\n            id: propertyid,\n          },\n          source,\n          currency,\n          arrival: { code: arrivalTime ? arrivalTime : bookedByInfoData.selectedArrivalTime },\n\n          guest,\n          rooms: [\n            ...guestData.map(data => ({\n              identifier: identifier || null,\n              roomtype: {\n                id: data.roomCategoryId,\n                name: data.roomCategoryName,\n                physicalrooms: null,\n                rateplans: null,\n                availabilities: null,\n                inventory: data.inventory,\n                rate: data.rate / totalNights,\n              },\n              rateplan: {\n                id: data.ratePlanId,\n                name: data.ratePlanName,\n                rate_restrictions: null,\n                variations: null,\n                cancelation: data.cancelation,\n                guarantee: data.guarantee,\n              },\n              unit: typeof pr_id === 'undefined' && data.roomId === '' ? null : { id: +pr_id || +data.roomId },\n              occupancy: {\n                adult_nbr: data.adultCount,\n                children_nbr: data.childrenCount,\n                infant_nbr: null,\n              },\n              bed_preference: data.preference,\n              from_date: fromDateStr,\n              to_date: toDateStr,\n              notes: null,\n              days: this.generateDays(fromDateStr, toDateStr, this.calculateTotalRate(data.rate, totalNights, data.isRateModified, data.rateType)),\n              guest: {\n                email: null,\n                first_name: data.guestName,\n                last_name: null,\n                country_id: null,\n                city: null,\n                mobile: null,\n                address: null,\n                dob: null,\n                subscribe_to_news_letter: null,\n              },\n            })),\n            ...rooms,\n          ],\n        },\n        pickup_info,\n      };\n      console.log('book user payload', body);\n      // const result = await this.doReservation(body);\n      // return result;\n    } catch (error) {\n      console.error(error);\n      throw new Error(error);\n    }\n  }\n}\n"],"version":3}