{"file":"ir-tasks-filters.ir-tasks-header.ir-tasks-table.entry.cjs.js","mappings":"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","names":["h","moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.css?tag=ir-tasks-filters&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.css?tag=ir-tasks-header&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  /* min-width: 1vw; */\r\n  height: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, h, State } from '@stencil/core';\r\nimport { TaskFilters } from '../types';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-filters',\r\n  styleUrl: 'ir-tasks-filters.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksFilters {\r\n  @State() filters: TaskFilters = {\r\n    period: '',\r\n    housekeepers: '',\r\n    cleaning_frequency: '',\r\n    dusty_units: '',\r\n    highlight_check_ins: '',\r\n  };\r\n  @State() collapsed: boolean = false;\r\n\r\n  @Event() applyClicked: EventEmitter<TaskFilters>;\r\n  @Event() resetClicked: EventEmitter<TaskFilters>;\r\n  private generateDaysFilter() {\r\n    let list = [{ code: '0', value: 'Do not include' }];\r\n    for (let i = 3; i <= 7; i++) {\r\n      list.push({ code: i.toString(), value: `Cleaned ${i} ago` });\r\n    }\r\n    return list;\r\n  }\r\n  private generateCheckinsDaysFilter() {\r\n    let list = [{ code: '0', value: 'No' }];\r\n    for (let i = 2; i <= 10; i++) {\r\n      list.push({ code: i.toString(), value: `Cleaned ${i} ago` });\r\n    }\r\n    return list;\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card mb-0 p-1 d-flex flex-column\">\r\n        <div class=\"d-flex align-items-center\" style={{ gap: '0.5rem', cursor: 'pointer' }}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\r\n            />\r\n          </svg>\r\n          <h4\r\n            class=\"m-0 p-0 flex-grow-1\"\r\n            onClick={() => (this.collapsed = !this.collapsed)}\r\n            data-toggle=\"collapse\"\r\n            data-target={`#hkTasksFiltersCollapse`}\r\n            aria-expanded={this.collapsed ? 'true' : 'false'}\r\n            aria-controls=\"myCollapse\"\r\n          >\r\n            Filters\r\n          </h4>\r\n        </div>\r\n        <div class=\"m-0 p-0 \" id=\"hkTasksFiltersCollapse\">\r\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\r\n            <fieldset class=\"pt-1\">\r\n              <p class=\"m-0 p-0\">Period</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={[\r\n                  { code: '001', value: 'For today' },\r\n                  { code: '002', value: `Until ${moment().format('DD MMM')}` },\r\n                  { code: '002', value: `Until ${moment().add(10, 'days').format('DD MMM')}` },\r\n                ].map(v => ({\r\n                  text: v.value,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Housekeepers</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={this.generateDaysFilter().map(v => ({\r\n                  text: v.value,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Cleaning frequency</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={this.generateDaysFilter().map(v => ({\r\n                  text: v.value,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Dusty units</p>\r\n              <ir-select showFirstOption={false} LabelAvailable={false} data={[{ text: 'test', value: 'hello' }]}></ir-select>\r\n            </fieldset>\r\n            <fieldset class=\"mb-1\">\r\n              <p class=\"m-0 p-0\">Highlight check-ins</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={this.generateCheckinsDaysFilter().map(v => ({\r\n                  text: v.value,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <div class=\"d-flex align-items-center justify-content-end\" style={{ gap: '1rem' }}>\r\n              <ir-button text=\"Reset\" size=\"sm\" btn_color=\"outline\"></ir-button>\r\n              <ir-button text=\"Apply\" size=\"sm\"></ir-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, h, Listen, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-header',\r\n  styleUrl: 'ir-tasks-header.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksHeader {\r\n  @Prop() isCleanedEnabled: boolean = false;\r\n\r\n  private btnRef: HTMLIrButtonElement;\r\n\r\n  @Listen('animateCleanedButton', { target: 'body' })\r\n  handleCleanedButtonAnimation(e: CustomEvent) {\r\n    console.log('here');\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.btnRef.bounce();\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"d-flex align-items-center justify-content-between\">\r\n        <h4>Housekeeping Tasks</h4>\r\n        <div class=\"d-flex align-items-center\" style={{ gap: '1rem' }}>\r\n          <ir-button size=\"sm\" btn_color=\"outline\" text=\"Export\"></ir-button>\r\n          <ir-button size=\"sm\" btn_disabled={!this.isCleanedEnabled} text=\"Cleaned\" ref={el => (this.btnRef = el)}></ir-button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.selected-row {\r\n  background-color: rgba(0, 0, 255, 0.1);\r\n}\r\n\r\n.selected-row:hover {\r\n  background-color: rgba(0, 0, 255, 0.15);\r\n}\r\n.header-content {\r\n  height: 100%;\r\n}\r\n.sortable {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n.task-row,\r\n.table th,\r\n.table td {\r\n  padding: 0.25rem 0.5rem !important;\r\n  /* background: white; */\r\n}\r\n.table th,\r\n.table td {\r\n  max-width: max-content !important;\r\n  text-align: start;\r\n}\r\n/* td,\r\nth {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  max-width: max-content !important;\r\n \r\n  text-align: start;\r\n}\r\ntr {\r\n  border-bottom: 1px solid #e0e0e0;\r\n} */\r\n.task-table-row {\r\n  background: white !important;\r\n}\r\n.task-table-row:hover {\r\n  background: #e2e6ea3f !important;\r\n}\r\n.selected {\r\n  background: #e3f3fa !important;\r\n}\r\n.sortable:hover {\r\n  color: #212529;\r\n  background-color: #e2e6ea;\r\n  border-color: #dae0e5;\r\n  cursor: pointer;\r\n}\r\n.sortable:active {\r\n  color: #212529;\r\n  background-color: #dae0e5;\r\n  border-color: #d3d9df;\r\n}\r\n","import { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\r\nimport { Task } from '../ir-hk-tasks';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-table',\r\n  styleUrl: 'ir-tasks-table.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksTable {\r\n  @Prop({ mutable: true }) tasks: Task[] = [];\r\n\r\n  /**\r\n   * Tracks which task IDs are currently selected via checkboxes.\r\n   */\r\n  @State() selectedIds: number[] = [];\r\n\r\n  /**\r\n   * Controls whether the \"Confirm Clean\" modal is shown.\r\n   */\r\n  @State() showConfirmModal: boolean = false;\r\n\r\n  /**\r\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\r\n   */\r\n  @State() sortKey: string = 'date';\r\n\r\n  /**\r\n   * The sort direction: ASC or DESC.\r\n   */\r\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\r\n\r\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\r\n\r\n  componentWillLoad() {\r\n    this.sortTasks('date', 'ASC');\r\n  }\r\n  /**\r\n   * Sorts the tasks by the given key. If no direction is provided,\r\n   * it toggles between ascending and descending.\r\n   */\r\n  private handleSort(key: string) {\r\n    let newDirection = this.sortDirection;\r\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\r\n    if (this.sortKey === key) {\r\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\r\n    } else {\r\n      newDirection = 'ASC';\r\n    }\r\n    this.sortTasks(key, newDirection);\r\n  }\r\n\r\n  /**\r\n   * Helper to sort tasks array in state.\r\n   */\r\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\r\n    const sorted = [...this.tasks].sort((a, b) => {\r\n      if (a[key] < b[key]) return direction === 'ASC' ? -1 : 1;\r\n      if (a[key] > b[key]) return direction === 'ASC' ? 1 : -1;\r\n      return 0;\r\n    });\r\n    this.tasks = sorted;\r\n    this.sortKey = key;\r\n    this.sortDirection = direction;\r\n  }\r\n\r\n  /**\r\n   * Helper to toggle selection for a single row.\r\n   */\r\n  private toggleSelection(id: number) {\r\n    if (this.selectedIds.includes(id)) {\r\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\r\n    } else {\r\n      this.selectedIds = [...this.selectedIds, id];\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if every row is selected.\r\n   */\r\n  private get allSelected(): boolean {\r\n    return this.tasks.length > 0 && this.selectedIds.length === this.tasks.length;\r\n  }\r\n\r\n  /**\r\n   * Toggles selection on all visible tasks at once.\r\n   */\r\n  private toggleSelectAll() {\r\n    if (this.allSelected) {\r\n      this.selectedIds = [];\r\n    } else {\r\n      this.selectedIds = this.tasks.map(task => task.id);\r\n    }\r\n    console.log('here');\r\n    this.animateCleanedButton.emit(null);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card h-100 p-1 m-0 table-responsive\">\r\n        <table class=\"table \">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <ir-checkbox checked={this.allSelected} onCheckChange={() => this.toggleSelectAll()}></ir-checkbox>\r\n              </th>\r\n              <th>Period</th>\r\n              <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('unit')}>\r\n                {/* Unit {this.sortKey === 'unit' ? `(${this.sortDirection})` : ''} */}\r\n                Unit\r\n              </th>\r\n              <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('status')}>\r\n                Status\r\n              </th>\r\n              <th>Hint</th>\r\n              <th>A</th>\r\n              <th>C</th>\r\n              <th>I</th>\r\n              <th style={{ cursor: 'pointer', textAlign: 'start' }} onClick={() => this.handleSort('housekeeper')}>\r\n                Housekeeper\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.tasks.map(task => {\r\n              const isSelected = this.selectedIds.includes(task.id);\r\n              console.log(isSelected);\r\n              return (\r\n                <tr style={{ cursor: 'pointer' }} onClick={() => this.toggleSelection(task.id)} class={{ 'selected': isSelected, 'task-table-row': true }} key={task.id}>\r\n                  <td class=\"task-row\">\r\n                    <ir-checkbox checked={isSelected}></ir-checkbox>\r\n                  </td>\r\n                  <td class=\"task-row\">{task.date}</td>\r\n                  <td class=\"task-row\">{task.unit}</td>\r\n                  <td class=\"task-row\">{task.status}</td>\r\n                  <td class=\"task-row\">{task.hint}</td>\r\n                  <td class=\"task-row\">{task.a}</td>\r\n                  <td class=\"task-row\">{task.c}</td>\r\n                  <td class=\"task-row\">{task.i}</td>\r\n                  <td class=\"w-50 task-row\" style={{ textAlign: 'start' }}>\r\n                    {task.housekeeper}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}