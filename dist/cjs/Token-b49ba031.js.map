{"file":"Token-b49ba031.js","mappings":";;;;AAAA;AAEA,MAAM,IAAI;IAKR;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;KACF;IACM,MAAM,IAAI;;;;;KAKhB;IACM,SAAS,CAAC,QAA4C;QAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjC;IACM,WAAW,CAAC,QAA4C;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,QAAQ,CAAC,CAAC;KACrE;IACM,kBAAkB,CAAC,KAAc;QACtC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,OAAO,iBAAiB,CAAC,eAAwB;QACvD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;KACjE;IACM,eAAe;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;AA/Bc,eAAU,GAAG,KAAK,CAAC;AACnB,qBAAgB,GAAG,KAAK,CAAC;AACzB,gBAAW,GAA8C,EAAE;;ACF5E,MAAM,KAAM,SAAQ,IAAI;IAMtB;QACE,KAAK,EAAE,CAAC;QANF,YAAO,GAAG,mCAAmC,CAAC;QAOpD,IAAI,KAAK,CAAC,eAAe,EAAE;YACzB,OAAO;SACR;QACD,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7BA,WAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;KACvC;IACM,QAAQ;QACb,OAAO,KAAK,CAAC,KAAK,CAAC;KACpB;IACO,UAAU;QAChB,IAAI,KAAK,CAAC,kBAAkB,EAAE;YAC5B,OAAO;SACR;QAEDA,WAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM;YACnC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAChB,MAAM,IAAI,iBAAiB,EAAE,CAAC;aAC/B;YACD,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC;;;YAG3C,OAAO,MAAM,CAAC;SACf,CAAC,CAAC;QAEH,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;KACjC;IAEM,QAAQ,CAAC,KAAa;QAC3B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;AApCc,WAAK,GAAkB,EAAlB,CAAqB;AAC1B,qBAAe,GAAY,KAAZ,CAAkB;AACjC,wBAAkB,GAAG,KAAH,CAAS;MAqC/B,iBAAkB,SAAQ,KAAK;IAC1C,YAAY,OAAO,GAAG,iBAAiB;QACrC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;KACjC;;;;;","names":["axios"],"sources":["src/models/Auth.ts","src/models/Token.ts"],"sourcesContent":["// import axios from 'axios';\r\n\r\nclass Auth {\r\n  private static isAuthUsed = false;\r\n  private static _isAuthenticated = false;\r\n  private static subscribers: Array<(isAuthenticated: boolean) => void> = [];\r\n\r\n  constructor() {\r\n    if (!Auth.isAuthUsed) {\r\n      this.init();\r\n    }\r\n  }\r\n  public async init() {\r\n    // axios.defaults.withCredentials = true;\r\n    // Auth.isAuthUsed = true;\r\n    // const { data } = await axios.post('/Is_Already_Athenticated');\r\n    // this.setIsAuthenticated(data.My_Result);\r\n  }\r\n  public subscribe(callback: (isAuthenticated: boolean) => void) {\r\n    Auth.subscribers.push(callback);\r\n  }\r\n  public unsubscribe(callback: (isAuthenticated: boolean) => void) {\r\n    Auth.subscribers = Auth.subscribers.filter(sub => sub !== callback);\r\n  }\r\n  public setIsAuthenticated(value: boolean) {\r\n    Auth._isAuthenticated = value;\r\n    Auth.notifySubscribers(value);\r\n  }\r\n\r\n  private static notifySubscribers(isAuthenticated: boolean) {\r\n    Auth.subscribers.forEach(callback => callback(isAuthenticated));\r\n  }\r\n  public isAuthenticated() {\r\n    return Auth._isAuthenticated;\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import axios from 'axios';\r\nimport Auth from './Auth';\r\n\r\nclass Token extends Auth {\r\n  private baseUrl = 'https://gateway.igloorooms.com/IR';\r\n  private static token: string | null = '';\r\n  private static modifiedBaseUrl: boolean = false;\r\n  private static isInterceptorAdded = false;\r\n\r\n  constructor() {\r\n    super();\r\n    if (Token.modifiedBaseUrl) {\r\n      return;\r\n    }\r\n    Token.modifiedBaseUrl = true;\r\n    axios.defaults.baseURL = this.baseUrl;\r\n  }\r\n  public getToken() {\r\n    return Token.token;\r\n  }\r\n  private initialize() {\r\n    if (Token.isInterceptorAdded) {\r\n      return;\r\n    }\r\n\r\n    axios.interceptors.request.use(config => {\r\n      if (!Token.token) {\r\n        throw new MissingTokenError();\r\n      }\r\n      config.headers.Authorization = Token.token;\r\n      // config.params = config.params || {};\r\n      // config.params.Ticket = Token.token;\r\n      return config;\r\n    });\r\n\r\n    Token.isInterceptorAdded = true;\r\n  }\r\n\r\n  public setToken(token: string) {\r\n    Token.token = token;\r\n    this.initialize();\r\n  }\r\n}\r\nexport default Token;\r\nexport class MissingTokenError extends Error {\r\n  constructor(message = 'Missing token!!') {\r\n    super(message);\r\n    this.name = 'MissingTokenError';\r\n  }\r\n}\r\n"],"version":3}