{"file":"igl-application-info.igl-block-dates-view.igl-book-property.igl-book-property-footer.igl-book-property-header.igl-booking-form.igl-booking-overview-page.igl-property-booked-by.igl-rate-plan.igl-room-type.entry.cjs.js","mappings":"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","names":["locales","isSingleUnit","booking_store","calendar_data","h","Host","formatAmount","v4","modifyBookingStore","BookingService","moment","calculateDaysBetweenDates","extras","calculateTotalRooms","resetBookingStore","reserveRooms","Fragment","isRequestPending","getReleaseHoursString","dateToFormattedString","z","validateEmail","index","updateRoomParams","uuidv4","getVisibleInventory"],"sources":["src/services/variation.service.ts","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.css?tag=igl-booking-form&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.css?tag=igl-room-type&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.tsx"],"sourcesContent":["import { Variation } from '@/models/property';\r\nimport locales from '@/stores/locales.store';\r\n\r\nexport default class VariationService {\r\n  /**\r\n   * Formats a variation based on the number of infants and returns a formatted string.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust the variation for.\r\n   * @returns {string} A formatted string describing the variation adjusted for infants.\r\n   */\r\n  public formatVariationBasedOnInfants(params: { baseVariation: Variation; variations: Variation[]; infants: number }): string {\r\n    const variation = this.getVariationBasedOnInfants(params);\r\n    return this.formatVariation(variation, params.infants);\r\n  }\r\n\r\n  /**\r\n   * Calculates the discounted amount for a variation adjusted for the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to consider for adjustments.\r\n   * @returns {number} The discounted amount for the selected variation, or 0 if no discounted amount is available.\r\n   */\r\n  public calculateVariationAmount(params: { baseVariation: Variation; variations: Variation[]; infants: number }): number {\r\n    return this.getVariationBasedOnInfants(params)?.discounted_amount || 0;\r\n  }\r\n\r\n  /**\r\n   * Finds the appropriate variation from a list of variations based on the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust for.\r\n   * @returns {Variation} The matching variation or the base variation if no match is found.\r\n   */\r\n  public getVariationBasedOnInfants({ variations, baseVariation, infants }: { baseVariation: Variation; variations: Variation[]; infants: number }): Variation {\r\n    const { adult_nbr, child_nbr } = baseVariation;\r\n    return variations.find(v => v.adult_nbr === adult_nbr && v.child_nbr === Math.max(0, child_nbr - Math.max(0, infants))) || baseVariation;\r\n  }\r\n\r\n  /**\r\n   * Formats a variation object into a human-readable string, adjusted for the number of infants.\r\n   * @param {Variation} variation - The variation object to format.\r\n   * @param {number} infant_nbr - The number of infants to adjust for.\r\n   * @returns {string} A formatted string representing the variation.\r\n   * @private\r\n   */\r\n  private formatVariation({ child_nbr, adult_nbr }: Variation, infant_nbr: number): string {\r\n    const adultNumber = Number(adult_nbr) || 0;\r\n    const infantNumber = Math.max(Number(infant_nbr) || 0, 0);\r\n    const adultLabel = adultNumber > 1 ? locales.entries.Lcz_Adults.toLowerCase() : locales.entries.Lcz_Adult.toLowerCase();\r\n    const childLabel = child_nbr > 1 ? locales.entries.Lcz_Children.toLowerCase() : locales.entries.Lcz_Child.toLowerCase();\r\n    const infantLabel = infantNumber > 1 ? (locales.entries['Lcz_Infants'] ?? 'infants')?.toLowerCase() : (locales?.entries['Lcz_Infant'] ?? 'infant')?.toLowerCase();\r\n    const parts = [`${adultNumber} ${adultLabel}`, child_nbr ? `${child_nbr} ${childLabel}` : '', infantNumber ? `${infantNumber} ${infantLabel}` : ''];\r\n    return parts.filter(Boolean).join('&nbsp&nbsp&nbsp&nbsp');\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.rate_amount {\r\n  display: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  gap: 0.5rem;\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.booking-roomtype-title {\r\n  font-size: 1.25rem;\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-details-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-rateplan {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-rateplan-name {\r\n  font-weight: bold;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-tooltip {\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-variation {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-price {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-details-container {\r\n  display: none;\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .booking-header {\r\n    justify-content: flex-start;\r\n  }\r\n  .booking-footer,\r\n  .booking-price {\r\n    display: none;\r\n  }\r\n  .booking-details-container,\r\n  .rate_amount {\r\n    display: inline-flex;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 100%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection, modifyBookingStore, RatePlanGuest } from '@/stores/booking.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { v4 } from 'uuid';\r\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport VariationService from '@/services/variation.service';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() rateplanSelection: IRatePlanSelection;\r\n  @Prop() guestInfo: RatePlanGuest | null;\r\n  @Prop() currency: ICurrency;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() roomIndex: number;\r\n  @Prop() totalNights: number = 1;\r\n  @Prop() baseData: { unit: { id: string; name: string }; roomtypeId: number };\r\n\r\n  @State() isButtonPressed = false;\r\n\r\n  private variationService = new VariationService();\r\n\r\n  componentWillLoad() {\r\n    if (isSingleUnit(this.rateplanSelection.roomtype.id)) {\r\n      const filteredRooms = this.filterRooms();\r\n      if (filteredRooms.length > 0) this.updateGuest({ unit: filteredRooms[0]?.id?.toString() });\r\n    }\r\n  }\r\n\r\n  private updateGuest(params: Partial<RatePlanGuest>) {\r\n    const roomTypeId = this.rateplanSelection.roomtype.id;\r\n    const ratePlanId = this.rateplanSelection.ratePlan.id;\r\n    let prevGuest = [...this.rateplanSelection.guest];\r\n    prevGuest[this.roomIndex] = {\r\n      ...prevGuest[this.roomIndex],\r\n      ...params,\r\n    };\r\n    booking_store.ratePlanSelections = {\r\n      ...booking_store.ratePlanSelections,\r\n      [roomTypeId]: {\r\n        ...booking_store.ratePlanSelections[roomTypeId],\r\n        [ratePlanId]: { ...this.rateplanSelection, guest: [...prevGuest] },\r\n      },\r\n    };\r\n  }\r\n\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, selected_variation } = this.rateplanSelection;\r\n    let selectedVariation = selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      selectedVariation = this.variationService.getVariationBasedOnInfants({\r\n        variations: ratePlan.variations,\r\n        baseVariation: selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => variation.adult_nbr === selectedVariation.adult_nbr && variation.child_nbr === selectedVariation.child_nbr);\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  private getAmount(): number {\r\n    if (this.rateplanSelection.is_amount_modified) {\r\n      return this.rateplanSelection.view_mode === '001' ? this.rateplanSelection.rp_amount : this.rateplanSelection.rp_amount * this.totalNights;\r\n    }\r\n    let variation = this.rateplanSelection.selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      variation = this.variationService.getVariationBasedOnInfants({\r\n        variations: this.rateplanSelection.ratePlan.variations,\r\n        baseVariation: this.rateplanSelection.selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n    return variation.discounted_gross_amount;\r\n  }\r\n\r\n  private filterRooms(): { name: string; id: number }[] {\r\n    const result = [];\r\n    if (!calendar_data.is_frontdesk_enabled) {\r\n      return result;\r\n    }\r\n    this.rateplanSelection.ratePlan?.assignable_units?.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    const filteredGuestsRoom = this.rateplanSelection.guest.filter((_, i) => i !== this.roomIndex).map(r => r.unit);\r\n    const filteredResults = result.filter(r => !filteredGuestsRoom.includes(r.id.toString()));\r\n    return this.bookingType === 'EDIT_BOOKING'\r\n      ? [...filteredResults, this.rateplanSelection.roomtype.id === this.baseData?.roomtypeId ? this.baseData?.unit : null]\r\n          .filter(f => !!f)\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n      : filteredResults;\r\n  }\r\n\r\n  render() {\r\n    const filteredRoomList = this.filterRooms();\r\n    const formattedVariation = this.variationService.formatVariationBasedOnInfants({\r\n      baseVariation: this.rateplanSelection.selected_variation,\r\n      infants: this.guestInfo.infant_nbr,\r\n      variations: this.rateplanSelection.ratePlan.variations,\r\n    });\r\n    return (\r\n      <Host class={'my-2'} data-testid={`room_info_${this.rateplanSelection.ratePlan.id}`}>\r\n        <div class=\"booking-header\">\r\n          {(this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n            <span class=\"booking-roomtype-title\">{this.rateplanSelection.roomtype.name}</span>\r\n          )}\r\n          <div class=\"booking-details-container\">\r\n            <div class=\"booking-rateplan\">\r\n              <p class=\"booking-rateplan-name\">\r\n                {this.rateplanSelection.ratePlan.short_name} {this.rateplanSelection.ratePlan.is_non_refundable && <span class={'non-ref-span'}>Non Refundable</span>}\r\n              </p>\r\n              <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n            </div>\r\n            <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n          </div>\r\n          <p class=\"booking-price\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        <div class=\"booking-footer\">\r\n          <div class=\"booking-rateplan\">\r\n            <p class=\"booking-rateplan-name\">{this.rateplanSelection.ratePlan.short_name}</p>\r\n            <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n          </div>\r\n          <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n        </div>\r\n        <div class=\"d-flex flex-column flex-md-row  p-0 align-items-md-center aplicationInfoContainer\">\r\n          <div class=\"mr-md-1 mb-1 mb-md-0 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"text\"\r\n              data-testid=\"guest_first_name\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.first_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestFirstname'] ?? 'Guest first name'}\r\n              name=\"guestFirstName\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ first_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.first_name}\r\n            />\r\n          </div>\r\n          <div class=\"mr-md-1 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"text\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.last_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestLastname'] ?? 'Guest last name'}\r\n              name=\"guestLastName\"\r\n              data-testid=\"guest_last_name\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ last_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.last_name}\r\n            />\r\n          </div>\r\n          {calendar_data.is_frontdesk_enabled &&\r\n            !isSingleUnit(this.rateplanSelection.roomtype.id) &&\r\n            (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n              <div class=\"mt-1 mt-md-0 d-flex align-items-center flex-fill\">\r\n                <div class=\"mr-md-1 p-0 flex-fill preference-select-container\">\r\n                  <select data-testid=\"unit\" class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.updateGuest({ unit: (event.target as HTMLInputElement).value })}>\r\n                    <option value=\"\" selected={this.guestInfo?.unit === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {filteredRoomList?.map(room => (\r\n                      <option value={room.id} selected={this.guestInfo?.unit === room.id.toString()}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            )}\r\n          {this.rateplanSelection.roomtype.is_bed_configuration_enabled && (\r\n            <div class=\"mt-1 mt-md-0 mr-md-1 flex-fill\">\r\n              <select\r\n                data-testid=\"bed_configuration\"\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                onChange={event => this.updateGuest({ bed_preference: (event.target as HTMLInputElement).value })}\r\n              >\r\n                <option value=\"\" selected={this.guestInfo?.bed_preference === ''}>\r\n                  {locales.entries.Lcz_BedConfiguration}\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestInfo?.bed_preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <p class=\"rate_amount\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        {this.rateplanSelection.selected_variation.child_nbr > 0 && (\r\n          <div style={{ gap: '0.5rem', marginTop: '0.5rem' }} class=\"d-flex  flex-row  p-0 align-items-center aplicationInfoContainer\">\r\n            <p class={'m-0 p-0 text-danger'}>Any of the children below 3 years?</p>\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                style={{ width: 'max-content' }}\r\n                onChange={event => this.updateGuest({ infant_nbr: Number((event.target as HTMLInputElement).value) })}\r\n              >\r\n                <option value=\"\" selected={Number(this.guestInfo?.infant_nbr) === 0}>\r\n                  {locales.entries['No'] || 'No'}\r\n                </option>\r\n                {Array.from({ length: this.rateplanSelection.selected_variation.child_nbr }, (_, i) => i + 1).map(item => (\r\n                  <option value={item} selected={this.guestInfo?.infant_nbr === item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries } from '@/models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    console.log({ fromDate: this.fromDate, toDate: this.toDate });\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"YYYY-MM-DD\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { Booking, Room } from '@/models/booking.dto';\r\nimport { TSourceOption } from '@/models/igl-book-property';\r\nimport VariationService from '@/services/variation.service';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { extras } from '@/utils/utils';\r\nimport moment from 'moment';\r\n\r\nexport class IglBookPropertyService {\r\n  private variationService: VariationService;\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n\r\n  private generateDailyRates(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = new Date(to_date);\r\n    endDate.setDate(endDate.getDate() - 1);\r\n\r\n    let currentDate = new Date(from_date);\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate <= endDate) {\r\n      days.push({\r\n        date: moment(currentDate).format('YYYY-MM-DD'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n\r\n  // private extractFirstNameAndLastName(name: string) {\r\n  //   const names = name.split(' ');\r\n  //   return { first_name: names[0] || null, last_name: names[1] || null };\r\n  // }\r\n\r\n  private getBookedRooms({\r\n    check_in,\r\n    check_out,\r\n    notes,\r\n    identifier,\r\n    override_unit,\r\n    unit,\r\n    auto_check_in,\r\n  }: {\r\n    identifier: string | null;\r\n    check_in: Date;\r\n    check_out: Date;\r\n    override_unit: boolean;\r\n    unit: string;\r\n    notes: string | null;\r\n    auto_check_in: boolean;\r\n  }) {\r\n    const rooms = [];\r\n    const total_days = calculateDaysBetweenDates(moment(check_in).format('YYYY-MM-DD'), moment(check_out).format('YYYY-MM-DD'));\r\n    const calculateAmount = ({ is_amount_modified, selected_variation, view_mode, rp_amount, ratePlan }: IRatePlanSelection, infants: number) => {\r\n      if (is_amount_modified) {\r\n        return view_mode === '002' ? rp_amount : rp_amount / total_days;\r\n      }\r\n      let variation = selected_variation;\r\n      if (infants > 0) {\r\n        if (!this.variationService) {\r\n          this.variationService = new VariationService();\r\n        }\r\n        variation = this.variationService.getVariationBasedOnInfants({ variations: ratePlan.variations, baseVariation: selected_variation, infants });\r\n      }\r\n      return Number(variation.discounted_amount) / total_days;\r\n    };\r\n    for (const roomTypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (let i = 0; i < rateplan.reserved; i++) {\r\n            const { first_name, last_name } = rateplan.guest[i];\r\n            rooms.push({\r\n              identifier,\r\n              roomtype: rateplan.roomtype,\r\n              rateplan: rateplan.ratePlan,\r\n              prepayment_amount_gross: 0,\r\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\r\n              occupancy: {\r\n                adult_nbr: rateplan.selected_variation.adult_nbr,\r\n                children_nbr: rateplan.selected_variation.child_nbr - Math.max(rateplan.guest[i].infant_nbr, 0),\r\n                infant_nbr: rateplan.guest[i].infant_nbr,\r\n              },\r\n              bed_preference: rateplan.guest[i].bed_preference,\r\n              from_date: moment(check_in).format('YYYY-MM-DD'),\r\n              to_date: moment(check_out).format('YYYY-MM-DD'),\r\n              notes,\r\n              check_in: auto_check_in,\r\n              days: this.generateDailyRates(check_in, check_out, calculateAmount(rateplan, rateplan.guest[i].infant_nbr)),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: null,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\r\n    try {\r\n      // Validate context structure\r\n      if (!context || !context.dateRangeData) {\r\n        throw new Error('Invalid context: Missing date range data.');\r\n      }\r\n\r\n      const fromDate = new Date(context.dateRangeData.fromDate);\r\n      const toDate = new Date(context.dateRangeData.toDate);\r\n\r\n      const generateNewRooms = (identifier = null, check_in: boolean = false) => {\r\n        return this.getBookedRooms({\r\n          check_in: fromDate,\r\n          check_out: toDate,\r\n          identifier,\r\n          notes: '',\r\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\r\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\r\n          auto_check_in: check_in,\r\n        });\r\n      };\r\n\r\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\r\n        return {\r\n          assign_units: true,\r\n          is_pms: true,\r\n          is_direct,\r\n          is_in_loyalty_mode,\r\n          promo_key,\r\n          extras,\r\n          booking: {\r\n            ...rest,\r\n            rooms,\r\n          },\r\n          extra_services,\r\n          pickup_info,\r\n        };\r\n      };\r\n\r\n      let newBooking = null;\r\n\r\n      switch (context.defaultData.event_type) {\r\n        case 'EDIT_BOOKING': {\r\n          const { booking, currentRoomType } = context.defaultData;\r\n\r\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\r\n          console.log('currentRoomType', currentRoomType);\r\n          const newRooms = generateNewRooms(currentRoomType.identifier, currentRoomType.in_out?.code === '001');\r\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\r\n          break;\r\n        }\r\n        case 'ADD_ROOM':\r\n        case 'SPLIT_BOOKING': {\r\n          const { booking } = context.defaultData;\r\n          if (!booking) {\r\n            throw new Error('Missing booking');\r\n          }\r\n          console.log(booking);\r\n          const newRooms = generateNewRooms();\r\n          newBooking = modifyBookingDetails(booking, [...booking?.rooms, ...newRooms]);\r\n          break;\r\n        }\r\n        default: {\r\n          const newRooms = generateNewRooms(null, check_in);\r\n          const { bookedByInfoData } = context;\r\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\r\n          newBooking = {\r\n            assign_units: true,\r\n            is_pms: true,\r\n            is_direct: true,\r\n            is_in_loyalty_mode: false,\r\n            promo_key: null,\r\n            extras,\r\n            agent: isAgent ? { id: sourceOption.tag } : null,\r\n            booking: {\r\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\r\n              to_date: moment(toDate).format('YYYY-MM-DD'),\r\n              remark: bookedByInfoData.message || null,\r\n              booking_nbr: '',\r\n              property: {\r\n                id: context.propertyid,\r\n              },\r\n              booked_on: {\r\n                date: moment().format('YYYY-MM-DD'),\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n              },\r\n              source: isAgent ? '' : sourceOption,\r\n              rooms: newRooms,\r\n              currency: context.currency,\r\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\r\n              guest: {\r\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n                first_name: bookedByInfoData.firstName,\r\n                last_name: bookedByInfoData.lastName,\r\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n                city: null,\r\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\r\n                address: '',\r\n                dob: null,\r\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n                cci: bookedByInfoData.cardNumber\r\n                  ? {\r\n                      nbr: bookedByInfoData.cardNumber,\r\n                      holder_name: bookedByInfoData.cardHolderName,\r\n                      expiry_month: bookedByInfoData.expiryMonth,\r\n                      expiry_year: bookedByInfoData.expiryYear,\r\n                    }\r\n                  : null,\r\n              },\r\n            },\r\n            pickup_info: null,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n      return newBooking;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n/* .row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n} */\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '@/utils/utils';\r\nimport { ICountry, IEntries, RoomBlockDetails } from '@/models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore } from '@/stores/booking.store';\r\nimport moment from 'moment';\r\nexport type IHistoryEntry = {\r\n  dates: { checkIn: Date; checkOut: Date };\r\n  adults: number;\r\n  children: number;\r\n};\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countries: ICountry[];\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() bookingHistory: Array<{\r\n    dates: { checkIn: Date; checkOut: Date };\r\n    adults: number;\r\n    children: number;\r\n  }> = [];\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n  private updatedBooking: boolean = false;\r\n  private MAX_HISTORY_LENGTH: number = 2;\r\n  private didReservation: boolean;\r\n  private wasBlockedUnit: boolean;\r\n\r\n  async componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.initializeDefaultDateRange();\r\n\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    // console.log(this.bookingData);\r\n    this.initializeDefaultData();\r\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\r\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\r\n    await this.fetchSetupEntriesAndInitialize();\r\n    this.initializeEventData();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    if (key === 'select' || (key === 'blur' && data !== '')) {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\r\n      this.defaultData = { ...this.defaultData, booking: res };\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  // @Listen('adultChild')\r\n  // handleAdultChildChange(event: CustomEvent) {\r\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n  //   }\r\n  //   const { adult, child } = event.detail;\r\n  //   this.adultChildCount = { ...event.detail };\r\n  //   this.updateBookingHistory({ adults: adult, children: child });\r\n  // }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    const { adult, child } = event.detail;\r\n    this.adultChildCount = { ...event.detail };\r\n\r\n    // Update the booking history\r\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\r\n  }\r\n\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.updateBookingHistory({\r\n      dates: {\r\n        checkIn: new Date(this.dateRangeData.fromDate),\r\n        checkOut: new Date(new Date(opt.data.toDate)),\r\n      },\r\n    });\r\n    console.log('date changed', opt);\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.checkBookingAvailability();\r\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (calculateTotalRooms() > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else if (this.defaultData?.roomsInfo.length === 0) {\r\n          this.animateIrButton.emit('check_availability');\r\n          break;\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.checkBookingAvailability();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\r\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\r\n\r\n    const newEntry: IHistoryEntry = {\r\n      dates: {\r\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\r\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\r\n      },\r\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\r\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\r\n    };\r\n\r\n    // Update the booking history\r\n    this.bookingHistory.push(newEntry);\r\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\r\n      this.bookingHistory.shift();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    }\r\n  }\r\n\r\n  private initializeDefaultDateRange() {\r\n    this.defaultDateRange = {\r\n      from_date: this.bookingData.FROM_DATE,\r\n      to_date: this.bookingData.TO_DATE,\r\n    };\r\n  }\r\n\r\n  private initializeDefaultData() {\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n  }\r\n\r\n  private async fetchSetupEntriesAndInitialize() {\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  private initializeEventData() {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.initializeEditBookingData();\r\n    }\r\n\r\n    if (!this.isEventType('BAR_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n\r\n    this.initializePage();\r\n  }\r\n\r\n  private initializeEditBookingData() {\r\n    this.adultChildCount = {\r\n      adult: this.defaultData.ADULTS_COUNT,\r\n      child: this.defaultData.CHILDREN_COUNT,\r\n    };\r\n\r\n    this.initialRoomIds = {\r\n      roomName: this.defaultData.roomName,\r\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n      roomId: this.defaultData.PR_ID,\r\n      roomTypeId: this.defaultData.RATE_TYPE,\r\n    };\r\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n    console.log(GUEST);\r\n    modifyBookingStore('guest', {\r\n      bed_preference: currentRoomType.bed_preference?.toString(),\r\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n      first_name: GUEST.first_name ?? '',\r\n      last_name: GUEST.last_name ?? '',\r\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n      unit: (currentRoomType.unit as any)?.id?.toString(),\r\n    });\r\n    this.checkBookingAvailability();\r\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n  }\r\n\r\n  private initializePage() {\r\n    switch (this.defaultData.event_type) {\r\n      case 'SPLIT_BOOKING':\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n        break;\r\n      case 'BLOCK_DATES':\r\n        this.page = 'page_block_date';\r\n        break;\r\n      default:\r\n        this.page = 'page_one';\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  private isGuestDataIncomplete() {\r\n    for (const roomtypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (const guest of rateplan.guest) {\r\n            if (guest.first_name === '' || guest.last_name === '') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n    );\r\n  }\r\n\r\n  private setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  private setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  private async checkBookingAvailability() {\r\n    resetBookingStore();\r\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\r\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\r\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n        room_type_ids_to_update,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\r\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\r\n        this.updateBooking();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing booking availability:', error);\r\n    }\r\n  }\r\n\r\n  private updateBooking() {\r\n    try {\r\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n      const roomtypeId = currentRoomType.roomtype.id;\r\n      const rateplanId = currentRoomType.rateplan.id;\r\n      console.log({ GUEST });\r\n      const guest = {\r\n        bed_preference: currentRoomType.bed_preference?.toString(),\r\n        infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n        last_name: GUEST.last_name,\r\n        first_name: GUEST.first_name,\r\n        unit: (currentRoomType.unit as any)?.id?.toString(),\r\n        roomtype_id: currentRoomType.roomtype.id,\r\n      };\r\n      modifyBookingStore('guest', guest);\r\n      reserveRooms({\r\n        roomTypeId: roomtypeId,\r\n        ratePlanId: rateplanId,\r\n        rooms: 1,\r\n        guest: [guest],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private async checkAndBlockDate() {\r\n    try {\r\n      const { block_exposed_unit_props } = this.defaultData;\r\n      await this.bookingService.getBookingAvailability({\r\n        from_date: block_exposed_unit_props.from_date,\r\n        to_date: block_exposed_unit_props.to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: {\r\n          adult: 2,\r\n          child: 0,\r\n        },\r\n        language: this.language,\r\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\r\n        currency: this.currency,\r\n      });\r\n      const isAvailable = booking_store.roomTypes.every(rt => rt.is_available_to_book);\r\n      if (isAvailable) {\r\n        await this.handleBlockDate(false);\r\n      } else {\r\n        console.log('Blocked date is unavailable. Continuing...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking and blocking date:', error);\r\n    }\r\n  }\r\n  private async closeWindow() {\r\n    resetBookingStore();\r\n    this.closeBookingWindow.emit();\r\n\r\n    if (this.wasBlockedUnit && !this.didReservation) {\r\n      await this.checkAndBlockDate();\r\n    }\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private isEventType(key: TEventType) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n\r\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  private renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  private gotoPage(gotoPage: string) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  private getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.defaultData.FROM_DATE}\r\n          toDate={this.defaultData.TO_DATE}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n\r\n  private async handleBlockDate(auto_close = true) {\r\n    const props = this.wasBlockedUnit\r\n      ? this.defaultData.block_exposed_unit_props\r\n      : (() => {\r\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n          return {\r\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n            pr_id: this.defaultData.PR_ID.toString(),\r\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n            ...releaseData,\r\n          };\r\n        })();\r\n    await this.bookingService.blockUnit(props);\r\n    // const blockedUnit = await transformNewBLockedRooms(result);\r\n    // this.blockedCreated.emit(blockedUnit);\r\n    if (auto_close) this.closeWindow();\r\n  }\r\n\r\n  private async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else if (this.isButtonDisabled()) {\r\n      this.isLoading = '';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      this.didReservation = true;\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\r\n        context: this,\r\n        sourceOption: this.sourceOption,\r\n        check_in,\r\n      });\r\n      await this.bookingService.doReservation(serviceParams);\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.error('Error booking user:', error);\r\n    } finally {\r\n      // this.isLoading = null;\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  private setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  private resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n\r\n  private getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host data-testid=\"book_property_sheet\">\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-booking-form\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countries={this.countries}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-booking-form>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { TIcons } from '@/components/ui/ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false, icon_name?: TIcons) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button> */}\r\n        <ir-button\r\n          btn_color={type === 'cancel' ? 'secondary' : 'primary'}\r\n          text={label}\r\n          btn_disabled={disabled}\r\n          onClickHandler={() => {\r\n            this.buttonClicked.emit({ key: type });\r\n          }}\r\n          icon_name={icon_name}\r\n          iconPosition=\"right\"\r\n          style={{ '--icon-size': '1rem' }}\r\n          icon_style={{ paddingBottom: '1.9px' }}\r\n        ></ir-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, isRequestPending('/Get_Exposed_Booking_Availability'), 'angles_right')}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, false, 'angles_right')}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\n\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    modifyBookingStore('bookingAvailabilityParams', {\r\n      from_date: this.bookingDataDefaultDateRange.fromDate,\r\n      to_date: this.bookingDataDefaultDateRange.toDate,\r\n      adult_nbr: obj?.['adult'] ?? 0,\r\n      child_nbr: obj?.['child'] ?? 0,\r\n    });\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group  my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group ml-0\">\r\n              <ir-select\r\n                testId=\"adult_number\"\r\n                class={'m-0'}\r\n                selectedValue={this.adultChildCount?.adult?.toString()}\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1 p-0\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  selectedValue={this.adultChildCount?.child?.toString()}\r\n                  testId=\"child_number\"\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Check_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHandler={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} 0 - ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0 mr-1 \">\r\n            <igl-date-range\r\n              data-testid=\"date_picker\"\r\n              variant=\"booking\"\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport moment from 'moment';\r\nimport { ICountry } from '@/models/IBooking';\r\n@Component({\r\n  tag: 'igl-booking-form',\r\n  styleUrl: 'igl-booking-form.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingForm {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countries: ICountry[];\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const showBookAndCheckin = calendar_data.checkin_enabled && moment(new Date(this.dateRangeData?.fromDate)).isSame(new Date(), 'day');\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={new Date(this.dateRangeData.fromDate)}\r\n            to_date={new Date(this.dateRangeData.toDate)}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {Object.values(booking_store.ratePlanSelections).map(val =>\r\n          Object.values(val).map(ratePlan => {\r\n            const rp = ratePlan as IRatePlanSelection;\r\n            if (rp.reserved === 0) {\r\n              return null;\r\n            }\r\n\r\n            return [...new Array(rp.reserved)].map((_, i) => (\r\n              <igl-application-info\r\n                totalNights={Number(this.dateRangeData.dateDifference)}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                currency={this.currency}\r\n                guestInfo={rp.guest ? rp.guest[i] : null}\r\n                bookingType={this.bookingData.event_type}\r\n                rateplanSelection={rp}\r\n                key={`${rp.ratePlan.id}_${i}`}\r\n                roomIndex={i}\r\n                baseData={\r\n                  this.bookingData.event_type === 'EDIT_BOOKING'\r\n                    ? {\r\n                        roomtypeId: this.bookingData.currentRoomType.roomtype.id,\r\n                        unit: this.bookingData.currentRoomType.unit,\r\n                      }\r\n                    : undefined\r\n                }\r\n              ></igl-application-info>\r\n            ));\r\n          }),\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countries={this.countries}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event => {\r\n              this.handleEventData(event, 'propertyBookedBy', 0);\r\n            }}\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <ir-button\r\n                icon_name=\"angles_left\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n                text={locales.entries.Lcz_Back}\r\n                style={{ '--icon-size': '1rem' }}\r\n                icon_style={{ paddingBottom: '1.9px' }}\r\n              ></ir-button>\r\n            </div>\r\n            <div class={`mt-1 mt-md-0 flex-fill ${showBookAndCheckin ? 'mr-md-1' : ''}`}>\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n            </div>\r\n            {showBookAndCheckin && (\r\n              <div class=\"mt-1 mt-md-0 flex-fill\">\r\n                <ir-button\r\n                  isLoading={this.isLoading === 'bookAndCheckIn'}\r\n                  btn_styles=\"full-width align-items-center justify-content-center\"\r\n                  onClickHandler={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                  text={locales.entries.Lcz_BookAndChekcIn}\r\n                ></ir-button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\nimport booking_store from '@/stores/booking.store';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Check_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {booking_store.roomTypes?.map(roomType => (\r\n                <igl-room-type\r\n                  initialRoomIds={this.initialRoomIds}\r\n                  isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                  key={`room-type-${roomType.id}`}\r\n                  currency={this.currency}\r\n                  ratePricingMode={this.ratePricingMode}\r\n                  dateDifference={this.dateRangeData.dateDifference}\r\n                  bookingType={this.bookingData.event_type}\r\n                  roomType={roomType}\r\n                  class=\"mt-2 mb-1 p-0\"\r\n                  data-testid={`room_type_${roomType.id}`}\r\n                  id={roomType.id.toString()}\r\n                  roomInfoId={this.selectedRooms.has(`c_${roomType.id}`) ? roomType.id : null}\r\n                  onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                ></igl-room-type>\r\n              ))}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n.row.sc-igl-booking-form {\r\n  padding: 0 !important;\r\n}\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries, ICountry } from '@/models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\nimport booking_store, { BookingStore, modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countries: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  private handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n  private handleCountryChange(value) {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      isdCode: value,\r\n      countryId: value,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  private handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile_without_prefix,\r\n            countryId: res.country_id,\r\n            isdCode: res?.country_phone_prefix ?? res.isdCode.toString(),\r\n          };\r\n          console.log(this.bookedByData);\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  private updateGuest(props: Partial<BookingStore['checkout_guest']>) {\r\n    modifyBookingStore('checkout_guest', { ...(booking_store.checkout_guest ?? {}), ...props });\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log(key, data);\r\n    if (key === 'blur') {\r\n      if (z.string().email().safeParse(data).success) {\r\n        this.bookedByData.email = data;\r\n        this.checkUser();\r\n      } else if (this.bookedByData.email !== '' && data == '') {\r\n        this.bookedByData.email = '';\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n    if (key === 'select') {\r\n      this.bookedByData.email = data.email;\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        id: data.id,\r\n        firstName: data.first_name,\r\n        lastName: data.last_name,\r\n        contactNumber: data.mobile_without_prefix,\r\n        countryId: data.country_id,\r\n        isdCode: data['country_phone_prefix'] ?? data?.country_id,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n\r\n    // console.log('data', data, 'key', key);\r\n    // switch (key) {\r\n    //   case 'blur':\r\n    //     if (data !== '') {\r\n    //       this.bookedByData.email = data;\r\n    //       this.checkUser();\r\n    //     } else {\r\n    //       let prevBookedByData = { ...this.bookedByData };\r\n    //       prevBookedByData = { ...prevBookedByData, email: '' };\r\n    //       this.bookedByData = { ...prevBookedByData };\r\n    //       this.dataUpdateEvent.emit({\r\n    //         key: 'bookedByInfoUpdated',\r\n    //         data: { ...this.bookedByData },\r\n    //       });\r\n    //     }\r\n\r\n    //     break;\r\n    //   case 'select':\r\n    //     this.bookedByData.email = data.email;\r\n    //     this.bookedByData = {\r\n    //       ...this.bookedByData,\r\n    //       id: data.id,\r\n    //       firstName: data.first_name,\r\n    //       lastName: data.last_name,\r\n    //       contactNumber: data.mobile,\r\n    //       countryId: data.country_id,\r\n    //       isdCode: data.country_id.toString(),\r\n    //     };\r\n    //     this.dataUpdateEvent.emit({\r\n    //       key: 'bookedByInfoUpdated',\r\n    //       data: this.bookedByData,\r\n    //     });\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                testId={'main_guest_email'}\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"text\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    data-testid=\"main_guest_first_name\"\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => {\r\n                      this.updateGuest({ first_name: (event.target as HTMLInputElement).value });\r\n                      this.handleDataChange('firstName', event);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    data-testid=\"main_guest_last_name\"\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                {/* <div class=\"p-0 m-0  controlContainer flex-fill\"> */}\r\n                <ir-country-picker\r\n                  testId=\"main_guest_country\"\r\n                  class=\"flex-grow-1 m-0\"\r\n                  onCountryChange={e => this.handleCountryChange(e.detail.id)}\r\n                  countries={this.countries}\r\n                  country={this.countries.find(c => c.id === this.bookedByData.countryId)}\r\n                ></ir-country-picker>\r\n                {/* <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countries.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select> */}\r\n                {/* </div> */}\r\n              </div>\r\n\r\n              {/* <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countries.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div class=\"form-group p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0 controlContainer flex-fill\">\r\n                  <ir-phone-input\r\n                    testId=\"main_guest_phone\"\r\n                    language={this.language}\r\n                    // label={locales.entries.Lcz_MobilePhone}\r\n                    value={this.bookedByData.contactNumber}\r\n                    phone_prefix={this.bookedByData.isdCode}\r\n                    default_country={this.bookedByData.countryId}\r\n                    onTextChange={e => {\r\n                      this.handleDataChange('isdCode', { target: { value: e.detail.phone_prefix } });\r\n                      this.handleDataChange('contactNumber', { target: { value: e.detail.mobile } });\r\n                    }}\r\n                  ></ir-phone-input>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    data-testid=\"arrival_time\"\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    data-testid=\"note\"\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.rateplan-name-container {\r\n  margin-bottom: 0.5rem !important;\r\n}\r\n.rateplan-container {\r\n  margin-top: 0.5rem;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n    margin-top: 0;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 50px;\r\n  }\r\n  .rateplan-name-container {\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .price-amount {\r\n    max-width: 150px !important;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { RatePlan, Variation } from '@/models/property';\r\nimport booking_store, { IRatePlanSelection, reserveRooms, updateRoomParams } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-rate-plan',\r\n  styleUrl: 'igl-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglRatePlan {\r\n  // Used Props with type annotations\r\n  @Prop() ratePlan: RatePlan;\r\n  @Prop() roomTypeId: number;\r\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\r\n  @Prop() currency!: { symbol: string };\r\n  @Prop() shouldBeDisabled!: boolean;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() visibleInventory!: IRatePlanSelection;\r\n\r\n  @Event() buttonClicked!: EventEmitter<{ [key: string]: any }>;\r\n\r\n  // Determine if the form inputs should be disabled\r\n  private disableForm(): boolean {\r\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\r\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\r\n      return false;\r\n    }\r\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\r\n  }\r\n\r\n  // Update the rate plan selection in the booking store\r\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\r\n    const { roomTypeId, ratePlan } = this;\r\n    const currentSelections = booking_store.ratePlanSelections;\r\n\r\n    booking_store.ratePlanSelections = {\r\n      ...currentSelections,\r\n      [roomTypeId]: {\r\n        ...currentSelections[roomTypeId],\r\n        [ratePlan.id]: {\r\n          ...currentSelections[roomTypeId][ratePlan.id],\r\n          ...props,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // Handle changes to select inputs\r\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\r\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\r\n    if (key === 'adult_child_offering') {\r\n      this.handleVariationChange(value);\r\n    } else if (key === 'rate') {\r\n      this.updateRateplanSelection({ view_mode: value as any });\r\n    } else if (key === 'totalRooms') {\r\n      reserveRooms({\r\n        roomTypeId: this.roomTypeId,\r\n        ratePlanId: this.ratePlan.id,\r\n        rooms: Number(value),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Navigate to the next page for booking\r\n  private bookProperty(): void {\r\n    if (this.bookingType === 'BAR_BOOKING') {\r\n      this.resetReserved();\r\n    }\r\n    this.reserveRoom();\r\n    this.buttonClicked.emit({ key: 'next' });\r\n  }\r\n\r\n  private reserveRoom() {\r\n    reserveRooms({\r\n      roomTypeId: this.roomTypeId,\r\n      ratePlanId: this.ratePlan.id,\r\n      rooms: 1,\r\n      guest: [\r\n        {\r\n          last_name: booking_store.guest?.last_name,\r\n          first_name: booking_store.guest?.first_name,\r\n          unit: this.roomTypeId === booking_store.guest?.roomtype_id ? booking_store.guest?.unit : null,\r\n          bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest?.bed_preference : null,\r\n          infant_nbr: this.visibleInventory.selected_variation.child_nbr > 0 ? booking_store.guest.infant_nbr : null,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n  // Render the rate amount\r\n  private renderRate(): string {\r\n    const { visibleInventory } = this;\r\n    if (!visibleInventory) return '';\r\n    if (visibleInventory.is_amount_modified) {\r\n      return visibleInventory.rp_amount.toString();\r\n    }\r\n    const { selected_variation, view_mode } = visibleInventory;\r\n    const amount = view_mode === '001' ? selected_variation?.discounted_amount : selected_variation?.amount_per_night_gross;\r\n    return amount?.toString() || '';\r\n  }\r\n\r\n  // Format variation for display\r\n  private formatVariation(variation: Variation): string {\r\n    if (!variation) return '';\r\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\r\n    const children =\r\n      variation.child_nbr > 0\r\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\r\n        : '';\r\n    return children ? `${adults} ${children}` : adults;\r\n  }\r\n\r\n  // Get tooltip messages for the rate plan\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, visibleInventory } = this;\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  // Handle variation change when a different option is selected\r\n  private async handleVariationChange(value: string): Promise<void> {\r\n    const { ratePlan, roomTypeId } = this;\r\n    const variations = ratePlan.variations || [];\r\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    updateRoomParams({\r\n      params: { selected_variation: selectedVariation },\r\n      ratePlanId: ratePlan.id,\r\n      roomTypeId,\r\n    });\r\n  }\r\n\r\n  // Reset reserved rooms in the booking store\r\n  private resetReserved(): void {\r\n    const updatedSelections = Object.entries(booking_store.ratePlanSelections).reduce((acc, [roomTypeId, ratePlans]) => {\r\n      acc[roomTypeId] = Object.entries(ratePlans).reduce((rpAcc, [ratePlanId, ratePlan]) => {\r\n        rpAcc[ratePlanId] = { ...ratePlan, reserved: 0 };\r\n        return rpAcc;\r\n      }, {} as any);\r\n      return acc;\r\n    }, {} as any);\r\n    booking_store.ratePlanSelections = updatedSelections;\r\n  }\r\n\r\n  render() {\r\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\r\n    const isAvailableToBook = ratePlan.is_available_to_book;\r\n    const disableForm = this.disableForm();\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\r\n    // if (!this.visibleInventory) {\r\n    //   return null;\r\n    // }\r\n    return (\r\n      <Host data-testid={`rp-${this.ratePlan.id}`}>\r\n        <div\r\n          class={`d-flex mt-1  p-0 ${\r\n            isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'\r\n          }`}\r\n        >\r\n          <div data-testid={'rp_name'} class=\"rateplan-name-container m-0 p-0  d-flex align-items-center\" style={{ gap: '0.5rem' }}>\r\n            {bookingType === 'BAR_BOOKING' ? (\r\n              <p class=\"m-0 p-0\">\r\n                {/* <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span> */}\r\n                <span>\r\n                  {ratePlan.name.split('/')[1]} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <span>\r\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n              </span>\r\n            )}\r\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\r\n          </div>\r\n\r\n          {isAvailableToBook ? (\r\n            <div class=\"d-md-flex m-md-0  justify-content-md-end align-items-md-center flex-fill rateplan-container\">\r\n              <div class=\"flex-fill max-w-300 flex-grow-1\">\r\n                <fieldset class=\"position-relative flex-grow-1 w-100\">\r\n                  <select\r\n                    disabled={disableForm}\r\n                    data-testid=\"adult-child-offering\"\r\n                    class=\"form-control input-sm flex-grow-1 w-100\"\r\n                    id={uuidv4()}\r\n                    onChange={evt => this.handleDataChange('adult_child_offering', evt)}\r\n                  >\r\n                    {formattedVariations?.map(variation => (\r\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\r\n                        {variation}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\r\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0 flex-grow-1\">\r\n                  <ir-price-input\r\n                    testId={'amount_input'}\r\n                    disabled={disableForm}\r\n                    onTextChange={e =>\r\n                      this.updateRateplanSelection({\r\n                        is_amount_modified: true,\r\n                        rp_amount: Number(e.detail),\r\n                      })\r\n                    }\r\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\r\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\r\n                    class=\"ir-br-input-none price-amount w-100 flex-grow-1\"\r\n                    currency={currency.symbol}\r\n                    value={this.renderRate()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                  ></ir-price-input>\r\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\r\n                    <select\r\n                      data-testid={'nigh_stay_select'}\r\n                      disabled={disableForm}\r\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\r\n                      id={uuidv4()}\r\n                      onChange={evt =>\r\n                        this.updateRateplanSelection({\r\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\r\n                        })\r\n                      }\r\n                    >\r\n                      {ratePricingMode.map(data => (\r\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\r\n                          {data.CODE_VALUE_EN}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\r\n                  <div class=\"flex-fill mt-0 ml-1 m-0 mt-md-0 p-0\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <select\r\n                        data-testid={'inventory_select'}\r\n                        disabled={visibleInventory.visibleInventory === 0}\r\n                        class=\"form-control input-sm\"\r\n                        id={uuidv4()}\r\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      >\r\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\r\n                          <option value={i} selected={visibleInventory.reserved === i}>\r\n                            {i}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </fieldset>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {bookingType === 'EDIT_BOOKING' && (\r\n                <Fragment>\r\n                  <div class=\"m-0 p-0 ml-md-1 mt-md-0 d-none d-md-block\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <input\r\n                        data-testid={'inventory_radio'}\r\n                        disabled={disableForm}\r\n                        type=\"radio\"\r\n                        name=\"ratePlanGroup\"\r\n                        value=\"1\"\r\n                        onChange={() => {\r\n                          this.resetReserved();\r\n                          this.reserveRoom();\r\n                        }}\r\n                        checked={visibleInventory.reserved === 1}\r\n                      />\r\n                    </fieldset>\r\n                  </div>\r\n                  <button\r\n                    data-testid=\"book_property\"\r\n                    disabled={disableForm}\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\r\n                    onClick={() => {\r\n                      this.resetReserved();\r\n                      this.reserveRoom();\r\n                      this.bookProperty();\r\n                    }}\r\n                  >\r\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n\r\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\r\n                <button\r\n                  data-testid=\"book\"\r\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-md-0 btn-sm ml-md-1 mt-1\"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {locales.entries.Lcz_Book}\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { RoomType } from '@/models/property';\r\nimport { getVisibleInventory } from '@/stores/booking.store';\r\nimport { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-room-type',\r\n  styleUrl: 'igl-room-type.css',\r\n  scoped: true,\r\n})\r\nexport class IglRoomType {\r\n  @Prop() roomType: RoomType;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @Prop() initialRoomIds: any;\r\n  @Prop() isBookDisabled: boolean;\r\n\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @State() roomsDistributions: number[] = [];\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomType.rateplans?.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomType.name}</div>}\r\n        {this.roomType.rateplans?.map(ratePlan => {\r\n          if (!!ratePlan.variations) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomType.id;\r\n            // let roomId = -1;\r\n            // if (shouldBeDisabled && this.initialRoomIds) {\r\n            //   roomId = this.initialRoomIds.roomId;\r\n            // }\r\n            const visibleInventory = getVisibleInventory(this.roomType.id, ratePlan.id);\r\n            return (\r\n              <igl-rate-plan\r\n                // is_bed_configuration_enabled={this.roomType.is_bed_configuration_enabled}\r\n                // index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                visibleInventory={visibleInventory}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                // dateDifference={this.dateDifference}\r\n                ratePlan={ratePlan}\r\n                roomTypeId={this.roomType.id}\r\n                // totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                // physicalrooms={this.roomType.physicalrooms}\r\n                // defaultRoomId={roomId}\r\n              ></igl-rate-plan>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}