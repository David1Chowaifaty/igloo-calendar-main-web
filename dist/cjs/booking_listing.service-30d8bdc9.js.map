{"file":"booking_listing.service-30d8bdc9.js","mappings":"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","names":["z","moment","createStore","axios","isPrivilegedUser","extras"],"sources":["src/stores/booking_listing.store.ts","src/services/booking_listing.service.ts"],"sourcesContent":["import { IExposedBookingsCriteria } from '@/models/IrBookingListing';\nimport { Booking } from '@/models/booking.dto';\nimport { createStore } from '@stencil/store';\nimport moment from 'moment';\nimport { z } from 'zod';\n\nexport interface IBookingListingStore extends IExposedBookingsCriteria {\n  token: string;\n  userSelection: ExposedBookingsParams;\n  bookings: Booking[];\n  download_url: string | null;\n  rowCount: number;\n  balance_filter: { name: string; value: string }[];\n}\nconst ymdDate = z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, 'Expected date in YYYY-MM-DD format');\nexport const ExposedBookingsParamsSchema = z.object({\n  channel: z.string(),\n\n  // These are null in your initialState, so allow nulls\n  property_id: z.number().int().nullable(),\n  balance_filter: z.string().nullable(),\n  filter_type: z.union([z.number(), z.string()]).nullable(),\n\n  from: ymdDate,\n  to: ymdDate,\n\n  name: z.string(),\n  book_nbr: z.string(),\n  booking_status: z.string(),\n  userTypeCode: z.number().optional(),\n\n  // In the interface these were literal 0/false, but you treat them like values.\n  affiliate_id: z.number().int().default(0),\n  is_mpo_managed: z.boolean().default(false),\n  is_mpo_used: z.boolean().default(false),\n  is_for_mobile: z.boolean().default(false),\n  is_combined_view: z.boolean().default(false),\n\n  start_row: z.number().int(),\n  end_row: z.number().int(),\n  total_count: z.number().int(),\n\n  is_to_export: z.boolean(),\n\n  property_ids: z.array(z.number().int()).optional(),\n});\n\nexport type ExposedBookingsParams = z.infer<typeof ExposedBookingsParamsSchema>;\n\nconst initialState: IBookingListingStore = {\n  channels: [],\n  settlement_methods: [],\n  statuses: [],\n  types: [],\n  token: '',\n  rowCount: 10,\n  bookings: [],\n  balance_filter: [],\n  userSelection: {\n    from: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    to: moment().format('YYYY-MM-DD'),\n    channel: '',\n    balance_filter: null,\n    property_id: null,\n    start_row: 0,\n    end_row: 20,\n    total_count: 0,\n    filter_type: null,\n    name: '',\n    book_nbr: '',\n    booking_status: '',\n    affiliate_id: 0,\n    is_mpo_managed: false,\n    is_mpo_used: false,\n    is_for_mobile: false,\n    is_combined_view: false,\n    is_to_export: false,\n  },\n  download_url: null,\n};\n\nexport const { state: booking_listing, onChange: onBookingListingChange } = createStore<IBookingListingStore>(initialState);\nexport function initializeUserSelection() {\n  //booking_listing.channels[0].name\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    channel: '',\n    booking_status: booking_listing.statuses[0].code,\n    filter_type: booking_listing.types[0].id,\n    book_nbr: '',\n    name: '',\n    from: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    to: moment().format('YYYY-MM-DD'),\n    start_row: 0,\n    end_row: booking_listing.rowCount,\n    balance_filter: booking_listing.balance_filter[0].value,\n  };\n}\nexport function updateUserSelections(params: Partial<ExposedBookingsParams>) {\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    ...params,\n  };\n}\nexport function updateUserSelection(key: keyof ExposedBookingsParams, value: any) {\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    [key]: value,\n  };\n}\nexport default booking_listing;\n","import booking_listing, { ExposedBookingsParams, initializeUserSelection } from '@/stores/booking_listing.store';\nimport { extras, isPrivilegedUser } from '@/utils/utils';\nimport axios from 'axios';\n\nexport class BookingListingService {\n  public async getExposedBookingsCriteria(property_id: number) {\n    const { data } = await axios.post(`/Get_Exposed_Bookings_Criteria`, {\n      property_id,\n    });\n    const result = data.My_Result;\n    booking_listing.channels = result.channels;\n    booking_listing.settlement_methods = result.settlement_methods;\n    booking_listing.statuses = result.statuses;\n    booking_listing.types = result.types;\n    booking_listing.balance_filter = result.balance_filter;\n    initializeUserSelection();\n  }\n\n  public async getExposedBookings(params: ExposedBookingsParams) {\n    const { property_id, userTypeCode, channel, property_ids, ...rest } = params;\n    const havePrivilege = isPrivilegedUser(userTypeCode);\n    const { data } = await axios.post(`/Get_Exposed_Bookings`, {\n      ...rest,\n      extras,\n      property_id: havePrivilege ? undefined : property_id,\n      property_ids: havePrivilege ? property_ids : null,\n      channel: havePrivilege ? '' : channel,\n    });\n    const result = data.My_Result;\n    const header = data.My_Params_Get_Exposed_Bookings;\n    booking_listing.bookings = [...result];\n    booking_listing.userSelection = {\n      ...booking_listing.userSelection,\n      total_count: header.total_count,\n    };\n    booking_listing.download_url = header.exported_data_url;\n  }\n  public async removeExposedBooking(booking_nbr: string, is_to_revover: boolean) {\n    await axios.post(`/Remove_Exposed_Booking`, {\n      booking_nbr,\n      is_to_revover,\n    });\n  }\n}\n"],"version":3}