{"file":"ir-icon.ir-title.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,SAAS,GAAG,iKAAiK,CAAC;AACpL,qBAAe,SAAS;;MCMX,MAAM;IALnB;;;QAMU,SAAI,GAAG,UAAU,CAAC;QAClB,SAAI,GAAkC,QAAQ,CAAC;KAWxD;IAPC,MAAM;QACJ,QACEA,qEAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAC,aAAa,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IACtFA,mEAAM,IAAI,EAAC,MAAM,GAAQ,CAClB,EACT;KACH;;;;ACnBH,MAAM,UAAU,GAAG,qqBAAqqB,CAAC;AACzrB,sBAAe,UAAU;;MCMZ,OAAO;IALpB;;;QAQ2B,mBAAc,GAA0B,SAAS,CAAC;QAClD,mBAAc,GAcjB,OAAO,CAAC;KAqC/B;IAjCC,gBAAgB;QACd,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;KACpD;IAED,0BAA0B,CAAC,QAAgB,EAAE,QAAgB;QAC3D,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,cAAc,GAAG,QAAQ,CAAC;SACzC;KACF;IACD,MAAM;QACJ,QACEA,QAACC,UAAI,uDACHD,iEAAI,KAAK,EAAC,yCAAyC,IAAE,IAAI,CAAC,KAAK,CAAM,EACpE,IAAI,CAAC,cAAc,KAAK,SAAS,KAChCA,sEACE,KAAK,EAAE,OAAO,EACd,kBAAkB,EAAE;gBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9B,IAEDA,kEAAK,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,aAAa,EAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,IAC7FA,mEAAM,CAAC,EAAC,yRAAyR,GAAG,CAChS,CACE,CACX,EACA,IAAI,CAAC,cAAc,KAAK,SAAS,KAChCA,kEAAK,KAAK,EAAE,YAAY,IACtBA,mEAAM,IAAI,EAAC,YAAY,GAAQ,CAC3B,CACP,CACI,EACP;KACH;;;;;;;;;;;","names":["h","Host"],"sources":["src/components/ui/ir-icon/ir-icon.css?tag=ir-icon&encapsulation=scoped","src/components/ui/ir-icon/ir-icon.tsx","src/components/ir-title/ir-title.css?tag=ir-title&encapsulation=scoped","src/components/ir-title/ir-title.tsx"],"sourcesContent":[":host {\n  margin: 0;\n  padding: 0;\n}\n.icon-button {\n  all: unset;\n  margin: 0;\n  padding: 0;\n  color: #6b6f82;\n}\n.icon-button:hover {\n  cursor: pointer;\n  color: #104064;\n}\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ir-icon',\n  styleUrl: 'ir-icon.css',\n  scoped: true,\n})\nexport class IrIcon {\n  @Prop() icon = 'ft-check';\n  @Prop() type: 'button' | 'submit' | 'reset' = 'button';\n\n  @Event({ bubbles: true, composed: true }) iconClickHandler: EventEmitter;\n\n  render() {\n    return (\n      <button type={this.type} class=\"icon-button\" onClick={() => this.iconClickHandler.emit()}>\n        <slot name=\"icon\"></slot>\n      </button>\n    );\n  }\n}\n",":host {\n  padding: 0px 0;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n:host([border-shown]) {\n  border-bottom: 1px solid #e4e5ec !important;\n  border-color: #e4e5ec !important ;\n  padding-bottom: 15px;\n}\n:host([display-context='sidebar']) {\n  padding: 15px 0;\n  justify-content: space-between !important;\n  width: 100% !important;\n  border-bottom: 1px solid #e4e5ec !important;\n  border-color: #e4e5ec !important ;\n}\n.title-body {\n  margin: 0;\n  padding: 0;\n}\n.label {\n  font-family: inherit !important;\n}\n\n@media only screen and (max-width: 641px) {\n  :host {\n    flex-direction: column;\n    gap: 8px;\n    align-items: flex-start;\n  }\n  :host([display-context='sidebar']) {\n    flex-direction: row;\n  }\n}\n","import { Component, Element, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-title',\n  styleUrl: 'ir-title.css',\n  scoped: true,\n})\nexport class IrTitle {\n  @Prop() label: string;\n  @Prop({ reflect: true }) borderShown: boolean;\n  @Prop({ reflect: true }) displayContext: 'default' | 'sidebar' = 'default';\n  @Prop({ reflect: true }) justifyContent:\n    | 'center'\n    | 'start'\n    | 'end'\n    | 'flex-start'\n    | 'flex-end'\n    | 'left'\n    | 'right'\n    | 'normal'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n    | 'stretch'\n    | 'safe center'\n    | 'unsafe center' = 'start';\n  @Event() closeSideBar: EventEmitter<null>;\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    this.el.style.justifyContent = this.justifyContent;\n  }\n  @Watch('justifyContent')\n  handleJustifyContentChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.el.style.justifyContent = newValue;\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <h4 class=\"text-left label font-medium-2 py-0 my-0\">{this.label}</h4>\n        {this.displayContext === 'sidebar' && (\n          <ir-icon\n            class={'close'}\n            onIconClickHandler={() => {\n              this.closeSideBar.emit(null);\n            }}\n          >\n            <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n              <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\n            </svg>\n          </ir-icon>\n        )}\n        {this.displayContext !== 'sidebar' && (\n          <div class={'title-body'}>\n            <slot name=\"title-body\"></slot>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}