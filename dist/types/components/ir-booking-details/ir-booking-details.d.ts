import { EventEmitter } from '../../stencil-public-runtime';
import { Booking, Guest, IPmsLog } from "../../models/booking.dto";
import { TIglBookPropertyPayload } from "../../models/igl-book-property";
import { ILocale } from "../../stores/locales.store";
import { IToast } from '../ir-toast/toast';
import { ICountry } from "../../models/IBooking";
import { IPaymentAction } from "../../services/payment.service";
export declare class IrBookingDetails {
    element: HTMLElement;
    language: string;
    ticket: string;
    bookingNumber: string;
    baseurl: string;
    propertyid: number;
    is_from_front_desk: boolean;
    hasPrint: boolean;
    hasReceipt: boolean;
    hasDelete: boolean;
    hasMenu: boolean;
    hasRoomEdit: boolean;
    hasRoomDelete: boolean;
    hasRoomAdd: boolean;
    hasCheckIn: boolean;
    hasCheckOut: boolean;
    hasCloseButton: boolean;
    bookingItem: TIglBookPropertyPayload | null;
    statusData: any[];
    tempStatus: string;
    showPaymentDetails: any;
    bookingData: Booking;
    countryNodeList: ICountry[];
    calendarData: any;
    guestData: Guest;
    defaultTexts: ILocale;
    rerenderFlag: boolean;
    sidebarState: 'guest' | 'pickup' | 'extra_note' | null;
    isUpdateClicked: boolean;
    pms_status: IPmsLog;
    isPMSLogLoading: boolean;
    userCountry: ICountry | null;
    paymentActions: IPaymentAction[];
    toast: EventEmitter<IToast>;
    bookingChanged: EventEmitter<Booking>;
    closeSidebar: EventEmitter<null>;
    private bookingService;
    private roomService;
    private paymentService;
    private dialogRef;
    private printingBaseUrl;
    private confirmationBG;
    componentDidLoad(): void;
    ticketChanged(): Promise<void>;
    handleIconClick(e: CustomEvent): void;
    handleEditSidebar(): void;
    handleResetExposedCancelationDueAmount(e: CustomEvent): Promise<void>;
    handleSelectChange(e: CustomEvent<any>): void;
    handleEditInitiated(e: CustomEvent<TIglBookPropertyPayload>): void;
    handleResetBookingData(e: CustomEvent<Booking | null>): Promise<Booking>;
    private setRoomsData;
    private initializeApp;
    private updateStatus;
    private openPMSLogsDialog;
    private openPrintingScreen;
    private handleCloseBookingWindow;
    private handleDeleteFinish;
    private resetBookingData;
    private renderPhoneNumber;
    private renderSidbarContent;
    render(): any;
}
