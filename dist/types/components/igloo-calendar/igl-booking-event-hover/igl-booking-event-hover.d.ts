import { EventEmitter } from '../../../stencil-public-runtime';
import { ICountry } from "../../../models/IBooking";
import { CalendarModalEvent } from "../../../models/property-types";
export declare class IglBookingEventHover {
    element: HTMLIglBookingEventHoverElement;
    bookingEvent: {
        [key: string]: any;
    };
    bubbleInfoTop: boolean;
    currency: any;
    countryNodeList: ICountry[];
    is_vacation_rental: boolean;
    isLoading: string;
    shouldHideUnassignUnit: boolean;
    canCheckInOrCheckout: boolean;
    showBookingPopup: EventEmitter;
    hideBubbleInfo: EventEmitter;
    deleteButton: EventEmitter<string>;
    bookingCreated: EventEmitter<{
        pool?: string;
        data: any[];
    }>;
    showDialog: EventEmitter<CalendarModalEvent>;
    private eventService;
    private hideButtons;
    componentWillLoad(): void;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    handleBookingEventChange(newValue: any, oldValue: any): void;
    private getBookingId;
    private hideBubble;
    private handleKeyDown;
    private getTotalOccupants;
    private getPhoneNumber;
    private getCountry;
    private getPhoneCode;
    private renderPhone;
    private getInternalNote;
    private getTotalPrice;
    private getArrivalTime;
    private getRatePlan;
    private getEntryDate;
    private isNewBooking;
    private isCheckedIn;
    private isBlockedDateEvent;
    private hasSplitBooking;
    private canCheckIn;
    private canCheckOut;
    private handleBlockDateUpdate;
    private handleEditBooking;
    private getStringDateFormat;
    private handleAddRoom;
    private handleCustomerCheckIn;
    private handleCustomerCheckOut;
    private handleDeleteEvent;
    private handleUpdateBlockedDates;
    private handleConvertBlockedDateToBooking;
    private getRoomInfo;
    private renderTitle;
    private handleBookingOption;
    private getInfoElement;
    private getNewBookingOptions;
    private getBlockedView;
    render(): any;
}
