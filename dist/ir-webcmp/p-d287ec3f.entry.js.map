{"version":3,"names":["irPriceInputCss","IrPriceInputStyle0","IrPriceInput","constructor","hostRef","this","autoValidate","placeholder","value","required","opts","mask","Number","scale","radix","mapToRadix","normalizeZeros","padFractionalZeros","thousandsSeparator","handleInputChange","validateInput","handleBlur","numValue","parseFloat","toFixed","inputBlur","emit","handleFocus","inputFocus","componentWillLoad","el","id","v4","componentDidLoad","initializeMask","maskOpts","Object","assign","minValue","undefined","maxValue","IMask","inputRef","on","isEmpty","trim","unmaskedValue","textChange","hasSpecialClass","className","classList","contains","zod","parse","wrapKey","error","console","log","render","h","key","class","containerClassname","label","labelContainerClassname","labelStyle","htmlFor","currency","disabled","ref","testId","inputStyle","onInput","onBlur","onFocus","type","readOnly","_a","ariaLabel","_b","ariaDescription"],"sources":["src/components/ui/ir-price-input/ir-price-input.css?tag=ir-price-input&encapsulation=scoped","src/components/ui/ir-price-input/ir-price-input.tsx"],"sourcesContent":[":host {\n  display: block;\n  --ir-input-border-color: #cacfe7;\n  flex: 1 1 0%;\n}\n\n:host .input-group-text {\n  border-color: var(--ir-input-border-color);\n}\n:host .form-control,\n.currency-label {\n  font-size: 14px !important;\n}\n\n.ir-bl-lbl-none,\n.ir-bl-input-none {\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n.rate-input:read-only {\n  background: white !important;\n}\n.ir-br-lbl-none,\n.ir-br-input-none {\n  border-top-right-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n}\n.ir-br-none {\n  border-right: none;\n}\n.ir-bl-none {\n  border-left: none;\n}\n\n.rate-input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n  padding: 0 !important;\n}\n:host([class='special-style']) .rate-input {\n  background: black !important;\n}\n.rate-input {\n  font-size: 0.875rem;\n  line-height: 0;\n  padding: 0;\n  height: 0;\n  box-sizing: border-box;\n  border-left: 0;\n  padding-left: 0px !important;\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n\n.currency-label.with-label {\n  border-radius: 0;\n}\n\n.currency-label {\n  box-sizing: border-box;\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.875rem;\n  height: 2rem;\n  background: white;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  pointer-events: none;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.currency-label.disabled,\n.rate-input:disabled {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n\n.price-input-group:focus-within .currency-label {\n  border-top: 1px solid #1e9ff2;\n  border-bottom: 1px solid #1e9ff2;\n  border-left: 1px solid #1e9ff2;\n}\n:host([data-state='error']) .currency-label,\n:host([data-state='error']) .rate-input,\n.error {\n  border-color: var(--red, #ff4961) !important;\n}\n.price-input:focus {\n  border-right-width: 1px !important;\n}\n\n.is-invalid {\n  background-image: none !important;\n}\n","import { Component, Element, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { ZodType } from 'zod';\nimport IMask, { InputMask } from 'imask';\n@Component({\n  tag: 'ir-price-input',\n  styleUrl: 'ir-price-input.css',\n  scoped: true,\n})\nexport class IrPriceInput {\n  @Element() el: HTMLIrPriceInputElement;\n\n  /** The label for the input, optional */\n  @Prop() label?: string;\n  /** The readonly for the input, optional */\n  @Prop() readOnly?: boolean;\n\n  /** Extra classnames for the input, optional */\n  @Prop() inputStyle?: string;\n\n  /** Extra classnames for the label, optional */\n  @Prop() labelStyle?: string;\n\n  /** The disabled for the input, optional */\n  @Prop() disabled?: boolean;\n\n  /** The Currency for the input, optional */\n  @Prop() currency?: string;\n\n  /** The AutoValidate for the input, optional */\n  @Prop() autoValidate?: boolean = true;\n\n  /** Indicates the key to wrap the value (e.g., 'price' or 'cost') */\n  @Prop() wrapKey?: string;\n\n  /**\n   * A Zod schema for validating the input\n   * Example: z.coerce.number()\n   */\n  @Prop() zod?: ZodType<any, any>;\n\n  /** Placeholder text for the input */\n  @Prop() placeholder: string = '';\n\n  /** Initial value for the input */\n  @Prop({ mutable: true }) value: string = '';\n\n  /** Whether the input is required */\n  @Prop() required: boolean = false;\n\n  /** Minimum value for the price */\n  @Prop() minValue?: number;\n\n  /** Maximum value for the price */\n  @Prop() maxValue?: number;\n\n  /** Unique id for testing */\n  @Prop() testId?: string;\n\n  /** Error*/\n  @Prop({ mutable: true }) error: boolean;\n  /**\n   * Extra class names applied to the outer <fieldset> wrapper.\n   * Useful for spacing (e.g., margins/padding), width/layout utilities,\n   * or theming the whole input group from the outside.\n   * Example: \"w-100 mb-2 d-flex align-items-center\"\n   */\n  @Prop() containerClassname: string;\n\n  /**\n   * Extra class names applied to the label container (<div class=\"input-group-prepend\">)\n   * that wraps the <label>. Use this to control label width, alignment,\n   * spacing, or visibility at different breakpoints.\n   * Example: \"min-w-120 text-nowrap pe-2\"\n   */\n  @Prop() labelContainerClassname: string;\n\n  /** Emits the current value on change */\n  @Event() textChange: EventEmitter<string>;\n\n  /** Emits the current value on blur */\n  @Event() inputBlur: EventEmitter<string>;\n\n  /** Emits the current value on focus */\n  @Event() inputFocus: EventEmitter<void>;\n\n  private id: string;\n\n  private opts = {\n    mask: Number,\n    scale: 2,\n    radix: '.',\n    mapToRadix: [','],\n    normalizeZeros: true,\n    padFractionalZeros: true,\n    thousandsSeparator: ',',\n  };\n  private mask: InputMask<any>;\n  private inputRef: HTMLInputElement;\n\n  componentWillLoad() {\n    if (this.el.id) {\n      this.id = this.el.id;\n    } else {\n      this.id = v4();\n    }\n  }\n\n  componentDidLoad() {\n    if (!this.mask) {\n      this.initializeMask();\n    }\n  }\n\n  private initializeMask() {\n    // Create options object with min/max if provided\n    const maskOpts = {\n      ...this.opts,\n    };\n\n    if (this.minValue !== undefined) {\n      maskOpts['min'] = this.minValue;\n    }\n\n    if (this.maxValue !== undefined) {\n      maskOpts['max'] = this.maxValue;\n    }\n\n    this.mask = IMask(this.inputRef, maskOpts);\n\n    // Set initial value if provided\n    if (this.value) {\n      this.mask.value = this.value;\n    }\n\n    this.mask.on('accept', () => {\n      const isEmpty = this.inputRef.value.trim() === '' || this.mask.unmaskedValue === '';\n      if (isEmpty) {\n        this.value = '';\n        this.textChange.emit(null);\n      } else {\n        this.value = this.mask.unmaskedValue;\n        this.textChange.emit(this.value);\n      }\n    });\n  }\n\n  private hasSpecialClass(className: string): boolean {\n    return this.el.classList.contains(className);\n  }\n\n  private validateInput(value: string): void {\n    if (!this.autoValidate) {\n      return;\n    }\n    if (this.zod) {\n      try {\n        this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value); // Validate the value using the Zod schema\n        this.error = false; // Clear the error if valid\n      } catch (error) {\n        console.log(error);\n        this.error = true; // Set the error message\n      }\n    }\n  }\n\n  private handleInputChange = (): void => {\n    // The value is already being updated by the mask's 'accept' event\n    // Just validate here if needed\n    this.validateInput(this.value);\n  };\n\n  private handleBlur = (): void => {\n    this.validateInput(this.value);\n\n    // Format to 2 decimal places on blur\n    if (this.value) {\n      const numValue = parseFloat(this.value);\n      this.value = numValue.toFixed(2);\n\n      // Update the mask value to show the formatted value\n      if (this.mask) {\n        this.mask.value = this.value;\n      }\n    }\n\n    // Emit the blur event\n    this.inputBlur.emit(this.value);\n  };\n\n  private handleFocus = (): void => {\n    // Emit the focus event\n    this.inputFocus.emit();\n  };\n\n  render() {\n    return (\n      <fieldset class={`${this.containerClassname} input-group price-input-group m-0 p-0 `}>\n        {this.label && (\n          <div class={`input-group-prepend ${this.labelContainerClassname}`}>\n            <span\n              class={`input-group-text \n                ${this.labelStyle}\n              ${this.hasSpecialClass('ir-bl-lbl-none') ? 'ir-bl-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-lbl-none') ? 'ir-br-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-none') ? 'ir-br-none' : ''} \n              ${this.hasSpecialClass('ir-bl-none') ? 'ir-bl-none' : ''} \n              `}\n            >\n              <label class={'p-0 m-0 '} htmlFor={this.id}>\n                {this.label}\n              </label>\n            </span>\n          </div>\n        )}\n        <div class=\"position-relative has-icon-left rate-input-container\">\n          {this.currency && (\n            <div>\n              <span class={`input-group-text ${this.disabled ? 'disabled' : ''} currency-label ${this.error ? 'error' : ''} ${this.label ? 'with-label' : ''}`}>\n                {this.currency}\n              </span>\n            </div>\n          )}\n          <input\n            ref={el => (this.inputRef = el)}\n            data-testid={this.testId}\n            disabled={this.disabled}\n            id={this.id}\n            class={`form-control input-sm rate-input \n              ${this.inputStyle}\n              ${this.hasSpecialClass('ir-br-input-none') ? 'ir-br-input-none' : ''} \n              ${this.hasSpecialClass('ir-bl-input-none') ? 'ir-bl-input-none' : ''} \n              ${this.error ? 'error' : ''} py-0 m-0 ${this.currency ? 'ir-bl-none' : ''}`}\n            onInput={this.handleInputChange}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            type=\"text\"\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            aria-label={this.el.ariaLabel ?? 'price-input'}\n            aria-describedby={this.el.ariaDescription ?? 'price-input'}\n          />\n        </div>\n      </fieldset>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}