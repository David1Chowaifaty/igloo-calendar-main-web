{"version":3,"names":["iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","constructor","hostRef","this","isEventHover","renderAgain","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","componentWillLoad","getBlockedInfo","defaultData","Object","assign","parseInt","CODE_NAME","emitData","error","handleOptionalReason","event","target","value","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","dataUpdateEvent","emit","key","data","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","render","console","log","fromDate","toDate","h","Host","class","from_date","dateOption","showDateDifference","to_date","locales","entries","Lcz_Reason","type","id","onChange","Lcz_OutOfservice","Lcz_Or","placeholder","Lcz_OptionalReason","onInput","Lcz_AutomaticReleaseIn","map","releaseItem","selected","Number","CODE_VALUE_EN","Lcz_On","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","disabled","withDateDifference","variant","totalNights","fromDateStr","toDateStr","initializeDates","handleDataChange","newValue","oldValue","JSON","stringify","setDate","getFormattedDateString","calculateTotalNights","calculateDaysBetweenDates","moment","format","toLowerCase","getFullYear","handleDateSelectEvent","dateSelectEvent","handleDateChange","start","end","detail","getTime","dateDifference","maxDate","minDate","autoApply","onDateChanged","xmlns","height","width","viewBox","fill","d","Lcz_Nights","Lcz_Night","iglRatePlanCss","IglRatePlanStyle0","IglRatePlan","ratePricingMode","bookingType","isBookDisabled","disableForm","shouldBeDisabled","ratePlan","visibleInventory","is_available_to_book","updateRateplanSelection","props","roomTypeId","currentSelections","booking_store","ratePlanSelections","handleVariationChange","view_mode","reserveRooms","ratePlanId","rooms","bookProperty","resetReserved","reserveRoom","buttonClicked","guest","last_name","_a","first_name","_b","unit","_c","roomtype_id","_d","bed_preference","roomtype","is_bed_configuration_enabled","_e","infant_nbr","_f","selected_variation","child_nbr","_g","renderRate","is_amount_modified","rp_amount","toString","amount","discounted_amount","amount_per_night_gross","formatVariation","variation","adults","adult_nbr","children","getTooltipMessages","selectedVariation","matchingVariation","variations","find","cancellationPolicy","applicable_policies","p","combined_statement","guaranteePolicy","tooltip","v","updateRoomParams","params","currency","isAvailableToBook","formattedVariations","style","gap","name","split","is_non_refundable","short_name","message","uuidv4","testId","onTextChange","e","symbol","Lcz_Rate","Array","from","length","_","i","reserved","Fragment","onClick","Lcz_Current","Lcz_Select","Lcz_Book","irAutocompleteCss","IrAutocompleteStyle0","IrAutocomplete","duration","isSplitBooking","inputId","v4","required","inputValue","selectedIndex","isComboBoxVisible","isLoading","inputFocused","no_result_found","Lcz_NoResultsFound","handleKeyDown","dataSize","itemHeight","getHeightOfPElement","preventDefault","adjustScrollPosition","selectItem","inputRef","blur","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","index","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","setTimeout","fetchData","fetchExposedGuest","propertyId","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","isDropdownItem","document","activeElement","toast","description","title","position","inputCleared","element","closest","disconnectedCallback","removeEventListener","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","booking_nbr","email","clearInput","withblur","htmlFor","danger_border","bind","onBlur","autoComplete","onFocus","ref","irCountryPickerCss","IrCountryPickerStyle0","IrCountryPicker","countries","autoValidate","filteredCountries","searching","country","selectedCountry","handleCountryChange","newCountry","oldCountry","filterCountries","selectCountry","debounceTimeout","filter","c","includes","countryChange","scrollToSelected","dropdownItem","scrollIntoView","block","shouldShowPropertyCountry","propertyCountry","label","onInputFocus","onInputBlur","trim","src","flag","alt","aspectRatio","borderRadius","irDateRangeCss","IrDateRangeStyle0","IrDateRange","firstDay","monthNames","daysOfWeek","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","singleDatePicker","maxSpan","days","getElementById","createElement","textContent","head","appendChild","componentDidLoad","dateRangeInput","initializeDateRangePicker","updateDateRangePickerDates","openDatePickerTimeout","$","remove","handleMinDateChange","datePropChanged","openDatePicker","click","picker","newDate","date","setStartDate","setEndDate","newStartDate","newEndDate","clone","add","daterangepicker","opens","startDate","endDate","locale","dateChanged","irPhoneInputCss","IrPhoneInputStyle0","IrPhoneInput","default_country","phone_prefix","isDropdownVisible","hasFocus","random","slice","labelId","getCountries","language","setCountryFromPhonePrefix","setCurrentCountry","handleValueChange","handlePhoneChange","inputElement","replace","textChange","currentCountry","mobile","Error","useFloating","floatingLabel","showSideLabel","isActive","maxLength","onComboboxValueChange","autoFocus","image","irPriceInputCss","IrPriceInputStyle0","IrPriceInput","opts","mask","scale","radix","mapToRadix","normalizeZeros","padFractionalZeros","thousandsSeparator","validateInput","numValue","parseFloat","toFixed","inputBlur","inputFocus","initializeMask","maskOpts","minValue","maxValue","IMask","on","isEmpty","unmaskedValue","hasSpecialClass","className","classList","zod","parse","wrapKey","containerClassname","labelContainerClassname","labelStyle","inputStyle","readOnly","ariaLabel","ariaDescription"],"sources":["src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/ui/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ui/ir-autocomplete/ir-autocomplete.tsx","src/components/ui/ir-country-picker/ir-country-picker.css?tag=ir-country-picker&encapsulation=scoped","src/components/ui/ir-country-picker/ir-country-picker.tsx","src/components/ui/ir-date-range/ir-date-range.css?tag=ir-date-range&encapsulation=scoped","src/components/ui/ir-date-range/ir-date-range.tsx","src/components/ui/ir-phone-input/ir-phone-input.css?tag=ir-phone-input&encapsulation=scoped","src/components/ui/ir-phone-input/ir-phone-input.tsx","src/components/ui/ir-price-input/ir-price-input.css?tag=ir-price-input&encapsulation=scoped","src/components/ui/ir-price-input/ir-price-input.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n:host .controlContainer {\n  width: 24px;\n}\n\n:host .checkBoxContainer input {\n  height: 1.2rem !important;\n  width: 30px;\n}\n\n.releaseTime {\n  padding-left: 5px;\n}\n.out-of-service-label {\n  margin-left: 5px !important;\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { IEntries } from '@/models/IBooking';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'igl-block-dates-view',\n  styleUrl: 'igl-block-dates-view.css',\n  scoped: true,\n})\nexport class IglBlockDatesView {\n  @Prop() defaultData: { [key: string]: any };\n  @Prop() fromDate: string;\n  @Prop() toDate: string;\n  @Prop({ mutable: true }) entryDate: string;\n  @Prop() entryHour: number;\n  @Prop() isEventHover: boolean = false;\n  @Prop() entryMinute: number;\n  @State() renderAgain: boolean = false;\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\n\n  private blockDatesData: { [key: string]: any } = {\n    RELEASE_AFTER_HOURS: 0,\n    OPTIONAL_REASON: '',\n    OUT_OF_SERVICE: false,\n  }; // Change of property name might require updates in booking-event-hover\n  private releaseList: IEntries[] = [];\n  private bookingService: BookingService = new BookingService();\n\n  async componentWillLoad() {\n    try {\n      this.releaseList = await this.bookingService.getBlockedInfo();\n      if (this.defaultData) {\n        this.blockDatesData = { ...this.defaultData };\n      } else {\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\n        this.emitData();\n      }\n    } catch (error) {\n      // toastr.error(error);\n    }\n  }\n\n  handleOptionalReason(event) {\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\n    this.emitData();\n  }\n\n  handleReleaseAfterChange(evt) {\n    if (this.entryDate) this.entryDate = undefined;\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\n    this.renderPage();\n    this.emitData();\n  }\n\n  emitData() {\n    this.dataUpdateEvent.emit({\n      key: 'blockDatesData',\n      data: { ...this.blockDatesData },\n    });\n  }\n\n  getReleaseHoursString() {\n    // console.log(\"entry date\", this.entryDate);\n    // console.log(\"blocked date data\", this.blockDatesData);\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\n    if (this.entryDate && this.entryHour && this.entryMinute) {\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\n    } else {\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\n    }\n\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\n  }\n  formatNumber(value: number) {\n    return value < 10 ? `0${value}` : value;\n  }\n  handleOutOfService(evt) {\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\n    if (this.blockDatesData.OUT_OF_SERVICE) {\n      this.blockDatesData.OPTIONAL_REASON = '';\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\n    }\n    this.renderPage();\n    this.emitData();\n  }\n\n  renderPage() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  render() {\n    console.log({ fromDate: this.fromDate, toDate: this.toDate });\n    return (\n      <Host>\n        <div class={`m-0 p-0 mb-1`}>\n          <div class=\"text-left p-0\">\n            <ir-date-view from_date={this.fromDate} dateOption=\"YYYY-MM-DD\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\n          </div>\n        </div>\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\n          <div class=\"mb-1 \">\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\n            </div>\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\n          </div>\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\n            <div>\n              <div class=\"mb-1 d-flex  align-items-center\">\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\n                <div class=\"d-inline-flex col pr-0 align-middle\">\n                  <input\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder={locales.entries.Lcz_OptionalReason}\n                    id=\"optReason\"\n                    value={this.blockDatesData.OPTIONAL_REASON}\n                    onInput={event => this.handleOptionalReason(event)}\n                  />\n                </div>\n              </div>\n              <div class=\"mb-1 w-100 pr-0 \">\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\n                <div class=\"d-inline-block\">\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\n                    {this.releaseList.map(releaseItem => (\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\n                        {releaseItem.CODE_VALUE_EN}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\n                  <div class=\"d-inline-block releaseTime\">\n                    <em>\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\n                    </em>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  align-items: center !important;\n  font-size: 14px !important;\n}\n.date-range-input {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex: 1;\n  cursor: pointer;\n  width: 100%;\n  user-select: none;\n  font-size: 14px !important;\n}\n.iglRangeNights {\n  margin: 0;\n  padding: 0;\n}\n.date-view {\n  position: absolute;\n  background: white;\n  pointer-events: none;\n  cursor: pointer;\n  display: block;\n  margin-left: 14px;\n  margin-right: 14px;\n  font-size: 13.65px !important;\n  display: flex;\n  align-items: center;\n  inset: 0;\n}\n.date-view svg {\n  padding: 0 !important;\n  margin: 0;\n  margin-right: 10px;\n}\n.calendarPickerContainer {\n  display: flex !important;\n  position: relative !important;\n  text-align: left;\n  align-items: center !important;\n  padding: 0 !important;\n  margin: 0;\n  border: 1px solid var(--ir-date-range-border, #379ff2);\n  width: var(--ir-date-range-width, 245px);\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.calendarPickerContainer:focus-within {\n  border-color: #379ff2;\n}\n.calendarPickerContainer[data-state='disabled'] {\n  border: 0px;\n  width: 280px;\n}\n.date-view[data-state='disabled'],\n.date-range-input[data-state='disabled'] {\n  margin: 0;\n  cursor: default;\n}\n.date-range-container-cn {\n  position: relative;\n  width: fit-content;\n}\n.date-range-container-cn:focus-within .date-range-container {\n  border: 1px solid #379ff2;\n}\n.date-range-container {\n  position: relative;\n  gap: 1rem;\n  font-size: 0.975rem;\n  line-height: 1.45;\n  border-radius: 0.21rem;\n  border: 1px solid #cacfe7;\n  color: #3b4781;\n  padding: 0.75rem 1rem;\n  box-sizing: border-box !important;\n  font-weight: 400;\n  background-color: #fff;\n  background-clip: padding-box;\n  height: 2rem;\n  pointer-events: none;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.date-range-container-cn .date-range-input {\n  position: absolute;\n  width: 100% !important;\n  inset: 0;\n  cursor: pointer;\n}\n.date-range-container.disabled {\n  border: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n.date-range-input[data-state='disabled'] {\n  cursor: default;\n}\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { calculateDaysBetweenDates } from '@/utils/booking';\nimport moment from 'moment';\n\n@Component({\n  tag: 'igl-date-range',\n  styleUrl: 'igl-date-range.css',\n  scoped: true,\n})\nexport class IglDateRange {\n  @Prop() defaultData: { [key: string]: any };\n  @Prop({ reflect: true }) disabled: boolean = false;\n  @Prop() minDate: string;\n  @Prop() dateLabel: string;\n  @Prop() maxDate: string;\n  @Prop() withDateDifference: boolean = true;\n  @Prop() variant: 'booking' | 'default' = 'default';\n\n  @State() renderAgain: boolean = false;\n\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private totalNights: number = 0;\n  private fromDate: Date;\n  private toDate: Date;\n  private fromDateStr: string = 'from';\n  private toDateStr: string = 'to';\n\n  componentWillLoad() {\n    this.initializeDates();\n  }\n\n  @Watch('defaultData')\n  handleDataChange(newValue: any, oldValue: any) {\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\n      this.initializeDates();\n    }\n  }\n\n  private initializeDates() {\n    let dt = new Date();\n    dt.setHours(0, 0, 0, 0);\n    dt.setDate(dt.getDate() + 1);\n    if (this.defaultData) {\n      if (this.defaultData.fromDate) {\n        this.fromDate = new Date(this.defaultData.fromDate);\n        this.fromDate.setHours(0, 0, 0, 0);\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\n      }\n      if (this.defaultData.toDate) {\n        this.toDate = new Date(this.defaultData.toDate);\n        this.toDate.setHours(0, 0, 0, 0);\n        this.toDateStr = this.getFormattedDateString(this.toDate);\n      }\n    }\n    if (this.fromDate && this.toDate) {\n      this.calculateTotalNights();\n      // this.handleDateSelectEvent('selectedDateRange', {\n      //   fromDate: this.fromDate.getTime(),\n      //   toDate: this.toDate.getTime(),\n      //   fromDateStr: this.fromDateStr,\n      //   toDateStr: this.toDateStr,\n      //   dateDifference: this.totalNights,\n      // });\n    }\n    return [this.fromDateStr, this.toDateStr];\n  }\n\n  private calculateTotalNights() {\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\n  }\n  private getFormattedDateString(dt) {\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\n  }\n\n  private handleDateSelectEvent(key, data: any = '') {\n    this.dateSelectEvent.emit({ key, data });\n  }\n  private handleDateChange(evt) {\n    const { start, end } = evt.detail;\n    this.fromDate = start.toDate();\n    this.toDate = end.toDate();\n    this.calculateTotalNights();\n\n    this.handleDateSelectEvent('selectedDateRange', {\n      fromDate: this.fromDate.getTime(),\n      toDate: this.toDate.getTime(),\n      fromDateStr: start.format('DD MMM YYYY'),\n      toDateStr: end.format('DD MMM YYYY'),\n      dateDifference: this.totalNights,\n    });\n\n    this.renderAgain = !this.renderAgain;\n  }\n  render() {\n    if (this.variant === 'booking') {\n      return (\n        <div class={`p-0 m-0 date-range-container-cn`}>\n          <ir-date-range\n            maxDate={this.maxDate}\n            class={'date-range-input'}\n            disabled={this.disabled}\n            fromDate={this.fromDate}\n            toDate={this.toDate}\n            minDate={this.minDate}\n            autoApply\n            data-state={this.disabled ? 'disabled' : 'active'}\n            onDateChanged={evt => {\n              this.handleDateChange(evt);\n            }}\n          ></ir-date-range>\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n              />\n            </svg>\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n              />\n            </svg>\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\n            {this.totalNights && <span class=\"m-0 p-0\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Host>\n        <div class={`p-0 m-0 date-range-container-cn`}>\n          <ir-date-range\n            maxDate={this.maxDate}\n            class={'date-range-input'}\n            disabled={this.disabled}\n            fromDate={this.fromDate}\n            toDate={this.toDate}\n            minDate={this.minDate}\n            autoApply\n            data-state={this.disabled ? 'disabled' : 'active'}\n            onDateChanged={evt => {\n              this.handleDateChange(evt);\n            }}\n          ></ir-date-range>\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n              />\n            </svg>\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n              />\n            </svg>\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n.currency {\n  display: block;\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  height: auto;\n  left: 10px;\n}\n.rate-input {\n  font-size: 14px;\n  line-height: 0;\n  padding: 0;\n  height: 0;\n  border-left: 0;\n}\n.rate-input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n}\n.new-currency {\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.975rem;\n  height: 2rem;\n  background: white;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.input-group-prepend span[data-state='focus'] {\n  border-color: var(--blue);\n}\n.input-group-prepend span[data-disabled] {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n.non-ref-span {\n  font-size: 12px;\n  color: var(--green);\n}\n.rateplan-name-container {\n  margin-bottom: 0.5rem !important;\n}\n.rateplan-container {\n  margin-top: 0.5rem;\n}\n@media only screen and (min-width: 1200px) {\n  .rateplan-name-container {\n    width: 40%;\n    margin-top: 0;\n  }\n  .rateplan-container {\n    width: 40%;\n  }\n}\n@media only screen and (min-width: 991px) {\n  .max-w-300 {\n    max-width: 200px;\n  }\n  .rate-input-container {\n    max-width: 50px;\n  }\n  .rateplan-name-container {\n    margin-bottom: 0 !important;\n  }\n}\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\n  .rateplan-name-container {\n    width: 40%;\n  }\n  .price-amount {\n    max-width: 150px !important;\n  }\n}\n@media only screen and (max-width: 768px) {\n  .booking-btn {\n    width: 100%;\n  }\n}\n\n.total-nights-container {\n  width: max-content;\n}\n.nightBorder {\n  border-left-width: 0;\n  border-top-right-radius: 3px !important;\n  border-bottom-right-radius: 3px !important;\n}\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport locales from '@/stores/locales.store';\nimport { RatePlan, Variation } from '@/models/property';\nimport booking_store, { IRatePlanSelection, reserveRooms, resetReserved, updateRoomParams } from '@/stores/booking.store';\n\n@Component({\n  tag: 'igl-rate-plan',\n  styleUrl: 'igl-rate-plan.css',\n  scoped: true,\n})\nexport class IglRatePlan {\n  // Used Props with type annotations\n  @Prop() ratePlan: RatePlan;\n  @Prop() roomTypeId: number;\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\n  @Prop() currency!: { symbol: string };\n  @Prop() shouldBeDisabled!: boolean;\n  @Prop() bookingType: string = 'PLUS_BOOKING';\n  @Prop() isBookDisabled: boolean = false;\n  @Prop() visibleInventory!: IRatePlanSelection;\n\n  @Event() buttonClicked!: EventEmitter<{ [key: string]: any }>;\n\n  // Determine if the form inputs should be disabled\n  private disableForm(): boolean {\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\n      return false;\n    }\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\n  }\n\n  // Update the rate plan selection in the booking store\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\n    const { roomTypeId, ratePlan } = this;\n    const currentSelections = booking_store.ratePlanSelections;\n\n    booking_store.ratePlanSelections = {\n      ...currentSelections,\n      [roomTypeId]: {\n        ...currentSelections[roomTypeId],\n        [ratePlan.id]: {\n          ...currentSelections[roomTypeId][ratePlan.id],\n          ...props,\n        },\n      },\n    };\n  }\n\n  // Handle changes to select inputs\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\n    if (key === 'adult_child_offering') {\n      this.handleVariationChange(value);\n    } else if (key === 'rate') {\n      this.updateRateplanSelection({ view_mode: value as any });\n    } else if (key === 'totalRooms') {\n      reserveRooms({\n        roomTypeId: this.roomTypeId,\n        ratePlanId: this.ratePlan.id,\n        rooms: Number(value),\n      });\n    }\n  }\n\n  // Navigate to the next page for booking\n  private bookProperty(): void {\n    if (this.bookingType === 'BAR_BOOKING') {\n      resetReserved();\n    }\n    this.reserveRoom();\n    this.buttonClicked.emit({ key: 'next' });\n  }\n\n  private reserveRoom() {\n    reserveRooms({\n      roomTypeId: this.roomTypeId,\n      ratePlanId: this.ratePlan.id,\n      rooms: 1,\n      guest: [\n        {\n          last_name: booking_store.guest?.last_name,\n          first_name: booking_store.guest?.first_name,\n          unit: this.roomTypeId === booking_store.guest?.roomtype_id ? booking_store.guest?.unit : null,\n          bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest?.bed_preference : null,\n          infant_nbr: this.visibleInventory.selected_variation?.child_nbr > 0 ? booking_store.guest?.infant_nbr : null,\n        },\n      ],\n    });\n  }\n  // Render the rate amount\n  private renderRate(): string {\n    const { visibleInventory } = this;\n    if (!visibleInventory) return '';\n    if (visibleInventory.is_amount_modified) {\n      return visibleInventory.rp_amount.toString();\n    }\n    const { selected_variation, view_mode } = visibleInventory;\n    const amount = view_mode === '001' ? selected_variation?.discounted_amount : selected_variation?.amount_per_night_gross;\n    return amount?.toString() || '';\n  }\n\n  // Format variation for display\n  private formatVariation(variation: Variation): string {\n    if (!variation) return '';\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\n    const children =\n      variation.child_nbr > 0\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\n        : '';\n    return children ? `${adults} ${children}` : adults;\n  }\n\n  // Get tooltip messages for the rate plan\n  private getTooltipMessages(): string | undefined {\n    const { ratePlan, visibleInventory } = this;\n    const selectedVariation = visibleInventory?.selected_variation;\n    if (!selectedVariation) return;\n\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\n\n    if (!matchingVariation) return;\n\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\n\n    let tooltip = '';\n    if (cancellationPolicy) {\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\n    }\n    if (guaranteePolicy) {\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\n    }\n    return tooltip || undefined;\n  }\n\n  // Handle variation change when a different option is selected\n  private async handleVariationChange(value: string): Promise<void> {\n    const { ratePlan, roomTypeId } = this;\n    const variations = ratePlan.variations || [];\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\n\n    if (!selectedVariation) return;\n\n    updateRoomParams({\n      params: { selected_variation: selectedVariation },\n      ratePlanId: ratePlan.id,\n      roomTypeId,\n    });\n  }\n\n  // Reset reserved rooms in the booking store\n\n  render() {\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\n    const isAvailableToBook = ratePlan.is_available_to_book;\n    const disableForm = this.disableForm();\n    const selectedVariation = visibleInventory?.selected_variation;\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\n    // if (!this.visibleInventory) {\n    //   return null;\n    // }\n    return (\n      <Host data-testid={`rp-${this.ratePlan.id}`}>\n        <div\n          class={`d-flex mt-1  p-0 ${\n            isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'\n          }`}\n        >\n          <div data-testid={'rp_name'} class=\"rateplan-name-container m-0 p-0  d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n            {bookingType === 'BAR_BOOKING' ? (\n              <p class=\"m-0 p-0\">\n                {/* <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span> */}\n                <span>\n                  {ratePlan.name.split('/')[1]} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\n                </span>\n              </p>\n            ) : (\n              <span>\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\n              </span>\n            )}\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\n          </div>\n\n          {isAvailableToBook ? (\n            <div class=\"d-md-flex m-md-0  justify-content-md-end align-items-md-center flex-fill rateplan-container\">\n              <div class=\"flex-fill max-w-300 flex-grow-1\">\n                <fieldset class=\"position-relative flex-grow-1 w-100\">\n                  <select\n                    disabled={disableForm}\n                    data-testid=\"adult-child-offering\"\n                    class=\"form-control input-sm flex-grow-1 w-100\"\n                    id={uuidv4()}\n                    onChange={evt => this.handleDataChange('adult_child_offering', evt)}\n                  >\n                    {formattedVariations?.map(variation => (\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\n                        {variation}\n                      </option>\n                    ))}\n                  </select>\n                </fieldset>\n              </div>\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0 flex-grow-1\">\n                  <ir-price-input\n                    testId={'amount_input'}\n                    disabled={disableForm}\n                    onTextChange={e =>\n                      this.updateRateplanSelection({\n                        is_amount_modified: true,\n                        rp_amount: Number(e.detail),\n                      })\n                    }\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\n                    class=\"ir-br-input-none price-amount w-100 flex-grow-1\"\n                    currency={currency.symbol}\n                    value={this.renderRate()}\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\n                  ></ir-price-input>\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\n                    <select\n                      data-testid={'nigh_stay_select'}\n                      disabled={disableForm}\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\n                      id={uuidv4()}\n                      onChange={evt =>\n                        this.updateRateplanSelection({\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\n                        })\n                      }\n                    >\n                      {ratePricingMode.map(data => (\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\n                          {data.CODE_VALUE_EN}\n                        </option>\n                      ))}\n                    </select>\n                  </fieldset>\n                </div>\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\n                  <div class=\"flex-fill mt-0 ml-1 m-0 mt-md-0 p-0\">\n                    <fieldset class=\"position-relative\">\n                      <select\n                        data-testid={'inventory_select'}\n                        disabled={visibleInventory.visibleInventory === 0}\n                        class=\"form-control input-sm\"\n                        id={uuidv4()}\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\n                      >\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\n                          <option value={i} selected={visibleInventory.reserved === i}>\n                            {i}\n                          </option>\n                        ))}\n                      </select>\n                    </fieldset>\n                  </div>\n                )}\n              </div>\n              {bookingType === 'EDIT_BOOKING' && (\n                <Fragment>\n                  <div class=\"m-0 p-0 ml-md-1 mt-md-0 d-none d-md-block\">\n                    <fieldset class=\"position-relative\">\n                      <input\n                        data-testid={'inventory_radio'}\n                        disabled={disableForm}\n                        type=\"radio\"\n                        name=\"ratePlanGroup\"\n                        value=\"1\"\n                        onChange={() => {\n                          resetReserved();\n                          this.reserveRoom();\n                        }}\n                        checked={visibleInventory.reserved === 1}\n                      />\n                    </fieldset>\n                  </div>\n                  <button\n                    data-testid=\"book_property\"\n                    disabled={disableForm}\n                    type=\"button\"\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\n                    onClick={() => {\n                      resetReserved();\n                      this.reserveRoom();\n                      this.bookProperty();\n                    }}\n                  >\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\n                  </button>\n                </Fragment>\n              )}\n\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\n                <button\n                  data-testid=\"book\"\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\n                  type=\"button\"\n                  class=\"btn btn-primary booking-btn mt-md-0 btn-sm ml-md-1 mt-1\"\n                  onClick={() => this.bookProperty()}\n                >\n                  {locales.entries.Lcz_Book}\n                </button>\n              )}\n            </div>\n          ) : (\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n}\n.selected {\n  color: #fff;\n  text-decoration: none;\n  background-color: #666ee8;\n}\ninput {\n  width: 100%;\n  position: relative;\n  border-top-left-radius: 0px !important;\n  border-left: 0 !important;\n  border-bottom-left-radius: 0px !important;\n}\nlabel {\n  margin: 0;\n  border-top-right-radius: 0px !important;\n  border-right: 0 !important;\n  border-bottom-right-radius: 0px !important;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n\n  padding-right: 3px !important;\n  justify-content: center;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\nlabel[data-state='focused'] {\n  border-color: var(--blue);\n}\n\n.combobox {\n  margin: 0;\n  top: 30px;\n  min-width: 100%;\n  width: max-content;\n  display: block;\n  z-index: 10000;\n  padding: 1px;\n  background: white;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  padding: 5px 0;\n  max-height: 250px;\n  overflow-y: auto;\n}\n.dropdown-item {\n  cursor: pointer;\n}\nbutton {\n  all: unset;\n  right: 4px;\n}\n.combobox p,\nspan,\nloader-container {\n  padding: 5px 16px;\n  margin: 0px;\n  margin-top: 2px;\n  width: 100%;\n}\n.combobox p {\n  cursor: pointer;\n}\n.combobox p:hover {\n  background: #f4f5fa;\n}\n\n.combobox p[data-selected],\n.combobox p[data-selected]:hover {\n  color: #fff;\n  text-decoration: none;\n  background-color: #666ee8;\n}\n.loader {\n  width: 14px;\n  height: 14px;\n  border: 2px solid #0f0f0f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { BookingService } from '../../../services/booking.service';\nimport { IToast } from '../ir-toast/toast';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-autocomplete',\n  styleUrl: 'ir-autocomplete.css',\n  scoped: true,\n})\nexport class IrAutocomplete {\n  @Prop() duration: number = 300;\n  @Prop() placeholder: string = '';\n  @Prop() propertyId: number;\n  @Prop() isSplitBooking: boolean = false;\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\n  @Prop() name: string = '';\n  @Prop() inputId: string = v4();\n  @Prop() required: boolean = false;\n  @Prop() disabled: boolean = false;\n  @Prop() value: string;\n  @Prop() from_date: string = '';\n  @Prop() to_date: string = '';\n  @Prop() danger_border: boolean;\n  @Prop() testId: string;\n\n  @State() inputValue: string = '';\n  @State() data: any[] = [];\n  @State() selectedIndex: number = -1;\n  @State() isComboBoxVisible: boolean = false;\n  @State() isLoading: boolean = true;\n  @State() isItemSelected: boolean;\n  @State() inputFocused: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\n  @Event() inputCleared: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  @Element() el: HTMLElement;\n  private inputRef: HTMLInputElement;\n  private debounceTimer: any;\n  private bookingService = new BookingService();\n  private no_result_found = '';\n  componentWillLoad() {\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const dataSize = this.data.length;\n    const itemHeight = this.getHeightOfPElement();\n    if (dataSize > 0) {\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\n          this.adjustScrollPosition(itemHeight);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\n          this.adjustScrollPosition(itemHeight);\n          break;\n        case 'Enter':\n        case ' ':\n        case 'ArrowRight':\n          event.preventDefault();\n          this.selectItem(this.selectedIndex);\n          break;\n        case 'Escape':\n          this.inputRef?.blur();\n          this.isComboBoxVisible = false;\n          break;\n      }\n    }\n  }\n  getHeightOfPElement() {\n    const combobox = this.el.querySelector('.combobox');\n    if (combobox) {\n      const pItem = combobox.querySelector('p');\n      return pItem ? pItem.offsetHeight : 0;\n    }\n    return 0;\n  }\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\n    const combobox = this.el.querySelector('.combobox');\n    if (combobox) {\n      const margin = 2;\n      const itemTotalHeight = itemHeight + margin;\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\n      combobox.scrollTo({\n        top: newScrollTop,\n        behavior: 'auto',\n      });\n    }\n  }\n\n  selectItem(index) {\n    if (this.data[index]) {\n      this.isItemSelected = true;\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\n      this.inputValue = '';\n      this.resetCombobox();\n    }\n  }\n\n  debounceFetchData() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => {\n      this.fetchData();\n    }, this.duration);\n  }\n\n  async fetchData() {\n    try {\n      this.isLoading = true;\n      let data = [];\n      if (!this.isSplitBooking) {\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\n      } else {\n        if (this.inputValue.split(' ').length === 1) {\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\n        }\n      }\n      this.data = data;\n      if (!this.isComboBoxVisible) {\n        this.isComboBoxVisible = true;\n      }\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  handleInputChange(event: Event) {\n    this.inputValue = (event.target as HTMLInputElement).value;\n    if (this.inputValue) {\n      this.debounceFetchData();\n    } else {\n      clearTimeout(this.debounceTimer);\n      this.resetCombobox(false);\n    }\n  }\n\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isComboBoxVisible = false;\n    }\n  }\n  handleBlur() {\n    this.inputFocused = false;\n    setTimeout(() => {\n      if (this.isDropdownItem(document.activeElement)) {\n        return;\n      }\n      if (this.isSplitBooking) {\n        if (!this.isItemSelected) {\n          if (this.data.length > 0) {\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\n          } else {\n            if (this.inputValue !== '') {\n              this.toast.emit({\n                type: 'error',\n                description: '',\n                title: `The Booking #${this.inputValue} is not Available`,\n                position: 'top-right',\n              });\n              this.inputCleared.emit();\n            }\n          }\n          this.inputValue = '';\n          this.resetCombobox();\n        } else {\n          this.isItemSelected = false;\n        }\n      } else {\n        if (!this.isItemSelected) {\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\n          this.inputValue = '';\n          this.resetCombobox();\n        } else {\n          this.isItemSelected = false;\n        }\n      }\n    }, 200);\n  }\n  isDropdownItem(element) {\n    return element && element.closest('.combobox');\n  }\n\n  disconnectedCallback() {\n    clearTimeout(this.debounceTimer);\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\n    this.inputRef?.removeEventListener('click', this.selectItem);\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\n  }\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\n      this.selectItem(index);\n      event.preventDefault();\n    } else if (event.key === 'Escape') {\n      this.isComboBoxVisible = false;\n      this.inputRef?.blur();\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  renderDropdown() {\n    if (this.inputValue !== '') {\n      return (\n        <div class={`position-absolute dropdown-menu  rounded combobox`}>\n          {this.data?.map((d, index) => (\n            <p\n              role=\"button\"\n              class=\"dropdown-item\"\n              onKeyDown={e => this.handleItemKeyDown(e, index)}\n              data-selected={this.selectedIndex === index}\n              tabIndex={0}\n              onClick={() => this.selectItem(index)}\n            >\n              {this.isSplitBooking ? (\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\n              ) : (\n                <div class={'d-flex align-items-center flex-fill'}>\n                  <p class={'p-0 m-0'}>\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\n                  </p>\n                </div>\n              )}\n            </p>\n          ))}\n          {this.isLoading && (\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\n              <div class=\"loader\"></div>\n            </div>\n          )}\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\n        </div>\n      );\n    }\n  }\n  handleFocus() {\n    this.isComboBoxVisible = true;\n    this.inputFocused = true;\n  }\n  clearInput() {\n    this.inputValue = '';\n    this.resetCombobox();\n    this.inputCleared.emit(null);\n  }\n  resetCombobox(withblur: boolean = true) {\n    if (withblur) {\n      this.inputRef?.blur();\n    }\n    this.data = [];\n    this.selectedIndex = -1;\n    this.isComboBoxVisible = false;\n  }\n  render() {\n    return (\n      <Host>\n        <div class={'d-flex align-items-center '}>\n          <label data-state={this.inputFocused ? 'focused' : 'blured'} htmlFor={this.inputId} class={`form-control input-sm ${this.danger_border && 'border-danger'}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\n              />\n            </svg>\n          </label>\n          <input\n            data-testid={this.testId}\n            required={this.required}\n            disabled={this.disabled}\n            id={this.inputId}\n            onKeyDown={this.handleKeyDown.bind(this)}\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\n            type={this.type}\n            name={this.name}\n            value={this.value || this.inputValue}\n            placeholder={this.placeholder}\n            onBlur={this.handleBlur.bind(this)}\n            autoComplete=\"none\"\n            onInput={this.handleInputChange.bind(this)}\n            onFocus={this.handleFocus.bind(this)}\n            ref={el => (this.inputRef = el)}\n          />\n          {this.inputValue && (\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\n              <p class={'sr-only'}>clear input</p>\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n                  fill=\"currentColor\"\n                  fill-rule=\"evenodd\"\n                  clip-rule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          )}\n        </div>\n        {this.isComboBoxVisible && this.renderDropdown()}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n.combobox-menu {\n  max-height: 200px;\n  overflow: auto;\n}\n","import { ICountry } from '@/models/IBooking';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-country-picker',\n  styleUrl: 'ir-country-picker.css',\n  scoped: true,\n})\nexport class IrCountryPicker {\n  /**\n   * List of countries to display in the dropdown.\n   */\n  @Prop() countries: ICountry[] = [];\n\n  /**\n   * Currently selected country.\n   */\n  @Prop() country: ICountry;\n\n  /**\n   * Whether to show an error state on the input.\n   */\n  @Prop({ mutable: true }) error: boolean;\n\n  /**\n   * The property-associated country, shown separately if relevant.\n   */\n  @Prop() propertyCountry: ICountry;\n\n  /**\n   * The label to display for the input.\n   */\n  @Prop() label: string;\n\n  /**\n   * Test ID for automated testing.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Whether to automatically validate the input.\n   */\n  @Prop() autoValidate: boolean = false;\n\n  /**\n   * The current input value typed by the user.\n   */\n  @State() inputValue: string;\n\n  /**\n   * The currently selected country object.\n   */\n  @State() selectedCountry: ICountry;\n\n  /**\n   * Filtered list of countries based on the user's input.\n   */\n  @State() filteredCountries: ICountry[] = [];\n\n  /**\n   * Whether the input is currently being used for searching.\n   */\n  @State() searching: boolean = false;\n\n  /**\n   * Event emitted when a country is selected.\n   */\n  @Event() countryChange: EventEmitter<ICountry>;\n\n  private debounceTimeout: NodeJS.Timeout;\n\n  componentWillLoad() {\n    this.filteredCountries = [...this.countries];\n    if (this.country) {\n      this.inputValue = this.country.name;\n      this.selectedCountry = this.country;\n    }\n  }\n\n  @Watch('country')\n  handleCountryChange(newCountry: ICountry, oldCountry: ICountry) {\n    if (newCountry?.id !== oldCountry?.id) {\n      this.inputValue = this.country?.name;\n      this.selectedCountry = newCountry;\n    }\n  }\n  /**\n   * Filters the list of countries based on the current input.\n   */\n  private filterCountries() {\n    if (this.inputValue === '' && this.country) {\n      this.selectCountry(null);\n    }\n    clearTimeout(this.debounceTimeout);\n    this.debounceTimeout = setTimeout(() => {\n      if (!this.inputValue) {\n        this.filteredCountries = [...this.countries];\n      } else {\n        this.filteredCountries = this.countries.filter(c => c.name.toLowerCase().includes(this.inputValue.toLowerCase()));\n      }\n    }, 300);\n  }\n  /**\n   * Selects a country and emits the change event.\n   */\n  private selectCountry(c: ICountry | null) {\n    this.selectedCountry = c;\n    this.inputValue = c?.name;\n    this.filteredCountries = [...this.countries];\n    this.countryChange.emit(c);\n  }\n  /**\n   * Scrolls to the selected country in the dropdown for accessibility.\n   */\n  private scrollToSelected() {\n    setTimeout(() => {\n      const dropdownItem = document.querySelector(`.dropdown-item.active`);\n      if (dropdownItem) {\n        dropdownItem.scrollIntoView({ behavior: 'instant', block: 'center' });\n      }\n    }, 100);\n  }\n  render() {\n    const shouldShowPropertyCountry = this.filteredCountries.length > 0 && this.propertyCountry && (!this.searching || (this.searching && this.inputValue === ''));\n    return (\n      <form class=\"dropdown m-0 p-0\">\n        <ir-input-text\n          onTextChange={e => {\n            if (!this.searching) {\n              this.searching = true;\n            }\n            this.inputValue = e.detail;\n            this.filterCountries();\n          }}\n          testId={this.testId}\n          autoValidate={this.autoValidate}\n          label={this.label}\n          error={this.error}\n          placeholder=\"\"\n          class=\"m-0 p-0\"\n          value={this.inputValue}\n          id=\"dropdownMenuCombobox\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onInputFocus={() => this.scrollToSelected()}\n          onInputBlur={() => {\n            this.searching = false;\n            if (this.filteredCountries.length > 0 && this.inputValue && this.inputValue.trim() !== '') {\n              this.selectCountry(this.filteredCountries[0]);\n            }\n          }}\n        ></ir-input-text>\n\n        <div class=\"dropdown-menu combobox-menu\" aria-labelledby=\"dropdownMenuCombobox\">\n          {shouldShowPropertyCountry && (\n            <Fragment>\n              <button\n                type=\"button\"\n                class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === this.propertyCountry.id ? 'active' : ''}`}\n                onClick={() => {\n                  this.selectCountry(this.propertyCountry);\n                }}\n              >\n                <img src={this.propertyCountry.flag} alt={this.propertyCountry.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n                <p class=\"pl-1 m-0\">{this.propertyCountry.name}</p>\n              </button>\n              <div class=\"dropdown-divider\"></div>\n            </Fragment>\n          )}\n          {this.filteredCountries?.map(c => (\n            <button\n              key={c.id}\n              type=\"button\"\n              class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === c.id ? 'active' : ''}`}\n              onClick={() => {\n                this.selectCountry(c);\n              }}\n            >\n              <img src={c.flag} alt={c.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n              <p class=\"pl-1 m-0\">{c.name}</p>\n            </button>\n          ))}\n          {this.filteredCountries?.length === 0 && <p class=\"dropdown-item-text\">Invalid Country</p>}\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n  width: 100%;\n}\n.date-range-input {\n  width: 100%;\n}\n","import { Component, h, Element, Prop, Event, EventEmitter, Host, Watch, Method } from '@stencil/core';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-date-range',\n  styleUrl: 'ir-date-range.css',\n  scoped: true,\n})\nexport class IrDateRange {\n  @Element() private element: HTMLElement;\n  /**\n   * Start date for the date range.\n   */\n  @Prop() fromDate: Date;\n\n  /**\n   * End date for the date range.\n   */\n  @Prop() toDate: Date;\n\n  /**\n   * Single date selection value (used in single date picker mode).\n   */\n  @Prop() date: Date;\n\n  /**\n   * Defines which side the calendar opens to.\n   * Options: `'left'`, `'right'`, `'center'`.\n   */\n  @Prop() opens: 'left' | 'right' | 'center';\n\n  /**\n   * Whether to apply the selected range automatically without clicking 'Apply'.\n   */\n  @Prop() autoApply: boolean;\n\n  /**\n   * First day of the week (0 = Sunday, 1 = Monday, ...).\n   */\n  @Prop() firstDay: number = 1;\n\n  /**\n   * Month names shown in the calendar header.\n   */\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  /**\n   * Abbreviated names of the days of the week.\n   */\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n\n  /**\n   * Date format used in the input and picker.\n   */\n  @Prop() format: string = 'MMM DD, YYYY';\n\n  /**\n   * Separator string used between start and end dates.\n   */\n  @Prop() separator: string = ' - ';\n\n  /**\n   * Text shown on the Apply button.\n   */\n  @Prop() applyLabel: string = 'Apply';\n\n  /**\n   * Text shown on the Cancel button.\n   */\n  @Prop() cancelLabel: string = 'Cancel';\n\n  /**\n   * Label for the \"From\" date input.\n   */\n  @Prop() fromLabel: string = 'Form';\n\n  /**\n   * Label for the \"To\" date input.\n   */\n  @Prop() toLabel: string = 'To';\n\n  /**\n   * Label used for the custom date range option.\n   */\n  @Prop() customRangeLabel: string = 'Custom';\n\n  /**\n   * Label for the week column in the calendar.\n   */\n  @Prop() weekLabel: string = 'W';\n\n  /**\n   * Disables the date range input when true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Enables single date selection mode.\n   */\n  @Prop() singleDatePicker = false;\n\n  /**\n   * Minimum selectable date.\n   */\n  @Prop() minDate: string | Date;\n\n  /**\n   * Maximum selectable date.\n   */\n  @Prop() maxDate: string | Date;\n\n  /**\n   * Maximum range span (e.g., `{ days: 240 }`).\n   */\n  @Prop() maxSpan: moment.DurationInputArg1 = { days: 240 };\n\n  /**\n   * Emits when a new date range is selected.\n   *\n   * Example:\n   * ```tsx\n   * <ir-date-range onDateChanged={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() dateChanged: EventEmitter<{\n    start: moment.Moment;\n    end: moment.Moment;\n  }>;\n\n  private openDatePickerTimeout: NodeJS.Timeout;\n  private dateRangeInput: HTMLElement;\n  componentWillLoad() {\n    if (!document.getElementById('ir-daterangepicker-style')) {\n      const style = document.createElement('style');\n      style.id = 'ir-daterangepicker-style';\n      style.textContent = `\n        .daterangepicker {\n          margin-top: 14px;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n  componentDidLoad() {\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\n    this.initializeDateRangePicker();\n    this.updateDateRangePickerDates();\n  }\n  disconnectedCallback() {\n    if (this.openDatePickerTimeout) {\n      clearTimeout(this.openDatePickerTimeout);\n    }\n    $(this.dateRangeInput).data('daterangepicker').remove();\n  }\n  @Watch('minDate')\n  handleMinDateChange() {\n    $(this.dateRangeInput).data('daterangepicker').remove();\n    this.initializeDateRangePicker();\n  }\n  @Watch('date')\n  datePropChanged() {\n    this.updateDateRangePickerDates();\n  }\n  /**\n   * Opens the date picker programmatically.\n   *\n   * Example:\n   * ```ts\n   * const el = document.querySelector('ir-date-range');\n   * await el.openDatePicker();\n   * ```\n   */\n  @Method()\n  async openDatePicker() {\n    this.openDatePickerTimeout = setTimeout(() => {\n      this.dateRangeInput.click();\n    }, 20);\n  }\n  /**\n   * Updates the current dates displayed in the picker\n   * (used when props change externally).\n   */\n  private updateDateRangePickerDates() {\n    const picker = $(this.dateRangeInput).data('daterangepicker');\n    if (!picker) {\n      console.error('Date range picker not initialized.');\n      return;\n    }\n\n    // Adjust how dates are set based on whether it's a single date picker or range picker.\n    if (this.singleDatePicker) {\n      const newDate = this.date ? moment(this.date) : moment();\n      picker.setStartDate(newDate);\n      picker.setEndDate(newDate); // For single date picker, start and end date might be the same.\n    } else {\n      const newStartDate = this.fromDate ? moment(this.fromDate) : moment();\n      const newEndDate = this.toDate ? moment(this.toDate) : newStartDate.clone().add(1, 'days');\n      picker.setStartDate(newStartDate);\n      picker.setEndDate(newEndDate);\n    }\n  }\n  /**\n   * Initializes the date range picker using jQuery plugin with given props.\n   */\n  private initializeDateRangePicker() {\n    $(this.dateRangeInput).daterangepicker(\n      {\n        singleDatePicker: this.singleDatePicker,\n        opens: this.opens,\n        startDate: moment(this.fromDate),\n        endDate: moment(this.toDate),\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\n        maxSpan: this.maxSpan,\n        autoApply: this.autoApply,\n        locale: {\n          format: this.format,\n          separator: this.separator,\n          applyLabel: this.applyLabel,\n          cancelLabel: this.cancelLabel,\n          fromLabel: this.fromLabel,\n          toLabel: this.toLabel,\n          customRangeLabel: this.customRangeLabel,\n          weekLabel: this.weekLabel,\n          daysOfWeek: this.daysOfWeek,\n          monthNames: this.monthNames,\n          firstDay: this.firstDay,\n        },\n      },\n      (start, end) => {\n        this.dateChanged.emit({ start, end });\n      },\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <input class=\"date-range-input\" type=\"button\" disabled={this.disabled} />\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.input-container {\n  display: flex;\n  align-items: center;\n  padding: 0 !important;\n}\n.input-container:focus-within {\n  border-color: #1e9ff2;\n}\n.border-theme {\n  border-color: #cacfe7;\n}\n.input-container input {\n  flex: 1;\n  border: 0;\n}\n.input-container input:focus {\n  outline: none;\n}\n.dropdown-trigger {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: white;\n  border: 0;\n  border-right: 1px solid #cacfe7;\n}\n.ir-dropdown-container {\n  position: absolute;\n  z-index: 1000;\n  bottom: -30px;\n  width: 100%;\n  left: 0;\n  background: white;\n}\n.input-container label {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0 5px;\n}\n.flag {\n  height: 1rem;\n  aspect-ratio: 4/3;\n  border-radius: 3px;\n}\n.is-invalid {\n  border-color: #ff4961;\n}\n.phone_prefix_label {\n  padding: 0 0.5rem;\n  margin: 0;\n}\n:host {\n  /* ========= Floating label ========= */\n  /** @prop --ir-floating-label-fg: Resting label color. */\n  --ir-floating-label-fg: #6c757d;\n\n  /** @prop --ir-floating-label-fg-focus: Floated/active label color. */\n  --ir-floating-label-fg-focus: #495057;\n\n  /** @prop --ir-floating-label-bg: Background behind the floated label “chip”. */\n  --ir-floating-label-bg: #fff;\n\n  /** @prop --ir-floating-label-scale: Scale applied to the label when floated. */\n  --ir-floating-label-scale: 0.88;\n\n  /** @prop --ir-floating-label-float-translateY: translateY used when label floats (relative to its top=0). */\n  --ir-floating-label-float-translateY: -70%;\n\n  /** @prop --ir-floating-label-resting-offset-inline: Inline offset for the resting label (LTR=left, RTL=right). */\n  --ir-floating-label-resting-offset-inline: 0.9rem;\n\n  /** @prop --ir-floating-phone-input-radius: Radius of the select. */\n  --ir-floating-phone-input-radius: 0.21rem;\n\n  /** @prop --ir-floating-phone-input-height: Fixed height for the input element. */\n  --ir-floating-phone-input-height: 2rem;\n  /* existing design tokens you referenced */\n  --ir-danger: #dc3545;\n  --ir-disabled-fg: #9aa0a6;\n}\n\n:host .input-container.has-floating {\n  position: relative;\n  padding-top: 0.9rem;\n}\n\n:host .floating-label {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  position: absolute;\n  padding: 0 0.4rem;\n  z-index: 10;\n  color: var(--ir-floating-label-fg);\n  background: white;\n  transition: transform 120ms ease, color 120ms ease, top 120ms ease, background-color 120ms ease, opacity 120ms ease;\n  opacity: 0.95;\n  line-height: 1;\n  white-space: nowrap;\n}\n:host .floating-label:dir(rtl) {\n  right: 95px;\n}\n:host .floating-label:dir(ltr) {\n  left: 95px;\n}\n\n:host .floating-label.active {\n  top: 0;\n  transform: translateY(var(--ir-floating-label-float-translateY)) scale(var(--ir-floating-label-scale));\n  background: var(--ir-floating-label-bg);\n  color: var(--ir-floating-label-fg-focus);\n  font-size: 12px;\n  padding: 0;\n  opacity: 0.95;\n}\n\n/* :host .input-container.has-floating input {\n  padding-top: 0.9rem;\n}\n\n:host .input-container.has-floating .dropdown-trigger:focus ~ .floating-label,\n:host .input-container.has-floating .dropdown-trigger:hover ~ .floating-label {\n  opacity: 0.9;\n} */\n","import { ICountry } from '@/components';\nimport { BookingService } from '@/services/booking.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-phone-input',\n  styleUrl: 'ir-phone-input.css',\n  scoped: true,\n})\nexport class IrPhoneInput {\n  @Element() el: HTMLElement;\n  /**\n   * Label displayed next to the phone input.\n   */\n  @Prop() label: string;\n\n  /**\n   * Initial phone number value.\n   */\n  @Prop() value: string = '';\n\n  /**\n   * Disables the phone input when true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, styles the input to indicate an error state.\n   */\n  @Prop() error: boolean = false;\n\n  /**\n   * Auth token used by the booking service (if needed).\n   */\n  @Prop() token: string;\n\n  /**\n   * Two-letter language code used for country fetching.\n   */\n  @Prop() language: string;\n\n  /**\n   * Default country ID used if no phone prefix is set.\n   */\n  @Prop() default_country: number = null;\n\n  /**\n   * If provided, sets the phone prefix and updates selected country.\n   */\n  @Prop() phone_prefix: string | null = null;\n\n  /**\n   * Placeholder text for the input.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Country list, used to populate prefix and dropdown.\n   * If not provided, fetched from the booking service.\n   */\n  @Prop({ mutable: true }) countries: ICountry[] = [];\n\n  /**\n   * Identifier for test automation.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Floating label text that appears inside the input and “floats” above\n   * when the field is focused or has a value.\n   *\n   * - If provided, a floating label will be rendered inside the input container.\n   * - If you omit this prop but set `label`, the old left-side static label is used.\n   * - If you provide both `label` and `floatingLabel`, only the floating label is shown.\n   *\n   * Accessibility:\n   * - The floating label is tied to the input via `aria-labelledby`.\n   * - You can still set `placeholder`; the label will not be replaced by it.\n   *\n   * Examples:\n   * ```tsx\n   * <ir-phone-input floating-label label=\"Phone\" />\n   * ```\n   */\n  @Prop({ attribute: 'floating-label', reflect: true }) floatingLabel: boolean;\n\n  /**\n   * Emits when the user changes the phone number.\n   * Emits `{ phone_prefix, mobile }` object.\n   *\n   * Example:\n   * ```tsx\n   * <ir-phone-input onTextChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\n\n  /**\n   * Tracks current user input value.\n   */\n  @State() inputValue: string = '';\n\n  /**\n   * Tracks visibility of the country dropdown.\n   */\n  @State() isDropdownVisible: boolean = false;\n\n  /**\n   * Currently selected country (based on prefix or ID).\n   */\n  @State() currentCountry: ICountry;\n\n  /** Internal: input focus state for floating label. */\n  @State() hasFocus: boolean = false;\n  // private cmp_countries: ICountry[] = [];\n\n  private bookingService: BookingService = new BookingService();\n  /** Internal: ids for label/input pairing (a11y). */\n  private inputId = `ir-phone-input-${Math.random().toString(36).slice(2)}`;\n  private labelId = `ir-phone-input-label-${Math.random().toString(36).slice(2)}`;\n\n  async componentWillLoad() {\n    if (this.countries.length === 0) {\n      const countries = await this.bookingService.getCountries(this.language);\n      this.countries = countries;\n    }\n    if (this.phone_prefix) {\n      this.setCountryFromPhonePrefix();\n    } else {\n      if (this.default_country) {\n        this.setCurrentCountry(this.default_country);\n      }\n    }\n    this.inputValue = this.value;\n  }\n  @Watch('value')\n  handleValueChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.inputValue = newValue;\n    }\n  }\n  @Watch('phone_prefix')\n  handlePhoneChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.setCountryFromPhonePrefix();\n    }\n  }\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isDropdownVisible = false;\n    }\n  }\n  /**\n   * Handles user input:\n   * - Removes all characters except numbers and \"+\"\n   * - Updates state and emits new phone number\n   */\n  private handleInputChange(e: InputEvent) {\n    let inputElement = e.target as HTMLInputElement;\n    let inputValue = inputElement.value;\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\n    inputElement.value = inputValue;\n    this.inputValue = inputValue;\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\n  }\n  /**\n   * Sets the current country based on `phone_prefix` prop or country ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCountryFromPhonePrefix() {\n    let country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\n    if (!country) {\n      country = this.countries.find(c => c.id.toString() === this.phone_prefix);\n      if (!country) {\n        return;\n      }\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  /**\n   * Sets the current country by its ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCurrentCountry(id: number) {\n    const country = this.countries.find(country => country.id === id);\n    if (!country) {\n      throw new Error('Invalid country id');\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  render() {\n    const useFloating = this.floatingLabel && this.label;\n    const showSideLabel = !!this.label && !useFloating;\n    const isActive = this.hasFocus || !!this.inputValue; // float when focused or has value\n    return (\n      <Host>\n        <div class=\"form-group mr-0\">\n          {/* <p class=\"mb-0\">Phone</p> */}\n          <div class=\"input-group row m-0 p-0 position-relative\">\n            {showSideLabel && (\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\n                <label class={`input-group-text border-theme flex-grow-1 text-dark`}>{this.label}</label>\n              </div>\n            )}\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\n              <button type=\"button\" onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\n                {this.currentCountry ? <img src={this.currentCountry?.flag} class=\"flag\" /> : <p class=\"p-0 m-0 \">{locales.entries.Lcz_Select}</p>}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\n                </svg>\n              </button>\n\n              <p class={'phone_prefix_label'}>{this.currentCountry?.phone_prefix}</p>\n              {useFloating && (\n                <label id={this.labelId} class={`floating-label ${isActive ? 'active' : ''}`} htmlFor={this.inputId}>\n                  {this.label}\n                </label>\n              )}\n              <input\n                data-testid={this.testId}\n                maxLength={14}\n                type=\"text\"\n                placeholder={this.placeholder}\n                required\n                value={this.inputValue}\n                disabled={this.disabled}\n                onInput={e => this.handleInputChange(e)}\n                onFocus={() => {\n                  this.hasFocus = true;\n                }}\n                onBlur={() => {\n                  this.hasFocus = false;\n                }}\n              />\n            </div>\n            {this.isDropdownVisible && (\n              <div class=\"ir-dropdown-container\">\n                <ir-combobox\n                  onComboboxValueChange={e => {\n                    this.setCurrentCountry(+e.detail.data);\n                    this.isDropdownVisible = false;\n                  }}\n                  class=\"bg-white\"\n                  autoFocus\n                  placeholder=\"Search country\"\n                  data={this.countries.map(c => ({\n                    id: c.id.toString(),\n                    name: `${c.name} (${c.phone_prefix})`,\n                    image: c.flag,\n                  }))}\n                ></ir-combobox>\n              </div>\n            )}\n          </div>\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  --ir-input-border-color: #cacfe7;\n  flex: 1 1 0%;\n}\n\n:host .input-group-text {\n  border-color: var(--ir-input-border-color);\n}\n:host .form-control,\n.currency-label {\n  font-size: 14px !important;\n}\n\n.ir-bl-lbl-none,\n.ir-bl-input-none {\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n.rate-input:read-only {\n  background: white !important;\n}\n.ir-br-lbl-none,\n.ir-br-input-none {\n  border-top-right-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n}\n.ir-br-none {\n  border-right: none;\n}\n.ir-bl-none {\n  border-left: none;\n}\n\n.rate-input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n  padding: 0 !important;\n}\n:host([class='special-style']) .rate-input {\n  background: black !important;\n}\n.rate-input {\n  font-size: 0.875rem;\n  line-height: 0;\n  padding: 0;\n  height: 0;\n  box-sizing: border-box;\n  border-left: 0;\n  padding-left: 0px !important;\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n\n.currency-label.with-label {\n  border-radius: 0;\n}\n\n.currency-label {\n  box-sizing: border-box;\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.875rem;\n  height: 2rem;\n  background: white;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  pointer-events: none;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.currency-label.disabled,\n.rate-input:disabled {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n\n.price-input-group:focus-within .currency-label {\n  border-top: 1px solid #1e9ff2;\n  border-bottom: 1px solid #1e9ff2;\n  border-left: 1px solid #1e9ff2;\n}\n:host([data-state='error']) .currency-label,\n:host([data-state='error']) .rate-input,\n.error {\n  border-color: var(--red, #ff4961) !important;\n}\n.price-input:focus {\n  border-right-width: 1px !important;\n}\n\n.is-invalid {\n  background-image: none !important;\n}\n","import { Component, Element, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { ZodType } from 'zod';\nimport IMask, { InputMask } from 'imask';\n@Component({\n  tag: 'ir-price-input',\n  styleUrl: 'ir-price-input.css',\n  scoped: true,\n})\nexport class IrPriceInput {\n  @Element() el: HTMLIrPriceInputElement;\n\n  /** The label for the input, optional */\n  @Prop() label?: string;\n  /** The readonly for the input, optional */\n  @Prop() readOnly?: boolean;\n\n  /** Extra classnames for the input, optional */\n  @Prop() inputStyle?: string;\n\n  /** Extra classnames for the label, optional */\n  @Prop() labelStyle?: string;\n\n  /** The disabled for the input, optional */\n  @Prop() disabled?: boolean;\n\n  /** The Currency for the input, optional */\n  @Prop() currency?: string;\n\n  /** The AutoValidate for the input, optional */\n  @Prop() autoValidate?: boolean = true;\n\n  /** Indicates the key to wrap the value (e.g., 'price' or 'cost') */\n  @Prop() wrapKey?: string;\n\n  /**\n   * A Zod schema for validating the input\n   * Example: z.coerce.number()\n   */\n  @Prop() zod?: ZodType<any, any>;\n\n  /** Placeholder text for the input */\n  @Prop() placeholder: string = '';\n\n  /** Initial value for the input */\n  @Prop({ mutable: true }) value: string = '';\n\n  /** Whether the input is required */\n  @Prop() required: boolean = false;\n\n  /** Minimum value for the price */\n  @Prop() minValue?: number;\n\n  /** Maximum value for the price */\n  @Prop() maxValue?: number;\n\n  /** Unique id for testing */\n  @Prop() testId?: string;\n\n  /** Error*/\n  @Prop({ mutable: true }) error: boolean;\n  /**\n   * Extra class names applied to the outer <fieldset> wrapper.\n   * Useful for spacing (e.g., margins/padding), width/layout utilities,\n   * or theming the whole input group from the outside.\n   * Example: \"w-100 mb-2 d-flex align-items-center\"\n   */\n  @Prop() containerClassname: string;\n\n  /**\n   * Extra class names applied to the label container (<div class=\"input-group-prepend\">)\n   * that wraps the <label>. Use this to control label width, alignment,\n   * spacing, or visibility at different breakpoints.\n   * Example: \"min-w-120 text-nowrap pe-2\"\n   */\n  @Prop() labelContainerClassname: string;\n\n  /** Emits the current value on change */\n  @Event() textChange: EventEmitter<string>;\n\n  /** Emits the current value on blur */\n  @Event() inputBlur: EventEmitter<string>;\n\n  /** Emits the current value on focus */\n  @Event() inputFocus: EventEmitter<void>;\n\n  private id: string;\n\n  private opts = {\n    mask: Number,\n    scale: 2,\n    radix: '.',\n    mapToRadix: [','],\n    normalizeZeros: true,\n    padFractionalZeros: true,\n    thousandsSeparator: ',',\n  };\n  private mask: InputMask<any>;\n  private inputRef: HTMLInputElement;\n\n  componentWillLoad() {\n    if (this.el.id) {\n      this.id = this.el.id;\n    } else {\n      this.id = v4();\n    }\n  }\n\n  componentDidLoad() {\n    if (!this.mask) {\n      this.initializeMask();\n    }\n  }\n\n  private initializeMask() {\n    // Create options object with min/max if provided\n    const maskOpts = {\n      ...this.opts,\n    };\n\n    if (this.minValue !== undefined) {\n      maskOpts['min'] = this.minValue;\n    }\n\n    if (this.maxValue !== undefined) {\n      maskOpts['max'] = this.maxValue;\n    }\n\n    this.mask = IMask(this.inputRef, maskOpts);\n\n    // Set initial value if provided\n    if (this.value) {\n      this.mask.value = this.value;\n    }\n\n    this.mask.on('accept', () => {\n      const isEmpty = this.inputRef.value.trim() === '' || this.mask.unmaskedValue === '';\n      if (isEmpty) {\n        this.value = '';\n        this.textChange.emit(null);\n      } else {\n        this.value = this.mask.unmaskedValue;\n        this.textChange.emit(this.value);\n      }\n    });\n  }\n\n  private hasSpecialClass(className: string): boolean {\n    return this.el.classList.contains(className);\n  }\n\n  private validateInput(value: string): void {\n    if (!this.autoValidate) {\n      return;\n    }\n    if (this.zod) {\n      try {\n        this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value); // Validate the value using the Zod schema\n        this.error = false; // Clear the error if valid\n      } catch (error) {\n        console.log(error);\n        this.error = true; // Set the error message\n      }\n    }\n  }\n\n  private handleInputChange = (): void => {\n    // The value is already being updated by the mask's 'accept' event\n    // Just validate here if needed\n    this.validateInput(this.value);\n  };\n\n  private handleBlur = (): void => {\n    this.validateInput(this.value);\n\n    // Format to 2 decimal places on blur\n    if (this.value) {\n      const numValue = parseFloat(this.value);\n      this.value = numValue.toFixed(2);\n\n      // Update the mask value to show the formatted value\n      if (this.mask) {\n        this.mask.value = this.value;\n      }\n    }\n\n    // Emit the blur event\n    this.inputBlur.emit(this.value);\n  };\n\n  private handleFocus = (): void => {\n    // Emit the focus event\n    this.inputFocus.emit();\n  };\n\n  render() {\n    return (\n      <fieldset class={`${this.containerClassname} input-group price-input-group m-0 p-0 `}>\n        {this.label && (\n          <div class={`input-group-prepend ${this.labelContainerClassname}`}>\n            <span\n              class={`input-group-text \n                ${this.labelStyle}\n              ${this.hasSpecialClass('ir-bl-lbl-none') ? 'ir-bl-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-lbl-none') ? 'ir-br-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-none') ? 'ir-br-none' : ''} \n              ${this.hasSpecialClass('ir-bl-none') ? 'ir-bl-none' : ''} \n              `}\n            >\n              <label class={'p-0 m-0 '} htmlFor={this.id}>\n                {this.label}\n              </label>\n            </span>\n          </div>\n        )}\n        <div class=\"position-relative has-icon-left rate-input-container\">\n          {this.currency && (\n            <div>\n              <span class={`input-group-text ${this.disabled ? 'disabled' : ''} currency-label ${this.error ? 'error' : ''} ${this.label ? 'with-label' : ''}`}>\n                {this.currency}\n              </span>\n            </div>\n          )}\n          <input\n            ref={el => (this.inputRef = el)}\n            data-testid={this.testId}\n            disabled={this.disabled}\n            id={this.id}\n            class={`form-control input-sm rate-input \n              ${this.inputStyle}\n              ${this.hasSpecialClass('ir-br-input-none') ? 'ir-br-input-none' : ''} \n              ${this.hasSpecialClass('ir-bl-input-none') ? 'ir-bl-input-none' : ''} \n              ${this.error ? 'error' : ''} py-0 m-0 ${this.currency ? 'ir-bl-none' : ''}`}\n            onInput={this.handleInputChange}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            type=\"text\"\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            aria-label={this.el.ariaLabel ?? 'price-input'}\n            aria-describedby={this.el.ariaDescription ?? 'price-input'}\n          />\n        </div>\n      </fieldset>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}