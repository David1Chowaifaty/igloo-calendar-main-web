{"version":3,"names":["irPhoneInputCss","IrPhoneInput","constructor","hostRef","this","value","disabled","error","default_country","phone_prefix","countries","inputValue","isDropdownVisible","bookingService","BookingService","componentWillLoad","length","getCountries","language","setCountryFromPhonePrefix","setCurrentCountry","handleValueChange","newValue","oldValue","handlePhoneChange","handleDocumentClick","event","target","el","contains","handleInputChange","e","inputElement","replace","textChange","emit","_a","currentCountry","mobile","country","find","c","id","toString","Object","assign","Error","render","h","Host","key","class","label","onClick","src","flag","locales","entries","Lcz_Select","xmlns","height","width","viewBox","d","_b","testId","maxLength","type","placeholder","required","onInput","onComboboxValueChange","detail","data","autoFocus","map","name","image","irTextareaCss","IrTextArea","rows","cols","text","variant","labelWidth","handleAriaInvalidChange","connectedCallback","disconnectedCallback","style","styles","onChange","textareaClassname"],"sources":["src/components/ui/ir-phone-input/ir-phone-input.css?tag=ir-phone-input&encapsulation=scoped","src/components/ui/ir-phone-input/ir-phone-input.tsx","src/components/ui/ir-textarea/ir-textarea.css?tag=ir-textarea&encapsulation=scoped","src/components/ui/ir-textarea/ir-textarea.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\n.input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 !important;\r\n}\r\n.input-container:focus-within {\r\n  border-color: #1e9ff2;\r\n}\r\n.border-theme {\r\n  border-color: #cacfe7;\r\n}\r\n.input-container input {\r\n  flex: 1;\r\n  border: 0;\r\n}\r\n.input-container input:focus {\r\n  outline: none;\r\n}\r\n.dropdown-trigger {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  background: white;\r\n  border: 0;\r\n  border-right: 1px solid #cacfe7;\r\n}\r\n.ir-dropdown-container {\r\n  position: absolute;\r\n  z-index: 1000;\r\n  bottom: -30px;\r\n  width: 100%;\r\n  left: 0;\r\n  background: white;\r\n}\r\n.input-container label {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0 5px;\r\n}\r\n.flag {\r\n  height: 1rem;\r\n  aspect-ratio: 4/3;\r\n  border-radius: 3px;\r\n}\r\n.is-invalid {\r\n  border-color: #ff4961;\r\n}\r\n.phone_prefix_label {\r\n  padding: 0 0.5rem;\r\n  margin: 0;\r\n}\r\n","import { ICountry } from '@/components';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-phone-input',\r\n  styleUrl: 'ir-phone-input.css',\r\n  scoped: true,\r\n})\r\nexport class IrPhoneInput {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label: string;\r\n  @Prop() value: string = '';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() error: boolean = false;\r\n  @Prop() token: string;\r\n  @Prop() language: string;\r\n  @Prop() default_country: number = null;\r\n  @Prop() phone_prefix: string | null = null;\r\n  @Prop() placeholder: string;\r\n  @Prop({ mutable: true }) countries: ICountry[] = [];\r\n  @Prop() testId: string;\r\n\r\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\r\n  @State() inputValue: string = '';\r\n  @State() isDropdownVisible: boolean = false;\r\n  @State() currentCountry: ICountry;\r\n\r\n  // private cmp_countries: ICountry[] = [];\r\n\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    if (this.countries.length === 0) {\r\n      const countries = await this.bookingService.getCountries(this.language);\r\n      this.countries = countries;\r\n    }\r\n    if (this.phone_prefix) {\r\n      this.setCountryFromPhonePrefix();\r\n    } else {\r\n      if (this.default_country) {\r\n        this.setCurrentCountry(this.default_country);\r\n      }\r\n    }\r\n    this.inputValue = this.value;\r\n  }\r\n  @Watch('value')\r\n  handleValueChange(newValue, oldValue) {\r\n    if (newValue !== oldValue) {\r\n      this.inputValue = newValue;\r\n    }\r\n  }\r\n  @Watch('phone_prefix')\r\n  handlePhoneChange(newValue, oldValue) {\r\n    if (newValue !== oldValue) {\r\n      this.setCountryFromPhonePrefix();\r\n    }\r\n  }\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isDropdownVisible = false;\r\n    }\r\n  }\r\n  handleInputChange(e: InputEvent) {\r\n    let inputElement = e.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\r\n    inputElement.value = inputValue;\r\n    this.inputValue = inputValue;\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\r\n  }\r\n  private setCountryFromPhonePrefix() {\r\n    let country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\r\n    if (!country) {\r\n      country = this.countries.find(c => c.id.toString() === this.phone_prefix);\r\n      if (!country) {\r\n        return;\r\n      }\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  setCurrentCountry(id: number) {\r\n    const country = this.countries.find(country => country.id === id);\r\n    if (!country) {\r\n      throw new Error('Invalid country id');\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"form-group mr-0\">\r\n          {/* <p class=\"mb-0\">Phone</p> */}\r\n          <div class=\"input-group row m-0 p-0 position-relative\">\r\n            {this.label && (\r\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\r\n                <label class={`input-group-text  border-theme flex-grow-1 text-dark  `}>{this.label}</label>\r\n              </div>\r\n            )}\r\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\r\n              <button onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\r\n                {this.currentCountry ? <img src={this.currentCountry?.flag} class=\"flag\" /> : <p class=\"p-0 m-0 \">{locales.entries.Lcz_Select}</p>}\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\r\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\r\n                </svg>\r\n              </button>\r\n\r\n              <p class={'phone_prefix_label'}>{this.currentCountry?.phone_prefix}</p>\r\n              <input\r\n                data-testid={this.testId}\r\n                maxLength={14}\r\n                type=\"text\"\r\n                placeholder={this.placeholder}\r\n                required\r\n                value={this.inputValue}\r\n                disabled={this.disabled}\r\n                onInput={e => this.handleInputChange(e)}\r\n              />\r\n            </div>\r\n            {this.isDropdownVisible && (\r\n              <div class=\"ir-dropdown-container\">\r\n                <ir-combobox\r\n                  onComboboxValueChange={e => {\r\n                    this.setCurrentCountry(+e.detail.data);\r\n                    this.isDropdownVisible = false;\r\n                  }}\r\n                  class=\"bg-white\"\r\n                  autoFocus\r\n                  placeholder=\"Search country\"\r\n                  data={this.countries.map(c => ({\r\n                    id: c.id.toString(),\r\n                    name: `${c.name} (${c.phone_prefix})`,\r\n                    image: c.flag,\r\n                  }))}\r\n                ></ir-combobox>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".prepend-textarea {\r\n  padding: 0 !important ;\r\n}\r\n.ta-prepend-text {\r\n  width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-textarea',\r\n  styleUrl: 'ir-textarea.css',\r\n  scoped: true,\r\n})\r\nexport class IrTextArea {\r\n  @Prop() rows = 3;\r\n  @Prop() cols = 5;\r\n  @Prop() text = '';\r\n  @Prop() label = '<label>';\r\n  @Prop() placeholder = '<placeholder>';\r\n  @Prop() value = '';\r\n  @Prop() maxLength: number = 250;\r\n  @Prop() textareaClassname: string;\r\n  @Prop() variant: 'default' | 'prepend' = 'default';\r\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\r\n  @Prop() styles: { [key: string]: string };\r\n  @Prop() testId: string;\r\n\r\n  @State() error = false;\r\n\r\n  @Event() textChange: EventEmitter<string>;\r\n\r\n  @Watch('aria-invalid')\r\n  handleAriaInvalidChange(newValue) {\r\n    this.error = newValue === 'true';\r\n  }\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  render() {\r\n    if (this.variant === 'prepend') {\r\n      return (\r\n        <fieldset class=\"input-group\">\r\n          <div class={`input-group-prepend col-${this.labelWidth} prepend-textarea`}>\r\n            <span class=\"input-group-text ta-prepend-text\">{this.label}</span>\r\n          </div>\r\n          <textarea\r\n            data-testid={this.testId}\r\n            value={this.value}\r\n            class={`form-control`}\r\n            style={{ height: '7rem', ...this.styles }}\r\n            maxLength={this.maxLength}\r\n            onChange={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\r\n            aria-label={this.label}\r\n          ></textarea>\r\n        </fieldset>\r\n      );\r\n    }\r\n    return (\r\n      <div class={'form-group'}>\r\n        <label>{this.label}</label>\r\n        <textarea\r\n          data-testid={this.testId}\r\n          style={this.styles}\r\n          maxLength={this.maxLength}\r\n          rows={this.rows}\r\n          value={this.value}\r\n          class={`form-control ${this.textareaClassname} ${this.error ? 'border-danger' : ''}`}\r\n          placeholder={this.placeholder}\r\n          onInput={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\r\n        ></textarea>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}