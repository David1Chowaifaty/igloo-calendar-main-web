import{T as t}from"./p-5872a6ca.js";import{c as e}from"./p-25f3ac98.js";import{c as n}from"./p-0e167209.js";import{a as o}from"./p-4456199b.js";class a extends t{async getExposedChannels(){try{const t=this.getToken();if(t!==null){const{data:e}=await o.post(`/Get_Exposed_Channels?Ticket=${t}`,{});if(e.ExceptionMsg!==""){throw new Error(e.ExceptionMsg)}const a=e.My_Result;n.channels=[...a];return e}}catch(t){console.log(t);throw new Error(t)}}async getExposedConnectedChannels(t){try{const e=this.getToken();if(e!==null){const{data:a}=await o.post(`/Get_Exposed_Connected_Channels?Ticket=${e}`,{property_id:t});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}n.connected_channels=[...a.My_Result]}}catch(t){console.log(t);throw new Error(t)}}async saveConnectedChannel(t){try{const a={id:n.channel_id,title:n.channel_settings.hotel_title,is_active:n.is_active,channel:{id:n.selectedChannel.id,name:n.selectedChannel.name},property:{id:e.id,name:e.name},map:n.mappedChannels,is_remove:t};const r=this.getToken();if(!r){throw new Error("Invalid Token")}const{data:s}=await o.post(`/Handle_Connected_Channel?Ticket=${r}`,a);return s}catch(t){console.error(t)}}}export{a as C};
//# sourceMappingURL=p-f6786373.js.map