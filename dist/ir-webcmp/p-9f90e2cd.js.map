{"version":3,"names":["ChannelService","getExposedChannels","data","axios","post","ExceptionMsg","Error","results","My_Result","channels_data","channels","error","console","log","getExposedConnectedChannels","property_id","connected_channels","saveConnectedChannel","id","is_remove","body","channel_id","title","channel_settings","hotel_title","is_active","channel","selectedChannel","name","property","calendar_data","map","mappedChannels"],"sources":["src/services/channel.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\nimport channels_data from '@/stores/channel.store';\nimport axios from 'axios';\n\nexport class ChannelService {\n  public async getExposedChannels() {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Channels`, {});\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = data.My_Result;\n      channels_data.channels = [...results];\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getExposedConnectedChannels(property_id: number) {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Connected_Channels`, { property_id });\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      channels_data.connected_channels = [...data.My_Result];\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async saveConnectedChannel(id: number = null, is_remove: boolean) {\n    try {\n      let body: any = {};\n      if (is_remove) {\n        body = {\n          id,\n          is_remove,\n        };\n      } else {\n        body = {\n          id: channels_data.channel_id,\n          title: channels_data.channel_settings.hotel_title,\n          is_active: channels_data.is_active,\n          channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\n          property: { id: calendar_data.id, name: calendar_data.name },\n          map: channels_data.mappedChannels,\n          is_remove,\n        };\n      }\n\n      const { data } = await axios.post(`/Handle_Connected_Channel`, body);\n\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n"],"mappings":"6GAIaA,EACJ,wBAAMC,GACX,IACE,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,wBAAyB,IAC3D,GAAIF,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,MAAME,EAAUL,EAAKM,UACrBC,EAAcC,SAAW,IAAIH,GAC7B,OAAOL,C,CACP,MAAOS,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIL,MAAMK,E,EAGb,iCAAMG,CAA4BC,GACvC,IACE,MAAMb,KAAEA,SAAeC,EAAMC,KAAK,kCAAmC,CAAEW,gBACvE,GAAIb,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvBI,EAAcO,mBAAqB,IAAId,EAAKM,U,CAC5C,MAAOG,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIL,MAAMK,E,EAGb,0BAAMM,CAAqBC,EAAa,KAAMC,GACnD,IACE,IAAIC,EAAY,GAChB,GAAID,EAAW,CACbC,EAAO,CACLF,KACAC,Y,KAEG,CACLC,EAAO,CACLF,GAAIT,EAAcY,WAClBC,MAAOb,EAAcc,iBAAiBC,YACtCC,UAAWhB,EAAcgB,UACzBC,QAAS,CAAER,GAAIT,EAAckB,gBAAgBT,GAAIU,KAAMnB,EAAckB,gBAAgBC,MACrFC,SAAU,CAAEX,GAAIY,EAAcZ,GAAIU,KAAME,EAAcF,MACtDG,IAAKtB,EAAcuB,eACnBb,Y,CAIJ,MAAMjB,KAAEA,SAAeC,EAAMC,KAAK,4BAA6BgB,GAE/D,OAAOlB,C,CACP,MAAOS,GACPC,QAAQD,MAAMA,E","ignoreList":[]}