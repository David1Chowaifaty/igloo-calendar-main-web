{"version":3,"names":["irButtonCss","IrButtonStyle0","IrButton","constructor","hostRef","this","btn_color","size","textSize","btn_block","btn_disabled","btn_type","isLoading","btn_id","v4","variant","visibleBackgroundOnHover","iconPosition","renderContentAsHtml","handleButtonAnimation","e","buttonEl","detail","stopImmediatePropagation","stopPropagation","classList","remove","add","bounce","render","disabled","h","id","class","btn_styles","ref","el","onClick","clickHandler","emit","type","name","icon_name","blockClass","style","btnStyle","icon_style","text","innerHTML","labelStyle","irComboboxCss","IrComboboxStyle0","IrCombobox","data","duration","autoFocus","input_id","selectedIndex","actualIndex","isComboBoxVisible","inputValue","filteredData","componentShouldAutoFocus","componentWillLoad","componentDidLoad","focusInput","watchHandler","newValue","oldValue","handleDocumentClick","event","target","contains","disconnectedCallback","clearTimeout","debounceTimer","blurTimeout","_a","inputRef","removeEventListener","handleBlur","_b","selectItem","_c","handleKeyDown","_d","handleFocus","dataSize","length","key","preventDefault","adjustScrollPosition","blur","requestAnimationFrame","focus","selectedItem","querySelector","scrollIntoView","block","index","isItemSelected","comboboxValueChange","resetCombobox","debounceFetchData","setTimeout","fetchData","withBlur","filter","d","toLowerCase","startsWith","error","console","log","handleInputChange","value","handleItemKeyDown","renderDropdown","occupancy","map","onMouseEnter","role","onKeyDown","tabIndex","image","src","Fragment","xmlns","height","width","viewBox","fill","locales","entries","Lcz_NoResultsFound","handleSubmit","onSubmit","bind","placeholder","onBlur","onInput","onFocus","onlineResources","isCSS","link","IrCommon","extraResources","resources","parseRefs","initializeStyles","hrefsChanged","push","JSON","parse","appendTag","tagName","attributes","tag","document","createElement","selectorParts","Object","keys","forEach","attr","setAttribute","selector","join","existingTag","head","appendChild","res","href","rel","isJS","Host","irDeleteModalCss","IrDeleteModalStyle0","IrDeleteModal","isOpen","selectedId","loadingBtn","housekeepingService","HouseKeepingService","closeModal","modalClosed","openModal","btnClickHandler","editExposedHKM","user","newAssignedUnits","assigned_units","u","hkm_id","is_to_assign","unit_id","manageExposedAssignedUnitToHKM","housekeeping_store","default_properties","property_id","__rest$1","resetData","tabindex","Lcz_AssignUnitsTo","Lcz_ConfirmDeletion","onClickHandler","firstOption","Lcz_nobody","selectedValue","onSelectChange","LabelAvailable","hk_criteria","housekeepers","hk","m","toString","sort","a","b","localeCompare","Lcz_Cancel","Lcz_Confirm","irHkTeamCss","IrHkTeamStyle0","tableCss","IrHkTeamStyle1","IrHkTeam","currentTrigger","renderAssignedUnits","Lcz_Assign","renderCurrentTrigger","slot","isEdit","handleCloseSideBar","handleDeletion","deletionTimout","modal","assigned","total","un_assigned","units_assignments","label","Lcz_HousekeepingTeam","justifyContent","Lcz_TotalUnits","Lcz_Assigned","Lcz_Unassigned","Lcz_AsAnOption","Lcz_Name","Lcz_Mobile","Lcz_Username","Lcz_UnitsAssigned","title","Lcz_CreateHousekeeper","onIconClickHandler","gap","trigger","content","slice","note","phone_prefix","mobile","username","Lcz_EditHousekeeper","__rest","icon","Lcz_DeleteHousekeeper","showCloseButton","open","onIrSidebarToggle","irHkUnassignedUnitsCss","IrHkUnassignedUnitsStyle0","sheetCss","IrHkUnassignedUnitsStyle1","IrHkUnassignedUnits","renderAgain","assignedUnits","Map","assignUnit","hk_id","checked","userUnit","find","unit","delete","set","assignment","has","assignUnits","values","closeSideBar","renderRooms","unassigned_units","calendar_data","roomsInfo","roomType","is_active","physicalrooms","physical_room","taken","housekeeper","assignedRoom","get","onCheckChange","displayContext","Lcz_RoomName","Lcz_HousekeeperName","Lcz_Actions","isRequestPending","irHkUserCss","IrHkUserStyle0","IrHkUserStyle1","IrHkUser","autoValidate","userInfo","password","errors","showPasswordValidation","token","language","housekeeperSchema","z","object","string","min","max","nullable","refine","CONSTANTS","PASSWORD","test","message","async","UserService","checkUserExistence","UserName","getDefaultProperties","assign","updateUserField","addUser","toValidateUserInfo","parseAsync","ZodError","issues","err","path","usermame","generateUserName","Lcz_EditHousekeeperProfile","Lcz_CreateHousekeeperProfile","testId","zod","pick","wrapKey","onTextChange","onInputBlur","maxLength","default_country","country","Lcz_Note","_e","asyncParse","_f","errorMessage","_g","_j","_h","Lcz_UsernameAlreadyExists","undefined","_k","Lcz_Password","_l","onInputFocus","Lcz_Save","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","ticket","roomService","RoomService","houseKeepingService","propertyService","PropertyService","Token","baseUrl","setBaseUrl","setToken","initializeApp","handleResetData","getExposedHKSetup","propertyid","ticketChanged","propertyId","propertyData","getExposedProperty","aname","p","is_backend","include_sales_rate_plans","My_Result","updateHKStore","requests","housekeeping_enabled","fetchLanguage","Promise","all","selectedCleaningFrequency","cleaning_frequency","code","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","flag","toast","position","description","saveCleaningFrequency","setExposedCleaningFrequency","Lcz_HouseKeepingAndCheckInSetup","borderShown","Lcz_CheckInOutGuestsAutomatically","showFirstOption","is_automatic_check_in_out","Lcz_YesAsPerPropertyPolicy","Lcz_NoIWillDoItManually","Lcz_CleaningFrequency","cleaning_frequencies","v","autoClose","onConfirmModal","iconAvailable","onCancelModal","leftBtnText","rightBtnText","leftBtnColor","rightBtnColor","modalTitle","Lcz_Confirmation","modalBody","irIconCss","IrIconStyle0","IrIcon","iconClickHandler","irIconsCss","IrIconsStyle0","IrIcons","svgPath","icons","color","svgClassName","irInputTextCss","IrInputTextStyle0","IrInputText","inputStyles","readonly","submitted","inputStyle","labelPosition","labelBackground","labelColor","labelBorder","labelWidth","inputFocused","mask","initMask","handleMaskChange","handleValueChange","validateInput","maskInstance","IMask","on","isEmpty","trim","unmaskedValue","textChange","forceValidation","updateErrorState","maskedValue","inputBlur","htmlFor","inputForcedStyle","readOnly","inputFocus","required","autoComplete","inputContainerStyle","clearBaseStyles","irInterceptorCss","IrInterceptorStyle0","IrInterceptor","handledEndpoints","suppressToastEndpoints","isShown","isUnassignedUnit","endpointsCount","isPageLoadingStopped","handleStopPageLoading","setupAxiosInterceptors","axios","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","split","isHandledEndpoint","includes","config","extractedUrl","interceptor_requests","params","ExceptionCode","handleOtpResponse","ExceptionMsg","handleResponseExceptions","InterceptorError","showModal","email","baseOTPUrl","methodName","body","METHOD_NAME","requestUrl","pendingConfig","resolve","reject","pendingResolve","pendingReject","otpModal","shouldSuppressToast","handleOtpFinished","ev","otp","cancelResp","cancelled","status","statusText","headers","Error","retryConfig","resp","onOtpFinished","irLoadingScreenCss","IrLoadingScreenStyle0","IrLoadingScreen","irModalCss","IrModalStyle0","IrModal","rightBtnActive","leftBtnActive","btnPosition","item","cancelModal","confirmModal","showTitle","irOtpCss","IrOtpStyle0","IrOtp","secure","numbersOnly","otpValues","inputRefs","handleInput","input","replace","emitChanges","handlePaste","pastedData","clipboardData","getData","i","Math","idx","nextEmptyIndex","findIndex","val","select","Array","defaultValue","setValue","handleLengthChange","newLength","oldLength","otpValue","otpChange","every","otpComplete","clear","valueArray","_","inputmode","maxlength","autocomplete","onPaste","irOtpModalCss","IrOtpModalStyle0","IrOtpModal","resendTimer","showResend","otpLength","timer","systemService","SystemService","tokenService","otpVerificationSchema","nonempty","handleOtpComplete","fetchLocale","handleTicketChange","handleKeyDownChange","dialogRef","resetState","startTimer","focusFirstInput","close","removeAttribute","clearTimer","getToken","isInitializing","timerInterval","window","setInterval","clearInterval","r","first","verifyOtp","validateOTP","OTP","otpFinished","resendOtp","resendOTP","handleCancelClicked","location","reload","method","Lcz_VerifyYourIdentity","Lcz_WeSentYuoVerificationCode","onOtpComplete","Lcz_ResendCode","String","padStart","Lcz_VerifyNow","irPasswordValidatorCss","IrPasswordValidatorStyle0","IrPasswordValidator","handlePasswordChange","passwordValidationChange","validLength","hasUppercase","hasLowercase","hasDigit","hasSpecialChar","isValid","irPhoneInputCss","IrPhoneInputStyle0","IrPhoneInput","countries","isDropdownVisible","bookingService","BookingService","getCountries","setCountryFromPhonePrefix","setCurrentCountry","handlePhoneChange","inputElement","currentCountry","c","Lcz_Select","onComboboxValueChange","irPopoverCss","IrPopoverStyle0","IrPopover","irPopoverLeft","placement","initialized","initializePopover","$","popoverTrigger","popover","html","whiteSpace","overflow","textOverflow","cursor","irSelectCss","IrSelectStyle0","IrSelect","selectStyle","submited","select_id","initial","valid","count","watchHandler2","selectEl","handleSelectChange","checkValidity","selectChange","className","selectContainerStyle","selectForcedStyles","selectStyles","selected","irSidebarCss","IrSidebarStyle0","IrSidebar","side","applyStyles","handleSidebarStylesChange","handleOpenChange","handleBodyOverflow","toggleSidebar","preventClose","beforeSidebarClose","irSidebarToggle","property","sidebarStyles","hasOwnProperty","sidebarRef","irSpinnerCss","IrSpinnerStyle0","IrSpinner","initStyles","handleSpinnerSizeChange","handleSpinnerBorderWidthChange","handleSpinnerUnitChange","handleSpinnerColorChange","applyCssElement","borderWidth","setProperty","irSwitchCss","IrSwitchStyle0","IrSwitch","_id","generateRandomId","switchRoot","result","characters","charactersLength","charAt","floor","random","handleCheckChange","checkChange","switchId","irTextareaCss","IrTextareaStyle0","IrTextArea","rows","cols","handleAriaInvalidChange","styles","onChange","textareaClassname","irTitleCss","IrTitleStyle0","IrTitle","handleJustifyContentChange","irToastCss","IrToastStyle0","IrToast","toasts","onToast","showToast","toastrOptions","positionClass","closeButton","timeOut","toastr","success","requirementCheckCss","RequirementCheckStyle0","RequirementCheck","requirement"],"sources":["src/components/ui/ir-button/ir-button.css?tag=ir-button&encapsulation=scoped","src/components/ui/ir-button/ir-button.tsx","src/components/ui/ir-combobox/ir-combobox.css?tag=ir-combobox&encapsulation=scoped","src/components/ui/ir-combobox/ir-combobox.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-housekeeping/ir-delete-modal/ir-delete-modal.css?tag=ir-delete-modal","src/components/ir-housekeeping/ir-delete-modal/ir-delete-modal.tsx","src/components/ir-housekeeping/ir-hk-team/ir-hk-team.css?tag=ir-hk-team&encapsulation=scoped","src/common/table.css?tag=ir-hk-team&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-team/ir-hk-team.tsx","src/components/ir-housekeeping/ir-hk-unassigned-units/ir-hk-unassigned-units.css?tag=ir-hk-unassigned-units&encapsulation=scoped","src/common/sheet.css?tag=ir-hk-unassigned-units&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-unassigned-units/ir-hk-unassigned-units.tsx","src/components/ir-housekeeping/ir-hk-user/ir-hk-user.css?tag=ir-hk-user&encapsulation=scoped","src/common/sheet.css?tag=ir-hk-user&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-user/ir-hk-user.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx","src/components/ui/ir-icon/ir-icon.css?tag=ir-icon&encapsulation=scoped","src/components/ui/ir-icon/ir-icon.tsx","src/components/ui/ir-icons/ir-icons.css?tag=ir-icons&encapsulation=scoped","src/components/ui/ir-icons/ir-icons.tsx","src/components/ui/ir-input-text/ir-input-text.css?tag=ir-input-text&encapsulation=scoped","src/components/ui/ir-input-text/ir-input-text.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ui/ir-modal/ir-modal.css?tag=ir-modal&encapsulation=scoped","src/components/ui/ir-modal/ir-modal.tsx","src/components/ir-otp-modal/ir-otp/ir-otp.css?tag=ir-otp&encapsulation=scoped","src/components/ir-otp-modal/ir-otp/ir-otp.tsx","src/components/ir-otp-modal/ir-otp-modal.css?tag=ir-otp-modal","src/components/ir-otp-modal/ir-otp-modal.tsx","src/components/ir-password-validator/ir-password-validator.css?tag=ir-password-validator&encapsulation=scoped","src/components/ir-password-validator/ir-password-validator.tsx","src/components/ui/ir-phone-input/ir-phone-input.css?tag=ir-phone-input&encapsulation=scoped","src/components/ui/ir-phone-input/ir-phone-input.tsx","src/components/ui/ir-popover/ir-popover.css?tag=ir-popover","src/components/ui/ir-popover/ir-popover.tsx","src/components/ui/ir-select/ir-select.css?tag=ir-select&encapsulation=scoped","src/components/ui/ir-select/ir-select.tsx","src/components/ui/ir-sidebar/ir-sidebar.css?tag=ir-sidebar&encapsulation=shadow","src/components/ui/ir-sidebar/ir-sidebar.tsx","src/components/ui/ir-spinner/ir-spinner.css?tag=ir-spinner&encapsulation=shadow","src/components/ui/ir-spinner/ir-spinner.tsx","src/components/ui/ir-switch/ir-switch.css?tag=ir-switch&encapsulation=scoped","src/components/ui/ir-switch/ir-switch.tsx","src/components/ui/ir-textarea/ir-textarea.css?tag=ir-textarea&encapsulation=scoped","src/components/ui/ir-textarea/ir-textarea.tsx","src/components/ir-title/ir-title.css?tag=ir-title&encapsulation=scoped","src/components/ir-title/ir-title.tsx","src/components/ui/ir-toast/ir-toast.css?tag=ir-toast&encapsulation=scoped","src/components/ui/ir-toast/ir-toast.tsx","src/components/ir-password-validator/requirement-check/requirement-check.css?tag=requirement-check&encapsulation=scoped","src/components/ir-password-validator/requirement-check/requirement-check.tsx"],"sourcesContent":[":host {\n  --icon-button-color: #6b6f82;\n  --icon-button-hover-color: #104064;\n}\n\n.button-icon {\n  padding: 0;\n  margin-top: 0;\n}\n\n.button-icon[data-state='loading'] {\n  display: none;\n}\n\n.button-text {\n  padding: 0 5px;\n}\n\n.bounce-3 {\n  animation: bounce 1s 1;\n}\n.btn-link {\n  color: var(--blue, #1e9ff2);\n}\n.ir-button-class {\n  display: inline-flex !important;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n}\n.btn-outline {\n  background: transparent;\n  border: 1px solid #104064;\n  color: #104064;\n}\n.btn-outline:hover,\n.btn-outline:active {\n  background: #104064;\n  color: white;\n}\n.icon-button {\n  all: unset;\n  box-sizing: border-box;\n  border-radius: 0.25rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--icon-button-color);\n  padding: 0.2rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.icon-button:hover {\n  color: var(--icon-button-hover-color);\n}\n.icon-button:hover.hovered_bg {\n  background: var('--ir-icon-bg-hover', #f6f6f6);\n}\n.icon-button:disabled {\n  pointer-events: none;\n}\n\n.icon-loader {\n  margin: 0;\n  padding: 0;\n  width: var(--icon-size, 1.25rem);\n  height: var(--icon-size, 1.25rem);\n  border-radius: 50%;\n  background: radial-gradient(farthest-side, var(--icon-button-color) 94%, #0000) top/2px 2px no-repeat, conic-gradient(#0000 30%, var(--icon-button-color));\n  -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 2px), var(--icon-button-color) 0);\n  mask: radial-gradient(farthest-side, #0000 calc(100% - 2px), var(--icon-button-color) 0);\n  animation: l13 1s infinite linear;\n}\n\n.btn_loader {\n  width: 15px;\n  height: 10px;\n  --c: no-repeat linear-gradient(#ffffff 0 0);\n  background: var(--c) 0% 50%, var(--c) 50% 50%, var(--c) 100% 50%;\n  background-size: 20% 100%;\n  animation: l1 1s infinite linear;\n}\n\n@keyframes l13 {\n  100% {\n    transform: rotate(1turn);\n  }\n}\n\n@keyframes l1 {\n  0% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n  33% {\n    background-size: 20% 10%, 20% 100%, 20% 100%;\n  }\n  50% {\n    background-size: 20% 100%, 20% 10%, 20% 100%;\n  }\n  66% {\n    background-size: 20% 100%, 20% 100%, 20% 10%;\n  }\n  100% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n}\n@keyframes bounce {\n  0%,\n  100% {\n    transform: scale(1);\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n  }\n  50% {\n    transform: scale(1.2);\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n}\n@keyframes ping {\n  75%,\n  100% {\n    transform: scale(1.2);\n  }\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Prop, Event, EventEmitter, h, Listen, Method } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { TIcons } from '../ir-icons/icons';\n\n@Component({\n  tag: 'ir-button',\n  styleUrl: 'ir-button.css',\n  scoped: true,\n})\nexport class IrButton {\n  /**\n   * The name of the button, used for identification purposes.\n   */\n  @Prop() name: string;\n  /**\n   * The text content displayed inside the button.\n   */\n  @Prop() text: string;\n\n  /**\n   * The color theme of the button.\n   */\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'outline' | 'link' = 'primary';\n\n  /**\n   * The size of the button.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * The size of the text inside the button.\n   */\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * Whether the button should expand to the full width of its container.\n   */\n  @Prop() btn_block = true;\n\n  /**\n   * Disables the button when set to true.\n   */\n  @Prop() btn_disabled = false;\n\n  /**\n   * The button type attribute (`button`, `submit`, or `reset`).\n   */\n  @Prop() btn_type = 'button';\n\n  /**\n   * Displays a loading indicator when true and disables the button.\n   */\n  @Prop() isLoading: boolean = false;\n\n  /**\n   * Additional custom class names for the button.\n   */\n  @Prop() btn_styles: string;\n\n  /**\n   * A unique identifier for the button instance.\n   */\n  @Prop() btn_id: string = v4();\n\n  /**\n   * Visual variant of the button: either standard (`default`) or icon-only (`icon`).\n   */\n  @Prop() variant: 'default' | 'icon' = 'default';\n\n  /**\n   * The name of the icon to display.\n   */\n  @Prop() icon_name: TIcons;\n\n  /**\n   * If true, applies a visible background when hovered.\n   */\n  @Prop() visibleBackgroundOnHover: boolean = false;\n\n  /**\n   * Position of the icon relative to the button text.\n   */\n  @Prop() iconPosition: 'left' | 'right' = 'left';\n\n  /**\n   * Custom style object for the icon.\n   */\n  @Prop() icon_style: any;\n\n  /**\n   * Custom inline styles for the button element.\n   */\n  @Prop() btnStyle: { [key: string]: string };\n\n  /**\n   * Custom inline styles for the label/text inside the button.\n   */\n  @Prop() labelStyle: { [key: string]: string };\n\n  /**\n   * If true, renders the text property as raw HTML inside the button.\n   */\n  @Prop() renderContentAsHtml: boolean = false;\n\n  /**\n   * Emits a custom click event when the button is clicked.\n   */\n  @Event({ bubbles: true, composed: true }) clickHandler: EventEmitter<any>;\n\n  private buttonEl: HTMLButtonElement;\n\n  @Listen('animateIrButton', { target: 'body' })\n  handleButtonAnimation(e: CustomEvent) {\n    if (!this.buttonEl || e.detail !== this.btn_id) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.buttonEl.classList.remove('bounce-3');\n    void this.buttonEl.offsetWidth;\n    this.buttonEl.classList.add('bounce-3');\n  }\n\n  /**\n   * Triggers a bounce animation on the button.\n   */\n  @Method()\n  async bounce() {\n    this.buttonEl.classList.remove('bounce-3');\n    void this.buttonEl.offsetWidth;\n    this.buttonEl.classList.add('bounce-3');\n  }\n\n  render() {\n    const disabled = this.btn_disabled || this.isLoading;\n    if (this.variant === 'icon') {\n      return (\n        <button\n          id={this.btn_id}\n          class={`icon-button ${this.btn_styles} ${this.visibleBackgroundOnHover ? 'hovered_bg' : ''}`}\n          ref={el => (this.buttonEl = el)}\n          onClick={() => this.clickHandler.emit()}\n          type={this.btn_type}\n          disabled={disabled}\n        >\n          {this.isLoading ? <span class=\"icon-loader\"></span> : <ir-icons class={'m-0 p-0'} name={this.icon_name}></ir-icons>}\n        </button>\n      );\n    }\n    let blockClass = this.btn_block ? 'btn-block' : '';\n    return (\n      <button\n        id={this.btn_id}\n        ref={el => (this.buttonEl = el)}\n        onClick={() => this.clickHandler.emit()}\n        class={`btn btn-${this.btn_color} ${this.btn_styles} ir-button-class  btn-${this.size} text-${this.textSize} ${blockClass}`}\n        type={this.btn_type}\n        style={this.btnStyle}\n        disabled={disabled}\n      >\n        {this.icon_name && this.iconPosition === 'left' && <ir-icons name={this.icon_name} style={this.icon_style}></ir-icons>}\n        {this.text &&\n          (this.renderContentAsHtml ? (\n            <span class=\"button-text m-0\" innerHTML={this.text} style={this.labelStyle}></span>\n          ) : (\n            <span style={this.labelStyle} class=\"button-text m-0\">\n              {this.text}\n            </span>\n          ))}\n        {this.isLoading ? <div class=\"btn_loader m-0 p-0\"></div> : this.iconPosition === 'right' && <ir-icons style={this.icon_style} name={this.icon_name}></ir-icons>}\n      </button>\n    );\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\nul {\n  position: absolute;\n  box-sizing: border-box;\n  margin: 0;\n  margin-top: 2px;\n  width: max-content;\n  max-height: 80px;\n  border-radius: 0.21rem;\n  z-index: 10000;\n  padding: 1px;\n  background: white;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  padding: 5px 0;\n  max-height: 250px;\n  overflow-y: auto;\n  min-width: 100%;\n}\nul[data-position='bottom-right'] {\n  right: 0;\n}\n.list-item-image {\n  height: 1rem;\n  aspect-ratio: 4/3;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n.dropdown-item {\n  cursor: pointer;\n}\nul li,\nspan,\nloader-container {\n  padding: 0px 16px;\n  margin: 0px;\n  margin-top: 2px;\n  width: 100%;\n  border-radius: 2px;\n}\nul li {\n  cursor: pointer;\n}\nul li {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 3px;\n}\nul li p {\n  margin: 0;\n  padding: 0;\n}\nul li:hover {\n  background: #f4f5fa;\n}\n\nul li[data-selected],\nul li[data-selected]:hover {\n  color: #fff;\n  text-decoration: none;\n  background-color: #666ee8;\n}\n","import { IToast } from '@/components';\nimport locales from '@/stores/locales.store';\nimport { Component, Prop, State, h, Element, Event, EventEmitter, Listen, Watch, Fragment } from '@stencil/core';\nimport { v4 } from 'uuid';\n\nexport type ComboboxItem = { id: string; name: string; image?: string; occupancy?: number };\n@Component({\n  tag: 'ir-combobox',\n  styleUrl: 'ir-combobox.css',\n  scoped: true,\n})\nexport class IrCombobox {\n  @Element() el: HTMLElement;\n\n  /**\n   * The list of items displayed in the combobox.\n   */\n  @Prop({ mutable: true }) data: ComboboxItem[] = [];\n\n  /**\n   * Debounce duration in milliseconds for search input.\n   */\n  @Prop() duration: number = 300;\n\n  /**\n   * Placeholder text for the input field.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * The current value of the input field.\n   */\n  @Prop() value: string;\n\n  /**\n   * Disables the combobox input when set to true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Autofocuses the input field when true.\n   */\n  @Prop() autoFocus: boolean = false;\n\n  /**\n   * Unique identifier for the input element.\n   */\n  @Prop() input_id: string = v4();\n\n  /**\n   * The index of the currently selected item.\n   */\n  @State() selectedIndex: number = -1;\n\n  /**\n   * Tracks the actual focused index during keyboard navigation.\n   */\n  @State() actualIndex: number = -1;\n\n  /**\n   * Whether the dropdown is visible.\n   */\n  @State() isComboBoxVisible: boolean = false;\n\n  /**\n   * Indicates if the component is in loading state.\n   */\n  @State() isLoading: boolean = true;\n\n  /**\n   * Whether a selection was made before blur.\n   */\n  @State() isItemSelected: boolean;\n\n  /**\n   * The current input value typed by the user.\n   */\n  @State() inputValue: string = '';\n\n  /**\n   * Filtered list based on user input.\n   */\n  @State() filteredData: ComboboxItem[] = [];\n\n  /**\n   * Determines if the input should automatically receive focus.\n   */\n  @State() componentShouldAutoFocus: boolean = false;\n\n  /**\n   * Emitted when a selection is made from the combobox.\n   */\n  @Event({ bubbles: true, composed: true }) comboboxValueChange: EventEmitter<{ key: string; data: unknown }>;\n\n  /**\n   * Emitted when the input is cleared by the user.\n   */\n  @Event() inputCleared: EventEmitter<null>;\n\n  /**\n   * Emits a toast notification.\n   */\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  private inputRef: HTMLInputElement;\n  private debounceTimer: any;\n  private blurTimeout: NodeJS.Timeout;\n\n  componentWillLoad() {\n    this.filteredData = this.data;\n  }\n\n  componentDidLoad() {\n    if (this.autoFocus) {\n      this.focusInput();\n    }\n  }\n\n  @Watch('isComboBoxVisible')\n  watchHandler(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue && newValue === true) {\n      this.focusInput();\n    }\n  }\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isComboBoxVisible = false;\n    }\n  }\n  disconnectedCallback() {\n    clearTimeout(this.debounceTimer);\n    clearTimeout(this.blurTimeout);\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\n    this.inputRef?.removeEventListener('click', this.selectItem);\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\n  }\n\n  /**\n   * Handles keyboard navigation and selection inside the combobox.\n   */\n  private handleKeyDown(event: KeyboardEvent) {\n    const dataSize = this.filteredData.length;\n    if (dataSize > 0) {\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\n          this.adjustScrollPosition();\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\n          this.adjustScrollPosition();\n          break;\n        // case 'Enter':\n        // case ' ':\n        // case 'ArrowRight':\n        //   event.preventDefault();\n        //   this.selectItem(this.selectedIndex);\n        //   break;\n        case 'Escape':\n          event.stopImmediatePropagation();\n          event.stopPropagation();\n          this.inputRef?.blur();\n          this.isComboBoxVisible = false;\n          break;\n      }\n    }\n  }\n  /**\n   * Focuses the combobox input element.\n   */\n  private focusInput() {\n    requestAnimationFrame(() => {\n      this.inputRef?.focus();\n    });\n  }\n  /**\n   * Scrolls the selected item into view when navigating.\n   */\n  private adjustScrollPosition() {\n    const selectedItem = this.el?.querySelector(`[data-selected]`);\n    if (!selectedItem) return;\n    selectedItem.scrollIntoView({\n      block: 'center',\n    });\n  }\n  /**\n   * Selects an item at the given index.\n   */\n  private selectItem(index) {\n    if (this.filteredData[index]) {\n      this.isItemSelected = true;\n      this.comboboxValueChange.emit({ key: 'select', data: this.filteredData[index].id });\n      this.inputValue = '';\n      this.resetCombobox();\n      if (this.autoFocus) {\n        this.focusInput();\n      }\n    }\n  }\n  /**\n   * Debounces calls to the fetch data function.\n   */\n  private debounceFetchData() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => {\n      this.fetchData();\n    }, this.duration);\n  }\n  /**\n   * Makes the dropdown visible on input focus.\n   */\n  private handleFocus() {\n    this.isComboBoxVisible = true;\n  }\n  /**\n   * Resets the combobox state and optionally blurs the input.\n   */\n  private resetCombobox(withBlur: boolean = true) {\n    if (withBlur) {\n      this.inputRef?.blur();\n    }\n    this.selectedIndex = -1;\n    this.isComboBoxVisible = false;\n  }\n  /**\n   * Filters data based on input value.\n   */\n  private async fetchData() {\n    try {\n      this.isLoading = true;\n      this.filteredData = this.data.filter(d => d.name.toLowerCase().startsWith(this.inputValue));\n      this.selectedIndex = -1;\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  /**\n   * Updates input value and triggers search.\n   */\n  private handleInputChange(event: Event) {\n    this.inputValue = (event.target as HTMLInputElement).value;\n    if (this.inputValue) {\n      this.debounceFetchData();\n    } else {\n      this.filteredData = this.data;\n    }\n  }\n\n  /**\n   * Clears input or resets dropdown if nothing selected on blur.\n   */\n  private handleBlur() {\n    this.blurTimeout = setTimeout(() => {\n      if (!this.isItemSelected) {\n        this.inputValue = '';\n        this.resetCombobox();\n      } else {\n        this.isItemSelected = false;\n      }\n    }, 300);\n  }\n\n  /**\n   * Handles key navigation on individual items.\n   */\n  private handleItemKeyDown(event: KeyboardEvent, index: number) {\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\n      this.selectItem(index);\n      event.preventDefault();\n    } else if (event.key === 'Escape') {\n      this.isComboBoxVisible = false;\n      this.inputRef?.blur();\n      event.preventDefault();\n    }\n  }\n  /**\n   * Renders the dropdown list.\n   */\n  private renderDropdown() {\n    if (!this.isComboBoxVisible) {\n      return null;\n    }\n    return (\n      <ul data-position={this.filteredData.length > 0 && this.filteredData[0].occupancy ? 'bottom-right' : 'bottom-left'}>\n        {this.filteredData?.map((d, index) => (\n          <li\n            onMouseEnter={() => (this.selectedIndex = index)}\n            role=\"button\"\n            key={d.id}\n            onKeyDown={e => this.handleItemKeyDown(e, index)}\n            data-selected={this.selectedIndex === index}\n            tabIndex={0}\n            onClick={() => this.selectItem(index)}\n          >\n            {d.image && <img src={d.image} class={'list-item-image'}></img>}\n            <p>{d.name}</p>\n            {d.occupancy && (\n              <Fragment>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n                  <path\n                    fill={'currentColor'}\n                    d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\"\n                  />\n                </svg>\n                <p>{d.occupancy}</p>\n              </Fragment>\n            )}\n          </li>\n        ))}\n\n        {this.filteredData.length === 0 && !this.isLoading && <span class={'text-center'}>{locales.entries.Lcz_NoResultsFound}</span>}\n      </ul>\n    );\n  }\n  /**\n   * Handles form submission by selecting the highlighted item.\n   */\n  private handleSubmit(e: Event) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('object');\n    if (!this.filteredData.length) {\n      return;\n    }\n    this.selectItem(this.selectedIndex === -1 ? 0 : this.selectedIndex);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)} class=\"m-0 p-0\">\n        <input\n          type=\"text\"\n          class=\"form-control bg-white\"\n          id={this.input_id}\n          ref={el => (this.inputRef = el)}\n          disabled={this.disabled}\n          value={this.value}\n          placeholder={this.placeholder}\n          onKeyDown={this.handleKeyDown.bind(this)}\n          onBlur={this.handleBlur.bind(this)}\n          onInput={this.handleInputChange.bind(this)}\n          onFocus={this.handleFocus.bind(this)}\n          autoFocus={this.autoFocus}\n        />\n\n        {this.renderDropdown()}\n      </form>\n    );\n  }\n}\n","import { IrOnlineResource } from './models';\nexport const onlineResources: IrOnlineResource[] = [\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\n  // },\n  {\n    isCSS: true,\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\n  },\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\n  },\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\n  },\n  // {\n  //   isCSS: true,\n  //   link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\n  // },\n\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\n  // },\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\n  // },\n];\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { IrOnlineResource } from '../../common/models';\nimport { onlineResources } from '../../common/ir.common.resources';\n\n@Component({\n  tag: 'ir-common',\n})\nexport class IrCommon {\n  @Prop({ reflect: true }) extraResources: string = '';\n  @State() resources: IrOnlineResource[] = onlineResources;\n  componentWillLoad() {\n    this.parseRefs();\n  }\n\n  componentDidLoad() {\n    this.initializeStyles();\n  }\n\n  @Watch('extraResources')\n  hrefsChanged() {\n    this.parseRefs();\n    this.initializeStyles();\n  }\n\n  private parseRefs() {\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\n  }\n\n  private appendTag(tagName: string, attributes: any) {\n    const tag = document.createElement(tagName);\n    const selectorParts = [];\n\n    Object.keys(attributes).forEach(attr => {\n      tag.setAttribute(attr, attributes[attr]);\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\n    });\n\n    const selector = `${tagName}${selectorParts.join('')}`;\n    const existingTag = document.querySelector(selector);\n\n    if (!existingTag) {\n      document.head.appendChild(tag);\n    }\n  }\n\n  private initializeStyles() {\n    this.resources.forEach(res => {\n      if (res.isCSS) {\n        this.appendTag('link', {\n          href: res.link,\n          rel: 'stylesheet',\n          type: 'text/css',\n        });\n      }\n      if (res.isJS) {\n        this.appendTag('script', {\n          src: res.link,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",".backdropModal {\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  pointer-events: none;\n}\n.backdropModal.active {\n  cursor: pointer;\n  opacity: 1 !important;\n  pointer-events: all;\n}\n\n.ir-modal[data-state='opened'] {\n  opacity: 1;\n\n  visibility: visible;\n  pointer-events: all;\n  transition: all 0.3s ease-in-out;\n}\n.ir-alert-content {\n  padding: 10px;\n  background: white;\n  border-radius: 5px;\n}\n.modal {\n  z-index: 1001 !important;\n}\n\n.modal-dialog {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n}\n.ir-alert-footer {\n  gap: 10px;\n}\n.ir-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1050;\n  width: 90%;\n  max-width: 32rem;\n  overflow: hidden;\n  outline: 0;\n  opacity: 0;\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n  visibility: hidden;\n  pointer-events: none;\n}\n\n.ir-modal.active {\n  opacity: 1;\n  transform: translate(-50%, 0);\n  visibility: visible;\n  pointer-events: all;\n  transition: all 0.3s ease-in-out;\n}\n","import { Component, EventEmitter, Listen, Method, Prop, State, h, Event } from '@stencil/core';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { IHouseKeepers } from '@/models/housekeeping';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-delete-modal',\n  styleUrl: 'ir-delete-modal.css',\n  shadow: false,\n})\nexport class IrDeleteModal {\n  @Prop() user: IHouseKeepers;\n\n  @State() isOpen: boolean = false;\n  @State() selectedId: string = '';\n  @State() loadingBtn: 'confirm' | null = null;\n\n  @Event() modalClosed: EventEmitter<null>;\n  @Event() resetData: EventEmitter<string>;\n\n  private housekeepingService = new HouseKeepingService();\n\n  @Method()\n  async closeModal() {\n    this.isOpen = false;\n    this.modalClosed.emit(null);\n  }\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n  }\n\n  @Listen('clickHandler')\n  async btnClickHandler(event: CustomEvent) {\n    let target = event.target as HTMLInputElement;\n    let name = target.name;\n    try {\n      if (name === 'confirm') {\n        this.loadingBtn = 'confirm';\n        if (this.selectedId === '') {\n          await this.housekeepingService.editExposedHKM(this.user, true);\n        } else {\n          const newAssignedUnits = this.user.assigned_units.map(u => ({ hkm_id: +this.selectedId, is_to_assign: true, unit_id: u.id }));\n          await this.housekeepingService.manageExposedAssignedUnitToHKM(housekeeping_store.default_properties.property_id, newAssignedUnits);\n          const { assigned_units, is_soft_deleted, is_active, ...user } = this.user;\n          await this.housekeepingService.editExposedHKM(user, true);\n        }\n        this.resetData.emit(null);\n      }\n      if (name === 'cancel') {\n        this.closeModal();\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      if (this.loadingBtn) {\n        this.loadingBtn = null;\n        this.closeModal();\n      }\n    }\n  }\n  render() {\n    if (!this.user) {\n      return;\n    }\n    return [\n      <div\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\n        onClick={() => {\n          this.closeModal();\n        }}\n      ></div>,\n      <div data-state={this.isOpen ? 'opened' : 'closed'} class={`ir-modal`} tabindex=\"-1\">\n        <div class={`ir-alert-content p-2`}>\n          <div class={`r-alert-header mb-1 d-flex align-items-center justify-content-between border-0 py-0 m-0 `}>\n            <p class={'m-0 p-0'}>{this.user.assigned_units.length > 0 ? locales.entries.Lcz_AssignUnitsTo : locales.entries.Lcz_ConfirmDeletion}</p>\n            <ir-button class=\"exit-icon\" variant=\"icon\" icon_name=\"xmark\" onClickHandler={() => this.closeModal()}></ir-button>\n          </div>\n          <div class=\"modal-body text-left p-0 mb-2\">\n            {this.user.assigned_units.length > 0 && (\n              <div class=\"modal-body text-left p-0 mb-2\">\n                <ir-select\n                  firstOption={locales.entries.Lcz_nobody}\n                  selectedValue={this.selectedId}\n                  onSelectChange={e => (this.selectedId = e.detail)}\n                  LabelAvailable={false}\n                  data={housekeeping_store.hk_criteria.housekeepers\n                    .filter(hk => hk.id !== this.user.id)\n                    .map(m => ({\n                      value: m.id.toString(),\n                      text: m.name,\n                    }))\n                    .sort((a, b) => a.text.toLowerCase().localeCompare(b.text.toLowerCase()))}\n                ></ir-select>\n              </div>\n            )}\n          </div>\n\n          <div class={`ir-alert-footer border-0  d-flex justify-content-end`}>\n            <ir-button btn_color={'secondary'} btn_block text={locales.entries.Lcz_Cancel} name={'cancel'}></ir-button>\n            <ir-button isLoading={this.loadingBtn === 'confirm'} btn_color={'primary'} btn_block text={locales.entries.Lcz_Confirm} name={'confirm'}></ir-button>\n          </div>\n        </div>\n      </div>,\n    ];\n    // <div aria-modal={this.isOpen ? 'true' : 'false'} class=\"modal fade\" ref={el => (this.modalEl = el)} tabindex=\"-1\">\n    //   <div class=\"modal-dialog modal-dialog-centered\">\n    //     <div class=\"modal-content\">\n    //       <div class=\"modal-body\">\n    //         <div class={`ir-alert-header mb-1 d-flex align-items-center justify-content-between border-0 py-0 m-0 `}>\n    //           <p class=\"p-0 my-0 modal-title\">{this.user.assigned_units.length > 0 ? locales.entries.Lcz_AssignUnitsTo : locales.entries.Lcz_ConfirmDeletion}</p>\n    //           <ir-button class=\"exit-icon\" variant=\"icon\" icon_name=\"xmark\" onClickHandler={() => this.closeModal()}></ir-button>\n    //         </div>\n    //         {this.user.assigned_units.length > 0 && (\n    //           <div class=\"modal-body text-left p-0 mb-2\">\n    //             <ir-select\n    //               firstOption={locales.entries.Lcz_nobody}\n    //               selectedValue={this.selectedId}\n    //               onSelectChange={e => (this.selectedId = e.detail)}\n    //               LabelAvailable={false}\n    //               data={housekeeping_store.hk_criteria.housekeepers\n    //                 .filter(hk => hk.id !== this.user.id)\n    //                 .map(m => ({\n    //                   value: m.id.toString(),\n    //                   text: m.name,\n    //                 }))\n    //                 .sort((a, b) => a.text.toLowerCase().localeCompare(b.text.toLowerCase()))}\n    //             ></ir-select>\n    //           </div>\n    //         )}\n\n    //         <div class={`ir-alert-footer border-0 d-flex justify-content-end`}>\n    //           <ir-button btn_color={'secondary'} btn_block text={locales.entries.Lcz_Cancel} name={'cancel'}></ir-button>\n    //           <ir-button isLoading={this.loadingBtn === 'confirm'} btn_color={'primary'} btn_block text={locales.entries.Lcz_Confirm} name={'confirm'}></ir-button>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n  }\n}\n",".icons-container {\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  /* justify-content: center; */\n  gap: 4px;\n}\n.text-center {\n  text-align: center !important;\n}\n\n.assignments-container,\n.unassigned-container {\n  display: flex;\n  align-items: center;\n}\n\n.gap-16 {\n  gap: 16px;\n}\n.unassigned-container {\n  gap: 4px;\n}\n.justify-between {\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n.assignments-container p,\nh4 {\n  margin: 0;\n}\n.outline-btn {\n  background: white;\n  border: 1px solid var(--blue);\n  color: var(--blue);\n  border-radius: 5px;\n  font-size: 12px;\n  padding: 1px 0.25rem !important;\n  margin: 0;\n}\n.outline-btn:hover {\n  color: white;\n  background: var(--blue);\n}\n","/* Base styles */\n.ir-table-row td {\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n  z-index: 2;\n  background-color: white;\n  white-space: nowrap;\n  /* width: max-content;\n  max-width: max-content; */\n}\n/* .ir-table-row td:last-child {\n  width: 100%; \n}*/\n/* .ir-table-row td:first-child,\n.table thead th:first-child {\n  position: sticky;\n  left: var(--ir-table-sticky-padding,-1rem);\n} */\n\n.table td {\n  border-top: 0;\n  border-bottom: 1px solid #e3ebf3;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n/* .table thead th:first-child {\n  border-top-left-radius: 0.5rem;\n  }\n  .table thead th:last-child {\n    border-top-right-radius: 0.5rem;\n    } */\n.table thead th {\n  border: none !important;\n  background: #ececec;\n  color: #374151;\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n}\n\n/* Selected Rows Styles */\n\n.selected td {\n  background: #e3f3fa !important;\n}\n.selected td {\n  color: var(--gray-dark) !important;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n/* Sorting styles */\n.sortable,\n.ir-table-row {\n  text-transform: capitalize;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.sortable:hover {\n  color: #212529;\n  background-color: #e2e8f0 !important;\n  border-color: #dae0e5;\n  cursor: pointer;\n}\n.ir-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.sortable:active {\n  color: #212529;\n  background-color: #e2e8f0;\n  border-color: #d3d9df;\n}\n.sortable svg {\n  color: var(--blue);\n}\n/* .action-row {\n  position: sticky;\n  right:var(--ir-table-sticky-padding,-1rem);\n} */\n","import { IHouseKeepers, THousekeepingTrigger } from '@/models/housekeeping';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Listen, State, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-hk-team',\n  styleUrls: ['ir-hk-team.css', '../../../common/table.css'],\n  scoped: true,\n})\nexport class IrHkTeam {\n  @Element() el: HTMLElement;\n  @State() currentTrigger: THousekeepingTrigger | null = null;\n\n  private deletionTimout: NodeJS.Timeout;\n  renderAssignedUnits(hk: IHouseKeepers) {\n    if (hk.assigned_units.length === 0) {\n      return (\n        <span>\n          0 -{' '}\n          <button class=\"outline-btn\" onClick={() => (this.currentTrigger = { type: 'unassigned_units', user: hk })}>\n            {locales.entries.Lcz_Assign}\n          </button>\n        </span>\n      );\n    }\n    return (\n      <span>\n        {hk.assigned_units.length} -{' '}\n        <button onClick={() => (this.currentTrigger = { type: 'unassigned_units', user: hk })} class=\"outline-btn\">\n          {'Edit'}\n        </button>\n      </span>\n    );\n  }\n  renderCurrentTrigger() {\n    switch (this.currentTrigger?.type) {\n      case 'unassigned_units':\n        return <ir-hk-unassigned-units slot=\"sidebar-body\" user={this.currentTrigger.user}></ir-hk-unassigned-units>;\n      case 'user':\n        return <ir-hk-user slot=\"sidebar-body\" user={this.currentTrigger.user} isEdit={this.currentTrigger.isEdit}></ir-hk-user>;\n      default:\n        return null;\n    }\n  }\n\n  @Listen('closeSideBar')\n  handleCloseSideBar(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.currentTrigger = null;\n  }\n  handleDeletion(user) {\n    this.currentTrigger = { type: 'delete', user };\n    this.deletionTimout = setTimeout(() => {\n      const modal = this.el.querySelector('ir-delete-modal');\n      if (!modal) return;\n      modal.openModal();\n    }, 100);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.deletionTimout);\n  }\n  render() {\n    if (!housekeeping_store.hk_criteria) {\n      return null;\n    }\n    const { assigned, total, un_assigned } = housekeeping_store.hk_criteria.units_assignments;\n\n    return (\n      <Host class=\"card p-1\">\n        <section>\n          <ir-title label={locales.entries.Lcz_HousekeepingTeam} justifyContent=\"space-between\">\n            <div slot=\"title-body\" class=\"assignments-container gap-16 m-0\">\n              <p class=\"font-weight-bold m-0 p-0\">\n                {total} {locales.entries.Lcz_TotalUnits}\n              </p>\n              <p class={'m-0 p-0'}>\n                {assigned} <span>{locales.entries.Lcz_Assigned}</span>\n              </p>\n              {un_assigned > 0 && (\n                <button class=\"outline-btn\" onClick={() => (this.currentTrigger = { type: 'unassigned_units', user: null })}>\n                  {un_assigned} {locales.entries.Lcz_Unassigned}\n                </button>\n              )}\n            </div>\n          </ir-title>\n          <p class={'m-0 p-0'}>{locales.entries.Lcz_AsAnOption}</p>\n        </section>\n\n        <section class=\"mt-1 table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th class=\"text-left\">{locales.entries.Lcz_Name}</th>\n                <th>{locales.entries.Lcz_Mobile}</th>\n                <th>{locales.entries.Lcz_Username}</th>\n                {/* <th>{locales.entries.Lcz_Note}</th> */}\n                <th>{locales.entries.Lcz_UnitsAssigned}</th>\n                <th>\n                  <ir-icon\n                    class=\"pl-1\"\n                    data-testid=\"new_user\"\n                    title={locales.entries.Lcz_CreateHousekeeper}\n                    onIconClickHandler={() => {\n                      this.currentTrigger = {\n                        type: 'user',\n                        isEdit: false,\n                        user: null,\n                      };\n                    }}\n                  >\n                    <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"17.5\" viewBox=\"0 0 448 512\">\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z\"\n                      />\n                    </svg>\n                  </ir-icon>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {housekeeping_store.hk_criteria.housekeepers.map(hk => (\n                <tr key={hk.id} class=\"ir-table-row\">\n                  <td class=\"text-left\">\n                    <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                      {hk.name?.length > 25 ? (\n                        <ir-popover trigger=\"hover\" content={hk.name}>\n                          <span>{hk.name.slice(0, 25)}...</span>\n                        </ir-popover>\n                      ) : (\n                        hk.name\n                      )}\n                      {hk.note && (\n                        <ir-popover content={hk.note}>\n                          <ir-button variant=\"icon\" icon_name=\"note\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Click to view note\"></ir-button>\n                        </ir-popover>\n                      )}\n                    </div>\n                  </td>\n                  <td class=\"\">\n                    {hk.phone_prefix} {hk.mobile}\n                  </td>\n                  <td>{hk.username}</td>\n                  <td>{this.renderAssignedUnits(hk)}</td>\n                  <td class=\"\">\n                    <div class=\"icons-container\">\n                      <ir-icon\n                        data-testid=\"edit\"\n                        title={locales.entries.Lcz_EditHousekeeper}\n                        onIconClickHandler={() => {\n                          const { assigned_units, is_soft_deleted, is_active, ...user } = hk;\n                          this.currentTrigger = {\n                            type: 'user',\n                            isEdit: true,\n                            user,\n                          };\n                        }}\n                        icon=\"ft-save color-ir-light-blue-hover h5 pointer sm-margin-right\"\n                      >\n                        <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\">\n                          <path\n                            fill=\"#6b6f82\"\n                            d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\"\n                          />\n                        </svg>\n                      </ir-icon>\n                      <span> &nbsp;</span>\n                      <ir-icon\n                        data-testid=\"delete\"\n                        title={locales.entries.Lcz_DeleteHousekeeper}\n                        icon=\"ft-trash-2 danger h5 pointer\"\n                        onIconClickHandler={() => this.handleDeletion(hk)}\n                      >\n                        <svg slot=\"icon\" fill=\"#ff2441\" xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"14.25\" viewBox=\"0 0 448 512\">\n                          <path d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\" />\n                        </svg>\n                      </ir-icon>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n        <ir-sidebar\n          showCloseButton={false}\n          open={this.currentTrigger !== null && this.currentTrigger.type !== 'delete'}\n          onIrSidebarToggle={() => (this.currentTrigger = null)}\n          style={{\n            '--sidebar-width': this.currentTrigger ? (this.currentTrigger.type === 'unassigned_units' ? 'max-content' : '40rem') : 'max-content',\n          }}\n        >\n          {this.renderCurrentTrigger()}\n        </ir-sidebar>\n        {this.currentTrigger?.type === 'delete' && <ir-delete-modal user={this.currentTrigger.user}></ir-delete-modal>}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  --ir-root-active-color: #1e9ff2;\n  --ir-root-inactive-color: #d2d2d2;\n}\ntable {\n  width: 100%;\n}\ntd {\n  padding-top: 3px;\n  padding-bottom: 3px;\n}\ntd:last-child {\n  text-align: end;\n}\n.title {\n  min-width: 230px !important;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { IHouseKeepers, IPropertyHousekeepingAssignment } from '@/models/housekeeping';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-hk-unassigned-units',\n  styleUrls: ['ir-hk-unassigned-units.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrHkUnassignedUnits {\n  @Prop() user: IHouseKeepers | null = null;\n\n  @State() renderAgain = false;\n\n  @Event() closeSideBar: EventEmitter<null>;\n  @Event() resetData: EventEmitter<null>;\n\n  private assignedUnits: Map<number, IPropertyHousekeepingAssignment> = new Map();\n  private housekeepingService = new HouseKeepingService();\n\n  assignUnit(unit_id: number, hk_id: number | null, checked: boolean) {\n    if (this.user) {\n      const userUnit = this.user.assigned_units.find(unit => unit.id === unit_id);\n      if ((checked && userUnit) || (!checked && !userUnit)) {\n        this.assignedUnits.delete(unit_id);\n      } else if (!checked && userUnit) {\n        this.assignedUnits.set(unit_id, { hkm_id: hk_id, is_to_assign: false, unit_id });\n      } else if (checked) {\n        const assignment: IPropertyHousekeepingAssignment = {\n          hkm_id: hk_id,\n          is_to_assign: true,\n          unit_id,\n        };\n        this.assignedUnits.set(unit_id, assignment);\n      }\n    } else {\n      if (this.assignedUnits.has(unit_id) && !hk_id) {\n        this.assignedUnits.delete(unit_id);\n        return;\n      } else {\n        this.assignedUnits.set(unit_id, {\n          hkm_id: hk_id,\n          is_to_assign: true,\n          unit_id,\n        });\n      }\n    }\n    this.renderAgain = !this.renderAgain;\n  }\n\n  async assignUnits() {\n    try {\n      await this.housekeepingService.manageExposedAssignedUnitToHKM(housekeeping_store.default_properties.property_id, [...this.assignedUnits.values()]);\n      this.resetData.emit(null);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.closeSideBar.emit(null);\n    }\n  }\n  renderRooms() {\n    if (!this.user) {\n      return housekeeping_store.hk_criteria.units_assignments.unassigned_units?.map(unit => (\n        <tr key={unit.id}>\n          <td class=\"\">{unit.name}</td>\n          <td class=\"sr-only\"></td>\n          <td class=\"pl-1\">\n            <ir-select\n              onSelectChange={e => {\n                let hk_id = e.detail;\n                if (hk_id === '') {\n                  hk_id = null;\n                } else {\n                  hk_id = +hk_id;\n                }\n                this.assignUnit(unit.id, hk_id, false);\n              }}\n              LabelAvailable={false}\n              data={housekeeping_store.hk_criteria.housekeepers.map(hk => ({ text: hk.name, value: hk.id.toString() }))}\n            ></ir-select>\n          </td>\n        </tr>\n      ));\n    }\n    return calendar_data.roomsInfo.map(roomType => {\n      console.log(roomType);\n      if (!roomType.is_active) {\n        return null;\n      }\n      return roomType.physicalrooms?.map(physical_room => {\n        if (!physical_room['is_active']) {\n          return null;\n        }\n        let taken = !housekeeping_store.hk_criteria.units_assignments.unassigned_units?.find(unit => unit.id.toString() === physical_room.id.toString());\n        let housekeeper = [];\n        const assignedRoom = this.assignedUnits.get(physical_room.id);\n        if (assignedRoom && assignedRoom.is_to_assign) {\n          housekeeper = [this.user];\n          taken = true;\n        } else {\n          if (taken) {\n            housekeeper = housekeeping_store.hk_criteria.housekeepers.filter(hk => hk.assigned_units.find(unit => unit.id === physical_room.id));\n          }\n        }\n        return (\n          <tr key={physical_room.id}>\n            <td>{physical_room.name}</td>\n            <td>{taken ? housekeeper[0]?.name : ''}</td>\n            <td>\n              <ir-switch\n                onCheckChange={e => {\n                  const checked = e.detail;\n                  this.assignUnit(physical_room.id, this.user.id, checked);\n                }}\n                checked={taken && housekeeper[0]?.id === this.user.id}\n              ></ir-switch>\n            </td>\n          </tr>\n        );\n      });\n    });\n  }\n  render() {\n    return (\n      <div class=\"sheet-container\">\n        <ir-title class=\"title sheet-header px-1\" displayContext=\"sidebar\" label={!this.user ? 'Assingn Units' : `Assignment for ${this.user.name}`}></ir-title>\n        <section class=\"px-1 sheet-body\">\n          <table>\n            <thead>\n              <th class=\"sr-only\">{locales.entries.Lcz_RoomName}</th>\n              <th class=\"sr-only\">{locales.entries.Lcz_HousekeeperName}</th>\n              <th class=\"sr-only\">{locales.entries.Lcz_Actions}</th>\n            </thead>\n            <tbody>{this.renderRooms()}</tbody>\n          </table>\n        </section>\n        <div class=\"sheet-footer\">\n          <ir-button\n            onClickHandler={() => this.closeSideBar.emit(null)}\n            class=\"flex-fill\"\n            btn_styles=\"w-100 justify-content-center align-items-center\"\n            btn_color=\"secondary\"\n            text={locales.entries.Lcz_Cancel}\n          ></ir-button>\n          <ir-button\n            isLoading={isRequestPending('/Manage_Exposed_Assigned_Unit_To_HKM')}\n            onClickHandler={this.assignUnits.bind(this)}\n            class=\"flex-fill\"\n            btn_styles=\"w-100  justify-content-center align-items-center\"\n            text={locales.entries.Lcz_Confirm}\n          ></ir-button>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { THKUser } from '@/models/housekeeping';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { UserService } from '@/services/user.service';\nimport calendar_data from '@/stores/calendar-data';\nimport { getDefaultProperties } from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Component, Prop, State, h, Event, EventEmitter } from '@stencil/core';\nimport { z, ZodError } from 'zod';\n\n@Component({\n  tag: 'ir-hk-user',\n  styleUrls: ['ir-hk-user.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrHkUser {\n  @Prop() user: THKUser | null = null;\n  @Prop() isEdit: boolean = false;\n\n  @State() isLoading: boolean = false;\n  @State() autoValidate = false;\n\n  @State() userInfo: THKUser = {\n    id: -1,\n    mobile: '',\n    name: '',\n    note: '',\n    password: '',\n    property_id: null,\n    username: null,\n    phone_prefix: null,\n  };\n\n  @State() errors: { [P in keyof THKUser]?: any } | null = null;\n  @State() showPasswordValidation: boolean = false;\n  @State() isUsernameTaken: boolean;\n\n  @Event() resetData: EventEmitter<null>;\n  @Event() closeSideBar: EventEmitter<null>;\n\n  private housekeepingService = new HouseKeepingService();\n  private default_properties = {\n    token: '',\n    language: '',\n  };\n  private housekeeperSchema = z.object({\n    name: z.string().min(2),\n    mobile: z.string().min(1).max(14),\n    password: z\n      .string()\n      .nullable()\n      // .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+]).{8,16}$/)\n      .refine(\n        password => {\n          if (this.user && !this.userInfo?.password) {\n            return true;\n          }\n          return CONSTANTS.PASSWORD.test(password);\n        },\n        { message: 'Password must be at least 8 characters long.' },\n      ),\n    username: z\n      .string()\n      .min(3)\n      .refine(\n        async name => {\n          if (this.user && this.user.username === name) {\n            return true;\n          }\n          if (name.length >= 3) {\n            return !(await new UserService().checkUserExistence({ UserName: name }));\n          }\n          return true;\n        },\n        { message: 'Username already exists.' },\n      ),\n  });\n\n  async componentWillLoad() {\n    const { token, language, property_id } = getDefaultProperties();\n    this.default_properties = { token, language };\n    if (!this.user) {\n      this.userInfo['property_id'] = property_id;\n      // this.showPasswordValidation = true;\n    }\n    if (this.user) {\n      this.autoValidate = true;\n      this.userInfo = { ...this.user, password: '' };\n    }\n  }\n\n  private updateUserField(key: keyof THKUser, value: any) {\n    this.userInfo = { ...this.userInfo, [key]: value };\n  }\n\n  private async addUser() {\n    try {\n      this.isLoading = true;\n      if (!this.autoValidate) {\n        this.autoValidate = true;\n      }\n      const toValidateUserInfo = { ...this.userInfo, password: this.user && this.userInfo.password === '' ? this.user.password : this.userInfo.password };\n      console.log('toValidateUserInfo', toValidateUserInfo);\n      await this.housekeeperSchema.parseAsync(toValidateUserInfo);\n      if (this.errors) {\n        this.errors = null;\n      }\n      await this.housekeepingService.editExposedHKM(toValidateUserInfo);\n      this.resetData.emit(null);\n      this.closeSideBar.emit(null);\n    } catch (error) {\n      const e: any = {};\n      if (error instanceof ZodError) {\n        error.issues.map(err => {\n          e[err.path[0]] = true;\n        });\n        this.errors = e;\n      }\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private async handleBlur(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    if (this.user || !this.userInfo.name) {\n      return;\n    }\n    const usermame = await this.housekeepingService.generateUserName(this.userInfo.name);\n    this.updateUserField('username', usermame);\n  }\n\n  render() {\n    return (\n      <div class=\"sheet-container\">\n        <ir-title\n          class=\"px-1 sheet-header\"\n          displayContext=\"sidebar\"\n          label={this.isEdit ? locales.entries.Lcz_EditHousekeeperProfile : locales.entries.Lcz_CreateHousekeeperProfile}\n        ></ir-title>\n        <section class=\"px-1 sheet-body\">\n          <ir-input-text\n            testId=\"name\"\n            zod={this.housekeeperSchema.pick({ name: true })}\n            wrapKey=\"name\"\n            autoValidate={this.autoValidate}\n            error={this.errors?.name}\n            label={locales.entries.Lcz_Name}\n            placeholder={locales.entries.Lcz_Name}\n            onTextChange={e => this.updateUserField('name', e.detail)}\n            value={this.userInfo.name}\n            onInputBlur={this.handleBlur.bind(this)}\n            maxLength={40}\n          ></ir-input-text>\n          <ir-phone-input\n            testId=\"phone\"\n            placeholder={locales.entries.Lcz_Mobile}\n            error={this.errors?.mobile && !this.userInfo?.mobile}\n            language={this.default_properties.language}\n            token={this.default_properties.token}\n            default_country={calendar_data.country.id}\n            phone_prefix={this.user?.phone_prefix}\n            label={locales.entries.Lcz_Mobile}\n            value={this.userInfo.mobile}\n            onTextChange={e => {\n              this.updateUserField('phone_prefix', e.detail.phone_prefix);\n              this.updateUserField('mobile', e.detail.mobile);\n            }}\n          ></ir-phone-input>\n\n          {/* <ir-input-text\n            label={locales.entries.Lcz_Note}\n            placeholder={locales.entries.Lcz_Note}\n            value={this.userInfo.note}\n            onTextChange={e => this.updateUserField('note', e.detail)}\n            ></ir-input-text> */}\n          <div class=\"mb-1\">\n            <ir-textarea\n              testId=\"note\"\n              variant=\"prepend\"\n              maxLength={250}\n              label={locales.entries.Lcz_Note}\n              placeholder={locales.entries.Lcz_Note}\n              value={this.userInfo.note}\n              onTextChange={e => this.updateUserField('note', e.detail)}\n            ></ir-textarea>\n          </div>\n          <ir-input-text\n            testId=\"username\"\n            zod={this.housekeeperSchema.pick({ username: true })}\n            wrapKey=\"username\"\n            error={this.errors?.username}\n            asyncParse\n            autoValidate={this.user ? (this.userInfo?.username !== this.user.username ? true : false) : this.autoValidate}\n            errorMessage={this.errors?.username && this.userInfo?.username?.length >= 3 ? locales.entries.Lcz_UsernameAlreadyExists : undefined}\n            label={locales.entries.Lcz_Username}\n            placeholder={locales.entries.Lcz_Username}\n            value={this.userInfo.username}\n            onTextChange={e => this.updateUserField('username', e.detail)}\n          ></ir-input-text>\n          <ir-input-text\n            testId=\"password\"\n            autoValidate={this.user ? (!this.userInfo?.password ? false : true) : this.autoValidate}\n            label={locales.entries.Lcz_Password}\n            value={this.userInfo.password}\n            type=\"password\"\n            maxLength={16}\n            zod={this.housekeeperSchema.pick({ password: true })}\n            wrapKey=\"password\"\n            error={this.errors?.password}\n            onInputFocus={() => (this.showPasswordValidation = true)}\n            onInputBlur={() => {\n              // if (this.user) this.showPasswordValidation = false;\n            }}\n            onTextChange={e => this.updateUserField('password', e.detail)}\n          ></ir-input-text>\n          {this.showPasswordValidation && <ir-password-validator password={this.userInfo.password}></ir-password-validator>}\n        </section>\n        <div class=\"sheet-footer\">\n          <ir-button\n            data-testid=\"cancel\"\n            onClickHandler={() => this.closeSideBar.emit(null)}\n            class=\"flex-fill\"\n            btn_styles=\"w-100  justify-content-center align-items-center\"\n            btn_color=\"secondary\"\n            text={locales.entries.Lcz_Cancel}\n          ></ir-button>\n          <ir-button\n            data-testid=\"save\"\n            isLoading={this.isLoading}\n            onClickHandler={this.addUser.bind(this)}\n            class=\"flex-fill\"\n            btn_styles=\"w-100 justify-content-center align-items-center\"\n            text={locales.entries.Lcz_Save}\n          ></ir-button>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { PropertyService } from '@/services/property.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n@Component({\n  tag: 'ir-housekeeping',\n  styleUrl: 'ir-housekeeping.css',\n  scoped: true,\n})\nexport class IrHousekeeping {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n\n  @Event() toast: EventEmitter<IToast>;\n\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private propertyService = new PropertyService();\n  private token = new Token();\n  modal: HTMLIrModalElement;\n  selectedCleaningFrequency: any;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_sales_rate_plans: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\n      const requests: Array<Promise<any>> = [];\n      if (calendar_data.housekeeping_enabled) {\n        requests.push(this.houseKeepingService.getExposedHKSetup(propertyId));\n      }\n      requests.push(this.roomService.fetchLanguage(this.language, ['_HK_FRONT', '_PMS_FRONT']));\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private async saveAutomaticCheckInCheckout(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.roomService.SetAutomaticCheckInOut({\n        property_id: housekeeping_store.default_properties.property_id,\n        flag: e.detail === 'auto',\n      });\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async saveCleaningFrequency(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.propertyService.setExposedCleaningFrequency({\n        property_id: housekeeping_store.default_properties.property_id,\n        code: this.selectedCleaningFrequency,\n      });\n      calendar_data.cleaning_frequency = { code: this.selectedCleaningFrequency, description: '' };\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n      this.modal.closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    console.log(calendar_data.cleaning_frequency);\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <section class=\"p-1\">\n          <h3 class=\"mb-2\">{locales.entries.Lcz_HouseKeepingAndCheckInSetup}</h3>\n          <div class=\"card p-1\">\n            <ir-title borderShown label=\"Operations Settings\"></ir-title>\n            <div class={'d-flex align-items-center mb-1'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CheckInOutGuestsAutomatically}</p>\n              <ir-select\n                LabelAvailable={false}\n                showFirstOption={false}\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\n                data={[\n                  { text: locales.entries.Lcz_YesAsPerPropertyPolicy, value: 'auto' },\n                  { text: locales.entries.Lcz_NoIWillDoItManually, value: 'manual' },\n                ]}\n              ></ir-select>\n            </div>\n            <div class={'d-flex align-items-center'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CleaningFrequency}:</p>\n              <ir-select\n                LabelAvailable={false}\n                showFirstOption={false}\n                selectedValue={this.selectedCleaningFrequency}\n                onSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.selectedCleaningFrequency = e.detail;\n                  this.modal.openModal();\n                }}\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n              ></ir-select>\n            </div>\n          </div>\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\n          {calendar_data.housekeeping_enabled && <ir-hk-team class=\"mb-1\"></ir-hk-team>}\n          <ir-modal\n            autoClose={false}\n            ref={el => (this.modal = el)}\n            isLoading={isRequestPending('/Set_Exposed_Cleaning_Frequency')}\n            onConfirmModal={this.saveCleaningFrequency.bind(this)}\n            iconAvailable={true}\n            onCancelModal={() => {\n              this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n            }}\n            icon=\"ft-alert-triangle danger h1\"\n            leftBtnText={locales.entries.Lcz_Cancel}\n            rightBtnText={locales.entries.Lcz_Confirm}\n            leftBtnColor=\"secondary\"\n            rightBtnColor={'primary'}\n            modalTitle={locales.entries.Lcz_Confirmation}\n            modalBody={'This action will reschedule all cleaning tasks. Do you want to continue?'}\n          ></ir-modal>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  margin: 0;\n  padding: 0;\n}\n.icon-button {\n  all: unset;\n  margin: 0;\n  padding: 0;\n  color: #6b6f82;\n}\n.icon-button:hover {\n  cursor: pointer;\n  color: #104064;\n}\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ir-icon',\n  styleUrl: 'ir-icon.css',\n  scoped: true,\n})\nexport class IrIcon {\n  @Prop() icon = 'ft-check';\n  @Prop() type: 'button' | 'submit' | 'reset' = 'button';\n\n  @Event({ bubbles: true, composed: true }) iconClickHandler: EventEmitter;\n\n  render() {\n    return (\n      <button type={this.type} class=\"icon-button\" onClick={() => this.iconClickHandler.emit()}>\n        <slot name=\"icon\"></slot>\n      </button>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.icon {\n  height: var(--icon-size, 1.25rem);\n  width: var(--icon-size, 1.25rem);\n  margin: 0;\n  padding: 0;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport icons, { TIcons } from './icons';\n\n@Component({\n  tag: 'ir-icons',\n  styleUrl: 'ir-icons.css',\n  scoped: true,\n})\nexport class IrIcons {\n  /**\n   * The name of the icon to render.\n   * Must match a key from the imported `icons` map.\n   *\n   * Example:\n   * ```tsx\n   * <ir-icons name=\"check\" />\n   * ```\n   */\n  @Prop() name: TIcons;\n\n  /**\n   * Additional CSS class applied to the `<svg>` element.\n   * Can be used for sizing, positioning, etc.\n   */\n  @Prop() svgClassName: string;\n\n  /**\n   * Sets the `color` attribute on the `<svg>` element.\n   * Accepts any valid CSS color string.\n   */\n  @Prop() color: string;\n\n  render() {\n    const svgPath = icons[this.name] || null;\n    if (!svgPath) {\n      return null;\n    }\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color={this.color} viewBox={svgPath.viewBox} class={`icon ${this.svgClassName}`}>\n        <path fill=\"currentColor\" d={svgPath.d}></path>\n      </svg>\n    );\n  }\n}\n",":host {\n  margin: 0;\n  padding: 0;\n  display: inline;\n}\n.border-theme {\n  border: 1px solid #cacfe7;\n}\n.icon-container {\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.975rem;\n  height: 2rem;\n  background: rgb(255, 255, 255);\n  padding-right: 0 !important;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\ninput:focus {\n  border-color: #1e9ff2 !important;\n}\n.error-message {\n  font-size: 0.875rem;\n  padding: 0;\n  margin: 0.5rem 0 0;\n  color: var(--red, #ff4961);\n}\n.ir-input[data-state='empty'] {\n  color: #bbbfc6;\n}\n.input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n}\n.input-container input {\n  padding-left: 5px !important;\n  padding-right: 5px !important;\n  border-left: 0;\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n.icon-container[data-state='focus'] {\n  border-color: var(--blue);\n}\n.icon-container[data-disabled] {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n.danger-border {\n  border-color: var(--red, #ff4961);\n}\n","import { Component, Prop, h, Event, EventEmitter, State, Watch, Element } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport IMask, { FactoryArg, InputMask } from 'imask';\nimport { ZodType } from 'zod';\n\n@Component({\n  tag: 'ir-input-text',\n  styleUrl: 'ir-input-text.css',\n  scoped: true,\n})\nexport class IrInputText {\n  @Element() el: HTMLIrInputTextElement;\n  /** Name attribute for the input field */\n  @Prop() name: string;\n\n  /** Value of the input field */\n  @Prop() value: string;\n\n  /** Label text for the input */\n  @Prop() label: string;\n\n  /** Placeholder text for the input */\n  @Prop() placeholder: string;\n\n  /** Additional inline styles for the input */\n  @Prop() inputStyles = '';\n\n  /** Whether the input field is required */\n  @Prop() required: boolean;\n\n  /** Whether the input field is read-only */\n  @Prop() readonly: boolean = false;\n\n  /** Input type (e.g., text, password, email) */\n  @Prop() type:\n    | 'text'\n    | 'password'\n    | 'email'\n    | 'number'\n    | 'tel'\n    | 'url'\n    | 'search'\n    | 'date'\n    | 'datetime-local'\n    | 'month'\n    | 'week'\n    | 'time'\n    | 'color'\n    | 'file'\n    | 'hidden'\n    | 'checkbox'\n    | 'radio'\n    | 'range'\n    | 'button'\n    | 'reset'\n    | 'submit'\n    | 'image' = 'text';\n\n  /** Whether the form has been submitted */\n  @Prop() submitted: boolean = false;\n\n  /** Whether to apply default input styling */\n  @Prop() inputStyle: boolean = true;\n\n  /** Text size inside the input field */\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  /** Position of the label: left, right, or center */\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\n\n  /** Background color of the label */\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\n\n  /** Text color of the label */\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\n\n  /** Border color/style of the label */\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\n\n  /** Label width as a fraction of 12 columns (1-11) */\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  /** Variant of the input: default or icon */\n  @Prop() variant: 'default' | 'icon' = 'default';\n\n  /** Whether the input is disabled */\n  @Prop() disabled: boolean = false;\n\n  /** Whether the input has an error */\n  @Prop({ mutable: true }) error: boolean = false;\n\n  /** Mask for the input field (optional) */\n  @Prop() mask: FactoryArg;\n\n  /** Whether the input should auto-validate */\n  @Prop() autoValidate?: boolean = true;\n\n  /** A Zod schema for validating the input */\n  @Prop() zod?: ZodType<any, any>;\n\n  /** A Zod parse type for validating the input */\n  @Prop() asyncParse?: boolean;\n\n  /** Key to wrap the value (e.g., 'price' or 'cost') */\n  @Prop() wrapKey?: string;\n\n  /** Forcing css style to the input */\n  @Prop() inputForcedStyle?: { [key: string]: string };\n\n  /** Input id for testing purposes*/\n  @Prop() testId: string;\n\n  /** Input max character length*/\n  @Prop() maxLength: number;\n\n  /** To clear all the Input base styling*/\n  @Prop() clearBaseStyles: boolean;\n\n  /** To clear all the Input base styling*/\n  @Prop() errorMessage: string;\n\n  /** Autocomplete behavior for the input (e.g., 'on', 'off', 'email', etc.) */\n  @Prop() autoComplete: string;\n\n  /** Forcing css style to the input container */\n  @Prop() inputContainerStyle: { [key: string]: string };\n\n  @State() inputFocused: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) textChange: EventEmitter<any>;\n  @Event() inputBlur: EventEmitter<FocusEvent>;\n  @Event() inputFocus: EventEmitter<FocusEvent>;\n\n  private inputRef: HTMLInputElement;\n  private maskInstance: InputMask<FactoryArg>;\n\n  private id: string;\n\n  componentWillLoad() {\n    if (this.el.id) {\n      this.id = this.el.id;\n    } else {\n      this.id = v4();\n    }\n  }\n\n  componentDidLoad() {\n    if (this.mask) this.initMask();\n  }\n\n  @Watch('mask')\n  handleMaskChange() {\n    this.initMask();\n  }\n  // @Watch('autoValidate')\n  // handleMaskChange1() {\n  //   console.log(this.autoValidate);\n  // }\n\n  // @Watch('error')\n  // handleErrorChange(newValue: boolean, oldValue: boolean) {\n  //   if (newValue !== oldValue) {\n  //     if (this.autoValidate) {\n  //       this.validateInput(this.value, true);\n  //     }\n  //   }\n  // }\n\n  @Watch('value')\n  handleValueChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.validateInput(this.value);\n    }\n  }\n\n  private initMask() {\n    if (!this.mask || this.maskInstance) {\n      return;\n    }\n\n    this.maskInstance = IMask(this.inputRef, this.mask);\n    this.maskInstance.on('accept', () => {\n      const isEmpty = this.inputRef.value.trim() === '' || this.maskInstance.unmaskedValue === '';\n      if (isEmpty) {\n        this.inputRef.value = '';\n        this.textChange.emit(null);\n      } else {\n        this.inputRef.value = this.maskInstance.value;\n        this.textChange.emit(this.maskInstance.value);\n      }\n    });\n  }\n\n  private async validateInput(value: string, forceValidation: boolean = false) {\n    if (!this.autoValidate && !forceValidation) {\n      if (this.error) {\n        this.updateErrorState(false);\n      }\n      return;\n    }\n    if (this.zod) {\n      try {\n        if (!this.asyncParse) {\n          this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value);\n        } else {\n          await this.zod.parseAsync(this.wrapKey ? { [this.wrapKey]: value } : value);\n        }\n        if (this.error) {\n          this.updateErrorState(false);\n        }\n      } catch (error) {\n        console.log(error);\n        this.updateErrorState(true);\n      }\n    }\n  }\n\n  private handleInputChange(event: InputEvent) {\n    const value = (event.target as HTMLInputElement).value;\n    const isEmpty = value === '';\n    if (this.maskInstance) {\n      this.maskInstance.value = value;\n    }\n    const maskedValue = isEmpty ? null : this.maskInstance ? this.maskInstance.value : value;\n    this.textChange.emit(maskedValue);\n  }\n\n  private updateErrorState(b: boolean) {\n    this.error = b;\n    this.inputRef.setAttribute('aria-invalid', b ? 'true' : 'false');\n  }\n\n  private handleBlur(e: FocusEvent) {\n    this.validateInput(this.value, this.submitted);\n    this.inputFocused = false;\n    this.inputBlur.emit(e);\n  }\n\n  render() {\n    if (this.variant === 'icon') {\n      return (\n        <fieldset class=\"position-relative has-icon-left input-container\">\n          <label htmlFor={this.id} class=\"input-group-prepend bg-white m-0\">\n            <span\n              data-disabled={this.disabled}\n              data-state={this.inputFocused ? 'focus' : ''}\n              class={`input-group-text icon-container bg-white ${this.error ? 'danger-border' : ''}`}\n              id=\"basic-addon1\"\n            >\n              <slot name=\"icon\"></slot>\n            </span>\n          </label>\n          <input\n            maxLength={this.maxLength}\n            data-testid={this.testId}\n            style={this.inputForcedStyle}\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\n            id={this.id}\n            ref={el => (this.inputRef = el)}\n            readOnly={this.readonly}\n            type={this.type}\n            class={`ir-input form-control bg-white pl-0 input-sm rate-input py-0 m-0 rateInputBorder ${this.error ? 'danger-border' : ''}`}\n            onBlur={this.handleBlur.bind(this)}\n            onFocus={e => {\n              this.inputFocused = true;\n              this.inputFocus.emit(e);\n            }}\n            placeholder={this.placeholder}\n            value={this.value}\n            onInput={this.handleInputChange.bind(this)}\n            required={this.required}\n            disabled={this.disabled}\n            autoComplete={this.autoComplete}\n          />\n        </fieldset>\n      );\n    }\n    return (\n      <div class={'form-group'} style={this.inputContainerStyle}>\n        <div class=\"input-group row m-0\">\n          {this.label && (\n            <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\n              <label\n                htmlFor={this.id}\n                class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\n                  this.labelBackground ? 'bg-' + this.labelBackground : ''\n                } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\n              >\n                {this.label}\n                {this.required ? '*' : ''}\n              </label>\n            </div>\n          )}\n          <input\n            maxLength={this.maxLength}\n            data-testid={this.testId}\n            style={this.inputForcedStyle}\n            data-state={!!this.value ? undefined : this.mask ? 'empty' : undefined}\n            id={this.id}\n            ref={el => (this.inputRef = el)}\n            readOnly={this.readonly}\n            type={this.type}\n            class={\n              this.clearBaseStyles\n                ? `${this.inputStyles}`\n                : `${this.error ? 'border-danger' : ''} form-control text-${this.textSize} col-${this.label ? 12 - this.labelWidth : 12} ${this.readonly ? 'bg-white' : ''} ${\n                    this.inputStyles\n                  }`\n            }\n            onBlur={this.handleBlur.bind(this)}\n            onFocus={e => {\n              this.inputFocused = true;\n              this.inputFocus.emit(e);\n            }}\n            placeholder={this.placeholder}\n            autoComplete={this.autoComplete}\n            value={this.value}\n            onInput={this.handleInputChange.bind(this)}\n            required={this.required}\n            disabled={this.disabled}\n          />\n        </div>\n        {this.errorMessage && this.error && <p class=\"error-message\">{this.errorMessage}</p>}\n      </div>\n    );\n  }\n}\n","/* .loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #ffffff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  padding: 1rem 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  gap: 1rem;\n  background: rgb(36, 36, 36);\n  color: white;\n  box-sizing: border-box;\n  opacity: 0;\n  animation: 300ms ease-in-out fadeIn forwards;\n}\n.loaderContainer p {\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n}\n.loadingScreenContainer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 100000;\n  background: rgba(255, 255, 255, 0.4);\n  pointer-events: all;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  padding: 2rem;\n  box-sizing: border-box;\n}\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n} */\n.page-loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  background: white;\n}\n.loadingScreenContainer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 100000;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: all;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport interceptor_requests from '@/stores/ir-interceptor.store';\nimport { InterceptorError } from './InterceptorError';\n\n@Component({\n  tag: 'ir-interceptor',\n  styleUrl: 'ir-interceptor.css',\n  scoped: true,\n})\nexport class IrInterceptor {\n  /**\n   * List of endpoint paths that should trigger loader logic and OTP handling.\n   */\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Calendar', '/ReAllocate_Exposed_Room', '/Get_Exposed_Bookings', '/UnBlock_Exposed_Unit'];\n\n  /**\n   * List of endpoints for which to suppress toast messages.\n   */\n  @Prop() suppressToastEndpoints: string[] = [];\n\n  /**\n   * Indicates whether the loader is visible.\n   */\n  @State() isShown = false;\n\n  /**\n   * Global loading indicator toggle.\n   */\n  @State() isLoading = false;\n\n  /**\n   * Indicates if the intercepted request involves unassigned units.\n   */\n  @State() isUnassignedUnit = false;\n\n  /**\n   * Count of `/Get_Exposed_Calendar` calls in progress.\n   */\n  @State() endpointsCount = 0;\n\n  /**\n   * Identifier of the endpoint that manually disabled page loader.\n   */\n  @State() isPageLoadingStopped: string | null = null;\n\n  /**\n   * Controls visibility of the OTP modal.\n   */\n  @State() showModal: boolean;\n\n  /**\n   * Request path (used in OTP handling).\n   */\n  @State() requestUrl: string;\n\n  /**\n   * The OTP endpoint path.\n   */\n  @State() baseOTPUrl: string;\n\n  /**\n   * Email for OTP prompt.\n   */\n  @State() email: string;\n\n  /**\n   * Emits a toast notification (`type`, `title`, `description`, `position`).\n   */\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  private otpModal: HTMLIrOtpModalElement;\n\n  private pendingConfig?: AxiosRequestConfig;\n  private pendingResolve?: (resp: AxiosResponse) => void;\n  private pendingReject?: (err: any) => void;\n  private response?: AxiosResponse;\n\n  @Listen('preventPageLoad', { target: 'body' })\n  handleStopPageLoading(e: CustomEvent) {\n    this.isLoading = false;\n    this.isPageLoadingStopped = e.detail;\n  }\n  componentWillLoad() {\n    this.setupAxiosInterceptors();\n  }\n  /**\n   * Sets up Axios request and response interceptors.\n   */\n  private setupAxiosInterceptors() {\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\n  }\n  /**\n   * Removes query params from URL for consistent endpoint matching.\n   */\n  private extractEndpoint(url: string): string {\n    return url.split('?')[0];\n  }\n\n  /**\n   * Returns true if the given endpoint is listed as \"handled\".\n   */\n  private isHandledEndpoint(url: string): boolean {\n    return this.handledEndpoints.includes(url);\n  }\n  /**\n   * Handles outbound Axios requests.\n   * - Triggers global loader for certain endpoints\n   * - Tracks `/Get_Exposed_Calendar` calls separately\n   */\n  private handleRequest(config: AxiosRequestConfig) {\n    const extractedUrl = this.extractEndpoint(config.url);\n    interceptor_requests[extractedUrl] = 'pending';\n    config.params = config.params || {};\n    // if (this.ticket) {\n    //   config.params.Ticket = this.ticket;\n    // }\n    if (this.isHandledEndpoint(extractedUrl) && this.isPageLoadingStopped !== extractedUrl) {\n      if (extractedUrl !== '/Get_Exposed_Calendar') {\n        this.isLoading = true;\n      } else {\n        if (this.endpointsCount > 0) {\n          this.isLoading = true;\n        }\n      }\n    }\n    if (extractedUrl === '/Get_Exposed_Calendar') {\n      this.endpointsCount = this.endpointsCount + 1;\n    }\n    return config;\n  }\n  /**\n   * Handles inbound Axios responses:\n   * - Resets loader\n   * - Handles OTP flows and exception messages\n   */\n  private async handleResponse(response: AxiosResponse) {\n    const extractedUrl = this.extractEndpoint(response.config.url);\n    if (this.isHandledEndpoint(extractedUrl)) {\n      this.isLoading = false;\n      this.isPageLoadingStopped = null;\n    }\n    interceptor_requests[extractedUrl] = 'done';\n    if (extractedUrl === '/Validate_Exposed_OTP') {\n      return response;\n    }\n    if (response.data.ExceptionCode === 'OTP') {\n      return this.handleOtpResponse({ response, extractedUrl });\n    }\n    if (response.data.ExceptionMsg?.trim()) {\n      this.handleResponseExceptions({ response, extractedUrl });\n    }\n    return response;\n  }\n  /**\n   * Handles and throws known API exception messages.\n   */\n  private handleResponseExceptions({ response, extractedUrl }: { response: AxiosResponse; extractedUrl: string }) {\n    this.handleError(response.data.ExceptionMsg, extractedUrl, response.data.ExceptionCode);\n    throw new InterceptorError(response.data.ExceptionMsg, response.data.ExceptionCode);\n  }\n  /**\n   * Handles OTP-required API responses:\n   * - Shows OTP modal\n   * - Stores request context\n   * - Defers resolution to OTP modal\n   */\n  private handleOtpResponse({ extractedUrl, response }: { response: AxiosResponse; extractedUrl: string }) {\n    this.showModal = true;\n    this.email = response.data.ExceptionMsg;\n    const name = extractedUrl.slice(1);\n    this.baseOTPUrl = name;\n    if (name === 'Check_OTP_Necessity') {\n      let methodName: string;\n      try {\n        const body = typeof response.config.data === 'string' ? JSON.parse(response.config.data) : response.config.data;\n        methodName = body.METHOD_NAME;\n      } catch (e) {\n        console.error('Failed to parse request body for METHOD_NAME', e);\n        methodName = name; // fallback\n      }\n      this.requestUrl = methodName;\n    } else {\n      this.requestUrl = name;\n    }\n\n    this.pendingConfig = response.config;\n    this.response = response;\n    return new Promise<AxiosResponse>((resolve, reject) => {\n      this.pendingResolve = resolve;\n      this.pendingReject = reject;\n      setTimeout(() => {\n        this.otpModal?.openModal();\n      }, 10);\n    });\n  }\n  /**\n   * Displays error toasts unless the endpoint is configured to suppress them.\n   */\n  private handleError(error: string, url: string, code: string) {\n    const shouldSuppressToast = this.suppressToastEndpoints.includes(url);\n    if (!shouldSuppressToast || (shouldSuppressToast && !code)) {\n      this.toast.emit({\n        type: 'error',\n        title: error,\n        description: '',\n        position: 'top-right',\n      });\n    }\n    return Promise.reject(error);\n  }\n  /**\n   * Handles the OTP modal completion.\n   * Retries the request or cancels based on user action.\n   */\n  private async handleOtpFinished(ev: CustomEvent) {\n    if (!this.pendingConfig || !this.pendingResolve || !this.pendingReject) {\n      return;\n    }\n\n    const { otp, type } = ev.detail;\n    if (type === 'cancel') {\n      const cancelResp = {\n        config: this.pendingConfig,\n        data: { cancelled: true, baseOTPUrl: this.baseOTPUrl },\n        status: 0,\n        statusText: 'OTP Cancelled',\n        headers: {},\n        request: {},\n      } as AxiosResponse;\n      this.pendingResolve(cancelResp);\n    } else if (type === 'success') {\n      if (!otp) {\n        this.pendingReject(new Error('OTP cancelled by user'));\n      } else if (this.baseOTPUrl === 'Check_OTP_Necessity') {\n        // don't resend, just resolve with the original response\n        this.pendingResolve(this.response!);\n      } else {\n        try {\n          const retryConfig: AxiosRequestConfig = {\n            ...this.pendingConfig,\n            data: typeof this.pendingConfig.data === 'string' ? JSON.parse(this.pendingConfig.data) : this.pendingConfig.data || {},\n          };\n          const resp = await axios.request(retryConfig);\n          this.pendingResolve(resp);\n        } catch (err) {\n          this.pendingReject(err);\n        }\n      }\n    }\n\n    // common clean-up\n    this.pendingConfig = undefined;\n    this.pendingResolve = undefined;\n    this.pendingReject = undefined;\n    this.showModal = false;\n    this.baseOTPUrl = null;\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.isLoading && !this.isPageLoadingStopped && (\n          <div class=\"loadingScreenContainer\">\n            <div class=\"loaderContainer\">\n              <span class=\"page-loader\"></span>\n            </div>\n          </div>\n        )}\n        {this.showModal && (\n          <ir-otp-modal\n            email={this.email}\n            baseOTPUrl={this.baseOTPUrl}\n            requestUrl={this.requestUrl}\n            ref={el => (this.otpModal = el)}\n            onOtpFinished={this.handleOtpFinished.bind(this)}\n          ></ir-otp-modal>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: fixed;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: white;\n}\n\n.loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  position: absolute;\n  z-index: 100001;\n  padding: 20px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  border-radius: 5px;\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-loading-screen',\n  styleUrl: 'ir-loading-screen.css',\n  scoped: true,\n})\nexport class IrLoadingScreen {\n  @Prop() message: string = '';\n  render() {\n    return (\n      <Host>\n        <span class=\"loader\"></span>\n        {/* {this.message && <p class={'m-0'}>{this.message}</p>} */}\n      </Host>\n    );\n  }\n}\n",".backdropModal {\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  pointer-events: none;\n}\n.backdropModal.active {\n  cursor: pointer;\n  opacity: 1 !important;\n  pointer-events: all;\n}\n\n.ir-modal[data-state='opened'] {\n  opacity: 1;\n  /* transform: translate(-50%, 0); */\n  visibility: visible; /* Make modal visible */\n  pointer-events: all; /* Restore pointer events */\n  transition: all 0.3s ease-in-out;\n}\n.ir-alert-content {\n  padding: 1rem;\n  background: white;\n  border-radius: 5px;\n}\n.ir-alert-header {\n  display: flex;\n  font-size: 1rem;\n  font-weight: 700;\n}\n.modal {\n  z-index: 1001 !important;\n}\n\n.modal-dialog {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n}\n.ir-alert-footer {\n  gap: 10px;\n}\n.ir-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1050;\n  width: 90%;\n  max-width: 32rem;\n  overflow: hidden;\n  outline: 0;\n  opacity: 0;\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n  visibility: hidden;\n  pointer-events: none;\n}\n\n.ir-modal.active {\n  opacity: 1;\n  transform: translate(-50%, 0);\n  visibility: visible; /* Make modal visible */\n  pointer-events: all; /* Restore pointer events */\n  transition: all 0.3s ease-in-out;\n}\n","import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ir-modal',\n  styleUrl: 'ir-modal.css',\n  scoped: true,\n})\nexport class IrModal {\n  /**\n   * The title text displayed in the modal header.\n   */\n  @Prop() modalTitle: string = 'Modal Title';\n\n  /**\n   * The main content text shown in the modal body.\n   */\n  @Prop() modalBody: string = 'Modal Body';\n\n  /**\n   * Controls whether the modal title is rendered.\n   */\n  @Prop() showTitle: boolean;\n\n  /**\n   * Whether the right (confirm) button is visible.\n   */\n  @Prop() rightBtnActive: boolean = true;\n\n  /**\n   * Whether the left (cancel/close) button is visible.\n   */\n  @Prop() leftBtnActive: boolean = true;\n\n  /**\n   * Text displayed on the right (confirm) button.\n   */\n  @Prop() rightBtnText: string = 'Confirm';\n\n  /**\n   * Text displayed on the left (cancel/close) button.\n   */\n  @Prop() leftBtnText: string = 'Close';\n\n  /**\n   * Whether the modal is in a loading state, disabling interaction.\n   */\n  @Prop() isLoading: boolean = false;\n\n  /**\n   * If true, the modal automatically closes after confirm/cancel actions.\n   */\n  @Prop() autoClose: boolean = true;\n\n  /**\n   * Color theme of the right button.\n   */\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n\n  /**\n   * Color theme of the left button.\n   */\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\n\n  /**\n   * Horizontal alignment of the footer buttons.\n   */\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\n\n  /**\n   * Whether an icon should be displayed next to the title.\n   */\n  @Prop() iconAvailable: boolean = false;\n\n  /**\n   * Icon name to render next to the title (if `iconAvailable` is true).\n   */\n  @Prop() icon: string = '';\n\n  /**\n   * Controls visibility of the modal.\n   */\n  @State() isOpen: boolean = false;\n\n  /**\n   * Payload object to pass along with confirm/cancel events.\n   */\n  @Prop({ mutable: true }) item: any = {};\n\n  /**\n   * Opens the modal.\n   *\n   * Example:\n   * ```ts\n   * const modal = document.querySelector('ir-modal');\n   * modal.openModal();\n   * ```\n   */\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the modal.\n   */\n  @Method()\n  async closeModal() {\n    this.isOpen = false;\n  }\n\n  /**\n   * Fired when the confirm (right) button is clicked.\n   * Emits the current `item` value.\n   */\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\n\n  /**\n   * Fired when the cancel (left) button or backdrop is clicked.\n   */\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\n\n  @Listen('clickHandler')\n  btnClickHandler(event: CustomEvent) {\n    let target = event.target as HTMLInputElement;\n    let name = target.name;\n\n    if (name === this.leftBtnText) {\n      this.cancelModal.emit();\n      this.item = {};\n      this.closeModal();\n    } else if (name === this.rightBtnText) {\n      this.confirmModal.emit(this.item);\n      this.item = {};\n      if (this.autoClose) {\n        this.closeModal();\n      }\n    }\n  }\n\n  render() {\n    return [\n      <div\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\n        onClick={() => {\n          this.cancelModal.emit();\n          if (this.autoClose && !this.isLoading) {\n            this.closeModal();\n          }\n        }}\n      ></div>,\n      <div data-state={this.isOpen ? 'opened' : 'closed'} class={`ir-modal`} tabindex=\"-1\">\n        <div class={`ir-alert-content p-2`}>\n          {this.showTitle && (\n            <div class={`ir-alert-header`}>\n              {/*\n            <p class=\"font-weight-bold p-0 my-0 mb-1\">\n              {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} \n               {this.modalBody} \n              {this.modalTitle}\n            </p>\n            */}\n              {/* <div class=\"font-weight-bold d-flex align-items-center font-size-large my-0 py-0\">\n              <ir-icon\n                icon=\"ft-x\"\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.closeModal();\n                  this.cancelModal.emit();\n                }}\n              ></ir-icon>\n            </div> */}\n              <p>{this.modalTitle}</p>\n            </div>\n          )}\n          <div class=\"modal-body text-left p-0 mb-2\">\n            <div>{this.modalBody}</div>\n          </div>\n\n          <div class={`ir-alert-footer border-0  d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\n            {this.leftBtnActive && <ir-button btn_disabled={this.isLoading} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\n            {this.rightBtnActive && (\n              <ir-button\n                btn_color={this.rightBtnColor}\n                btn_disabled={this.isLoading}\n                isLoading={this.isLoading}\n                btn_block\n                text={this.rightBtnText}\n                name={this.rightBtnText}\n              ></ir-button>\n            )}\n          </div>\n        </div>\n      </div>,\n    ];\n  }\n}\n",".otp-input-wrapper {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-evenly;\n}\n\n.otp-digit {\n  --otp-size: 3rem;\n  width: var(--otp-size) !important;\n  height: var(--otp-size) !important;\n  padding: 0;\n  font-size: 24px;\n  font-weight: 500;\n  text-align: center;\n  background-color: #fff;\n  padding: 0 !important;\n}\n\n.otp-digit:disabled {\n  background-color: #e9ecef;\n  cursor: not-allowed;\n}\n\n/* Remove up/down arrows from number inputs */\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n\n/* Make inputs responsive */\n@media (max-width: 480px) {\n  .otp-digit {\n    width: 35px;\n    height: 45px;\n    font-size: 20px;\n  }\n\n  .otp-input-wrapper {\n    gap: 6px;\n  }\n}\n\n@media (max-width: 360px) {\n  .otp-digit {\n    width: 30px;\n    height: 40px;\n    font-size: 18px;\n  }\n\n  .otp-input-wrapper {\n    gap: 4px;\n  }\n}\n","import { Component, Event, EventEmitter, h, Host, Prop, State, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ir-otp',\n  styleUrl: 'ir-otp.css',\n  scoped: true,\n})\nexport class IrOtp {\n  /**\n   * The length of the OTP code\n   */\n  @Prop() length: number = 6;\n  /**\n   * The default OTP code\n   */\n  @Prop() defaultValue: string;\n\n  /**\n   * Whether the input is disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Placeholder character to display\n   */\n  @Prop() placeholder: string = '';\n\n  /**\n   * Input type - can be 'text', 'password', 'number', or 'tel'\n   */\n  @Prop() type: 'text' | 'password' | 'number' | 'tel' = 'number';\n\n  /**\n   * Auto focus on the first input when component loads\n   */\n  @Prop() autoFocus: boolean = true;\n\n  /**\n   * Whether to mask the input (show dots instead of text)\n   */\n  @Prop() secure: boolean = false;\n\n  /**\n   * Allow only numbers (0-9) as input\n   */\n  @Prop() numbersOnly: boolean = false;\n\n  /**\n   * Event emitted when the OTP value changes\n   */\n  @Event() otpChange: EventEmitter<string>;\n\n  /**\n   * Event emitted when the OTP is complete\n   */\n  @Event() otpComplete: EventEmitter<string>;\n\n  /**\n   * Current OTP value as an array of characters\n   */\n  @State() otpValues: string[] = [];\n\n  /**\n   * Reference to input elements\n   */\n  private inputRefs: HTMLInputElement[] = [];\n\n  /**\n   * Initialize the component\n   */\n  componentWillLoad() {\n    this.otpValues = Array(this.length).fill('');\n    if (this.defaultValue) {\n      this.setValue(this.defaultValue);\n    }\n  }\n\n  /**\n   * Focus the first input after component renders\n   */\n  componentDidLoad() {\n    if (this.autoFocus && this.inputRefs[0]) {\n      setTimeout(() => {\n        this.inputRefs[0].focus();\n      }, 0);\n    }\n  }\n\n  /**\n   * Watch for length changes and update the OTP values array\n   */\n  @Watch('length')\n  handleLengthChange(newLength: number) {\n    if (newLength < 1) return;\n\n    const oldLength = this.otpValues.length;\n\n    if (newLength > oldLength) {\n      // Add empty slots\n      this.otpValues = [...this.otpValues, ...Array(newLength - oldLength).fill('')];\n    } else if (newLength < oldLength) {\n      // Remove extra slots\n      this.otpValues = this.otpValues.slice(0, newLength);\n    }\n\n    this.emitChanges();\n  }\n\n  /**\n   * Update the current OTP value at the specified index\n   */\n  handleInput = (event: Event, index: number) => {\n    const input = event.target as HTMLInputElement;\n    let value = input.value;\n\n    // For number input type, restrict to digits only\n    if (this.numbersOnly) {\n      value = value.replace(/[^0-9]/g, '');\n    }\n\n    // Take only the last character if someone enters multiple\n    if (value.length > 1) {\n      value = value.slice(-1);\n      input.value = value;\n    }\n\n    this.otpValues[index] = value;\n    this.emitChanges();\n\n    // Move to next input if this one is filled\n    if (value && index < this.length - 1) {\n      this.inputRefs[index + 1].focus();\n    }\n  };\n\n  /**\n   * Handle keyboard navigation\n   */\n  handleKeyDown = (event: KeyboardEvent, index: number) => {\n    switch (event.key) {\n      case 'Backspace':\n        if (!this.otpValues[index] && index > 0) {\n          // If current field is empty and backspace is pressed, go to previous field\n          this.inputRefs[index - 1].focus();\n          // Prevent default to avoid browser navigation\n          event.preventDefault();\n        }\n        break;\n      case 'Delete':\n        // Clear current input on delete\n        this.otpValues[index] = '';\n        this.emitChanges();\n        break;\n      case 'ArrowLeft':\n        // Move to previous input on left arrow\n        if (index > 0) {\n          this.inputRefs[index - 1].focus();\n          event.preventDefault();\n        }\n        break;\n      case 'ArrowRight':\n        // Move to next input on right arrow\n        if (index < this.length - 1) {\n          this.inputRefs[index + 1].focus();\n          event.preventDefault();\n        }\n        break;\n      case 'Home':\n        // Move to first input\n        this.inputRefs[0].focus();\n        event.preventDefault();\n        break;\n      case 'End':\n        // Move to last input\n        this.inputRefs[this.length - 1].focus();\n        event.preventDefault();\n        break;\n    }\n  };\n\n  /**\n   * Handle paste event to populate the OTP fields\n   */\n  handlePaste = (event: ClipboardEvent, index: number) => {\n    event.preventDefault();\n    const pastedData = event.clipboardData?.getData('text') || '';\n\n    // If numbersOnly is enabled, filter non-number characters\n    const filteredData = this.numbersOnly ? pastedData.replace(/[^0-9]/g, '') : pastedData;\n\n    // Fill OTP values with pasted data\n    for (let i = 0; i < Math.min(filteredData.length, this.length - index); i++) {\n      this.otpValues[index + i] = filteredData[i];\n    }\n\n    // Update inputs with new values\n    this.inputRefs.forEach((input, idx) => {\n      input.value = this.otpValues[idx] || '';\n    });\n\n    // Focus on the next empty input or the last one\n    const nextEmptyIndex = this.otpValues.findIndex(val => !val);\n    if (nextEmptyIndex !== -1 && nextEmptyIndex < this.length) {\n      this.inputRefs[nextEmptyIndex].focus();\n    } else {\n      this.inputRefs[this.length - 1].focus();\n    }\n\n    this.emitChanges();\n  };\n\n  /**\n   * Focus handler to select all text when focused\n   */\n  handleFocus = (event: FocusEvent) => {\n    const input = event.target as HTMLInputElement;\n    if (input.value) {\n      setTimeout(() => input.select(), 0);\n    }\n  };\n\n  /**\n   * Helper method to emit change events\n   */\n  private emitChanges() {\n    const otpValue = this.otpValues.join('');\n    this.otpChange.emit(otpValue);\n\n    // If all fields are filled, trigger the complete event\n    if (this.otpValues.every(val => val !== '') && this.otpValues.length === this.length) {\n      this.otpComplete.emit(otpValue);\n    }\n  }\n\n  /**\n   * Manually clear all inputs\n   */\n  public clear() {\n    this.otpValues = Array(this.length).fill('');\n    this.inputRefs.forEach(input => {\n      input.value = '';\n    });\n    this.emitChanges();\n\n    // Focus the first input after clearing\n    if (this.inputRefs[0]) {\n      this.inputRefs[0].focus();\n    }\n  }\n\n  /**\n   * Set OTP values programmatically\n   */\n  public setValue(value: string) {\n    const valueArray = value.split('');\n\n    for (let i = 0; i < this.length; i++) {\n      this.otpValues[i] = i < valueArray.length ? valueArray[i] : '';\n    }\n\n    // Update the actual input elements\n    this.inputRefs.forEach((input, idx) => {\n      input.value = this.otpValues[idx] || '';\n    });\n\n    this.emitChanges();\n  }\n\n  render() {\n    return (\n      <Host class=\"otp-input-container\">\n        <div class=\"otp-input-wrapper\">\n          {Array(this.length)\n            .fill(null)\n            .map((_, index) => (\n              <input\n                ref={el => (this.inputRefs[index] = el as HTMLInputElement)}\n                type={this.type}\n                inputmode={this.numbersOnly ? 'numeric' : 'text'}\n                class=\"otp-digit form-control input-sm\"\n                maxlength=\"1\"\n                placeholder={this.placeholder}\n                disabled={this.disabled}\n                autocomplete=\"one-time-code\"\n                value={this.otpValues[index]}\n                onInput={e => this.handleInput(e, index)}\n                onKeyDown={e => this.handleKeyDown(e, index)}\n                onPaste={e => this.handlePaste(e, index)}\n                onFocus={this.handleFocus}\n                aria-label={`Digit ${index + 1} of ${this.length}`}\n              />\n            ))}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n:root {\n  --otp-modal-padding: 1.5rem;\n}\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n.otp-modal-header {\n  border-bottom: 0px !important;\n}\n.otp-modal {\n  z-index: 9999999 !important;\n  border: none;\n  padding: 0 !important;\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.35rem;\n  outline: 0;\n}\n.otp-modal-content {\n  background-color: white;\n  border: none;\n  border-radius: 0.35rem;\n  outline: 0;\n}\n.otp-modal-title {\n  margin-bottom: 0;\n  line-height: 1.45;\n}\n.otp-modal-body {\n  max-height: 100% !important;\n  padding: 0 var(--otp-modal-padding);\n}\n.otp-modal-header {\n  display: flex;\n  justify-content: space-between;\n  padding: var(--otp-modal-padding);\n  padding-bottom: 1rem;\n  border-top-left-radius: 0.35rem;\n  border-top-right-radius: 0.35rem;\n}\n.otp-modal-dialog {\n  z-index: 9999999 !important;\n}\n.otp-modal-footer {\n  border-top: 0 !important;\n  display: flex;\n  gap: 0.5rem;\n  flex-direction: column;\n  padding: var(--otp-modal-padding);\n  padding-top: 0.5rem !important;\n}\n.verification-message {\n  max-width: 90%;\n}\n.modal-loading-container {\n  height: 250px;\n  width: 80vw;\n}\n@media (min-width: 768px) {\n  .otp-modal-dialog,\n  .otp-modal-content {\n    width: fit-content !important;\n  }\n  .otp-modal-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n  .modal-loading-container {\n    width: 380px !important;\n  }\n  .verification-message {\n    max-width: 350px !important;\n  }\n}\n","import Token from '@/models/Token';\nimport { RoomService } from '@/services/room.service';\nimport { SystemService } from '@/services/system.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Fragment, Host, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\nimport { z } from 'zod';\n\n@Component({\n  tag: 'ir-otp-modal',\n  styleUrl: 'ir-otp-modal.css',\n  scoped: false,\n})\nexport class IrOtpModal {\n  @Prop() language: string = 'en';\n  /** Number of seconds to wait before allowing OTP resend */\n  @Prop() resendTimer = 60;\n\n  /** URL or endpoint used to validate the OTP */\n  @Prop() requestUrl: string;\n  /** URL or endpoint used to validate the OTP */\n  @Prop() baseOTPUrl: string;\n\n  /** Whether the resend option should be visible */\n  @Prop() showResend: boolean = true;\n\n  /** User's email address to display in the modal and send the OTP to */\n  @Prop() email: string;\n\n  /** Number of digits the OTP should have */\n  @Prop() otpLength: number = 6;\n\n  /** ticket for verifying and resending the verification code */\n  @Prop() ticket: string;\n\n  @State() otp = '';\n  @State() error = '';\n  @State() isLoading = false;\n  @State() timer = 60;\n\n  private dialogRef: HTMLDialogElement;\n\n  private timerInterval: number;\n  private systemService = new SystemService();\n  private roomService = new RoomService();\n  private tokenService = new Token();\n\n  private otpVerificationSchema = z.object({ email: z.string().nonempty(), requestUrl: z.string().nonempty(), otp: z.string().length(this.otpLength) });\n\n  /** Emits the final OTP (or empty on cancel) */\n  @Event({ bubbles: true, composed: true }) otpFinished: EventEmitter<{\n    otp: string;\n    type: 'success' | 'cancelled';\n  }>;\n  @State() isInitializing: boolean;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n    }\n    this.fetchLocale();\n  }\n\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(newValue);\n      this.fetchLocale();\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  handleKeyDownChange(e: KeyboardEvent) {\n    if (e.key === 'Escape' && this.dialogRef?.open) {\n      e.preventDefault();\n    }\n  }\n  /** Open & reset everything */\n  @Method()\n  async openModal() {\n    this.resetState();\n    // $(this.modalRef).modal({ backdrop: 'static', keyboard: false });\n    // $(this.modalRef).modal('show');\n    if (typeof this.dialogRef.showModal === 'function') {\n      this.dialogRef.showModal();\n    } else {\n      // fallback for browsers without dialog support\n      this.dialogRef.setAttribute('open', '');\n    }\n    if (this.showResend) this.startTimer();\n    await this.focusFirstInput();\n  }\n\n  /** Hide & clear timer */\n  @Method()\n  async closeModal() {\n    // $(this.modalRef).modal('hide');\n    if (typeof this.dialogRef.close === 'function') {\n      this.dialogRef.close();\n    } else {\n      this.dialogRef.removeAttribute('open');\n    }\n    this.otp = null;\n    this.clearTimer();\n  }\n  private async fetchLocale() {\n    if (!this.tokenService.getToken()) {\n      return;\n    }\n    this.isInitializing = true;\n    await this.roomService.fetchLanguage(this.language, ['_USER_MGT']);\n    this.isInitializing = false;\n  }\n\n  private resetState() {\n    this.otp = '';\n    this.error = '';\n    this.isLoading = false;\n    this.timer = 60;\n    this.clearTimer();\n  }\n\n  private startTimer() {\n    this.clearTimer();\n    this.timerInterval = window.setInterval(() => {\n      if (this.timer > 0) {\n        this.timer--;\n      } else {\n        this.clearTimer();\n      }\n    }, 1000);\n  }\n\n  private clearTimer() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  private async focusFirstInput() {\n    await new Promise(r => setTimeout(r, 50));\n    const first = this.dialogRef.querySelector('input');\n    first && (first as HTMLInputElement).focus();\n  }\n\n  private handleOtpComplete = (e: CustomEvent<string>) => {\n    this.error = '';\n    this.otp = e.detail;\n  };\n\n  private async verifyOtp() {\n    if (this.otp.length < this.otpLength) return;\n    this.isLoading = true;\n    this.otpVerificationSchema.parse({\n      otp: this.otp,\n      requestUrl: this.requestUrl,\n      email: this.email,\n    });\n    try {\n      await this.systemService.validateOTP({ METHOD_NAME: this.requestUrl, OTP: this.otp });\n      this.otpFinished.emit({ otp: this.otp, type: 'success' });\n      this.closeModal();\n    } catch (err) {\n      this.error = 'Verification failed. Please try again.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async resendOtp() {\n    if (this.timer > 0) return;\n    // Resend otp\n    try {\n      await this.systemService.resendOTP({ METHOD_NAME: this.requestUrl });\n      this.timer = 60;\n      this.startTimer();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private handleCancelClicked() {\n    if (this.baseOTPUrl === 'Check_OTP_Necessity') {\n      this.closeModal();\n      this.otpFinished.emit({\n        otp: null,\n        type: 'cancelled',\n      });\n      return;\n    }\n    window.location.reload();\n  }\n  disconnectedCallback() {\n    this.clearTimer();\n  }\n  render() {\n    return (\n      <Host>\n        <dialog ref={el => (this.dialogRef = el)} class=\"otp-modal\" aria-modal=\"true\">\n          <form method=\"dialog\" class=\"otp-modal-content\">\n            {this.isInitializing || !locales.entries ? (\n              <div class={'d-flex align-items-center justify-content-center modal-loading-container'}>\n                <ir-spinner></ir-spinner>\n              </div>\n            ) : (\n              <Fragment>\n                <header class=\"otp-modal-header\">\n                  <h5 class=\"otp-modal-title\">{locales.entries.Lcz_VerifyYourIdentity}</h5>\n                </header>\n\n                <section class=\"otp-modal-body d-flex align-items-center flex-column\">\n                  <p class=\"verification-message text-truncate\">\n                    {locales.entries.Lcz_WeSentYuoVerificationCode} {this.email}\n                  </p>\n                  <ir-otp autoFocus length={this.otpLength} defaultValue={this.otp} onOtpComplete={this.handleOtpComplete}></ir-otp>\n\n                  {this.error && <p class=\"text-danger small mt-1 p-0 mb-0\">{this.error}</p>}\n\n                  {this.showResend && (\n                    <Fragment>\n                      {this.timer > 0 ? (\n                        <p class=\"small mt-1\">\n                          {locales.entries.Lcz_ResendCode} 00:{String(this.timer).padStart(2, '0')}\n                        </p>\n                      ) : (\n                        <ir-button\n                          class=\"mt-1\"\n                          btn_color=\"link\"\n                          onClickHandler={e => {\n                            e.stopImmediatePropagation();\n                            e.stopPropagation();\n                            this.resendOtp();\n                          }}\n                          size=\"sm\"\n                          text={'Didn’t receive code? Resend'}\n                        ></ir-button>\n                      )}\n                    </Fragment>\n                  )}\n                </section>\n\n                <footer class=\"otp-modal-footer justify-content-auto\">\n                  <ir-button class=\"w-100\" btn_styles=\"flex-fill\" text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" onClick={this.handleCancelClicked.bind(this)}></ir-button>\n                  <ir-button\n                    class=\"w-100\"\n                    btn_styles=\"flex-fill\"\n                    text={locales.entries.Lcz_VerifyNow}\n                    isLoading={this.isLoading}\n                    btn_disabled={this.otp?.length < this.otpLength || this.isLoading}\n                    onClick={() => this.verifyOtp()}\n                  ></ir-button>\n                </footer>\n              </Fragment>\n            )}\n          </form>\n        </dialog>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Event, EventEmitter, Prop, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-password-validator',\n  styleUrl: 'ir-password-validator.css',\n  scoped: true,\n})\nexport class IrPasswordValidator {\n  /**\n   * The password string to validate\n   */\n  @Prop() password: string = '';\n\n  @Event({ bubbles: true, composed: true }) passwordValidationChange: EventEmitter<boolean>;\n\n  @Watch('password')\n  handlePasswordChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.passwordValidationChange.emit(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+]).{8,16}$/.test(newValue));\n    }\n  }\n\n  private get validLength(): boolean {\n    if (!this.password) {\n      return false;\n    }\n    return this.password.length >= 8 && this.password.length <= 16;\n  }\n\n  private get hasUppercase(): boolean {\n    if (!this.password) {\n      return false;\n    }\n    return /[A-Z]/.test(this.password);\n  }\n\n  private get hasLowercase(): boolean {\n    if (!this.password) {\n      return false;\n    }\n    return /[a-z]/.test(this.password);\n  }\n\n  private get hasDigit(): boolean {\n    if (!this.password) {\n      return false;\n    }\n    return /[0-9]/.test(this.password);\n  }\n\n  private get hasSpecialChar(): boolean {\n    if (!this.password) {\n      return false;\n    }\n    return /[!@#$%^&*()\\-_=+]/.test(this.password);\n  }\n  render() {\n    return (\n      <div class=\"m-0 p-0\">\n        <requirement-check isValid={this.validLength} text=\"Minimum 8 characters\"></requirement-check>\n        <requirement-check isValid={this.hasUppercase} text=\"At least one uppercase letter\"></requirement-check>\n        <requirement-check isValid={this.hasLowercase} text=\"At least one lowercase letter\"></requirement-check>\n        <requirement-check isValid={this.hasDigit} text=\"At least one digit\"></requirement-check>\n        <requirement-check isValid={this.hasSpecialChar} text=\"At least one special character\"></requirement-check>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.input-container {\n  display: flex;\n  align-items: center;\n  padding: 0 !important;\n}\n.input-container:focus-within {\n  border-color: #1e9ff2;\n}\n.border-theme {\n  border-color: #cacfe7;\n}\n.input-container input {\n  flex: 1;\n  border: 0;\n}\n.input-container input:focus {\n  outline: none;\n}\n.dropdown-trigger {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: white;\n  border: 0;\n  border-right: 1px solid #cacfe7;\n}\n.ir-dropdown-container {\n  position: absolute;\n  z-index: 1000;\n  bottom: -30px;\n  width: 100%;\n  left: 0;\n  background: white;\n}\n.input-container label {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0 5px;\n}\n.flag {\n  height: 1rem;\n  aspect-ratio: 4/3;\n  border-radius: 3px;\n}\n.is-invalid {\n  border-color: #ff4961;\n}\n.phone_prefix_label {\n  padding: 0 0.5rem;\n  margin: 0;\n}\n","import { ICountry } from '@/components';\nimport { BookingService } from '@/services/booking.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-phone-input',\n  styleUrl: 'ir-phone-input.css',\n  scoped: true,\n})\nexport class IrPhoneInput {\n  @Element() el: HTMLElement;\n  /**\n   * Label displayed next to the phone input.\n   */\n  @Prop() label: string;\n\n  /**\n   * Initial phone number value.\n   */\n  @Prop() value: string = '';\n\n  /**\n   * Disables the phone input when true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, styles the input to indicate an error state.\n   */\n  @Prop() error: boolean = false;\n\n  /**\n   * Auth token used by the booking service (if needed).\n   */\n  @Prop() token: string;\n\n  /**\n   * Two-letter language code used for country fetching.\n   */\n  @Prop() language: string;\n\n  /**\n   * Default country ID used if no phone prefix is set.\n   */\n  @Prop() default_country: number = null;\n\n  /**\n   * If provided, sets the phone prefix and updates selected country.\n   */\n  @Prop() phone_prefix: string | null = null;\n\n  /**\n   * Placeholder text for the input.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Country list, used to populate prefix and dropdown.\n   * If not provided, fetched from the booking service.\n   */\n  @Prop({ mutable: true }) countries: ICountry[] = [];\n\n  /**\n   * Identifier for test automation.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Emits when the user changes the phone number.\n   * Emits `{ phone_prefix, mobile }` object.\n   *\n   * Example:\n   * ```tsx\n   * <ir-phone-input onTextChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\n\n  /**\n   * Tracks current user input value.\n   */\n  @State() inputValue: string = '';\n\n  /**\n   * Tracks visibility of the country dropdown.\n   */\n  @State() isDropdownVisible: boolean = false;\n\n  /**\n   * Currently selected country (based on prefix or ID).\n   */\n  @State() currentCountry: ICountry;\n\n  // private cmp_countries: ICountry[] = [];\n\n  private bookingService: BookingService = new BookingService();\n\n  async componentWillLoad() {\n    if (this.countries.length === 0) {\n      const countries = await this.bookingService.getCountries(this.language);\n      this.countries = countries;\n    }\n    if (this.phone_prefix) {\n      this.setCountryFromPhonePrefix();\n    } else {\n      if (this.default_country) {\n        this.setCurrentCountry(this.default_country);\n      }\n    }\n    this.inputValue = this.value;\n  }\n  @Watch('value')\n  handleValueChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.inputValue = newValue;\n    }\n  }\n  @Watch('phone_prefix')\n  handlePhoneChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.setCountryFromPhonePrefix();\n    }\n  }\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isDropdownVisible = false;\n    }\n  }\n  /**\n   * Handles user input:\n   * - Removes all characters except numbers and \"+\"\n   * - Updates state and emits new phone number\n   */\n  private handleInputChange(e: InputEvent) {\n    let inputElement = e.target as HTMLInputElement;\n    let inputValue = inputElement.value;\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\n    inputElement.value = inputValue;\n    this.inputValue = inputValue;\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\n  }\n  /**\n   * Sets the current country based on `phone_prefix` prop or country ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCountryFromPhonePrefix() {\n    let country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\n    if (!country) {\n      country = this.countries.find(c => c.id.toString() === this.phone_prefix);\n      if (!country) {\n        return;\n      }\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  /**\n   * Sets the current country by its ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCurrentCountry(id: number) {\n    const country = this.countries.find(country => country.id === id);\n    if (!country) {\n      throw new Error('Invalid country id');\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"form-group mr-0\">\n          {/* <p class=\"mb-0\">Phone</p> */}\n          <div class=\"input-group row m-0 p-0 position-relative\">\n            {this.label && (\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\n                <label class={`input-group-text  border-theme flex-grow-1 text-dark  `}>{this.label}</label>\n              </div>\n            )}\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\n              <button type=\"button\" onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\n                {this.currentCountry ? <img src={this.currentCountry?.flag} class=\"flag\" /> : <p class=\"p-0 m-0 \">{locales.entries.Lcz_Select}</p>}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\n                </svg>\n              </button>\n\n              <p class={'phone_prefix_label'}>{this.currentCountry?.phone_prefix}</p>\n              <input\n                data-testid={this.testId}\n                maxLength={14}\n                type=\"text\"\n                placeholder={this.placeholder}\n                required\n                value={this.inputValue}\n                disabled={this.disabled}\n                onInput={e => this.handleInputChange(e)}\n              />\n            </div>\n            {this.isDropdownVisible && (\n              <div class=\"ir-dropdown-container\">\n                <ir-combobox\n                  onComboboxValueChange={e => {\n                    this.setCurrentCountry(+e.detail.data);\n                    this.isDropdownVisible = false;\n                  }}\n                  class=\"bg-white\"\n                  autoFocus\n                  placeholder=\"Search country\"\n                  data={this.countries.map(c => ({\n                    id: c.id.toString(),\n                    name: `${c.name} (${c.phone_prefix})`,\n                    image: c.flag,\n                  }))}\n                ></ir-combobox>\n              </div>\n            )}\n          </div>\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  width: 100%;\n}\n* {\n  box-sizing: border-box;\n}\n.popover-trigger {\n  all: unset;\n  cursor: pointer;\n}\n.popover-trigger:hover,\n.popover-trigger:focus {\n  color: #000;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-popover',\n  styleUrl: 'ir-popover.css',\n  shadow: false,\n})\nexport class IrPopover {\n  @Element() el: HTMLElement;\n  /**\n   * Content to display inside the popover.\n   * Can be plain text or HTML depending on `renderContentAsHtml`.\n   */\n  @Prop() content: string;\n\n  /**\n   * Horizontal offset (left) of the popover from its trigger.\n   * Used in inline style as `--ir-popover-left`.\n   */\n  @Prop() irPopoverLeft: string = '10px';\n\n  /**\n   * Position of the popover relative to the trigger.\n   * Options: `'top'`, `'bottom'`, `'left'`, `'right'`, `'auto'`.\n   */\n  @Prop() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto' = 'auto';\n\n  /**\n   * Event that triggers the popover.\n   * Options: `'focus'`, `'click'`, `'hover'`.\n   */\n  @Prop() trigger: 'focus' | 'click' | 'hover' = 'focus';\n\n  /**\n   * Whether to treat `content` as raw HTML.\n   * When true, `content` will be injected with `html: true` in jQuery popover.\n   */\n  @Prop() renderContentAsHtml: boolean = false;\n\n  /**\n   * Internal flag to ensure popover is only initialized once.\n   */\n  private initialized: boolean = false;\n\n  /**\n   * Reference to the HTML element that triggers the popover.\n   */\n  private popoverTrigger: HTMLElement;\n\n  componentDidLoad() {\n    if (this.initialized) {\n      return;\n    }\n    this.initializePopover();\n  }\n  /**\n   * Initializes the jQuery popover on the trigger element using configured props.\n   */\n  private initializePopover() {\n    $(this.popoverTrigger).popover({\n      trigger: this.trigger,\n      content: this.content,\n      placement: this.placement,\n      html: this.renderContentAsHtml,\n    });\n    this.initialized = true;\n  }\n\n  disconnectedCallback() {\n    $(this.popoverTrigger).popover('dispose');\n  }\n\n  render() {\n    return (\n      <Host style={{ '--ir-popover-left': this.irPopoverLeft }}>\n        {this.trigger !== 'focus' ? (\n          <p\n            ref={el => (this.popoverTrigger = el)}\n            class=\"popover-title m-0 p-0\"\n            style={{\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              cursor: 'pointer',\n            }}\n          >\n            <slot />\n          </p>\n        ) : (\n          <button tabindex=\"0\" class=\"popover-trigger\" ref={el => (this.popoverTrigger = el)}>\n            <slot />\n          </button>\n        )}\n      </Host>\n    );\n  }\n}\n",".border-theme {\n  border: 1px solid #cacfe7;\n}\n@keyframes bounce {\n  0%,\n  100% {\n    transform: scale(1);\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n  }\n  50% {\n    transform: scale(1.2);\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n}\n.bounce-3 {\n  animation: bounce 1s 1;\n}\n","import { Component, Prop, h, Event, EventEmitter, State, Watch, Listen } from '@stencil/core';\nimport { selectOption } from '@/common/models';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-select',\n  styleUrl: 'ir-select.css',\n  scoped: true,\n})\nexport class IrSelect {\n  // Name of the select input\n  @Prop() name: string;\n\n  // Options to populate the select\n  @Prop() data: selectOption[];\n\n  // Text shown in the label\n  @Prop() label = '<label>';\n\n  // Custom class for select\n  @Prop() selectStyles: string;\n\n  // Inline styles for the select\n  @Prop() selectForcedStyles: { [key: string]: string };\n\n  // Custom class for the outer container\n  @Prop() selectContainerStyle: string;\n\n  // Selected value of the select\n  @Prop({ reflect: true, mutable: true }) selectedValue = null;\n\n  // Marks the select as required\n  @Prop() required: boolean;\n\n  // Whether to render the label\n  @Prop() LabelAvailable: boolean = true;\n\n  // Placeholder text for the first option\n  @Prop() firstOption: string = 'Select';\n\n  // Enable/disable default form styling\n  @Prop() selectStyle: boolean = true;\n\n  // Whether to show the first placeholder option\n  @Prop() showFirstOption: boolean = true;\n\n  // Set to true when the form is submitted\n  @Prop() submited: boolean = false;\n\n  // Size of the select: 'sm' | 'md' | 'lg'\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  // Size of the text: 'sm' | 'md' | 'lg'\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  // Position of the label\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\n\n  // Background color of the label\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\n\n  // Text color of the label\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\n\n  // Border color of the label\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\n\n  // Width of the label (Bootstrap cols)\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  // Unique ID for the select element\n  @Prop() select_id: string = v4();\n\n  // Data-testid for testing\n  @Prop() testId: string;\n\n  // Whether the select is disabled\n  @Prop() disabled: boolean;\n\n  // Whether the select has an error state\n  @Prop({ mutable: true }) error: boolean = false;\n\n  // Tracks if the field has been touched\n  @State() initial: boolean = true;\n\n  // Tracks if the field is valid\n  @State() valid: boolean = false;\n\n  // Emits selected value changes\n  @Event({ bubbles: true, composed: true }) selectChange: EventEmitter;\n\n  private selectEl: HTMLSelectElement;\n\n  @Watch('selectedValue')\n  watchHandler(newValue: string) {\n    if (newValue !== null && this.required) {\n      this.valid = true;\n    }\n  }\n  @Watch('submited')\n  watchHandler2(newValue: boolean) {\n    if (newValue && this.required) {\n      this.initial = false;\n    }\n  }\n  @Listen('animateIrSelect', { target: 'body' })\n  handleButtonAnimation(e: CustomEvent) {\n    if (!this.selectEl || e.detail !== this.select_id) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.selectEl.classList.add('border-danger');\n  }\n\n  // Handle select change event\n  // Example: onInput={this.handleSelectChange.bind(this)}\n  private handleSelectChange(event) {\n    this.selectEl.classList.remove('border-danger');\n    if (this.required) {\n      this.initial = false;\n      this.valid = event.target.checkValidity();\n      this.selectedValue = event.target.value;\n      this.selectChange.emit(this.selectedValue);\n    } else {\n      this.selectedValue = event.target.value;\n      this.selectChange.emit(this.selectedValue);\n    }\n  }\n  count = 0;\n\n  render() {\n    let className = 'form-control';\n    let label = (\n      <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\n        <label\n          htmlFor={this.select_id}\n          class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\n            this.labelBackground ? 'bg-' + this.labelBackground : ''\n          } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\n        >\n          {this.label}\n          {this.required ? '*' : ''}\n        </label>\n      </div>\n    );\n    if (this.selectStyle === false) {\n      className = '';\n    }\n    if (this.required && !this.valid && !this.initial) {\n      className = `${className} border-danger`;\n    }\n\n    if (!this.LabelAvailable) {\n      label = '';\n    }\n\n    return (\n      <div class={`form-group m-0 ${this.selectContainerStyle}`}>\n        <div class=\"input-group row m-0\">\n          {label}\n          <select\n            disabled={this.disabled}\n            aria-invalid={this.error ? 'true' : 'false'}\n            data-testid={this.testId}\n            style={this.selectForcedStyles}\n            ref={el => (this.selectEl = el)}\n            id={this.select_id}\n            class={`${this.selectStyles} ${this.error ? 'border-danger' : ''} ${className} form-control-${this.size} text-${this.textSize} col-${\n              this.LabelAvailable ? 12 - this.labelWidth : 12\n            }`}\n            onInput={this.handleSelectChange.bind(this)}\n            required={this.required}\n          >\n            {this.showFirstOption && <option value={''}>{this.firstOption}</option>}\n            {this.data.map(item => {\n              return (\n                <option selected={this.selectedValue === item.value} value={item.value}>\n                  {item.text}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n",".backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  cursor: pointer;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n  transition: all 0.5s;\n  opacity: 0;\n  pointer-events: none;\n  transition: all 0.5s;\n}\n.backdrop.active {\n  opacity: 1;\n  pointer-events: all;\n}\n\n.sidebar-right {\n  position: fixed;\n  top: 0;\n  right: -120%;\n  bottom: 0;\n  width: var(--sidebar-width, 40rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 100;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background-color: var(--sidebar-backgound, #fff);\n  /* padding: var(--ir-sidebar-padding, 0.5rem 0); */\n  padding-block: var(--ir-sidebar-padding-block, 0);\n  padding-inline: var(--ir-sidebar-padding-inline, 0.5rem);\n  padding-top: var(--ir-sidebar-padding-top, unset);\n  padding-bottom: var(--ir-sidebar-padding-bottom, unset);\n  padding-left: var(--ir-sidebar-padding-left, unset);\n  padding-right: var(--ir-sidebar-padding-right, unset);\n}\n.sidebar-right.active {\n  right: 0;\n  overflow-y: auto;\n}\n\n.sidebar-left {\n  position: fixed;\n  top: 0;\n  left: -100%;\n  bottom: 0;\n  width: var(--sidebar-width, 30rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 200;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background: var(--sidebar-backgound, #fff);\n  /* padding: var(--ir-sidebar-padding, 0.5rem 0); */\n  padding-block: var(--ir-sidebar-padding-block, 0);\n  padding-inline: var(--ir-sidebar-padding-inline, 0.5rem);\n  padding-top: var(--ir-sidebar-padding-top, unset);\n  padding-bottom: var(--ir-sidebar-padding-bottom, unset);\n  padding-left: var(--ir-sidebar-padding-left, unset);\n  padding-right: var(--ir-sidebar-padding-right, unset);\n}\n.sidebar-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 1rem;\n  border-bottom: 1px solid #e4e5ec;\n}\n.sidebar-title p {\n  font-weight: 500;\n  font-size: 1.2rem;\n}\n.sidebar-left.active {\n  left: 0;\n  overflow-y: scroll;\n}\n.close {\n  position: absolute;\n  top: 0.5rem;\n  right: 1rem;\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n","import { handleBodyOverflow } from '@/utils/utils';\nimport { Component, Prop, h, Method, Event, EventEmitter, Watch, Listen, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-sidebar',\n  styleUrl: 'ir-sidebar.css',\n  shadow: true,\n})\nexport class IrSidebar {\n  @Element() el: HTMLIrSidebarElement;\n  /**\n   * Identifier for the sidebar instance.\n   */\n  @Prop() name: string;\n\n  /**\n   * Which side of the screen the sidebar appears on.\n   * Options: `'left'` or `'right'`.\n   */\n  @Prop() side: 'right' | 'left' = 'right';\n\n  /**\n   * Whether to show the close (X) button in the sidebar header.\n   */\n  @Prop() showCloseButton: boolean = true;\n\n  /**\n   * Whether the sidebar is open.\n   * Can be used with two-way binding.\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * Inline styles applied to the sidebar container.\n   */\n  @Prop() sidebarStyles: Partial<CSSStyleDeclaration>;\n\n  /**\n   * Label text displayed in the sidebar header.\n   */\n  @Prop() label: string;\n\n  /**\n   * Prevents the sidebar from closing when `toggleSidebar()` is called.\n   * When true, emits `beforeSidebarClose` instead of toggling.\n   */\n  @Prop() preventClose: boolean;\n\n  /**\n   * Event emitted when the sidebar is toggled open/closed.\n   * Emits the current `open` state.\n   */\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\n\n  /**\n   * Event emitted *before* the sidebar attempts to close,\n   * but only if `preventClose` is set to true.\n   */\n  @Event({ bubbles: true, composed: true }) beforeSidebarClose: EventEmitter;\n\n  private sidebarRef: HTMLDivElement;\n\n  componentDidLoad() {\n    this.applyStyles();\n  }\n\n  @Watch('sidebarStyles')\n  handleSidebarStylesChange() {\n    this.applyStyles();\n  }\n\n  @Watch('open')\n  handleOpenChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      handleBodyOverflow(newValue);\n    }\n  }\n\n  @Listen('keydown', { target: 'body' })\n  handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape' && this.open) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      return this.toggleSidebar();\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Toggles the sidebar's visibility.\n   *\n   * - If `preventClose` is true, emits `beforeSidebarClose` and does nothing else.\n   * - Otherwise, emits `irSidebarToggle` with the current `open` state.\n   *\n   * Example:\n   * ```ts\n   * const el = document.querySelector('ir-sidebar');\n   * await el.toggleSidebar();\n   * ```\n   */\n  @Method()\n  async toggleSidebar() {\n    if (this.preventClose) {\n      this.beforeSidebarClose.emit();\n      return;\n    }\n    this.irSidebarToggle.emit(this.open);\n  }\n\n  /**\n   * Applies inline styles defined in `sidebarStyles` to the sidebar container.\n   */\n  private applyStyles() {\n    for (const property in this.sidebarStyles) {\n      if (this.sidebarStyles.hasOwnProperty(property)) {\n        this.sidebarRef.style[property] = this.sidebarStyles[property];\n      }\n    }\n  }\n\n  render() {\n    let className = '';\n    if (this.open) {\n      className = 'active';\n    } else {\n      className = '';\n    }\n\n    return [\n      <div\n        class={`backdrop ${className}`}\n        onClick={() => {\n          this.toggleSidebar();\n        }}\n      ></div>,\n      <div ref={el => (this.sidebarRef = el)} class={`sidebar-${this.side} ${className}`}>\n        {this.showCloseButton && (\n          <div class={'sidebar-title'}>\n            <p class={'p-0 m-0'}>{this.label}</p>\n            <div class={'p-0 m-0 sidebar-icon-container'}>\n              <ir-icon\n                class=\"\"\n                onIconClickHandler={() => {\n                  this.toggleSidebar();\n                }}\n              >\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n                  <path\n                    fill=\"#6b6f82\"\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                  />\n                </svg>\n              </ir-icon>\n            </div>\n          </div>\n        )}\n        <slot name=\"sidebar-body\" />\n      </div>,\n    ];\n  }\n}\n",":host {\n  width: var(--ir-spinner-size, 1.25rem);\n  height: var(--ir-spinner-size, 1.25rem);\n  border: var(--ir-spinner-border-width, 2.5px) solid var(--ir-spinner-color, #3f3f3f);\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-spinner',\n  styleUrl: 'ir-spinner.css',\n  shadow: true,\n})\nexport class IrSpinner {\n  @Element() el: HTMLIrSpinnerElement;\n  /**\n   * Size of the spinner (diameter).\n   * Example: `size={2}` with `unit=\"rem\"` sets spinner to `2rem`.\n   */\n  @Prop() size: number;\n\n  /**\n   * Thickness of the spinner's border.\n   * Example: `borderWidth={4}` renders a `4px` or `4rem` thick border.\n   */\n  @Prop() borderWidth: number;\n\n  /**\n   * CSS unit used for `size` and `borderWidth`.\n   * Can be `'px'` or `'rem'`.\n   */\n  @Prop() unit: 'px' | 'rem' = 'rem';\n\n  /**\n   * Color of the spinner.\n   * Accepts any valid CSS color string.\n   */\n  @Prop() color: string;\n\n  componentWillLoad() {\n    this.initStyles();\n  }\n  @Watch('size')\n  handleSpinnerSizeChange() {\n    this.initStyles();\n  }\n  @Watch('borderWidth')\n  handleSpinnerBorderWidthChange() {\n    this.initStyles();\n  }\n  @Watch('unit')\n  handleSpinnerUnitChange() {\n    this.initStyles();\n  }\n  @Watch('color')\n  handleSpinnerColorChange() {\n    this.initStyles();\n  }\n  /**\n   * Applies CSS custom properties based on current prop values.\n   */\n  private initStyles() {\n    if (this.size) {\n      this.applyCssElement(`${this.size}${this.unit}`, '--ir-spinner-size');\n    }\n    if (this.borderWidth) {\n      this.applyCssElement(`${this.borderWidth}${this.unit}`, '--ir-spinner-size');\n    }\n    if (this.color) {\n      this.applyCssElement(`${this.color}`, '--ir-spinner-color');\n    }\n  }\n  /**\n   * Helper function to set CSS custom properties on the host element.\n   *\n   * @param value - The CSS value to apply\n   * @param key - The CSS custom property name (e.g., `--ir-spinner-size`)\n   */\n  private applyCssElement(value: string, key: '--ir-spinner-color' | '--ir-spinner-border-width' | '--ir-spinner-size' | (string & {})) {\n    this.el.style.setProperty(key, value);\n  }\n  render() {\n    return <Host></Host>;\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n  box-sizing: border-box;\n  --ir-root-width: 36px;\n  --ir-root-height: 20px;\n}\n\n.hidden-input {\n  transform: translateX(-100%);\n  position: absolute;\n  pointer-events: none;\n  opacity: 0;\n  margin: 0;\n  width: var(--ir-root-width);\n  height: var(--ir-root-height);\n}\n.SwitchRoot {\n  all: unset;\n  padding: 0;\n  margin: 0;\n  width: var(--ir-root-width);\n  height: var(--ir-root-height);\n  background-color: var(--ir-root-inactive-color, #ff4961);\n  position: relative;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;\n  --webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  border-radius: 9999px;\n  box-sizing: border-box;\n}\n.SwitchRoot:disabled {\n  opacity: 80%;\n}\n.SwitchRoot:focus-visible {\n  outline: 1px solid var(--ir-root-active-color, rgb(55, 188, 155));\n  outline-offset: 1px;\n}\n.SwitchRoot[data-state='checked'] {\n  background-color: var(--ir-root-active-color, rgb(55, 188, 155));\n}\n.SwitchThumb {\n  padding: 0;\n  margin: 0;\n  display: block;\n  width: calc(var(--ir-root-height) - 3px);\n  height: calc(var(--ir-root-height) - 3px);\n  border-radius: 9999px;\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px;\n  transition: transform 100ms ease 0s;\n  transform: translateX(2px);\n  will-change: transform;\n}\n.SwitchThumb[data-state='checked'] {\n  transform: translateX(calc(var(--ir-root-height) - 3px));\n}\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-switch',\n  styleUrl: 'ir-switch.css',\n  scoped: true,\n})\nexport class IrSwitch {\n  /**\n   * Whether the switch is currently checked (on).\n   * This is mutable and can be toggled internally.\n   */\n  @Prop({ mutable: true }) checked = false;\n\n  /**\n   * Optional ID for the switch.\n   * If not provided, a random ID will be generated.\n   */\n  @Prop() switchId: string;\n\n  /**\n   * Disables the switch if true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Emitted when the checked state changes.\n   * Emits `true` when turned on, `false` when turned off.\n   *\n   * Example:\n   * ```tsx\n   * <ir-switch onCheckChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() checkChange: EventEmitter<boolean>;\n\n  private switchRoot: HTMLButtonElement;\n  private _id = '';\n\n  componentWillLoad() {\n    this._id = this.generateRandomId(10);\n  }\n\n  componentDidLoad() {\n    if (!this.switchRoot) {\n      return;\n    }\n    this.switchRoot.setAttribute('aria-checked', this.checked ? 'true' : 'false');\n  }\n  /**\n   * Generates a random alphanumeric ID of specified length.\n   *\n   * @param length Number of characters in the ID.\n   * @returns A string with the generated ID.\n   */\n  private generateRandomId(length: number) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n  /**\n   * Toggles the `checked` state of the switch and updates accessibility attributes.\n   * Also emits the `checkChange` event with the new state.\n   *\n   * Example:\n   * ```ts\n   * const el = document.querySelector('ir-switch');\n   * el.handleCheckChange(); // toggles on/off\n   * ```\n   */\n  private handleCheckChange() {\n    this.checked = !this.checked;\n    this.switchRoot.setAttribute('aria-checked', this.checked ? 'true' : 'false');\n    this.checkChange.emit(this.checked);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          disabled={this.disabled}\n          ref={el => (this.switchRoot = el)}\n          type=\"button\"\n          id={this.switchId || this._id}\n          onClick={this.handleCheckChange.bind(this)}\n          role=\"switch\"\n          data-state={this.checked ? 'checked' : 'unchecked'}\n          value={'on'}\n          class=\"SwitchRoot\"\n        >\n          <span class=\"SwitchThumb\" data-state={this.checked ? 'checked' : 'unchecked'}></span>\n        </button>\n        <input type=\"checkbox\" checked={this.checked} aria-hidden=\"true\" tabIndex={-1} value={'on'} class=\"hidden-input\" />\n      </Host>\n    );\n  }\n}\n",".prepend-textarea {\n  padding: 0 !important ;\n}\n.ta-prepend-text {\n  width: 100%;\n}\n","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-textarea',\n  styleUrl: 'ir-textarea.css',\n  scoped: true,\n})\nexport class IrTextArea {\n  /**\n   * Number of visible text lines.\n   */\n  @Prop() rows = 3;\n\n  /**\n   * Number of visible character columns.\n   */\n  @Prop() cols = 5;\n\n  /**\n   * Unused property, intended to store textarea text.\n   */\n  @Prop() text = '';\n\n  /**\n   * Text label displayed above or beside the textarea.\n   */\n  @Prop() label = '<label>';\n\n  /**\n   * Placeholder text shown when input is empty.\n   */\n  @Prop() placeholder = '<placeholder>';\n\n  /**\n   * Current value of the textarea (supports two-way binding).\n   */\n  @Prop() value = '';\n\n  /**\n   * Maximum number of characters allowed.\n   */\n  @Prop() maxLength: number = 250;\n\n  /**\n   * Additional classes for the textarea element.\n   */\n  @Prop() textareaClassname: string;\n\n  /**\n   * Layout style of the textarea:\n   * `'default'` shows label above, `'prepend'` shows label on the left.\n   */\n  @Prop() variant: 'default' | 'prepend' = 'default';\n\n  /**\n   * Width of the label in grid columns (for `variant=\"prepend\"`).\n   */\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  /**\n   * Inline styles applied directly to the textarea.\n   */\n  @Prop() styles: { [key: string]: string };\n\n  /**\n   * `data-testid` for targeting in tests.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Indicates if the field is in an error state.\n   */\n  @State() error = false;\n\n  /**\n   * Emits when the textarea content changes.\n   *\n   * Example:\n   * ```tsx\n   * <ir-textarea onTextChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() textChange: EventEmitter<string>;\n\n  @Watch('aria-invalid')\n  handleAriaInvalidChange(newValue) {\n    this.error = newValue === 'true';\n  }\n  render() {\n    if (this.variant === 'prepend') {\n      return (\n        <fieldset class=\"input-group\">\n          <div class={`input-group-prepend col-${this.labelWidth} prepend-textarea`}>\n            <span class=\"input-group-text ta-prepend-text\">{this.label}</span>\n          </div>\n          <textarea\n            data-testid={this.testId}\n            value={this.value}\n            class={`form-control`}\n            style={{ height: '7rem', ...this.styles }}\n            maxLength={this.maxLength}\n            onChange={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n            aria-label={this.label}\n          ></textarea>\n        </fieldset>\n      );\n    }\n    return (\n      <div class={'form-group'}>\n        <label>{this.label}</label>\n        <textarea\n          data-testid={this.testId}\n          style={this.styles}\n          maxLength={this.maxLength}\n          rows={this.rows}\n          value={this.value}\n          class={`form-control ${this.textareaClassname} ${this.error ? 'border-danger' : ''}`}\n          placeholder={this.placeholder}\n          onInput={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\n        ></textarea>\n      </div>\n    );\n  }\n}\n",":host {\n  padding: 0px 0;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n:host([border-shown]) {\n  border-bottom: 1px solid #e4e5ec !important;\n  border-color: #e4e5ec !important ;\n  padding-bottom: 15px;\n}\n:host([display-context='sidebar']) {\n  padding: 15px 0;\n  justify-content: space-between !important;\n  width: 100% !important;\n  border-bottom: 1px solid #e4e5ec !important;\n  border-color: #e4e5ec !important ;\n}\n.title-body {\n  margin: 0;\n  padding: 0;\n}\n.label {\n  font-family: inherit !important;\n}\n\n@media only screen and (max-width: 641px) {\n  :host {\n    flex-direction: column;\n    gap: 8px;\n    align-items: flex-start;\n  }\n  :host([display-context='sidebar']) {\n    flex-direction: row;\n  }\n}\n","import { Component, Element, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-title',\n  styleUrl: 'ir-title.css',\n  scoped: true,\n})\nexport class IrTitle {\n  @Prop() label: string;\n  @Prop({ reflect: true }) borderShown: boolean;\n  @Prop({ reflect: true }) displayContext: 'default' | 'sidebar' = 'default';\n  @Prop({ reflect: true }) justifyContent:\n    | 'center'\n    | 'start'\n    | 'end'\n    | 'flex-start'\n    | 'flex-end'\n    | 'left'\n    | 'right'\n    | 'normal'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly'\n    | 'stretch'\n    | 'safe center'\n    | 'unsafe center' = 'start';\n  @Event() closeSideBar: EventEmitter<null>;\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    this.el.style.justifyContent = this.justifyContent;\n  }\n  @Watch('justifyContent')\n  handleJustifyContentChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.el.style.justifyContent = newValue;\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <h4 class=\"text-left label font-medium-2 py-0 my-0\">{this.label}</h4>\n        {this.displayContext === 'sidebar' && (\n          <ir-icon\n            class={'close'}\n            onIconClickHandler={() => {\n              this.closeSideBar.emit(null);\n            }}\n          >\n            <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n              <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\n            </svg>\n          </ir-icon>\n        )}\n        {this.displayContext !== 'sidebar' && (\n          <div class={'title-body'}>\n            <slot name=\"title-body\"></slot>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n","button,\np,\nh3,\ndiv {\n  all: unset;\n}\n:host {\n  --rd-viewport-padding: 25px;\n  --rd-success: #2b9a66;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  padding: var(--rd-viewport-padding);\n  gap: 10px;\n  max-width: 100vw;\n  margin: 0;\n  list-style: none;\n  z-index: 2147483647;\n  outline: none;\n  pointer-events: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    --rd-success: #33b074;\n  }\n}\np {\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n:host([position='top-left']) {\n  top: 0;\n  left: 0;\n}\n:host([position='top-right']) {\n  top: 0;\n  right: 0;\n}\n:host([position='bottom-left']) {\n  bottom: 0;\n  left: 0;\n}\n:host([position='bottom-right']) {\n  bottom: 0;\n  right: 0;\n}\n.icon-container {\n  height: 25px;\n  width: 25px;\n  border-radius: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  /* position: absolute;\n  top: 50%;\n  right: calc(var(--rd-viewport-padding) / 2); \n  transform: translateY(-50%);*/\n}\n.icon-container > svg {\n  margin: 0;\n  color: white;\n  stroke-width: 5px;\n}\n.success {\n  background-color: var(--rd-success);\n}\n.error {\n  background-color: red;\n}\n.ToastRoot {\n  background-color: hsl(0, 0%, 100%);\n  border-radius: 0.5rem;\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n  padding: 15px;\n  display: grid;\n  grid-template-areas: 'title action' 'description action';\n  grid-template-columns: auto max-content;\n  column-gap: 15px;\n  align-items: center;\n  pointer-events: none;\n  opacity: 0;\n  border: 1px solid hsl(214.3, 31.8%, 91.4%);\n  position: relative;\n}\n.ToastRoot[data-state='open'] {\n  pointer-events: all;\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n.ToastRoot[data-state='closed'] {\n  pointer-events: none;\n  animation: hide 100ms ease-in;\n}\n\n@-webkit-keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n.ToastTitle {\n  grid-area: title;\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n\n.ToastDescription {\n  grid-area: description;\n  margin: 0;\n  margin-top: 5px;\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ToastAction {\n  grid-area: action;\n}\n","import { Component, Host, Element, Listen, Prop, h, State } from '@stencil/core';\nimport { TPositions, IToast } from './toast';\n\n@Component({\n  tag: 'ir-toast',\n  styleUrl: 'ir-toast.css',\n  scoped: true,\n})\nexport class IrToast {\n  @Element() element: HTMLElement;\n\n  /**\n   * Position where toasts will appear.\n   * Options include: `'top-left'`, `'top-right'`, `'bottom-left'`, `'bottom-right'`.\n   */\n  @Prop({ reflect: true, mutable: true }) position: TPositions = 'bottom-left';\n\n  /**\n   * Array of active toast messages.\n   */\n  @State() toasts: IToast[] = [];\n\n  @Listen('toast', { target: 'body' })\n  onToast(event: CustomEvent<IToast>) {\n    const toast: IToast = event.detail;\n    this.showToast(toast);\n  }\n\n  private showToast(toast: IToast) {\n    const toastrOptions = {\n      positionClass: 'toast-top-right',\n      closeButton: true,\n      timeOut: toast.duration || 5000,\n    };\n\n    switch (toast.type) {\n      case 'success':\n        toastr.success(toast.title, '', toastrOptions);\n        break;\n      case 'error':\n        toastr.error(toast.title, '', toastrOptions);\n        break;\n    }\n  }\n\n  render() {\n    return <Host></Host>;\n  }\n}\n",":host {\n  display: block;\n  font-size: 0.875rem;\n}\n.valid {\n  color: var(--green, #28d094);\n}\n.requirement {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'requirement-check',\n  styleUrl: 'requirement-check.css',\n  scoped: true,\n})\nexport class RequirementCheck {\n  /**\n   * Whether this requirement has been satisfied (true/false).\n   */\n  @Prop() isValid: boolean = false;\n\n  /**\n   * The requirement text to display (e.g. \"At least one lowercase letter\").\n   */\n  @Prop() text: string = '';\n\n  render() {\n    return (\n      <div class={{ requirement: true, valid: this.isValid }}>\n        <ir-icons style={{ '--icon-size': '0.875rem' }} name={this.isValid ? 'check' : 'xmark'}></ir-icons>\n        <span>{this.text}</span>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}