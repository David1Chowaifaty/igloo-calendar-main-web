{"version":3,"names":["irHkTasksCss","IrHkTasksStyle0","IrHkTasks","this","hkNameCache","roomService","RoomService","houseKeepingService","HouseKeepingService","token","Token","componentWillLoad","ticket","setToken","init","ticketChanged","newValue","oldValue","handleCloseSidebar","e","stopImmediatePropagation","stopPropagation","isSidebarOpen","isLoading","propertyId","propertyid","p","Error","console","log","propertyData","getExposedProperty","id","aname","language","is_backend","include_units_hk_status","My_Result","property_id","requests","getHkTasks","from_date","moment","format","to_date","getExposedHKSetup","fetchLanguage","push","results","Promise","all","tasks","updateTasks","error","buildHousekeeperNameCache","_b","_a","housekeeping_store","hk_criteria","housekeepers","forEach","hk","name","map","t","Object","assign","v4","housekeeper","hkm_id","hkName","_c","find","handleHeaderButtonPress","detail","modal","openModal","handleModalConfirmation","selectedTasks","length","executeHKAction","actions","description","unit_id","unit","booking_nbr","fetchTasksWithFilters","clearSelectedHkTasks","emit","closeModal","applyFilters","isApplyFiltersLoading","filters","cleaning_periods","cleaning_frequencies","dusty_units","highlight_check_ins","code","highlight_window","render","h","Host","class","style","gap","onHeaderButtonPress","bind","isCleanedEnabled","onApplyFilters","onRowSelectChange","autoClose","ref","el","isRequestPending","onConfirmModal","iconAvailable","icon","leftBtnText","locales","entries","Lcz_NO","rightBtnText","Lcz_Yes","leftBtnColor","rightBtnColor","modalTitle","Lcz_Confirmation","modalBody","open","side","onIrSidebarToggle","showCloseButton","slot","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","initializeApp","handleResetData","include_sales_rate_plans","updateHKStore","unshift","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","flag","toast","position","title","type","borderShown","label","LabelAvailable","showFirstOption","selectedValue","calendar_data","is_automatic_check_in_out","onSelectChange","data","text","value"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\n@media only screen and (min-width: 900px) {\r\n  /* td {\r\n    min-width: 140px !important;\r\n    width: max-content !important;\r\n  } */\r\n}\r\n@media only screen and (max-width: 900px) {\r\n  /* td {\r\n    min-width: 100px !important;\r\n  } */\r\n  .table-container {\r\n    width: max-content !important;\r\n  }\r\n}\r\n","import { IPendingActions, Task } from '@/models/housekeeping';\r\nimport Token from '@/models/Token';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\r\nimport moment from 'moment';\r\nimport { v4 } from 'uuid';\r\nimport { TaskFilters } from './types';\r\n\r\n@Component({\r\n  tag: 'ir-hk-tasks',\r\n  styleUrl: 'ir-hk-tasks.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkTasks {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n  @State() selectedDuration = '';\r\n  @State() selectedHouseKeeper = '0';\r\n  @State() selectedRoom: IPendingActions | null = null;\r\n  @State() archiveOpened = false;\r\n  @State() property_id: number;\r\n  @State() tasks: Task[] = [];\r\n  @State() selectedTasks: Task[] = [];\r\n  @State() isSidebarOpen: boolean;\r\n  @State() isApplyFiltersLoading: boolean;\r\n  @State() filters: TaskFilters;\r\n\r\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\r\n\r\n  private hkNameCache: Record<number, string> = {};\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private token = new Token();\r\n  private modal: HTMLIrModalElement;\r\n\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.init();\r\n  }\r\n\r\n  @Listen('closeSideBar')\r\n  handleCloseSidebar(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.isSidebarOpen = false;\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!this.propertyid && !this.p) {\r\n        throw new Error('Property ID or username is required');\r\n      }\r\n      // let roomResp = null;\r\n      if (!propertyId) {\r\n        console.log(propertyId);\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_units_hk_status: true,\r\n        });\r\n        // roomResp = propertyData;\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      this.property_id = propertyId;\r\n      const requests = [\r\n        this.houseKeepingService.getHkTasks({ property_id: this.property_id, from_date: moment().format('YYYY-MM-DD'), to_date: moment().format('YYYY-MM-DD') }),\r\n        this.houseKeepingService.getExposedHKSetup(this.property_id),\r\n        this.roomService.fetchLanguage(this.language),\r\n      ];\r\n      if (this.propertyid) {\r\n        requests.push(\r\n          this.roomService.getExposedProperty({\r\n            id: this.propertyid,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_units_hk_status: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      const results = await Promise.all(requests);\r\n      const tasks = results[0];\r\n      if (tasks) {\r\n        this.updateTasks(tasks);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private buildHousekeeperNameCache() {\r\n    this.hkNameCache = {};\r\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\r\n      if (hk.id != null && hk.name != null) {\r\n        this.hkNameCache[hk.id] = hk.name;\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateTasks(tasks) {\r\n    this.buildHousekeeperNameCache();\r\n    this.tasks = tasks.map(t => ({\r\n      ...t,\r\n      id: v4(),\r\n      housekeeper: (() => {\r\n        const name = this.hkNameCache[t.hkm_id];\r\n        if (name) {\r\n          return name;\r\n        }\r\n        const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\r\n        this.hkNameCache[t.hkm_id] = hkName;\r\n        return hkName;\r\n      })(),\r\n    }));\r\n  }\r\n\r\n  private handleHeaderButtonPress(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { name } = e.detail;\r\n    switch (name) {\r\n      case 'cleaned':\r\n        this.modal?.openModal();\r\n        break;\r\n      case 'export':\r\n        break;\r\n      case 'archive':\r\n        this.isSidebarOpen = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async handleModalConfirmation(e: CustomEvent) {\r\n    try {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      if (this.selectedTasks.length === 0) {\r\n        return;\r\n      }\r\n      await this.houseKeepingService.executeHKAction({\r\n        actions: this.selectedTasks.map(t => ({ description: 'Cleaned', hkm_id: t.hkm_id === 0 ? null : t.hkm_id, unit_id: t.unit.id, booking_nbr: t.booking_nbr })),\r\n      });\r\n      await this.fetchTasksWithFilters();\r\n    } finally {\r\n      this.selectedTasks = [];\r\n      this.clearSelectedHkTasks.emit();\r\n      this.modal.closeModal();\r\n    }\r\n  }\r\n\r\n  private async applyFilters(e: CustomEvent) {\r\n    try {\r\n      this.isApplyFiltersLoading = true;\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.filters = { ...e.detail };\r\n      await this.fetchTasksWithFilters();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isApplyFiltersLoading = false;\r\n    }\r\n  }\r\n  private async fetchTasksWithFilters() {\r\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\r\n\r\n    const tasks = await this.houseKeepingService.getHkTasks({\r\n      housekeepers,\r\n      cleaning_frequencies: cleaning_frequencies?.code,\r\n      dusty_units: dusty_units?.code,\r\n      highlight_window: highlight_check_ins?.code,\r\n      property_id: this.property_id,\r\n      from_date: moment().format('YYYY-MM-DD'),\r\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\r\n    });\r\n    if (tasks) {\r\n      this.updateTasks(tasks);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host data-testid=\"hk_tasks_base\">\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\r\n          <ir-tasks-header onHeaderButtonPress={this.handleHeaderButtonPress.bind(this)} isCleanedEnabled={this.selectedTasks.length > 0}></ir-tasks-header>\r\n          <div class=\"d-flex flex-column flex-md-row mt-1 \" style={{ gap: '1rem' }}>\r\n            <ir-tasks-filters\r\n              isLoading={this.isApplyFiltersLoading}\r\n              onApplyFilters={e => {\r\n                this.applyFilters(e);\r\n              }}\r\n            ></ir-tasks-filters>\r\n            <ir-tasks-table\r\n              onRowSelectChange={e => {\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n                this.selectedTasks = e.detail;\r\n              }}\r\n              class=\"flex-grow-1 w-100\"\r\n              tasks={this.tasks}\r\n            ></ir-tasks-table>\r\n          </div>\r\n        </section>\r\n        <ir-modal\r\n          autoClose={false}\r\n          ref={el => (this.modal = el)}\r\n          isLoading={isRequestPending('/Execute_HK_Action')}\r\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\r\n          iconAvailable={true}\r\n          icon=\"ft-alert-triangle danger h1\"\r\n          leftBtnText={locales.entries.Lcz_NO}\r\n          rightBtnText={locales.entries.Lcz_Yes}\r\n          leftBtnColor=\"secondary\"\r\n          rightBtnColor={'primary'}\r\n          modalTitle={locales.entries.Lcz_Confirmation}\r\n          modalBody={'Update selected unit(s) to Clean'}\r\n        ></ir-modal>\r\n        <ir-sidebar\r\n          open={this.isSidebarOpen}\r\n          side={'right'}\r\n          id=\"editGuestInfo\"\r\n          onIrSidebarToggle={e => {\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n            this.isSidebarOpen = false;\r\n          }}\r\n          showCloseButton={false}\r\n        >\r\n          {this.isSidebarOpen && <ir-hk-archive propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\r\n        </ir-sidebar>\r\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\r\n          </ir-title> */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import Token from '@/models/Token';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IToast } from '@components/ui/ir-toast/toast';\r\n@Component({\r\n  tag: 'ir-housekeeping',\r\n  styleUrl: 'ir-housekeeping.css',\r\n  scoped: true,\r\n})\r\nexport class IrHousekeeping {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private token = new Token();\r\n\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\r\n  }\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!propertyId) {\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_sales_rate_plans: true,\r\n        });\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\r\n      const requests = [this.houseKeepingService.getExposedHKSetup(propertyId), this.roomService.fetchLanguage(this.language, ['_HK_FRONT'])];\r\n\r\n      if (this.propertyid) {\r\n        requests.unshift(\r\n          this.roomService.getExposedProperty({\r\n            id: propertyId,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_sales_rate_plans: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      await Promise.all(requests);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  private saveAutomaticCheckInCheckout(e: CustomEvent): void {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    try {\r\n      this.roomService.SetAutomaticCheckInOut({\r\n        property_id: this.propertyid,\r\n        flag: e.detail === 'auto',\r\n      });\r\n      this.toast.emit({\r\n        position: 'top-right',\r\n        title: 'Saved Successfully',\r\n        description: '',\r\n        type: 'success',\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-toast></ir-toast>\r\n        <section class=\"p-1\">\r\n          <h3 class=\"mb-2\">Housekeeping & Check-In Setup</h3>\r\n          <div class=\"card p-1\">\r\n            <ir-title borderShown label=\"Check-In Mode\"></ir-title>\r\n            <div class={'d-flex align-items-center'}>\r\n              <p class=\"my-0 py-0 mr-1  \">Check in & Check out guests automatically:</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\r\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\r\n                data={[\r\n                  { text: `Yes, as per the property's policy.`, value: 'auto' },\r\n                  { text: 'No, I will do it manually. ', value: 'manual' },\r\n                ]}\r\n              ></ir-select>\r\n            </div>\r\n          </div>\r\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\r\n          <ir-hk-team class=\"mb-1\"></ir-hk-team>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"8ZAAA,MAAMA,EAAe,2IACrB,MAAAC,EAAeD,E,MCgBFE,EAAS,M,oFAsBZC,KAAAC,YAAsC,GACtCD,KAAAE,YAAc,IAAIC,EAClBH,KAAAI,oBAAsB,IAAIC,EAC1BL,KAAAM,MAAQ,IAAIC,E,cAtBO,G,YACF,G,0DAIJ,M,sBACO,G,yBACG,I,kBACiB,K,mBACvB,M,sCAEA,G,mBACQ,G,yFAajC,iBAAAC,GACE,GAAIR,KAAKS,SAAW,GAAI,CACtBT,KAAKM,MAAMI,SAASV,KAAKS,QACzBT,KAAKW,M,EAKT,aAAAC,CAAcC,EAAkBC,GAC9B,GAAID,IAAaC,EAAU,CACzB,M,CAEFd,KAAKM,MAAMI,SAASV,KAAKS,QACzBT,KAAKW,M,CAIP,kBAAAI,CAAmBC,GACjBA,EAAEC,2BACFD,EAAEE,kBACFlB,KAAKmB,cAAgB,K,CAGf,UAAMR,GACZ,IACEX,KAAKoB,UAAY,KACjB,IAAIC,EAAarB,KAAKsB,WACtB,IAAKtB,KAAKsB,aAAetB,KAAKuB,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAGlB,IAAKH,EAAY,CACfI,QAAQC,IAAIL,GACZ,MAAMM,QAAqB3B,KAAKE,YAAY0B,mBAAmB,CAC7DC,GAAI,EACJC,MAAO9B,KAAKuB,EACZQ,SAAU/B,KAAK+B,SACfC,WAAY,KACZC,wBAAyB,OAG3BZ,EAAaM,EAAaO,UAAUL,E,CAEtC7B,KAAKmC,YAAcd,EACnB,MAAMe,EAAW,CACfpC,KAAKI,oBAAoBiC,WAAW,CAAEF,YAAanC,KAAKmC,YAAaG,UAAWC,IAASC,OAAO,cAAeC,QAASF,IAASC,OAAO,gBACxIxC,KAAKI,oBAAoBsC,kBAAkB1C,KAAKmC,aAChDnC,KAAKE,YAAYyC,cAAc3C,KAAK+B,WAEtC,GAAI/B,KAAKsB,WAAY,CACnBc,EAASQ,KACP5C,KAAKE,YAAY0B,mBAAmB,CAClCC,GAAI7B,KAAKsB,WACTS,SAAU/B,KAAK+B,SACfC,WAAY,KACZC,wBAAyB,O,CAK/B,MAAMY,QAAgBC,QAAQC,IAAIX,GAClC,MAAMY,EAAQH,EAAQ,GACtB,GAAIG,EAAO,CACThD,KAAKiD,YAAYD,E,EAEnB,MAAOE,GACPzB,QAAQC,IAAIwB,E,SAEZlD,KAAKoB,UAAY,K,EAIb,yBAAA+B,G,QACNnD,KAAKC,YAAc,IACnBmD,GAAAC,EAAAC,EAAmBC,eAAW,MAAAF,SAAA,SAAAA,EAAEG,gBAAY,MAAAJ,SAAA,SAAAA,EAAEK,SAAQC,IACpD,GAAIA,EAAG7B,IAAM,MAAQ6B,EAAGC,MAAQ,KAAM,CACpC3D,KAAKC,YAAYyD,EAAG7B,IAAM6B,EAAGC,I,KAK3B,WAAAV,CAAYD,GAClBhD,KAAKmD,4BACLnD,KAAKgD,MAAQA,EAAMY,KAAIC,GAACC,OAAAC,OAAAD,OAAAC,OAAA,GACnBF,GAAC,CACJhC,GAAImC,IACJC,YAAa,M,UACX,MAAMN,EAAO3D,KAAKC,YAAY4D,EAAEK,QAChC,GAAIP,EAAM,CACR,OAAOA,C,CAET,MAAMQ,GAASC,GAAAhB,GAAAC,EAAAC,EAAmBC,eAAW,MAAAF,SAAA,SAAAA,EAAEG,gBAAY,MAAAJ,SAAA,SAAAA,EAAEiB,MAAKX,GAAMA,EAAG7B,KAAOgC,EAAEK,YAAO,MAAAE,SAAA,SAAAA,EAAET,KAC7F3D,KAAKC,YAAY4D,EAAEK,QAAUC,EAC7B,OAAOA,CACR,EARY,M,CAYT,uBAAAG,CAAwBtD,G,MAC9BA,EAAEC,2BACFD,EAAEE,kBACF,MAAMyC,KAAEA,GAAS3C,EAAEuD,OACnB,OAAQZ,GACN,IAAK,WACHN,EAAArD,KAAKwE,SAAK,MAAAnB,SAAA,SAAAA,EAAEoB,YACZ,MACF,IAAK,SACH,MACF,IAAK,UACHzE,KAAKmB,cAAgB,KACrB,M,CAIE,6BAAMuD,CAAwB1D,GACpC,IACEA,EAAEC,2BACFD,EAAEE,kBACF,GAAIlB,KAAK2E,cAAcC,SAAW,EAAG,CACnC,M,OAEI5E,KAAKI,oBAAoByE,gBAAgB,CAC7CC,QAAS9E,KAAK2E,cAAcf,KAAIC,IAAC,CAAOkB,YAAa,UAAWb,OAAQL,EAAEK,SAAW,EAAI,KAAOL,EAAEK,OAAQc,QAASnB,EAAEoB,KAAKpD,GAAIqD,YAAarB,EAAEqB,wBAEzIlF,KAAKmF,uB,SAEXnF,KAAK2E,cAAgB,GACrB3E,KAAKoF,qBAAqBC,OAC1BrF,KAAKwE,MAAMc,Y,EAIP,kBAAMC,CAAavE,GACzB,IACEhB,KAAKwF,sBAAwB,KAC7BxE,EAAEC,2BACFD,EAAEE,kBACFlB,KAAKyF,QAAO3B,OAAAC,OAAA,GAAQ/C,EAAEuD,cAChBvE,KAAKmF,uB,CACX,MAAOjC,GACPzB,QAAQC,IAAIwB,E,SAEZlD,KAAKwF,sBAAwB,K,EAGzB,2BAAML,G,MACZ,MAAMO,iBAAEA,EAAgBlC,aAAEA,EAAYmC,qBAAEA,EAAoBC,YAAEA,EAAWC,oBAAEA,IAAwBxC,EAAArD,KAAKyF,WAAO,MAAApC,SAAA,EAAAA,EAAI,GAEnH,MAAML,QAAchD,KAAKI,oBAAoBiC,WAAW,CACtDmB,eACAmC,qBAAsBA,IAAoB,MAApBA,SAAoB,SAApBA,EAAsBG,KAC5CF,YAAaA,IAAW,MAAXA,SAAW,SAAXA,EAAaE,KAC1BC,iBAAkBF,IAAmB,MAAnBA,SAAmB,SAAnBA,EAAqBC,KACvC3D,YAAanC,KAAKmC,YAClBG,UAAWC,IAASC,OAAO,cAC3BC,SAASiD,IAAgB,MAAhBA,SAAgB,SAAhBA,EAAkBI,OAAQvD,IAASC,OAAO,gBAErD,GAAIQ,EAAO,CACThD,KAAKiD,YAAYD,E,EAIrB,MAAAgD,GACE,GAAIhG,KAAKoB,UAAW,CAClB,OAAO6E,EAAA,yB,CAET,OACEA,EAACC,EAAI,eAAa,iBAChBD,EAAA,iBACAA,EAAA,uBACAA,EAAA,WAASE,MAAM,yBAAyBC,MAAO,CAAEC,IAAK,SACpDJ,EAAA,mBAAiBK,oBAAqBtG,KAAKsE,wBAAwBiC,KAAKvG,MAAOwG,iBAAkBxG,KAAK2E,cAAcC,OAAS,IAC7HqB,EAAA,OAAKE,MAAM,uCAAuCC,MAAO,CAAEC,IAAK,SAC9DJ,EAAA,oBACE7E,UAAWpB,KAAKwF,sBAChBiB,eAAgBzF,IACdhB,KAAKuF,aAAavE,EAAE,IAGxBiF,EAAA,kBACES,kBAAmB1F,IACjBA,EAAEC,2BACFD,EAAEE,kBACFlB,KAAK2E,cAAgB3D,EAAEuD,MAAM,EAE/B4B,MAAM,oBACNnD,MAAOhD,KAAKgD,UAIlBiD,EAAA,YACEU,UAAW,MACXC,IAAKC,GAAO7G,KAAKwE,MAAQqC,EACzBzF,UAAW0F,EAAiB,sBAC5BC,eAAgB/G,KAAK0E,wBAAwB6B,KAAKvG,MAClDgH,cAAe,KACfC,KAAK,8BACLC,YAAaC,EAAQC,QAAQC,OAC7BC,aAAcH,EAAQC,QAAQG,QAC9BC,aAAa,YACbC,cAAe,UACfC,WAAYP,EAAQC,QAAQO,iBAC5BC,UAAW,qCAEb3B,EAAA,cACE4B,KAAM7H,KAAKmB,cACX2G,KAAM,QACNjG,GAAG,gBACHkG,kBAAmB/G,IACjBA,EAAEC,2BACFD,EAAEE,kBACFlB,KAAKmB,cAAgB,KAAK,EAE5B6G,gBAAiB,OAEhBhI,KAAKmB,eAAiB8E,EAAA,iBAAe5E,WAAYrB,KAAKmC,YAAa8F,KAAK,kB,4FCpQnF,MAAMC,EAAoB,uCAC1B,MAAAC,EAAeD,E,MCWFE,EAAc,M,sDAWjBpI,KAAAE,YAAc,IAAIC,EAClBH,KAAAI,oBAAsB,IAAIC,EAC1BL,KAAAM,MAAQ,IAAIC,E,cAZO,G,YACF,G,0DAKJ,K,CAQrB,iBAAAC,GACE,GAAIR,KAAKS,SAAW,GAAI,CACtBT,KAAKM,MAAMI,SAASV,KAAKS,QACzBT,KAAKqI,e,EAIT,qBAAMC,CAAgBtH,GACpBA,EAAEC,2BACFD,EAAEE,wBACIlB,KAAKI,oBAAoBsC,kBAAkB1C,KAAKsB,W,CAGxD,aAAAV,CAAcC,EAAkBC,GAC9B,GAAID,IAAaC,EAAU,CACzB,M,CAEFd,KAAKM,MAAMI,SAASV,KAAKS,QACzBT,KAAKqI,e,CAGP,mBAAMA,GACJ,IACErI,KAAKoB,UAAY,KACjB,IAAIC,EAAarB,KAAKsB,WACtB,IAAKD,EAAY,CACf,MAAMM,QAAqB3B,KAAKE,YAAY0B,mBAAmB,CAC7DC,GAAI,EACJC,MAAO9B,KAAKuB,EACZQ,SAAU/B,KAAK+B,SACfC,WAAY,KACZuG,yBAA0B,OAE5BlH,EAAaM,EAAaO,UAAUL,E,CAEtC2G,EAAc,qBAAsB,CAAElI,MAAON,KAAKS,OAAQ0B,YAAad,EAAYU,SAAU/B,KAAK+B,WAClG,MAAMK,EAAW,CAACpC,KAAKI,oBAAoBsC,kBAAkBrB,GAAarB,KAAKE,YAAYyC,cAAc3C,KAAK+B,SAAU,CAAC,eAEzH,GAAI/B,KAAKsB,WAAY,CACnBc,EAASqG,QACPzI,KAAKE,YAAY0B,mBAAmB,CAClCC,GAAIR,EACJU,SAAU/B,KAAK+B,SACfC,WAAY,KACZuG,yBAA0B,O,OAK1BzF,QAAQC,IAAIX,E,CAClB,MAAOc,GACPzB,QAAQyB,MAAMA,E,SAEdlD,KAAKoB,UAAY,K,EAGb,4BAAAsH,CAA6B1H,GACnCA,EAAEC,2BACFD,EAAEE,kBACF,IACElB,KAAKE,YAAYyI,uBAAuB,CACtCxG,YAAanC,KAAKsB,WAClBsH,KAAM5H,EAAEuD,SAAW,SAErBvE,KAAK6I,MAAMxD,KAAK,CACdyD,SAAU,YACVC,MAAO,qBACPhE,YAAa,GACbiE,KAAM,W,CAER,MAAO9F,GACPzB,QAAQC,IAAIwB,E,EAGhB,MAAA8C,GACE,GAAIhG,KAAKoB,UAAW,CAClB,OAAO6E,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,iBACAA,EAAA,WAASE,MAAM,OACbF,EAAA,MAAIE,MAAM,QAAM,iCAChBF,EAAA,OAAKE,MAAM,YACTF,EAAA,YAAUgD,YAAW,KAACC,MAAM,kBAC5BjD,EAAA,OAAKE,MAAO,6BACVF,EAAA,KAAGE,MAAM,oBAAkB,8CAC3BF,EAAA,aACEkD,eAAgB,MAChBC,gBAAiB,MACjBC,cAAeC,EAAcC,0BAA4B,OAAS,SAClEC,eAAgBxI,GAAKhB,KAAK0I,6BAA6B1H,GACvDyI,KAAM,CACJ,CAAEC,KAAM,qCAAsCC,MAAO,QACrD,CAAED,KAAM,8BAA+BC,MAAO,eAMtD1D,EAAA,cAAYE,MAAM,U"}