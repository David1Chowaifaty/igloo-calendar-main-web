{"version":3,"names":["iglooCalendarCss","IglooCalendarStyle0","IglooCalendar","constructor","hostRef","this","ticket","calendarData","Object","days","Array","scrollViewDragging","dialogData","bookingItem","editBookingItem","showLegend","showPaymentDetails","showToBeAssigned","unassignedDates","roomNightsData","renderAgain","showBookProperty","totalAvailabilityQueue","isAuthenticated","bookingService","BookingService","roomService","RoomService","eventsService","EventsService","toBeAssignedService","ToBeAssignedService","countries","visibleCalendarCells","x","y","today","reachedEndOfCalendar","token","Token","scrollViewDragPos","top","left","onScrollContentMoveHandler","event","buttons","dx","clientX","dy","clientY","scrollContainer","scrollTop","scrollLeft","Math","abs","onScrollContentMoveEndHandler","document","removeEventListener","componentWillLoad","init","componentDidLoad","scrollToElement","handleDeleteEvent","ev","stopImmediatePropagation","preventDefault","deleteEvent","detail","error","handleCalendarSidebarEvents","console","log","stopPropagation","calendarSidebarState","scrollPageToRoom","targetScrollClass","refClass","element","querySelector","topLeftCell","gotoRoom","scrollTo","gotoRect","getBoundingClientRect","containerRect","topLeftCellRect","height","handleShowDialog","_a","calendarModalEl","openModal","handleShowRoomNightsDialog","handleBookingDatasChange","bookings","bookingEvents","filter","bookingEvent","ID","push","STATUS","updateBookingEventsDateRange","assign","handleUpdateBookingEvent","e","newBookingEvent","map","showBookingPopupEventDataHandler","onOptionSelect","updateEventDataHandler","bookedData","find","bookedEvent","id","data","entries","forEach","key","value","dragOverEventDataHandler","containerDays","querySelectorAll","containerRooms","htmlElement","offsetLeft","offsetWidth","width","getAttribute","offsetTop","offsetHeight","highlightDragOver","ticketChanged","newValue","oldValue","setToken","initializeApp","calDates","from","from_date","to","to_date","handleUnAssignedDatesChange","keys","length","highlightedDate","renderModalBody","reason","_b","description","setUpCalendarData","roomResp","bookingResp","currency","allowedBookingSources","allowed_booking_sources","adultChildConstraints","adult_child_constraints","legendData","getLegendData","is_vacation_rental","My_Params_Get_Rooming_Data","FROM","TO","startingDate","Date","getTime","endingDate","formattedLegendData","formatLegendColors","myBookings","toDate","moment","TO_DATE","fromDate","FROM_DATE","isSame","toBeAssignedEvents","propertyId","propertyid","p","Error","propertyData","getExposedProperty","aname","language","is_backend","include_units_hk_status","My_Result","property_id","requests","getCalendarData","getCountries","fetchLanguage","results","Promise","all","calendar_dates","months","setRoomsData","paymentMethods","some","item","code","transformDateForScroll","startingDay","setHours","monthsInfo","setTimeout","getUnassignedDates","addUnassignedDates","socket","io","on","async","msg","handleSocketMessage","msgAsObject","JSON","parse","REASON","KEY","PAYLOAD","toString","result","includes","reasonHandlers","DORESERVATION","handleDoReservation","BLOCK_EXPOSED_UNIT","handleBlockExposedUnit","ASSIGN_EXPOSED_ROOM","handleAssignExposedRoom","REALLOCATE_EXPOSED_ROOM_BLOCK","handleReallocateExposedRoomBlock","DELETE_CALENDAR_POOL","handleDeleteCalendarPool","GET_UNASSIGNED_DATES","handleGetUnassignedDates","UPDATE_CALENDAR_AVAILABILITY","handleUpdateCalendarAvailability","CHANGE_IN_DUE_AMOUNT","handleChangeInDueAmount","CHANGE_IN_BOOK_STATUS","handleChangeInBookStatus","NON_TECHNICAL_CHANGE_IN_BOOKING","handleNonTechnicalChangeInBooking","ROOM_STATUS_CHANGED","handleRoomStatusChanged","UNIT_HK_STATUS_CHANGED","handleUnitHKStatusChanged","SHARING_PERSONS_UPDATED","handleSharingPersonsUpdated","handler","call","warn","IDENTIFIER","identifier","mainGuest","guests","is_main","NAME","formatName","first_name","last_name","ROOM_INFO","sharing_persons","room_identifier","getRoomStatus","in_out","status","status_code","BASE_STATUS_CODE","CHECKIN","CHECKOUT","updatedRooms","roomsInfo","changedRoomTypeIdx","findIndex","roomType","ROOM_CATEGORY_ID","changedRoomType","changedPhysicalRoomIdx","physicalrooms","room","PR_ID","updatedPhysicalRooms","targetPhysicalRoom","hk_status","HKS_CODE","transformedBooking","transformNewBooking","AddOrUpdateRoomBookings","transformNewBLockedRooms","POOL","parsedResult","parseDateRange","dateToFormattedString","removeUnassignedDates","reduceAvailableUnitEvent","emit","str","pairs","split","pair","res","clearTimeout","availabilityTimeout","updateTotalAvailability","pools","BALANCE","due_amount","bookingStatus","BOOKING_NUMBER","booking_nbr","PRIVATE_NOTE","getPrivateNote","extras","checkBookingAvailability","booking","eventData","defaultDateRange","fromDateStr","getDateStr","fromDateTimeStamp","toDateStr","toDateTimeStamp","dateDifference","NO_OF_DAYS","isBlockUnit","STATUS_CODE","queue","selectedDate","date","setMilliseconds","setSeconds","setMinutes","index","day","currentDate","room_type_index","rate","room_type_id","exposed_inventory","rts","availability","roomServiceResp","roomsData","roomtypes","roomCategory","expanded","calendar_data","aData","calendar_legends","locale","getDate","toLocaleString","month","getFullYear","goToDate","gotoDay","pool","undefined","d","format","shouldRenderCalendarView","opt","calendarElement","classList","remove","toggle","dt","start","end","handleDateSearch","setDate","noScroll","getMonth","event_type","closeSideMenu","addDatesToCalendar","newBookings","newMonths","monthName","daysCount","pop","stringify","newBooking","existingBookingIndex","calculateDaysBetweenDates","diff","shift","dates","startDate","defaultFromDate","endDate","defaultToDate","add","nextDay","getNextDay","dragScrollContent","isPreventPageScroll","target","hasAncestorWithClass","addEventListener","calendarScrolling","highlightedElement","right","isVisible","window","innerWidth","leftSideMenuSize","maxWidth","leftX","rightX","cells","monthContainer","monthRect","indexOf","nextTwoMonths","addTwoMonthToDate","titleElement","marginLeft","monthWidth","style","className","currentElement","matches","parentElement","hightLightElement","currentPosition","xElement","yElement","pos","dragOverHighlightElement","dragOverElement","moveBookingTo","bookingId","fromRoomId","toRoomId","moveToDay","convertDMYToISO","computeEndDate","nbOfDays","handleModalConfirm","resetModalState","bookingNumber","roomIdentifier","handleExposedRoomInOut","finally","openCalendarSidebar","type","payload","sidebarPayload","reallocateEvent","then","catch","revertBooking","handleModalCancel","handleRoomNightsDialogClose","handleSideBarToggle","handleCloseBookingWindow","render","h","Host","class","Fragment","unassignedDatesProp","onOptionEvent","evt","onMouseDown","onScroll","isScrollViewDragging","message","bookingData","onCloseBookingWindow","onIrSidebarToggle","bind","open","showCloseButton","sidebarStyles","background","slot","onCloseRoomNightsDialog","defaultDates","hasPrint","hasReceipt","hasCloseButton","onCloseSidebar","is_from_front_desk","hasRoomEdit","hasRoomDelete","hasRoomAdd","_d","_c","_e","roomName","_g","_f","totalGuests","_j","_h","sharedPersons","_l","_k","checkIn","_o","_m","checkin","onCloseModal","ref","el","modalTitle","rightBtnActive","_p","hideConfirmButton","leftBtnText","_q","locales","Lcz_Cancel","rightBtnText","_r","Lcz_Confirm","modalBody","onConfirmModal","onCancelModal","irHkTasksCss","IrHkTasksStyle0","IrHkTasks","isLoading","selectedDuration","selectedHouseKeeper","selectedRoom","archiveOpened","tasks","selectedTasks","hkNameCache","houseKeepingService","HouseKeepingService","table_sorting","Map","handleCloseSidebar","isSidebarOpen","handleSortingChanged","field","direction","set","getHkTasks","getExposedHKSetup","tasksResult","updateTasks","buildHousekeeperNameCache","housekeeping_store","hk_criteria","housekeepers","hk","name","t","v4","housekeeper","hkm_id","hkName","handleHeaderButtonPress","modal","sortingArray","url","fetchTasksWithFilters","downloadFile","handleModalConfirmation","executeHKAction","actions","unit_id","unit","clearSelectedHkTasks","closeModal","applyFilters","isApplyFiltersLoading","filters","export_to_excel","cleaning_periods","cleaning_frequencies","dusty_units","highlight_check_ins","cleaning_frequency","dusty_window","highlight_window","is_export_to_excel","gap","onHeaderButtonPress","isCleanedEnabled","onApplyFilters","onRowSelectChange","autoClose","isRequestPending","iconAvailable","icon","Lcz_NO","Lcz_Yes","leftBtnColor","rightBtnColor","Lcz_Confirmation","getToken","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","handleResetData","include_sales_rate_plans","updateHKStore","housekeeping_enabled","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","flag","toast","position","title","Lcz_HouseKeepingAndCheckInSetup","borderShown","label","Lcz_CheckInOutGuestsAutomatically","LabelAvailable","showFirstOption","selectedValue","is_automatic_check_in_out","onSelectChange","text","Lcz_YesAsPerPropertyPolicy","Lcz_NoIWillDoItManually"],"sources":["src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.igl-calendar {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  height: 100%;\r\n}\r\n\r\n/* .calendarScrollContainer div {\r\n  position: relative;\r\n} */\r\n\r\n.calendarScrollContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  position: relative;\r\n  white-space: nowrap;\r\n  border-left: 2px solid grey;\r\n}\r\n\r\n.showToBeAssigned,\r\n.showLegend {\r\n  grid-template-columns: 330px 1fr;\r\n}\r\n\r\n#calendarContainer {\r\n  position: absolute;\r\n}\r\n\r\n/* div {\r\n  position: relative;\r\n} */\r\n\r\n.legendContainer,\r\n.tobeAssignedContainer {\r\n  display: none;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding-left: 0.5em !important;\r\n  padding-right: 0.5em !important;\r\n}\r\n\r\n.showToBeAssigned .tobeAssignedContainer {\r\n  display: block;\r\n}\r\n\r\n.showLegend .legendContainer {\r\n  display: block;\r\n}\r\n\r\n.tobeBooked {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  text-align: left;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { RoomService } from '@/services/room.service';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { addTwoMonthToDate, computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors, getNextDay, isBlockUnit } from '@/utils/utils';\r\nimport io, { Socket } from 'socket.io-client';\r\nimport { EventsService } from '@/services/events.service';\r\nimport { ICountry, RoomBlockDetails, RoomBookingDetails, RoomDetail, bookingReasons } from '@/models/IBooking';\r\nimport moment, { Moment } from 'moment';\r\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\r\nimport { bookingStatus, calculateDaysBetweenDates, formatName, getPrivateNote, getRoomStatus, transformNewBLockedRooms, transformNewBooking } from '@/utils/booking';\r\nimport { IRoomNightsData, IRoomNightsDataEventPayload, CalendarModalEvent } from '@/models/property-types';\r\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\r\nimport calendar_dates from '@/stores/calendar-dates.store';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { addUnassignedDates, handleUnAssignedDatesChange, removeUnassignedDates } from '@/stores/unassigned_dates.store';\r\nimport Token from '@/models/Token';\r\nimport { RoomHkStatus, RoomType } from '@/models/booking.dto';\r\n// import Auth from '@/models/Auth';\r\nexport interface UnitHkStatusChangePayload {\r\n  PR_ID: number;\r\n  ROOM_CATEGORY_ID: number;\r\n  NAME: string;\r\n  DESCRIPTION: string;\r\n  ENTRY_USER_ID: number;\r\n  ENTRY_DATE: string;\r\n  OWNER_ID: number;\r\n  IS_ACTIVE: boolean;\r\n  HKS_CODE: RoomHkStatus;\r\n  HKM_ID: number;\r\n  CHECKLIST: null;\r\n  My_Room_category: null;\r\n  My_Hkm: null;\r\n}\r\nexport type CalendarSidebarState = {\r\n  type: 'room-guests' | 'booking-details' | 'add-days';\r\n  payload: any;\r\n};\r\n@Component({\r\n  tag: 'igloo-calendar',\r\n  styleUrl: 'igloo-calendar.css',\r\n  scoped: true,\r\n})\r\nexport class IglooCalendar {\r\n  @Prop() propertyid: number;\r\n  @Prop({ mutable: true }) from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() language: string;\r\n  @Prop() loadingMessage: string;\r\n  @Prop() currencyName: string;\r\n  @Prop() ticket: string = '';\r\n  @Prop() p: string;\r\n\r\n  @Element() private element: HTMLElement;\r\n\r\n  @State() calendarData: { [key: string]: any } = new Object();\r\n  @State() property_id: number;\r\n  @State() days: { [key: string]: any }[] = new Array();\r\n  @State() scrollViewDragging: boolean = false;\r\n  @State() dialogData: CalendarModalEvent | null = null;\r\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\r\n  @State() editBookingItem: TIglBookPropertyPayload | null = null;\r\n  @State() showLegend: boolean = false;\r\n  @State() showPaymentDetails: boolean = false;\r\n  @State() showToBeAssigned: boolean = false;\r\n  @State() unassignedDates = {};\r\n  @State() roomNightsData: IRoomNightsData | null = null;\r\n  @State() renderAgain = false;\r\n  @State() showBookProperty: boolean = false;\r\n  @State() totalAvailabilityQueue: { room_type_id: number; date: string; availability: number }[] = [];\r\n  @State() highlightedDate: string;\r\n  @State() calDates: { from: string; to: string };\r\n  @State() isAuthenticated = false;\r\n  @State() calendarSidebarState: CalendarSidebarState;\r\n\r\n  @Event({ bubbles: true, composed: true })\r\n  dragOverHighlightElement: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\r\n  @Event() calculateUnassignedDates: EventEmitter;\r\n  @Event({ bubbles: true, composed: true })\r\n  reduceAvailableUnitEvent: EventEmitter<{ fromDate: string; toDate: string }>;\r\n  @Event({ bubbles: true }) revertBooking: EventEmitter;\r\n  @Event() openCalendarSidebar: EventEmitter<CalendarSidebarState>;\r\n\r\n  private bookingService: BookingService = new BookingService();\r\n  private roomService: RoomService = new RoomService();\r\n  private eventsService = new EventsService();\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  // private auth = new Auth();\r\n  private countries: ICountry[] = [];\r\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\r\n  private scrollContainer: HTMLElement;\r\n  private today: String = '';\r\n  private reachedEndOfCalendar = false;\r\n\r\n  private socket: Socket;\r\n  private availabilityTimeout: NodeJS.Timeout;\r\n  private token = new Token();\r\n  calendarModalEl: HTMLIrModalElement;\r\n\r\n  componentWillLoad() {\r\n    this.init();\r\n  }\r\n  componentDidLoad() {\r\n    this.scrollToElement(this.today);\r\n  }\r\n  @Listen('deleteButton')\r\n  async handleDeleteEvent(ev: CustomEvent) {\r\n    try {\r\n      ev.stopImmediatePropagation();\r\n      ev.preventDefault();\r\n      await this.eventsService.deleteEvent(ev.detail);\r\n    } catch (error) {\r\n      //toastr.error(error);\r\n    }\r\n  }\r\n  @Listen('openCalendarSidebar', { target: 'window' })\r\n  async handleCalendarSidebarEvents(ev: CustomEvent) {\r\n    console.log('hit 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥');\r\n    ev.stopImmediatePropagation();\r\n    ev.stopPropagation();\r\n    this.calendarSidebarState = ev.detail;\r\n  }\r\n  @Listen('scrollPageToRoom', { target: 'window' })\r\n  scrollPageToRoom(event: CustomEvent) {\r\n    let targetScrollClass = event.detail.refClass;\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\r\n    if (gotoRoom) {\r\n      this.scrollContainer.scrollTo({ top: 0 });\r\n      const gotoRect = gotoRoom.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\r\n      });\r\n    }\r\n  }\r\n  @Listen('showDialog')\r\n  handleShowDialog(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    this.dialogData = event.detail;\r\n    this.calendarModalEl?.openModal();\r\n  }\r\n  @Listen('showRoomNightsDialog')\r\n  handleShowRoomNightsDialog(event: CustomEvent<IRoomNightsData>) {\r\n    this.roomNightsData = event.detail;\r\n  }\r\n  @Listen('addBookingDatasEvent')\r\n  handleBookingDatasChange(event: CustomEvent) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    let bookings = [...this.calendarData.bookingEvents];\r\n    bookings = bookings.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\r\n    bookings.push(...event.detail.filter(ev => ev.STATUS === 'PENDING-CONFIRMATION'));\r\n    this.updateBookingEventsDateRange(event.detail);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: bookings,\r\n    };\r\n  }\r\n  @Listen('updateBookingEvent')\r\n  handleUpdateBookingEvent(e: CustomEvent) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n    const newBookingEvent = e.detail;\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\r\n        if (newBookingEvent.ID === event.ID) {\r\n          return newBookingEvent;\r\n        }\r\n        return event;\r\n      }),\r\n    };\r\n  }\r\n  @Listen('showBookingPopup', { target: 'window' })\r\n  showBookingPopupEventDataHandler(event: CustomEvent) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.onOptionSelect(event);\r\n    //console.log(\"show booking event\", event);\r\n  }\r\n\r\n  @Listen('updateEventData')\r\n  updateEventDataHandler(event: CustomEvent) {\r\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\r\n    if (bookedData && event.detail && event.detail.data) {\r\n      Object.entries(event.detail.data).forEach(([key, value]) => {\r\n        bookedData[key] = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  @Listen('dragOverEventData')\r\n  dragOverEventDataHandler(event: CustomEvent) {\r\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\r\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\r\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\r\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\r\n      this.visibleCalendarCells = { x: [], y: [] };\r\n\r\n      containerDays.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.x.push({\r\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\r\n          width: htmlElement.offsetWidth,\r\n          id: htmlElement.getAttribute('data-day'),\r\n        });\r\n      });\r\n\r\n      containerRooms.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.y.push({\r\n          top: htmlElement.offsetTop,\r\n          height: htmlElement.offsetHeight,\r\n          id: htmlElement.getAttribute('data-room'),\r\n        });\r\n      });\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER') {\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    }\r\n  }\r\n\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n\r\n  private init() {\r\n    this.calDates = {\r\n      from: this.from_date,\r\n      to: this.to_date,\r\n    };\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n    this.calDates = {\r\n      from: this.from_date,\r\n      to: this.to_date,\r\n    };\r\n    handleUnAssignedDatesChange('unassigned_dates', newValue => {\r\n      if (Object.keys(newValue).length === 0 && this.highlightedDate !== '') {\r\n        this.highlightedDate = '';\r\n      }\r\n    });\r\n  }\r\n  private renderModalBody() {\r\n    switch (this.dialogData?.reason) {\r\n      case 'checkin': {\r\n        return `Are you sure you want to Check In this unit?`;\r\n      }\r\n      case 'checkout': {\r\n        return 'Are you sure you want to Check Out this unit?';\r\n      }\r\n      case 'reallocate':\r\n        return this.dialogData?.description || '';\r\n      default:\r\n        return 'Unknown modal content';\r\n    }\r\n  }\r\n  private setUpCalendarData(roomResp, bookingResp) {\r\n    console.log(roomResp);\r\n    this.calendarData.currency = roomResp['My_Result'].currency;\r\n    this.calendarData.allowedBookingSources = roomResp['My_Result'].allowed_booking_sources;\r\n    this.calendarData.adultChildConstraints = roomResp['My_Result'].adult_child_constraints;\r\n    console.log(this.calendarData.allowedBookingSources);\r\n    this.calendarData.legendData = this.getLegendData(roomResp);\r\n    this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\r\n    this.calendarData.from_date = bookingResp.My_Params_Get_Rooming_Data.FROM;\r\n    this.calendarData.to_date = bookingResp.My_Params_Get_Rooming_Data.TO;\r\n    this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\r\n    this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\r\n    this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\r\n    let bookings = bookingResp.myBookings || [];\r\n    bookings = bookings.filter(bookingEvent => {\r\n      const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\r\n      const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\r\n      return !toDate.isSame(fromDate);\r\n    });\r\n    this.calendarData.bookingEvents = bookings;\r\n\r\n    this.calendarData.toBeAssignedEvents = [];\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      let propertyId = this.propertyid;\r\n      if (!this.propertyid && !this.p) {\r\n        throw new Error('Property ID or username is required');\r\n      }\r\n      let roomResp = null;\r\n      if (!propertyId) {\r\n        console.log(propertyId);\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_units_hk_status: true,\r\n        });\r\n        roomResp = propertyData;\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      this.property_id = propertyId;\r\n      const requests = [\r\n        this.bookingService.getCalendarData(propertyId, this.from_date, this.to_date),\r\n        this.bookingService.getCountries(this.language),\r\n        this.roomService.fetchLanguage(this.language),\r\n      ];\r\n\r\n      if (this.propertyid) {\r\n        requests.push(\r\n          this.roomService.getExposedProperty({\r\n            id: this.propertyid,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_units_hk_status: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      const results = await Promise.all(requests);\r\n      if (!roomResp) {\r\n        roomResp = results[results.length - 1];\r\n      }\r\n      const [bookingResp, countries] = results as any;\r\n      calendar_dates.days = bookingResp.days;\r\n      calendar_dates.months = bookingResp.months;\r\n      this.setRoomsData(roomResp);\r\n      this.countries = countries;\r\n      this.setUpCalendarData(roomResp, bookingResp);\r\n      let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\r\n      this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\r\n      this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\r\n      this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\r\n      this.today = this.transformDateForScroll(new Date());\r\n      let startingDay: Date = new Date(this.calendarData.startingDate);\r\n      startingDay.setHours(0, 0, 0, 0);\r\n      this.days = bookingResp.days;\r\n      this.calendarData.days = this.days;\r\n      this.calendarData.monthsInfo = bookingResp.months;\r\n      calendar_dates.fromDate = this.calendarData.from_date;\r\n      calendar_dates.toDate = this.calendarData.to_date;\r\n      setTimeout(() => {\r\n        this.scrollToElement(this.today);\r\n      }, 200);\r\n      if (!this.calendarData.is_vacation_rental) {\r\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, this.from_date, this.to_date);\r\n        this.unassignedDates = { fromDate: this.from_date, toDate: this.to_date, data: { ...this.unassignedDates, ...data } };\r\n        this.calendarData = { ...this.calendarData, unassignedDates: data };\r\n        addUnassignedDates(data);\r\n      }\r\n      this.socket = io('https://realtime.igloorooms.com/');\r\n      this.socket.on('MSG', async msg => {\r\n        await this.handleSocketMessage(msg);\r\n      });\r\n    } catch (error) {\r\n      console.error('Initializing Calendar Error', error);\r\n    }\r\n  }\r\n\r\n  private async handleSocketMessage(msg: string) {\r\n    const msgAsObject = JSON.parse(msg);\r\n    if (!msgAsObject) {\r\n      return;\r\n    }\r\n\r\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\r\n\r\n    if (KEY.toString() !== this.property_id.toString()) {\r\n      return;\r\n    }\r\n\r\n    let result: any;\r\n    if (['DELETE_CALENDAR_POOL', 'GET_UNASSIGNED_DATES'].includes(REASON)) {\r\n      result = PAYLOAD;\r\n    } else {\r\n      result = JSON.parse(PAYLOAD);\r\n    }\r\n    console.log(KEY, result);\r\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\r\n      DORESERVATION: this.handleDoReservation,\r\n      BLOCK_EXPOSED_UNIT: this.handleBlockExposedUnit,\r\n      ASSIGN_EXPOSED_ROOM: this.handleAssignExposedRoom,\r\n      REALLOCATE_EXPOSED_ROOM_BLOCK: this.handleReallocateExposedRoomBlock,\r\n      DELETE_CALENDAR_POOL: this.handleDeleteCalendarPool,\r\n      GET_UNASSIGNED_DATES: this.handleGetUnassignedDates,\r\n      UPDATE_CALENDAR_AVAILABILITY: this.handleUpdateCalendarAvailability,\r\n      CHANGE_IN_DUE_AMOUNT: this.handleChangeInDueAmount,\r\n      CHANGE_IN_BOOK_STATUS: this.handleChangeInBookStatus,\r\n      NON_TECHNICAL_CHANGE_IN_BOOKING: this.handleNonTechnicalChangeInBooking,\r\n      ROOM_STATUS_CHANGED: this.handleRoomStatusChanged,\r\n      UNIT_HK_STATUS_CHANGED: this.handleUnitHKStatusChanged,\r\n      SHARING_PERSONS_UPDATED: this.handleSharingPersonsUpdated,\r\n    };\r\n\r\n    const handler = reasonHandlers[REASON];\r\n    if (handler) {\r\n      await handler.call(this, result);\r\n    } else {\r\n      console.warn(`Unhandled REASON: ${REASON}`);\r\n    }\r\n  }\r\n  private handleSharingPersonsUpdated(result: any) {\r\n    console.log('sharing persons updated', result);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [\r\n        ...this.calendarData.bookingEvents.map(e => {\r\n          if (e.IDENTIFIER === result.identifier) {\r\n            const mainGuest = result.guests?.find(p => p.is_main);\r\n            return { ...e, NAME: formatName(mainGuest.first_name, mainGuest.last_name), ROOM_INFO: { ...e.ROOM_INFO, sharing_persons: result.guests } };\r\n          }\r\n          return e;\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n  private handleRoomStatusChanged(result: any) {\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: [\r\n        ...this.calendarData.bookingEvents.map(e => {\r\n          if (e.IDENTIFIER === result.room_identifier) {\r\n            const STATUS = getRoomStatus({\r\n              from_date: e.FROM_DATE,\r\n              to_date: e.TO_DATE,\r\n              in_out: { ...e.ROOM_INFO.in_out, code: result.status },\r\n              status_code: e.BASE_STATUS_CODE,\r\n            });\r\n            return {\r\n              ...e,\r\n              CHECKIN: result.status === '001',\r\n              CHECKOUT: result.status === '002',\r\n              STATUS,\r\n            };\r\n          }\r\n          return e;\r\n        }),\r\n      ],\r\n    };\r\n  }\r\n  private handleUnitHKStatusChanged(result: UnitHkStatusChangePayload) {\r\n    console.log('hk unit change', result);\r\n    const updatedRooms: RoomType[] = [...this.calendarData.roomsInfo];\r\n    const changedRoomTypeIdx = updatedRooms.findIndex((roomType: RoomType) => roomType.id === result.ROOM_CATEGORY_ID);\r\n    if (changedRoomTypeIdx !== -1) {\r\n      const changedRoomType = { ...updatedRooms[changedRoomTypeIdx] };\r\n      const changedPhysicalRoomIdx = changedRoomType.physicalrooms.findIndex(room => room.id === result.PR_ID);\r\n      if (changedPhysicalRoomIdx !== -1) {\r\n        const updatedPhysicalRooms = [...changedRoomType.physicalrooms];\r\n        const targetPhysicalRoom = { ...updatedPhysicalRooms[changedPhysicalRoomIdx] };\r\n        targetPhysicalRoom.hk_status = result.HKS_CODE;\r\n        updatedPhysicalRooms[changedPhysicalRoomIdx] = targetPhysicalRoom;\r\n        changedRoomType.physicalrooms = updatedPhysicalRooms;\r\n        updatedRooms[changedRoomTypeIdx] = changedRoomType;\r\n        this.calendarData = {\r\n          ...this.calendarData,\r\n          roomsInfo: updatedRooms,\r\n        };\r\n      }\r\n    }\r\n  }\r\n  private async handleDoReservation(result: any) {\r\n    const transformedBooking = transformNewBooking(result);\r\n    this.AddOrUpdateRoomBookings(transformedBooking);\r\n  }\r\n\r\n  private async handleBlockExposedUnit(result: any) {\r\n    const transformedBooking = [await transformNewBLockedRooms(result)];\r\n    this.AddOrUpdateRoomBookings(transformedBooking);\r\n  }\r\n\r\n  private async handleAssignExposedRoom(result: any) {\r\n    console.log(result);\r\n    const transformedBooking = transformNewBooking(result);\r\n    this.AddOrUpdateRoomBookings(transformedBooking);\r\n  }\r\n\r\n  private async handleReallocateExposedRoomBlock(result: any) {\r\n    await this.handleBlockExposedUnit(result);\r\n  }\r\n\r\n  private async handleDeleteCalendarPool(result: any) {\r\n    console.log('delete calendar pool');\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: this.calendarData.bookingEvents.filter(e => e.POOL !== result),\r\n    };\r\n  }\r\n\r\n  private async handleGetUnassignedDates(result: any) {\r\n    const parsedResult = this.parseDateRange(result);\r\n    if (\r\n      !this.calendarData.is_vacation_rental &&\r\n      new Date(parsedResult.FROM_DATE).getTime() >= this.calendarData.startingDate &&\r\n      new Date(parsedResult.TO_DATE).getTime() <= this.calendarData.endingDate\r\n    ) {\r\n      const data = await this.toBeAssignedService.getUnassignedDates(\r\n        this.property_id,\r\n        dateToFormattedString(new Date(parsedResult.FROM_DATE)),\r\n        dateToFormattedString(new Date(parsedResult.TO_DATE)),\r\n      );\r\n      addUnassignedDates(data);\r\n      this.unassignedDates = {\r\n        fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\r\n        toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\r\n        data,\r\n      };\r\n      if (Object.keys(data).length === 0) {\r\n        removeUnassignedDates(dateToFormattedString(new Date(parsedResult.FROM_DATE)), dateToFormattedString(new Date(parsedResult.TO_DATE)));\r\n        this.reduceAvailableUnitEvent.emit({\r\n          fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\r\n          toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private parseDateRange(str: string): Record<string, string> {\r\n    const result: Record<string, string> = {};\r\n    const pairs = str.split('|');\r\n\r\n    pairs.forEach(pair => {\r\n      const res = pair.split(':');\r\n      result[res[0]] = res[1];\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private handleUpdateCalendarAvailability(result: any) {\r\n    this.totalAvailabilityQueue.push(result);\r\n    if (this.totalAvailabilityQueue.length > 0) {\r\n      clearTimeout(this.availabilityTimeout);\r\n    }\r\n    this.availabilityTimeout = setTimeout(() => {\r\n      this.updateTotalAvailability();\r\n    }, 1000);\r\n  }\r\n\r\n  private handleChangeInDueAmount(result: any) {\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\r\n        if (result.pools.includes(event.ID)) {\r\n          return { ...event, BALANCE: result.due_amount };\r\n        }\r\n        return event;\r\n      }),\r\n    };\r\n  }\r\n\r\n  private handleChangeInBookStatus(result: any) {\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\r\n        if (result.pools.includes(event.ID)) {\r\n          return {\r\n            ...event,\r\n            STATUS: event.STATUS !== 'IN-HOUSE' ? bookingStatus[result.status_code] : result.status_code === '001' ? bookingStatus[result.status_code] : 'IN-HOUSE',\r\n          };\r\n        }\r\n        return event;\r\n      }),\r\n    };\r\n  }\r\n\r\n  private handleNonTechnicalChangeInBooking(result: any) {\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\r\n        if (event.BOOKING_NUMBER === result.booking_nbr) {\r\n          return { ...event, PRIVATE_NOTE: getPrivateNote(result.extras) };\r\n        }\r\n        return event;\r\n      }),\r\n    };\r\n  }\r\n\r\n  private checkBookingAvailability(data) {\r\n    return this.calendarData.bookingEvents.some(\r\n      booking => booking.ID === data.ID || (booking.FROM_DATE === data.FROM_DATE && booking.TO_DATE === data.TO_DATE && booking.PR_ID === data.PR_ID),\r\n    );\r\n  }\r\n\r\n  private updateBookingEventsDateRange(eventData) {\r\n    eventData.forEach(bookingEvent => {\r\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\r\n      bookingEvent.defaultDateRange = {};\r\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\r\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\r\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\r\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\r\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\r\n        bookingEvent.STATUS = getRoomStatus({\r\n          in_out: bookingEvent.ROOM_INFO?.in_out,\r\n          from_date: bookingEvent.FROM_DATE,\r\n          to_date: bookingEvent.TO_DATE,\r\n          status_code: bookingEvent.BASE_STATUS_CODE,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateTotalAvailability() {\r\n    let days = [...calendar_dates.days];\r\n    this.totalAvailabilityQueue.forEach(queue => {\r\n      let selectedDate = new Date(queue.date);\r\n      selectedDate.setMilliseconds(0);\r\n      selectedDate.setSeconds(0);\r\n      selectedDate.setMinutes(0);\r\n      selectedDate.setHours(0);\r\n      //find the selected day\r\n      const index = days.findIndex(day => day.currentDate === selectedDate.getTime());\r\n      if (index != -1) {\r\n        //find room_type_id\r\n        const room_type_index = days[index].rate.findIndex(room => room.id === queue.room_type_id);\r\n        if (room_type_index != -1) {\r\n          days[index].rate[room_type_index].exposed_inventory.rts = queue.availability;\r\n        }\r\n      }\r\n    });\r\n    calendar_dates.days = [...days];\r\n  }\r\n\r\n  private setRoomsData(roomServiceResp) {\r\n    let roomsData: RoomDetail[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    calendar_data.roomsInfo = roomsData;\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n\r\n  private getLegendData(aData) {\r\n    return aData['My_Result'].calendar_legends;\r\n  }\r\n\r\n  private getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  private scrollToElement(goToDate) {\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\r\n    if (gotoDay) {\r\n      this.scrollContainer.scrollTo({ left: 0 });\r\n      const gotoRect = gotoDay.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\r\n      });\r\n    }\r\n  }\r\n  private AddOrUpdateRoomBookings(data: RoomBlockDetails[] | RoomBookingDetails[], pool: string | undefined = undefined) {\r\n    let bookings = [...this.calendarData.bookingEvents];\r\n    data.forEach(d => {\r\n      if (!this.checkBookingAvailability(d)) {\r\n        bookings = bookings.filter(booking => booking.ID !== d.ID);\r\n      }\r\n    });\r\n    this.updateBookingEventsDateRange(data);\r\n    if (pool) {\r\n      bookings = bookings.filter(booking => booking.POOL === pool);\r\n    }\r\n    data.forEach(d => {\r\n      if (!bookings.some(booking => booking.ID === d.ID)) {\r\n        bookings.push(d);\r\n      }\r\n    });\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: bookings,\r\n    };\r\n  }\r\n  private transformDateForScroll(date: Date) {\r\n    return moment(date).format('D_M_YYYY');\r\n  }\r\n\r\n  shouldRenderCalendarView() {\r\n    // console.log(\"rendering...\")\r\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\r\n  }\r\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    switch (opt.key) {\r\n      case 'showAssigned':\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.toggle('showToBeAssigned');\r\n\r\n        this.showLegend = false;\r\n        this.showToBeAssigned = true;\r\n        break;\r\n      case 'showLegend':\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.toggle('showLegend');\r\n\r\n        this.showLegend = true;\r\n        this.showToBeAssigned = false;\r\n        break;\r\n      case 'calendar':\r\n        let dt = new Date();\r\n        if (opt.data.start !== undefined && opt.data.end !== undefined) {\r\n          dt = opt.data.start.toDate();\r\n          this.handleDateSearch(opt.data);\r\n        } else {\r\n          //scroll to unassigned dates\r\n          dt = new Date(opt.data);\r\n          dt.setDate(dt.getDate() + 1);\r\n          if (!opt?.noScroll) {\r\n            this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\r\n          }\r\n        }\r\n        this.highlightedDate = this.transformDateForScroll(dt);\r\n        break;\r\n      case 'search':\r\n        break;\r\n      case 'add':\r\n        //console.log('data:', opt.data);\r\n        if (opt.data.event_type !== 'EDIT_BOOKING') {\r\n          this.bookingItem = opt.data;\r\n        } else {\r\n          this.editBookingItem = opt.data;\r\n        }\r\n        break;\r\n      case 'gotoToday':\r\n        this.scrollToElement(this.today);\r\n        break;\r\n      case 'closeSideMenu':\r\n        this.closeSideMenu();\r\n        this.highlightedDate = '';\r\n        this.showBookProperty = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async addDatesToCalendar(fromDate: string, toDate: string) {\r\n    const results = await this.bookingService.getCalendarData(this.property_id, fromDate, toDate);\r\n    const newBookings = results.myBookings || [];\r\n    this.updateBookingEventsDateRange(newBookings);\r\n    if (new Date(fromDate).getTime() < new Date(this.calendarData.startingDate).getTime()) {\r\n      this.calendarData.startingDate = new Date(fromDate).getTime();\r\n      this.calendarData.from_date = fromDate;\r\n      calendar_dates.fromDate = this.calendarData.from_date;\r\n      this.days = [...results.days, ...this.days];\r\n      let newMonths = [...results.months];\r\n      if (this.calendarData.monthsInfo[0].monthName === results.months[results.months.length - 1].monthName) {\r\n        this.calendarData.monthsInfo[0].daysCount = this.calendarData.monthsInfo[0].daysCount + results.months[results.months.length - 1].daysCount;\r\n        newMonths.pop();\r\n      }\r\n      let bookings = JSON.parse(JSON.stringify(newBookings));\r\n      bookings = bookings.filter(newBooking => {\r\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\r\n        if (existingBookingIndex !== -1) {\r\n          this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE = newBooking.FROM_DATE;\r\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\r\n            newBooking.FROM_DATE,\r\n            this.calendarData.bookingEvents[existingBookingIndex].TO_DATE,\r\n          );\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      calendar_dates.days = this.days as any;\r\n      this.calendarData = {\r\n        ...this.calendarData,\r\n        days: this.days,\r\n        monthsInfo: [...newMonths, ...this.calendarData.monthsInfo],\r\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\r\n      };\r\n      if (Math.abs(moment().diff(moment(fromDate, 'YYYY-MM-DD'), 'days')) <= 10) {\r\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\r\n        this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\r\n        this.unassignedDates = {\r\n          fromDate,\r\n          toDate,\r\n          data,\r\n        };\r\n        addUnassignedDates(data);\r\n      }\r\n    } else {\r\n      this.calendarData.endingDate = new Date(toDate).getTime();\r\n      this.calendarData.to_date = toDate;\r\n      calendar_dates.toDate = this.calendarData.to_date;\r\n      let newMonths = [...results.months];\r\n      this.days = [...this.days, ...results.days];\r\n      if (this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].monthName === results.months[0].monthName) {\r\n        this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount =\r\n          this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount + results.months[0].daysCount;\r\n        newMonths.shift();\r\n      }\r\n      let bookings = JSON.parse(JSON.stringify(newBookings));\r\n      bookings = bookings.filter(newBooking => {\r\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\r\n        if (existingBookingIndex !== -1) {\r\n          this.calendarData.bookingEvents[existingBookingIndex].TO_DATE = newBooking.TO_DATE;\r\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\r\n            this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE,\r\n            newBooking.TO_DATE,\r\n          );\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      calendar_dates.days = this.days as any;\r\n      //calendar_dates.months = bookingResp.months;\r\n      this.calendarData = {\r\n        ...this.calendarData,\r\n        days: this.days,\r\n        monthsInfo: [...this.calendarData.monthsInfo, ...newMonths],\r\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\r\n      };\r\n      const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\r\n      this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\r\n      this.unassignedDates = {\r\n        fromDate,\r\n        toDate,\r\n        data,\r\n      };\r\n      addUnassignedDates(data);\r\n    }\r\n  }\r\n  async handleDateSearch(dates: { start: Moment; end: Moment }) {\r\n    const startDate = moment(dates.start).toDate();\r\n    const defaultFromDate = moment(this.calDates.from).toDate();\r\n    const endDate = dates.end.toDate();\r\n    const defaultToDate = this.calendarData.endingDate;\r\n    if (startDate.getTime() < new Date(this.calDates.from).getTime()) {\r\n      await this.addDatesToCalendar(moment(startDate).add(-1, 'days').format('YYYY-MM-DD'), moment(defaultFromDate).add(-1, 'days').format('YYYY-MM-DD'));\r\n      this.calDates = { ...this.calDates, from: dates.start.add(-1, 'days').format('YYYY-MM-DD') };\r\n      this.scrollToElement(this.transformDateForScroll(startDate));\r\n    } else if (startDate.getTime() > defaultFromDate.getTime() && startDate.getTime() < defaultToDate && endDate.getTime() < defaultToDate) {\r\n      this.scrollToElement(this.transformDateForScroll(startDate));\r\n    } else if (startDate.getTime() > defaultToDate) {\r\n      const nextDay = getNextDay(new Date(this.calendarData.endingDate));\r\n      await this.addDatesToCalendar(nextDay, moment(endDate).add(2, 'months').format('YYYY-MM-DD'));\r\n      this.scrollToElement(this.transformDateForScroll(startDate));\r\n    }\r\n  }\r\n\r\n  private closeSideMenu() {\r\n    // const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    // calendarElement.classList.remove('showToBeAssigned');\r\n    // calendarElement.classList.remove('showLegend');\r\n\r\n    this.showLegend = false;\r\n    this.showToBeAssigned = false;\r\n  }\r\n\r\n  private scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\r\n  private dragScrollContent(event: MouseEvent) {\r\n    this.scrollViewDragging = false;\r\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\r\n    if (!isPreventPageScroll && event.buttons === 1) {\r\n      this.scrollViewDragPos = {\r\n        left: this.scrollContainer.scrollLeft,\r\n        top: this.scrollContainer.scrollTop,\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      };\r\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\r\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n    }\r\n  }\r\n\r\n  private onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\r\n    if (event.buttons !== 1) {\r\n      return;\r\n    }\r\n\r\n    const dx = event.clientX - this.scrollViewDragPos.x;\r\n    const dy = event.clientY - this.scrollViewDragPos.y;\r\n\r\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\r\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\r\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n      this.scrollViewDragging = true;\r\n    }\r\n  };\r\n\r\n  private onScrollContentMoveEndHandler: EventListener = () => {\r\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\r\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n  };\r\n\r\n  private calendarScrolling() {\r\n    if (this.scrollContainer) {\r\n      if (this.highlightedDate) {\r\n        const highlightedElement = document.querySelector(`.day-${this.highlightedDate}`);\r\n        if (highlightedElement) {\r\n          const { left, right } = highlightedElement.getBoundingClientRect();\r\n          const isVisible = left >= 0 && right <= window.innerWidth;\r\n          if (!isVisible) {\r\n            this.highlightedDate = '';\r\n          }\r\n        }\r\n      }\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      let leftSideMenuSize = 170;\r\n      let maxWidth = containerRect.width - leftSideMenuSize;\r\n      let leftX = containerRect.x + leftSideMenuSize;\r\n      let rightX = containerRect.x + containerRect.width;\r\n\r\n      let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\r\n\r\n      if (cells.length) {\r\n        cells.map(async (monthContainer: HTMLElement) => {\r\n          let monthRect = monthContainer.getBoundingClientRect();\r\n          if (cells.indexOf(monthContainer) === cells.length - 1) {\r\n            if (monthRect.x + monthRect.width <= rightX && !this.reachedEndOfCalendar) {\r\n              this.reachedEndOfCalendar = true;\r\n              //await this.addNextTwoMonthsToCalendar();\r\n              const nextTwoMonths = addTwoMonthToDate(new Date(this.calendarData.endingDate));\r\n              const nextDay = getNextDay(new Date(this.calendarData.endingDate));\r\n              await this.addDatesToCalendar(nextDay, nextTwoMonths);\r\n              this.reachedEndOfCalendar = false;\r\n            }\r\n          }\r\n          if (monthRect.x + monthRect.width < leftX) {\r\n            // item end is scrolled outside view, in -x\r\n          } else if (monthRect.x > rightX) {\r\n            // item is outside scrollview, in +x\r\n          } else {\r\n            let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\r\n            let marginLeft = 0;\r\n            let monthWidth = monthRect.width;\r\n            if (monthRect.x < leftX) {\r\n              marginLeft = Math.abs(monthRect.x) - leftX;\r\n              marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\r\n              monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\r\n            } else {\r\n              monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\r\n            }\r\n            titleElement.style.marginLeft = marginLeft + 'px';\r\n            titleElement.style.width = monthWidth + 'px';\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private hasAncestorWithClass(element: HTMLElement, className: string): boolean {\r\n    let currentElement = element;\r\n    while (currentElement !== null) {\r\n      if (currentElement.matches(`.${className}`)) {\r\n        return true;\r\n      }\r\n      currentElement = currentElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private async highlightDragOver(hightLightElement, currentPosition) {\r\n    let xElement, yElement;\r\n    if (currentPosition) {\r\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\r\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\r\n    }\r\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\r\n    if (hightLightElement && xElement && yElement) {\r\n      this.dragOverHighlightElement.emit({\r\n        dragOverElement: yElement.id + '_' + xElement.id,\r\n      });\r\n    } else {\r\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\r\n    }\r\n    if (!hightLightElement) {\r\n      this.moveBookingTo.emit({\r\n        bookingId: currentPosition.id,\r\n        fromRoomId: currentPosition.fromRoomId,\r\n        toRoomId: (yElement && yElement.id) || 'revert',\r\n        moveToDay: (xElement && xElement.id) || 'revert',\r\n        pool: currentPosition.pool,\r\n        from_date: convertDMYToISO(xElement && xElement.id),\r\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\r\n      });\r\n    }\r\n  }\r\n  private handleModalConfirm() {\r\n    // Helper to reset modal state\r\n    const resetModalState = () => {\r\n      this.dialogData = null;\r\n    };\r\n\r\n    try {\r\n      switch (this.dialogData?.reason) {\r\n        case 'checkin':\r\n        case 'checkout': {\r\n          const { bookingNumber, roomIdentifier } = this.dialogData;\r\n          const status = this.dialogData.reason === 'checkin' ? '001' : '002';\r\n          this.bookingService.handleExposedRoomInOut({ booking_nbr: bookingNumber, room_identifier: roomIdentifier, status }).finally(resetModalState);\r\n          if (this.dialogData.reason === 'checkin') {\r\n            this.openCalendarSidebar.emit({ type: 'room-guests', payload: this.dialogData.sidebarPayload });\r\n          }\r\n          break;\r\n        }\r\n        case 'reallocate': {\r\n          if (!this.dialogData) {\r\n            console.warn('No dialog data available for reallocation.');\r\n            return;\r\n          }\r\n          const { pool, toRoomId, from_date, to_date } = this.dialogData;\r\n\r\n          // Handle room reallocation\r\n          this.eventsService\r\n            .reallocateEvent(pool, toRoomId, from_date, to_date)\r\n            .then(resetModalState)\r\n            .catch(() => {\r\n              console.error('Reallocation failed. Reverting booking.');\r\n              this.revertBooking.emit(pool);\r\n            })\r\n            .finally(resetModalState);\r\n          break;\r\n        }\r\n\r\n        default:\r\n          resetModalState();\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error handling modal confirm:', error);\r\n      resetModalState();\r\n    }\r\n  }\r\n  private handleModalCancel() {\r\n    if (this.dialogData?.reason === 'reallocate') {\r\n      this.revertBooking.emit(this.dialogData.pool);\r\n    }\r\n    this.dialogData = null;\r\n  }\r\n  private handleRoomNightsDialogClose(e: CustomEvent<IRoomNightsDataEventPayload>) {\r\n    if (e.detail.type === 'cancel') {\r\n      this.revertBooking.emit(this.roomNightsData.pool);\r\n    }\r\n    this.roomNightsData = null;\r\n  }\r\n  private handleSideBarToggle(e: CustomEvent<boolean>) {\r\n    if (e.detail) {\r\n      this.calendarSidebarState = null;\r\n      if (this.editBookingItem) {\r\n        this.editBookingItem = null;\r\n      }\r\n      if (this.roomNightsData) {\r\n        this.revertBooking.emit(this.roomNightsData.pool);\r\n        this.roomNightsData = null;\r\n      }\r\n      if (this.dialogData?.reason === 'reallocate') {\r\n        this.revertBooking.emit(this.dialogData.pool);\r\n        this.dialogData = null;\r\n      }\r\n    }\r\n  }\r\n  private handleCloseBookingWindow() {\r\n    this.bookingItem = null;\r\n  }\r\n  render() {\r\n    // if (!this.isAuthenticated) {\r\n    //   return <ir-login onAuthFinish={() => this.auth.setIsAuthenticated(true)}></ir-login>;\r\n    // }\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <div id=\"iglooCalendar\" class={{ 'igl-calendar': true, 'showToBeAssigned': this.showToBeAssigned, 'showLegend': this.showLegend }}>\r\n          {this.shouldRenderCalendarView() ? (\r\n            <Fragment data-testid=\"ir-calendar\">\r\n              {this.showToBeAssigned && (\r\n                <igl-to-be-assigned\r\n                  unassignedDatesProp={this.unassignedDates}\r\n                  to_date={this.to_date}\r\n                  from_date={this.from_date}\r\n                  propertyid={this.property_id}\r\n                  class=\"tobeAssignedContainer\"\r\n                  calendarData={this.calendarData}\r\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                ></igl-to-be-assigned>\r\n              )}\r\n              {this.showLegend && <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>}\r\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\r\n                <div id=\"calendarContainer\">\r\n                  <igl-cal-header\r\n                    unassignedDates={this.unassignedDates}\r\n                    to_date={this.to_date}\r\n                    propertyid={this.property_id}\r\n                    today={this.today}\r\n                    calendarData={this.calendarData}\r\n                    highlightedDate={this.highlightedDate}\r\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                  ></igl-cal-header>\r\n                  <igl-cal-body\r\n                    propertyId={this.property_id}\r\n                    language={this.language}\r\n                    countries={this.countries}\r\n                    currency={this.calendarData.currency}\r\n                    today={this.today}\r\n                    highlightedDate={this.highlightedDate}\r\n                    isScrollViewDragging={this.scrollViewDragging}\r\n                    calendarData={this.calendarData}\r\n                  ></igl-cal-body>\r\n                  <igl-cal-footer\r\n                    highlightedDate={this.highlightedDate}\r\n                    today={this.today}\r\n                    calendarData={this.calendarData}\r\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                  ></igl-cal-footer>\r\n                </div>\r\n              </div>\r\n            </Fragment>\r\n          ) : (\r\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\r\n          )}\r\n        </div>\r\n        {this.bookingItem && (\r\n          <igl-book-property\r\n            allowedBookingSources={this.calendarData.allowedBookingSources}\r\n            adultChildConstraints={this.calendarData.adultChildConstraints}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            countries={this.countries}\r\n            currency={this.calendarData.currency}\r\n            language={this.language}\r\n            propertyid={this.property_id}\r\n            bookingData={this.bookingItem}\r\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\r\n          ></igl-book-property>\r\n        )}\r\n        <ir-sidebar\r\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\r\n          open={!!this.calendarSidebarState || this.roomNightsData !== null || (this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING')}\r\n          showCloseButton={false}\r\n          sidebarStyles={{\r\n            width: this.calendarSidebarState?.type === 'room-guests' ? '60rem' : this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)',\r\n            background: this.editBookingItem ? '#F2F3F8' : 'white',\r\n          }}\r\n        >\r\n          {this.roomNightsData && (\r\n            <ir-room-nights\r\n              slot=\"sidebar-body\"\r\n              pool={this.roomNightsData.pool}\r\n              onCloseRoomNightsDialog={this.handleRoomNightsDialogClose.bind(this)}\r\n              language={this.language}\r\n              bookingNumber={this.roomNightsData.bookingNumber}\r\n              identifier={this.roomNightsData.identifier}\r\n              toDate={this.roomNightsData.to_date}\r\n              fromDate={this.roomNightsData.from_date}\r\n              defaultDates={this.roomNightsData.defaultDates}\r\n              ticket={this.ticket}\r\n              propertyId={this.property_id}\r\n            ></ir-room-nights>\r\n          )}\r\n          {this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING' && (\r\n            <ir-booking-details\r\n              slot=\"sidebar-body\"\r\n              hasPrint\r\n              hasReceipt\r\n              hasCloseButton\r\n              onCloseSidebar={() => (this.editBookingItem = null)}\r\n              is_from_front_desk\r\n              propertyid={this.property_id}\r\n              hasRoomEdit\r\n              hasRoomDelete\r\n              bookingNumber={this.editBookingItem.BOOKING_NUMBER}\r\n              ticket={this.ticket}\r\n              language={this.language}\r\n              hasRoomAdd\r\n            ></ir-booking-details>\r\n          )}\r\n          {this.calendarSidebarState?.type === 'room-guests' && (\r\n            <ir-room-guests\r\n              countries={this.countries}\r\n              language={this.language}\r\n              identifier={this.calendarSidebarState?.payload?.identifier}\r\n              bookingNumber={this.calendarSidebarState?.payload.bookingNumber}\r\n              roomName={this.calendarSidebarState?.payload?.roomName}\r\n              totalGuests={this.calendarSidebarState?.payload?.totalGuests}\r\n              sharedPersons={this.calendarSidebarState?.payload?.sharing_persons}\r\n              slot=\"sidebar-body\"\r\n              checkIn={this.calendarSidebarState?.payload?.checkin}\r\n              onCloseModal={() => (this.calendarSidebarState = null)}\r\n            ></ir-room-guests>\r\n          )}\r\n        </ir-sidebar>\r\n        <ir-modal\r\n          ref={el => (this.calendarModalEl = el)}\r\n          modalTitle={''}\r\n          rightBtnActive={this.dialogData?.reason === 'reallocate' ? !this.dialogData.hideConfirmButton : true}\r\n          leftBtnText={locales?.entries?.Lcz_Cancel}\r\n          rightBtnText={locales?.entries?.Lcz_Confirm}\r\n          modalBody={this.renderModalBody()}\r\n          onConfirmModal={this.handleModalConfirm.bind(this)}\r\n          onCancelModal={this.handleModalCancel.bind(this)}\r\n        ></ir-modal>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n@media only screen and (min-width: 900px) {\r\n  /* td {\r\n    min-width: 140px !important;\r\n    width: max-content !important;\r\n  } */\r\n}\r\n@media only screen and (max-width: 900px) {\r\n  /* td {\r\n    min-width: 100px !important;\r\n  } */\r\n  .table-container {\r\n    width: max-content !important;\r\n  }\r\n}\r\n","import { IPendingActions, Task } from '@/models/housekeeping';\r\nimport Token from '@/models/Token';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\r\nimport moment from 'moment';\r\nimport { v4 } from 'uuid';\r\nimport { TaskFilters } from './types';\r\nimport { downloadFile } from '@/utils/utils';\r\n\r\n@Component({\r\n  tag: 'ir-hk-tasks',\r\n  styleUrl: 'ir-hk-tasks.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkTasks {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n  @State() selectedDuration = '';\r\n  @State() selectedHouseKeeper = '0';\r\n  @State() selectedRoom: IPendingActions | null = null;\r\n  @State() archiveOpened = false;\r\n  @State() property_id: number;\r\n  @State() tasks: Task[] = [];\r\n  @State() selectedTasks: Task[] = [];\r\n  @State() isSidebarOpen: boolean;\r\n  @State() isApplyFiltersLoading: boolean;\r\n  @State() filters: TaskFilters;\r\n\r\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\r\n\r\n  private hkNameCache: Record<number, string> = {};\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private token = new Token();\r\n  private table_sorting: Map<string, 'ASC' | 'DESC'> = new Map();\r\n  private modal: HTMLIrModalElement;\r\n\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.init();\r\n    }\r\n  }\r\n\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.init();\r\n  }\r\n\r\n  @Listen('closeSideBar')\r\n  handleCloseSidebar(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.isSidebarOpen = false;\r\n  }\r\n  @Listen('sortingChanged')\r\n  handleSortingChanged(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { field, direction } = e.detail;\r\n    console.log(e.detail);\r\n    if (field === 'date') {\r\n      return;\r\n    }\r\n    this.table_sorting.set(field, direction);\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!this.propertyid && !this.p) {\r\n        throw new Error('Property ID or username is required');\r\n      }\r\n      // let roomResp = null;\r\n      if (!propertyId) {\r\n        console.log(propertyId);\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_units_hk_status: true,\r\n        });\r\n        // roomResp = propertyData;\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      this.property_id = propertyId;\r\n      const requests = [\r\n        this.houseKeepingService.getHkTasks({ property_id: this.property_id, from_date: moment().format('YYYY-MM-DD'), to_date: moment().format('YYYY-MM-DD') }),\r\n        this.houseKeepingService.getExposedHKSetup(this.property_id),\r\n        this.roomService.fetchLanguage(this.language),\r\n      ];\r\n      if (this.propertyid) {\r\n        requests.push(\r\n          this.roomService.getExposedProperty({\r\n            id: this.propertyid,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_units_hk_status: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      const results = await Promise.all(requests);\r\n      const tasksResult = results[0] as any;\r\n      if (tasksResult?.tasks) {\r\n        this.updateTasks(tasksResult.tasks);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private buildHousekeeperNameCache() {\r\n    this.hkNameCache = {};\r\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\r\n      if (hk.id != null && hk.name != null) {\r\n        this.hkNameCache[hk.id] = hk.name;\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateTasks(tasks) {\r\n    this.buildHousekeeperNameCache();\r\n    this.tasks = tasks.map(t => ({\r\n      ...t,\r\n      id: v4(),\r\n      housekeeper: (() => {\r\n        const name = this.hkNameCache[t.hkm_id];\r\n        if (name) {\r\n          return name;\r\n        }\r\n        const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\r\n        this.hkNameCache[t.hkm_id] = hkName;\r\n        return hkName;\r\n      })(),\r\n    }));\r\n  }\r\n\r\n  private async handleHeaderButtonPress(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { name } = e.detail;\r\n    switch (name) {\r\n      case 'cleaned':\r\n        this.modal?.openModal();\r\n        break;\r\n      case 'export':\r\n        const sortingArray: { key: string; value: string }[] = Array.from(this.table_sorting.entries()).map(([key, value]) => ({\r\n          key,\r\n          value,\r\n        }));\r\n        console.log(sortingArray);\r\n        const { url } = await this.fetchTasksWithFilters(true);\r\n        downloadFile(url);\r\n        break;\r\n      case 'archive':\r\n        this.isSidebarOpen = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async handleModalConfirmation(e: CustomEvent) {\r\n    try {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      if (this.selectedTasks.length === 0) {\r\n        return;\r\n      }\r\n      await this.houseKeepingService.executeHKAction({\r\n        actions: this.selectedTasks.map(t => ({ description: 'Cleaned', hkm_id: t.hkm_id === 0 ? null : t.hkm_id, unit_id: t.unit.id, booking_nbr: t.booking_nbr })),\r\n      });\r\n      await this.fetchTasksWithFilters();\r\n    } finally {\r\n      this.selectedTasks = [];\r\n      this.clearSelectedHkTasks.emit();\r\n      this.modal.closeModal();\r\n    }\r\n  }\r\n\r\n  private async applyFilters(e: CustomEvent) {\r\n    try {\r\n      this.isApplyFiltersLoading = true;\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.filters = { ...e.detail };\r\n      await this.fetchTasksWithFilters();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isApplyFiltersLoading = false;\r\n    }\r\n  }\r\n\r\n  private async fetchTasksWithFilters(export_to_excel: boolean = false) {\r\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\r\n\r\n    const { tasks, url } = await this.houseKeepingService.getHkTasks({\r\n      housekeepers,\r\n      cleaning_frequency: cleaning_frequencies?.code,\r\n      dusty_window: dusty_units?.code,\r\n      highlight_window: highlight_check_ins?.code,\r\n      property_id: this.property_id,\r\n      from_date: moment().format('YYYY-MM-DD'),\r\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\r\n      is_export_to_excel: export_to_excel,\r\n    });\r\n    console.log(tasks);\r\n    if (tasks) {\r\n      this.updateTasks(tasks);\r\n    }\r\n    return { tasks, url };\r\n  }\r\n\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host data-testid=\"hk_tasks_base\">\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\r\n          <ir-tasks-header onHeaderButtonPress={this.handleHeaderButtonPress.bind(this)} isCleanedEnabled={this.selectedTasks.length > 0}></ir-tasks-header>\r\n          <div class=\"d-flex flex-column flex-md-row mt-1 \" style={{ gap: '1rem' }}>\r\n            <ir-tasks-filters\r\n              isLoading={this.isApplyFiltersLoading}\r\n              onApplyFilters={e => {\r\n                this.applyFilters(e);\r\n              }}\r\n            ></ir-tasks-filters>\r\n            <ir-tasks-table\r\n              onRowSelectChange={e => {\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n                this.selectedTasks = e.detail;\r\n              }}\r\n              class=\"flex-grow-1 w-100\"\r\n              tasks={this.tasks}\r\n            ></ir-tasks-table>\r\n          </div>\r\n        </section>\r\n        <ir-modal\r\n          autoClose={false}\r\n          ref={el => (this.modal = el)}\r\n          isLoading={isRequestPending('/Execute_HK_Action')}\r\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\r\n          iconAvailable={true}\r\n          icon=\"ft-alert-triangle danger h1\"\r\n          leftBtnText={locales.entries.Lcz_NO}\r\n          rightBtnText={locales.entries.Lcz_Yes}\r\n          leftBtnColor=\"secondary\"\r\n          rightBtnColor={'primary'}\r\n          modalTitle={locales.entries.Lcz_Confirmation}\r\n          modalBody={'Update selected unit(s) to Clean'}\r\n        ></ir-modal>\r\n        <ir-sidebar\r\n          open={this.isSidebarOpen}\r\n          id=\"editGuestInfo\"\r\n          onIrSidebarToggle={e => {\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n            this.isSidebarOpen = false;\r\n          }}\r\n          // sidebarStyles={{\r\n          //   width: '80vw',\r\n          // }}\r\n          showCloseButton={false}\r\n        >\r\n          {this.isSidebarOpen && <ir-hk-archive ticket={this.token.getToken()} propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\r\n        </ir-sidebar>\r\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\r\n          </ir-title> */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import Token from '@/models/Token';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IToast } from '@components/ui/ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\n@Component({\r\n  tag: 'ir-housekeeping',\r\n  styleUrl: 'ir-housekeeping.css',\r\n  scoped: true,\r\n})\r\nexport class IrHousekeeping {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private token = new Token();\r\n\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\r\n  }\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!propertyId) {\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n          include_sales_rate_plans: true,\r\n        });\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\r\n      const requests: Array<Promise<any>> = [];\r\n      if (calendar_data.housekeeping_enabled) {\r\n        requests.push(this.houseKeepingService.getExposedHKSetup(propertyId));\r\n      }\r\n      requests.push(this.roomService.fetchLanguage(this.language, ['_HK_FRONT', '_PMS_FRONT']));\r\n      if (this.propertyid) {\r\n        requests.push(\r\n          this.roomService.getExposedProperty({\r\n            id: propertyId,\r\n            language: this.language,\r\n            is_backend: true,\r\n            include_sales_rate_plans: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      await Promise.all(requests);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  private saveAutomaticCheckInCheckout(e: CustomEvent): void {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    try {\r\n      this.roomService.SetAutomaticCheckInOut({\r\n        property_id: this.propertyid,\r\n        flag: e.detail === 'auto',\r\n      });\r\n      this.toast.emit({\r\n        position: 'top-right',\r\n        title: 'Saved Successfully',\r\n        description: '',\r\n        type: 'success',\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-toast></ir-toast>\r\n        <section class=\"p-1\">\r\n          <h3 class=\"mb-2\">{locales.entries.Lcz_HouseKeepingAndCheckInSetup}</h3>\r\n          <div class=\"card p-1\">\r\n            <ir-title borderShown label=\"Check-In Mode\"></ir-title>\r\n            <div class={'d-flex align-items-center'}>\r\n              <p class=\"my-0 py-0 mr-1  \">{locales.entries.Lcz_CheckInOutGuestsAutomatically}</p>\r\n              <ir-select\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\r\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\r\n                data={[\r\n                  { text: locales.entries.Lcz_YesAsPerPropertyPolicy, value: 'auto' },\r\n                  { text: locales.entries.Lcz_NoIWillDoItManually, value: 'manual' },\r\n                ]}\r\n              ></ir-select>\r\n            </div>\r\n          </div>\r\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\r\n          {calendar_data.housekeeping_enabled && <ir-hk-team class=\"mb-1\"></ir-hk-team>}\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}