{"version":3,"names":["irSidebarCss","IrSidebarStyle0","IrSidebar","constructor","hostRef","this","side","showCloseButton","open","componentDidLoad","applyStyles","handleSidebarStylesChange","handleOpenChange","newValue","oldValue","handleBodyOverflow","handleKeyDown","e","key","stopImmediatePropagation","stopPropagation","toggleSidebar","preventClose","beforeSidebarClose","emit","irSidebarToggle","property","sidebarStyles","hasOwnProperty","sidebarRef","style","render","className","h","class","onClick","ref","el","label","onIconClickHandler","slot","xmlns","viewBox","height","width","fill","d","name"],"sources":["src/components/ui/ir-sidebar/ir-sidebar.css?tag=ir-sidebar&encapsulation=shadow","src/components/ui/ir-sidebar/ir-sidebar.tsx"],"sourcesContent":[".backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  cursor: pointer;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n  transition: all 0.5s;\n  opacity: 0;\n  pointer-events: none;\n  transition: all 0.5s;\n}\n.backdrop.active {\n  opacity: 1;\n  pointer-events: all;\n}\n\n.sidebar-right {\n  position: fixed;\n  top: 0;\n  right: -120%;\n  bottom: 0;\n  width: var(--sidebar-width, 40rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 100;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background-color: var(--sidebar-backgound, #fff);\n  /* padding: var(--ir-sidebar-padding, 0.5rem 0); */\n  padding-block: var(--ir-sidebar-padding-block, 0);\n  padding-inline: var(--ir-sidebar-padding-inline, 0.5rem);\n  padding-top: var(--ir-sidebar-padding-top, unset);\n  padding-bottom: var(--ir-sidebar-padding-bottom, unset);\n  padding-left: var(--ir-sidebar-padding-left, unset);\n  padding-right: var(--ir-sidebar-padding-right, unset);\n}\n.sidebar-right.active {\n  right: 0;\n  overflow-y: auto;\n}\n\n.sidebar-left {\n  position: fixed;\n  top: 0;\n  left: -100%;\n  bottom: 0;\n  width: var(--sidebar-width, 30rem);\n  max-width: 100%;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.5s;\n  z-index: 200;\n  overflow-y: hidden;\n  color: var(--sidebar-color, #000);\n  background: var(--sidebar-backgound, #fff);\n  /* padding: var(--ir-sidebar-padding, 0.5rem 0); */\n  padding-block: var(--ir-sidebar-padding-block, 0);\n  padding-inline: var(--ir-sidebar-padding-inline, 0.5rem);\n  padding-top: var(--ir-sidebar-padding-top, unset);\n  padding-bottom: var(--ir-sidebar-padding-bottom, unset);\n  padding-left: var(--ir-sidebar-padding-left, unset);\n  padding-right: var(--ir-sidebar-padding-right, unset);\n}\n.sidebar-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 1rem;\n  border-bottom: 1px solid #e4e5ec;\n}\n.sidebar-title p {\n  font-weight: 500;\n  font-size: 1.2rem;\n}\n.sidebar-left.active {\n  left: 0;\n  overflow-y: scroll;\n}\n.close {\n  position: absolute;\n  top: 0.5rem;\n  right: 1rem;\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n","import { handleBodyOverflow } from '@/utils/utils';\nimport { Component, Prop, h, Method, Event, EventEmitter, Watch, Listen, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-sidebar',\n  styleUrl: 'ir-sidebar.css',\n  shadow: true,\n})\nexport class IrSidebar {\n  @Element() el: HTMLIrSidebarElement;\n  /**\n   * Identifier for the sidebar instance.\n   */\n  @Prop() name: string;\n\n  /**\n   * Which side of the screen the sidebar appears on.\n   * Options: `'left'` or `'right'`.\n   */\n  @Prop() side: 'right' | 'left' = 'right';\n\n  /**\n   * Whether to show the close (X) button in the sidebar header.\n   */\n  @Prop() showCloseButton: boolean = true;\n\n  /**\n   * Whether the sidebar is open.\n   * Can be used with two-way binding.\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * Inline styles applied to the sidebar container.\n   */\n  @Prop() sidebarStyles: Partial<CSSStyleDeclaration>;\n\n  /**\n   * Label text displayed in the sidebar header.\n   */\n  @Prop() label: string;\n\n  /**\n   * Prevents the sidebar from closing when `toggleSidebar()` is called.\n   * When true, emits `beforeSidebarClose` instead of toggling.\n   */\n  @Prop() preventClose: boolean;\n\n  /**\n   * Event emitted when the sidebar is toggled open/closed.\n   * Emits the current `open` state.\n   */\n  @Event({ bubbles: true, composed: true }) irSidebarToggle: EventEmitter;\n\n  /**\n   * Event emitted *before* the sidebar attempts to close,\n   * but only if `preventClose` is set to true.\n   */\n  @Event({ bubbles: true, composed: true }) beforeSidebarClose: EventEmitter;\n\n  private sidebarRef: HTMLDivElement;\n\n  componentDidLoad() {\n    this.applyStyles();\n  }\n\n  @Watch('sidebarStyles')\n  handleSidebarStylesChange() {\n    this.applyStyles();\n  }\n\n  @Watch('open')\n  handleOpenChange(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      handleBodyOverflow(newValue);\n    }\n  }\n\n  @Listen('keydown', { target: 'body' })\n  handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape' && this.open) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      return this.toggleSidebar();\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Toggles the sidebar's visibility.\n   *\n   * - If `preventClose` is true, emits `beforeSidebarClose` and does nothing else.\n   * - Otherwise, emits `irSidebarToggle` with the current `open` state.\n   *\n   * Example:\n   * ```ts\n   * const el = document.querySelector('ir-sidebar');\n   * await el.toggleSidebar();\n   * ```\n   */\n  @Method()\n  async toggleSidebar() {\n    if (this.preventClose) {\n      this.beforeSidebarClose.emit();\n      return;\n    }\n    this.irSidebarToggle.emit(this.open);\n  }\n\n  /**\n   * Applies inline styles defined in `sidebarStyles` to the sidebar container.\n   */\n  private applyStyles() {\n    for (const property in this.sidebarStyles) {\n      if (this.sidebarStyles.hasOwnProperty(property)) {\n        this.sidebarRef.style[property] = this.sidebarStyles[property];\n      }\n    }\n  }\n\n  render() {\n    let className = '';\n    if (this.open) {\n      className = 'active';\n    } else {\n      className = '';\n    }\n\n    return [\n      <div\n        class={`backdrop ${className}`}\n        onClick={() => {\n          this.toggleSidebar();\n        }}\n      ></div>,\n      <div ref={el => (this.sidebarRef = el)} class={`sidebar-${this.side} ${className}`}>\n        {this.showCloseButton && (\n          <div class={'sidebar-title'}>\n            <p class={'p-0 m-0'}>{this.label}</p>\n            <div class={'p-0 m-0 sidebar-icon-container'}>\n              <ir-icon\n                class=\"\"\n                onIconClickHandler={() => {\n                  this.toggleSidebar();\n                }}\n              >\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n                  <path\n                    fill=\"#6b6f82\"\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                  />\n                </svg>\n              </ir-icon>\n            </div>\n          </div>\n        )}\n        <slot name=\"sidebar-body\" />\n      </div>,\n    ];\n  }\n}\n"],"mappings":"qNAAA,MAAMA,EAAe,8tDACrB,MAAAC,EAAeD,E,MCOFE,EAAS,MALtB,WAAAC,CAAAC,G,kHAgBUC,KAAAC,KAAyB,QAKzBD,KAAAE,gBAA2B,KAMKF,KAAAG,KAAgB,K,CAgCxD,gBAAAC,GACEJ,KAAKK,a,CAIP,yBAAAC,GACEN,KAAKK,a,CAIP,gBAAAE,CAAiBC,EAAmBC,GAClC,GAAID,IAAaC,EAAU,CACzBC,EAAmBF,E,EAKvB,aAAAG,CAAcC,GACZ,GAAIA,EAAEC,MAAQ,UAAYb,KAAKG,KAAM,CACnCS,EAAEE,2BACFF,EAAEG,kBACF,OAAOf,KAAKgB,e,KACP,CACL,M,EAiBJ,mBAAMA,GACJ,GAAIhB,KAAKiB,aAAc,CACrBjB,KAAKkB,mBAAmBC,OACxB,M,CAEFnB,KAAKoB,gBAAgBD,KAAKnB,KAAKG,K,CAMzB,WAAAE,GACN,IAAK,MAAMgB,KAAYrB,KAAKsB,cAAe,CACzC,GAAItB,KAAKsB,cAAcC,eAAeF,GAAW,CAC/CrB,KAAKwB,WAAWC,MAAMJ,GAAYrB,KAAKsB,cAAcD,E,GAK3D,MAAAK,GACE,IAAIC,EAAY,GAChB,GAAI3B,KAAKG,KAAM,CACbwB,EAAY,Q,KACP,CACLA,EAAY,E,CAGd,MAAO,CACLC,EAAA,OAAAf,IAAA,2CACEgB,MAAO,YAAYF,IACnBG,QAAS,KACP9B,KAAKgB,eAAe,IAGxBY,EAAA,OAAAf,IAAA,2CAAKkB,IAAKC,GAAOhC,KAAKwB,WAAaQ,EAAKH,MAAO,WAAW7B,KAAKC,QAAQ0B,KACpE3B,KAAKE,iBACJ0B,EAAA,OAAAf,IAAA,2CAAKgB,MAAO,iBACVD,EAAA,KAAAf,IAAA,2CAAGgB,MAAO,WAAY7B,KAAKiC,OAC3BL,EAAA,OAAAf,IAAA,2CAAKgB,MAAO,kCACVD,EAAA,WAAAf,IAAA,2CACEgB,MAAM,GACNK,mBAAoB,KAClBlC,KAAKgB,eAAe,GAGtBY,EAAA,OAAAf,IAAA,2CAAKsB,KAAK,OAAOC,MAAM,6BAA6BC,QAAQ,cAAcC,OAAQ,GAAIC,MAAO,IAC3FX,EAAA,QAAAf,IAAA,2CACE2B,KAAK,UACLC,EAAE,gSAOdb,EAAA,QAAAf,IAAA,2CAAM6B,KAAK,kB","ignoreList":[]}