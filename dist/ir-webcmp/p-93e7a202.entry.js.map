{"version":3,"names":["VariationService","formatVariationBasedOnInfants","params","variation","this","getVariationBasedOnInfants","formatVariation","infants","calculateVariationAmount","_a","discounted_amount","variations","baseVariation","adult_nbr","child_nbr","find","v","Math","max","infant_nbr","adultNumber","Number","infantNumber","adultLabel","locales","entries","Lcz_Adults","toLowerCase","Lcz_Adult","childLabel","Lcz_Children","Lcz_Child","infantLabel","_b","_d","_c","parts","filter","Boolean","join","iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","variationService","componentWillLoad","isSingleUnit","rateplanSelection","roomtype","id","filteredRooms","filterRooms","length","updateGuest","unit","toString","roomTypeId","ratePlanId","ratePlan","prevGuest","guest","roomIndex","Object","assign","booking_store","ratePlanSelections","handleButtonClicked","event","detail","key","isButtonPressed","getTooltipMessages","selected_variation","selectedVariation","guestInfo","matchingVariation","cancellationPolicy","_e","applicable_policies","p","type","combined_statement","guaranteePolicy","_g","_f","tooltip","undefined","getAmount","is_amount_modified","view_mode","rp_amount","totalNights","discounted_gross_amount","result","calendar_data","is_frontdesk_enabled","assignable_units","forEach","Is_Fully_Available","push","name","pr_id","filteredGuestsRoom","_","i","map","r","filteredResults","includes","bookingType","baseData","roomtypeId","f","sort","a","b","localeCompare","render","filteredRoomList","formattedVariation","h","Host","class","short_name","is_non_refundable","message","innerHTML","formatAmount","currency","symbol","Lcz_Stay","v4","first_name","placeholder","onInput","target","value","event_type","modifyBookingStore","required","last_name","onChange","selected","_h","Lcz_Assignunits","room","is_bed_configuration_enabled","_j","bed_preference","_k","Lcz_BedConfiguration","bedPreferenceType","data","CODE_NAME","CODE_VALUE_EN","_l","style","gap","marginTop","_m","width","_o","Array","from","item","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","renderPage","dataUpdateEvent","emit","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","from_date","fromDate","dateOption","showDateDifference","to_date","toDate","isEventHover","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","email","firstName","lastName","countryId","country_id","isdCode","country_phone_prefix","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","resetRoomsInfoAndMessage","roomsInfo","onDataRoomUpdate","selectedUnits","isEdit","isEditBooking","units","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","fill","size","clear","guestName","roomId","generateDailyRates","amount","endDate","setDate","currentDate","days","date","moment","format","cost","getBookedRooms","check_in","check_out","notes","identifier","override_unit","auto_check_in","total_days","calculateDaysBetweenDates","calculateAmount","rateplanId","rateplan","reserved","prepayment_amount_gross","occupancy","children_nbr","city","address","dob","cci","prepareBookUserServiceParams","sourceOption","dateRangeData","Error","generateNewRooms","isEventType","bookingData","PR_ID","modifyBookingDetails","pickup_info","extra_services","is_direct","is_in_loyalty_mode","promo_key","extras","rest","__rest","assign_units","is_pms","booking","newBooking","currentRoomType","console","log","newRooms","in_out","code","isAgent","agent","tag","property","propertyid","booked_on","hour","minute","source","nbr","holder_name","expiry_month","expiry_year","getRoomCategoryByRoomId","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","rate","RATE","rateType","roomCategoryName","ratePlanName","RATE_PLAN","NAME","cancelation","guarantee","adult_child_offering","iglBookPropertyCss","IglBookPropertyStyle0","IglBookProperty","initialRoomIds","showSplitBookingOption","sourceOptions","guestData","ratePricingMode","bookPropertyService","updatedBooking","MAX_HISTORY_LENGTH","adult","child","handleKeyDown","bind","initializeDefaultDateRange","defaultDateRange","initializeDefaultData","wasBlockedUnit","hasOwnProperty","fetchSetupEntriesAndInitialize","initializeEventData","componentDidLoad","document","addEventListener","disconnectedCallback","removeEventListener","clearBooking","e","stopImmediatePropagation","stopPropagation","handleSpiltBookingSelected","getExposedBooking","language","handleAdultChildChange","adultChildCount","updateBookingHistory","adults","children","onDateRangeSelect","opt","dates","checkIn","checkOut","checkBookingAvailability","handleSourceDropDown","selectedSource","description","gotoSplitPageTwo","gotoPage","bookUser","closeWindow","animateIrSelect","calculateTotalRooms","animateIrButton","toast","Lcz_SelectRatePlan","title","partialData","lastEntry","bookingHistory","newEntry","shift","FROM_DATE","TO_DATE","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","initializeEditBookingData","initializePage","CHILDREN_COUNT","roomName","GUEST","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","comparedBy","bookingSource","SOURCE","arrivalTime","is_in_agent_mode","room_type_ids_to_update","room_type_ids","getBookingAvailability","agent_id","updateBooking","reserveRooms","checkAndBlockDate","block_exposed_unit_props","isAvailable","roomTypes","every","rt","is_available_to_book","handleBlockDate","resetBookingStore","closeBookingWindow","didReservation","handleBlockDateUpdate","handleGuestInfoUpdate","guestRefKey","handleBookedByInfoUpdate","getPageBlockDatesView","Fragment","fromDateStr","toDateStr","ENTRY_DATE","onDataUpdateEvent","text","Lcz_Cancel","btn_color","onClick","Lcz_Blockdates","isLoading","isRequestPending","handlePageTwoDataUpdateEvent","auto_close","props","releaseData","dateToFormattedString","NOTES","STAY_STATUS_CODE","DESCRIPTION","blockUnit","setLoadingState","serviceParams","doReservation","resetBookingData","resetLoadingState","setTimeout","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","propertyId","showPaymentDetails","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","editNext","label","renderButton","disabled","icon_name","shouldRenderTwoButtons","btn_disabled","onClickHandler","buttonClicked","iconPosition","icon_style","paddingBottom","Lcz_Next","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","getSplitBookingList","Lcz_Tobooking","keys","bookingDataDefaultDateRange","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","adult_max_nbr","child_max_nbr","renderChildCaption","btn_id","icon","Lcz_Check","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","replace","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","variant","dateLabel","Lcz_Dates","add","startOf","tax_statement","iglBookingFormCss","IglBookingFormStyle0","IglBookingForm","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","isRateModified","preference","rate_plan","dateDifference","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","index","categoryIdKey","updatedUnits","handleEventData","showBookAndCheckin","checkin_enabled","isSame","Lcz_TotalPrice","values","val","rp","Lcz_Back","btn_styles","Lcz_Save","Lcz_Book","Lcz_BookAndChekcIn","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","getSplitBookings","splitBookingEvents","setMinDate","today","splitBookingId","splitBookings","roomType","isBookDisabled","roomInfoId","roomsDataUpdate","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","initializeDates","handleDataChange","newValue","oldValue","JSON","stringify","getFormattedDateString","calculateTotalNights","getFullYear","handleDateSelectEvent","dateSelectEvent","handleDateChange","start","end","maxDate","autoApply","onDateChanged","Lcz_Nights","Lcz_Night","withDateDifference","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","getMonth","handleCountryChange","handleNumberInput","inputElement","inputValue","numericRegex","test","checkUser","z","string","safeParse","success","getUserInfo","mobile_without_prefix","prevBookedByData","checkout_guest","handleComboboxChange","clearEvent","Lcz_BookedBy","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","onCountryChange","countries","c","Lcz_MobilePhone","phone_prefix","default_country","onTextChange","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","iglRatePlanCss","IglRatePlanStyle0","IglRatePlan","disableForm","shouldBeDisabled","visibleInventory","updateRateplanSelection","currentSelections","handleVariationChange","bookProperty","gotoSplitPageTwoEvent","renderRate","amount_per_night_gross","updateRoomParams","resetReserved","updatedSelections","reduce","acc","ratePlans","rpAcc","isAvailableToBook","formattedVariations","split","uuidv4","Lcz_Rate","Lcz_Current","Lcz_Select","iglRoomTypeCss","IglRoomTypeStyle0","IglRoomType","validBookingTypes","isValidBookingType","rateplans","getVisibleInventory"],"sources":["src/services/variation.service.ts","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.css?tag=igl-booking-form&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.css?tag=igl-room-type&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.tsx"],"sourcesContent":["import { Variation } from '@/models/property';\r\nimport locales from '@/stores/locales.store';\r\n\r\nexport default class VariationService {\r\n  /**\r\n   * Formats a variation based on the number of infants and returns a formatted string.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust the variation for.\r\n   * @returns {string} A formatted string describing the variation adjusted for infants.\r\n   */\r\n  public formatVariationBasedOnInfants(params: { baseVariation: Variation; variations: Variation[]; infants: number }): string {\r\n    const variation = this.getVariationBasedOnInfants(params);\r\n    return this.formatVariation(variation, params.infants);\r\n  }\r\n\r\n  /**\r\n   * Calculates the discounted amount for a variation adjusted for the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to consider for adjustments.\r\n   * @returns {number} The discounted amount for the selected variation, or 0 if no discounted amount is available.\r\n   */\r\n  public calculateVariationAmount(params: { baseVariation: Variation; variations: Variation[]; infants: number }): number {\r\n    return this.getVariationBasedOnInfants(params)?.discounted_amount || 0;\r\n  }\r\n\r\n  /**\r\n   * Finds the appropriate variation from a list of variations based on the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust for.\r\n   * @returns {Variation} The matching variation or the base variation if no match is found.\r\n   */\r\n  public getVariationBasedOnInfants({ variations, baseVariation, infants }: { baseVariation: Variation; variations: Variation[]; infants: number }): Variation {\r\n    const { adult_nbr, child_nbr } = baseVariation;\r\n    return variations.find(v => v.adult_nbr === adult_nbr && v.child_nbr === Math.max(0, child_nbr - Math.max(0, infants))) || baseVariation;\r\n  }\r\n\r\n  /**\r\n   * Formats a variation object into a human-readable string, adjusted for the number of infants.\r\n   * @param {Variation} variation - The variation object to format.\r\n   * @param {number} infant_nbr - The number of infants to adjust for.\r\n   * @returns {string} A formatted string representing the variation.\r\n   * @private\r\n   */\r\n  private formatVariation({ child_nbr, adult_nbr }: Variation, infant_nbr: number): string {\r\n    const adultNumber = Number(adult_nbr) || 0;\r\n    const infantNumber = Math.max(Number(infant_nbr) || 0, 0);\r\n    const adultLabel = adultNumber > 1 ? locales.entries.Lcz_Adults.toLowerCase() : locales.entries.Lcz_Adult.toLowerCase();\r\n    const childLabel = child_nbr > 1 ? locales.entries.Lcz_Children.toLowerCase() : locales.entries.Lcz_Child.toLowerCase();\r\n    const infantLabel = infantNumber > 1 ? (locales.entries['Lcz_Infants'] ?? 'infants')?.toLowerCase() : (locales?.entries['Lcz_Infant'] ?? 'infant')?.toLowerCase();\r\n    const parts = [`${adultNumber} ${adultLabel}`, child_nbr ? `${child_nbr} ${childLabel}` : '', infantNumber ? `${infantNumber} ${infantLabel}` : ''];\r\n    return parts.filter(Boolean).join('&nbsp&nbsp&nbsp&nbsp');\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.rate_amount {\r\n  display: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  gap: 0.5rem;\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.booking-roomtype-title {\r\n  font-size: 1.25rem;\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-details-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-rateplan {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-rateplan-name {\r\n  font-weight: bold;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-tooltip {\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-variation {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-price {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-details-container {\r\n  display: none;\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .booking-header {\r\n    justify-content: flex-start;\r\n  }\r\n  .booking-footer,\r\n  .booking-price {\r\n    display: none;\r\n  }\r\n  .booking-details-container,\r\n  .rate_amount {\r\n    display: inline-flex;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection, modifyBookingStore, RatePlanGuest } from '@/stores/booking.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { v4 } from 'uuid';\r\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport VariationService from '@/services/variation.service';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() rateplanSelection: IRatePlanSelection;\r\n  @Prop() guestInfo: RatePlanGuest | null;\r\n  @Prop() currency: ICurrency;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() roomIndex: number;\r\n  @Prop() totalNights: number = 1;\r\n  @Prop() baseData: { unit: { id: string; name: string }; roomtypeId: number };\r\n\r\n  @State() isButtonPressed = false;\r\n\r\n  private variationService = new VariationService();\r\n\r\n  componentWillLoad() {\r\n    if (isSingleUnit(this.rateplanSelection.roomtype.id)) {\r\n      const filteredRooms = this.filterRooms();\r\n      if (filteredRooms.length > 0) this.updateGuest({ unit: filteredRooms[0]?.id?.toString() });\r\n    }\r\n  }\r\n\r\n  private updateGuest(params: Partial<RatePlanGuest>) {\r\n    const roomTypeId = this.rateplanSelection.roomtype.id;\r\n    const ratePlanId = this.rateplanSelection.ratePlan.id;\r\n    let prevGuest = [...this.rateplanSelection.guest];\r\n    prevGuest[this.roomIndex] = {\r\n      ...prevGuest[this.roomIndex],\r\n      ...params,\r\n    };\r\n    booking_store.ratePlanSelections = {\r\n      ...booking_store.ratePlanSelections,\r\n      [roomTypeId]: {\r\n        ...booking_store.ratePlanSelections[roomTypeId],\r\n        [ratePlanId]: { ...this.rateplanSelection, guest: [...prevGuest] },\r\n      },\r\n    };\r\n  }\r\n\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, selected_variation } = this.rateplanSelection;\r\n    let selectedVariation = selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      selectedVariation = this.variationService.getVariationBasedOnInfants({\r\n        variations: ratePlan.variations,\r\n        baseVariation: selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => variation.adult_nbr === selectedVariation.adult_nbr && variation.child_nbr === selectedVariation.child_nbr);\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  private getAmount(): number {\r\n    if (this.rateplanSelection.is_amount_modified) {\r\n      return this.rateplanSelection.view_mode === '001' ? this.rateplanSelection.rp_amount : this.rateplanSelection.rp_amount * this.totalNights;\r\n    }\r\n    let variation = this.rateplanSelection.selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      variation = this.variationService.getVariationBasedOnInfants({\r\n        variations: this.rateplanSelection.ratePlan.variations,\r\n        baseVariation: this.rateplanSelection.selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n    return variation.discounted_gross_amount;\r\n  }\r\n\r\n  private filterRooms(): { name: string; id: number }[] {\r\n    const result = [];\r\n    if (!calendar_data.is_frontdesk_enabled) {\r\n      return result;\r\n    }\r\n    this.rateplanSelection.ratePlan?.assignable_units?.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    const filteredGuestsRoom = this.rateplanSelection.guest.filter((_, i) => i !== this.roomIndex).map(r => r.unit);\r\n    const filteredResults = result.filter(r => !filteredGuestsRoom.includes(r.id.toString()));\r\n    return this.bookingType === 'EDIT_BOOKING'\r\n      ? [...filteredResults, this.rateplanSelection.roomtype.id === this.baseData?.roomtypeId ? this.baseData?.unit : null]\r\n          .filter(f => !!f)\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n      : filteredResults;\r\n  }\r\n\r\n  render() {\r\n    const filteredRoomList = this.filterRooms();\r\n    const formattedVariation = this.variationService.formatVariationBasedOnInfants({\r\n      baseVariation: this.rateplanSelection.selected_variation,\r\n      infants: this.guestInfo.infant_nbr,\r\n      variations: this.rateplanSelection.ratePlan.variations,\r\n    });\r\n    return (\r\n      <Host class={'my-2'}>\r\n        <div class=\"booking-header\">\r\n          {(this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n            <span class=\"booking-roomtype-title\">{this.rateplanSelection.roomtype.name}</span>\r\n          )}\r\n          <div class=\"booking-details-container\">\r\n            <div class=\"booking-rateplan\">\r\n              <p class=\"booking-rateplan-name\">\r\n                {this.rateplanSelection.ratePlan.short_name} {this.rateplanSelection.ratePlan.is_non_refundable && <span class={'non-ref-span'}>Non Refundable</span>}\r\n              </p>\r\n              <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n            </div>\r\n            <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n          </div>\r\n          <p class=\"booking-price\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        <div class=\"booking-footer\">\r\n          <div class=\"booking-rateplan\">\r\n            <p class=\"booking-rateplan-name\">{this.rateplanSelection.ratePlan.short_name}</p>\r\n            <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n          </div>\r\n          <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n        </div>\r\n        <div class=\"d-flex flex-column flex-md-row  p-0 align-items-md-center aplicationInfoContainer\">\r\n          <div class=\"mr-1 mb-1 mb-md-0 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"email\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.first_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestFirstname'] ?? 'Guest first name'}\r\n              name=\"guestName\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ first_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.first_name}\r\n            />\r\n          </div>\r\n          <div class=\"mr-1 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"email\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.last_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestLastname'] ?? 'Guest last name'}\r\n              name=\"guestName\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ last_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.last_name}\r\n            />\r\n          </div>\r\n          <div class=\"mt-1 mt-md-0 d-flex align-items-center flex-fill\">\r\n            {calendar_data.is_frontdesk_enabled &&\r\n              !isSingleUnit(this.rateplanSelection.roomtype.id) &&\r\n              (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n                <div class=\"mr-1 p-0 flex-fill preference-select-container\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.updateGuest({ unit: (event.target as HTMLInputElement).value })}>\r\n                    <option value=\"\" selected={this.guestInfo?.unit === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {filteredRoomList?.map(room => (\r\n                      <option value={room.id} selected={this.guestInfo?.unit === room.id.toString()}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n          </div>\r\n          {this.rateplanSelection.roomtype.is_bed_configuration_enabled && (\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                onChange={event => this.updateGuest({ bed_preference: (event.target as HTMLInputElement).value })}\r\n              >\r\n                <option value=\"\" selected={this.guestInfo?.bed_preference === ''}>\r\n                  {locales.entries.Lcz_BedConfiguration}\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestInfo?.bed_preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <p class=\"rate_amount\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        {this.rateplanSelection.selected_variation.child_nbr > 0 && (\r\n          <div style={{ gap: '0.5rem', marginTop: '0.5rem' }} class=\"d-flex  flex-row  p-0 align-items-center aplicationInfoContainer\">\r\n            <p class={'m-0 p-0 text-danger'}>Any of the children below 3 years?</p>\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                style={{ width: 'max-content' }}\r\n                onChange={event => this.updateGuest({ infant_nbr: Number((event.target as HTMLInputElement).value) })}\r\n              >\r\n                <option value=\"\" selected={Number(this.guestInfo?.infant_nbr) === 0}>\r\n                  {locales.entries['No'] || 'No'}\r\n                </option>\r\n                {Array.from({ length: this.rateplanSelection.selected_variation.child_nbr }, (_, i) => i + 1).map(item => (\r\n                  <option value={item} selected={this.guestInfo?.infant_nbr === item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries } from '@/models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"DD MMM YYYY\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { Booking, Room } from '@/models/booking.dto';\r\nimport { TSourceOption } from '@/models/igl-book-property';\r\nimport VariationService from '@/services/variation.service';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { extras } from '@/utils/utils';\r\nimport moment from 'moment';\r\n\r\nexport class IglBookPropertyService {\r\n  private variationService: VariationService;\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n\r\n  private generateDailyRates(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = new Date(to_date);\r\n    endDate.setDate(endDate.getDate() - 1);\r\n\r\n    let currentDate = new Date(from_date);\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate <= endDate) {\r\n      days.push({\r\n        date: moment(currentDate).format('YYYY-MM-DD'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n\r\n  // private extractFirstNameAndLastName(name: string) {\r\n  //   const names = name.split(' ');\r\n  //   return { first_name: names[0] || null, last_name: names[1] || null };\r\n  // }\r\n\r\n  private getBookedRooms({\r\n    check_in,\r\n    check_out,\r\n    notes,\r\n    identifier,\r\n    override_unit,\r\n    unit,\r\n    auto_check_in,\r\n  }: {\r\n    identifier: string | null;\r\n    check_in: Date;\r\n    check_out: Date;\r\n    override_unit: boolean;\r\n    unit: string;\r\n    notes: string | null;\r\n    auto_check_in: boolean;\r\n  }) {\r\n    const rooms = [];\r\n    const total_days = calculateDaysBetweenDates(moment(check_in).format('YYYY-MM-DD'), moment(check_out).format('YYYY-MM-DD'));\r\n    const calculateAmount = ({ is_amount_modified, selected_variation, view_mode, rp_amount, ratePlan }: IRatePlanSelection, infants: number) => {\r\n      if (is_amount_modified) {\r\n        return view_mode === '002' ? rp_amount : rp_amount / total_days;\r\n      }\r\n      let variation = selected_variation;\r\n      if (infants > 0) {\r\n        if (!this.variationService) {\r\n          this.variationService = new VariationService();\r\n        }\r\n        variation = this.variationService.getVariationBasedOnInfants({ variations: ratePlan.variations, baseVariation: selected_variation, infants });\r\n      }\r\n      return Number(variation.discounted_amount) / total_days;\r\n    };\r\n    for (const roomTypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (let i = 0; i < rateplan.reserved; i++) {\r\n            const { first_name, last_name } = rateplan.guest[i];\r\n            rooms.push({\r\n              identifier,\r\n              roomtype: rateplan.roomtype,\r\n              rateplan: rateplan.ratePlan,\r\n              prepayment_amount_gross: 0,\r\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\r\n              occupancy: {\r\n                adult_nbr: rateplan.selected_variation.adult_nbr,\r\n                children_nbr: rateplan.selected_variation.child_nbr - Math.max(rateplan.guest[i].infant_nbr, 0),\r\n                infant_nbr: rateplan.guest[i].infant_nbr,\r\n              },\r\n              bed_preference: rateplan.guest[i].bed_preference,\r\n              from_date: moment(check_in).format('YYYY-MM-DD'),\r\n              to_date: moment(check_out).format('YYYY-MM-DD'),\r\n              notes,\r\n              check_in: auto_check_in,\r\n              days: this.generateDailyRates(check_in, check_out, calculateAmount(rateplan, rateplan.guest[i].infant_nbr)),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: null,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\r\n    try {\r\n      // Validate context structure\r\n      if (!context || !context.dateRangeData) {\r\n        throw new Error('Invalid context: Missing date range data.');\r\n      }\r\n\r\n      const fromDate = new Date(context.dateRangeData.fromDate);\r\n      const toDate = new Date(context.dateRangeData.toDate);\r\n\r\n      const generateNewRooms = (identifier = null, check_in: boolean = false) => {\r\n        return this.getBookedRooms({\r\n          check_in: fromDate,\r\n          check_out: toDate,\r\n          identifier,\r\n          notes: '',\r\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\r\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\r\n          auto_check_in: check_in,\r\n        });\r\n      };\r\n\r\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\r\n        return {\r\n          assign_units: true,\r\n          is_pms: true,\r\n          is_direct,\r\n          is_in_loyalty_mode,\r\n          promo_key,\r\n          extras,\r\n          booking: {\r\n            ...rest,\r\n            rooms,\r\n          },\r\n          extra_services,\r\n          pickup_info,\r\n        };\r\n      };\r\n\r\n      let newBooking = null;\r\n\r\n      switch (context.defaultData.event_type) {\r\n        case 'EDIT_BOOKING': {\r\n          const { booking, currentRoomType } = context.defaultData;\r\n\r\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\r\n          console.log('currentRoomType', currentRoomType);\r\n          const newRooms = generateNewRooms(currentRoomType.identifier, currentRoomType.in_out?.code === '001');\r\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\r\n          break;\r\n        }\r\n        case 'ADD_ROOM':\r\n        case 'SPLIT_BOOKING': {\r\n          const { booking } = context.defaultData;\r\n          if (!booking) {\r\n            throw new Error('Missing booking');\r\n          }\r\n          console.log(booking);\r\n          const newRooms = generateNewRooms();\r\n          newBooking = modifyBookingDetails(booking, [...booking?.rooms, ...newRooms]);\r\n          break;\r\n        }\r\n        default: {\r\n          const newRooms = generateNewRooms(null, check_in);\r\n          const { bookedByInfoData } = context;\r\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\r\n          newBooking = {\r\n            assign_units: true,\r\n            is_pms: true,\r\n            is_direct: true,\r\n            is_in_loyalty_mode: false,\r\n            promo_key: null,\r\n            extras,\r\n            agent: isAgent ? { id: sourceOption.tag } : null,\r\n            booking: {\r\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\r\n              to_date: moment(toDate).format('YYYY-MM-DD'),\r\n              remark: bookedByInfoData.message || null,\r\n              booking_nbr: '',\r\n              property: {\r\n                id: context.propertyid,\r\n              },\r\n              booked_on: {\r\n                date: moment().format('YYYY-MM-DD'),\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n              },\r\n              source: isAgent ? '' : sourceOption,\r\n              rooms: newRooms,\r\n              currency: context.currency,\r\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\r\n              guest: {\r\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n                first_name: bookedByInfoData.firstName,\r\n                last_name: bookedByInfoData.lastName,\r\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n                city: null,\r\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\r\n                address: '',\r\n                dob: null,\r\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n                cci: bookedByInfoData.cardNumber\r\n                  ? {\r\n                      nbr: bookedByInfoData.cardNumber,\r\n                      holder_name: bookedByInfoData.cardHolderName,\r\n                      expiry_month: bookedByInfoData.expiryMonth,\r\n                      expiry_year: bookedByInfoData.expiryYear,\r\n                    }\r\n                  : null,\r\n              },\r\n            },\r\n            pickup_info: null,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n      return newBooking;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n/* .row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n} */\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '@/utils/utils';\r\nimport { IEntries, RoomBlockDetails } from '@/models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { IToast } from '@/components/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore } from '@/stores/booking.store';\r\nimport moment from 'moment';\r\nexport type IHistoryEntry = {\r\n  dates: { checkIn: Date; checkOut: Date };\r\n  adults: number;\r\n  children: number;\r\n};\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() bookingHistory: Array<{\r\n    dates: { checkIn: Date; checkOut: Date };\r\n    adults: number;\r\n    children: number;\r\n  }> = [];\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n  private updatedBooking: boolean = false;\r\n  private MAX_HISTORY_LENGTH: number = 2;\r\n  private didReservation: boolean;\r\n  private wasBlockedUnit: boolean;\r\n\r\n  async componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.initializeDefaultDateRange();\r\n\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    console.log('testing');\r\n    // console.log(this.bookingData);\r\n    this.initializeDefaultData();\r\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\r\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\r\n    await this.fetchSetupEntriesAndInitialize();\r\n    this.initializeEventData();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    if (key === 'select' || (key === 'blur' && data !== '')) {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\r\n      this.defaultData = { ...this.defaultData, booking: res };\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  // @Listen('adultChild')\r\n  // handleAdultChildChange(event: CustomEvent) {\r\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n  //   }\r\n  //   const { adult, child } = event.detail;\r\n  //   this.adultChildCount = { ...event.detail };\r\n  //   this.updateBookingHistory({ adults: adult, children: child });\r\n  // }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    const { adult, child } = event.detail;\r\n    this.adultChildCount = { ...event.detail };\r\n\r\n    // Update the booking history\r\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\r\n  }\r\n\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.updateBookingHistory({\r\n      dates: {\r\n        checkIn: new Date(this.dateRangeData.fromDate),\r\n        checkOut: new Date(new Date(opt.data.toDate)),\r\n      },\r\n    });\r\n    console.log('date changed', opt);\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.checkBookingAvailability();\r\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (calculateTotalRooms() > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else if (this.defaultData?.roomsInfo.length === 0) {\r\n          this.animateIrButton.emit('check_availability');\r\n          break;\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.checkBookingAvailability();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\r\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\r\n\r\n    const newEntry: IHistoryEntry = {\r\n      dates: {\r\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\r\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\r\n      },\r\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\r\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\r\n    };\r\n\r\n    // Update the booking history\r\n    this.bookingHistory.push(newEntry);\r\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\r\n      this.bookingHistory.shift();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    }\r\n  }\r\n\r\n  private initializeDefaultDateRange() {\r\n    this.defaultDateRange = {\r\n      from_date: this.bookingData.FROM_DATE,\r\n      to_date: this.bookingData.TO_DATE,\r\n    };\r\n  }\r\n\r\n  private initializeDefaultData() {\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n  }\r\n\r\n  private async fetchSetupEntriesAndInitialize() {\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  private initializeEventData() {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.initializeEditBookingData();\r\n    }\r\n\r\n    if (!this.isEventType('BAR_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n\r\n    this.initializePage();\r\n  }\r\n\r\n  private initializeEditBookingData() {\r\n    this.adultChildCount = {\r\n      adult: this.defaultData.ADULTS_COUNT,\r\n      child: this.defaultData.CHILDREN_COUNT,\r\n    };\r\n\r\n    this.initialRoomIds = {\r\n      roomName: this.defaultData.roomName,\r\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n      roomId: this.defaultData.PR_ID,\r\n      roomTypeId: this.defaultData.RATE_TYPE,\r\n    };\r\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n    console.log(GUEST);\r\n    modifyBookingStore('guest', {\r\n      bed_preference: currentRoomType.bed_preference?.toString(),\r\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n      first_name: GUEST.first_name ?? '',\r\n      last_name: GUEST.last_name ?? '',\r\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n      unit: (currentRoomType.unit as any)?.id?.toString(),\r\n    });\r\n    this.checkBookingAvailability();\r\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n  }\r\n\r\n  private initializePage() {\r\n    switch (this.defaultData.event_type) {\r\n      case 'SPLIT_BOOKING':\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n        break;\r\n      case 'BLOCK_DATES':\r\n        this.page = 'page_block_date';\r\n        break;\r\n      default:\r\n        this.page = 'page_one';\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  private isGuestDataIncomplete() {\r\n    for (const roomtypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (const guest of rateplan.guest) {\r\n            if (guest.first_name === '' || guest.last_name === '') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n    );\r\n  }\r\n\r\n  private setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  private setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  private async checkBookingAvailability() {\r\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\r\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\r\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n        room_type_ids_to_update,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\r\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\r\n        this.updateBooking();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing booking availability:', error);\r\n    }\r\n  }\r\n\r\n  private updateBooking() {\r\n    try {\r\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n      const roomtypeId = currentRoomType.roomtype.id;\r\n      const rateplanId = currentRoomType.rateplan.id;\r\n      reserveRooms({\r\n        roomTypeId: roomtypeId,\r\n        ratePlanId: rateplanId,\r\n        rooms: 1,\r\n        guest: [\r\n          {\r\n            bed_preference: currentRoomType.bed_preference?.toString(),\r\n            infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n            last_name: GUEST.last_name,\r\n            first_name: GUEST.first_name,\r\n            unit: (currentRoomType.unit as any)?.id?.toString(),\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private async checkAndBlockDate() {\r\n    try {\r\n      const { block_exposed_unit_props } = this.defaultData;\r\n      await this.bookingService.getBookingAvailability({\r\n        from_date: block_exposed_unit_props.from_date,\r\n        to_date: block_exposed_unit_props.to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: {\r\n          adult: 2,\r\n          child: 0,\r\n        },\r\n        language: this.language,\r\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\r\n        currency: this.currency,\r\n      });\r\n      const isAvailable = booking_store.roomTypes.every(rt => rt.is_available_to_book);\r\n      if (isAvailable) {\r\n        await this.handleBlockDate(false);\r\n      } else {\r\n        console.log('Blocked date is unavailable. Continuing...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking and blocking date:', error);\r\n    }\r\n  }\r\n  private async closeWindow() {\r\n    resetBookingStore();\r\n    this.closeBookingWindow.emit();\r\n\r\n    if (this.wasBlockedUnit && !this.didReservation) {\r\n      await this.checkAndBlockDate();\r\n    }\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private isEventType(key: TEventType) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n\r\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  private renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  private gotoPage(gotoPage: string) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  private getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n\r\n  private async handleBlockDate(auto_close = true) {\r\n    const props = this.wasBlockedUnit\r\n      ? this.defaultData.block_exposed_unit_props\r\n      : (() => {\r\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n          return {\r\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n            pr_id: this.defaultData.PR_ID.toString(),\r\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n            ...releaseData,\r\n          };\r\n        })();\r\n    await this.bookingService.blockUnit(props);\r\n    // const blockedUnit = await transformNewBLockedRooms(result);\r\n    // this.blockedCreated.emit(blockedUnit);\r\n    if (auto_close) this.closeWindow();\r\n  }\r\n\r\n  private async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else if (this.isButtonDisabled()) {\r\n      this.isLoading = '';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      this.didReservation = true;\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\r\n        context: this,\r\n        sourceOption: this.sourceOption,\r\n        check_in,\r\n      });\r\n      await this.bookingService.doReservation(serviceParams);\r\n      this.resetBookingData.emit(null);\r\n    } catch (error) {\r\n      console.error('Error booking user:', error);\r\n    } finally {\r\n      // this.isLoading = null;\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  private setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  private resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n\r\n  private getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-booking-form\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-booking-form>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { TIcons } from '@/components/ui/ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false, icon_name?: TIcons) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button> */}\r\n        <ir-button\r\n          btn_color={type === 'cancel' ? 'secondary' : 'primary'}\r\n          text={label}\r\n          btn_disabled={disabled}\r\n          onClickHandler={() => {\r\n            this.buttonClicked.emit({ key: type });\r\n          }}\r\n          icon_name={icon_name}\r\n          iconPosition=\"right\"\r\n          style={{ '--icon-size': '1rem' }}\r\n          icon_style={{ paddingBottom: '1.9px' }}\r\n        ></ir-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, isRequestPending('/Get_Exposed_Booking_Availability'), 'angles_right')}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, false, 'angles_right')}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group  my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group ml-0\">\r\n              <ir-select\r\n                class={'m-0'}\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1 p-0\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Check_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHandler={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} 0 - ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0 mr-1 \">\r\n            <igl-date-range\r\n              variant=\"booking\"\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport moment from 'moment';\r\n@Component({\r\n  tag: 'igl-booking-form',\r\n  styleUrl: 'igl-booking-form.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingForm {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const showBookAndCheckin = calendar_data.checkin_enabled && moment(new Date(this.dateRangeData?.fromDate)).isSame(new Date(), 'day');\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={new Date(this.dateRangeData.fromDate)}\r\n            to_date={new Date(this.dateRangeData.toDate)}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {Object.values(booking_store.ratePlanSelections).map(val =>\r\n          Object.values(val).map(ratePlan => {\r\n            const rp = ratePlan as IRatePlanSelection;\r\n            if (rp.reserved === 0) {\r\n              return null;\r\n            }\r\n\r\n            return [...new Array(rp.reserved)].map((_, i) => (\r\n              <igl-application-info\r\n                totalNights={Number(this.dateRangeData.dateDifference)}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                currency={this.currency}\r\n                guestInfo={rp.guest ? rp.guest[i] : null}\r\n                bookingType={this.bookingData.event_type}\r\n                rateplanSelection={rp}\r\n                key={`${rp.ratePlan.id}_${i}`}\r\n                roomIndex={i}\r\n                baseData={\r\n                  this.bookingData.event_type === 'EDIT_BOOKING'\r\n                    ? {\r\n                        roomtypeId: this.bookingData.currentRoomType.roomtype.id,\r\n                        unit: this.bookingData.currentRoomType.unit,\r\n                      }\r\n                    : undefined\r\n                }\r\n              ></igl-application-info>\r\n            ));\r\n          }),\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event => {\r\n              this.handleEventData(event, 'propertyBookedBy', 0);\r\n            }}\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <ir-button\r\n                icon_name=\"angles_left\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n                text={locales.entries.Lcz_Back}\r\n                style={{ '--icon-size': '1rem' }}\r\n                icon_style={{ paddingBottom: '1.9px' }}\r\n              ></ir-button>\r\n            </div>\r\n            <div class={`mt-1 mt-md-0 flex-fill ${showBookAndCheckin ? 'mr-md-1' : ''}`}>\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n            </div>\r\n            {showBookAndCheckin && (\r\n              <div class=\"mt-1 mt-md-0 flex-fill\">\r\n                <ir-button\r\n                  isLoading={this.isLoading === 'bookAndCheckIn'}\r\n                  btn_styles=\"full-width align-items-center justify-content-center\"\r\n                  onClickHandler={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                  text={locales.entries.Lcz_BookAndChekcIn}\r\n                ></ir-button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\nimport booking_store from '@/stores/booking.store';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Check_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {booking_store.roomTypes?.map(roomType => (\r\n                <igl-room-type\r\n                  initialRoomIds={this.initialRoomIds}\r\n                  isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                  key={`room-info-${roomType.id}`}\r\n                  currency={this.currency}\r\n                  ratePricingMode={this.ratePricingMode}\r\n                  dateDifference={this.dateRangeData.dateDifference}\r\n                  bookingType={this.bookingData.event_type}\r\n                  roomType={roomType}\r\n                  class=\"mt-2 mb-1 p-0\"\r\n                  roomInfoId={this.selectedRooms.has(`c_${roomType.id}`) ? roomType.id : null}\r\n                  onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                ></igl-room-type>\r\n              ))}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n  font-size: 14px !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 220px !important;\r\n  opacity: 0;\r\n  user-select: none;\r\n  font-size: 14px !important;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 14px;\r\n  margin-right: 14px;\r\n  font-size: 13.65px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  inset: 0;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 245px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n.date-range-container-cn {\r\n  position: relative;\r\n  width: fit-content;\r\n}\r\n.date-range-container-cn:focus-within .date-range-container {\r\n  border: 1px solid #379ff2;\r\n}\r\n.date-range-container {\r\n  position: relative;\r\n  gap: 1rem;\r\n  font-size: 0.975rem;\r\n  line-height: 1.45;\r\n  border-radius: 0.21rem;\r\n  border: 1px solid #cacfe7;\r\n  color: #3b4781;\r\n  padding: 0.75rem 1rem;\r\n  box-sizing: border-box !important;\r\n  font-weight: 400;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  height: 2rem;\r\n  pointer-events: none;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.date-range-container-cn .date-range-input {\r\n  position: absolute;\r\n  width: 100% !important;\r\n}\r\n.date-range-container.disabled {\r\n  border: none;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n.date-range-input[data-state='disabled'] {\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Prop() variant: 'booking' | 'default' = 'default';\r\n\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n\r\n  @Watch('defaultData')\r\n  handleDataChange(newValue: any, oldValue: any) {\r\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  private initializeDates() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      // this.handleDateSelectEvent('selectedDateRange', {\r\n      //   fromDate: this.fromDate.getTime(),\r\n      //   toDate: this.toDate.getTime(),\r\n      //   fromDateStr: this.fromDateStr,\r\n      //   toDateStr: this.toDateStr,\r\n      //   dateDifference: this.totalNights,\r\n      // });\r\n    }\r\n    return [this.fromDateStr, this.toDateStr];\r\n  }\r\n\r\n  private calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  private getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  private handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  private handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    if (this.variant === 'booking') {\r\n      return (\r\n        <div class={`p-0 m-0 date-range-container-cn`}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\r\n            {this.totalNights && <span class=\"m-0 p-0\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer form-control input-sm\" data-state={this.disabled ? 'disabled' : 'active'}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div data-state={this.disabled ? 'disabled' : 'active'} class=\"date-view\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <ir-date-view showDateDifference={this.disabled} from_date={this.fromDate} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        {this.withDateDifference && (\r\n          <span>\r\n            {this.totalNights && !this.disabled ? (\r\n              <span class=\"iglRangeNights mx-1\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </span>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n.row.sc-igl-booking-form {\r\n  padding: 0 !important;\r\n}\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries, ICountry } from '@/models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\nimport booking_store, { BookingStore, modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  private handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n  private handleCountryChange(value) {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      isdCode: value,\r\n      countryId: value,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  private handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile_without_prefix,\r\n            countryId: res.country_id,\r\n            isdCode: res?.country_phone_prefix ?? res.isdCode.toString(),\r\n          };\r\n          console.log(this.bookedByData);\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  private updateGuest(props: Partial<BookingStore['checkout_guest']>) {\r\n    modifyBookingStore('checkout_guest', { ...(booking_store.checkout_guest ?? {}), ...props });\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log(key, data);\r\n    if (key === 'blur') {\r\n      if (z.string().email().safeParse(data).success) {\r\n        this.bookedByData.email = data;\r\n        this.checkUser();\r\n      } else if (this.bookedByData.email !== '' && data == '') {\r\n        this.bookedByData.email = '';\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n    if (key === 'select') {\r\n      this.bookedByData.email = data.email;\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        id: data.id,\r\n        firstName: data.first_name,\r\n        lastName: data.last_name,\r\n        contactNumber: data.mobile_without_prefix,\r\n        countryId: data.country_id,\r\n        isdCode: data['country_phone_prefix'] ?? data?.country_id,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n\r\n    // console.log('data', data, 'key', key);\r\n    // switch (key) {\r\n    //   case 'blur':\r\n    //     if (data !== '') {\r\n    //       this.bookedByData.email = data;\r\n    //       this.checkUser();\r\n    //     } else {\r\n    //       let prevBookedByData = { ...this.bookedByData };\r\n    //       prevBookedByData = { ...prevBookedByData, email: '' };\r\n    //       this.bookedByData = { ...prevBookedByData };\r\n    //       this.dataUpdateEvent.emit({\r\n    //         key: 'bookedByInfoUpdated',\r\n    //         data: { ...this.bookedByData },\r\n    //       });\r\n    //     }\r\n\r\n    //     break;\r\n    //   case 'select':\r\n    //     this.bookedByData.email = data.email;\r\n    //     this.bookedByData = {\r\n    //       ...this.bookedByData,\r\n    //       id: data.id,\r\n    //       firstName: data.first_name,\r\n    //       lastName: data.last_name,\r\n    //       contactNumber: data.mobile,\r\n    //       countryId: data.country_id,\r\n    //       isdCode: data.country_id.toString(),\r\n    //     };\r\n    //     this.dataUpdateEvent.emit({\r\n    //       key: 'bookedByInfoUpdated',\r\n    //       data: this.bookedByData,\r\n    //     });\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"text\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => {\r\n                      this.updateGuest({ first_name: (event.target as HTMLInputElement).value });\r\n                      this.handleDataChange('firstName', event);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                {/* <div class=\"p-0 m-0  controlContainer flex-fill\"> */}\r\n                <ir-country-picker\r\n                  class=\"flex-grow-1 m-0\"\r\n                  onCountryChange={e => this.handleCountryChange(e.detail.id)}\r\n                  countries={this.countryNodeList}\r\n                  country={this.countryNodeList.find(c => c.id === this.bookedByData.countryId)}\r\n                ></ir-country-picker>\r\n                {/* <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select> */}\r\n                {/* </div> */}\r\n              </div>\r\n\r\n              {/* <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div class=\"form-group p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0 controlContainer flex-fill\">\r\n                  <ir-phone-input\r\n                    language={this.language}\r\n                    // label={locales.entries.Lcz_MobilePhone}\r\n                    value={this.bookedByData.contactNumber}\r\n                    phone_prefix={this.bookedByData.isdCode}\r\n                    default_country={this.bookedByData.countryId}\r\n                    onTextChange={e => {\r\n                      this.handleDataChange('isdCode', { target: { value: e.detail.phone_prefix } });\r\n                      this.handleDataChange('contactNumber', { target: { value: e.detail.mobile } });\r\n                    }}\r\n                  ></ir-phone-input>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 150px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 20%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { RatePlan, Variation } from '@/models/property';\r\nimport booking_store, { IRatePlanSelection, reserveRooms, updateRoomParams } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-rate-plan',\r\n  styleUrl: 'igl-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglRatePlan {\r\n  // Used Props with type annotations\r\n  @Prop() ratePlan: RatePlan;\r\n  @Prop() roomTypeId: number;\r\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\r\n  @Prop() currency!: { symbol: string };\r\n  @Prop() shouldBeDisabled!: boolean;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() visibleInventory!: IRatePlanSelection;\r\n\r\n  @Event() gotoSplitPageTwoEvent!: EventEmitter<{ [key: string]: any }>;\r\n\r\n  // Determine if the form inputs should be disabled\r\n  private disableForm(): boolean {\r\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\r\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\r\n      return false;\r\n    }\r\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\r\n  }\r\n\r\n  // Update the rate plan selection in the booking store\r\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\r\n    const { roomTypeId, ratePlan } = this;\r\n    const currentSelections = booking_store.ratePlanSelections;\r\n\r\n    booking_store.ratePlanSelections = {\r\n      ...currentSelections,\r\n      [roomTypeId]: {\r\n        ...currentSelections[roomTypeId],\r\n        [ratePlan.id]: {\r\n          ...currentSelections[roomTypeId][ratePlan.id],\r\n          ...props,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // Handle changes to select inputs\r\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\r\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\r\n    if (key === 'adult_child_offering') {\r\n      this.handleVariationChange(value);\r\n    } else if (key === 'rate') {\r\n      this.updateRateplanSelection({ view_mode: value as any });\r\n    } else if (key === 'totalRooms') {\r\n      reserveRooms({\r\n        roomTypeId: this.roomTypeId,\r\n        ratePlanId: this.ratePlan.id,\r\n        rooms: Number(value),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Navigate to the next page for booking\r\n  private bookProperty(): void {\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } } as any);\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  // Render the rate amount\r\n  private renderRate(): string {\r\n    const { visibleInventory } = this;\r\n    if (!visibleInventory) return '';\r\n    if (visibleInventory.is_amount_modified) {\r\n      return visibleInventory.rp_amount.toString();\r\n    }\r\n    const { selected_variation, view_mode } = visibleInventory;\r\n    const amount = view_mode === '001' ? selected_variation?.discounted_gross_amount : selected_variation?.amount_per_night_gross;\r\n    return amount?.toString() || '';\r\n  }\r\n\r\n  // Format variation for display\r\n  private formatVariation(variation: Variation): string {\r\n    if (!variation) return '';\r\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\r\n    const children =\r\n      variation.child_nbr > 0\r\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\r\n        : '';\r\n    return children ? `${adults} ${children}` : adults;\r\n  }\r\n\r\n  // Get tooltip messages for the rate plan\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, visibleInventory } = this;\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  // Handle variation change when a different option is selected\r\n  private async handleVariationChange(value: string): Promise<void> {\r\n    const { ratePlan, roomTypeId } = this;\r\n    const variations = ratePlan.variations || [];\r\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    updateRoomParams({\r\n      params: { selected_variation: selectedVariation },\r\n      ratePlanId: ratePlan.id,\r\n      roomTypeId,\r\n    });\r\n  }\r\n\r\n  // Reset reserved rooms in the booking store\r\n  private resetReserved(): void {\r\n    const updatedSelections = Object.entries(booking_store.ratePlanSelections).reduce((acc, [roomTypeId, ratePlans]) => {\r\n      acc[roomTypeId] = Object.entries(ratePlans).reduce((rpAcc, [ratePlanId, ratePlan]) => {\r\n        rpAcc[ratePlanId] = { ...ratePlan, reserved: 0 };\r\n        return rpAcc;\r\n      }, {} as any);\r\n      return acc;\r\n    }, {} as any);\r\n    booking_store.ratePlanSelections = updatedSelections;\r\n  }\r\n\r\n  render() {\r\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\r\n    const isAvailableToBook = ratePlan.is_available_to_book;\r\n    const disableForm = this.disableForm();\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\r\n    console.log(visibleInventory);\r\n    // if (!this.visibleInventory) {\r\n    //   return null;\r\n    // }\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={`d-flex m-0 p-0 ${isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'}`}\r\n        >\r\n          <div class=\"rateplan-name-container d-flex align-items-center\" style={{ gap: '0.5rem' }}>\r\n            {bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span>\r\n                <span>/{ratePlan.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>\r\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n              </span>\r\n            )}\r\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\r\n          </div>\r\n\r\n          {isAvailableToBook ? (\r\n            <div class=\"d-md-flex justify-content-md-end align-items-md-center flex-fill rateplan-container\">\r\n              <div class=\"mt-1 mt-md-0 flex-fill max-w-300\">\r\n                <fieldset class=\"position-relative\">\r\n                  <select disabled={disableForm} class=\"form-control input-sm\" id={uuidv4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                    {formattedVariations?.map(variation => (\r\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\r\n                        {variation}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\r\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0\">\r\n                  <ir-price-input\r\n                    disabled={disableForm}\r\n                    onTextChange={e =>\r\n                      this.updateRateplanSelection({\r\n                        is_amount_modified: true,\r\n                        rp_amount: Number(e.detail),\r\n                      })\r\n                    }\r\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\r\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\r\n                    class=\"ir-br-input-none\"\r\n                    currency={currency.symbol}\r\n                    value={this.renderRate()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                  ></ir-price-input>\r\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\r\n                    <select\r\n                      disabled={disableForm}\r\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\r\n                      id={uuidv4()}\r\n                      onChange={evt =>\r\n                        this.updateRateplanSelection({\r\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\r\n                        })\r\n                      }\r\n                    >\r\n                      {ratePricingMode.map(data => (\r\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\r\n                          {data.CODE_VALUE_EN}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\r\n                  <div class=\"flex-fill mt-lg-0 ml-1 m-0 mt-md-0 p-0\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <select\r\n                        disabled={visibleInventory.visibleInventory === 0}\r\n                        class=\"form-control input-sm\"\r\n                        id={uuidv4()}\r\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      >\r\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\r\n                          <option value={i} selected={visibleInventory.reserved === i}>\r\n                            {i}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </fieldset>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {bookingType === 'EDIT_BOOKING' && (\r\n                <Fragment>\r\n                  <div class=\"m-0 p-0 mt-lg-0 ml-md-1 mt-md-1 d-none d-md-block\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <input\r\n                        disabled={disableForm}\r\n                        type=\"radio\"\r\n                        name=\"ratePlanGroup\"\r\n                        value=\"1\"\r\n                        onChange={() => {\r\n                          this.resetReserved();\r\n                          reserveRooms({\r\n                            roomTypeId: this.roomTypeId,\r\n                            ratePlanId: this.ratePlan.id,\r\n                            rooms: 1,\r\n                            guest: [\r\n                              {\r\n                                last_name: booking_store.guest.last_name,\r\n                                first_name: booking_store.guest.first_name,\r\n                                unit: null,\r\n                                bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest.bed_preference : null,\r\n                                infant_nbr: this.visibleInventory.selected_variation.child_nbr > 0 ? booking_store.guest.infant_nbr : null,\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                        checked={visibleInventory.reserved === 1}\r\n                      />\r\n                    </fieldset>\r\n                  </div>\r\n                  <button\r\n                    disabled={disableForm}\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\r\n                    onClick={() => {\r\n                      this.resetReserved();\r\n                      reserveRooms({\r\n                        roomTypeId: this.roomTypeId,\r\n                        ratePlanId: this.ratePlan.id,\r\n                        rooms: 1,\r\n                        guest: [\r\n                          {\r\n                            last_name: booking_store.guest.last_name,\r\n                            first_name: booking_store.guest.first_name,\r\n                            unit: null,\r\n                            bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest.bed_preference : null,\r\n                            infant_nbr: this.visibleInventory.selected_variation.child_nbr > 0 ? booking_store.guest.infant_nbr : null,\r\n                          },\r\n                        ],\r\n                      });\r\n                      this.bookProperty();\r\n                    }}\r\n                  >\r\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n\r\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\r\n                <button\r\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1\"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {locales.entries.Lcz_Book}\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { RoomType } from '@/models/property';\r\nimport { getVisibleInventory } from '@/stores/booking.store';\r\nimport { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-room-type',\r\n  styleUrl: 'igl-room-type.css',\r\n  scoped: true,\r\n})\r\nexport class IglRoomType {\r\n  @Prop() roomType: RoomType;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @Prop() initialRoomIds: any;\r\n  @Prop() isBookDisabled: boolean;\r\n\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @State() roomsDistributions: number[] = [];\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomType.rateplans?.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomType.name}</div>}\r\n        {this.roomType.rateplans?.map(ratePlan => {\r\n          if (!!ratePlan.variations) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomType.id;\r\n            // let roomId = -1;\r\n            // if (shouldBeDisabled && this.initialRoomIds) {\r\n            //   roomId = this.initialRoomIds.roomId;\r\n            // }\r\n            const visibleInventory = getVisibleInventory(this.roomType.id, ratePlan.id);\r\n            console.log(visibleInventory);\r\n            return (\r\n              <igl-rate-plan\r\n                // is_bed_configuration_enabled={this.roomType.is_bed_configuration_enabled}\r\n                // index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                visibleInventory={visibleInventory}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                // dateDifference={this.dateDifference}\r\n                ratePlan={ratePlan}\r\n                roomTypeId={this.roomType.id}\r\n                // totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                // physicalrooms={this.roomType.physicalrooms}\r\n                // defaultRoomId={roomId}\r\n              ></igl-rate-plan>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}