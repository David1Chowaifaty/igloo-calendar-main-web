{"version":3,"names":["irResetPasswordCss","IrResetPasswordStyle0","sheetCss","IrResetPasswordStyle1","IrResetPassword","constructor","hostRef","this","language","showValidator","autoValidate","error","submitted","isLoading","isFetching","token","Token","authService","AuthService","systemService","SystemService","roomService","RoomService","initialized","ResetPasswordSchema","z","object","password","string","regex","CONSTANTS","PASSWORD","confirm_password","nullable","refine","test","message","componentWillLoad","ticket","setToken","componentDidLoad","init","handleTicketChange","oldValue","newValue","localized_words","Promise","all","fetchLanguage","checkOTPNecessity","METHOD_NAME","locales","entries","direction","handleChangePassword","e","preventDefault","parse","confirmPassword","changeUserPwd","username","new_pwd","old_pwd","skip2Fa","window","history","back","el","slot","closeSideBar","emit","ZodError","validationErrors","issues","map","issue","path","console","log","handleOtpFinished","detail","type","render","insideSidebar","h","key","class","Fragment","suppressToastEndpoints","onSubmit","bind","displayContext","label","xmlns","viewBox","height","width","fill","d","_a","Lcz_SetNewPassword","_b","value","onTextChange","inputStyles","zod","pick","wrapKey","placeholder","_c","Lcz_NewPassword","onInputFocus","_d","_e","Lcz_ConfirmPassword","style","gap","btn_styles","onClickHandler","text","_f","Lcz_Cancel","size","btn_color","btn_type","_g","Lcz_ChangePassword"],"sources":["src/components/ir-reset-password/ir-reset-password.css?tag=ir-reset-password&encapsulation=scoped","src/common/sheet.css?tag=ir-reset-password&encapsulation=scoped","src/components/ir-reset-password/ir-reset-password.tsx"],"sourcesContent":[".base-host {\n  height: 100vh;\n  display: grid;\n  align-content: center;\n  padding: 2rem;\n  box-sizing: border-box;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background: white;\n}\np,\ninput,\nbutton {\n  margin: 0;\n}\np,\ninput,\nbutton,\ndiv,\nsection,\nform {\n  box-sizing: border-box;\n}\n.lock-icon {\n  align-self: center;\n}\n.form-container {\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n  border-radius: 0.25rem;\n  gap: 1rem;\n  width: 100%;\n  max-width: 38rem;\n  margin-left: auto;\n  margin-right: auto;\n}\n.separator-container {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n}\n.separator-container p {\n  color: #6b6f82;\n  /* color: green; */\n  font-size: 1rem;\n}\n.separator {\n  flex: 1 1 0%;\n  height: 1px;\n  background: #dadada;\n}\n.login-btn {\n  margin-top: 1rem;\n}\n.logo {\n  align-self: center;\n}\n.app_links {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  padding-block: 0.5rem;\n}\n.app_links a img {\n  width: 70%;\n}\n.password_toggle {\n  all: unset;\n  position: absolute;\n  top: 2px;\n  right: 1rem;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  height: 100dvh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import Token from '@/models/Token';\nimport { AuthService } from '@/services/authenticate.service';\nimport { RoomService } from '@/services/room.service';\nimport { SystemService } from '@/services/system.service';\nimport locales from '@/stores/locales.store';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Component, Element, Event, EventEmitter, Fragment, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { z, ZodError } from 'zod';\n\n@Component({\n  tag: 'ir-reset-password',\n  styleUrls: ['ir-reset-password.css', '../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrResetPassword {\n  @Element() el: HTMLIrResetPasswordElement;\n\n  @Prop() username: string;\n  @Prop() old_pwd: string;\n  @Prop() ticket: string;\n  @Prop() skip2Fa: boolean;\n  @Prop() language: string = 'en';\n\n  @State() confirmPassword: string;\n  @State() password: string;\n  @State() showValidator: boolean = false;\n  @State() autoValidate: boolean = false;\n  @State() error: { password?: boolean; confirm_password?: boolean } = {};\n  @State() submitted: boolean = false;\n  @State() isLoading = false;\n  @State() isFetching = false;\n\n  @Event() closeSideBar: EventEmitter<null>;\n\n  private token = new Token();\n  private authService = new AuthService();\n  private systemService = new SystemService();\n  private roomService = new RoomService();\n  private initialized = false;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  componentDidLoad() {\n    this.init();\n  }\n\n  @Watch('ticket')\n  handleTicketChange(oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  private async init() {\n    if (!this.ticket || this.initialized) {\n      return;\n    }\n    const [localized_words] = await Promise.all([\n      this.roomService.fetchLanguage(this.language, ['_USER_MGT']),\n      this.systemService.checkOTPNecessity({\n        METHOD_NAME: 'Change_User_Pwd',\n      }),\n    ]);\n    locales.entries = localized_words.entries;\n    locales.direction = localized_words.direction;\n    this.initialized = false;\n  }\n\n  private ResetPasswordSchema = z.object({\n    password: z.string().regex(CONSTANTS.PASSWORD),\n    confirm_password: z\n      .string()\n      .nullable()\n      .refine(\n        password => {\n          if (!CONSTANTS.PASSWORD.test(password)) {\n            return false;\n          }\n          return password === this.password;\n        },\n        { message: 'Password must be at least 8 characters long.' },\n      ),\n  });\n\n  private async handleChangePassword(e: Event) {\n    e.preventDefault();\n    try {\n      this.error = {};\n      this.isLoading = true;\n      this.autoValidate = true;\n      this.ResetPasswordSchema.parse({\n        password: this.password,\n        confirm_password: this.confirmPassword,\n      });\n      await this.authService.changeUserPwd({\n        username: this.username,\n        new_pwd: this.password,\n        old_pwd: this.old_pwd,\n      });\n      if (!this.skip2Fa) {\n        // this.submitted = true;\n        window.history.back();\n      }\n      if (this.el.slot === 'sidebar-body') {\n        this.closeSideBar.emit();\n      }\n    } catch (error) {\n      if (error instanceof ZodError) {\n        let validationErrors = {};\n        error.issues.map(issue => {\n          const path = issue.path[0];\n          console.log(path, issue);\n          if (path === 'password') {\n            this.showValidator = true;\n          }\n          validationErrors[path] = true;\n        });\n        this.error = validationErrors;\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  @Listen('otpFinished', { target: 'body' })\n  handleOtpFinished(e: CustomEvent) {\n    if (e.detail.type === 'success') {\n      return;\n    }\n    if (this.el.slot !== 'sidebar-body') {\n      window.history.back();\n    } else {\n      this.closeSideBar.emit();\n    }\n  }\n  render() {\n    const insideSidebar = this.el.slot === 'sidebar-body';\n    // if (!locales.entries && !insideSidebar) {\n    //   return <ir-loading-screen></ir-loading-screen>;\n    // }\n    return (\n      <div class={{ 'base-host': !insideSidebar, 'h-100': insideSidebar }}>\n        <Fragment>\n          {!insideSidebar && (\n            <Fragment>\n              <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd']}></ir-interceptor>\n              <ir-toast></ir-toast>\n            </Fragment>\n          )}\n          <form onSubmit={this.handleChangePassword.bind(this)} class={{ 'sheet-container': insideSidebar }}>\n            {insideSidebar && <ir-title class=\"px-1 sheet-header\" displayContext=\"sidebar\" label={'Change Password'}></ir-title>}\n            <div class={{ 'form-container': true, 'sheet-body px-1': insideSidebar, 'px-2': !insideSidebar }}>\n              <svg class=\"lock-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" height={24} width={24}>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z\"\n                />\n              </svg>\n              <div class=\"text-center mb-2\">\n                <h4 class=\"mb-1\">{locales?.entries?.Lcz_SetNewPassword}</h4>\n                {this.submitted ? (\n                  <p>An email has been sent to your address. Please check your inbox to confirm the password change.</p>\n                ) : (\n                  <p>Your new password must be different to previously used password</p>\n                )}\n              </div>\n              {!this.submitted && (\n                <section>\n                  <div class={'mb-2'}>\n                    <div class=\"m-0 p-0\">\n                      <div class={'position-relative'}>\n                        <ir-input-text\n                          error={this.error?.password}\n                          autoValidate={this.autoValidate}\n                          value={this.password}\n                          onTextChange={e => (this.password = e.detail)}\n                          label=\"\"\n                          class=\"m-0 p-0\"\n                          inputStyles={'m-0'}\n                          zod={this.ResetPasswordSchema.pick({ password: true })}\n                          wrapKey=\"password\"\n                          placeholder={locales.entries?.Lcz_NewPassword}\n                          onInputFocus={() => (this.showValidator = true)}\n                          type={'password'}\n                        ></ir-input-text>\n                      </div>\n                      {this.showValidator && <ir-password-validator class=\"mb-1\" password={this.password}></ir-password-validator>}\n                    </div>\n                    <div class={'position-relative'}>\n                      <ir-input-text\n                        error={this.error?.confirm_password}\n                        autoValidate={this.autoValidate}\n                        zod={this.ResetPasswordSchema.pick({ confirm_password: true })}\n                        wrapKey=\"confirm_password\"\n                        value={this.confirmPassword}\n                        onTextChange={e => (this.confirmPassword = e.detail)}\n                        label=\"\"\n                        placeholder={locales.entries?.Lcz_ConfirmPassword}\n                        type={'password'}\n                      ></ir-input-text>\n                    </div>\n                  </div>\n\n                  {!insideSidebar && (\n                    <div class=\"d-flex flex-column mt-2 flex-sm-row align-items-sm-center\" style={{ gap: '0.5rem' }}>\n                      <ir-button\n                        btn_styles={'flex-fill'}\n                        onClickHandler={() => window.history.back()}\n                        class=\"flex-fill\"\n                        text={locales.entries?.Lcz_Cancel}\n                        size=\"md\"\n                        btn_color=\"secondary\"\n                      ></ir-button>\n                      <ir-button\n                        btn_styles={'flex-fill'}\n                        class=\"flex-fill\"\n                        isLoading={this.isLoading}\n                        btn_type=\"submit\"\n                        text={locales.entries?.Lcz_ChangePassword}\n                        size=\"md\"\n                      ></ir-button>\n                    </div>\n                  )}\n                </section>\n              )}\n            </div>\n            {insideSidebar && (\n              <div class={'sheet-footer w-full'}>\n                <ir-button\n                  text={locales.entries.Lcz_Cancel}\n                  onClickHandler={() => this.closeSideBar.emit(null)}\n                  class=\"flex-fill\"\n                  btn_color=\"secondary\"\n                  btn_styles=\"w-100 justify-content-center align-items-center\"\n                  size=\"md\"\n                ></ir-button>\n                <ir-button\n                  isLoading={this.isLoading}\n                  class=\"flex-fill\"\n                  btn_type=\"submit\"\n                  btn_styles=\"w-100 justify-content-center align-items-center\"\n                  text={locales.entries.Lcz_ChangePassword}\n                  size=\"md\"\n                ></ir-button>\n              </div>\n            )}\n          </form>\n        </Fragment>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}