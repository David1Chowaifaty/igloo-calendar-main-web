import{a as t}from"./p-06203439.js";import{e,p as r,q as o,d as n}from"./p-cc85b4a6.js";import{e as a}from"./p-1992d77b.js";import{T as s}from"./p-dfa14c12.js";var i=undefined&&undefined.__rest||function(t,e){var r={};for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0)r[o]=t[o];if(t!=null&&typeof Object.getOwnPropertySymbols==="function")for(var n=0,o=Object.getOwnPropertySymbols(t);n<o.length;n++){if(e.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(t,o[n]))r[o[n]]=t[o[n]]}return r};class c extends s{async getCalendarData(n,s,i){try{const c=this.getToken();if(c!==null){const{data:l}=await t.post(`/Get_Exposed_Calendar?Ticket=${c}`,{propertyid:n,from_date:s,to_date:i,extras:e});if(l.ExceptionMsg!==""){throw new Error(l.ExceptionMsg)}const _=l.My_Result.months;const u=[];const d=await a(_);const w=_.map((t=>{u.push({daysCount:t.days.length,monthName:t.description});return t.days.map((e=>({day:r(e.description,t.description),currentDate:o(e.description,t.description),dayDisplayName:e.description,rate:e.room_types,unassigned_units_nbr:e.unassigned_units_nbr,occupancy:e.occupancy})))})).flat();return Promise.resolve({ExceptionCode:null,ExceptionMsg:"",My_Params_Get_Rooming_Data:{AC_ID:n,FROM:l.My_Params_Get_Exposed_Calendar.from_date,TO:l.My_Params_Get_Exposed_Calendar.to_date},days:w,months:u,myBookings:d,defaultMonths:_})}}catch(t){console.error(t)}}async fetchGuest(e){try{const r=this.getToken();if(r!==null){const{data:o}=await t.post(`/Get_Exposed_Guest?Ticket=${r}`,{email:e});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}}catch(t){console.log(t);throw new Error(t)}}async fetchPMSLogs(e){try{const r=this.getToken();if(r!==null){const{data:o}=await t.post(`/Get_Exposed_PMS_Logs?Ticket=${r}`,{booking_nbr:e});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}}catch(t){console.log(t);throw new Error(t)}}async editExposedGuest(e,r){try{const o=this.getToken();if(o!==null){const{data:n}=await t.post(`/Edit_Exposed_Guest?Ticket=${o}`,Object.assign(Object.assign({},e),{book_nbr:r}));if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}}catch(t){console.log(t);throw new Error(t)}}async getBookingAvailability(e){try{const r=this.getToken();if(r){const{adultChildCount:o,currency:n}=e,a=i(e,["adultChildCount","currency"]);const{data:s}=await t.post(`/Get_Exposed_Booking_Availability?Ticket=${r}`,Object.assign(Object.assign({},a),{adult_nbr:o.adult,child_nbr:o.child,currency_ref:n.code,is_backend:true}));if(s.ExceptionMsg!==""){throw new Error(s.ExceptionMsg)}return s["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async getCountries(e){try{const r=this.getToken();if(r){const{data:o}=await t.post(`/Get_Exposed_Countries?Ticket=${r}`,{language:e});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}}catch(t){console.error(t);throw new Error(t)}}async fetchSetupEntries(){try{const e=this.getToken();if(e){const{data:r}=await t.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${e}`,{TBL_NAMES:["_ARRIVAL_TIME","_RATE_PRICING_MODE","_BED_PREFERENCE_TYPE"]});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}const o=r.My_Result;return{arrivalTime:o.filter((t=>t.TBL_NAME==="_ARRIVAL_TIME")),ratePricingMode:o.filter((t=>t.TBL_NAME==="_RATE_PRICING_MODE")),bedPreferenceType:o.filter((t=>t.TBL_NAME==="_BED_PREFERENCE_TYPE"))}}}catch(t){console.error(t);throw new Error(t)}}async getBlockedInfo(){try{const e=this.getToken();if(e){const{data:r}=await t.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI?Ticket=${e}`,{TBL_NAMES:["_CALENDAR_BLOCKED_TILL"]});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}}catch(t){console.error(t);throw new Error(t)}}async getUserDefaultCountry(){try{const e=this.getToken();if(e){const{data:r}=await t.post(`/Get_Country_By_IP?Ticket=${e}`,{IP:""});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r["My_Result"]}}catch(t){console.error(t);throw new Error(t)}}async blockUnit(e){try{const r=this.getToken();if(r){const{data:o}=await t.post(`/Block_Exposed_Unit?Ticket=${r}`,e);if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}console.log(o);return o["My_Params_Block_Exposed_Unit"]}}catch(t){console.error(t);throw new Error(t)}}async getUserInfo(e){try{const r=this.getToken();if(r){const{data:o}=await t.post(`/GET_EXPOSED_GUEST?Ticket=${r}`,{email:e});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}else{throw new Error("Invalid Token")}}catch(t){console.error(t);throw new Error(t)}}async getExposedBooking(r,o,n=true){try{const a=this.getToken();if(a){const{data:s}=await t.post(`/Get_Exposed_Booking?Ticket=${a}`,{booking_nbr:r,language:o,extras:n?e:null});if(s.ExceptionMsg!==""){throw new Error(s.ExceptionMsg)}return s.My_Result}else{throw new Error("Invalid Token")}}catch(t){console.error(t)}}generateDays(t,e,r){const o=new Date(t);const n=new Date(e);const a=[];while(o<n){a.push({date:o.toISOString().split("T")[0],amount:r,cost:null});o.setDate(o.getDate()+1)}return a}calculateTotalRate(t,e,r,o){if(r&&o===2){return+t}return+t/+e}async fetchExposedGuest(e,r){try{const o=this.getToken();if(o){const{data:n}=await t.post(`/Fetch_Exposed_Guests?Ticket=${o}`,{email:e,property_id:r});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async fetchExposedBookings(e,r,o,n){try{const a=this.getToken();if(a){const{data:s}=await t.post(`/Fetch_Exposed_Bookings?Ticket=${a}`,{booking_nbr:e,property_id:r,from_date:o,to_date:n});if(s.ExceptionMsg!==""){throw new Error(s.ExceptionMsg)}return s["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async getPCICardInfoURL(e){try{const r=this.getToken();if(r){const{data:o}=await t.post(`/Get_PCI_Card_Info_URL?Ticket=${r}`,{BOOK_NBR:e});if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o["My_Result"]}else{throw new Error("Token doesn't exist")}}catch(t){console.error(t);throw new Error(t)}}async doReservation(r){const o=this.getToken();if(!o){throw new Error("Missing token")}const{data:n}=await t.post(`/DoReservation?Ticket=${o}`,Object.assign(Object.assign({},r),{extras:r.extras?r.extras:e}));if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}console.log(n["My_Result"]);return n["My_Result"]}async bookUser({bookedByInfoData:t,check_in:e,currency:r,extras:o=null,fromDate:a,guestData:s,pickup_info:i,propertyid:c,rooms:l,source:_,toDate:u,totalNights:d,arrivalTime:w,bookingNumber:h,defaultGuest:E,identifier:f,pr_id:y}){try{const p=this.getToken();if(p){const p=n(a);const b=n(u);let k={email:t.email===""?null:t.email||null,first_name:t.firstName,last_name:t.lastName,country_id:t.countryId===""?null:t.countryId,city:null,mobile:t.contactNumber===null?"":t.contactNumber,phone_prefix:null,address:"",dob:null,subscribe_to_news_letter:t.emailGuest||false,cci:t.cardNumber?{nbr:t.cardNumber,holder_name:t.cardHolderName,expiry_month:t.expiryMonth,expiry_year:t.expiryYear}:null};if(E){k=Object.assign(Object.assign({},E),{email:E.email===""?null:E.email})}if(t.id){k=Object.assign(Object.assign({},k),{id:t.id})}const m={assign_units:true,check_in:e,is_pms:true,is_direct:true,is_in_loyalty_mode:false,promo_key:null,extras:o,booking:{booking_nbr:h||"",from_date:p,to_date:b,remark:t.message||null,property:{id:c},source:_,currency:r,arrival:{code:w?w:t.selectedArrivalTime},guest:k,rooms:[...s.map((t=>({identifier:f||null,roomtype:{id:t.roomCategoryId,name:t.roomCategoryName,physicalrooms:null,rateplans:null,availabilities:null,inventory:t.inventory,rate:t.rate/d},rateplan:{id:t.ratePlanId,name:t.ratePlanName,rate_restrictions:null,variations:null,cancelation:t.cancelation,guarantee:t.guarantee},unit:typeof y==="undefined"&&t.roomId===""?null:{id:+y||+t.roomId},occupancy:{adult_nbr:t.adultCount,children_nbr:t.childrenCount,infant_nbr:null},bed_preference:t.preference,from_date:p,to_date:b,notes:null,days:this.generateDays(p,b,this.calculateTotalRate(t.rate,d,t.isRateModified,t.rateType)),guest:{email:null,first_name:t.guestName,last_name:null,country_id:null,city:null,mobile:null,address:null,dob:null,subscribe_to_news_letter:null}}))),...l]},pickup_info:i};console.log("book user payload",m);const T=await this.doReservation(m);return T}else{throw new Error("Invalid token")}}catch(t){console.error(t);throw new Error(t)}}}export{c as B};
//# sourceMappingURL=p-e0e42f89.js.map