{"version":3,"names":["irDatePickerCss","IrDatePickerStyle0","IrDatePicker","days","handleMinDateChange","$","this","dateRangeInput","data","remove","initializeDateRangePicker","datePropChanged","updateDateRangePickerDates","openDatePicker","openDatePickerTimeout","setTimeout","click","picker","console","error","singleDatePicker","newDate","date","moment","setStartDate","setEndDate","newStartDate","fromDate","newEndDate","toDate","clone","add","componentWillLoad","document","getElementById","style","createElement","id","textContent","head","appendChild","componentDidLoad","element","querySelector","daterangepicker","opens","startDate","endDate","minDate","Date","format","maxDate","undefined","maxSpan","autoApply","locale","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","start","end","dateChanged","emit","disconnectedCallback","clearTimeout","render","h","Host","key","class","type","disabled"],"sources":["src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx"],"sourcesContent":["input {\r\n  all: unset;\r\n  box-sizing: border-box !important;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\ninput:disabled {\r\n  text-align: start;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n:host {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n.icon {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n","import { Component, h, Element, Prop, Event, EventEmitter, Host, Watch, Method } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-picker',\r\n  styleUrl: 'ir-date-picker.css',\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() fromDate: Date;\r\n  @Prop() toDate: Date;\r\n  @Prop() date: Date;\r\n\r\n  @Prop() opens: 'left' | 'right' | 'center';\r\n  @Prop() autoApply: boolean;\r\n  @Prop() firstDay: number = 1;\r\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\n  @Prop() format: string = 'MMM DD, YYYY';\r\n  @Prop() separator: string = ' - ';\r\n  @Prop() applyLabel: string = 'Apply';\r\n  @Prop() cancelLabel: string = 'Cancel';\r\n  @Prop() fromLabel: string = 'Form';\r\n  @Prop() toLabel: string = 'To';\r\n  @Prop() customRangeLabel: string = 'Custom';\r\n  @Prop() weekLabel: string = 'W';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() singleDatePicker = false;\r\n  @Prop() minDate: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n\r\n  private openDatePickerTimeout: NodeJS.Timeout;\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n\r\n  @Watch('minDate')\r\n  handleMinDateChange() {\r\n    $(this.dateRangeInput).data('daterangepicker').remove();\r\n    this.initializeDateRangePicker();\r\n  }\r\n  @Watch('date')\r\n  datePropChanged() {\r\n    this.updateDateRangePickerDates();\r\n  }\r\n  @Method()\r\n  async openDatePicker() {\r\n    this.openDatePickerTimeout = setTimeout(() => {\r\n      this.dateRangeInput.click();\r\n    }, 20);\r\n  }\r\n  updateDateRangePickerDates() {\r\n    const picker = $(this.dateRangeInput).data('daterangepicker');\r\n    if (!picker) {\r\n      console.error('Date range picker not initialized.');\r\n      return;\r\n    }\r\n\r\n    // Adjust how dates are set based on whether it's a single date picker or range picker.\r\n    if (this.singleDatePicker) {\r\n      const newDate = this.date ? moment(this.date) : moment();\r\n      picker.setStartDate(newDate);\r\n      picker.setEndDate(newDate); // For single date picker, start and end date might be the same.\r\n    } else {\r\n      const newStartDate = this.fromDate ? moment(this.fromDate) : moment();\r\n      const newEndDate = this.toDate ? moment(this.toDate) : newStartDate.clone().add(1, 'days');\r\n      picker.setStartDate(newStartDate);\r\n      picker.setEndDate(newEndDate);\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    if (!document.getElementById('ir-daterangepicker-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'ir-daterangepicker-style';\r\n      style.textContent = `\r\n        .daterangepicker {\r\n          margin-top: 14px;\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\r\n    this.initializeDateRangePicker();\r\n    this.updateDateRangePickerDates();\r\n  }\r\n\r\n  initializeDateRangePicker() {\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        singleDatePicker: this.singleDatePicker,\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\r\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      },\r\n    );\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.openDatePickerTimeout) {\r\n      clearTimeout(this.openDatePickerTimeout);\r\n    }\r\n    $(this.dateRangeInput).data('daterangepicker').remove();\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input class=\"date-range-input\" type=\"text\" disabled={this.disabled} />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oGAAA,MAAMA,EAAkB,0VACxB,MAAAC,EAAeD,E,MCOFE,EAAY,M,gMAQI,E,gBACI,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,Y,gBAC/G,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,YAC3C,e,eACG,M,gBACC,Q,iBACC,S,eACF,O,aACF,K,sBACS,S,eACP,I,cACA,M,sBACD,M,2DAGiB,CAC1CC,KAAM,I,CAYR,mBAAAC,GACEC,EAAEC,KAAKC,gBAAgBC,KAAK,mBAAmBC,SAC/CH,KAAKI,2B,CAGP,eAAAC,GACEL,KAAKM,4B,CAGP,oBAAMC,GACJP,KAAKQ,sBAAwBC,YAAW,KACtCT,KAAKC,eAAeS,OAAO,GAC1B,G,CAEL,0BAAAJ,GACE,MAAMK,EAASZ,EAAEC,KAAKC,gBAAgBC,KAAK,mBAC3C,IAAKS,EAAQ,CACXC,QAAQC,MAAM,sCACd,M,CAIF,GAAIb,KAAKc,iBAAkB,CACzB,MAAMC,EAAUf,KAAKgB,KAAOC,EAAOjB,KAAKgB,MAAQC,IAChDN,EAAOO,aAAaH,GACpBJ,EAAOQ,WAAWJ,E,KACb,CACL,MAAMK,EAAepB,KAAKqB,SAAWJ,EAAOjB,KAAKqB,UAAYJ,IAC7D,MAAMK,EAAatB,KAAKuB,OAASN,EAAOjB,KAAKuB,QAAUH,EAAaI,QAAQC,IAAI,EAAG,QACnFd,EAAOO,aAAaE,GACpBT,EAAOQ,WAAWG,E,EAGtB,iBAAAI,GACE,IAAKC,SAASC,eAAe,4BAA6B,CACxD,MAAMC,EAAQF,SAASG,cAAc,SACrCD,EAAME,GAAK,2BACXF,EAAMG,YAAc,+EAKpBL,SAASM,KAAKC,YAAYL,E,EAG9B,gBAAAM,GACEnC,KAAKC,eAAiBD,KAAKoC,QAAQC,cAAc,qBACjDrC,KAAKI,4BACLJ,KAAKM,4B,CAGP,yBAAAF,GACEL,EAAEC,KAAKC,gBAAgBqC,gBACrB,CACExB,iBAAkBd,KAAKc,iBACvByB,MAAOvC,KAAKuC,MACZC,UAAWvB,EAAOjB,KAAKqB,UACvBoB,QAASxB,EAAOjB,KAAKuB,QACrBmB,QAASzB,EAAOjB,KAAK0C,SAAWzB,EAAO,IAAI0B,MAAQC,OAAO,eAC1DC,QAAS7C,KAAK6C,QAAU5B,EAAOjB,KAAK6C,SAAWC,UAC/CC,QAAS/C,KAAK+C,QACdC,UAAWhD,KAAKgD,UAChBC,OAAQ,CACNL,OAAQ5C,KAAK4C,OACbM,UAAWlD,KAAKkD,UAChBC,WAAYnD,KAAKmD,WACjBC,YAAapD,KAAKoD,YAClBC,UAAWrD,KAAKqD,UAChBC,QAAStD,KAAKsD,QACdC,iBAAkBvD,KAAKuD,iBACvBC,UAAWxD,KAAKwD,UAChBC,WAAYzD,KAAKyD,WACjBC,WAAY1D,KAAK0D,WACjBC,SAAU3D,KAAK2D,YAGnB,CAACC,EAAOC,KACN7D,KAAK8D,YAAYC,KAAK,CAAEH,QAAOC,OAAM,G,CAI3C,oBAAAG,GACE,GAAIhE,KAAKQ,sBAAuB,CAC9ByD,aAAajE,KAAKQ,sB,CAEpBT,EAAEC,KAAKC,gBAAgBC,KAAK,mBAAmBC,Q,CAEjD,MAAA+D,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,SAAAE,IAAA,2CAAOC,MAAM,mBAAmBC,KAAK,OAAOC,SAAUxE,KAAKwE,W","ignoreList":[]}