{"version":3,"names":["initialValue","default_properties","undefined","hk_criteria","hk_tasks","pending_housekeepers","state","housekeeping_store","createStore","updateHKStore","key","value","getDefaultProperties","HouseKeepingService","getExposedHKSetup","property_id","data","axios","post","getExposedHKStatusCriteria","setExposedInspectionMode","mode","manageExposedAssignedUnitToHKM","assignments","links","editExposedHKM","params","is_to_remove","Object","assign","getHKPendingActions","map","d","original","selected","setExposedUnitHKStatus","getHkTasks","ExceptionMsg","Error","My_Result","executeHKAction","generateUserName","name"],"sources":["src/stores/housekeeping.store.ts","src/services/housekeeping.service.ts"],"sourcesContent":["import { IExposedHouseKeepingSetup, IHKTasks, IPendingActions } from '@/models/housekeeping';\r\nimport { createStore } from '@stencil/store';\r\n\r\nexport interface IHouseKeepingStore {\r\n  hk_criteria: IExposedHouseKeepingSetup;\r\n  default_properties: {\r\n    token: string;\r\n    property_id: number;\r\n    language: string;\r\n  };\r\n  hk_tasks: IHKTasks;\r\n  pending_housekeepers: { original: IPendingActions; selected?: boolean }[];\r\n}\r\n\r\nconst initialValue: IHouseKeepingStore = {\r\n  default_properties: undefined,\r\n  hk_criteria: undefined,\r\n  hk_tasks: undefined,\r\n  pending_housekeepers: [],\r\n};\r\n\r\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\r\nexport function updateHKStore(key: keyof IHouseKeepingStore, value: any) {\r\n  housekeeping_store[key] = value;\r\n}\r\nexport function getDefaultProperties() {\r\n  return housekeeping_store.default_properties;\r\n}\r\nexport default housekeeping_store;\r\n","import { RoomHkStatus } from '@/models/booking.dto';\r\nimport { IExposedHouseKeepingSetup, IInspectionMode, IPropertyHousekeepingAssignment, THKUser, TPendingHkSetupParams } from '@/models/housekeeping';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport axios from 'axios';\r\n\r\nexport class HouseKeepingService {\r\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup`, {\r\n      property_id,\r\n    });\r\n    updateHKStore('hk_criteria', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n  public async getExposedHKStatusCriteria(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Status_Criteria`, {\r\n      property_id,\r\n    });\r\n    updateHKStore('hk_tasks', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\r\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode`, {\r\n      property_id,\r\n      mode,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async manageExposedAssignedUnitToHKM(property_id: number, assignments: IPropertyHousekeepingAssignment[]) {\r\n    const { data } = await axios.post(`/Manage_Exposed_Assigned_Unit_To_HKM`, {\r\n      property_id,\r\n      links: assignments,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async editExposedHKM(params: THKUser, is_to_remove: boolean = false) {\r\n    const { data } = await axios.post(`/Edit_Exposed_HKM`, { ...params, is_to_remove });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHKPendingActions(params: TPendingHkSetupParams) {\r\n    const { data } = await axios.post(`/Get_HK_Pending_Actions`, { ...params });\r\n    updateHKStore(\r\n      'pending_housekeepers',\r\n      [...data['My_Result']].map(d => ({ original: d, selected: false })),\r\n    );\r\n    return data['My_Result'];\r\n  }\r\n  public async setExposedUnitHKStatus(params: {\r\n    property_id: number;\r\n    status: {\r\n      code: RoomHkStatus;\r\n    };\r\n    unit: {\r\n      id: number;\r\n    };\r\n  }) {\r\n    const { data } = await axios.post(`/Set_Exposed_Unit_HK_Status`, { ...params });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHkTasks(params: { property_id: number; from_date: string; to_date: string }) {\r\n    const { data } = await axios.post('/Get_HK_Tasks', params);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data.My_Result;\r\n  }\r\n  public async executeHKAction(params: {\r\n    actions: {\r\n      unit_id: number;\r\n      hkm_id: number;\r\n      description: string;\r\n    }[];\r\n  }) {\r\n    await axios.post(`/Execute_HK_Action`, { ...params });\r\n  }\r\n  public async generateUserName(name: string) {\r\n    const { data } = await axios.post(`/Generate_UserName`, { name });\r\n    return data.My_Result;\r\n  }\r\n}\r\n"],"mappings":"wEAcA,MAAMA,EAAmC,CACvCC,mBAAoBC,UACpBC,YAAaD,UACbE,SAAUF,UACVG,qBAAsB,I,MAGTC,MAAOC,GAAuBC,EAAgCR,G,SAC7DS,EAAcC,EAA+BC,GAC3DJ,EAAmBG,GAAOC,CAC5B,C,SACgBC,IACd,OAAOL,EAAmBN,kBAC5B,C,MCtBaY,EACJ,uBAAMC,CAAkBC,GAC7B,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,wBAAyB,CACzDH,gBAEFN,EAAc,cAAeO,EAAK,cAClC,OAAOA,EAAK,Y,CAEP,gCAAMG,CAA2BJ,GACtC,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,kCAAmC,CACnEH,gBAEFN,EAAc,WAAYO,EAAK,cAC/B,OAAOA,EAAK,Y,CAGP,8BAAMI,CAAyBL,EAAqBM,GACzD,MAAML,KAAEA,SAAeC,EAAMC,KAAK,+BAAgC,CAChEH,cACAM,SAEF,OAAOL,EAAK,Y,CAEP,oCAAMM,CAA+BP,EAAqBQ,GAC/D,MAAMP,KAAEA,SAAeC,EAAMC,KAAK,uCAAwC,CACxEH,cACAS,MAAOD,IAET,OAAOP,EAAK,Y,CAEP,oBAAMS,CAAeC,EAAiBC,EAAwB,OACnE,MAAMX,KAAEA,SAAeC,EAAMC,KAAK,oBAAmBU,OAAAC,OAAAD,OAAAC,OAAA,GAAOH,GAAM,CAAEC,kBACpE,OAAOX,EAAK,Y,CAEP,yBAAMc,CAAoBJ,GAC/B,MAAMV,KAAEA,SAAeC,EAAMC,KAAK,0BAAyBU,OAAAC,OAAA,GAAOH,IAClEjB,EACE,uBACA,IAAIO,EAAK,cAAce,KAAIC,IAAC,CAAOC,SAAUD,EAAGE,SAAU,WAE5D,OAAOlB,EAAK,Y,CAEP,4BAAMmB,CAAuBT,GASlC,MAAMV,KAAEA,SAAeC,EAAMC,KAAK,8BAA6BU,OAAAC,OAAA,GAAOH,IACtE,OAAOV,EAAK,Y,CAEP,gBAAMoB,CAAWV,GACtB,MAAMV,KAAEA,SAAeC,EAAMC,KAAK,gBAAiBQ,GACnD,GAAIV,EAAKqB,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMtB,EAAKqB,a,CAEvB,OAAOrB,EAAKuB,S,CAEP,qBAAMC,CAAgBd,SAOrBT,EAAMC,KAAK,qBAAoBU,OAAAC,OAAA,GAAOH,G,CAEvC,sBAAMe,CAAiBC,GAC5B,MAAM1B,KAAEA,SAAeC,EAAMC,KAAK,qBAAsB,CAAEwB,SAC1D,OAAO1B,EAAKuB,S","ignoreList":[]}