import{a as t}from"./p-bf44a732.js";import{B as o}from"./p-61c033cf.js";import{e as r,y as a}from"./p-ccfe88aa.js";class e{constructor(){this.bookingService=new o}async reallocateEvent(o,a,e,s){try{console.log(o,a,e,s);const{data:c}=await t.post(`/ReAllocate_Exposed_Room`,{pool:o,destination_pr_id:a,from_date:e,to_date:s,extras:r});if(c.ExceptionMsg!==""){throw new Error(c.ExceptionMsg)}console.log(c);return c}catch(t){console.error(t);throw new Error(t)}}async deleteEvent(o){try{const{data:r}=await t.post(`/UnBlock_Exposed_Unit`,{POOL:o});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}catch(t){console.log(t);throw new Error(t)}}async updateBlockedEvent(t){try{const o=a(+t.RELEASE_AFTER_HOURS);await this.deleteEvent(t.POOL);const r=await this.bookingService.blockUnit(Object.assign({from_date:this.formatDate(t.FROM_DATE),to_date:this.formatDate(t.TO_DATE),pr_id:t.PR_ID,STAY_STATUS_CODE:t.OUT_OF_SERVICE?"004":t.RELEASE_AFTER_HOURS===0?"002":"003",DESCRIPTION:t.RELEASE_AFTER_HOURS||"",NOTES:t.OPTIONAL_REASON||""},o));return r}catch(t){console.error(t);throw new Error(t)}}formatDate(t){return t.split("/").join("-")}}export{e as E};
//# sourceMappingURL=p-3d4b3200.js.map