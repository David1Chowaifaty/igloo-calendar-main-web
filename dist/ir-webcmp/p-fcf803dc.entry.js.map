{"version":3,"names":["irRangePickerCss","IrRangePickerStyle0","IrRangePicker","constructor","hostRef","this","maxDate","moment","toDate","withOverlay","allowNullDates","minSelectableDate","subtract","handleDateChanged","e","stopImmediatePropagation","stopPropagation","console","log","detail","selectedDate","start","target","id","updatedToDate","dateRangeChanged","emit","fromDate","isBefore","toDatePicker","openDatePicker","handleDatePickerFocus","clearTimeout","focusTimeout","date_container","classList","add","handleDatePickerBlur","remove","setTimeout","disconnectedCallback","renderDatePicker","date","minDate","refCallback","additionalProps","h","Object","assign","class","customPicker","ref","el","emitEmptyDate","slot","_a","format","render","Host","key","onClick","fromDatePicker","xmlns","viewBox","style","height","width","fill","d","name","forceDestroyOnUpdate"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.css?tag=ir-range-picker&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.tsx"],"sourcesContent":[":host {\n  display: block;\n  --ir-range-gap: 0.5rem;\n}\n\n.range-picker__container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: var(--ir-range-gap);\n  box-sizing: border-box;\n}\n.range-picker__container.focused {\n  border-bottom-color: rgb(198, 206, 231);\n  border-left-color: rgb(198, 206, 231);\n  border-right-color: rgb(198, 206, 231);\n  border-top-color: rgb(198, 206, 231);\n  color: #4e5154;\n  background-color: #fff;\n  border-color: var(--blue, #1e9ff2);\n  outline: 0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n.range-picker__icon--hidden,\n.range-picker__date-picker--hidden {\n  opacity: 0;\n}\n\n.range-picker__overlay {\n  position: absolute;\n  inset: 0;\n  background-color: white;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  gap: var(--ir-range-gap);\n}\n\n.range-picker__overlay--active {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  pointer-events: auto;\n  border-radius: inherit;\n  padding-inline: 0.5rem;\n}\n.range-picker__date-picker:hover .range-picker__date-picker-button,\n.range-picker__date-picker.focused .range-picker__date-picker-button {\n  color: var(--blue, #1e9ff2);\n}\n.range-picker__date-picker-button {\n  background: inherit;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  font-size: 0.975rem;\n  line-height: 1.45;\n  height: 2rem;\n  color: #3b4781;\n  white-space: nowrap;\n  cursor: pointer;\n  padding-inline: 0.5rem;\n}\n/* Optional: additional styles for the icons if needed */\n.range-picker__calendar-icon,\n.range-picker__arrow-icon {\n  height: 14px;\n  width: 14px;\n}\n","import { Component, Host, Listen, Prop, Event, EventEmitter, h } from '@stencil/core';\nimport moment, { Moment } from 'moment';\n\n@Component({\n  tag: 'ir-range-picker',\n  styleUrl: 'ir-range-picker.css',\n  scoped: true,\n})\nexport class IrRangePicker {\n  /**\n   * The earliest date that can be selected.\n   */\n  @Prop() minDate?: string | Date;\n\n  /**\n   * The latest date that can be selected.\n   */\n  @Prop() maxDate?: string | Date = moment().toDate();\n  /**\n   * The start date of the range.\n   */\n  @Prop() fromDate: Moment;\n  /**\n   * The end date of the range.\n   */\n  @Prop() toDate: Moment;\n\n  /**\n   * Whether to show the overlay before the date is selected.\n   */\n  @Prop() withOverlay: boolean = true;\n  /**\n   * Whether to all the emitted dates to be null.\n   */\n  @Prop() allowNullDates: boolean = true;\n\n  @Event() dateRangeChanged: EventEmitter<{ fromDate: Moment; toDate: Moment }>;\n\n  private minSelectableDate = moment().subtract(90, 'days').toDate();\n  private fromDatePicker: HTMLIrDatePickerElement;\n  private toDatePicker: HTMLIrDatePickerElement;\n  private date_container: HTMLDivElement;\n  private focusTimeout: NodeJS.Timeout;\n\n  @Listen('dateChanged')\n  async handleDateChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    console.log(e.detail);\n    const selectedDate = e.detail.start ? moment(e.detail.start) : null;\n    if ((e.target as HTMLElement).id === 'fromDate') {\n      let updatedToDate = this.toDate;\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: null, toDate: null });\n        return;\n      }\n      if (!updatedToDate || updatedToDate.isBefore(selectedDate, 'day')) {\n        updatedToDate = selectedDate;\n      }\n\n      this.dateRangeChanged.emit({ fromDate: selectedDate, toDate: updatedToDate });\n      await this.toDatePicker.openDatePicker();\n    } else {\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: this.fromDate });\n        return;\n      }\n      this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: selectedDate });\n    }\n  }\n  @Listen('datePickerFocus')\n  handleDatePickerFocus(e: CustomEvent) {\n    e.stopPropagation();\n    clearTimeout(this.focusTimeout);\n    this.date_container.classList.add('focused');\n    (e.target as HTMLIrRangePickerElement).classList.add('focused');\n  }\n  @Listen('datePickerBlur')\n  handleDatePickerBlur(e: CustomEvent) {\n    e.stopPropagation();\n    (e.target as HTMLIrRangePickerElement).classList.remove('focused');\n    this.focusTimeout = setTimeout(() => {\n      this.date_container.classList.remove('focused');\n    }, 10);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.focusTimeout);\n  }\n  private renderDatePicker(id: string, date: Moment, minDate: string | Date, refCallback: (el: HTMLIrDatePickerElement) => void, additionalProps: any = {}) {\n    return (\n      <ir-date-picker\n        class={{\n          'range-picker__date-picker': true,\n          'range-picker__date-picker--hidden': this.withOverlay && !this.fromDate,\n        }}\n        customPicker\n        ref={el => refCallback(el)}\n        minDate={minDate}\n        maxDate={this.maxDate}\n        date={date?.toDate()}\n        id={id}\n        emitEmptyDate={this.allowNullDates}\n        {...additionalProps}\n      >\n        <p class=\"range-picker__date-picker-button\" slot=\"trigger\">\n          {date?.format('YYYY-MM-DD') ?? '2025-03-02'}\n        </p>\n      </ir-date-picker>\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"form-control range-picker__container\" ref={el => (this.date_container = el)}>\n          {this.withOverlay && (\n            <div\n              class={{\n                'range-picker__overlay': true,\n                'range-picker__overlay--active': !this.fromDate,\n              }}\n              onClick={() => this.fromDatePicker.openDatePicker()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" style={{ height: '14px', width: '14px' }}>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n                ></path>\n              </svg>\n              <p class=\"m-0\">\n                <slot name=\"message\">Cleaned on</slot>\n              </p>\n            </div>\n          )}\n          <svg\n            class={{\n              'range-picker__calendar-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 448 512\"\n            style={{ height: '14px', width: '14px' }}\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n            ></path>\n          </svg>\n          {this.renderDatePicker('fromDate', this.fromDate, this.minDate, el => (this.fromDatePicker = el))}\n          <svg\n            class={{\n              'range-picker__arrow-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"14\"\n            width=\"14\"\n            viewBox=\"0 0 512 512\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n            />\n          </svg>\n          {this.renderDatePicker('toDate', this.toDate, this.fromDate?.toDate() || this.minSelectableDate, el => (this.toDatePicker = el), {\n            forceDestroyOnUpdate: true,\n          })}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}