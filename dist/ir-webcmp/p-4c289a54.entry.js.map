{"version":3,"names":["irRangePickerCss","IrRangePickerStyle0","IrRangePicker","constructor","hostRef","this","withOverlay","allowNullDates","minSelectableDate","moment","subtract","toDate","handleDateChanged","e","stopImmediatePropagation","stopPropagation","selectedDate","detail","start","lastFocusedPicker","target","id","updatedToDate","dateRangeChanged","emit","fromDate","wasFocused","isBefore","toDatePicker","openDatePicker","handleDatePickerFocus","clearTimeout","focusTimeout","date_container","classList","add","handleDatePickerBlur","remove","setTimeout","disconnectedCallback","renderDatePicker","date","minDate","refCallback","additionalProps","h","Object","assign","class","customPicker","ref","el","maxDate","onDatePickerFocus","emitEmptyDate","slot","_a","format","render","Host","key","onClick","fromDatePicker","xmlns","viewBox","style","height","width","fill","d","name","forceDestroyOnUpdate"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.css?tag=ir-range-picker&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.tsx"],"sourcesContent":[":host {\n  display: block;\n  --ir-range-gap: 0.5rem;\n}\n\n.range-picker__container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: var(--ir-range-gap);\n  box-sizing: border-box;\n}\n.range-picker__container.focused {\n  border-bottom-color: rgb(198, 206, 231);\n  border-left-color: rgb(198, 206, 231);\n  border-right-color: rgb(198, 206, 231);\n  border-top-color: rgb(198, 206, 231);\n  color: #4e5154;\n  background-color: #fff;\n  border-color: var(--blue, #1e9ff2);\n  outline: 0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n.range-picker__icon--hidden,\n.range-picker__date-picker--hidden {\n  opacity: 0;\n}\n\n.range-picker__overlay {\n  position: absolute;\n  inset: 0;\n  background-color: white;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  gap: var(--ir-range-gap);\n}\n\n.range-picker__overlay--active {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  pointer-events: auto;\n  border-radius: inherit;\n  padding-inline: 0.5rem;\n}\n.range-picker__date-picker:hover .range-picker__date-picker-button,\n.range-picker__date-picker.focused .range-picker__date-picker-button {\n  color: var(--blue, #1e9ff2);\n}\n.range-picker__date-picker-button {\n  background: inherit;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  font-size: 0.975rem;\n  line-height: 1.45;\n  height: 2rem;\n  color: #3b4781;\n  white-space: nowrap;\n  cursor: pointer;\n  padding-inline: 0.5rem;\n}\n/* Optional: additional styles for the icons if needed */\n.range-picker__calendar-icon,\n.range-picker__arrow-icon {\n  height: 14px;\n  width: 14px;\n}\n","import { Component, Host, Listen, Prop, Event, EventEmitter, h, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\n\n@Component({\n  tag: 'ir-range-picker',\n  styleUrl: 'ir-range-picker.css',\n  scoped: true,\n})\nexport class IrRangePicker {\n  /**\n   * The earliest date that can be selected.\n   */\n  @Prop() minDate?: string | Date;\n\n  /**\n   * The latest date that can be selected.\n   */\n  @Prop() maxDate?: string | Date;\n  /**\n   * The start date of the range.\n   */\n  @Prop() fromDate: Moment;\n  /**\n   * The end date of the range.\n   */\n  @Prop() toDate: Moment;\n\n  /**\n   * Whether to show the overlay before the date is selected.\n   */\n  @Prop() withOverlay: boolean = true;\n  /**\n   * Whether to all the emitted dates to be null.\n   */\n  @Prop() allowNullDates: boolean = true;\n\n  @State() lastFocusedPicker: string;\n\n  @Event() dateRangeChanged: EventEmitter<{ fromDate: Moment; toDate: Moment; wasFocused?: boolean }>;\n\n  private minSelectableDate = moment().subtract(90, 'days').toDate();\n  private fromDatePicker: HTMLIrDatePickerElement;\n  private toDatePicker: HTMLIrDatePickerElement;\n  private date_container: HTMLDivElement;\n  private focusTimeout: NodeJS.Timeout;\n\n  @Listen('dateChanged')\n  async handleDateChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const selectedDate = e.detail.start ? moment(e.detail.start) : null;\n    if (!this.lastFocusedPicker) {\n      return;\n    }\n    if ((e.target as HTMLElement).id === 'fromDate') {\n      let updatedToDate = this.toDate;\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: null, toDate: null, wasFocused: !!this.lastFocusedPicker });\n        return;\n      }\n      if (!updatedToDate || updatedToDate.isBefore(selectedDate, 'day')) {\n        updatedToDate = selectedDate;\n      }\n\n      this.dateRangeChanged.emit({ fromDate: selectedDate, toDate: updatedToDate, wasFocused: !!this.lastFocusedPicker });\n      await this.toDatePicker.openDatePicker();\n    } else {\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: this.fromDate, wasFocused: !!this.lastFocusedPicker });\n        return;\n      }\n      this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: selectedDate, wasFocused: !!this.lastFocusedPicker });\n    }\n    this.lastFocusedPicker = null;\n  }\n  @Listen('datePickerFocus')\n  handleDatePickerFocus(e: CustomEvent) {\n    e.stopPropagation();\n    clearTimeout(this.focusTimeout);\n    this.date_container.classList.add('focused');\n    (e.target as HTMLIrRangePickerElement).classList.add('focused');\n  }\n  @Listen('datePickerBlur')\n  handleDatePickerBlur(e: CustomEvent) {\n    e.stopPropagation();\n    (e.target as HTMLIrRangePickerElement).classList.remove('focused');\n    this.focusTimeout = setTimeout(() => {\n      this.date_container.classList.remove('focused');\n    }, 10);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.focusTimeout);\n  }\n  private renderDatePicker(id: string, date: Moment, minDate: string | Date, refCallback: (el: HTMLIrDatePickerElement) => void, additionalProps: any = {}) {\n    return (\n      <ir-date-picker\n        class={{\n          'range-picker__date-picker': true,\n          'range-picker__date-picker--hidden': this.withOverlay && !this.fromDate,\n        }}\n        customPicker\n        ref={el => refCallback(el)}\n        minDate={minDate}\n        maxDate={this.maxDate}\n        date={date?.toDate()}\n        id={id}\n        onDatePickerFocus={() => {\n          this.lastFocusedPicker = id;\n        }}\n        emitEmptyDate={this.allowNullDates}\n        {...additionalProps}\n      >\n        <p class=\"range-picker__date-picker-button\" slot=\"trigger\">\n          {date?.format('YYYY-MM-DD') ?? '2025-03-02'}\n        </p>\n      </ir-date-picker>\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"form-control range-picker__container\" ref={el => (this.date_container = el)}>\n          {this.withOverlay && (\n            <div\n              class={{\n                'range-picker__overlay': true,\n                'range-picker__overlay--active': !this.fromDate,\n              }}\n              onClick={() => this.fromDatePicker.openDatePicker()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" style={{ height: '14px', width: '14px' }}>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n                ></path>\n              </svg>\n              <p class=\"m-0\">\n                <slot name=\"message\">Cleaned on</slot>\n              </p>\n            </div>\n          )}\n          <svg\n            class={{\n              'range-picker__calendar-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 448 512\"\n            style={{ height: '14px', width: '14px' }}\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n            ></path>\n          </svg>\n          {this.renderDatePicker('fromDate', this.fromDate, this.minDate, el => (this.fromDatePicker = el))}\n          <svg\n            class={{\n              'range-picker__arrow-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"14\"\n            width=\"14\"\n            viewBox=\"0 0 512 512\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n            />\n          </svg>\n          {this.renderDatePicker('toDate', this.toDate, this.fromDate?.toDate() || this.minSelectableDate, el => (this.toDatePicker = el), {\n            forceDestroyOnUpdate: true,\n          })}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}