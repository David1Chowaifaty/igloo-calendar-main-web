{"version":3,"names":["irPaymentOptionCss","IrPaymentOptionStyle0","IrPaymentOption","constructor","hostRef","this","language","defaultStyles","hideLogs","paymentOptions","isLoading","selectedOption","paymentOptionService","PaymentOptionService","roomService","RoomService","token","Token","componentWillLoad","ticket","setToken","init","ticketChanged","newValue","oldValue","initServices","fetchData","handleCloseModal","e","stopPropagation","stopImmediatePropagation","closeModal","detail","newOption","modifyPaymentList","is_payment_gateway","propertyOptionsById","set","id","propertyOptionsByCode","code","has","_a","payment_option_store","_b","Object","assign","is_active","mode","propertyid","p","Error","propertyId","console","log","propertyData","getExposedProperty","aname","My_Result","propertyOptions","languageTexts","Promise","all","GetExposedPaymentMethods","GetPropertyPaymentMethods","fetchLanguage","locales","entries","direction","Map","map","o","option","get","error","paymentOption","prevPaymentOptions","index","findIndex","handleCheckChange","po","property_id","changePaymentMethod","filter","every","toast","emit","type","description","title","position","showEditButton","data","some","d","value","HandlePaymentMethod","length","render","h","Host","class","name","Lcz_PaymentOptions","scope","Lcz_PaymentMethod","_c","Lcz_Status","_d","Lcz_Action","_e","key","checked","onCheckChange","Lcz_Edit","variant","icon_name","onClickHandler","onIrSidebarToggle","side","showCloseButton","open","slot"],"sources":["src/components/ir-payment-option/ir-payment-option.css?tag=ir-payment-option&encapsulation=scoped","src/components/ir-payment-option/ir-payment-option.tsx"],"sourcesContent":["/* @import url('../../assets/reset.css'); */\n:host {\n  display: block;\n}\n.payment-table-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.po-view {\n  padding: 0;\n  margin: 0;\n}\n.payment-img {\n  height: 18px;\n  display: none;\n}\n.loading-container {\n  background: white;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 40rem;\n}\n.payment-option-loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loading-container.default {\n  height: 100vh;\n  width: 100%;\n}\n@media (min-width: 768px) {\n  .po-view {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 0.5rem;\n  }\n  .dataTable {\n    width: 70%;\n  }\n  .payment-img {\n    display: block;\n  }\n  .actions-header {\n    width: max-content !important;\n  }\n  .payment-table-container {\n    justify-content: flex-start;\n  }\n}\n@media (min-width: 1280px) {\n  .dataTable {\n    width: 50%;\n  }\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { ILocalizable, OptionField, PaymentOption } from '@/models/payment-options';\nimport { PaymentOptionService } from '@/services/payment_option.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport payment_option_store from '@/stores/payment-option.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport Token from '@/models/Token';\n\n@Component({\n  tag: 'ir-payment-option',\n  styleUrl: 'ir-payment-option.css',\n  scoped: true,\n})\nexport class IrPaymentOption {\n  @Prop() propertyid: string;\n  @Prop() ticket: string;\n  @Prop() p: string;\n  @Prop() language: string = 'en';\n  @Prop() defaultStyles: boolean = true;\n  @Prop() hideLogs: boolean = true;\n\n  @State() paymentOptions: PaymentOption[] = [];\n  @State() isLoading: boolean = false;\n  @State() selectedOption: PaymentOption | null = null;\n\n  @Event() toast: EventEmitter<IToast>;\n\n  private paymentOptionService = new PaymentOptionService();\n  private roomService = new RoomService();\n  private token = new Token();\n\n  private propertyOptionsById: Map<string | number, PaymentOption>;\n  private propertyOptionsByCode: Map<string | number, PaymentOption>;\n\n  componentWillLoad() {\n    if (!!this.ticket) {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  init() {\n    this.initServices();\n    this.fetchData();\n  }\n  @Listen('closeModal')\n  handleCloseModal(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.closeModal(e.detail);\n  }\n  private closeModal(newOption: PaymentOption | null) {\n    if (newOption) {\n      this.modifyPaymentList(newOption);\n      if (newOption.is_payment_gateway) {\n        this.propertyOptionsById.set(newOption.id, newOption);\n      } else {\n        this.propertyOptionsByCode.set(newOption.code, newOption);\n      }\n    } else {\n      if (!this.propertyOptionsByCode.has(payment_option_store.selectedOption?.code) && !this.propertyOptionsById.has(payment_option_store.selectedOption?.id)) {\n        this.modifyPaymentList({ ...payment_option_store.selectedOption, is_active: false });\n      }\n    }\n    payment_option_store.selectedOption = null;\n    payment_option_store.mode = null;\n  }\n  private async fetchData() {\n    try {\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        console.log('fetching property id');\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n      const [paymentOptions, propertyOptions, languageTexts] = await Promise.all([\n        this.paymentOptionService.GetExposedPaymentMethods(),\n        this.paymentOptionService.GetPropertyPaymentMethods(propertyId),\n        this.roomService.fetchLanguage(this.language, ['_PAYMENT_BACK']),\n      ]);\n      locales.entries = languageTexts.entries;\n      locales.direction = languageTexts.direction;\n      this.propertyOptionsById = new Map(propertyOptions?.map(o => [o.id, o]));\n      this.propertyOptionsByCode = new Map(propertyOptions?.map(o => [o.code, o]));\n      this.paymentOptions = paymentOptions?.map(option => {\n        if (option.is_payment_gateway) {\n          return this.propertyOptionsById.get(option.id) || option;\n        }\n        return this.propertyOptionsByCode.get(option.code) || option;\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private initServices() {\n    this.token.setToken(this.ticket);\n  }\n  private modifyPaymentList(paymentOption: PaymentOption) {\n    let prevPaymentOptions = [...this.paymentOptions];\n    console.log(paymentOption);\n    let index = prevPaymentOptions.findIndex(p => p.code === paymentOption.code);\n    if (index === -1) {\n      throw new Error('Invalid code');\n    }\n    prevPaymentOptions[index] = { ...paymentOption };\n    this.paymentOptions = [...prevPaymentOptions];\n  }\n  private async handleCheckChange(e: CustomEvent, po: PaymentOption) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n\n    const is_active = e.detail;\n    const newOption = { ...po, is_active, property_id: this.propertyid };\n    if (po.code !== '005' && !po.is_payment_gateway) {\n      await this.changePaymentMethod(newOption);\n      this.modifyPaymentList(newOption);\n      if (po.code === '000' && is_active && this.paymentOptions.filter(p => p.code !== '000').every(p => p.is_active === false || p.is_active === null)) {\n        this.toast.emit({\n          type: 'success',\n          description: '',\n          title: locales.entries['Lcz_YouNeedToSelect'],\n          position: 'top-right',\n        });\n      }\n      return;\n    }\n\n    if (!this.showEditButton(po)) {\n      this.modifyPaymentList(newOption);\n      return;\n    }\n    if (is_active && po.data?.some(d => d.value === null)) {\n      payment_option_store.mode = 'create';\n      payment_option_store.selectedOption = newOption;\n    } else {\n      await this.changePaymentMethod(newOption);\n    }\n    this.modifyPaymentList(newOption);\n  }\n  private async changePaymentMethod(newOption: {\n    is_active: any;\n    property_id: string;\n    code: string;\n    data: OptionField[] | null;\n    description: string;\n    id: null | number;\n    is_payment_gateway: boolean;\n    localizables: ILocalizable[] | null;\n    display_order?: number;\n  }) {\n    try {\n      await this.paymentOptionService.HandlePaymentMethod(newOption);\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private showEditButton(po: PaymentOption) {\n    if (!po.is_payment_gateway && po.code !== '005') {\n      return false;\n    }\n\n    return po.code === '005' || (po.is_payment_gateway && po.data?.length > 0);\n  }\n  render() {\n    if (this.isLoading === true || (this.paymentOptions && this.paymentOptions.length === 0)) {\n      return (\n        <Host class={this.defaultStyles ? 'p-2' : ''}>\n          <div class={`loading-container ${this.defaultStyles ? 'default' : ''}`}>\n            <span class=\"payment-option-loader\"></span>\n          </div>\n        </Host>\n      );\n    }\n    return (\n      <Host class={this.defaultStyles ? 'p-2' : ''}>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <div class={`${this.defaultStyles ? 'card ' : ''} p-1 flex-fill m-0`}>\n          <div class=\"d-flex align-items-center mb-2\">\n            <div class=\"p-0 m-0 mr-1\">\n              <ir-icons name=\"credit_card\"></ir-icons>\n            </div>\n            <h3 class={'m-0 p-0'}>{locales?.entries?.Lcz_PaymentOptions}</h3>\n          </div>\n          <div class=\"payment-table-container\">\n            <table class=\"table table-striped table-bordered no-footer dataTable\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" class=\"text-left\">\n                    {locales?.entries?.Lcz_PaymentMethod}\n                  </th>\n                  <th scope=\"col\">{locales?.entries?.Lcz_Status}</th>\n                  <th scope=\"col\" class=\"actions-header\">\n                    {locales?.entries?.Lcz_Action}\n                  </th>\n                </tr>\n              </thead>\n              <tbody class=\"\">\n                {this.paymentOptions?.map(po => {\n                  if (po.code === '004') {\n                    return null;\n                  }\n                  return (\n                    <tr key={po.id}>\n                      <td class={'text-left po-description'}>\n                        <div class=\"po-view\">\n                          <span class={'p-0 m-0'}>{po?.description}</span>\n                          {/* <img src=\"https://www.jccsmart.com/assets/images/app-logo.svg\" alt=\"\" class=\"payment-img\" /> */}\n                        </div>\n                      </td>\n\n                      <td>\n                        <ir-switch checked={po.is_active} onCheckChange={e => this.handleCheckChange(e, po)}></ir-switch>\n                      </td>\n                      <td class=\"payment-action\">\n                        {this.showEditButton(po) && (\n                          <ir-button\n                            title={locales?.entries?.Lcz_Edit}\n                            variant=\"icon\"\n                            icon_name=\"edit\"\n                            onClickHandler={() => {\n                              payment_option_store.selectedOption = po;\n                              payment_option_store.mode = 'edit';\n                            }}\n                          ></ir-button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <ir-sidebar\n          onIrSidebarToggle={() => {\n            this.closeModal(null);\n          }}\n          side={'right'}\n          showCloseButton={false}\n          // label={locales?.entries.Lcz_Information?.replace('%1', payment_option_store.selectedOption?.description)}\n          open={payment_option_store?.selectedOption !== null}\n        >\n          {payment_option_store?.selectedOption && <ir-option-details propertyId={this.propertyid} slot=\"sidebar-body\"></ir-option-details>}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}