{"version":3,"names":["irHkTasksCss","IrHkTasksStyle0","IrHkTasks","this","roomService","RoomService","houseKeepingService","HouseKeepingService","token","Token","componentWillLoad","ticket","setToken","initializeApp","handleResetData","e","stopImmediatePropagation","stopPropagation","arrival","arrival_time","housekeeper","unit","status","selectedRoom","executeHKAction","property_id","propertyid","id","code","getExposedHKSetup","ticketChanged","newValue","oldValue","handleCheckChange","action","detail","modalOpenTimeOut","setTimeout","modal","el","querySelector","openModal","handleCloseSidebar","archiveOpened","disconnectedCallback","clearTimeout","getPendingActions","getHKPendingActions","bracket","selectedDuration","selectedHouseKeeper","isLoading","propertyId","propertyData","getExposedProperty","aname","p","language","is_backend","My_Result","updateHKStore","requests","getExposedHKStatusCriteria","fetchLanguage","unshift","Promise","all","housekeeping_store","hk_tasks","brackets","error","console","handleConfirm","preventDefault","render","h","Host","class","label","locales","entries","Lcz_HousekeepingTasks","justifyContent","slot","text","Lcz_Archive","size","onClickHandler","selectedValue","onSelectChange","data","map","description","value","showFirstOption","LabelAvailable","housekeepers","name","toString","Lcz_Unit","Lcz_Status","Lcz_Arrivaldate","Lcz_ArrivalTime","Lcz_Housekeeper","Lcz_Done","_a","pending_housekeepers","key","onCheckChange","checked","leftBtnText","Lcz_No","rightBtnText","Lcz_Yes","onConfirmModal","bind","onCancelModal","modalBody"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.checkbox-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.table-container {\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  width: max-content;\r\n}\r\n.table,\r\nth,\r\ntd {\r\n  border-color: white !important;\r\n}\r\n\r\n.select-container {\r\n  max-width: 500px;\r\n}\r\n\r\n@media only screen and (min-width: 900px) {\r\n  td {\r\n    min-width: 140px !important;\r\n    width: max-content !important;\r\n  }\r\n}\r\n@media only screen and (max-width: 900px) {\r\n  td {\r\n    min-width: 100px !important;\r\n  }\r\n  .table-container {\r\n    width: max-content !important;\r\n  }\r\n}\r\n","import { IPendingActions } from '@/models/housekeeping';\r\nimport Token from '@/models/Token';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, Listen, Prop, State, Watch, h, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-hk-tasks',\r\n  styleUrl: 'ir-hk-tasks.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkTasks {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n  @State() selectedDuration = '';\r\n  @State() selectedHouseKeeper = '0';\r\n  @State() selectedRoom: IPendingActions | null = null;\r\n  @State() archiveOpened = false;\r\n  @State() property_id: number;\r\n\r\n  private modalOpenTimeOut: NodeJS.Timeout;\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private token = new Token();\r\n\r\n  componentWillLoad() {\r\n    if (this.ticket !== '') {\r\n      this.token.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { arrival, arrival_time, housekeeper, unit, status } = this.selectedRoom;\r\n    this.houseKeepingService.executeHKAction({\r\n      property_id: this.propertyid,\r\n      arrival,\r\n      arrival_time,\r\n      housekeeper: {\r\n        id: housekeeper.id,\r\n      },\r\n      status: {\r\n        code: status.code,\r\n      },\r\n      unit: {\r\n        id: unit.id,\r\n      },\r\n    });\r\n    await this.houseKeepingService.getExposedHKSetup(this.property_id);\r\n  }\r\n\r\n  @Watch('ticket')\r\n  ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    this.token.setToken(this.ticket);\r\n    this.initializeApp();\r\n  }\r\n  handleCheckChange(e: CustomEvent, action: IPendingActions) {\r\n    if (e.detail) {\r\n      this.selectedRoom = action;\r\n      this.modalOpenTimeOut = setTimeout(() => {\r\n        const modal = this.el.querySelector('ir-modal');\r\n        if (modal) {\r\n          (modal as HTMLIrModalElement).openModal();\r\n        }\r\n      }, 50);\r\n    }\r\n  }\r\n  @Listen('closeSideBar')\r\n  handleCloseSidebar(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.archiveOpened = false;\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.modalOpenTimeOut) {\r\n      clearTimeout(this.modalOpenTimeOut);\r\n    }\r\n  }\r\n  async getPendingActions() {\r\n    await this.houseKeepingService.getHKPendingActions({\r\n      property_id: this.property_id,\r\n      bracket: {\r\n        code: this.selectedDuration,\r\n      },\r\n      housekeeper: {\r\n        id: +this.selectedHouseKeeper,\r\n      },\r\n    });\r\n  }\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!propertyId) {\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n        });\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      this.property_id = propertyId;\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\r\n      const requests = [this.houseKeepingService.getExposedHKStatusCriteria(propertyId), this.roomService.fetchLanguage(this.language, ['_HK_FRONT'])];\r\n\r\n      if (this.propertyid) {\r\n        requests.unshift(\r\n          this.roomService.getExposedProperty({\r\n            id: propertyId,\r\n            language: this.language,\r\n            is_backend: true,\r\n          }),\r\n        );\r\n      }\r\n      await Promise.all(requests);\r\n      this.selectedDuration = housekeeping_store.hk_tasks.brackets[0].code;\r\n      await this.getPendingActions();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  async handleConfirm(e: CustomEvent) {\r\n    e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    try {\r\n      await this.getPendingActions();\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.selectedRoom = null;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-toast></ir-toast>\r\n        <ir-interceptor></ir-interceptor>\r\n        <section class=\"p-2\">\r\n          <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\r\n          </ir-title>\r\n          <div class=\"d-flex align-items-center mb-2 justify-content-between d-md-none\">\r\n            <ir-title class=\"mb-0\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\"></ir-title>\r\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\" onClickHandler={() => (this.archiveOpened = true)}></ir-button>\r\n          </div>\r\n          <div class=\"d-flex flex-column flex-sm-row align-items-center mb-1  select-container\">\r\n            <ir-select\r\n              selectedValue={this.selectedDuration}\r\n              onSelectChange={e => {\r\n                this.selectedDuration = e.detail;\r\n                this.getPendingActions();\r\n              }}\r\n              data={housekeeping_store.hk_tasks.brackets.map(bracket => ({\r\n                text: bracket.description,\r\n                value: bracket.code,\r\n              }))}\r\n              class=\"mb-1 w-100 mb-sm-0\"\r\n              showFirstOption={false}\r\n              LabelAvailable={false}\r\n            ></ir-select>\r\n            <ir-select\r\n              onSelectChange={e => {\r\n                this.selectedHouseKeeper = e.detail;\r\n                this.getPendingActions();\r\n              }}\r\n              selectedValue={this.selectedHouseKeeper}\r\n              data={[\r\n                { text: 'All housekeepers', value: '0' },\r\n                ...housekeeping_store.hk_tasks.housekeepers.map(bracket => ({\r\n                  text: bracket.name,\r\n                  value: bracket.id.toString(),\r\n                })),\r\n              ]}\r\n              showFirstOption={false}\r\n              LabelAvailable={false}\r\n              class=\"ml-sm-2 w-100\"\r\n            ></ir-select>\r\n          </div>\r\n          <div class=\"card p-1\">\r\n            <div class=\"table-container\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Unit}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Status}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Arrivaldate}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_ArrivalTime}</th>\r\n                    <th class=\"text-left\">{locales.entries.Lcz_Housekeeper}</th>\r\n                    <th class=\"text-center\">{locales.entries.Lcz_Done}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {housekeeping_store.pending_housekeepers?.map(action => (\r\n                    <tr key={action.housekeeper.id}>\r\n                      <td class=\"text-left\">{action.unit.name}</td>\r\n                      <td class=\"text-left\">{action.status.description}</td>\r\n                      <td class=\"text-left\">{action.arrival}</td>\r\n                      <td class=\"text-left\">{action.arrival_time}</td>\r\n                      <td class=\"text-left\">{action.housekeeper.name}</td>\r\n                      <td>\r\n                        <div class=\"checkbox-container\">\r\n                          <ir-checkbox onCheckChange={e => this.handleCheckChange(e, action)} checked={this.selectedRoom?.unit.id === action.unit.id}></ir-checkbox>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        {this.selectedRoom && (\r\n          <ir-modal\r\n            leftBtnText={locales.entries.Lcz_No}\r\n            rightBtnText={locales.entries.Lcz_Yes}\r\n            onConfirmModal={this.handleConfirm.bind(this)}\r\n            onCancelModal={() => (this.selectedRoom = null)}\r\n            modalBody={`Is ${this.selectedRoom.unit.name} cleaned?`}\r\n          ></ir-modal>\r\n        )}\r\n        {/* <ir-sidebar open={this.archiveOpened} showCloseButton={false} onIrSidebarToggle={() => (this.archiveOpened = false)}>\r\n          {this.archiveOpened && <ir-hk-archive slot=\"sidebar-body\"></ir-hk-archive>}\r\n        </ir-sidebar> */}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}