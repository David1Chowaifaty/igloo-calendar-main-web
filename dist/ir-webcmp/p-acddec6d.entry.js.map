{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","this","userRate","componentWillLoad","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","componentDidLoad","timeout","setTimeout","updateData","disconnectedCallback","clearTimeout","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","name","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","is_bed_configuration_enabled","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","formatAmount","currency","symbol","Lcz_Stay","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","setToken","token","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","from_date","fromDate","dateOption","showDateDifference","to_date","toDate","isEventHover","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","resetRoomsInfoAndMessage","roomsInfo","onDataRoomUpdate","isEdit","isEditBooking","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Array","fill","size","clear","prepareBookUserServiceParams","check_in","sourceOption","arrivalTime","isEventType","getArrivalTimeForBooking","bookingData","ARRIVAL","code","pr_id","PR_ID","BOOKING_NUMBER","ROOMS","identifier","IDENTIFIER","dateRangeData","totalNights","source","propertyid","pickup_info","PICKUP_INFO","defaultGuest","GUEST","extras","console","getRoomCategoryByRoomId","_a","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","RATE_PLAN","NAME","iglBookPropertyCss","IglBookPropertyStyle0","IglBookProperty","initialRoomIds","showSplitBookingOption","sourceOptions","ratePricingMode","bookPropertyService","eventsService","EventsService","adult","child","handleKeyDown","closeWindow","document","addEventListener","removeEventListener","clearBooking","stopImmediatePropagation","stopPropagation","handleSpiltBookingSelected","getExposedBooking","language","defaultDateRange","FROM_DATE","TO_DATE","bind","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","adultChildCount","CHILDREN_COUNT","roomName","roomTypeId","event_type","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","bookingSource","description","tag","SOURCE","handleAdultChildChange","initializeBookingAvailability","is_in_agent_mode","room_type_ids","getBookingAvailability","agent_id","roomtypes","physicalrooms","getSplitBookings","hasOwnProperty","splitBookingEvents","closeBookingWindow","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","handleGuestInfoUpdate","handleBookedByInfoUpdate","handleSourceDropDown","selectedSource","gotoSplitPageTwo","gotoPage","showSplitBooking","getPageBlockDatesView","Fragment","fromDateStr","toDateStr","ENTRY_DATE","onDataUpdateEvent","text","Lcz_Cancel","btn_color","onClick","Lcz_Blockdates","isLoading","isRequestPending","handleBlockDate","bookUser","buttonName","animateIrSelect","_b","animateIrButton","toast","Lcz_SelectRatePlan","title","handlePageTwoDataUpdateEvent","releaseData","result","blockUnit","NOTES","STAY_STATUS_CODE","DESCRIPTION","blockedUnit","transformNewBLockedRooms","blockedCreated","setLoadingState","log","STATUS_CODE","deleteEvent","POOL","serviceParams","resetBookingData","resetLoadingState","assign_units","ARRIVAL_TIME","onRoomDataUpdate","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","onRoomsDataUpdate","propertyId","showPaymentDetails","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","editNext","label","renderButton","disabled","icon_name","shouldRenderTwoButtons","btn_disabled","onClickHanlder","buttonClicked","iconPostion","style","icon_style","paddingBottom","Lcz_Next","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","getSplitBookingList","Lcz_Tobooking","keys","moment","bookingDataDefaultDateRange","format","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","from","adult_max_nbr","_","i","child_max_nbr","renderChildCaption","btn_id","icon","Lcz_Check","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","dateLabel","Lcz_Dates","add","startOf","tax_statement","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","setMinDate","today","splitBookingId","splitBookings","roomInfo","isBookDisabled","roomTypeData","roomInfoId","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlanStyle0","IglBookingRoomRatePlan","getAvailableRooms","assignable_units","forEach","unit","Is_Fully_Available","push","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","sort","a","b","getSelectedOffering","variations","variation","amount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","Number","bookProperty","gotoSplitPageTwoEvent","renderRate","toFixed","split","short_name","isInputFocused","onFocus","onBlur","Lcz_Rate","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRoomsStyle0","IglBookingRooms","validBookingTypes","initializeRoomData","rateplans","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","updatedData","handleTotalRoomsUpdate","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","JSON","stringify","isValidBookingType","ratePlan","defaultRoomId","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","getStringDateFormat","getFullYear","getMonth","initializeDates","setDate","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","oldValue","calculateDaysBetweenDates","toLowerCase","dateSelectEvent","handleDateChange","start","end","maxDate","autoApply","onDateChanged","withDateDifference","Lcz_Nights","Lcz_Night","iglPagetwoCss","IglPagetwoStyle0","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","Lcz_TotalPrice","bed_preference","Lcz_Back","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","handleNumberInput","numericRegex","checkUser","z","string","safeParse","success","getUserInfo","prevBookedByData","handleComboboxChange","clearEvent","Lcz_BookedBy","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { ICurrency } from '@/models/calendarData';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n  private timeout: NodeJS.Timeout;\r\n\r\n  componentWillLoad() {\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n  componentDidLoad() {\r\n    this.timeout = setTimeout(() => {\r\n      this.updateData();\r\n    }, 200);\r\n  }\r\n  disconnectedCallback() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id) || e.name === '');\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.guestData.is_bed_configuration_enabled && (\r\n                <div class=\"mr-1 flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                  >\r\n                    <option value=\"\" selected={this.guestData.preference === ''}>\r\n                      {locales.entries.Lcz_BedConfiguration}\r\n                    </option>\r\n                    {this.bedPreferenceType.map(data => (\r\n                      <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <div class=\"\">\r\n                {formatAmount(this.currency.symbol, this.userRate)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.bookingService.setToken(calendar_data.token);\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"DD MMM YYYY\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { IBookingParams } from '@/services/booking.service';\r\n//import { BookingService } from '../../../services/booking.service';\r\n\r\nexport class IglBookPropertyService {\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n  async prepareBookUserServiceParams(context, check_in, sourceOption): Promise<IBookingParams> {\r\n    try {\r\n      const arrivalTime = context.isEventType('EDIT_BOOKING')\r\n        ? context.getArrivalTimeForBooking()\r\n        : context.isEventType('ADD_ROOM')\r\n        ? context.bookingData.ARRIVAL.code\r\n        : context.isEventType('SPLIT_BOOKING')\r\n        ? context.bookedByInfoData.selectedArrivalTime.code\r\n        : '';\r\n      const pr_id = context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : undefined;\r\n      const bookingNumber =\r\n        context.isEventType('EDIT_BOOKING') || context.isEventType('ADD_ROOM')\r\n          ? context.bookingData.BOOKING_NUMBER\r\n          : context.isEventType('SPLIT_BOOKING')\r\n          ? context.bookedByInfoData.bookingNumber\r\n          : undefined;\r\n      let rooms = [];\r\n      if (context.isEventType('ADD_ROOM')) {\r\n        // const result = await (context.bookingService as BookingService).getExoposedBooking(bookingNumber, context.language);\r\n        //rooms = result.rooms;\r\n        rooms = context.bookingData.ROOMS;\r\n      } else if (context.isEventType('SPLIT_BOOKING')) {\r\n        rooms = context.bookedByInfoData.rooms;\r\n      } else if (context.isEventType('EDIT_BOOKING')) {\r\n        rooms = context.defaultData.ROOMS.filter(room => room.identifier !== context.bookingData.IDENTIFIER);\r\n      }\r\n\r\n      return {\r\n        bookedByInfoData: context.bookedByInfoData,\r\n        check_in,\r\n        fromDate: new Date(context.dateRangeData.fromDate),\r\n        toDate: new Date(context.dateRangeData.toDate),\r\n        guestData: context.guestData,\r\n        totalNights: context.dateRangeData.dateDifference,\r\n        source: sourceOption,\r\n        propertyid: context.propertyid,\r\n        rooms,\r\n        pickup_info: context.bookingData.PICKUP_INFO || null,\r\n        currency: context.currency,\r\n        bookingNumber,\r\n        defaultGuest: context.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n        identifier: context.bookingData.IDENTIFIER,\r\n        extras: null,\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  // private getBookingPreferenceRoomId(bookingData) {\r\n  //   return (bookingData.hasOwnProperty('PR_ID') && bookingData.PR_ID) || null;\r\n  // }\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '../../../models/models';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../models/igl-book-property';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = {\r\n    adult: 0,\r\n    child: 0,\r\n  };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() buttonName = '';\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingData: EventEmitter<null>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private eventsService = new EventsService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n\r\n  handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    } else return;\r\n  }\r\n  componentDidLoad() {\r\n    // console.log('booking_data', this.bookingData);\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation;\r\n    const { key, data } = e.detail;\r\n    if (key === 'select') {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    } else if (key === 'blur' && data !== '') {\r\n      const res = await this.bookingService.getExposedBooking(data as string, this.language);\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.eventsService.setToken(calendar_data.token);\r\n    this.defaultDateRange = { from_date: this.bookingData.FROM_DATE, to_date: this.bookingData.TO_DATE };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.adultChildCount = {\r\n          adult: this.defaultData.ADULTS_COUNT,\r\n          child: this.defaultData.CHILDREN_COUNT,\r\n        };\r\n        this.initialRoomIds = {\r\n          roomName: this.defaultData.roomName,\r\n          ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n          roomId: this.defaultData.PR_ID,\r\n          roomTypeId: this.defaultData.RATE_TYPE,\r\n        };\r\n        this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n      }\r\n      if (!this.isEventType('BAR_BOOKING')) {\r\n        this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      }\r\n\r\n      if (this.defaultData.event_type === 'SPLIT_BOOKING') {\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n      } else if (this.defaultData.event_type === 'BLOCK_DATES') {\r\n        this.page = 'page_block_date';\r\n      } else {\r\n        this.page = 'page_one';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n  isGuestDataIncomplete() {\r\n    //|| data.roomId === '' || data.roomId === 0 if the roomId is required\r\n    if (this.guestData.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    for (const data of this.guestData) {\r\n      if (data.guestName === '' || ((data.preference === '' || data.preference === 0) && data.is_bed_configuration_enabled)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'isdCode', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'contactNumber', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      // isValidProperty(this.bookedByInfoData, 'countryId', -1) ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n      // ||\r\n      // validateEmail(this.bookedByInfoData?.email)\r\n      // || isValidProperty(this.bookedByInfoData, 'email', '')\r\n    );\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    this.adultChildCount = { ...event.detail };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids = this.defaultData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data.roomtypes };\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.defaultData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.defaultData.hasOwnProperty('splitBookingEvents') && this.defaultData.splitBookingEvents) || [];\r\n  }\r\n  closeWindow() {\r\n    this.dateRangeData = {};\r\n    this.closeBookingWindow.emit();\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  isEventType(key: string) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage('page_one');\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        this.buttonName === 'save';\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        this.buttonName = 'book';\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        this.buttonName = 'bookAndCheckIn';\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (this.selectedUnits.size > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else {\r\n          if (this.defaultData?.roomsInfo.length === 0) {\r\n            this.animateIrButton.emit('check_availability');\r\n            break;\r\n          }\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.initializeBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.defaultData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else {\r\n      console.log(this.isButtonDisabled());\r\n      if (this.isButtonDisabled()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    }\r\n    try {\r\n      if (['003', '002', '004'].includes(this.defaultData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.defaultData.POOL);\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams(this, check_in, this.sourceOption);\r\n      await this.bookingService.bookUser(serviceParams);\r\n      this.resetBookingData.emit(null);\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.defaultData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  onRoomDataUpdate(event: CustomEvent) {\r\n    const units = this.bookPropertyService.onDataRoomUpdate(\r\n      event,\r\n      this.selectedUnits,\r\n      this.isEventType('EDIT_BOOKING'),\r\n      this.isEventType('EDIT_BOOKING') || this.isEventType('SPLIT_BOOKING') || this.isEventType('BAR_BOOKING'),\r\n      this.defaultData.NAME,\r\n    );\r\n    this.selectedUnits = new Map(units);\r\n    this.renderPage();\r\n  }\r\n  getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n  render() {\r\n    //console.log('render');\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                // bookingDataDefaultDateRange={this.dateRangeData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                onRoomsDataUpdate={evt => {\r\n                  this.onRoomDataUpdate(evt);\r\n                }}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-pagetwo\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-pagetwo>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { TIcons } from '@/components/ui/ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false, icon_name?: TIcons) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button> */}\r\n        <ir-button\r\n          btn_color={type === 'cancel' ? 'secondary' : 'primary'}\r\n          text={label}\r\n          btn_disabled={disabled}\r\n          onClickHanlder={() => {\r\n            this.buttonClicked.emit({ key: type });\r\n          }}\r\n          icon_name={icon_name}\r\n          iconPostion=\"right\"\r\n          style={{ '--icon-size': '1rem' }}\r\n          icon_style={{ paddingBottom: '1.9px' }}\r\n        ></ir-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, isRequestPending('/Get_Exposed_Booking_Availability'), 'angles_right')}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, false, 'angles_right')}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              {/* <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select> */}\r\n              <ir-select\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Get_Exposed_Booking_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Get_Exposed_Booking_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n                //console.log(this.selectedRooms);\r\n                return (\r\n                  <igl-booking-rooms\r\n                    initialRoomIds={this.initialRoomIds}\r\n                    isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                    key={`room-info-${roomInfo.id}`}\r\n                    currency={this.currency}\r\n                    ratePricingMode={this.ratePricingMode}\r\n                    dateDifference={this.dateRangeData.dateDifference}\r\n                    bookingType={this.bookingData.event_type}\r\n                    roomTypeData={roomInfo}\r\n                    class=\"mt-2 mb-1 p-0\"\r\n                    roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                    defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                    onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                  ></igl-booking-rooms>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 150px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 20%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @Prop() is_bed_configuration_enabled: boolean;\r\n  @State() isInputFocused = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    // console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || (calendar_data.is_frontdesk_enabled && this.selectedData.physicalRooms.length === 0);\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      is_bed_configuration_enabled: this.is_bed_configuration_enabled,\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[0].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[0].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[0].adult_nbr,\r\n      childrenCount: data.variations[0].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.selectedData['rateType'] = 1;\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.defaultData) {\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[0].adult_child_offering,\r\n      adultCount: newData.variations[0].adult_nbr,\r\n      childrenCount: newData.variations[0].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.selectedData.rate / this.dateDifference).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.short_name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-md-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1 '}>\r\n              <div class=\" d-flex  m-0 p-0 rate-total-night-view  mt-0\">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <div class=\"input-group-prepend\">\r\n                    <span data-disabled={this.disableForm()} data-state={this.isInputFocused ? 'focus' : ''} class=\"input-group-text new-currency\" id=\"basic-addon1\">\r\n                      {/* {getCurrencySymbol(this.currency.code)} */}\r\n                      {this.currency.symbol}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    onFocus={() => (this.isInputFocused = true)}\r\n                    onBlur={() => (this.isInputFocused = false)}\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control pl-0 input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  {/* <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span> */}\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0 m-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-fill  mt-lg-0 ml-1 m-0 mt-md-0 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomTypeData.rateplans.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                is_bed_configuration_enabled={this.roomTypeData.is_bed_configuration_enabled}\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n  font-size: 14px !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 220px !important;\r\n  opacity: 0;\r\n  user-select: none;\r\n  font-size: 14px !important;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 14px;\r\n  margin-right: 14px;\r\n  font-size: 13.65px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  inset: 0;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 245px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt: Date) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n  initializeDates() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n  @Watch('defaultData')\r\n  handleDataChange(newValue: any, oldValue: any) {\r\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer form-control input-sm\" data-state={this.disabled ? 'disabled' : 'active'}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div data-state={this.disabled ? 'disabled' : 'active'} class=\"date-view\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <ir-date-view showDateDifference={this.disabled} from_date={this.fromDate} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        {this.withDateDifference && (\r\n          <span>\r\n            {this.totalNights && !this.disabled ? (\r\n              <span class=\"iglRangeNights mx-1\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </span>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={this.dateRangeData.fromDateStr}\r\n            to_date={this.dateRangeData.toDateStr}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              {\r\n                console.log('user info details', event.detail);\r\n                this.handleEventData(event, 'propertyBookedBy', 0);\r\n              }\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button> */}\r\n              <ir-button\r\n                icon_name=\"angles_left\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n                text={locales.entries.Lcz_Back}\r\n                style={{ '--icon-size': '1rem' }}\r\n                icon_style={{ paddingBottom: '1.9px' }}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log('data', data, 'key', key);\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email: '' };\r\n          this.bookedByData = { ...prevBookedByData };\r\n          this.dataUpdateEvent.emit({\r\n            key: 'bookedByInfoUpdated',\r\n            data: { ...this.bookedByData },\r\n          });\r\n        }\r\n\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}