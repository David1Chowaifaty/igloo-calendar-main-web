{"version":3,"names":["irResetPasswordCss","IrResetPasswordStyle0","sheetCss","IrResetPasswordStyle1","IrResetPassword","constructor","hostRef","this","language","showValidator","autoValidate","error","submitted","isLoading","token","Token","authService","AuthService","systemService","SystemService","roomService","RoomService","initialized","ResetPasswordSchema","z","object","password","string","regex","CONSTANTS","PASSWORD","confirm_password","nullable","refine","test","message","componentWillLoad","ticket","setToken","componentDidLoad","init","handleTicketChange","oldValue","newValue","Promise","all","checkOTPNecessity","METHOD_NAME","fetchLanguage","handleChangePassword","e","preventDefault","parse","confirmPassword","changeUserPwd","username","new_pwd","old_pwd","skip2Fa","window","history","back","el","slot","closeSideBar","emit","ZodError","validationErrors","issues","map","issue","path","console","log","handleOtpFinished","detail","type","render","insideSidebar","h","key","class","Fragment","suppressToastEndpoints","onSubmit","bind","displayContext","label","xmlns","viewBox","height","width","fill","d","locales","entries","Lcz_SetNewPassword","_a","value","onTextChange","inputStyles","zod","pick","wrapKey","placeholder","Lcz_NewPassword","onInputFocus","_b","Lcz_ConfirmPassword","style","gap","btn_styles","onClickHandler","text","Lcz_Cancel","size","btn_color","btn_type","Lcz_ChangePassword"],"sources":["src/components/ir-reset-password/ir-reset-password.css?tag=ir-reset-password&encapsulation=scoped","src/common/sheet.css?tag=ir-reset-password&encapsulation=scoped","src/components/ir-reset-password/ir-reset-password.tsx"],"sourcesContent":[".base-host {\n  height: 100vh;\n  display: grid;\n  align-content: center;\n  padding: 2rem;\n  box-sizing: border-box;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background: white;\n}\np,\ninput,\nbutton {\n  margin: 0;\n}\np,\ninput,\nbutton,\ndiv,\nsection,\nform {\n  box-sizing: border-box;\n}\n.lock-icon {\n  align-self: center;\n}\n.form-container {\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: white;\n  border-radius: 0.25rem;\n  gap: 1rem;\n  width: 100%;\n  max-width: 38rem;\n  margin-left: auto;\n  margin-right: auto;\n}\n.separator-container {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n}\n.separator-container p {\n  color: #6b6f82;\n  /* color: green; */\n  font-size: 1rem;\n}\n.separator {\n  flex: 1 1 0%;\n  height: 1px;\n  background: #dadada;\n}\n.login-btn {\n  margin-top: 1rem;\n}\n.logo {\n  align-self: center;\n}\n.app_links {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  padding-block: 0.5rem;\n}\n.app_links a img {\n  width: 70%;\n}\n.password_toggle {\n  all: unset;\n  position: absolute;\n  top: 2px;\n  right: 1rem;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100% !important;\n  gap: 1rem;\n}\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import Token from '@/models/Token';\nimport { AuthService } from '@/services/authenticate.service';\nimport { RoomService } from '@/services/room.service';\nimport { SystemService } from '@/services/system.service';\nimport locales from '@/stores/locales.store';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Component, Element, Event, EventEmitter, Fragment, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { z, ZodError } from 'zod';\n\n@Component({\n  tag: 'ir-reset-password',\n  styleUrls: ['ir-reset-password.css', '../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrResetPassword {\n  @Element() el: HTMLIrResetPasswordElement;\n\n  @Prop() username: string;\n  @Prop() old_pwd: string;\n  @Prop() ticket: string;\n  @Prop() skip2Fa: boolean;\n  @Prop() language: string = 'en';\n\n  @State() confirmPassword: string;\n  @State() password: string;\n  @State() showValidator: boolean = false;\n  @State() autoValidate: boolean = false;\n  @State() error: { password?: boolean; confirm_password?: boolean } = {};\n  @State() submitted: boolean = false;\n  @State() isLoading = false;\n\n  @Event() closeSideBar: EventEmitter<null>;\n\n  private token = new Token();\n  private authService = new AuthService();\n  private systemService = new SystemService();\n  private roomService = new RoomService();\n  private initialized = false;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  componentDidLoad() {\n    this.init();\n  }\n\n  @Watch('ticket')\n  handleTicketChange(oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  private async init() {\n    if (!this.ticket || this.initialized) {\n      return;\n    }\n    await Promise.all([\n      this.systemService.checkOTPNecessity({\n        METHOD_NAME: 'Change_User_Pwd',\n      }),\n      this.roomService.fetchLanguage(this.language, ['_USER_MGT']),\n    ]);\n    this.initialized = false;\n  }\n\n  private ResetPasswordSchema = z.object({\n    password: z.string().regex(CONSTANTS.PASSWORD),\n    confirm_password: z\n      .string()\n      .nullable()\n      .refine(\n        password => {\n          if (!CONSTANTS.PASSWORD.test(password)) {\n            return false;\n          }\n          return password === this.password;\n        },\n        { message: 'Password must be at least 8 characters long.' },\n      ),\n  });\n\n  private async handleChangePassword(e: Event) {\n    e.preventDefault();\n    try {\n      this.error = {};\n      this.isLoading = true;\n      this.autoValidate = true;\n      this.ResetPasswordSchema.parse({\n        password: this.password,\n        confirm_password: this.confirmPassword,\n      });\n      await this.authService.changeUserPwd({\n        username: this.username,\n        new_pwd: this.password,\n        old_pwd: this.old_pwd,\n      });\n      if (!this.skip2Fa) {\n        // this.submitted = true;\n        window.history.back();\n      }\n      if (this.el.slot === 'sidebar-body') {\n        this.closeSideBar.emit();\n      }\n    } catch (error) {\n      if (error instanceof ZodError) {\n        let validationErrors = {};\n        error.issues.map(issue => {\n          const path = issue.path[0];\n          console.log(path, issue);\n          if (path === 'password') {\n            this.showValidator = true;\n          }\n          validationErrors[path] = true;\n        });\n        this.error = validationErrors;\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  @Listen('otpFinished', { target: 'body' })\n  handleOtpFinished(e: CustomEvent) {\n    if (e.detail.type === 'success') {\n      return;\n    }\n    if (this.el.slot !== 'sidebar-body') {\n      window.history.back();\n    } else {\n      this.closeSideBar.emit();\n    }\n  }\n  render() {\n    const insideSidebar = this.el.slot === 'sidebar-body';\n    return (\n      <div class={{ 'base-host': !insideSidebar, 'h-100': insideSidebar }}>\n        {!insideSidebar && (\n          <Fragment>\n            <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd']}></ir-interceptor>\n            <ir-toast></ir-toast>\n          </Fragment>\n        )}\n        <form onSubmit={this.handleChangePassword.bind(this)} class={{ 'sheet-container': insideSidebar }}>\n          {insideSidebar && <ir-title class=\"px-1 sheet-header\" displayContext=\"sidebar\" label={'Change Password'}></ir-title>}\n          <div class={{ 'form-container': true, 'sheet-body px-1': insideSidebar, 'px-2': !insideSidebar }}>\n            <svg class=\"lock-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" height={24} width={24}>\n              <path\n                fill=\"currentColor\"\n                d=\"M144 144l0 48 160 0 0-48c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192l0-48C80 64.5 144.5 0 224 0s144 64.5 144 144l0 48 16 0c35.3 0 64 28.7 64 64l0 192c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 256c0-35.3 28.7-64 64-64l16 0z\"\n              />\n            </svg>\n            <div class=\"text-center mb-2\">\n              <h4 class=\"mb-1\">{locales.entries.Lcz_SetNewPassword}</h4>\n              {this.submitted ? (\n                <p>An email has been sent to your address. Please check your inbox to confirm the password change.</p>\n              ) : (\n                <p>Your new password must be different to previously used password</p>\n              )}\n            </div>\n            {!this.submitted && (\n              <section>\n                <div class={'mb-2'}>\n                  <div class=\"m-0 p-0\">\n                    <div class={'position-relative'}>\n                      <ir-input-text\n                        error={this.error?.password}\n                        autoValidate={this.autoValidate}\n                        value={this.password}\n                        onTextChange={e => (this.password = e.detail)}\n                        label=\"\"\n                        class=\"m-0 p-0\"\n                        inputStyles={'m-0'}\n                        zod={this.ResetPasswordSchema.pick({ password: true })}\n                        wrapKey=\"password\"\n                        placeholder={locales.entries.Lcz_NewPassword}\n                        onInputFocus={() => (this.showValidator = true)}\n                        type={'password'}\n                      ></ir-input-text>\n                    </div>\n                    {this.showValidator && <ir-password-validator class=\"mb-1\" password={this.password}></ir-password-validator>}\n                  </div>\n                  <div class={'position-relative'}>\n                    <ir-input-text\n                      error={this.error?.confirm_password}\n                      autoValidate={this.autoValidate}\n                      zod={this.ResetPasswordSchema.pick({ confirm_password: true })}\n                      wrapKey=\"confirm_password\"\n                      value={this.confirmPassword}\n                      onTextChange={e => (this.confirmPassword = e.detail)}\n                      label=\"\"\n                      placeholder={locales.entries.Lcz_ConfirmPassword}\n                      type={'password'}\n                    ></ir-input-text>\n                  </div>\n                </div>\n\n                {!insideSidebar && (\n                  <div class=\"d-flex flex-column mt-2 flex-sm-row align-items-sm-center\" style={{ gap: '0.5rem' }}>\n                    <ir-button\n                      btn_styles={'flex-fill'}\n                      onClickHandler={() => window.history.back()}\n                      class=\"flex-fill\"\n                      text={locales.entries.Lcz_Cancel}\n                      size=\"md\"\n                      btn_color=\"secondary\"\n                    ></ir-button>\n                    <ir-button\n                      btn_styles={'flex-fill'}\n                      class=\"flex-fill\"\n                      isLoading={this.isLoading}\n                      btn_type=\"submit\"\n                      text={locales.entries.Lcz_ChangePassword}\n                      size=\"md\"\n                    ></ir-button>\n                  </div>\n                )}\n              </section>\n            )}\n          </div>\n          {insideSidebar && (\n            <div class={'sheet-footer w-full'}>\n              <ir-button\n                text={locales.entries.Lcz_Cancel}\n                onClickHandler={() => this.closeSideBar.emit(null)}\n                class=\"flex-fill\"\n                btn_color=\"secondary\"\n                btn_styles=\"w-100 justify-content-center align-items-center\"\n                size=\"md\"\n              ></ir-button>\n              <ir-button\n                isLoading={this.isLoading}\n                class=\"flex-fill\"\n                btn_type=\"submit\"\n                btn_styles=\"w-100 justify-content-center align-items-center\"\n                text={locales.entries.Lcz_ChangePassword}\n                size=\"md\"\n              ></ir-button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}