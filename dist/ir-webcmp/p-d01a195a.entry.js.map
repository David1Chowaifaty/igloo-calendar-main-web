{"version":3,"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","emitReserved","listeners","hasListeners","nextTick","isPromiseAvailable","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","Date","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","Polling","_polling","name","_poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","WT","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","BatchingQueue","processor","queue","isProcessing","flushTimer","maxQueueSize","console","onBatchProcessed","offer","item","timestamp","generateId","scheduleFlush","offerAll","items","added","isEmpty","processBatch","clear","shutdown","batchSize","flushInterval","batch","startTime","processingTime","v4","iglooCalendarCss","IglooCalendarStyle0","IglooCalendar","hostRef","ticket","calendarData","days","scrollViewDragging","dialogData","bookingItem","editBookingItem","showLegend","showPaymentDetails","showToBeAssigned","unassignedDates","roomNightsData","renderAgain","showBookProperty","isAuthenticated","bookingService","BookingService","roomService","RoomService","eventsService","EventsService","toBeAssignedService","ToBeAssignedService","housekeepingService","HouseKeepingService","countries","visibleCalendarCells","x","y","today","reachedEndOfCalendar","token","Token","salesQueue","processSalesBatch","availabilityQueue","processAvailabilityBatch","roomTypeIdsCache","Map","scrollViewDragPos","top","left","onScrollContentMoveHandler","buttons","dx","clientX","dy","clientY","scrollContainer","scrollTop","scrollLeft","abs","onScrollContentMoveEndHandler","componentWillLoad","baseUrl","setBaseUrl","init","componentDidLoad","scrollToElement","handleDeleteEvent","stopImmediatePropagation","preventDefault","deleteEvent","detail","handleCalendarSidebarEvents","log","stopPropagation","calendarSidebarState","scrollPageToRoom","targetScrollClass","refClass","element","querySelector","topLeftCell","gotoRoom","scrollTo","gotoRect","getBoundingClientRect","containerRect","topLeftCellRect","height","handleShowDialog","calendarModalEl","openModal","handleShowRoomNightsDialog","handleBookingDatasChange","bookings","bookingEvents","bookingEvent","ID","STATUS","updateBookingEventsDateRange","handleUpdateBookingEvent","newBookingEvent","showBookingPopupEventDataHandler","onOptionSelect","updateEventDataHandler","bookedData","find","bookedEvent","entries","dragOverEventDataHandler","containerDays","querySelectorAll","containerRooms","htmlElement","offsetLeft","offsetWidth","width","getAttribute","offsetTop","offsetHeight","highlightDragOver","ticketChanged","newValue","oldValue","setToken","initializeApp","calDates","from","from_date","to_date","handleUnAssignedDatesChange","highlightedDate","renderModalBody","setUpCalendarData","roomResp","bookingResp","currency","allowedBookingSources","allowed_booking_sources","adultChildConstraints","adult_child_constraints","legendData","getLegendData","is_vacation_rental","My_Params_Get_Rooming_Data","FROM","TO","startingDate","getTime","endingDate","formattedLegendData","formatLegendColors","myBookings","toDate","moment","TO_DATE","fromDate","FROM_DATE","isSame","toBeAssignedEvents","propertyId","propertyid","propertyData","getExposedProperty","aname","language","is_backend","include_units_hk_status","include_sales_rate_plans","My_Result","property_id","getCalendarData","getCountries","fetchLanguage","getExposedHKSetup","results","all","tasksEndDate","format","getHousekeepingTasks","calendar_dates","months","setRoomsData","paymentMethods","transformDateForScroll","startingDay","setHours","monthsInfo","getUnassignedDates","addUnassignedDates","async","handleSocketMessage","tasks","getHkTasks","housekeepers","cleaning_frequency","calendar_data","housekeeping_store","hk_criteria","cleaning_frequencies","dusty_window","_e","_d","dusty_periods","highlight_window","_g","_f","highlight_checkin_options","addCleaningTasks","msgAsObject","REASON","KEY","PAYLOAD","includes","reasonHandlers","DORESERVATION","handleDoReservation","BLOCK_EXPOSED_UNIT","handleBlockExposedUnit","ASSIGN_EXPOSED_ROOM","handleAssignExposedRoom","REALLOCATE_EXPOSED_ROOM_BLOCK","handleReallocateExposedRoomBlock","DELETE_CALENDAR_POOL","handleDeleteCalendarPool","GET_UNASSIGNED_DATES","handleGetUnassignedDates","UPDATE_CALENDAR_AVAILABILITY","r","CHANGE_IN_DUE_AMOUNT","handleChangeInDueAmount","CHANGE_IN_BOOK_STATUS","handleChangeInBookStatus","NON_TECHNICAL_CHANGE_IN_BOOKING","handleNonTechnicalChangeInBooking","ROOM_STATUS_CHANGED","handleRoomStatusChanged","UNIT_HK_STATUS_CHANGED","handleUnitHKStatusChanged","SHARING_PERSONS_UPDATED","handleSharingPersonsUpdated","ROOM_TYPE_CLOSE","is_available_to_book","ROOM_TYPE_OPEN","HK_SKIP","handleHkSkip","handler","warn","IDENTIFIER","identifier","mainGuest","guests","is_main","NAME","formatName","first_name","last_name","ROOM_INFO","sharing_persons","room_identifier","getRoomStatus","in_out","status_code","BASE_STATUS_CODE","CHECKIN","CHECKOUT","cleanRoom","date","DATE","unitId","PR_ID","updatedRooms","roomsInfo","changedRoomTypeIdx","findIndex","roomType","ROOM_CATEGORY_ID","changedRoomType","changedPhysicalRoomIdx","physicalrooms","room","updatedPhysicalRooms","targetPhysicalRoom","hk_status","HKS_CODE","roomPayload","addRoomForCleaning","transformedBooking","transformNewBooking","AddOrUpdateRoomBookings","transformNewBLockedRooms","POOL","parsedResult","parseDateRange","dateToFormattedString","removeUnassignedDates","reduceAvailableUnitEvent","res","pools","BALANCE","due_amount","bookingStatus","BOOKING_NUMBER","booking_nbr","PRIVATE_NOTE","getPrivateNote","extras","checkBookingAvailability","booking","eventData","defaultDateRange","fromDateStr","getDateStr","fromDateTimeStamp","toDateStr","toDateTimeStamp","dateDifference","NO_OF_DAYS","isBlockUnit","STATUS_CODE","disabled_cells","sale","dayIdx","d","night","entry","get","rate_plan_id","rtIdx","rate","rt","rateplans","rp","set","rpIdx","index","roomTypeIdx","ratePlanIdx","updatedRateplans","disabled","day","room_type_index","room_type_id","room_type","exposed_inventory","rts","availability","isClosed","every","roomServiceResp","roomsData","roomtypes","roomCategory","expanded","aData","calendar_legends","locale","getDate","toLocaleString","month","getFullYear","goToDate","gotoDay","pool","isDateInBetweenTheLastPeriodDate","endDate","isSameOrBefore","shouldRenderCalendarView","opt","calendarElement","classList","remove","toggle","dt","end","handleDateSearch","setDate","noScroll","getMonth","event_type","closeSideMenu","addDatesToCalendar","newBookings","newMonths","monthName","daysCount","newBooking","existingBookingIndex","calculateDaysBetweenDates","diff","dates","startDate","defaultFromDate","defaultToDate","nextDay","getNextDay","dragScrollContent","isPreventPageScroll","target","hasAncestorWithClass","calendarScrolling","highlightedElement","right","isVisible","innerWidth","leftSideMenuSize","maxWidth","leftX","rightX","cells","monthContainer","monthRect","nextTwoMonths","addTwoMonthToDate","titleElement","marginLeft","monthWidth","style","className","currentElement","matches","parentElement","hightLightElement","currentPosition","xElement","yElement","pos","dragOverHighlightElement","dragOverElement","moveBookingTo","bookingId","fromRoomId","toRoomId","moveToDay","convertDMYToISO","computeEndDate","nbOfDays","handleModalConfirm","resetModalState","bookingNumber","roomIdentifier","handleExposedRoomInOut","finally","openCalendarSidebar","sidebarPayload","rest","__rest$3","showRoomNightsDialog","reallocateEvent","revertBooking","handleModalCancel","handleRoomNightsDialogClose","handleSideBarToggle","handleCloseBookingWindow","render","h","Host","class","Fragment","unassignedDatesProp","onOptionEvent","evt","onMouseDown","onScroll","isScrollViewDragging","bookingData","onCloseBookingWindow","onIrSidebarToggle","showCloseButton","sidebarStyles","background","slot","onCloseRoomNightsDialog","defaultDates","hasPrint","hasReceipt","hasCloseButton","onCloseSidebar","is_from_front_desk","hasRoomEdit","hasRoomDelete","hasRoomAdd","roomName","totalGuests","_j","_h","sharedPersons","_l","_k","checkIn","_o","_m","checkin","onCloseModal","_p","ref","el","modalTitle","rightBtnActive","_q","hideConfirmButton","leftBtnText","_r","locales","Lcz_Cancel","rightBtnText","_s","Lcz_Confirm","modalBody","onConfirmModal","onCancelModal","irBookingEmailLogsCss","IrBookingEmailLogsStyle0","IrBookingEmailLogs","handleTicketChange","handledEndpoints","gap","inputContainerStyle","margin","onTextChange","text","onClickHandler","axios","post","BOOK_NBR","ExceptionMsg","irDailyRevenueCss","IrDailyRevenueStyle0","IrDailyRevenue","filters","users","tokenService","propertyService","PropertyService","handleSidebarClose","sideBarEvent","handleOpenSidebar","handleFetchNewReports","getPaymentReports","handleResetBooking","renderSidebarBody","isPageLoading","getSetupEntriesByTableNameMulti","setupEntries","pay_type","pay_type_group","pay_method","groupEntryTablesResult","paymentEntries","groups","methods","types","groupPaymentsByName","payments","groupedPayment","payment","payTypeCode","payMethodCode","sort","a","aNum","bNum","isNaN","localeCompare","isExportToExcel","excludeYesterday","getReportObj","report","METHOD","PAY_TYPE_CODE","PAY_METHOD_CODE","amount","AMOUNT","hour","HOUR","minute","MINUTE","user","USER","CURRENCY","bookingNbr","BOOKING_NBR","isLoading","getDailyRevenueReport","is_export_to_excel","previousDateGroupedPayments","btn_color","Lcz_Export","btnStyle","iconPosition","icon_name","icon_style","groupedPayments","Boolean","irHkTasksCss","IrHkTasksStyle0","IrHkTasks","isCleaningLoading","selectedDuration","selectedHouseKeeper","selectedRoom","archiveOpened","hkNameCache","houseKeepingService","table_sorting","handleCloseSidebar","isSidebarOpen","handleSortingChanged","field","direction","handleSkipSelectedTask","modalCauses","task","cause","modal","setLoading","tasksResult","updateTasks","buildHousekeeperNameCache","hk","updateTasksStore","housekeeper","hkm_id","hkName","handleHeaderButtonPress","sortingArray","fetchTasksWithFilters","downloadFile","handleSelectedTaskCleaningEvent","handleModalConfirmation","hkTasksStore","selectedTasks","unit","editHkSkip","COMMENT","HK_SKIP_ID","HK_SKIP_REASON_CODE","executeHKAction","actions","unit_id","clearSelectedTasks","closeModal","applyFilters","isApplyFiltersLoading","export_to_excel","cleaning_periods","dusty_units","highlight_check_ins","onApplyFilters","onRowSelectChange","updateSelectedTasks","autoClose","iconAvailable","icon","leftBtnColor","rightBtnColor","Lcz_Confirmation","getToken","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","handleResetData","updateHKStore","housekeeping_enabled","selectedCleaningFrequency","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","default_properties","flag","toast","position","title","saveCleaningFrequency","setExposedCleaningFrequency","Lcz_HouseKeepingAndCheckInSetup","borderShown","label","Lcz_CheckInOutGuestsAutomatically","showFirstOption","selectedValue","is_automatic_check_in_out","onSelectChange","Lcz_YesAsPerPropertyPolicy","Lcz_NoIWillDoItManually","Lcz_CleaningFrequency","isRequestPending","irMonthlyBookingsReportCss","IrMonthlyBookingsReportStyle0","IrMonthlyBookingsReport","reports","baseFilters","firstOfMonth","startOf","lastOfMonth","endOf","include_previous_year","handleApplyFiltersChange","getReports","units_booked","Units_booked","occupancy_percent","Occupancy","adr","ADR","rooms_revenue","Rooms_Revenue","total_guests","Total_Guests","getMonthlyStats","currentReports","enrichedReports","DailyStats","__rest$2","stats","previousYearReports","formattedReports","current","previous","prev","last_year","alignItems","Occupancy_Difference_From_Previous_Month","cardTitle","AverageOccupancy","toFixed","subtitle","TotalUnitsBooked","PeakDays","pd","OccupancyPercent","irSalesByChannelCss","IrSalesByChannelStyle0","IrSalesByChannel","BOOK_CASE","WINDOW","channelSalesFilters","getExposedAllowedProperties","properties","allowedProperties","LIST_AC_ID","getChannelSales","filterParams","__rest$1","currentSales","shouldFetchPreviousYear","enrichedSales","previousYearSales","subtract","SOURCE","record","groupSalesRecordsBySource","records","getCurrencyId","createKey","trim","currencyId","sumValues","mergeLastYear","base","incoming","NIGHTS","PCT","REVENUE","PROPERTY_ID","PROPERTY_NAME","grouped","existing","merged","values","totalRevenue","sum","lastYearTotal","salesData","irSalesByCountryCss","IrSalesByCountryStyle0","IrSalesByCountry","salesFilters","getCountrySales","mappedCountries","country","formatSalesData","COUNTRY","country_id","COUNTRY_ID","nights","percentage","revenue","number_of_guests","__rest","AC_ID","salesReports","irUserManagementCss","IrUserManagementStyle0","IrUserManagement","isSuperAdmin","allowedUsersTypes","userService","UserService","userTypes","superAdminId","fetchUsers","fetchUserTypes","EMAIL_VERIFIED","updateUserVerificationStatus","idx","u","is_email_verified","getExposedPropertyUsers","u1","u2","priority","p1","p2","username","getSetupEntriesByTableName","getLov","allowedUsers","allowed_user_types","toUpperCase","f","CODE_NAME","disconnectedCallback","suppressToastEndpoints","Lcz_ExtranetUsers","baseUserTypeCode","userTypeCode","haveAdminPrivileges"],"sources":["node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/@socket.io/component-emitter/lib/esm/index.js","node_modules/engine.io-client/build/esm/globals.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/url.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js","src/utils/Queue/batch-queue.ts","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/components/ir-booking-email-logs/ir-booking-email-logs.css?tag=ir-booking-email-logs&encapsulation=scoped","src/components/ir-booking-email-logs/ir-booking-email-logs.tsx","src/components/ir-daily-revenue/ir-daily-revenue.css?tag=ir-daily-revenue&encapsulation=scoped","src/components/ir-daily-revenue/ir-daily-revenue.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.css?tag=ir-monthly-bookings-report&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.tsx","src/components/ir-sales-by-channel/ir-sales-by-channel.css?tag=ir-sales-by-channel&encapsulation=scoped","src/components/ir-sales-by-channel/ir-sales-by-channel.tsx","src/components/ir-sales-by-country/ir-sales-by-country.css?tag=ir-sales-by-country&encapsulation=scoped","src/components/ir-sales-by-country/ir-sales-by-country.tsx","src/components/ir-user-management/ir-user-management.css?tag=ir-user-management&encapsulation=scoped","src/components/ir-user-management/ir-user-management.tsx"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { v4 } from 'uuid';\nimport { BatchProcessor, QueueItem, QueueOptions } from './types';\n\nexport class BatchingQueue<T, R = void> {\n  private queue: QueueItem<T>[] = [];\n  private isProcessing = false;\n  private flushTimer: NodeJS.Timeout | null = null;\n  private readonly options: Required<QueueOptions>;\n  private readonly processor: BatchProcessor<T, R>;\n\n  constructor(processor: BatchProcessor<T, R>, options: QueueOptions) {\n    this.processor = processor;\n    this.options = {\n      maxQueueSize: 10000,\n      onError: error => console.error('Queue processing error:', error),\n      onBatchProcessed: () => {},\n      ...options,\n    };\n  }\n  /**\n   * Add a single item to the queue\n   */\n  offer(data: T): boolean {\n    if (this.queue.length >= this.options.maxQueueSize) {\n      return false; // Queue is full\n    }\n\n    const item: QueueItem<T> = {\n      data,\n      timestamp: Date.now(),\n      id: this.generateId(),\n    };\n\n    this.queue.push(item);\n    this.scheduleFlush();\n    return true;\n  }\n\n  /**\n   * Add multiple items to the queue\n   */\n  offerAll(items: T[]): number {\n    let added = 0;\n    for (const item of items) {\n      if (this.offer(item)) {\n        added++;\n      } else {\n        break; // Queue is full\n      }\n    }\n    return added;\n  }\n\n  /**\n   * Get current queue size\n   */\n  size(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Check if queue is empty\n   */\n  isEmpty(): boolean {\n    return this.queue.length === 0;\n  }\n\n  /**\n   * Force flush the current queue\n   */\n  async flush(): Promise<void> {\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n    await this.processBatch();\n  }\n\n  /**\n   * Clear all items from the queue\n   */\n  clear(): void {\n    this.queue = [];\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n  }\n\n  /**\n   * Shutdown the queue and process remaining items\n   */\n  async shutdown(): Promise<void> {\n    await this.flush();\n  }\n\n  private scheduleFlush(): void {\n    // If we've reached batch size, process immediately\n    if (this.queue.length >= this.options.batchSize) {\n      this.processBatch();\n      return;\n    }\n\n    // If no timer is set, schedule one\n    if (!this.flushTimer) {\n      this.flushTimer = setTimeout(() => {\n        this.processBatch();\n      }, this.options.flushInterval);\n    }\n  }\n\n  private async processBatch(): Promise<void> {\n    if (this.isProcessing || this.queue.length === 0) {\n      return;\n    }\n\n    this.isProcessing = true;\n\n    try {\n      // Extract batch to process\n      const batchSize = Math.min(this.options.batchSize, this.queue.length);\n      const batch = this.queue.splice(0, batchSize);\n      const data = batch.map(item => item.data);\n\n      const startTime = Date.now();\n\n      // Process the batch\n      await this.processor(data);\n\n      const processingTime = Date.now() - startTime;\n      this.options.onBatchProcessed(batchSize, processingTime);\n\n      // Clear the timer since we've processed\n      if (this.flushTimer) {\n        clearTimeout(this.flushTimer);\n        this.flushTimer = null;\n      }\n\n      // If there are more items, schedule next batch\n      if (this.queue.length > 0) {\n        this.scheduleFlush();\n      }\n    } catch (error) {\n      this.options.onError(error as Error);\n    } finally {\n      this.isProcessing = false;\n    }\n  }\n\n  private generateId(): string {\n    return v4();\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n  background-color: #ffffff;\n  height: 100%;\n  text-align: center;\n}\n\n.igl-calendar {\n  display: grid;\n  grid-template-columns: 1fr;\n  height: 100%;\n}\n\n/* .calendarScrollContainer div {\n  position: relative;\n} */\n\n.calendarScrollContainer {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  white-space: nowrap;\n  border-left: 2px solid grey;\n}\n\n.showToBeAssigned,\n.showLegend {\n  grid-template-columns: 330px 1fr;\n}\n\n#calendarContainer {\n  position: absolute;\n}\n\n/* div {\n  position: relative;\n} */\n\n.legendContainer,\n.tobeAssignedContainer {\n  display: none;\n  height: 100%;\n  overflow-y: auto;\n  padding-left: 0.5em !important;\n  padding-right: 0.5em !important;\n}\n\n.showToBeAssigned .tobeAssignedContainer {\n  display: block;\n}\n\n.showLegend .legendContainer {\n  display: block;\n}\n\n.tobeBooked {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-align: left;\n}\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { RoomService } from '@/services/room.service';\nimport { BookingService } from '@/services/booking.service';\nimport { addTwoMonthToDate, computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors, getNextDay, isBlockUnit } from '@/utils/utils';\nimport io, { Socket } from 'socket.io-client';\nimport { EventsService } from '@/services/events.service';\nimport { ICountry, RoomBlockDetails, RoomBookingDetails, RoomDetail, bookingReasons } from '@/models/IBooking';\nimport moment, { Moment } from 'moment';\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\nimport { bookingStatus, calculateDaysBetweenDates, formatName, getPrivateNote, getRoomStatus, transformNewBLockedRooms, transformNewBooking } from '@/utils/booking';\nimport { IRoomNightsData, IRoomNightsDataEventPayload, CalendarModalEvent } from '@/models/property-types';\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport calendar_dates, { addCleaningTasks, addRoomForCleaning, cleanRoom } from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\nimport { addUnassignedDates, handleUnAssignedDatesChange, removeUnassignedDates } from '@/stores/unassigned_dates.store';\nimport Token from '@/models/Token';\nimport { RoomHkStatus, RoomType } from '@/models/booking.dto';\nimport { BatchingQueue } from '@/utils/Queue';\nimport { HKSkipParams, HouseKeepingService } from '@/services/housekeeping.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import Auth from '@/models/Auth';\nexport interface UnitHkStatusChangePayload {\n  PR_ID: number;\n  ROOM_CATEGORY_ID: number;\n  NAME: string;\n  DESCRIPTION: string;\n  ENTRY_USER_ID: number;\n  ENTRY_DATE: string;\n  OWNER_ID: number;\n  IS_ACTIVE: boolean;\n  HKS_CODE: RoomHkStatus;\n  HKM_ID: number;\n  CHECKLIST: null;\n  My_Room_category: null;\n  My_Hkm: null;\n}\nexport type SalesBatchPayload = { rate_plan_id: number; night: string; is_available_to_book: boolean };\nexport type AvailabilityBatchPayload = { room_type_id: number; date: string; availability: number };\nexport type CalendarSidebarState = {\n  type: 'room-guests' | 'booking-details' | 'add-days' | 'bulk-blocks';\n  payload: any;\n};\n@Component({\n  tag: 'igloo-calendar',\n  styleUrl: 'igloo-calendar.css',\n  scoped: true,\n})\nexport class IglooCalendar {\n  @Prop() propertyid: number;\n  @Prop({ mutable: true }) from_date: string;\n  @Prop() to_date: string;\n  @Prop() language: string;\n  @Prop() loadingMessage: string;\n  @Prop() currencyName: string;\n  @Prop() ticket: string = '';\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @Element() private element: HTMLElement;\n\n  @State() calendarData: { [key: string]: any } = new Object();\n  @State() property_id: number;\n  @State() days: { [key: string]: any }[] = new Array();\n  @State() scrollViewDragging: boolean = false;\n  @State() dialogData: CalendarModalEvent | null = null;\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\n  @State() editBookingItem: TIglBookPropertyPayload | null = null;\n  @State() showLegend: boolean = false;\n  @State() showPaymentDetails: boolean = false;\n  @State() showToBeAssigned: boolean = false;\n  @State() unassignedDates = {};\n  @State() roomNightsData: IRoomNightsData | null = null;\n  @State() renderAgain = false;\n  @State() showBookProperty: boolean = false;\n  @State() highlightedDate: string;\n  @State() calDates: { from: string; to: string };\n  @State() isAuthenticated = false;\n  @State() calendarSidebarState: CalendarSidebarState;\n\n  @Event({ bubbles: true, composed: true })\n  dragOverHighlightElement: EventEmitter;\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\n  @Event() calculateUnassignedDates: EventEmitter;\n  @Event({ bubbles: true, composed: true })\n  reduceAvailableUnitEvent: EventEmitter<{ fromDate: string; toDate: string }>;\n  @Event({ bubbles: true }) revertBooking: EventEmitter;\n  @Event() openCalendarSidebar: EventEmitter<CalendarSidebarState>;\n  @Event() showRoomNightsDialog: EventEmitter<IRoomNightsData>;\n\n  private bookingService: BookingService = new BookingService();\n  private roomService: RoomService = new RoomService();\n  private eventsService = new EventsService();\n  private toBeAssignedService = new ToBeAssignedService();\n  private housekeepingService = new HouseKeepingService();\n  // private auth = new Auth();\n  private countries: ICountry[] = [];\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\n  private scrollContainer: HTMLElement;\n  private today: String = '';\n  private reachedEndOfCalendar = false;\n\n  private socket: Socket;\n  private token = new Token();\n  private calendarModalEl: HTMLIrModalElement;\n\n  private salesQueue = new BatchingQueue<SalesBatchPayload[]>(this.processSalesBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Sales Update Error:', e),\n  });\n\n  private availabilityQueue = new BatchingQueue<AvailabilityBatchPayload[]>(this.processAvailabilityBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Availability Update Error:', e),\n  });\n\n  private roomTypeIdsCache: Map<number, { id: number; index: number } | 'skip'> = new Map();\n  private tasksEndDate: string;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    this.init();\n  }\n  componentDidLoad() {\n    this.scrollToElement(this.today);\n  }\n  @Listen('deleteButton')\n  async handleDeleteEvent(ev: CustomEvent) {\n    try {\n      ev.stopImmediatePropagation();\n      ev.preventDefault();\n      await this.eventsService.deleteEvent(ev.detail);\n    } catch (error) {\n      //toastr.error(error);\n    }\n  }\n  @Listen('openCalendarSidebar', { target: 'window' })\n  async handleCalendarSidebarEvents(ev: CustomEvent) {\n    console.log('hit 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥');\n    ev.stopImmediatePropagation();\n    ev.stopPropagation();\n    this.calendarSidebarState = ev.detail;\n  }\n  @Listen('scrollPageToRoom', { target: 'window' })\n  scrollPageToRoom(event: CustomEvent) {\n    let targetScrollClass = event.detail.refClass;\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\n    if (gotoRoom) {\n      this.scrollContainer.scrollTo({ top: 0 });\n      const gotoRect = gotoRoom.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\n      });\n    }\n  }\n  @Listen('showDialog')\n  handleShowDialog(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    this.dialogData = event.detail;\n    this.calendarModalEl?.openModal();\n  }\n  @Listen('showRoomNightsDialog')\n  handleShowRoomNightsDialog(event: CustomEvent<IRoomNightsData>) {\n    this.roomNightsData = event.detail;\n  }\n  @Listen('addBookingDatasEvent')\n  handleBookingDatasChange(event: CustomEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    let bookings = [...this.calendarData.bookingEvents];\n    bookings = bookings.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\n    bookings.push(...event.detail.filter(ev => ev.STATUS === 'PENDING-CONFIRMATION'));\n    this.updateBookingEventsDateRange(event.detail);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n  }\n  @Listen('updateBookingEvent')\n  handleUpdateBookingEvent(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    const newBookingEvent = e.detail;\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (newBookingEvent.ID === event.ID) {\n          return newBookingEvent;\n        }\n        return event;\n      }),\n    };\n  }\n  @Listen('showBookingPopup', { target: 'window' })\n  showBookingPopupEventDataHandler(event: CustomEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.onOptionSelect(event);\n    //console.log(\"show booking event\", event);\n  }\n\n  @Listen('updateEventData')\n  updateEventDataHandler(event: CustomEvent) {\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\n    if (bookedData && event.detail && event.detail.data) {\n      Object.entries(event.detail.data).forEach(([key, value]) => {\n        bookedData[key] = value;\n      });\n    }\n  }\n\n  @Listen('dragOverEventData')\n  dragOverEventDataHandler(event: CustomEvent) {\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\n      this.visibleCalendarCells = { x: [], y: [] };\n\n      containerDays.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.x.push({\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\n          width: htmlElement.offsetWidth,\n          id: htmlElement.getAttribute('data-day'),\n        });\n      });\n\n      containerRooms.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.y.push({\n          top: htmlElement.offsetTop,\n          height: htmlElement.offsetHeight,\n          id: htmlElement.getAttribute('data-room'),\n        });\n      });\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER') {\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  private init() {\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    handleUnAssignedDatesChange('unassigned_dates', newValue => {\n      if (Object.keys(newValue).length === 0 && this.highlightedDate !== '') {\n        this.highlightedDate = '';\n      }\n    });\n  }\n  private renderModalBody() {\n    switch (this.dialogData?.reason) {\n      case 'checkin': {\n        return `Are you sure you want to Check In this unit?`;\n      }\n      case 'checkout': {\n        return 'Are you sure you want to Check Out this unit?';\n      }\n      case 'reallocate':\n        return this.dialogData?.description || '';\n      case 'stretch':\n        return 'Warning ';\n      default:\n        return 'Unknown modal content';\n    }\n  }\n  private setUpCalendarData(roomResp, bookingResp) {\n    this.calendarData.currency = roomResp['My_Result'].currency;\n    this.calendarData.allowedBookingSources = roomResp['My_Result'].allowed_booking_sources;\n    this.calendarData.adultChildConstraints = roomResp['My_Result'].adult_child_constraints;\n    this.calendarData.legendData = this.getLegendData(roomResp);\n    this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\n    this.calendarData.from_date = bookingResp.My_Params_Get_Rooming_Data.FROM;\n    this.calendarData.to_date = bookingResp.My_Params_Get_Rooming_Data.TO;\n    this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\n    this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\n    this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\n    let bookings = bookingResp.myBookings || [];\n    bookings = bookings.filter(bookingEvent => {\n      const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n      const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n      return !toDate.isSame(fromDate);\n    });\n    this.calendarData.bookingEvents = bookings;\n\n    this.calendarData.toBeAssignedEvents = [];\n  }\n\n  async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n          include_sales_rate_plans: true,\n        });\n        roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [\n        this.bookingService.getCalendarData(propertyId, this.from_date, this.to_date),\n        this.bookingService.getCountries(this.language),\n        this.roomService.fetchLanguage(this.language),\n        this.housekeepingService.getExposedHKSetup(this.property_id),\n      ];\n\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      // this.tasksEndDate=housekeeping_store?.hk_criteria?.cleaning_periods[housekeeping_store?.hk_criteria?.cleaning_periods.length - 1].code\n      this.tasksEndDate = moment().add(30, 'days').format('YYYY-MM-DD');\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n      if (!roomResp) {\n        roomResp = results[results.length - 1];\n      }\n      const [bookingResp, countries] = results as any;\n      calendar_dates.days = bookingResp.days;\n      calendar_dates.months = bookingResp.months;\n      this.setRoomsData(roomResp);\n      this.countries = countries;\n      this.setUpCalendarData(roomResp, bookingResp);\n      let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\n      this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\n      this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\n      this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\n      this.today = this.transformDateForScroll(new Date());\n      let startingDay: Date = new Date(this.calendarData.startingDate);\n      startingDay.setHours(0, 0, 0, 0);\n      this.days = bookingResp.days;\n      this.calendarData.days = this.days;\n      this.calendarData.monthsInfo = bookingResp.months;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      calendar_dates.toDate = this.calendarData.to_date;\n\n      setTimeout(() => {\n        this.scrollToElement(this.today);\n      }, 200);\n      if (!this.calendarData.is_vacation_rental) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, this.from_date, this.to_date);\n        this.unassignedDates = { fromDate: this.from_date, toDate: this.to_date, data: { ...this.unassignedDates, ...data } };\n        this.calendarData = { ...this.calendarData, unassignedDates: data };\n        addUnassignedDates(data);\n      }\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.error('Initializing Calendar Error', error);\n    }\n  }\n  private async getHousekeepingTasks({ from_date, to_date }: { from_date: string; to_date: string }) {\n    const { tasks } = await this.housekeepingService.getHkTasks({\n      property_id: this.property_id,\n      from_date,\n      to_date,\n      housekeepers: [],\n      cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n      dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n      highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n    });\n    addCleaningTasks(tasks);\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result: any;\n    if (['DELETE_CALENDAR_POOL', 'GET_UNASSIGNED_DATES'].includes(REASON)) {\n      result = PAYLOAD;\n    } else {\n      result = JSON.parse(PAYLOAD);\n    }\n    console.log({ [REASON]: result });\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n      DORESERVATION: this.handleDoReservation,\n      BLOCK_EXPOSED_UNIT: this.handleBlockExposedUnit,\n      ASSIGN_EXPOSED_ROOM: this.handleAssignExposedRoom,\n      REALLOCATE_EXPOSED_ROOM_BLOCK: this.handleReallocateExposedRoomBlock,\n      DELETE_CALENDAR_POOL: this.handleDeleteCalendarPool,\n      GET_UNASSIGNED_DATES: this.handleGetUnassignedDates,\n      UPDATE_CALENDAR_AVAILABILITY: r => this.availabilityQueue.offer(r),\n      CHANGE_IN_DUE_AMOUNT: this.handleChangeInDueAmount,\n      CHANGE_IN_BOOK_STATUS: this.handleChangeInBookStatus,\n      NON_TECHNICAL_CHANGE_IN_BOOKING: this.handleNonTechnicalChangeInBooking,\n      ROOM_STATUS_CHANGED: this.handleRoomStatusChanged,\n      UNIT_HK_STATUS_CHANGED: this.handleUnitHKStatusChanged,\n      SHARING_PERSONS_UPDATED: this.handleSharingPersonsUpdated,\n      ROOM_TYPE_CLOSE: r => this.salesQueue.offer({ ...r, is_available_to_book: false }),\n      ROOM_TYPE_OPEN: r => this.salesQueue.offer({ ...r, is_available_to_book: true }),\n      HK_SKIP: this.handleHkSkip,\n    };\n\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n  private handleSharingPersonsUpdated(result: any) {\n    console.log('sharing persons updated', result);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.identifier) {\n            const mainGuest = result.guests?.find(p => p.is_main);\n            return { ...e, NAME: formatName(mainGuest.first_name, mainGuest.last_name), ROOM_INFO: { ...e.ROOM_INFO, sharing_persons: result.guests } };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleRoomStatusChanged(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.room_identifier) {\n            const STATUS = getRoomStatus({\n              from_date: e.FROM_DATE,\n              to_date: e.TO_DATE,\n              in_out: { ...e.ROOM_INFO.in_out, code: result.status },\n              status_code: e.BASE_STATUS_CODE,\n            });\n            return {\n              ...e,\n              CHECKIN: result.status === '001',\n              CHECKOUT: result.status === '002',\n              STATUS,\n            };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleHkSkip(result: HKSkipParams) {\n    cleanRoom({ date: result.DATE, unitId: result.PR_ID });\n  }\n  private handleUnitHKStatusChanged(result: UnitHkStatusChangePayload) {\n    console.log('hk unit change', result);\n    const updatedRooms: RoomType[] = [...this.calendarData.roomsInfo];\n    const changedRoomTypeIdx = updatedRooms.findIndex((roomType: RoomType) => roomType.id === result.ROOM_CATEGORY_ID);\n    if (changedRoomTypeIdx !== -1) {\n      const changedRoomType = { ...updatedRooms[changedRoomTypeIdx] };\n      const changedPhysicalRoomIdx = changedRoomType.physicalrooms.findIndex(room => room.id === result.PR_ID);\n      if (changedPhysicalRoomIdx !== -1) {\n        const updatedPhysicalRooms = [...changedRoomType.physicalrooms];\n        const targetPhysicalRoom = { ...updatedPhysicalRooms[changedPhysicalRoomIdx] };\n        targetPhysicalRoom.hk_status = result.HKS_CODE;\n        updatedPhysicalRooms[changedPhysicalRoomIdx] = targetPhysicalRoom;\n        changedRoomType.physicalrooms = updatedPhysicalRooms;\n        updatedRooms[changedRoomTypeIdx] = changedRoomType;\n        this.calendarData = {\n          ...this.calendarData,\n          roomsInfo: updatedRooms,\n        };\n      }\n    }\n    const roomPayload = { date: moment().format('YYYY-MM-DD'), unitId: result.PR_ID };\n    if (result.HKS_CODE === '002') {\n      addRoomForCleaning(roomPayload);\n    } else {\n      cleanRoom(roomPayload);\n    }\n  }\n  private async handleDoReservation(result: any) {\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleBlockExposedUnit(result: any) {\n    const transformedBooking = [await transformNewBLockedRooms(result)];\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleAssignExposedRoom(result: any) {\n    console.log(result);\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleReallocateExposedRoomBlock(result: any) {\n    await this.handleBlockExposedUnit(result);\n  }\n\n  private async handleDeleteCalendarPool(result: any) {\n    console.log('delete calendar pool');\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.filter(e => e.POOL !== result),\n    };\n  }\n\n  private async handleGetUnassignedDates(result: any) {\n    const parsedResult = this.parseDateRange(result);\n    if (\n      !this.calendarData.is_vacation_rental &&\n      new Date(parsedResult.FROM_DATE).getTime() >= this.calendarData.startingDate &&\n      new Date(parsedResult.TO_DATE).getTime() <= this.calendarData.endingDate\n    ) {\n      const data = await this.toBeAssignedService.getUnassignedDates(\n        this.property_id,\n        dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        dateToFormattedString(new Date(parsedResult.TO_DATE)),\n      );\n      addUnassignedDates(data);\n      this.unassignedDates = {\n        fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        data,\n      };\n      if (Object.keys(data).length === 0) {\n        removeUnassignedDates(dateToFormattedString(new Date(parsedResult.FROM_DATE)), dateToFormattedString(new Date(parsedResult.TO_DATE)));\n        this.reduceAvailableUnitEvent.emit({\n          fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n          toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        });\n      }\n    }\n  }\n\n  private parseDateRange(str: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    const pairs = str.split('|');\n\n    pairs.forEach(pair => {\n      const res = pair.split(':');\n      result[res[0]] = res[1];\n    });\n    return result;\n  }\n\n  private handleChangeInDueAmount(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return { ...event, BALANCE: result.due_amount };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleChangeInBookStatus(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return {\n            ...event,\n            STATUS: event.STATUS !== 'IN-HOUSE' ? bookingStatus[result.status_code] : result.status_code === '001' ? bookingStatus[result.status_code] : 'IN-HOUSE',\n          };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleNonTechnicalChangeInBooking(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (event.BOOKING_NUMBER === result.booking_nbr) {\n          return { ...event, PRIVATE_NOTE: getPrivateNote(result.extras) };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private checkBookingAvailability(data) {\n    return this.calendarData.bookingEvents.some(\n      booking => booking.ID === data.ID || (booking.FROM_DATE === data.FROM_DATE && booking.TO_DATE === data.TO_DATE && booking.PR_ID === data.PR_ID),\n    );\n  }\n\n  private updateBookingEventsDateRange(eventData) {\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        // if (calendar_data.checkin_enabled) {\n        bookingEvent.STATUS = getRoomStatus({\n          in_out: bookingEvent.ROOM_INFO?.in_out,\n          from_date: bookingEvent.FROM_DATE,\n          to_date: bookingEvent.TO_DATE,\n          status_code: bookingEvent.BASE_STATUS_CODE,\n        });\n        // } else {\n        //   const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        //   const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        //   if (bookingEvent.STATUS !== 'PENDING') {\n        //     if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['003'];\n        //     }\n        //   }\n        // }\n      }\n    });\n  }\n  /**\n   * \n   *private updateBookingEventsDateRange(eventData) {\n    const now = moment();\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        if (bookingEvent.STATUS !== 'PENDING') {\n          if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n            bookingEvent.STATUS = bookingStatus['003'];\n          }\n        }\n      }\n    });\n  }\n   */\n  private processSalesBatch(batch: SalesBatchPayload[]) {\n    const days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const sale of batch) {\n      // 1) find the day index\n      const dayIdx = days.findIndex(d => d.value === sale.night);\n      if (dayIdx === -1) {\n        console.warn(`Couldn't find day ${sale.night}`);\n        continue;\n      }\n\n      // 2) check cache entry\n      let entry = this.roomTypeIdsCache.get(sale.rate_plan_id);\n      if (entry === 'skip') {\n        // previously determined no matching room type for this rate_plan_id\n        continue;\n      }\n\n      // 3) if not cached, look it up and cache it\n      if (!entry) {\n        const rtIdx = days[dayIdx].rate.findIndex(rt => rt.rateplans.some(rp => rp.id === sale.rate_plan_id));\n        if (rtIdx === -1) {\n          this.roomTypeIdsCache.set(sale.rate_plan_id, 'skip');\n          console.warn(`Couldn't find room type for rate plan ${sale.rate_plan_id}`);\n          continue;\n        }\n        const roomType = days[dayIdx].rate[rtIdx];\n        const rpIdx = roomType.rateplans.findIndex(rp => rp.id === sale.rate_plan_id);\n        entry = { id: rtIdx, index: rpIdx };\n        this.roomTypeIdsCache.set(sale.rate_plan_id, entry);\n      }\n\n      // 4) apply cached indices\n      const { id: roomTypeIdx, index: ratePlanIdx } = entry as { id: number; index: number };\n      const roomType = days[dayIdx].rate[roomTypeIdx];\n\n      // 5) update that specific rateplan\n      const updatedRateplans = roomType.rateplans.map((rp, i) => (i === ratePlanIdx ? { ...rp, is_available_to_book: sale.is_available_to_book } : rp));\n      const is_available_to_book = updatedRateplans.some(rp => rp.is_available_to_book);\n      days[dayIdx].rate[roomTypeIdx] = {\n        ...roomType,\n        rateplans: updatedRateplans,\n        // overall room availability = true if any rateplan is bookable\n        is_available_to_book,\n      };\n      //update the disabled cells\n      for (const room of roomType.physicalrooms) {\n        const key = `${room.id}_${days[dayIdx].value}`;\n        disabled_cells.set(key, { disabled: !is_available_to_book, reason: 'stop_sale' });\n      }\n    }\n\n    // 6) write back to the store\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = days;\n  }\n  private processAvailabilityBatch(batch: AvailabilityBatchPayload[]) {\n    let days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const queue of batch) {\n      //find the selected day\n      const index = days.findIndex(day => day.value === queue.date);\n      if (index === -1) {\n        console.warn(`Couldn't find day ${queue.date}`);\n        return;\n      }\n      //find room_type_id\n      const room_type_index = days[index].rate.findIndex(room => room.id === queue.room_type_id);\n      if (room_type_index === -1) {\n        console.warn(`Couldn't find room type ${queue.room_type_id}`);\n        return;\n      }\n      const room_type = days[index].rate[room_type_index];\n      //update the availability\n      room_type.exposed_inventory.rts = queue.availability;\n      // if (queue.availability === 0) {\n      const isClosed = room_type.rateplans.every(rp => !rp.is_available_to_book);\n      for (const room of room_type.physicalrooms) {\n        const key = `${room.id}_${queue.date}`;\n        disabled_cells.set(key, { disabled: queue.availability === 0, reason: isClosed ? 'stop_sale' : 'inventory' });\n      }\n      // }\n    }\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = [...days];\n  }\n\n  private setRoomsData(roomServiceResp) {\n    let roomsData: RoomDetail[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    calendar_data.roomsInfo = roomsData;\n    this.calendarData.roomsInfo = roomsData;\n  }\n\n  private getLegendData(aData) {\n    return aData['My_Result'].calendar_legends;\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n\n  private scrollToElement(goToDate) {\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\n    if (gotoDay) {\n      this.scrollContainer.scrollTo({ left: 0 });\n      const gotoRect = gotoDay.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\n      });\n    }\n  }\n  private AddOrUpdateRoomBookings(data: RoomBlockDetails[] | RoomBookingDetails[], pool: string | undefined = undefined) {\n    let bookings = [...this.calendarData.bookingEvents];\n    data.forEach(d => {\n      if (!this.checkBookingAvailability(d)) {\n        bookings = bookings.filter(booking => booking.ID !== d.ID);\n      }\n    });\n    this.updateBookingEventsDateRange(data);\n    if (pool) {\n      bookings = bookings.filter(booking => booking.POOL === pool);\n    }\n    data.forEach(d => {\n      if (!bookings.some(booking => booking.ID === d.ID)) {\n        bookings.push(d);\n      }\n    });\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n\n    const isDateInBetweenTheLastPeriodDate = (d: any): boolean => {\n      const endDate = moment(this.tasksEndDate, 'YYYY-MM-DD');\n      // return moment(d.FROM_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate) || moment(d.TO_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate);\n      return moment(d.FROM_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date') || moment(d.TO_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date');\n    };\n\n    if (data.some(isDateInBetweenTheLastPeriodDate)) {\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n    }\n  }\n\n  private transformDateForScroll(date: Date) {\n    return moment(date).format('D_M_YYYY');\n  }\n\n  shouldRenderCalendarView() {\n    // console.log(\"rendering...\")\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\n  }\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\n    const opt: { [key: string]: any } = event.detail;\n    const calendarElement = this.element.querySelector('#iglooCalendar');\n    switch (opt.key) {\n      case 'showAssigned':\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.toggle('showToBeAssigned');\n\n        this.showLegend = false;\n        this.showToBeAssigned = true;\n        break;\n      case 'showLegend':\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.toggle('showLegend');\n\n        this.showLegend = true;\n        this.showToBeAssigned = false;\n        break;\n      case 'calendar':\n        let dt = new Date();\n        if (opt.data.start !== undefined && opt.data.end !== undefined) {\n          dt = opt.data.start.toDate();\n          this.handleDateSearch(opt.data);\n        } else {\n          //scroll to unassigned dates\n          dt = new Date(opt.data);\n          dt.setDate(dt.getDate() + 1);\n          if (!opt?.noScroll) {\n            this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\n          }\n        }\n        this.highlightedDate = this.transformDateForScroll(dt);\n        break;\n      case 'search':\n        break;\n      case 'bulk':\n        this.calendarSidebarState = {\n          type: 'bulk-blocks',\n          payload: null,\n        };\n        break;\n      case 'add':\n        //console.log('data:', opt.data);\n        if (opt.data.event_type !== 'EDIT_BOOKING') {\n          this.bookingItem = opt.data;\n        } else {\n          this.editBookingItem = opt.data;\n        }\n        break;\n      case 'gotoToday':\n        this.scrollToElement(this.today);\n        break;\n      case 'closeSideMenu':\n        this.closeSideMenu();\n        this.highlightedDate = '';\n        this.showBookProperty = false;\n        break;\n    }\n  }\n\n  private async addDatesToCalendar(fromDate: string, toDate: string) {\n    const [results] = await Promise.all([this.bookingService.getCalendarData(this.property_id, fromDate, toDate)]);\n\n    const newBookings = results.myBookings || [];\n    this.updateBookingEventsDateRange(newBookings);\n    if (new Date(fromDate).getTime() < new Date(this.calendarData.startingDate).getTime()) {\n      this.calendarData.startingDate = new Date(fromDate).getTime();\n      this.calendarData.from_date = fromDate;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      this.days = [...results.days, ...this.days];\n      let newMonths = [...results.months];\n      if (this.calendarData.monthsInfo[0].monthName === results.months[results.months.length - 1].monthName) {\n        this.calendarData.monthsInfo[0].daysCount = this.calendarData.monthsInfo[0].daysCount + results.months[results.months.length - 1].daysCount;\n        newMonths.pop();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE = newBooking.FROM_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            newBooking.FROM_DATE,\n            this.calendarData.bookingEvents[existingBookingIndex].TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...newMonths, ...this.calendarData.monthsInfo],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      if (Math.abs(moment().diff(moment(fromDate, 'YYYY-MM-DD'), 'days')) <= 10) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n        this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n        this.unassignedDates = {\n          fromDate,\n          toDate,\n          data,\n        };\n        addUnassignedDates(data);\n      }\n    } else {\n      this.calendarData.endingDate = new Date(toDate).getTime();\n      this.calendarData.to_date = toDate;\n      calendar_dates.toDate = this.calendarData.to_date;\n      let newMonths = [...results.months];\n      this.days = [...this.days, ...results.days];\n      if (this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].monthName === results.months[0].monthName) {\n        this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount =\n          this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount + results.months[0].daysCount;\n        newMonths.shift();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].TO_DATE = newBooking.TO_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE,\n            newBooking.TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      //calendar_dates.months = bookingResp.months;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...this.calendarData.monthsInfo, ...newMonths],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n      this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n      this.unassignedDates = {\n        fromDate,\n        toDate,\n        data,\n      };\n      addUnassignedDates(data);\n    }\n  }\n  async handleDateSearch(dates: { start: Moment; end: Moment }) {\n    const startDate = moment(dates.start).toDate();\n    const defaultFromDate = moment(this.calDates.from).toDate();\n    const endDate = dates.end.toDate();\n    const defaultToDate = this.calendarData.endingDate;\n    if (startDate.getTime() < new Date(this.calDates.from).getTime()) {\n      await this.addDatesToCalendar(moment(startDate).add(-1, 'days').format('YYYY-MM-DD'), moment(defaultFromDate).add(-1, 'days').format('YYYY-MM-DD'));\n      this.calDates = { ...this.calDates, from: dates.start.add(-1, 'days').format('YYYY-MM-DD') };\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultFromDate.getTime() && startDate.getTime() < defaultToDate && endDate.getTime() < defaultToDate) {\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultToDate) {\n      const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n      await this.addDatesToCalendar(nextDay, moment(endDate).add(2, 'months').format('YYYY-MM-DD'));\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    }\n  }\n\n  private closeSideMenu() {\n    // const calendarElement = this.element.querySelector('#iglooCalendar');\n    // calendarElement.classList.remove('showToBeAssigned');\n    // calendarElement.classList.remove('showLegend');\n\n    this.showLegend = false;\n    this.showToBeAssigned = false;\n  }\n\n  private scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\n  private dragScrollContent(event: MouseEvent) {\n    this.scrollViewDragging = false;\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\n    if (!isPreventPageScroll && event.buttons === 1) {\n      this.scrollViewDragPos = {\n        left: this.scrollContainer.scrollLeft,\n        top: this.scrollContainer.scrollTop,\n        x: event.clientX,\n        y: event.clientY,\n      };\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\n    }\n  }\n\n  private onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\n    if (event.buttons !== 1) {\n      return;\n    }\n\n    const dx = event.clientX - this.scrollViewDragPos.x;\n    const dy = event.clientY - this.scrollViewDragPos.y;\n\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\n      this.scrollViewDragging = true;\n    }\n  };\n\n  private onScrollContentMoveEndHandler: EventListener = () => {\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\n  };\n\n  private calendarScrolling() {\n    if (this.scrollContainer) {\n      if (this.highlightedDate) {\n        const highlightedElement = document.querySelector(`.day-${this.highlightedDate}`);\n        if (highlightedElement) {\n          const { left, right } = highlightedElement.getBoundingClientRect();\n          const isVisible = left >= 0 && right <= window.innerWidth;\n          if (!isVisible) {\n            this.highlightedDate = '';\n          }\n        }\n      }\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      let leftSideMenuSize = 170;\n      let maxWidth = containerRect.width - leftSideMenuSize;\n      let leftX = containerRect.x + leftSideMenuSize;\n      let rightX = containerRect.x + containerRect.width;\n\n      let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\n\n      if (cells.length) {\n        cells.map(async (monthContainer: HTMLElement) => {\n          let monthRect = monthContainer.getBoundingClientRect();\n          if (cells.indexOf(monthContainer) === cells.length - 1) {\n            if (monthRect.x + monthRect.width <= rightX && !this.reachedEndOfCalendar) {\n              this.reachedEndOfCalendar = true;\n              //await this.addNextTwoMonthsToCalendar();\n              const nextTwoMonths = addTwoMonthToDate(new Date(this.calendarData.endingDate));\n              const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n              await this.addDatesToCalendar(nextDay, nextTwoMonths);\n              this.reachedEndOfCalendar = false;\n            }\n          }\n          if (monthRect.x + monthRect.width < leftX) {\n            // item end is scrolled outside view, in -x\n          } else if (monthRect.x > rightX) {\n            // item is outside scrollview, in +x\n          } else {\n            let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\n            let marginLeft = 0;\n            let monthWidth = monthRect.width;\n            if (monthRect.x < leftX) {\n              marginLeft = Math.abs(monthRect.x) - leftX;\n              marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\n              monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\n            } else {\n              monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\n            }\n            titleElement.style.marginLeft = marginLeft + 'px';\n            titleElement.style.width = monthWidth + 'px';\n          }\n        });\n      }\n    }\n  }\n\n  private hasAncestorWithClass(element: HTMLElement, className: string): boolean {\n    let currentElement = element;\n    while (currentElement !== null) {\n      if (currentElement.matches(`.${className}`)) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n\n  private async highlightDragOver(hightLightElement, currentPosition) {\n    let xElement, yElement;\n    if (currentPosition) {\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\n    }\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\n    if (hightLightElement && xElement && yElement) {\n      this.dragOverHighlightElement.emit({\n        dragOverElement: yElement.id + '_' + xElement.id,\n      });\n    } else {\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\n    }\n    if (!hightLightElement) {\n      this.moveBookingTo.emit({\n        bookingId: currentPosition.id,\n        fromRoomId: currentPosition.fromRoomId,\n        toRoomId: (yElement && yElement.id) || 'revert',\n        moveToDay: (xElement && xElement.id) || 'revert',\n        pool: currentPosition.pool,\n        from_date: convertDMYToISO(xElement && xElement.id),\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\n      });\n    }\n  }\n  private handleModalConfirm() {\n    // Helper to reset modal state\n    const resetModalState = () => {\n      this.dialogData = null;\n    };\n\n    try {\n      switch (this.dialogData?.reason) {\n        case 'checkin':\n        case 'checkout': {\n          const { bookingNumber, roomIdentifier } = this.dialogData;\n          const status = this.dialogData.reason === 'checkin' ? '001' : '002';\n          this.bookingService.handleExposedRoomInOut({ booking_nbr: bookingNumber, room_identifier: roomIdentifier, status }).finally(resetModalState);\n          if (this.dialogData.reason === 'checkin') {\n            this.openCalendarSidebar.emit({ type: 'room-guests', payload: this.dialogData.sidebarPayload });\n          }\n          break;\n        }\n        case 'stretch':\n          const { reason, ...rest } = this.dialogData;\n          this.showRoomNightsDialog.emit(rest);\n          break;\n        case 'reallocate': {\n          if (!this.dialogData) {\n            console.warn('No dialog data available for reallocation.');\n            return;\n          }\n          const { pool, toRoomId, from_date, to_date } = this.dialogData;\n\n          // Handle room reallocation\n          this.eventsService\n            .reallocateEvent(pool, toRoomId, from_date, to_date)\n            .then(resetModalState)\n            .catch(() => {\n              console.error('Reallocation failed. Reverting booking.');\n              this.revertBooking.emit(pool);\n            })\n            .finally(resetModalState);\n          break;\n        }\n\n        default:\n          resetModalState();\n          break;\n      }\n    } catch (error) {\n      console.error('Error handling modal confirm:', error);\n      resetModalState();\n    }\n  }\n  private handleModalCancel() {\n    if (this.dialogData?.reason === 'reallocate' || this.dialogData.reason === 'stretch') {\n      this.revertBooking.emit(this.dialogData.pool);\n    }\n    this.dialogData = null;\n  }\n  private handleRoomNightsDialogClose(e: CustomEvent<IRoomNightsDataEventPayload>) {\n    if (e.detail.type === 'cancel') {\n      this.revertBooking.emit(this.roomNightsData.pool);\n    }\n    this.roomNightsData = null;\n  }\n  private handleSideBarToggle(e: CustomEvent<boolean>) {\n    if (e.detail) {\n      this.calendarSidebarState = null;\n      if (this.editBookingItem) {\n        this.editBookingItem = null;\n      }\n      if (this.roomNightsData) {\n        this.revertBooking.emit(this.roomNightsData.pool);\n        this.roomNightsData = null;\n      }\n      if (this.dialogData?.reason === 'reallocate') {\n        this.revertBooking.emit(this.dialogData.pool);\n        this.dialogData = null;\n      }\n    }\n  }\n  private handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  render() {\n    // if (!this.isAuthenticated) {\n    //   return <ir-login onAuthFinish={() => this.auth.setIsAuthenticated(true)}></ir-login>;\n    // }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <div id=\"iglooCalendar\" class={{ 'igl-calendar': true, 'showToBeAssigned': this.showToBeAssigned, 'showLegend': this.showLegend }}>\n          {this.shouldRenderCalendarView() ? (\n            <Fragment data-testid=\"ir-calendar\">\n              {this.showToBeAssigned && (\n                <igl-to-be-assigned\n                  unassignedDatesProp={this.unassignedDates}\n                  to_date={this.to_date}\n                  from_date={this.from_date}\n                  propertyid={this.property_id}\n                  class=\"tobeAssignedContainer\"\n                  calendarData={this.calendarData}\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\n                ></igl-to-be-assigned>\n              )}\n              {this.showLegend && <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>}\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\n                <div id=\"calendarContainer\">\n                  <igl-cal-header\n                    unassignedDates={this.unassignedDates}\n                    to_date={this.to_date}\n                    propertyid={this.property_id}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    highlightedDate={this.highlightedDate}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-header>\n                  <igl-cal-body\n                    propertyId={this.property_id}\n                    language={this.language}\n                    countries={this.countries}\n                    currency={this.calendarData.currency}\n                    today={this.today}\n                    highlightedDate={this.highlightedDate}\n                    isScrollViewDragging={this.scrollViewDragging}\n                    calendarData={this.calendarData}\n                  ></igl-cal-body>\n                  <igl-cal-footer\n                    highlightedDate={this.highlightedDate}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-footer>\n                </div>\n              </div>\n            </Fragment>\n          ) : (\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\n          )}\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowedBookingSources}\n            adultChildConstraints={this.calendarData.adultChildConstraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.property_id}\n            bookingData={this.bookingItem}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={!!this.calendarSidebarState || this.roomNightsData !== null || (this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING')}\n          showCloseButton={false}\n          sidebarStyles={{\n            width: this.calendarSidebarState?.type === 'room-guests' ? '60rem' : this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.editBookingItem ? '#F2F3F8' : 'white',\n          }}\n        >\n          {this.roomNightsData && (\n            <ir-room-nights\n              slot=\"sidebar-body\"\n              pool={this.roomNightsData.pool}\n              onCloseRoomNightsDialog={this.handleRoomNightsDialogClose.bind(this)}\n              language={this.language}\n              bookingNumber={this.roomNightsData.bookingNumber}\n              identifier={this.roomNightsData.identifier}\n              toDate={this.roomNightsData.to_date}\n              fromDate={this.roomNightsData.from_date}\n              defaultDates={this.roomNightsData.defaultDates}\n              ticket={this.ticket}\n              propertyId={this.property_id}\n            ></ir-room-nights>\n          )}\n          {this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING' && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              hasPrint\n              hasReceipt\n              hasCloseButton\n              onCloseSidebar={() => (this.editBookingItem = null)}\n              is_from_front_desk\n              propertyid={this.property_id}\n              hasRoomEdit\n              hasRoomDelete\n              bookingNumber={this.editBookingItem.BOOKING_NUMBER}\n              ticket={this.ticket}\n              language={this.language}\n              hasRoomAdd\n            ></ir-booking-details>\n          )}\n          {this.calendarSidebarState?.type === 'room-guests' && (\n            <ir-room-guests\n              countries={this.countries}\n              language={this.language}\n              identifier={this.calendarSidebarState?.payload?.identifier}\n              bookingNumber={this.calendarSidebarState?.payload.bookingNumber}\n              roomName={this.calendarSidebarState?.payload?.roomName}\n              totalGuests={this.calendarSidebarState?.payload?.totalGuests}\n              sharedPersons={this.calendarSidebarState?.payload?.sharing_persons}\n              slot=\"sidebar-body\"\n              checkIn={this.calendarSidebarState?.payload?.checkin}\n              onCloseModal={() => (this.calendarSidebarState = null)}\n            ></ir-room-guests>\n          )}\n          {this.calendarSidebarState?.type === 'bulk-blocks' && (\n            <igl-bulk-operations slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-operations>\n            // <igl-bulk-stop-sale slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-stop-sale>\n          )}\n        </ir-sidebar>\n        <ir-modal\n          ref={el => (this.calendarModalEl = el)}\n          modalTitle={''}\n          rightBtnActive={this.dialogData?.reason === 'reallocate' ? !this.dialogData.hideConfirmButton : true}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          rightBtnText={locales?.entries?.Lcz_Confirm}\n          modalBody={this.renderModalBody()}\n          onConfirmModal={this.handleModalConfirm.bind(this)}\n          onCancelModal={this.handleModalCancel.bind(this)}\n        ></ir-modal>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport axios from 'axios';\n\n@Component({\n  tag: 'ir-booking-email-logs',\n  styleUrl: 'ir-booking-email-logs.css',\n  scoped: true,\n})\nexport class IrBookingEmailLogs {\n  @Prop() ticket: string;\n\n  @State() data: any[];\n  @State() bookingNumber: string;\n\n  private token = new Token();\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  @Watch('ticket')\n  handleTicketChange() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"p-1\">\n        <ir-interceptor handledEndpoints={['/Get_Email_log_By_BOOK_NBR']}></ir-interceptor>\n        <ir-toast></ir-toast>\n        <div class=\"d-flex align-items-center mb-1\" style={{ gap: '0.5rem' }}>\n          <ir-input-text\n            class=\"m-0\"\n            inputContainerStyle={{ margin: '0' }}\n            value={this.bookingNumber}\n            onTextChange={e => (this.bookingNumber = e.detail)}\n            placeholder=\"booking number\"\n          ></ir-input-text>\n          <ir-button\n            size=\"sm\"\n            text=\"search\"\n            onClickHandler={async () => {\n              const { data } = await axios.post('/Get_Email_log_By_BOOK_NBR', {\n                BOOK_NBR: this.bookingNumber,\n              });\n              if (data.ExceptionMsg) {\n                return;\n              }\n              this.data = data.My_Result;\n            }}\n          ></ir-button>\n        </div>\n        <p>{JSON.stringify(this.data, null, 2)}</p>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.daily-revenue__meta {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n.daily-revenue__table {\n  flex: 1 1 0%;\n}\n\n/*sm*/\n@media (min-width: 768px) {\n  .daily-revenue__meta {\n    flex-direction: row;\n  }\n}\n","import Token from '@/models/Token';\nimport { BookingService } from '@/services/booking.service';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyPaymentFilter, FolioPayment, GroupedFolioPayment, SidebarOpenEvent } from './types';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport { PaymentEntries } from '../ir-booking-details/types';\n\n@Component({\n  tag: 'ir-daily-revenue',\n  styleUrl: 'ir-daily-revenue.css',\n  scoped: true,\n})\nexport class IrDailyRevenue {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading: boolean;\n  @State() property_id: number;\n  @State() groupedPayment: GroupedFolioPayment;\n  @State() previousDateGroupedPayments: GroupedFolioPayment;\n  @State() isLoading: string;\n  @State() filters: DailyPaymentFilter = { date: moment().format('YYYY-MM-DD'), users: null };\n  @State() sideBarEvent: SidebarOpenEvent | null;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n  private paymentEntries: PaymentEntries;\n\n  @Event() preventPageLoad: EventEmitter<null>;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.tokenService.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('revenueOpenSidebar')\n  handleOpenSidebar(e: CustomEvent<SidebarOpenEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = e.detail;\n  }\n  @Listen('fetchNewReports')\n  handleFetchNewReports(e: CustomEvent<DailyPaymentFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...e.detail };\n    this.getPaymentReports();\n  }\n  @Listen('resetBookingEvt')\n  async handleResetBooking(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.getPaymentReports(false, true);\n  }\n\n  private handleSidebarClose = (e: CustomEvent) => {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = null;\n  };\n\n  private renderSidebarBody() {\n    if (!this.sideBarEvent) {\n      return;\n    }\n    switch (this.sideBarEvent.type) {\n      case 'booking':\n        return (\n          <ir-booking-details\n            slot=\"sidebar-body\"\n            hasPrint\n            hasReceipt\n            hasCloseButton\n            onCloseSidebar={this.handleSidebarClose}\n            is_from_front_desk\n            propertyid={this.property_id}\n            hasRoomEdit\n            hasRoomDelete\n            bookingNumber={this.sideBarEvent.payload.bookingNumber.toString()}\n            ticket={this.ticket}\n            language={this.language}\n            hasRoomAdd\n          ></ir-booking-details>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private async initializeApp() {\n    this.isPageLoading = true;\n\n    try {\n      let propertyId = this.propertyid;\n      if (!propertyId && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      this.property_id = propertyId;\n\n      const requests: Promise<any>[] = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP', '_PAY_METHOD']),\n        this.getPaymentReports(),\n        this.roomService.fetchLanguage(this.language),\n      ];\n      if (propertyId) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group, pay_method } = this.bookingService.groupEntryTablesResult(setupEntries);\n      this.paymentEntries = {\n        groups: pay_type_group,\n        methods: pay_method,\n        types: pay_type,\n      };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n  private groupPaymentsByName(payments: FolioPayment[]): GroupedFolioPayment {\n    const groupedPayment: GroupedFolioPayment = new Map();\n\n    for (const payment of payments) {\n      const key = `${payment.payTypeCode}_${payment.payMethodCode}`;\n      const p = groupedPayment.get(key) ?? [];\n      groupedPayment.set(key, [...p, payment]);\n    }\n    return new Map(\n      [...groupedPayment.entries()].sort(([a], [b]) => {\n        const aNum = Number(a);\n        const bNum = Number(b);\n        if (!isNaN(aNum) && !isNaN(bNum)) {\n          return aNum - bNum;\n        }\n        return a.localeCompare(b);\n      }),\n    );\n  }\n\n  private async getPaymentReports(isExportToExcel = false, excludeYesterday = false) {\n    try {\n      const getReportObj = (report): FolioPayment => {\n        return {\n          method: report.METHOD,\n          payTypeCode: report.PAY_TYPE_CODE,\n          payMethodCode: report.PAY_METHOD_CODE,\n          amount: report.AMOUNT,\n          date: report.DATE,\n          hour: report.HOUR,\n          minute: report.MINUTE,\n          user: report.USER,\n          currency: report.CURRENCY,\n          bookingNbr: report.BOOKING_NBR,\n          id: v4(),\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const requests = [\n        this.propertyService.getDailyRevenueReport({\n          date: this.filters.date,\n          property_id: this.property_id?.toString(),\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n      if (!isExportToExcel && !excludeYesterday) {\n        requests.push(\n          this.propertyService.getDailyRevenueReport({\n            date: moment(this.filters.date, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD'),\n            property_id: this.property_id?.toString(),\n            is_export_to_excel: isExportToExcel,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      if (!isExportToExcel) {\n        if (results[0]) {\n          this.groupedPayment = this.groupPaymentsByName(results[0]?.map(getReportObj));\n        } else {\n          this.groupedPayment = new Map();\n        }\n        if (results[1]) this.previousDateGroupedPayments = this.groupPaymentsByName(results[1]?.map(getReportObj));\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Revenue</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getPaymentReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-revenue-summary\n            previousDateGroupedPayments={this.previousDateGroupedPayments}\n            groupedPayments={this.groupedPayment}\n            paymentEntries={this.paymentEntries}\n          ></ir-revenue-summary>\n          <div class=\"daily-revenue__meta\">\n            <ir-daily-revenue-filters isLoading={this.isLoading === 'filter'} payments={this.groupedPayment}></ir-daily-revenue-filters>\n            <ir-revenue-table filters={this.filters} class={'daily-revenue__table'} paymentEntries={this.paymentEntries} payments={this.groupedPayment}></ir-revenue-table>\n          </div>\n        </section>\n        <ir-sidebar\n          sidebarStyles={{\n            width: this.sideBarEvent?.type === 'booking' ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.sideBarEvent?.type === 'booking' ? '#F2F3F8' : 'white',\n          }}\n          open={Boolean(this.sideBarEvent)}\n          showCloseButton={false}\n          onIrSidebarToggle={this.handleSidebarClose}\n        >\n          {this.renderSidebarBody()}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n}\n:host * {\n  box-sizing: border-box;\n}\n\n@media only screen and (min-width: 900px) {\n  /* td {\n    min-width: 140px !important;\n    width: max-content !important;\n  } */\n}\n@media only screen and (max-width: 900px) {\n  /* td {\n    min-width: 100px !important;\n  } */\n  /* .table-container {\n    width: max-content !important;\n  } */\n}\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n.tasks-view {\n  display: flex;\n  flex-direction: column;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .tasks-view {\n    flex-direction: row;\n  }\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { CleanTaskEvent, IPendingActions } from '@/models/housekeeping';\nimport Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { TaskFilters } from './types';\nimport { downloadFile } from '@/utils/utils';\nimport { updateTasks as updateTasksStore, updateSelectedTasks, clearSelectedTasks, hkTasksStore, setLoading } from '@/stores/hk-tasks.store';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  tag: 'ir-hk-tasks',\n  styleUrl: 'ir-hk-tasks.css',\n  scoped: true,\n})\nexport class IrHkTasks {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() isCleaningLoading = false;\n  @State() selectedDuration = '';\n  @State() selectedHouseKeeper = '0';\n  @State() selectedRoom: IPendingActions | null = null;\n  @State() archiveOpened = false;\n  @State() property_id: number;\n  @State() isSidebarOpen: boolean;\n  @State() isApplyFiltersLoading: boolean;\n  @State() filters: TaskFilters;\n  @State() modalCauses: CleanTaskEvent & { cause: 'skip' | 'clean' };\n\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\n\n  private hkNameCache: Record<number, string> = {};\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private token = new Token();\n  private table_sorting: Map<string, 'ASC' | 'DESC'> = new Map();\n  private modal: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  @Listen('closeSideBar')\n  handleCloseSidebar(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.isSidebarOpen = false;\n  }\n  @Listen('sortingChanged')\n  handleSortingChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { field, direction } = e.detail;\n    console.log(e.detail);\n    if (field === 'date') {\n      return;\n    }\n    this.table_sorting.set(field, direction);\n  }\n  @Listen('skipSelectedTask')\n  handleSkipSelectedTask(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { task: e.detail, cause: 'skip' };\n    this.modal?.openModal();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      setLoading(true);\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.houseKeepingService.getExposedHKSetup(this.property_id), this.roomService.fetchLanguage(this.language)];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      const tasksResult = await this.houseKeepingService.getHkTasks({\n        property_id: this.property_id,\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: moment().format('YYYY-MM-DD'),\n        housekeepers: [],\n        cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n        dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n        highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n      });\n\n      // updateTaskList();\n      if (tasksResult?.tasks) {\n        this.updateTasks(tasksResult.tasks);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      setLoading(false);\n    }\n  }\n\n  private buildHousekeeperNameCache() {\n    this.hkNameCache = {};\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\n      if (hk.id != null && hk.name != null) {\n        this.hkNameCache[hk.id] = hk.name;\n      }\n    });\n  }\n\n  private updateTasks(tasks: any[]) {\n    this.buildHousekeeperNameCache();\n    updateTasksStore(\n      tasks.map(t => ({\n        ...t,\n        id: v4(),\n        housekeeper: (() => {\n          const name = this.hkNameCache[t.hkm_id];\n          if (name) {\n            return name;\n          }\n          const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\n          this.hkNameCache[t.hkm_id] = hkName;\n          return hkName;\n        })(),\n      })),\n    );\n  }\n  @Listen('headerButtonPress')\n  async handleHeaderButtonPress(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { name } = e.detail;\n    switch (name) {\n      case 'cleaned':\n      case 'clean-inspect':\n        this.modal?.openModal();\n        this.modalCauses = {\n          task: null,\n          cause: 'clean',\n          status: name === 'clean-inspect' ? '004' : '001',\n        };\n        break;\n      case 'export':\n        const sortingArray: { key: string; value: string }[] = Array.from(this.table_sorting.entries()).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        console.log(sortingArray);\n        const { url } = await this.fetchTasksWithFilters(true);\n        downloadFile(url);\n        break;\n      case 'archive':\n        this.isSidebarOpen = true;\n        break;\n    }\n  }\n  @Listen('cleanSelectedTask')\n  handleSelectedTaskCleaningEvent(e: CustomEvent<CleanTaskEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { ...e.detail, cause: 'clean' };\n    this.modal?.openModal();\n  }\n\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (hkTasksStore.selectedTasks.length === 0) {\n        return;\n      }\n      this.isCleaningLoading = true;\n      if (this.modalCauses?.cause === 'skip') {\n        const { booking_nbr, date, unit } = this.modalCauses.task;\n        await this.houseKeepingService.editHkSkip({\n          BOOK_NBR: booking_nbr,\n          DATE: date,\n          COMMENT: '',\n          HK_SKIP_ID: -1,\n          HK_SKIP_REASON_CODE: '001',\n          PR_ID: unit.id,\n        });\n      } else {\n        await this.houseKeepingService.executeHKAction({\n          actions: hkTasksStore.selectedTasks.map(t => ({\n            description: 'Cleaned',\n            hkm_id: t.hkm_id === 0 ? null : t.hkm_id,\n            unit_id: t.unit.id,\n            booking_nbr: t.booking_nbr,\n            status: this.modalCauses?.status ?? '001',\n          })),\n        });\n      }\n      await this.fetchTasksWithFilters();\n    } finally {\n      clearSelectedTasks();\n      if (this.modalCauses) {\n        this.modalCauses = null;\n      }\n      this.isCleaningLoading = false;\n      // this.clearSelectedTasks.emit();\n      this.modal.closeModal();\n    }\n  }\n\n  private async applyFilters(e: CustomEvent) {\n    try {\n      this.isApplyFiltersLoading = true;\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.filters = { ...e.detail };\n      await this.fetchTasksWithFilters();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isApplyFiltersLoading = false;\n    }\n  }\n\n  private async fetchTasksWithFilters(export_to_excel: boolean = false) {\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\n\n    const { tasks, url } = await this.houseKeepingService.getHkTasks({\n      housekeepers,\n      cleaning_frequency: cleaning_frequencies?.code,\n      dusty_window: dusty_units?.code,\n      highlight_window: highlight_check_ins?.code,\n      property_id: this.property_id,\n      from_date: moment().format('YYYY-MM-DD'),\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\n      is_export_to_excel: export_to_excel,\n    });\n    console.log(tasks);\n    if (tasks) {\n      this.updateTasks(tasks);\n    }\n    return { tasks, url };\n  }\n\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host data-testid=\"hk_tasks_base\">\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-1 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <h3>Housekeeping Tasks</h3>\n          <div class=\"tasks-view \" style={{ gap: '1rem' }}>\n            <ir-tasks-filters\n              isLoading={this.isApplyFiltersLoading}\n              onApplyFilters={e => {\n                this.applyFilters(e);\n              }}\n            ></ir-tasks-filters>\n            <div class=\"d-flex w-100 flex-column\" style={{ gap: '1rem' }}>\n              <ir-tasks-table\n                onRowSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  updateSelectedTasks(e.detail);\n                }}\n                class=\"flex-grow-1 w-100\"\n              ></ir-tasks-table>\n              {/* <ir-tasks-table-pagination></ir-tasks-table-pagination> */}\n            </div>\n          </div>\n        </section>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isCleaningLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          onCancelModal={() => {\n            if (this.modalCauses) {\n              clearSelectedTasks();\n              this.modalCauses = null;\n            }\n          }}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={\n            this.modalCauses\n              ? this.modalCauses?.cause === 'clean'\n                ? this.modalCauses.task\n                  ? `Update ${this.modalCauses?.task?.unit?.name} to Clean`\n                  : 'Update selected unit(s) to Clean'\n                : 'Skip cleaning and reschedule for tomorrow.'\n              : 'Update selected unit(s) to Clean'\n          }\n        ></ir-modal>\n        <ir-sidebar\n          open={this.isSidebarOpen}\n          id=\"editGuestInfo\"\n          onIrSidebarToggle={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.isSidebarOpen = false;\n          }}\n          // sidebarStyles={{\n          //   width: '80vw',\n          // }}\n          showCloseButton={false}\n        >\n          {this.isSidebarOpen && <ir-hk-archive ticket={this.token.getToken()} propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\n        </ir-sidebar>\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\n          </ir-title> */}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { PropertyService } from '@/services/property.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n@Component({\n  tag: 'ir-housekeeping',\n  styleUrl: 'ir-housekeeping.css',\n  scoped: true,\n})\nexport class IrHousekeeping {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n\n  @Event() toast: EventEmitter<IToast>;\n\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private propertyService = new PropertyService();\n  private token = new Token();\n  modal: HTMLIrModalElement;\n  selectedCleaningFrequency: any;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_sales_rate_plans: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\n      const requests: Array<Promise<any>> = [];\n      if (calendar_data.housekeeping_enabled) {\n        requests.push(this.houseKeepingService.getExposedHKSetup(propertyId));\n      }\n      requests.push(this.roomService.fetchLanguage(this.language, ['_HK_FRONT', '_PMS_FRONT']));\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private async saveAutomaticCheckInCheckout(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.roomService.SetAutomaticCheckInOut({\n        property_id: housekeeping_store.default_properties.property_id,\n        flag: e.detail === 'auto',\n      });\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async saveCleaningFrequency(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.propertyService.setExposedCleaningFrequency({\n        property_id: housekeeping_store.default_properties.property_id,\n        code: this.selectedCleaningFrequency,\n      });\n      calendar_data.cleaning_frequency = { code: this.selectedCleaningFrequency, description: '' };\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n      this.modal.closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    console.log(calendar_data.cleaning_frequency);\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <section class=\"p-1\">\n          <h3 class=\"mb-2\">{locales.entries.Lcz_HouseKeepingAndCheckInSetup}</h3>\n          <div class=\"card p-1\">\n            <ir-title borderShown label=\"Operations Settings\"></ir-title>\n            <div class={'d-flex align-items-center mb-1'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CheckInOutGuestsAutomatically}</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\n                data={[\n                  { text: locales.entries.Lcz_YesAsPerPropertyPolicy, value: 'auto' },\n                  { text: locales.entries.Lcz_NoIWillDoItManually, value: 'manual' },\n                ]}\n              ></ir-select>\n            </div>\n            <div class={'d-flex align-items-center'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CleaningFrequency}:</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={this.selectedCleaningFrequency}\n                onSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.selectedCleaningFrequency = e.detail;\n                  this.modal.openModal();\n                }}\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n              ></ir-select>\n            </div>\n          </div>\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\n          {calendar_data.housekeeping_enabled && <ir-hk-team class=\"mb-1\"></ir-hk-team>}\n          <ir-modal\n            autoClose={false}\n            ref={el => (this.modal = el)}\n            isLoading={isRequestPending('/Set_Exposed_Cleaning_Frequency')}\n            onConfirmModal={this.saveCleaningFrequency.bind(this)}\n            iconAvailable={true}\n            onCancelModal={() => {\n              this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n            }}\n            icon=\"ft-alert-triangle danger h1\"\n            leftBtnText={locales.entries.Lcz_Cancel}\n            rightBtnText={locales.entries.Lcz_Confirm}\n            leftBtnColor=\"secondary\"\n            rightBtnColor={'primary'}\n            modalTitle={locales.entries.Lcz_Confirmation}\n            modalBody={'This action will reschedule all cleaning tasks. Do you want to continue?'}\n          ></ir-modal>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyReport, DailyReportFilter } from './types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { RoomService } from '@/services/room.service';\nimport { DailyStat, MonthlyStatsResults, PropertyService } from '@/services/property.service';\n\n@Component({\n  tag: 'ir-monthly-bookings-report',\n  styleUrl: 'ir-monthly-bookings-report.css',\n  scoped: true,\n})\nexport class IrMonthlyBookingsReport {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading = true;\n  @State() isLoading: 'export' | 'filter' | null = null;\n\n  @State() reports: DailyReport[] = [];\n  @State() filters: DailyReportFilter;\n  @State() property_id: number;\n  @State() stats: Omit<MonthlyStatsResults, 'DailyStats'>;\n\n  private baseFilters: DailyReportFilter;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  componentWillLoad() {\n    this.baseFilters = {\n      date: {\n        description: moment().format('MMMM YYYY'),\n        firstOfMonth: moment().startOf('month').format('YYYY-MM-DD'),\n        lastOfMonth: moment().endOf('month').format('YYYY-MM-DD'),\n      },\n      include_previous_year: false,\n    };\n    this.filters = this.baseFilters;\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Listen('applyFilters')\n  handleApplyFiltersChange(e: CustomEvent<DailyReportFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = e.detail;\n    this.getReports();\n  }\n\n  private async init() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.roomService.fetchLanguage(this.language), this.getReports()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getReports(isExportToExcel = false) {\n    try {\n      const getReportObj = (report: DailyStat): DailyReport => {\n        return {\n          day: report.Date,\n          units_booked: report.Units_booked,\n          occupancy_percent: report.Occupancy,\n          adr: report.ADR,\n          rooms_revenue: report.Rooms_Revenue,\n          total_guests: report?.Total_Guests,\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const { date, include_previous_year } = this.filters;\n\n      const requests = [\n        this.propertyService.getMonthlyStats({\n          from_date: date.firstOfMonth,\n          to_date: date.lastOfMonth,\n          property_id: this.property_id,\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n\n      if (include_previous_year) {\n        requests.push(\n          this.propertyService.getMonthlyStats({\n            from_date: moment(date.firstOfMonth, 'YYYY-MM-DD').add(-1, 'year').format('YYYY-MM-DD'),\n            to_date: moment(date.lastOfMonth, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'),\n            property_id: this.property_id,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      const currentReports = results[0];\n      let enrichedReports: DailyReport[] = [];\n      const { DailyStats, ...rest } = currentReports;\n\n      this.stats = { ...rest };\n\n      if (include_previous_year && results[isExportToExcel ? 0 : 1]) {\n        const previousYearReports = results[isExportToExcel ? 0 : 1];\n        let formattedReports = previousYearReports.DailyStats.map(getReportObj);\n        enrichedReports = DailyStats.map(getReportObj).map(current => {\n          const previous = formattedReports.find(prev => prev.day === moment(current.day, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'));\n          return {\n            ...current,\n            last_year: previous ?? null,\n          };\n        });\n      } else {\n        enrichedReports = DailyStats.map(getReportObj);\n      }\n      this.reports = [...enrichedReports];\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Occupancy</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <section>\n            <div class=\"d-flex flex-column flex-md-row w-100\" style={{ gap: '1rem', alignItems: 'stretch' }}>\n              <ir-stats-card\n                icon={this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? 'arrow-trend-down' : 'arrow-trend-up'}\n                cardTitle=\"Average Occupancy\"\n                value={this.stats.AverageOccupancy ? this.stats?.AverageOccupancy.toFixed(2) + '%' : null}\n                subtitle={`${this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? '' : '+'}${this.stats?.Occupancy_Difference_From_Previous_Month.toFixed(\n                  2,\n                )}% from last month`}\n              ></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"hotel\"\n                cardTitle=\"Total Units\"\n                value={this.stats?.TotalUnitsBooked ? this.stats?.TotalUnitsBooked.toString() : null}\n                subtitle=\"Booked\"\n              ></ir-stats-card>\n\n              <ir-stats-card icon=\"user_group\" cardTitle=\"Total Guests\" value={this.stats?.Total_Guests?.toString()} subtitle=\"Stayed\"></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"calendar\"\n                cardTitle=\"Peak Days\"\n                value={this.stats?.PeakDays.length === 0 ? null : this.stats?.PeakDays?.map(pd => moment(pd.Date, 'YYYY-MM-DD').format('D').concat('th')).join(' - ')}\n                subtitle={`${Math.max(...(this.stats.PeakDays?.map(pd => pd.OccupancyPercent) || []))}% occupancy`}\n              ></ir-stats-card>\n            </div>\n            <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n              <ir-monthly-bookings-report-filter isLoading={this.isLoading === 'filter'} class=\"filters-card\" baseFilters={this.baseFilters}></ir-monthly-bookings-report-filter>\n              <ir-monthly-bookings-report-table reports={this.reports}></ir-monthly-bookings-report-table>\n            </div>\n          </section>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport Token from '@/models/Token';\nimport { AllowedProperties, PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport moment from 'moment';\nimport { ChannelReport, ChannelReportResult, ChannelSaleFilter } from './types';\n@Component({\n  tag: 'ir-sales-by-channel',\n  styleUrl: 'ir-sales-by-channel.css',\n  scoped: true,\n})\nexport class IrSalesByChannel {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n\n  @State() salesData: ChannelReportResult;\n  @State() channelSalesFilters: ChannelSaleFilter;\n  @State() allowedProperties: AllowedProperties;\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  private baseFilters: ChannelSaleFilter = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.channelSalesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  private async initializeApp() {\n    try {\n      const requests = [this.propertyService.getExposedAllowedProperties(), this.roomService.fetchLanguage(this.language)];\n      const [properties] = await Promise.all(requests);\n      this.allowedProperties = [...(properties as any)];\n\n      this.baseFilters = { ...this.baseFilters, LIST_AC_ID: this.allowedProperties.map(p => p.id) };\n      this.channelSalesFilters = { ...this.baseFilters };\n\n      await this.getChannelSales();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getChannelSales(isExportToExcel = false) {\n    try {\n      const { include_previous_year, ...filterParams } = this.channelSalesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const currentSales = await this.propertyService.getChannelSales({\n        // AC_ID: this.propertyid,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n      let enrichedSales: ChannelReportResult = [];\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getChannelSales({\n          // AC_ID: this.propertyid.toString(),\n          is_export_to_excel: isExportToExcel,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.SOURCE.toLowerCase() === current.SOURCE.toLowerCase());\n          return {\n            ...current,\n            last_year: previous ? previous : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          ...record,\n          last_year: null,\n        }));\n      }\n      /**\n       * Groups sales records by SOURCE and currency.id, summing numeric fields\n       * and recalculating PCT based on the total REVENUE.\n       */\n      const groupSalesRecordsBySource = (records: ChannelReportResult): ChannelReportResult => {\n        if (!records || records.length === 0) return records;\n\n        // Helper to extract currency ID from various possible formats\n        const getCurrencyId = (r: ChannelReport): string | null => {\n          return r?.currency ?? null;\n        };\n\n        // Create unique key for grouping\n        const createKey = (r: ChannelReport): string => {\n          const source = r.SOURCE.toString().toLowerCase().trim();\n          const currencyId = getCurrencyId(r);\n          return `${source}__${currencyId ?? 'null'}`;\n        };\n\n        // Sum two values safely\n        const sumValues = (a: number | undefined, b: number | undefined): number => {\n          return (a ?? 0) + (b ?? 0);\n        };\n\n        // Merge numeric fields from last_year objects\n        const mergeLastYear = (base: ChannelReport['last_year'], incoming: ChannelReport['last_year']): ChannelReport['last_year'] => {\n          if (!incoming) return base;\n          if (!base) return { ...incoming };\n\n          return {\n            NIGHTS: sumValues(base.NIGHTS, incoming.NIGHTS),\n            PCT: sumValues(base.PCT, incoming.PCT), // Will recalculate later\n            REVENUE: sumValues(base.REVENUE, incoming.REVENUE),\n            SOURCE: base.SOURCE,\n            PROPERTY_ID: base.PROPERTY_ID,\n            PROPERTY_NAME: base.PROPERTY_NAME,\n            currency: base.currency,\n          };\n        };\n\n        // Group records by key\n        const grouped = new Map<string, ChannelReport>();\n\n        for (const record of records) {\n          const key = createKey(record);\n          const existing = grouped.get(key);\n\n          if (!existing) {\n            // First record for this key - clone it\n            grouped.set(key, { ...record });\n          } else {\n            // Merge with existing record\n            const merged: ChannelReport = {\n              ...existing,\n              NIGHTS: sumValues(existing.NIGHTS, record.NIGHTS),\n              PCT: 0, // Will recalculate after summing all REVENUE\n              REVENUE: sumValues(existing.REVENUE, record.REVENUE),\n              last_year: mergeLastYear(existing.last_year, record.last_year),\n            };\n            grouped.set(key, merged);\n          }\n        }\n\n        // Convert to array\n        const result = Array.from(grouped.values());\n\n        // Recalculate PCT based on total REVENUE\n        const totalRevenue = result.reduce((sum, r) => sum + (r.REVENUE ?? 0), 0);\n\n        if (totalRevenue > 0) {\n          for (const record of result) {\n            record.PCT = (record.REVENUE / totalRevenue) * 100;\n\n            // Also recalculate last_year PCT if it exists\n            if (record.last_year) {\n              const lastYearTotal = result.reduce((sum, r) => sum + (r.last_year?.REVENUE ?? 0), 0);\n              if (lastYearTotal > 0) {\n                record.last_year.PCT = (record.last_year.REVENUE / lastYearTotal) * 100;\n              }\n            }\n          }\n        }\n\n        return result;\n      };\n\n      this.salesData = [...groupSalesRecordsBySource(enrichedSales)];\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Channel</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getChannelSales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          {/* <ir-sales-by-country-summary salesReports={this.salesData}></ir-sales-by-country-summary> */}\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-by-channel-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.channelSalesFilters = { ...e.detail };\n                this.getChannelSales();\n              }}\n              allowedProperties={this.allowedProperties}\n              baseFilters={this.baseFilters}\n            ></ir-sales-by-channel-filters>\n            <ir-sales-by-channel-table allowedProperties={this.allowedProperties} class=\"card mb-0\" records={this.salesData}></ir-sales-by-channel-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { BaseSalesRecord, CountrySalesFilter, MappedCountries, SalesRecord } from './types';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-sales-by-country',\n  styleUrl: 'ir-sales-by-country.css',\n  scoped: true,\n})\nexport class IrSalesByCountry {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n  @State() property_id: number;\n  @State() salesData: SalesRecord[];\n  @State() salesFilters: CountrySalesFilter;\n  @State() countries: MappedCountries = new Map();\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n\n  private baseFilters = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.salesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  private async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.bookingService.getCountries(this.language), this.roomService.fetchLanguage(this.language), this.getCountrySales()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [countries] = await Promise.all(requests);\n      const mappedCountries = new Map();\n      (countries as ICountry[]).map(country => {\n        mappedCountries.set(country.id, {\n          flag: country.flag,\n          name: country.name,\n        });\n      });\n      this.countries = mappedCountries;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getCountrySales(isExportToExcel = false) {\n    const formatSalesData = (data): Omit<BaseSalesRecord, 'id'> => {\n      return {\n        country: data.COUNTRY,\n        country_id: data.COUNTRY_ID,\n        nights: data.NIGHTS,\n        percentage: data.PCT,\n        revenue: data.REVENUE,\n        number_of_guests: data.Total_Guests,\n      };\n    };\n    try {\n      const { include_previous_year, ...filterParams } = this.salesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const currentSales = await this.propertyService.getCountrySales({\n        AC_ID: this.property_id,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n\n      let enrichedSales: SalesRecord[] = [];\n\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getCountrySales({\n          AC_ID: this.property_id,\n          is_export_to_excel: false,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.COUNTRY.toLowerCase() === current.COUNTRY.toLowerCase());\n          return {\n            id: v4(),\n            ...formatSalesData(current),\n            last_year: previous ? formatSalesData(previous) : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          id: v4(),\n          ...formatSalesData(record),\n          last_year: null,\n        }));\n      }\n\n      // this.salesData = enrichedSales.sort((a, b) => {\n      //   if (a.country_id === 0) return -1;\n      //   if (b.country_id === 0) return 1;\n      //   return 0;\n      // });\n      this.salesData = [...enrichedSales];\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Country</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getCountrySales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-sales-by-country-summary salesReports={this.salesData}></ir-sales-by-country-summary>\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.salesFilters = e.detail;\n                this.getCountrySales();\n              }}\n              class=\"filters-card\"\n              baseFilters={this.baseFilters}\n            ></ir-sales-filters>\n            <ir-sales-table mappedCountries={this.countries} class=\"card mb-0\" records={this.salesData}></ir-sales-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  height: 100%;\n}\n","import Token from '@/models/Token';\nimport { User } from '@/models/Users';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport { UserService } from '@/services/user.service';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { AllowedUser } from './types';\nimport { bookingReasons } from '@/models/IBooking';\nimport { io, Socket } from 'socket.io-client';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-user-management',\n  styleUrl: 'ir-user-management.css',\n  scoped: true,\n})\nexport class IrUserManagement {\n  @Prop() language: string = '';\n  @Prop() baseUrl: string;\n  @Prop() ticket: string;\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() isSuperAdmin: boolean = true;\n  @Prop() userTypeCode: string | number;\n  @Prop() baseUserTypeCode: string | number;\n  @Prop() userId: string | number;\n\n  @State() isLoading = true;\n  @State() users: User[] = [];\n  @State() property_id: number;\n  @State() allowedUsersTypes: AllowedUser[] = [];\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private userService = new UserService();\n  private bookingService = new BookingService();\n\n  private userTypes: Map<number | string, string> = new Map();\n  private socket: Socket;\n\n  private superAdminId = '5';\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.fetchUsers();\n  }\n\n  private async initializeApp() {\n    try {\n      if (this.baseUrl) {\n        this.token.setBaseUrl(this.baseUrl);\n      }\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.fetchUserTypes(), this.fetchUsers(), this.roomService.fetchLanguage(this.language, ['_USER_MGT'])];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result = JSON.parse(PAYLOAD);\n    console.log(KEY, result);\n    // const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n    //   DORESERVATION: this.updateUserVerificationStatus,\n    // };\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n      EMAIL_VERIFIED: this.updateUserVerificationStatus,\n    };\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n\n  public updateUserVerificationStatus(result: { id: string | number }) {\n    const users = [...this.users];\n    const idx = users.findIndex(u => u.id === result.id);\n    if (idx === -1) {\n      console.warn(`User ${result.id} not found`);\n      return;\n    }\n    users[idx] = {\n      ...users[idx],\n      is_email_verified: true,\n    };\n    this.users = users;\n  }\n\n  private async fetchUsers() {\n    const users = await this.userService.getExposedPropertyUsers({ property_id: this.propertyid });\n    this.users = [...users].sort((u1: User, u2: User) => {\n      const priority = (u: User) => {\n        const t = u.type.toString();\n        if (t === this.superAdminId) return 0;\n        if (t === '17') return 1;\n        return 2;\n      };\n      //sort by priority\n      const p1 = priority(u1),\n        p2 = priority(u2);\n      if (p1 !== p2) {\n        return p1 - p2;\n      }\n      // //sort by user id\n      // if (p1 === 1) {\n      //   const id1 = u1.id.toString(),\n      //     id2 = u2.id.toString(),\n      //     me = this.userId.toString();\n      //   if (id1 === me) return -1; // u1 is me → goes before u2\n      //   if (id2 === me) return 1; // u2 is me → u1 goes after\n      // }\n\n      // 3) sort by username\n      return u1.username.localeCompare(u2.username);\n    });\n  }\n  private async fetchUserTypes() {\n    const res = await Promise.all([this.bookingService.getSetupEntriesByTableName('_USER_TYPE'), this.bookingService.getLov()]);\n    const allowedUsers = res[1]?.My_Result?.allowed_user_types;\n    for (const e of res[0]) {\n      const value = e[`CODE_VALUE_${this.language?.toUpperCase() ?? 'EN'}`];\n      if (allowedUsers.find(f => f.code === e.CODE_NAME)) {\n        this.allowedUsersTypes.push({ code: e.CODE_NAME, value });\n      }\n      this.userTypes.set(e.CODE_NAME.toString(), value);\n    }\n  }\n  disconnectedCallback() {\n    this.socket.disconnect();\n  }\n  render() {\n    if (this.isLoading) {\n      return (\n        <Host>\n          <ir-toast></ir-toast>\n          <ir-interceptor></ir-interceptor>\n          <ir-loading-screen></ir-loading-screen>\n        </Host>\n      );\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd', '/Handle_Exposed_User']}></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex  pb-2 align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">{locales.entries.Lcz_ExtranetUsers}</h3>\n          </div>\n\n          <div class=\"\" style={{ gap: '1rem' }}>\n            <ir-user-management-table\n              property_id={this.property_id}\n              baseUserTypeCode={this.baseUserTypeCode}\n              allowedUsersTypes={this.allowedUsersTypes}\n              userTypeCode={this.userTypeCode}\n              haveAdminPrivileges={[this.superAdminId, '17'].includes(this.userTypeCode?.toString())}\n              userTypes={this.userTypes}\n              class=\"card\"\n              isSuperAdmin={this.userTypeCode?.toString() === this.superAdminId}\n              users={this.users}\n            ></ir-user-management-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}