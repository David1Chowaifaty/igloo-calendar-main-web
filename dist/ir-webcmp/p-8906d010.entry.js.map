{"version":3,"names":["irButtonCss","IrButtonStyle0","IrButton","constructor","hostRef","this","btn_color","size","textSize","btn_block","btn_disabled","btn_type","isLoading","btn_id","v4","variant","visibleBackgroundOnHover","iconPosition","renderContentAsHtml","handleButtonAnimation","e","buttonEl","detail","stopImmediatePropagation","stopPropagation","classList","remove","add","bounce","render","disabled","h","id","class","btn_styles","ref","el","onClick","clickHandler","emit","type","name","icon_name","blockClass","style","btnStyle","icon_style","text","innerHTML","labelStyle","irCheckboxCss","IrCheckboxStyle0","IrCheckbox","checked","checkboxId","currentChecked","componentWillLoad","componentDidLoad","checkboxRef","setAttribute","JSON","stringify","handleCheckedChange","newValue","handleCheckChange","checkChange","Host","key","bind","indeterminate","value","role","xmlns","height","width","viewBox","fill","d","tabindex","label","htmlFor","labelClass","onlineResources","isCSS","link","IrCommon","extraResources","resources","parseRefs","initializeStyles","hrefsChanged","push","parse","appendTag","tagName","attributes","tag","document","createElement","selectorParts","Object","keys","forEach","attr","selector","join","existingTag","querySelector","head","appendChild","res","href","rel","isJS","src","irIconsCss","IrIconsStyle0","IrIcons","svgPath","icons","color","svgClassName","irInterceptorCss","IrInterceptorStyle0","IrInterceptor","handledEndpoints","suppressToastEndpoints","isShown","isUnassignedUnit","endpointsCount","isPageLoadingStopped","handleStopPageLoading","setupAxiosInterceptors","axios","interceptors","request","use","handleRequest","handleError","response","handleResponse","extractEndpoint","url","split","isHandledEndpoint","includes","config","extractedUrl","interceptor_requests","params","data","ExceptionCode","handleOtpResponse","_a","ExceptionMsg","trim","handleResponseExceptions","InterceptorError","showModal","email","slice","baseOTPUrl","methodName","body","METHOD_NAME","console","error","requestUrl","pendingConfig","Promise","resolve","reject","pendingResolve","pendingReject","setTimeout","otpModal","openModal","code","shouldSuppressToast","toast","title","description","position","handleOtpFinished","ev","otp","cancelResp","cancelled","status","statusText","headers","Error","retryConfig","assign","resp","err","undefined","onOtpFinished","irLoadingScreenCss","IrLoadingScreenStyle0","IrLoadingScreen","message","irMonthlyBookingsReportCss","IrMonthlyBookingsReportStyle0","IrMonthlyBookingsReport","language","ticket","isPageLoading","reports","tokenService","Token","roomService","RoomService","propertyService","PropertyService","baseFilters","date","moment","format","firstOfMonth","startOf","lastOfMonth","endOf","include_previous_year","filters","setToken","init","handleTicketChange","oldValue","handleApplyFiltersChange","getReports","propertyId","propertyid","p","log","propertyData","getExposedProperty","aname","is_backend","include_units_hk_status","My_Result","property_id","requests","fetchLanguage","all","isExportToExcel","getReportObj","report","day","Date","units_booked","Units_booked","occupancy_percent","Occupancy","getMonthlyStats","from_date","to_date","is_export_to_excel","subtract","results","currentReports","enrichedReports","DailyStats","rest","__rest","occupancyDelta","parseFloat","AverageOccupancy","toString","stats","OccupancyDelta","previousYearReports","formattedReports","map","current","previous","find","prev","last_year","StatsCard","icon","subtitle","gap","locales","entries","Lcz_Export","onClickHandler","async","alignItems","_b","_c","toFixed","_d","_e","_f","TotalUnitsBooked","_g","_h","PeakDays","length","_k","_j","pd","concat","Math","max","_l","OccupancyPercent","irMonthlyBookingsReportFilterCss","IrMonthlyBookingsReportFilterStyle0","IrMonthlyBookingsReportFilter","collapsed","dates","generateMonths","updateFilter","applyFiltersEvt","applyFilters","resetFilters","firstOfThisMonth","startDate","cursor","clone","reverse","Lcz_Filters","paddingBottom","showFirstOption","selectedValue","onSelectChange","LabelAvailable","onCheckChange","Lcz_Reset","Lcz_Apply","irMonthlyBookingsReportTableCss","IrMonthlyBookingsReportTableStyle0","tableCss","IrMonthlyBookingsReportTableStyle1","IrMonthlyBookingsReportTable","totalUnits","reduce","curr","colSpan","mainPercentage","secondaryPercentage","reportDate","isFutureDate","isBefore","percentage","whiteSpace","paddingTop","irOtpCss","IrOtpStyle0","IrOtp","placeholder","autoFocus","secure","numbersOnly","otpValues","inputRefs","handleInput","event","index","input","target","replace","emitChanges","focus","handleKeyDown","preventDefault","handlePaste","pastedData","clipboardData","getData","filteredData","i","min","idx","nextEmptyIndex","findIndex","val","handleFocus","select","Array","defaultValue","setValue","handleLengthChange","newLength","oldLength","otpValue","otpChange","every","otpComplete","clear","valueArray","_","inputmode","maxlength","autocomplete","onInput","onKeyDown","onPaste","onFocus","irOtpModalCss","IrOtpModalStyle0","IrOtpModal","resendTimer","showResend","otpLength","timer","systemService","SystemService","otpVerificationSchema","z","object","string","nonempty","handleOtpComplete","fetchLocale","handleKeyDownChange","dialogRef","open","resetState","startTimer","focusFirstInput","closeModal","close","removeAttribute","clearTimer","getToken","isInitializing","timerInterval","window","setInterval","clearInterval","r","first","verifyOtp","validateOTP","OTP","otpFinished","resendOtp","resendOTP","handleCancelClicked","location","reload","disconnectedCallback","method","Fragment","Lcz_VerifyYourIdentity","Lcz_WeSentYuoVerificationCode","onOtpComplete","Lcz_ResendCode","String","padStart","Lcz_Cancel","Lcz_VerifyNow","irProgressIndicatorCss","IrProgressIndicatorStyle0","IrProgressIndicator","irSelectCss","IrSelectStyle0","IrSelect","firstOption","selectStyle","submited","labelPosition","labelBackground","labelColor","labelBorder","labelWidth","select_id","initial","valid","count","watchHandler","required","watchHandler2","selectEl","handleSelectChange","checkValidity","selectChange","className","selectContainerStyle","testId","selectForcedStyles","selectStyles","item","selected","irSpinnerCss","IrSpinnerStyle0","IrSpinner","unit","initStyles","handleSpinnerSizeChange","handleSpinnerBorderWidthChange","handleSpinnerUnitChange","handleSpinnerColorChange","applyCssElement","borderWidth","setProperty","irToastCss","IrToastStyle0","IrToast","toasts","onToast","showToast","toastrOptions","positionClass","closeButton","timeOut","duration","toastr","success"],"sources":["src/components/ui/ir-button/ir-button.css?tag=ir-button&encapsulation=scoped","src/components/ui/ir-button/ir-button.tsx","src/components/ui/ir-checkbox/ir-checkbox.css?tag=ir-checkbox&encapsulation=scoped","src/components/ui/ir-checkbox/ir-checkbox.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ui/ir-icons/ir-icons.css?tag=ir-icons&encapsulation=scoped","src/components/ui/ir-icons/ir-icons.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.css?tag=ir-monthly-bookings-report&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report-filter/ir-monthly-bookings-report-filter.css?tag=ir-monthly-bookings-report-filter&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report-filter/ir-monthly-bookings-report-filter.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report-table/ir-monthly-bookings-report-table.css?tag=ir-monthly-bookings-report-table&encapsulation=scoped","src/common/table.css?tag=ir-monthly-bookings-report-table&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report-table/ir-monthly-bookings-report-table.tsx","src/components/ir-otp-modal/ir-otp/ir-otp.css?tag=ir-otp&encapsulation=scoped","src/components/ir-otp-modal/ir-otp/ir-otp.tsx","src/components/ir-otp-modal/ir-otp-modal.css?tag=ir-otp-modal","src/components/ir-otp-modal/ir-otp-modal.tsx","src/components/ui/ir-progress-indicator/ir-progress-indicator.css?tag=ir-progress-indicator&encapsulation=scoped","src/components/ui/ir-progress-indicator/ir-progress-indicator.tsx","src/components/ui/ir-select/ir-select.css?tag=ir-select&encapsulation=scoped","src/components/ui/ir-select/ir-select.tsx","src/components/ui/ir-spinner/ir-spinner.css?tag=ir-spinner&encapsulation=shadow","src/components/ui/ir-spinner/ir-spinner.tsx","src/components/ui/ir-toast/ir-toast.css?tag=ir-toast&encapsulation=scoped","src/components/ui/ir-toast/ir-toast.tsx"],"sourcesContent":[":host {\n  --icon-button-color: #6b6f82;\n  --icon-button-hover-color: #104064;\n}\n\n.button-icon {\n  padding: 0;\n  margin-top: 0;\n}\n\n.button-icon[data-state='loading'] {\n  display: none;\n}\n\n.button-text {\n  padding: 0 5px;\n}\n\n.bounce-3 {\n  animation: bounce 1s 1;\n}\n.btn-link {\n  color: var(--blue, #1e9ff2);\n}\n.ir-button-class {\n  display: inline-flex !important;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n}\n.btn-outline {\n  background: transparent;\n  border: 1px solid #104064;\n  color: #104064;\n}\n.btn-outline:hover,\n.btn-outline:active {\n  background: #104064;\n  color: white;\n}\n.icon-button {\n  all: unset;\n  box-sizing: border-box;\n  border-radius: 0.25rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--icon-button-color);\n  padding: 0.2rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.icon-button:hover {\n  color: var(--icon-button-hover-color);\n}\n.icon-button:hover.hovered_bg {\n  background: var('--ir-icon-bg-hover', #f6f6f6);\n}\n.icon-button:disabled {\n  pointer-events: none;\n}\n\n.icon-loader {\n  margin: 0;\n  padding: 0;\n  width: var(--icon-size, 1.25rem);\n  height: var(--icon-size, 1.25rem);\n  border-radius: 50%;\n  background: radial-gradient(farthest-side, var(--icon-button-color) 94%, #0000) top/2px 2px no-repeat, conic-gradient(#0000 30%, var(--icon-button-color));\n  -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 2px), var(--icon-button-color) 0);\n  mask: radial-gradient(farthest-side, #0000 calc(100% - 2px), var(--icon-button-color) 0);\n  animation: l13 1s infinite linear;\n}\n\n.btn_loader {\n  width: 15px;\n  height: 10px;\n  --c: no-repeat linear-gradient(#ffffff 0 0);\n  background: var(--c) 0% 50%, var(--c) 50% 50%, var(--c) 100% 50%;\n  background-size: 20% 100%;\n  animation: l1 1s infinite linear;\n}\n\n@keyframes l13 {\n  100% {\n    transform: rotate(1turn);\n  }\n}\n\n@keyframes l1 {\n  0% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n  33% {\n    background-size: 20% 10%, 20% 100%, 20% 100%;\n  }\n  50% {\n    background-size: 20% 100%, 20% 10%, 20% 100%;\n  }\n  66% {\n    background-size: 20% 100%, 20% 100%, 20% 10%;\n  }\n  100% {\n    background-size: 20% 100%, 20% 100%, 20% 100%;\n  }\n}\n@keyframes bounce {\n  0%,\n  100% {\n    transform: scale(1);\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n  }\n  50% {\n    transform: scale(1.2);\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n}\n@keyframes ping {\n  75%,\n  100% {\n    transform: scale(1.2);\n  }\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Prop, Event, EventEmitter, h, Listen, Method } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { TIcons } from '../ir-icons/icons';\n\n@Component({\n  tag: 'ir-button',\n  styleUrl: 'ir-button.css',\n  scoped: true,\n})\nexport class IrButton {\n  /**\n   * The name of the button, used for identification purposes.\n   */\n  @Prop() name: string;\n  /**\n   * The text content displayed inside the button.\n   */\n  @Prop() text: string;\n\n  /**\n   * The color theme of the button.\n   */\n  @Prop() btn_color: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'outline' | 'link' = 'primary';\n\n  /**\n   * The size of the button.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * The size of the text inside the button.\n   */\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * Whether the button should expand to the full width of its container.\n   */\n  @Prop() btn_block = true;\n\n  /**\n   * Disables the button when set to true.\n   */\n  @Prop() btn_disabled = false;\n\n  /**\n   * The button type attribute (`button`, `submit`, or `reset`).\n   */\n  @Prop() btn_type = 'button';\n\n  /**\n   * Displays a loading indicator when true and disables the button.\n   */\n  @Prop() isLoading: boolean = false;\n\n  /**\n   * Additional custom class names for the button.\n   */\n  @Prop() btn_styles: string;\n\n  /**\n   * A unique identifier for the button instance.\n   */\n  @Prop() btn_id: string = v4();\n\n  /**\n   * Visual variant of the button: either standard (`default`) or icon-only (`icon`).\n   */\n  @Prop() variant: 'default' | 'icon' = 'default';\n\n  /**\n   * The name of the icon to display.\n   */\n  @Prop() icon_name: TIcons;\n\n  /**\n   * If true, applies a visible background when hovered.\n   */\n  @Prop() visibleBackgroundOnHover: boolean = false;\n\n  /**\n   * Position of the icon relative to the button text.\n   */\n  @Prop() iconPosition: 'left' | 'right' = 'left';\n\n  /**\n   * Custom style object for the icon.\n   */\n  @Prop() icon_style: any;\n\n  /**\n   * Custom inline styles for the button element.\n   */\n  @Prop() btnStyle: { [key: string]: string };\n\n  /**\n   * Custom inline styles for the label/text inside the button.\n   */\n  @Prop() labelStyle: { [key: string]: string };\n\n  /**\n   * If true, renders the text property as raw HTML inside the button.\n   */\n  @Prop() renderContentAsHtml: boolean = false;\n\n  /**\n   * Emits a custom click event when the button is clicked.\n   */\n  @Event({ bubbles: true, composed: true }) clickHandler: EventEmitter<any>;\n\n  private buttonEl: HTMLButtonElement;\n\n  @Listen('animateIrButton', { target: 'body' })\n  handleButtonAnimation(e: CustomEvent) {\n    if (!this.buttonEl || e.detail !== this.btn_id) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.buttonEl.classList.remove('bounce-3');\n    void this.buttonEl.offsetWidth;\n    this.buttonEl.classList.add('bounce-3');\n  }\n\n  /**\n   * Triggers a bounce animation on the button.\n   */\n  @Method()\n  async bounce() {\n    this.buttonEl.classList.remove('bounce-3');\n    void this.buttonEl.offsetWidth;\n    this.buttonEl.classList.add('bounce-3');\n  }\n\n  render() {\n    const disabled = this.btn_disabled || this.isLoading;\n    if (this.variant === 'icon') {\n      return (\n        <button\n          id={this.btn_id}\n          class={`icon-button ${this.btn_styles} ${this.visibleBackgroundOnHover ? 'hovered_bg' : ''}`}\n          ref={el => (this.buttonEl = el)}\n          onClick={() => this.clickHandler.emit()}\n          type={this.btn_type}\n          disabled={disabled}\n        >\n          {this.isLoading ? <span class=\"icon-loader\"></span> : <ir-icons class={'m-0 p-0'} name={this.icon_name}></ir-icons>}\n        </button>\n      );\n    }\n    let blockClass = this.btn_block ? 'btn-block' : '';\n    return (\n      <button\n        id={this.btn_id}\n        ref={el => (this.buttonEl = el)}\n        onClick={() => this.clickHandler.emit()}\n        class={`btn btn-${this.btn_color} ${this.btn_styles} ir-button-class  btn-${this.size} text-${this.textSize} ${blockClass}`}\n        type={this.btn_type}\n        style={this.btnStyle}\n        disabled={disabled}\n      >\n        {this.icon_name && this.iconPosition === 'left' && <ir-icons name={this.icon_name} style={this.icon_style}></ir-icons>}\n        {this.text &&\n          (this.renderContentAsHtml ? (\n            <span class=\"button-text m-0\" innerHTML={this.text} style={this.labelStyle}></span>\n          ) : (\n            <span style={this.labelStyle} class=\"button-text m-0\">\n              {this.text}\n            </span>\n          ))}\n        {this.isLoading ? <div class=\"btn_loader m-0 p-0\"></div> : this.iconPosition === 'right' && <ir-icons style={this.icon_style} name={this.icon_name}></ir-icons>}\n      </button>\n    );\n  }\n}\n",":host {\n  display: flex;\n  align-items: center;\n  width: fit-content;\n}\nbutton {\n  all: unset;\n}\n.CheckboxRoot {\n  background-color: white;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #cacfe7;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n.CheckboxRoot:disabled {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n  pointer-events: none;\n}\n\n.CheckboxRoot[data-state='checked'] {\n  background-color: #1e9ff2;\n  color: white;\n  border-color: #1e9ff2;\n}\ninput[type='checkbox'] {\n  background-color: initial;\n  cursor: default;\n  appearance: auto;\n  box-sizing: border-box;\n  margin: 3px 3px 3px 4px;\n  padding: initial;\n  border: initial;\n}\n.checkbox {\n  transform: translateX(-100%);\n  position: absolute;\n  pointer-events: none;\n  opacity: 0;\n  margin: 0px;\n  width: 20px;\n  height: 20px;\n}\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-checkbox',\n  styleUrl: 'ir-checkbox.css',\n  scoped: true,\n})\nexport class IrCheckbox {\n  /**\n   * Whether the checkbox is checked.\n   */\n  @Prop() checked: boolean = false;\n\n  /**\n   * The label text associated with the checkbox.\n   */\n  @Prop() label: string;\n\n  /**\n   * The unique ID of the checkbox element.\n   */\n  @Prop() checkboxId = v4();\n\n  /**\n   * The name attribute of the checkbox, used for form submission.\n   */\n  @Prop() name: string;\n\n  /**\n   * Whether the checkbox is in an indeterminate state.\n   */\n  @Prop() indeterminate: boolean;\n\n  /**\n   * Disables the checkbox when true.\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * CSS class applied to the label element.\n   */\n  @Prop() labelClass: string;\n\n  /**\n   * Internal state tracking whether the checkbox is currently checked.\n   */\n  @State() currentChecked = false;\n\n  /**\n   * Emitted when the checkbox's checked state changes.\n   */\n  @Event() checkChange: EventEmitter<boolean>;\n\n  private checkboxRef: HTMLButtonElement;\n\n  componentWillLoad() {\n    this.currentChecked = this.checked;\n  }\n  componentDidLoad() {\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.checked));\n    }\n  }\n\n  /**\n   * Watcher for the `checked` property. Syncs internal state with external prop changes.\n   */\n  @Watch('checked')\n  handleCheckedChange(newValue: boolean) {\n    if (newValue === this.currentChecked) {\n      return;\n    }\n    this.currentChecked = this.checked;\n  }\n\n  /**\n   * Handles user interaction with the checkbox and updates its state.\n   */\n  private handleCheckChange() {\n    this.currentChecked = !this.currentChecked;\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\n    }\n    this.checkChange.emit(this.currentChecked);\n  }\n\n  render() {\n    return (\n      <Host>\n        <button\n          disabled={this.disabled}\n          name={this.name}\n          onClick={this.handleCheckChange.bind(this)}\n          id={this.checkboxId}\n          data-state={this.currentChecked || this.indeterminate ? 'checked' : 'unchecked'}\n          value={'on'}\n          ref={ref => (this.checkboxRef = ref)}\n          type=\"button\"\n          role=\"checkbox\"\n          class=\"CheckboxRoot\"\n        >\n          {this.currentChecked && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\n              />\n            </svg>\n          )}\n          {this.indeterminate && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path fill=\"currentColor\" d=\"M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z\" />\n            </svg>\n          )}\n        </button>\n        <input type=\"checkbox\" indeterminate={this.indeterminate} aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.currentChecked} class=\"checkbox\" />\n        {this.label && (\n          <label htmlFor={this.checkboxId} class={this.labelClass}>\n            {this.label}\n          </label>\n        )}\n      </Host>\n    );\n  }\n}\n","import { IrOnlineResource } from './models';\nexport const onlineResources: IrOnlineResource[] = [\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\n  // },\n  {\n    isCSS: true,\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\n  },\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\n  },\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\n  },\n  {\n    isCSS: true,\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\n  },\n  // {\n  //   isCSS: true,\n  //   link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\n  // },\n\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\n  // },\n  // {\n  //   isJS: true,\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\n  // },\n];\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { IrOnlineResource } from '../../common/models';\nimport { onlineResources } from '../../common/ir.common.resources';\n\n@Component({\n  tag: 'ir-common',\n})\nexport class IrCommon {\n  @Prop({ reflect: true }) extraResources: string = '';\n  @State() resources: IrOnlineResource[] = onlineResources;\n  componentWillLoad() {\n    this.parseRefs();\n  }\n\n  componentDidLoad() {\n    this.initializeStyles();\n  }\n\n  @Watch('extraResources')\n  hrefsChanged() {\n    this.parseRefs();\n    this.initializeStyles();\n  }\n\n  private parseRefs() {\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\n  }\n\n  private appendTag(tagName: string, attributes: any) {\n    const tag = document.createElement(tagName);\n    const selectorParts = [];\n\n    Object.keys(attributes).forEach(attr => {\n      tag.setAttribute(attr, attributes[attr]);\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\n    });\n\n    const selector = `${tagName}${selectorParts.join('')}`;\n    const existingTag = document.querySelector(selector);\n\n    if (!existingTag) {\n      document.head.appendChild(tag);\n    }\n  }\n\n  private initializeStyles() {\n    this.resources.forEach(res => {\n      if (res.isCSS) {\n        this.appendTag('link', {\n          href: res.link,\n          rel: 'stylesheet',\n          type: 'text/css',\n        });\n      }\n      if (res.isJS) {\n        this.appendTag('script', {\n          src: res.link,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.icon {\n  height: var(--icon-size, 1.25rem);\n  width: var(--icon-size, 1.25rem);\n  margin: 0;\n  padding: 0;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport icons, { TIcons } from './icons';\n\n@Component({\n  tag: 'ir-icons',\n  styleUrl: 'ir-icons.css',\n  scoped: true,\n})\nexport class IrIcons {\n  /**\n   * The name of the icon to render.\n   * Must match a key from the imported `icons` map.\n   *\n   * Example:\n   * ```tsx\n   * <ir-icons name=\"check\" />\n   * ```\n   */\n  @Prop() name: TIcons;\n\n  /**\n   * Additional CSS class applied to the `<svg>` element.\n   * Can be used for sizing, positioning, etc.\n   */\n  @Prop() svgClassName: string;\n\n  /**\n   * Sets the `color` attribute on the `<svg>` element.\n   * Accepts any valid CSS color string.\n   */\n  @Prop() color: string;\n\n  render() {\n    const svgPath = icons[this.name] || null;\n    if (!svgPath) {\n      return null;\n    }\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" color={this.color} viewBox={svgPath.viewBox} class={`icon ${this.svgClassName}`}>\n        <path fill=\"currentColor\" d={svgPath.d}></path>\n      </svg>\n    );\n  }\n}\n","/* .loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #ffffff;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  padding: 1rem 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 30px;\n  gap: 1rem;\n  background: rgb(36, 36, 36);\n  color: white;\n  box-sizing: border-box;\n  opacity: 0;\n  animation: 300ms ease-in-out fadeIn forwards;\n}\n.loaderContainer p {\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n}\n.loadingScreenContainer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 100000;\n  background: rgba(255, 255, 255, 0.4);\n  pointer-events: all;\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  padding: 2rem;\n  box-sizing: border-box;\n}\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n} */\n.page-loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  background: white;\n}\n.loadingScreenContainer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 100000;\n  background: rgba(0, 0, 0, 0.2);\n  pointer-events: all;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport interceptor_requests from '@/stores/ir-interceptor.store';\nimport { InterceptorError } from './InterceptorError';\n\n@Component({\n  tag: 'ir-interceptor',\n  styleUrl: 'ir-interceptor.css',\n  scoped: true,\n})\nexport class IrInterceptor {\n  /**\n   * List of endpoint paths that should trigger loader logic and OTP handling.\n   */\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Calendar', '/ReAllocate_Exposed_Room', '/Get_Exposed_Bookings', '/UnBlock_Exposed_Unit'];\n\n  /**\n   * List of endpoints for which to suppress toast messages.\n   */\n  @Prop() suppressToastEndpoints: string[] = [];\n\n  /**\n   * Indicates whether the loader is visible.\n   */\n  @State() isShown = false;\n\n  /**\n   * Global loading indicator toggle.\n   */\n  @State() isLoading = false;\n\n  /**\n   * Indicates if the intercepted request involves unassigned units.\n   */\n  @State() isUnassignedUnit = false;\n\n  /**\n   * Count of `/Get_Exposed_Calendar` calls in progress.\n   */\n  @State() endpointsCount = 0;\n\n  /**\n   * Identifier of the endpoint that manually disabled page loader.\n   */\n  @State() isPageLoadingStopped: string | null = null;\n\n  /**\n   * Controls visibility of the OTP modal.\n   */\n  @State() showModal: boolean;\n\n  /**\n   * Request path (used in OTP handling).\n   */\n  @State() requestUrl: string;\n\n  /**\n   * The OTP endpoint path.\n   */\n  @State() baseOTPUrl: string;\n\n  /**\n   * Email for OTP prompt.\n   */\n  @State() email: string;\n\n  /**\n   * Emits a toast notification (`type`, `title`, `description`, `position`).\n   */\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  private otpModal: HTMLIrOtpModalElement;\n\n  private pendingConfig?: AxiosRequestConfig;\n  private pendingResolve?: (resp: AxiosResponse) => void;\n  private pendingReject?: (err: any) => void;\n  private response?: AxiosResponse;\n\n  @Listen('preventPageLoad', { target: 'body' })\n  handleStopPageLoading(e: CustomEvent) {\n    this.isLoading = false;\n    this.isPageLoadingStopped = e.detail;\n  }\n  componentWillLoad() {\n    this.setupAxiosInterceptors();\n  }\n  /**\n   * Sets up Axios request and response interceptors.\n   */\n  private setupAxiosInterceptors() {\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\n  }\n  /**\n   * Removes query params from URL for consistent endpoint matching.\n   */\n  private extractEndpoint(url: string): string {\n    return url.split('?')[0];\n  }\n\n  /**\n   * Returns true if the given endpoint is listed as \"handled\".\n   */\n  private isHandledEndpoint(url: string): boolean {\n    return this.handledEndpoints.includes(url);\n  }\n  /**\n   * Handles outbound Axios requests.\n   * - Triggers global loader for certain endpoints\n   * - Tracks `/Get_Exposed_Calendar` calls separately\n   */\n  private handleRequest(config: AxiosRequestConfig) {\n    const extractedUrl = this.extractEndpoint(config.url);\n    interceptor_requests[extractedUrl] = 'pending';\n    config.params = config.params || {};\n    // if (this.ticket) {\n    //   config.params.Ticket = this.ticket;\n    // }\n    if (this.isHandledEndpoint(extractedUrl) && this.isPageLoadingStopped !== extractedUrl) {\n      if (extractedUrl !== '/Get_Exposed_Calendar') {\n        this.isLoading = true;\n      } else {\n        if (this.endpointsCount > 0) {\n          this.isLoading = true;\n        }\n      }\n    }\n    if (extractedUrl === '/Get_Exposed_Calendar') {\n      this.endpointsCount = this.endpointsCount + 1;\n    }\n    return config;\n  }\n  /**\n   * Handles inbound Axios responses:\n   * - Resets loader\n   * - Handles OTP flows and exception messages\n   */\n  private async handleResponse(response: AxiosResponse) {\n    const extractedUrl = this.extractEndpoint(response.config.url);\n    if (this.isHandledEndpoint(extractedUrl)) {\n      this.isLoading = false;\n      this.isPageLoadingStopped = null;\n    }\n    interceptor_requests[extractedUrl] = 'done';\n    if (extractedUrl === '/Validate_Exposed_OTP') {\n      return response;\n    }\n    if (response.data.ExceptionCode === 'OTP') {\n      return this.handleOtpResponse({ response, extractedUrl });\n    }\n    if (response.data.ExceptionMsg?.trim()) {\n      this.handleResponseExceptions({ response, extractedUrl });\n    }\n    return response;\n  }\n  /**\n   * Handles and throws known API exception messages.\n   */\n  private handleResponseExceptions({ response, extractedUrl }: { response: AxiosResponse; extractedUrl: string }) {\n    this.handleError(response.data.ExceptionMsg, extractedUrl, response.data.ExceptionCode);\n    throw new InterceptorError(response.data.ExceptionMsg, response.data.ExceptionCode);\n  }\n  /**\n   * Handles OTP-required API responses:\n   * - Shows OTP modal\n   * - Stores request context\n   * - Defers resolution to OTP modal\n   */\n  private handleOtpResponse({ extractedUrl, response }: { response: AxiosResponse; extractedUrl: string }) {\n    this.showModal = true;\n    this.email = response.data.ExceptionMsg;\n    const name = extractedUrl.slice(1);\n    this.baseOTPUrl = name;\n    if (name === 'Check_OTP_Necessity') {\n      let methodName: string;\n      try {\n        const body = typeof response.config.data === 'string' ? JSON.parse(response.config.data) : response.config.data;\n        methodName = body.METHOD_NAME;\n      } catch (e) {\n        console.error('Failed to parse request body for METHOD_NAME', e);\n        methodName = name; // fallback\n      }\n      this.requestUrl = methodName;\n    } else {\n      this.requestUrl = name;\n    }\n\n    this.pendingConfig = response.config;\n    this.response = response;\n    return new Promise<AxiosResponse>((resolve, reject) => {\n      this.pendingResolve = resolve;\n      this.pendingReject = reject;\n      setTimeout(() => {\n        this.otpModal?.openModal();\n      }, 10);\n    });\n  }\n  /**\n   * Displays error toasts unless the endpoint is configured to suppress them.\n   */\n  private handleError(error: string, url: string, code: string) {\n    const shouldSuppressToast = this.suppressToastEndpoints.includes(url);\n    if (!shouldSuppressToast || (shouldSuppressToast && !code)) {\n      this.toast.emit({\n        type: 'error',\n        title: error,\n        description: '',\n        position: 'top-right',\n      });\n    }\n    return Promise.reject(error);\n  }\n  /**\n   * Handles the OTP modal completion.\n   * Retries the request or cancels based on user action.\n   */\n  private async handleOtpFinished(ev: CustomEvent) {\n    if (!this.pendingConfig || !this.pendingResolve || !this.pendingReject) {\n      return;\n    }\n\n    const { otp, type } = ev.detail;\n    if (type === 'cancel') {\n      const cancelResp = {\n        config: this.pendingConfig,\n        data: { cancelled: true, baseOTPUrl: this.baseOTPUrl },\n        status: 0,\n        statusText: 'OTP Cancelled',\n        headers: {},\n        request: {},\n      } as AxiosResponse;\n      this.pendingResolve(cancelResp);\n    } else if (type === 'success') {\n      if (!otp) {\n        this.pendingReject(new Error('OTP cancelled by user'));\n      } else if (this.baseOTPUrl === 'Check_OTP_Necessity') {\n        // don't resend, just resolve with the original response\n        this.pendingResolve(this.response!);\n      } else {\n        try {\n          const retryConfig: AxiosRequestConfig = {\n            ...this.pendingConfig,\n            data: typeof this.pendingConfig.data === 'string' ? JSON.parse(this.pendingConfig.data) : this.pendingConfig.data || {},\n          };\n          const resp = await axios.request(retryConfig);\n          this.pendingResolve(resp);\n        } catch (err) {\n          this.pendingReject(err);\n        }\n      }\n    }\n\n    // common clean-up\n    this.pendingConfig = undefined;\n    this.pendingResolve = undefined;\n    this.pendingReject = undefined;\n    this.showModal = false;\n    this.baseOTPUrl = null;\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.isLoading && !this.isPageLoadingStopped && (\n          <div class=\"loadingScreenContainer\">\n            <div class=\"loaderContainer\">\n              <span class=\"page-loader\"></span>\n            </div>\n          </div>\n        )}\n        {this.showModal && (\n          <ir-otp-modal\n            email={this.email}\n            baseOTPUrl={this.baseOTPUrl}\n            requestUrl={this.requestUrl}\n            ref={el => (this.otpModal = el)}\n            onOtpFinished={this.handleOtpFinished.bind(this)}\n          ></ir-otp-modal>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: fixed;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: white;\n}\n\n.loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.loaderContainer {\n  position: absolute;\n  z-index: 100001;\n  padding: 20px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  border-radius: 5px;\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-loading-screen',\n  styleUrl: 'ir-loading-screen.css',\n  scoped: true,\n})\nexport class IrLoadingScreen {\n  @Prop() message: string = '';\n  render() {\n    return (\n      <Host>\n        <span class=\"loader\"></span>\n        {/* {this.message && <p class={'m-0'}>{this.message}</p>} */}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyReport, DailyReportFilter } from './types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { RoomService } from '@/services/room.service';\nimport { MonthlyStatsResults, PropertyService } from '@/services/property.service';\nimport { TIcons } from '@/components/ui/ir-icons/icons';\n\n@Component({\n  tag: 'ir-monthly-bookings-report',\n  styleUrl: 'ir-monthly-bookings-report.css',\n  scoped: true,\n})\nexport class IrMonthlyBookingsReport {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading = true;\n  @State() isLoading: 'export' | 'filter' | null = null;\n\n  @State() reports: DailyReport[] = [];\n  @State() filters: DailyReportFilter;\n  @State() property_id: number;\n  @State() stats: Omit<MonthlyStatsResults, 'DailyStats'> & {\n    OccupancyDelta: number;\n  };\n\n  private baseFilters: DailyReportFilter;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  componentWillLoad() {\n    this.baseFilters = {\n      date: {\n        description: moment().format('MMMM YYYY'),\n        firstOfMonth: moment().startOf('month').format('YYYY-MM-DD'),\n        lastOfMonth: moment().endOf('month').format('YYYY-MM-DD'),\n      },\n      include_previous_year: false,\n    };\n    this.filters = this.baseFilters;\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Listen('applyFilters')\n  handleApplyFiltersChange(e: CustomEvent<DailyReportFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = e.detail;\n    this.getReports();\n  }\n\n  private async init() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.roomService.fetchLanguage(this.language), this.getReports()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getReports(isExportToExcel = false) {\n    try {\n      const getReportObj = (report): DailyReport => {\n        return {\n          day: report.Date,\n          units_booked: report.Units_booked,\n          occupancy_percent: report.Occupancy,\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const { date, include_previous_year } = this.filters;\n\n      const requests = [\n        this.propertyService.getMonthlyStats({\n          from_date: date.firstOfMonth,\n          to_date: date.lastOfMonth,\n          property_id: this.property_id,\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n\n      if (!isExportToExcel) {\n        requests.push(\n          this.propertyService.getMonthlyStats({\n            from_date: moment(date.firstOfMonth, 'YYYY-MM-DD').subtract(1, 'month').startOf('month').format('YYYY-MM-DD'),\n            to_date: moment(date.firstOfMonth, 'YYYY-MM-DD').subtract(1, 'month').endOf('month').format('YYYY-MM-DD'),\n            property_id: this.property_id,\n          }),\n        );\n      }\n\n      if (include_previous_year) {\n        requests.push(\n          this.propertyService.getMonthlyStats({\n            from_date: moment(date.firstOfMonth, 'YYYY-MM-DD').add(-1, 'year').format('YYYY-MM-DD'),\n            to_date: moment(date.lastOfMonth, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'),\n            property_id: this.property_id,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      const currentReports = results[0];\n      let enrichedReports: DailyReport[] = [];\n      const { DailyStats, ...rest } = currentReports;\n\n      let occupancyDelta = -1;\n      if (!isExportToExcel && results[1]) {\n        occupancyDelta = parseFloat(rest.AverageOccupancy.toString()) - parseFloat(results[1].AverageOccupancy.toString());\n      }\n\n      this.stats = { ...rest, OccupancyDelta: occupancyDelta };\n\n      if (include_previous_year && results[isExportToExcel ? 1 : 2]) {\n        const previousYearReports = results[isExportToExcel ? 1 : 2];\n        let formattedReports = previousYearReports.DailyStats.map(getReportObj);\n        enrichedReports = DailyStats.map(getReportObj).map(current => {\n          const previous = formattedReports.find(prev => prev.day === moment(current.day, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'));\n          return {\n            ...current,\n            last_year: previous ?? null,\n          };\n        });\n      } else {\n        enrichedReports = DailyStats.map(getReportObj);\n      }\n      this.reports = [...enrichedReports];\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  private StatsCard({ icon, subtitle, title, value }: { icon: TIcons; title: string; subtitle: string; value: string }) {\n    if (!value) {\n      return null;\n    }\n    return (\n      <div class=\"card p-1 d-flex flex-column flex-fill m-0\" style={{ gap: '0.5rem' }}>\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <p class=\"m-0 p-0\">{title}</p>\n          <ir-icons name={icon}></ir-icons>\n        </div>\n        <h4 class=\"m-0 p-0\">\n          <b class=\"m-0 p-0\">{value}</b>\n        </h4>\n        {subtitle && <p class=\"m-0 p-0 small text-muted\">{subtitle}</p>}\n      </div>\n    );\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Occupancy</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <section>\n            <div class=\"d-flex flex-column flex-md-row w-100\" style={{ gap: '1rem', alignItems: 'stretch' }}>\n              {this.StatsCard({\n                icon: this.stats?.OccupancyDelta < 0 ? 'arrow-trend-down' : 'arrow-trend-up',\n                title: 'Average Occupancy',\n                value: this.stats.AverageOccupancy ? this.stats?.AverageOccupancy.toFixed(2) + '%' : null,\n                subtitle: `${this.stats?.OccupancyDelta < 0 ? '-' : '+'}${this.stats?.OccupancyDelta.toFixed(2)}% from last month`,\n              })}\n              {this.StatsCard({\n                icon: 'hotel',\n                title: 'Total Units',\n                value: this.stats?.TotalUnitsBooked ? this.stats?.TotalUnitsBooked.toString() : null,\n                subtitle: 'Booked',\n              })}\n              {this.StatsCard({\n                icon: 'calendar',\n                title: 'Peak Days',\n                value: this.stats?.PeakDays.length === 0 ? null : this.stats?.PeakDays?.map(pd => moment(pd.Date, 'YYYY-MM-DD').format('D').concat('th')).join(' - '),\n                subtitle: `${Math.max(...(this.stats.PeakDays?.map(pd => pd.OccupancyPercent) || []))}% occupancy`,\n              })}\n            </div>\n            <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n              <ir-monthly-bookings-report-filter isLoading={this.isLoading === 'filter'} class=\"filters-card\" baseFilters={this.baseFilters}></ir-monthly-bookings-report-filter>\n              <ir-monthly-bookings-report-table reports={this.reports}></ir-monthly-bookings-report-table>\n            </div>\n          </section>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  height: 100%;\n  flex: 1 1 0%;\n}\n.sales-filters-card {\n  min-width: max-content;\n  flex: 1 1 0%;\n}\n#salesFiltersCollapse.collapse:not(.show) {\n  display: block;\n}\n","import { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { DailyReportFilter, ReportDate } from '../types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-monthly-bookings-report-filter',\n  styleUrl: 'ir-monthly-bookings-report-filter.css',\n  scoped: true,\n})\nexport class IrMonthlyBookingsReportFilter {\n  @Prop() isLoading: boolean;\n  @Prop() baseFilters: DailyReportFilter;\n\n  @State() filters: DailyReportFilter;\n\n  @State() collapsed: boolean = false;\n  @State() window: string;\n\n  @Event() applyFilters: EventEmitter<DailyReportFilter>;\n\n  private dates: ReportDate[] = [];\n\n  componentWillLoad() {\n    this.dates = this.generateMonths();\n    this.filters = this.baseFilters;\n  }\n\n  private updateFilter(params: Partial<DailyReportFilter>) {\n    this.filters = { ...this.filters, ...params };\n  }\n\n  private applyFiltersEvt(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.applyFilters.emit(this.filters);\n  }\n  private resetFilters(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = this.baseFilters;\n    this.applyFilters.emit(this.filters);\n  }\n\n  private generateMonths(): ReportDate[] {\n    const firstOfThisMonth = moment().startOf('month');\n    const startDate = moment().subtract(1, 'year').startOf('month');\n    const dates = [];\n    const format = 'YYYY-MM-DD';\n\n    let cursor = startDate.clone();\n\n    while (cursor.format(format) !== firstOfThisMonth.format(format)) {\n      dates.push({\n        description: cursor.format('MMMM YYYY'),\n        firstOfMonth: cursor.format('YYYY-MM-DD'),\n        lastOfMonth: cursor.clone().endOf('month').format('YYYY-MM-DD'),\n      });\n      cursor.add(1, 'month');\n    }\n\n    dates.push({\n      description: firstOfThisMonth.format('MMMM YYYY'),\n      firstOfMonth: firstOfThisMonth.format('YYYY-MM-DD'),\n      lastOfMonth: firstOfThisMonth.clone().endOf('month').format('YYYY-MM-DD'),\n    });\n\n    return dates.reverse();\n  }\n\n  render() {\n    return (\n      <div class=\"card mb-0 p-1 d-flex flex-column sales-filters-card\">\n        <div class=\"d-flex align-items-center justify-content-between sales-filters-header\">\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n              <path\n                fill=\"currentColor\"\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\n              />\n            </svg>\n            <h4 class=\"m-0 p-0 flex-grow-1\">{locales.entries?.Lcz_Filters || 'Filters'}</h4>\n          </div>\n        </div>\n        <div class=\"m-0 p-0 collapse filters-section\" id=\"salesFiltersCollapse\">\n          <fieldset class=\"pt-1 filter-group\">\n            <label htmlFor=\"rooms\" class=\"m-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n              For\n            </label>\n            <ir-select\n              showFirstOption={false}\n              selectedValue={this.filters?.date?.description}\n              onSelectChange={e => {\n                this.updateFilter({ date: this.dates.find(d => d.description === e.detail) });\n              }}\n              LabelAvailable={false}\n              data={this.dates.map(d => ({\n                text: d.description,\n                value: d.description,\n              }))}\n            ></ir-select>\n          </fieldset>\n          <div class=\"d-flex align-items-center mt-1 mb-2 compare-year-toggle\" style={{ gap: '0.5rem' }}>\n            <label htmlFor=\"compare-prev-year\" style={{ paddingBottom: '0.25rem' }}>\n              Compare with previous year\n            </label>\n            <ir-checkbox\n              checked={this.filters?.include_previous_year}\n              checkboxId=\"compare-prev-year\"\n              onCheckChange={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.updateFilter({ include_previous_year: e.detail });\n              }}\n            ></ir-checkbox>\n          </div>\n\n          <div class=\"d-flex align-items-center justify-content-end filter-actions\" style={{ gap: '1rem' }}>\n            <ir-button\n              btn_type=\"button\"\n              data-testid=\"reset\"\n              text={locales.entries?.Lcz_Reset ?? 'Reset'}\n              size=\"sm\"\n              btn_color=\"secondary\"\n              onClickHandler={e => this.resetFilters(e)}\n            ></ir-button>\n            <ir-button\n              btn_type=\"button\"\n              data-testid=\"apply\"\n              isLoading={this.isLoading}\n              text={locales.entries?.Lcz_Apply ?? 'Apply'}\n              size=\"sm\"\n              onClickHandler={e => this.applyFiltersEvt(e)}\n            ></ir-button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.future-report td {\n  background-color: hsla(210, 16%, 85.2%, 0.25) !important;\n}\n.legend {\n  height: 12px;\n  aspect-ratio: 1;\n  background: #000;\n  border-radius: 4px;\n}\n.secondary {\n  background: #6692b3;\n}\n.progress-main {\n  width: 450px !important;\n}\n","/* Base styles */\n.ir-table-row td {\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n  z-index: 2;\n  background-color: white;\n  white-space: nowrap;\n  /* width: max-content;\n  max-width: max-content; */\n}\n/* .ir-table-row td:last-child {\n  width: 100%; \n}*/\n/* .ir-table-row td:first-child,\n.table thead th:first-child {\n  position: sticky;\n  left: var(--ir-table-sticky-padding,-1rem);\n} */\n\n.table td {\n  border-top: 0;\n  border-bottom: 1px solid #e3ebf3;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n/* .table thead th:first-child {\n  border-top-left-radius: 0.5rem;\n  }\n  .table thead th:last-child {\n    border-top-right-radius: 0.5rem;\n    } */\n.table thead th {\n  border: none !important;\n  background: #ececec;\n  color: #374151;\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n}\n\n/* Selected Rows Styles */\n\n.selected td {\n  background: #e3f3fa !important;\n}\n.selected td {\n  color: var(--gray-dark) !important;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n/* Sorting styles */\n.sortable,\n.ir-table-row {\n  text-transform: capitalize;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.sortable:hover {\n  color: #212529;\n  background-color: #e2e8f0 !important;\n  border-color: #dae0e5;\n  cursor: pointer;\n}\n.ir-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.sortable:active {\n  color: #212529;\n  background-color: #e2e8f0;\n  border-color: #d3d9df;\n}\n.sortable svg {\n  color: var(--blue);\n}\n/* .action-row {\n  position: sticky;\n  right:var(--ir-table-sticky-padding,-1rem);\n} */\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { DailyReport } from '../types';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-monthly-bookings-report-table',\n  styleUrls: ['ir-monthly-bookings-report-table.css', '../../../common/table.css'],\n  scoped: true,\n})\nexport class IrMonthlyBookingsReportTable {\n  @Prop() reports: DailyReport[] = [];\n  render() {\n    const totalUnits = this.reports?.reduce((prev, curr) => prev + curr.units_booked, 0) ?? 0;\n    return (\n      <Host class={'card p-1  table-container table-responsive'}>\n        <table class=\"table\">\n          <thead class=\"table-header\">\n            <tr>\n              <th class=\"text-center\">Date</th>\n              <th class=\"text-center\">Units booked</th>\n              <th>Occupancy</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.reports.length === 0 && (\n              <tr>\n                <td colSpan={3} class={'text-center'} style={{ height: '30vh' }}>\n                  No data found\n                </td>\n              </tr>\n            )}\n            {this.reports.map(report => {\n              const mainPercentage = `${parseFloat(report.occupancy_percent.toString()).toFixed(2)}%`;\n              const secondaryPercentage = report.last_year ? `${parseFloat(report.last_year.occupancy_percent.toString()).toFixed(2)}%` : null;\n              const reportDate = moment(report.day, 'YYYY-MM-DD');\n              const isFutureDate = moment().isBefore(reportDate, 'dates');\n              return (\n                <tr key={report.day} class={`ir-table-row ${isFutureDate ? 'future-report' : ''}`}>\n                  <td class={'text-center'}>{reportDate.format('D')}</td>\n                  <td class=\"text-center\">\n                    <div class={'d-flex flex-column'} style={{ gap: '0.5rem' }}>\n                      <p class={`p-0 m-0 ${report.last_year?.units_booked ? 'font-weight-bold' : ''}`}>{report.units_booked}</p>\n                      {report.last_year?.units_booked > 0 && <p class=\"p-0 m-0\">{report.last_year?.units_booked}</p>}\n                    </div>\n                  </td>\n                  <td>\n                    <div class={'d-flex flex-column'} style={{ gap: '0.5rem' }}>\n                      <ir-progress-indicator percentage={mainPercentage}></ir-progress-indicator>\n                      {report.last_year?.occupancy_percent > 0 && <ir-progress-indicator percentage={secondaryPercentage} color=\"secondary\"></ir-progress-indicator>}\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td></td>\n              <td>\n                {' '}\n                <b style={{ whiteSpace: 'nowrap' }}>Total: {totalUnits}</b>\n              </td>\n              <td colSpan={1} class=\"text-right\" style={{ whiteSpace: 'nowrap' }}>\n                <div class={'d-flex align-items-center justify-content-end'} style={{ gap: '1rem', paddingTop: '0.5rem' }}>\n                  <div class=\"d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n                    <div class=\"legend bg-primary\"></div>\n                    <p class=\"p-0 m-0\">Selected period </p>\n                  </div>\n                  <div class=\"d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n                    <div class=\"legend secondary\"></div>\n                    <p class=\"p-0 m-0\">Previous year</p>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </Host>\n    );\n  }\n}\n",".otp-input-wrapper {\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-evenly;\n}\n\n.otp-digit {\n  --otp-size: 3rem;\n  width: var(--otp-size) !important;\n  height: var(--otp-size) !important;\n  padding: 0;\n  font-size: 24px;\n  font-weight: 500;\n  text-align: center;\n  background-color: #fff;\n  padding: 0 !important;\n}\n\n.otp-digit:disabled {\n  background-color: #e9ecef;\n  cursor: not-allowed;\n}\n\n/* Remove up/down arrows from number inputs */\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type='number'] {\n  -moz-appearance: textfield;\n}\n\n/* Make inputs responsive */\n@media (max-width: 480px) {\n  .otp-digit {\n    width: 35px;\n    height: 45px;\n    font-size: 20px;\n  }\n\n  .otp-input-wrapper {\n    gap: 6px;\n  }\n}\n\n@media (max-width: 360px) {\n  .otp-digit {\n    width: 30px;\n    height: 40px;\n    font-size: 18px;\n  }\n\n  .otp-input-wrapper {\n    gap: 4px;\n  }\n}\n","import { Component, Event, EventEmitter, h, Host, Prop, State, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ir-otp',\n  styleUrl: 'ir-otp.css',\n  scoped: true,\n})\nexport class IrOtp {\n  /**\n   * The length of the OTP code\n   */\n  @Prop() length: number = 6;\n  /**\n   * The default OTP code\n   */\n  @Prop() defaultValue: string;\n\n  /**\n   * Whether the input is disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Placeholder character to display\n   */\n  @Prop() placeholder: string = '';\n\n  /**\n   * Input type - can be 'text', 'password', 'number', or 'tel'\n   */\n  @Prop() type: 'text' | 'password' | 'number' | 'tel' = 'number';\n\n  /**\n   * Auto focus on the first input when component loads\n   */\n  @Prop() autoFocus: boolean = true;\n\n  /**\n   * Whether to mask the input (show dots instead of text)\n   */\n  @Prop() secure: boolean = false;\n\n  /**\n   * Allow only numbers (0-9) as input\n   */\n  @Prop() numbersOnly: boolean = false;\n\n  /**\n   * Event emitted when the OTP value changes\n   */\n  @Event() otpChange: EventEmitter<string>;\n\n  /**\n   * Event emitted when the OTP is complete\n   */\n  @Event() otpComplete: EventEmitter<string>;\n\n  /**\n   * Current OTP value as an array of characters\n   */\n  @State() otpValues: string[] = [];\n\n  /**\n   * Reference to input elements\n   */\n  private inputRefs: HTMLInputElement[] = [];\n\n  /**\n   * Initialize the component\n   */\n  componentWillLoad() {\n    this.otpValues = Array(this.length).fill('');\n    if (this.defaultValue) {\n      this.setValue(this.defaultValue);\n    }\n  }\n\n  /**\n   * Focus the first input after component renders\n   */\n  componentDidLoad() {\n    if (this.autoFocus && this.inputRefs[0]) {\n      setTimeout(() => {\n        this.inputRefs[0].focus();\n      }, 0);\n    }\n  }\n\n  /**\n   * Watch for length changes and update the OTP values array\n   */\n  @Watch('length')\n  handleLengthChange(newLength: number) {\n    if (newLength < 1) return;\n\n    const oldLength = this.otpValues.length;\n\n    if (newLength > oldLength) {\n      // Add empty slots\n      this.otpValues = [...this.otpValues, ...Array(newLength - oldLength).fill('')];\n    } else if (newLength < oldLength) {\n      // Remove extra slots\n      this.otpValues = this.otpValues.slice(0, newLength);\n    }\n\n    this.emitChanges();\n  }\n\n  /**\n   * Update the current OTP value at the specified index\n   */\n  handleInput = (event: Event, index: number) => {\n    const input = event.target as HTMLInputElement;\n    let value = input.value;\n\n    // For number input type, restrict to digits only\n    if (this.numbersOnly) {\n      value = value.replace(/[^0-9]/g, '');\n    }\n\n    // Take only the last character if someone enters multiple\n    if (value.length > 1) {\n      value = value.slice(-1);\n      input.value = value;\n    }\n\n    this.otpValues[index] = value;\n    this.emitChanges();\n\n    // Move to next input if this one is filled\n    if (value && index < this.length - 1) {\n      this.inputRefs[index + 1].focus();\n    }\n  };\n\n  /**\n   * Handle keyboard navigation\n   */\n  handleKeyDown = (event: KeyboardEvent, index: number) => {\n    switch (event.key) {\n      case 'Backspace':\n        if (!this.otpValues[index] && index > 0) {\n          // If current field is empty and backspace is pressed, go to previous field\n          this.inputRefs[index - 1].focus();\n          // Prevent default to avoid browser navigation\n          event.preventDefault();\n        }\n        break;\n      case 'Delete':\n        // Clear current input on delete\n        this.otpValues[index] = '';\n        this.emitChanges();\n        break;\n      case 'ArrowLeft':\n        // Move to previous input on left arrow\n        if (index > 0) {\n          this.inputRefs[index - 1].focus();\n          event.preventDefault();\n        }\n        break;\n      case 'ArrowRight':\n        // Move to next input on right arrow\n        if (index < this.length - 1) {\n          this.inputRefs[index + 1].focus();\n          event.preventDefault();\n        }\n        break;\n      case 'Home':\n        // Move to first input\n        this.inputRefs[0].focus();\n        event.preventDefault();\n        break;\n      case 'End':\n        // Move to last input\n        this.inputRefs[this.length - 1].focus();\n        event.preventDefault();\n        break;\n    }\n  };\n\n  /**\n   * Handle paste event to populate the OTP fields\n   */\n  handlePaste = (event: ClipboardEvent, index: number) => {\n    event.preventDefault();\n    const pastedData = event.clipboardData?.getData('text') || '';\n\n    // If numbersOnly is enabled, filter non-number characters\n    const filteredData = this.numbersOnly ? pastedData.replace(/[^0-9]/g, '') : pastedData;\n\n    // Fill OTP values with pasted data\n    for (let i = 0; i < Math.min(filteredData.length, this.length - index); i++) {\n      this.otpValues[index + i] = filteredData[i];\n    }\n\n    // Update inputs with new values\n    this.inputRefs.forEach((input, idx) => {\n      input.value = this.otpValues[idx] || '';\n    });\n\n    // Focus on the next empty input or the last one\n    const nextEmptyIndex = this.otpValues.findIndex(val => !val);\n    if (nextEmptyIndex !== -1 && nextEmptyIndex < this.length) {\n      this.inputRefs[nextEmptyIndex].focus();\n    } else {\n      this.inputRefs[this.length - 1].focus();\n    }\n\n    this.emitChanges();\n  };\n\n  /**\n   * Focus handler to select all text when focused\n   */\n  handleFocus = (event: FocusEvent) => {\n    const input = event.target as HTMLInputElement;\n    if (input.value) {\n      setTimeout(() => input.select(), 0);\n    }\n  };\n\n  /**\n   * Helper method to emit change events\n   */\n  private emitChanges() {\n    const otpValue = this.otpValues.join('');\n    this.otpChange.emit(otpValue);\n\n    // If all fields are filled, trigger the complete event\n    if (this.otpValues.every(val => val !== '') && this.otpValues.length === this.length) {\n      this.otpComplete.emit(otpValue);\n    }\n  }\n\n  /**\n   * Manually clear all inputs\n   */\n  public clear() {\n    this.otpValues = Array(this.length).fill('');\n    this.inputRefs.forEach(input => {\n      input.value = '';\n    });\n    this.emitChanges();\n\n    // Focus the first input after clearing\n    if (this.inputRefs[0]) {\n      this.inputRefs[0].focus();\n    }\n  }\n\n  /**\n   * Set OTP values programmatically\n   */\n  public setValue(value: string) {\n    const valueArray = value.split('');\n\n    for (let i = 0; i < this.length; i++) {\n      this.otpValues[i] = i < valueArray.length ? valueArray[i] : '';\n    }\n\n    // Update the actual input elements\n    this.inputRefs.forEach((input, idx) => {\n      input.value = this.otpValues[idx] || '';\n    });\n\n    this.emitChanges();\n  }\n\n  render() {\n    return (\n      <Host class=\"otp-input-container\">\n        <div class=\"otp-input-wrapper\">\n          {Array(this.length)\n            .fill(null)\n            .map((_, index) => (\n              <input\n                ref={el => (this.inputRefs[index] = el as HTMLInputElement)}\n                type={this.type}\n                inputmode={this.numbersOnly ? 'numeric' : 'text'}\n                class=\"otp-digit form-control input-sm\"\n                maxlength=\"1\"\n                placeholder={this.placeholder}\n                disabled={this.disabled}\n                autocomplete=\"one-time-code\"\n                value={this.otpValues[index]}\n                onInput={e => this.handleInput(e, index)}\n                onKeyDown={e => this.handleKeyDown(e, index)}\n                onPaste={e => this.handlePaste(e, index)}\n                onFocus={this.handleFocus}\n                aria-label={`Digit ${index + 1} of ${this.length}`}\n              />\n            ))}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n:root {\n  --otp-modal-padding: 1.5rem;\n}\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n.otp-modal-header {\n  border-bottom: 0px !important;\n}\n.otp-modal {\n  z-index: 9999999 !important;\n  border: none;\n  padding: 0 !important;\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.35rem;\n  outline: 0;\n}\n.otp-modal-content {\n  background-color: white;\n  border: none;\n  border-radius: 0.35rem;\n  outline: 0;\n}\n.otp-modal-title {\n  margin-bottom: 0;\n  line-height: 1.45;\n}\n.otp-modal-body {\n  max-height: 100% !important;\n  padding: 0 var(--otp-modal-padding);\n}\n.otp-modal-header {\n  display: flex;\n  justify-content: space-between;\n  padding: var(--otp-modal-padding);\n  padding-bottom: 1rem;\n  border-top-left-radius: 0.35rem;\n  border-top-right-radius: 0.35rem;\n}\n.otp-modal-dialog {\n  z-index: 9999999 !important;\n}\n.otp-modal-footer {\n  border-top: 0 !important;\n  display: flex;\n  gap: 0.5rem;\n  flex-direction: column;\n  padding: var(--otp-modal-padding);\n  padding-top: 0.5rem !important;\n}\n.verification-message {\n  max-width: 90%;\n}\n.modal-loading-container {\n  height: 250px;\n  width: 80vw;\n}\n@media (min-width: 768px) {\n  .otp-modal-dialog,\n  .otp-modal-content {\n    width: fit-content !important;\n  }\n  .otp-modal-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n  .modal-loading-container {\n    width: 380px !important;\n  }\n  .verification-message {\n    max-width: 350px !important;\n  }\n}\n","import Token from '@/models/Token';\nimport { RoomService } from '@/services/room.service';\nimport { SystemService } from '@/services/system.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Fragment, Host, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\nimport { z } from 'zod';\n\n@Component({\n  tag: 'ir-otp-modal',\n  styleUrl: 'ir-otp-modal.css',\n  scoped: false,\n})\nexport class IrOtpModal {\n  @Prop() language: string = 'en';\n  /** Number of seconds to wait before allowing OTP resend */\n  @Prop() resendTimer = 60;\n\n  /** URL or endpoint used to validate the OTP */\n  @Prop() requestUrl: string;\n  /** URL or endpoint used to validate the OTP */\n  @Prop() baseOTPUrl: string;\n\n  /** Whether the resend option should be visible */\n  @Prop() showResend: boolean = true;\n\n  /** User's email address to display in the modal and send the OTP to */\n  @Prop() email: string;\n\n  /** Number of digits the OTP should have */\n  @Prop() otpLength: number = 6;\n\n  /** ticket for verifying and resending the verification code */\n  @Prop() ticket: string;\n\n  @State() otp = '';\n  @State() error = '';\n  @State() isLoading = false;\n  @State() timer = 60;\n\n  private dialogRef: HTMLDialogElement;\n\n  private timerInterval: number;\n  private systemService = new SystemService();\n  private roomService = new RoomService();\n  private tokenService = new Token();\n\n  private otpVerificationSchema = z.object({ email: z.string().nonempty(), requestUrl: z.string().nonempty(), otp: z.string().length(this.otpLength) });\n\n  /** Emits the final OTP (or empty on cancel) */\n  @Event({ bubbles: true, composed: true }) otpFinished: EventEmitter<{\n    otp: string;\n    type: 'success' | 'cancelled';\n  }>;\n  @State() isInitializing: boolean;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n    }\n    this.fetchLocale();\n  }\n\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(newValue);\n      this.fetchLocale();\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  handleKeyDownChange(e: KeyboardEvent) {\n    if (e.key === 'Escape' && this.dialogRef?.open) {\n      e.preventDefault();\n    }\n  }\n  /** Open & reset everything */\n  @Method()\n  async openModal() {\n    this.resetState();\n    // $(this.modalRef).modal({ backdrop: 'static', keyboard: false });\n    // $(this.modalRef).modal('show');\n    if (typeof this.dialogRef.showModal === 'function') {\n      this.dialogRef.showModal();\n    } else {\n      // fallback for browsers without dialog support\n      this.dialogRef.setAttribute('open', '');\n    }\n    if (this.showResend) this.startTimer();\n    await this.focusFirstInput();\n  }\n\n  /** Hide & clear timer */\n  @Method()\n  async closeModal() {\n    // $(this.modalRef).modal('hide');\n    if (typeof this.dialogRef.close === 'function') {\n      this.dialogRef.close();\n    } else {\n      this.dialogRef.removeAttribute('open');\n    }\n    this.otp = null;\n    this.clearTimer();\n  }\n  private async fetchLocale() {\n    if (!this.tokenService.getToken()) {\n      return;\n    }\n    this.isInitializing = true;\n    await this.roomService.fetchLanguage(this.language, ['_USER_MGT']);\n    this.isInitializing = false;\n  }\n\n  private resetState() {\n    this.otp = '';\n    this.error = '';\n    this.isLoading = false;\n    this.timer = 60;\n    this.clearTimer();\n  }\n\n  private startTimer() {\n    this.clearTimer();\n    this.timerInterval = window.setInterval(() => {\n      if (this.timer > 0) {\n        this.timer--;\n      } else {\n        this.clearTimer();\n      }\n    }, 1000);\n  }\n\n  private clearTimer() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  private async focusFirstInput() {\n    await new Promise(r => setTimeout(r, 50));\n    const first = this.dialogRef.querySelector('input');\n    first && (first as HTMLInputElement).focus();\n  }\n\n  private handleOtpComplete = (e: CustomEvent<string>) => {\n    this.error = '';\n    this.otp = e.detail;\n  };\n\n  private async verifyOtp() {\n    if (this.otp.length < this.otpLength) return;\n    this.isLoading = true;\n    this.otpVerificationSchema.parse({\n      otp: this.otp,\n      requestUrl: this.requestUrl,\n      email: this.email,\n    });\n    try {\n      await this.systemService.validateOTP({ METHOD_NAME: this.requestUrl, OTP: this.otp });\n      this.otpFinished.emit({ otp: this.otp, type: 'success' });\n      this.closeModal();\n    } catch (err) {\n      this.error = 'Verification failed. Please try again.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async resendOtp() {\n    if (this.timer > 0) return;\n    // Resend otp\n    try {\n      await this.systemService.resendOTP({ METHOD_NAME: this.requestUrl });\n      this.timer = 60;\n      this.startTimer();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private handleCancelClicked() {\n    if (this.baseOTPUrl === 'Check_OTP_Necessity') {\n      this.closeModal();\n      this.otpFinished.emit({\n        otp: null,\n        type: 'cancelled',\n      });\n      return;\n    }\n    window.location.reload();\n  }\n  disconnectedCallback() {\n    this.clearTimer();\n  }\n  render() {\n    return (\n      <Host>\n        <dialog ref={el => (this.dialogRef = el)} class=\"otp-modal\" aria-modal=\"true\">\n          <form method=\"dialog\" class=\"otp-modal-content\">\n            {this.isInitializing || !locales.entries ? (\n              <div class={'d-flex align-items-center justify-content-center modal-loading-container'}>\n                <ir-spinner></ir-spinner>\n              </div>\n            ) : (\n              <Fragment>\n                <header class=\"otp-modal-header\">\n                  <h5 class=\"otp-modal-title\">{locales.entries.Lcz_VerifyYourIdentity}</h5>\n                </header>\n\n                <section class=\"otp-modal-body d-flex align-items-center flex-column\">\n                  <p class=\"verification-message text-truncate\">\n                    {locales.entries.Lcz_WeSentYuoVerificationCode} {this.email}\n                  </p>\n                  <ir-otp autoFocus length={this.otpLength} defaultValue={this.otp} onOtpComplete={this.handleOtpComplete}></ir-otp>\n\n                  {this.error && <p class=\"text-danger small mt-1 p-0 mb-0\">{this.error}</p>}\n\n                  {this.showResend && (\n                    <Fragment>\n                      {this.timer > 0 ? (\n                        <p class=\"small mt-1\">\n                          {locales.entries.Lcz_ResendCode} 00:{String(this.timer).padStart(2, '0')}\n                        </p>\n                      ) : (\n                        <ir-button\n                          class=\"mt-1\"\n                          btn_color=\"link\"\n                          onClickHandler={e => {\n                            e.stopImmediatePropagation();\n                            e.stopPropagation();\n                            this.resendOtp();\n                          }}\n                          size=\"sm\"\n                          text={'Didn’t receive code? Resend'}\n                        ></ir-button>\n                      )}\n                    </Fragment>\n                  )}\n                </section>\n\n                <footer class=\"otp-modal-footer justify-content-auto\">\n                  <ir-button class=\"w-100\" btn_styles=\"flex-fill\" text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" onClick={this.handleCancelClicked.bind(this)}></ir-button>\n                  <ir-button\n                    class=\"w-100\"\n                    btn_styles=\"flex-fill\"\n                    text={locales.entries.Lcz_VerifyNow}\n                    isLoading={this.isLoading}\n                    btn_disabled={this.otp?.length < this.otpLength || this.isLoading}\n                    onClick={() => this.verifyOtp()}\n                  ></ir-button>\n                </footer>\n              </Fragment>\n            )}\n          </form>\n        </dialog>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.secondary-progress {\n  background: #6692b3;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-progress-indicator',\n  styleUrl: 'ir-progress-indicator.css',\n  scoped: true,\n})\nexport class IrProgressIndicator {\n  /**\n   * The percentage value to display and fill the progress bar.\n   * Example: \"75%\"\n   */\n  @Prop() percentage: string;\n\n  /**\n   * The color variant of the progress bar.\n   * Options:\n   * - 'primary' (default)\n   * - 'secondary'\n   */\n  @Prop() color: 'primary' | 'secondary' = 'primary';\n\n  render() {\n    return (\n      <Host class=\"progress-main\">\n        <span class=\"progress-totle\">{this.percentage}</span>\n        <div class=\"progress-line\">\n          <div class={`progress ${this.color === 'primary' ? 'bg-primary' : 'secondary-progress'} mb-0`} style={{ width: this.percentage }}></div>\n        </div>\n      </Host>\n    );\n  }\n}\n",".border-theme {\n  border: 1px solid #cacfe7;\n}\n@keyframes bounce {\n  0%,\n  100% {\n    transform: scale(1);\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\n  }\n  50% {\n    transform: scale(1.2);\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  }\n}\n.bounce-3 {\n  animation: bounce 1s 1;\n}\n","import { Component, Prop, h, Event, EventEmitter, State, Watch, Listen } from '@stencil/core';\nimport { selectOption } from '@/common/models';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-select',\n  styleUrl: 'ir-select.css',\n  scoped: true,\n})\nexport class IrSelect {\n  // Name of the select input\n  @Prop() name: string;\n\n  // Options to populate the select\n  @Prop() data: selectOption[];\n\n  // Text shown in the label\n  @Prop() label = '<label>';\n\n  // Custom class for select\n  @Prop() selectStyles: string;\n\n  // Inline styles for the select\n  @Prop() selectForcedStyles: { [key: string]: string };\n\n  // Custom class for the outer container\n  @Prop() selectContainerStyle: string;\n\n  // Selected value of the select\n  @Prop({ reflect: true, mutable: true }) selectedValue = null;\n\n  // Marks the select as required\n  @Prop() required: boolean;\n\n  // Whether to render the label\n  @Prop() LabelAvailable: boolean = true;\n\n  // Placeholder text for the first option\n  @Prop() firstOption: string = 'Select';\n\n  // Enable/disable default form styling\n  @Prop() selectStyle: boolean = true;\n\n  // Whether to show the first placeholder option\n  @Prop() showFirstOption: boolean = true;\n\n  // Set to true when the form is submitted\n  @Prop() submited: boolean = false;\n\n  // Size of the select: 'sm' | 'md' | 'lg'\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  // Size of the text: 'sm' | 'md' | 'lg'\n  @Prop() textSize: 'sm' | 'md' | 'lg' = 'md';\n\n  // Position of the label\n  @Prop() labelPosition: 'left' | 'right' | 'center' = 'left';\n\n  // Background color of the label\n  @Prop() labelBackground: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | null = null;\n\n  // Text color of the label\n  @Prop() labelColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'dark';\n\n  // Border color of the label\n  @Prop() labelBorder: 'theme' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' | 'none' = 'theme';\n\n  // Width of the label (Bootstrap cols)\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\n\n  // Unique ID for the select element\n  @Prop() select_id: string = v4();\n\n  // Data-testid for testing\n  @Prop() testId: string;\n\n  // Whether the select is disabled\n  @Prop() disabled: boolean;\n\n  // Whether the select has an error state\n  @Prop({ mutable: true }) error: boolean = false;\n\n  // Tracks if the field has been touched\n  @State() initial: boolean = true;\n\n  // Tracks if the field is valid\n  @State() valid: boolean = false;\n\n  // Emits selected value changes\n  @Event({ bubbles: true, composed: true }) selectChange: EventEmitter;\n\n  private selectEl: HTMLSelectElement;\n\n  @Watch('selectedValue')\n  watchHandler(newValue: string) {\n    if (newValue !== null && this.required) {\n      this.valid = true;\n    }\n  }\n  @Watch('submited')\n  watchHandler2(newValue: boolean) {\n    if (newValue && this.required) {\n      this.initial = false;\n    }\n  }\n  @Listen('animateIrSelect', { target: 'body' })\n  handleButtonAnimation(e: CustomEvent) {\n    if (!this.selectEl || e.detail !== this.select_id) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.selectEl.classList.add('border-danger');\n  }\n\n  // Handle select change event\n  // Example: onInput={this.handleSelectChange.bind(this)}\n  private handleSelectChange(event) {\n    this.selectEl.classList.remove('border-danger');\n    if (this.required) {\n      this.initial = false;\n      this.valid = event.target.checkValidity();\n      this.selectedValue = event.target.value;\n      this.selectChange.emit(this.selectedValue);\n    } else {\n      this.selectedValue = event.target.value;\n      this.selectChange.emit(this.selectedValue);\n    }\n  }\n  count = 0;\n\n  render() {\n    let className = 'form-control';\n    let label = (\n      <div class={`input-group-prepend col-${this.labelWidth} p-0 text-${this.labelColor}`}>\n        <label\n          htmlFor={this.select_id}\n          class={`input-group-text ${this.labelPosition === 'right' ? 'justify-content-end' : this.labelPosition === 'center' ? 'justify-content-center' : ''} ${\n            this.labelBackground ? 'bg-' + this.labelBackground : ''\n          } flex-grow-1 text-${this.labelColor} border-${this.labelBorder === 'none' ? 0 : this.labelBorder} `}\n        >\n          {this.label}\n          {this.required ? '*' : ''}\n        </label>\n      </div>\n    );\n    if (this.selectStyle === false) {\n      className = '';\n    }\n    if (this.required && !this.valid && !this.initial) {\n      className = `${className} border-danger`;\n    }\n\n    if (!this.LabelAvailable) {\n      label = '';\n    }\n\n    return (\n      <div class={`form-group m-0 ${this.selectContainerStyle}`}>\n        <div class=\"input-group row m-0\">\n          {label}\n          <select\n            disabled={this.disabled}\n            aria-invalid={this.error ? 'true' : 'false'}\n            data-testid={this.testId}\n            style={this.selectForcedStyles}\n            ref={el => (this.selectEl = el)}\n            id={this.select_id}\n            class={`${this.selectStyles} ${this.error ? 'border-danger' : ''} ${className} form-control-${this.size} text-${this.textSize} col-${\n              this.LabelAvailable ? 12 - this.labelWidth : 12\n            }`}\n            onInput={this.handleSelectChange.bind(this)}\n            required={this.required}\n          >\n            {this.showFirstOption && <option value={''}>{this.firstOption}</option>}\n            {this.data.map(item => {\n              if (this.selectedValue === item.value) {\n                return (\n                  <option selected value={item.value}>\n                    {item.text}\n                  </option>\n                );\n              } else {\n                return <option value={item.value}>{item.text}</option>;\n              }\n            })}\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  width: var(--ir-spinner-size, 1.25rem);\n  height: var(--ir-spinner-size, 1.25rem);\n  border: var(--ir-spinner-border-width, 2.5px) solid var(--ir-spinner-color, #3f3f3f);\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-spinner',\n  styleUrl: 'ir-spinner.css',\n  shadow: true,\n})\nexport class IrSpinner {\n  @Element() el: HTMLIrSpinnerElement;\n  /**\n   * Size of the spinner (diameter).\n   * Example: `size={2}` with `unit=\"rem\"` sets spinner to `2rem`.\n   */\n  @Prop() size: number;\n\n  /**\n   * Thickness of the spinner's border.\n   * Example: `borderWidth={4}` renders a `4px` or `4rem` thick border.\n   */\n  @Prop() borderWidth: number;\n\n  /**\n   * CSS unit used for `size` and `borderWidth`.\n   * Can be `'px'` or `'rem'`.\n   */\n  @Prop() unit: 'px' | 'rem' = 'rem';\n\n  /**\n   * Color of the spinner.\n   * Accepts any valid CSS color string.\n   */\n  @Prop() color: string;\n\n  componentWillLoad() {\n    this.initStyles();\n  }\n  @Watch('size')\n  handleSpinnerSizeChange() {\n    this.initStyles();\n  }\n  @Watch('borderWidth')\n  handleSpinnerBorderWidthChange() {\n    this.initStyles();\n  }\n  @Watch('unit')\n  handleSpinnerUnitChange() {\n    this.initStyles();\n  }\n  @Watch('color')\n  handleSpinnerColorChange() {\n    this.initStyles();\n  }\n  /**\n   * Applies CSS custom properties based on current prop values.\n   */\n  private initStyles() {\n    if (this.size) {\n      this.applyCssElement(`${this.size}${this.unit}`, '--ir-spinner-size');\n    }\n    if (this.borderWidth) {\n      this.applyCssElement(`${this.borderWidth}${this.unit}`, '--ir-spinner-size');\n    }\n    if (this.color) {\n      this.applyCssElement(`${this.color}`, '--ir-spinner-color');\n    }\n  }\n  /**\n   * Helper function to set CSS custom properties on the host element.\n   *\n   * @param value - The CSS value to apply\n   * @param key - The CSS custom property name (e.g., `--ir-spinner-size`)\n   */\n  private applyCssElement(value: string, key: '--ir-spinner-color' | '--ir-spinner-border-width' | '--ir-spinner-size' | (string & {})) {\n    this.el.style.setProperty(key, value);\n  }\n  render() {\n    return <Host></Host>;\n  }\n}\n","button,\np,\nh3,\ndiv {\n  all: unset;\n}\n:host {\n  --rd-viewport-padding: 25px;\n  --rd-success: #2b9a66;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  padding: var(--rd-viewport-padding);\n  gap: 10px;\n  max-width: 100vw;\n  margin: 0;\n  list-style: none;\n  z-index: 2147483647;\n  outline: none;\n  pointer-events: none;\n  -webkit-user-select: none;\n  user-select: none;\n}\n@media (prefers-color-scheme: dark) {\n  :host {\n    --rd-success: #33b074;\n  }\n}\np {\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n:host([position='top-left']) {\n  top: 0;\n  left: 0;\n}\n:host([position='top-right']) {\n  top: 0;\n  right: 0;\n}\n:host([position='bottom-left']) {\n  bottom: 0;\n  left: 0;\n}\n:host([position='bottom-right']) {\n  bottom: 0;\n  right: 0;\n}\n.icon-container {\n  height: 25px;\n  width: 25px;\n  border-radius: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  /* position: absolute;\n  top: 50%;\n  right: calc(var(--rd-viewport-padding) / 2); \n  transform: translateY(-50%);*/\n}\n.icon-container > svg {\n  margin: 0;\n  color: white;\n  stroke-width: 5px;\n}\n.success {\n  background-color: var(--rd-success);\n}\n.error {\n  background-color: red;\n}\n.ToastRoot {\n  background-color: hsl(0, 0%, 100%);\n  border-radius: 0.5rem;\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n  padding: 15px;\n  display: grid;\n  grid-template-areas: 'title action' 'description action';\n  grid-template-columns: auto max-content;\n  column-gap: 15px;\n  align-items: center;\n  pointer-events: none;\n  opacity: 0;\n  border: 1px solid hsl(214.3, 31.8%, 91.4%);\n  position: relative;\n}\n.ToastRoot[data-state='open'] {\n  pointer-events: all;\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n.ToastRoot[data-state='closed'] {\n  pointer-events: none;\n  animation: hide 100ms ease-in;\n}\n\n@-webkit-keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes slideIn {\n  from {\n    transform: translateX(var(--rd-offset-width));\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n.ToastTitle {\n  grid-area: title;\n  font-weight: 500;\n  color: hsl(222.2, 84%, 4.9%);\n  font-size: 15px;\n}\n\n.ToastDescription {\n  grid-area: description;\n  margin: 0;\n  margin-top: 5px;\n  color: hsla(222.2, 84%, 4.9%, 0.8);\n  font-size: 13px;\n  line-height: 1.3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ToastAction {\n  grid-area: action;\n}\n","import { Component, Host, Element, Listen, Prop, h, State } from '@stencil/core';\nimport { TPositions, IToast } from './toast';\n\n@Component({\n  tag: 'ir-toast',\n  styleUrl: 'ir-toast.css',\n  scoped: true,\n})\nexport class IrToast {\n  @Element() element: HTMLElement;\n\n  /**\n   * Position where toasts will appear.\n   * Options include: `'top-left'`, `'top-right'`, `'bottom-left'`, `'bottom-right'`.\n   */\n  @Prop({ reflect: true, mutable: true }) position: TPositions = 'bottom-left';\n\n  /**\n   * Array of active toast messages.\n   */\n  @State() toasts: IToast[] = [];\n\n  @Listen('toast', { target: 'body' })\n  onToast(event: CustomEvent<IToast>) {\n    const toast: IToast = event.detail;\n    this.showToast(toast);\n  }\n\n  private showToast(toast: IToast) {\n    const toastrOptions = {\n      positionClass: 'toast-top-right',\n      closeButton: true,\n      timeOut: toast.duration || 5000,\n    };\n\n    switch (toast.type) {\n      case 'success':\n        toastr.success(toast.title, '', toastrOptions);\n        break;\n      case 'error':\n        toastr.error(toast.title, '', toastrOptions);\n        break;\n    }\n  }\n\n  render() {\n    return <Host></Host>;\n  }\n}\n"],"mappings":"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","ignoreList":[]}