{"version":3,"names":["irHkArchiveCss","IrHkArchiveStyle0","IrHkArchive","constructor","hostRef","this","selectedDates","start","moment","add","format","end","data","id","date","hk_id","housekeeper","unit","name","booking_nbr","componentWillLoad","initializeData","handleDateRangeChange","e","stopImmediatePropagation","stopPropagation","detail","searchArchive","exportArchive","render","h","Host","key","class","label","displayContext","LabelAvailable","firstOption","housekeeping_store","hk_criteria","housekeepers","map","hk","text","value","toString","withDateDifference","minDate","defaultData","fromDate","toDate","onIconClickHandler","bind","slot","xmlns","height","width","viewBox","fill","d","_a","btn_color","btnStyle","padding","margin","labelStyle","onClick","window","open","irTasksFiltersCss","IrTasksFiltersStyle0","IrTasksFilters","filters","cleaning_periods","code","ids","cleaning_frequencies","dusty_units","highlight_check_ins","collapsed","baseFilters","_b","_c","_d","dusty_periods","_e","highlight_checkin_options","Object","assign","updateFilter","params","applyFiltersEvt","applyFilters","emit","resetFilters","style","gap","variant","icon_name","onClickHandler","selectedValue","showFirstOption","v","description","onSelectChange","length","_g","_f","_h","_k","_j","_l","_o","_m","_q","_p","_s","_r","btn_type","size","isLoading","irTasksHeaderCss","IrTasksHeaderStyle0","IrTasksHeader","isCleanedEnabled","handleCleanedButtonAnimation","btnRef","bounce","headerButtonPress","btn_disabled","ref","el","irTasksTableCss","IrTasksTableStyle0","IrTasksTable","tasks","selectedIds","showConfirmModal","sortKey","sortDirection","sortTasks","handleSort","newDirection","handleClearSelectedHkTasks","direction","sorted","sort","a","b","aPrimary","bPrimary","toggleSelection","includes","filter","item","animateCleanedButton","emitSelectedTasks","filteredTasks","t","rowSelectChange","allSelected","toggleSelectAll","task","console","log","checked","onCheckChange","stroke","textAlign","colSpan","isSelected","cursor","selected","status","hint","adult","child","infant"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.css?tag=ir-hk-archive&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.css?tag=ir-tasks-filters&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.css?tag=ir-tasks-header&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","// import { HouseKeepingService } from '@/services/housekeeping.service';\r\n// import housekeeping_store from '@/stores/housekeeping.store';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { Component, Host, Listen, State, h } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-hk-archive',\r\n  styleUrl: 'ir-hk-archive.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkArchive {\r\n  @State() selectedDates: {\r\n    start: string;\r\n    end: string;\r\n  } = {\r\n    start: moment().add(-90, 'days').format('YYYY-MM-DD'),\r\n    end: moment().format('YYYY-MM-DD'),\r\n  };\r\n  @State() data = [\r\n    {\r\n      id: 1,\r\n      date: '20 Jun (Mon)',\r\n      hk_id: 2,\r\n      housekeeper: 'Test',\r\n      unit: {\r\n        id: 2,\r\n        name: 'test',\r\n      },\r\n      booking_nbr: 15525610155,\r\n    },\r\n    {\r\n      id: 2,\r\n      date: '20 Jun (Mon)',\r\n      hk_id: 2,\r\n      housekeeper: 'Test aanjhjanjn ajna',\r\n      unit: {\r\n        id: 2,\r\n        name: 'test',\r\n      },\r\n      booking_nbr: 15525610155,\r\n    },\r\n  ];\r\n\r\n  // private houseKeepingService = new HouseKeepingService();\r\n\r\n  componentWillLoad() {\r\n    this.initializeData();\r\n  }\r\n  async initializeData() {}\r\n\r\n  @Listen('dateChanged')\r\n  handleDateRangeChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { start, end } = e.detail;\r\n    this.selectedDates = {\r\n      start: start.format('YYYY-MM-DD'),\r\n      end: end.format('YYYY-MM-DD'),\r\n    };\r\n  }\r\n  async searchArchive(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n  }\r\n  async exportArchive(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-title class=\"px-1\" label=\"Cleaning Archives (90 days)\" displayContext=\"sidebar\"></ir-title>\r\n        <section class=\"px-1\">\r\n          <div class=\"d-flex\">\r\n            <ir-select class=\"w-100\" LabelAvailable={false} data={[]} firstOption=\"All units\"></ir-select>\r\n            <ir-select\r\n              class=\"ml-1 w-100\"\r\n              LabelAvailable={false}\r\n              data={housekeeping_store.hk_criteria.housekeepers.map(hk => ({ text: hk.name, value: hk.id.toString() }))}\r\n              firstOption=\"All housekeepers\"\r\n            ></ir-select>\r\n          </div>\r\n          <div class=\"d-flex mt-1 align-items-center\">\r\n            <igl-date-range\r\n              class=\"mr-1\"\r\n              withDateDifference={false}\r\n              minDate={moment().add(-90, 'days').format('YYYY-MM-DD')}\r\n              defaultData={{\r\n                fromDate: this.selectedDates.start,\r\n                toDate: this.selectedDates.end,\r\n              }}\r\n            ></igl-date-range>\r\n            <ir-icon onIconClickHandler={this.searchArchive.bind(this)} class=\"mr-1\">\r\n              <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 512 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\r\n                />\r\n              </svg>\r\n            </ir-icon>\r\n            <ir-icon onIconClickHandler={this.exportArchive.bind(this)}>\r\n              <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"15\" viewBox=\"0 0 384 512\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M48 448V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm90.9 233.3c-8.1-10.5-23.2-12.3-33.7-4.2s-12.3 23.2-4.2 33.7L161.6 320l-44.5 57.3c-8.1 10.5-6.3 25.5 4.2 33.7s25.5 6.3 33.7-4.2L192 359.1l37.1 47.6c8.1 10.5 23.2 12.3 33.7 4.2s12.3-23.2 4.2-33.7L222.4 320l44.5-57.3c8.1-10.5 6.3-25.5-4.2-33.7s-25.5-6.3-33.7 4.2L192 280.9l-37.1-47.6z\"\r\n                />\r\n              </svg>\r\n            </ir-icon>\r\n          </div>\r\n          {/* route to booking details */}\r\n          <table class=\"mt-2\">\r\n            <thead>\r\n              <th class=\"sr-only\">period</th>\r\n              <th class=\"sr-only\">housekeeper name</th>\r\n              <th class=\"sr-only\">unit</th>\r\n              <th class=\"sr-only\">booking number</th>\r\n            </thead>\r\n            <tbody>\r\n              {this.data.map(d => (\r\n                <tr key={d.id}>\r\n                  <td class=\"pr-2\">{d.date}</td>\r\n                  <td class=\"px-2\">{d.housekeeper}</td>\r\n                  <td class=\"px-2\">{d.unit?.name}</td>\r\n                  <td class=\"px-2\">\r\n                    <ir-button\r\n                      btn_color=\"link\"\r\n                      btnStyle={{\r\n                        width: 'fit-content',\r\n                        padding: '0',\r\n                        margin: '0',\r\n                      }}\r\n                      labelStyle={{\r\n                        padding: '0',\r\n                      }}\r\n                      text={d.booking_nbr.toString()}\r\n                      onClick={() => {\r\n                        window.open(`https://x.igloorooms.com/manage/acbookingeditV2.aspx?BN=${d.booking_nbr}`, '_blank');\r\n                      }}\r\n                    ></ir-button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  /* min-width: 1vw; */\r\n  height: 100%;\r\n}\r\n@media (min-width: 768px) {\r\n  .collapse-btn {\r\n    display: none;\r\n  }\r\n  #hkTasksFiltersCollapse.collapse:not(.show) {\r\n    display: block;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\r\nimport { TaskFilters } from '../types';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-filters',\r\n  styleUrl: 'ir-tasks-filters.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksFilters {\r\n  @Prop() isLoading: boolean;\r\n\r\n  @State() filters: TaskFilters = {\r\n    cleaning_periods: {\r\n      code: '',\r\n    },\r\n    housekeepers: {\r\n      ids: [],\r\n    },\r\n    cleaning_frequencies: { code: '' },\r\n    dusty_units: { code: '' },\r\n    highlight_check_ins: { code: '' },\r\n  };\r\n\r\n  @State() collapsed: boolean = false;\r\n\r\n  @Event() applyFilters: EventEmitter<TaskFilters>;\r\n\r\n  private baseFilters: TaskFilters;\r\n\r\n  componentWillLoad() {\r\n    this.baseFilters = {\r\n      cleaning_periods: housekeeping_store?.hk_criteria?.cleaning_periods[0],\r\n      housekeepers: { ids: housekeeping_store.hk_criteria.housekeepers?.map(h => h.id) },\r\n      cleaning_frequencies: housekeeping_store?.hk_criteria?.cleaning_frequencies[0],\r\n      dusty_units: housekeeping_store?.hk_criteria?.dusty_periods[0],\r\n      highlight_check_ins: housekeeping_store?.hk_criteria?.highlight_checkin_options[0],\r\n    };\r\n    this.filters = { ...this.baseFilters };\r\n  }\r\n\r\n  private updateFilter(params: Partial<TaskFilters>) {\r\n    this.filters = { ...this.filters, ...params };\r\n  }\r\n  private applyFiltersEvt(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.applyFilters.emit(this.filters);\r\n  }\r\n  private resetFilters(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.filters = { ...this.baseFilters };\r\n    this.applyFilters.emit(this.filters);\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card mb-0 p-1 d-flex flex-column\">\r\n        <div class=\"d-flex align-items-center justify-content-between\">\r\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\r\n              />\r\n            </svg>\r\n            <h4 class=\"m-0 p-0 flex-grow-1\">Filters</h4>\r\n          </div>\r\n          <ir-button\r\n            variant=\"icon\"\r\n            id=\"drawer-icon\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#hkTasksFiltersCollapse\"\r\n            aria-expanded={this.collapsed ? 'true' : 'false'}\r\n            aria-controls=\"hkTasksFiltersCollapse\"\r\n            class=\"mr-1 collapse-btn\"\r\n            icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\r\n            onClickHandler={() => {\r\n              this.collapsed = !this.collapsed;\r\n            }}\r\n            style={{ '--icon-size': '1.6rem' }}\r\n          ></ir-button>\r\n        </div>\r\n        <div class=\"m-0 p-0 collapse\" id=\"hkTasksFiltersCollapse\">\r\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\r\n            <fieldset class=\"pt-1\">\r\n              <p class=\"m-0 p-0\">Period</p>\r\n              <ir-select\r\n                selectedValue={this.filters?.cleaning_periods?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_periods.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_periods: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Housekeepers</p>\r\n              <ir-select\r\n                selectedValue={\r\n                  this.filters?.housekeepers?.ids.length === housekeeping_store.hk_criteria.housekeepers.length ? '000' : this.filters?.housekeepers?.ids[0].toString()\r\n                }\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={[\r\n                  { text: 'All housekeepers', value: '000' },\r\n                  ...housekeeping_store?.hk_criteria?.housekeepers.map(v => ({\r\n                    text: v.name,\r\n                    value: v.id.toString(),\r\n                  })),\r\n                ]}\r\n                onSelectChange={e => {\r\n                  if (e.detail === '000') {\r\n                    this.updateFilter({ housekeepers: { ids: this.baseFilters?.housekeepers?.ids } });\r\n                  } else {\r\n                    this.updateFilter({ housekeepers: { ids: [e.detail] } });\r\n                  }\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Cleaning frequency</p>\r\n              <ir-select\r\n                selectedValue={this.filters?.cleaning_frequencies?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_frequencies: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Dusty units</p>\r\n              <ir-select\r\n                showFirstOption={false}\r\n                LabelAvailable={false}\r\n                data={housekeeping_store.hk_criteria?.dusty_periods?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset class=\"mb-1\">\r\n              <p class=\"m-0 p-0\">Highlight check-ins</p>\r\n              <ir-select\r\n                selectedValue={this.filters?.highlight_check_ins?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ highlight_check_ins: { code: e.detail } });\r\n                }}\r\n                data={housekeeping_store.hk_criteria?.highlight_checkin_options?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <div class=\"d-flex align-items-center justify-content-end\" style={{ gap: '1rem' }}>\r\n              <ir-button btn_type=\"button\" text=\"Reset\" size=\"sm\" btn_color=\"outline\" onClickHandler={e => this.resetFilters(e)}></ir-button>\r\n              <ir-button btn_type=\"button\" isLoading={this.isLoading} text=\"Apply\" size=\"sm\" onClickHandler={e => this.applyFiltersEvt(e)}></ir-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, h, Listen, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-header',\r\n  styleUrl: 'ir-tasks-header.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksHeader {\r\n  @Prop() isCleanedEnabled: boolean = false;\r\n\r\n  private btnRef: HTMLIrButtonElement;\r\n\r\n  @Event() headerButtonPress: EventEmitter<{ name: 'cleaned' | 'export' | 'archive' }>;\r\n\r\n  @Listen('animateCleanedButton', { target: 'body' })\r\n  handleCleanedButtonAnimation(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.btnRef.bounce();\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"d-flex align-items-center justify-content-between\">\r\n        <h4>Housekeeping Tasks</h4>\r\n        <div class=\"d-flex align-items-center\" style={{ gap: '1rem' }}>\r\n          <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Export\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'export' });\r\n            }}\r\n          ></ir-button>\r\n          {/* <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Archive\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'archive' });\r\n            }}\r\n          ></ir-button> */}\r\n          <ir-button\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'cleaned' });\r\n            }}\r\n            size=\"sm\"\r\n            btn_disabled={!this.isCleanedEnabled}\r\n            text=\"Cleaned\"\r\n            ref={el => (this.btnRef = el)}\r\n          ></ir-button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.selected-row {\r\n  background-color: rgba(0, 0, 255, 0.1);\r\n}\r\n.selected-row:hover {\r\n  background-color: rgba(0, 0, 255, 0.15);\r\n}\r\n.header-content {\r\n  height: 100%;\r\n}\r\n.sortable {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n.sortable svg {\r\n  color: var(--blue);\r\n}\r\n.task-row,\r\n.table th,\r\n.table td {\r\n  padding: 0.25rem 0.5rem !important;\r\n  white-space: nowrap;\r\n  max-width: max-content !important;\r\n  /* background: white; */\r\n}\r\n.table th,\r\n.table td {\r\n  text-align: start;\r\n}\r\n/* td,\r\nth {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  max-width: max-content !important;\r\n \r\n  text-align: start;\r\n}\r\ntr {\r\n  border-bottom: 1px solid #e0e0e0;\r\n} */\r\n.task-table-row {\r\n  background: white !important;\r\n}\r\n.task-table-row:hover {\r\n  background: #e2e6ea3f !important;\r\n}\r\n.selected {\r\n  background: #e3f3fa !important;\r\n}\r\n.sortable:hover {\r\n  color: #212529;\r\n  background-color: #e2e6ea;\r\n  border-color: #dae0e5;\r\n  cursor: pointer;\r\n}\r\n.sortable:active {\r\n  color: #212529;\r\n  background-color: #dae0e5;\r\n  border-color: #d3d9df;\r\n}\r\n","import { Component, Event, EventEmitter, Listen, Prop, State, h } from '@stencil/core';\r\nimport { Task } from '@/models/housekeeping';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-table',\r\n  styleUrl: 'ir-tasks-table.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksTable {\r\n  @Prop({ mutable: true }) tasks: Task[] = [];\r\n\r\n  /**\r\n   * Tracks which task IDs are currently selected via checkboxes.\r\n   */\r\n  @State() selectedIds: Task['id'][] = [];\r\n\r\n  /**\r\n   * Controls whether the \"Confirm Clean\" modal is shown.\r\n   */\r\n  @State() showConfirmModal: boolean = false;\r\n\r\n  /**\r\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\r\n   */\r\n  @State() sortKey: string = 'date';\r\n\r\n  /**\r\n   * The sort direction: ASC or DESC.\r\n   */\r\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\r\n\r\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\r\n\r\n  componentWillLoad() {\r\n    this.sortTasks('date', 'ASC');\r\n  }\r\n  /**\r\n   * Sorts the tasks by the given key. If no direction is provided,\r\n   * it toggles between ascending and descending.\r\n   */\r\n  private handleSort(key: string) {\r\n    let newDirection = this.sortDirection;\r\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\r\n    if (this.sortKey === key) {\r\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\r\n    } else {\r\n      newDirection = 'ASC';\r\n    }\r\n    this.sortTasks(key, newDirection);\r\n  }\r\n\r\n  @Listen('clearSelectedHkTasks', { target: 'body' })\r\n  handleClearSelectedHkTasks(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.selectedIds = [];\r\n  }\r\n\r\n  /**\r\n   * Helper to sort tasks array in state.\r\n   */\r\n  /**\r\n   * Sorts the tasks by the given key in ASC or DESC order.\r\n   * If values for `key` are duplicates, it sorts by `date` ascending.\r\n   * If `date` is also the same, it finally sorts by `unit.name` ascending.\r\n   */\r\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\r\n    const sorted = [...this.tasks].sort((a, b) => {\r\n      // Primary comparison: a[key] vs b[key]\r\n      let aPrimary = a[key];\r\n      let bPrimary = b[key];\r\n      if (key === 'status') {\r\n        aPrimary = a[key].description;\r\n        bPrimary = b[key].description;\r\n      }\r\n\r\n      if (aPrimary < bPrimary) {\r\n        return direction === 'ASC' ? -1 : 1;\r\n      }\r\n      if (aPrimary > bPrimary) {\r\n        return direction === 'ASC' ? 1 : -1;\r\n      }\r\n\r\n      // First tiebreaker: compare by date (always ascending)\r\n      if (a.date < b.date) return -1;\r\n      if (a.date > b.date) return 1;\r\n\r\n      // Second tiebreaker: compare by unit.name (always ascending)\r\n      if (a.unit?.name < b.unit?.name) return -1;\r\n      if (a.unit?.name > b.unit?.name) return 1;\r\n\r\n      return 0;\r\n    });\r\n\r\n    // Update component state\r\n    this.tasks = sorted;\r\n    this.sortKey = key;\r\n    this.sortDirection = direction;\r\n  }\r\n\r\n  /**\r\n   * Helper to toggle selection for a single row.\r\n   */\r\n  private toggleSelection(id: Task['id']) {\r\n    if (this.selectedIds.includes(id)) {\r\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\r\n    } else {\r\n      this.selectedIds = [...this.selectedIds, id];\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n  }\r\n\r\n  private emitSelectedTasks() {\r\n    if (this.tasks.length === 0) {\r\n      return;\r\n    }\r\n    const filteredTasks = this.tasks.filter(t => this.selectedIds.includes(t.id));\r\n    this.rowSelectChange.emit(filteredTasks);\r\n  }\r\n\r\n  /**\r\n   * Checks if every row is selected.\r\n   */\r\n  private get allSelected(): boolean {\r\n    return this.tasks.length > 0 && this.selectedIds.length === this.tasks.length;\r\n  }\r\n\r\n  /**\r\n   * Toggles selection on all visible tasks at once.\r\n   */\r\n  private toggleSelectAll() {\r\n    if (this.allSelected) {\r\n      this.selectedIds = [];\r\n    } else {\r\n      this.selectedIds = this.tasks.map(task => task.id);\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n    console.log('here');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card h-100 p-1 m-0 table-responsive\">\r\n        <table class=\"table \">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>\r\n                <ir-checkbox checked={this.allSelected} onCheckChange={() => this.toggleSelectAll()}></ir-checkbox>\r\n              </th>\r\n              <th>Period</th>\r\n              <th>\r\n                {/* Unit {this.sortKey === 'unit' ? `(${this.sortDirection})` : ''} */}\r\n                <span>Unit</span>\r\n              </th>\r\n              <th class={'sortable'} onClick={() => this.handleSort('status')}>\r\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                  <span>Status</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    class=\"lucide lucide-arrow-up-down\"\r\n                  >\r\n                    <path d=\"m21 16-4 4-4-4\" />\r\n                    <path d=\"M17 20V4\" />\r\n                    <path d=\"m3 8 4-4 4 4\" />\r\n                    <path d=\"M7 4v16\" />\r\n                  </svg>\r\n                </div>\r\n              </th>\r\n              <th>Hint</th>\r\n              <th>A</th>\r\n              <th>C</th>\r\n              <th>I</th>\r\n              <th style={{ textAlign: 'start' }} class={'sortable'} onClick={() => this.handleSort('housekeeper')}>\r\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                  <span>Housekeeper</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    class=\"lucide lucide-arrow-up-down\"\r\n                  >\r\n                    <path d=\"m21 16-4 4-4-4\" />\r\n                    <path d=\"M17 20V4\" />\r\n                    <path d=\"m3 8 4-4 4 4\" />\r\n                    <path d=\"M7 4v16\" />\r\n                  </svg>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {this.tasks.length === 0 && (\r\n              <tr>\r\n                <td colSpan={9} class=\"text-center\">\r\n                  <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\r\n                    <span> No Tasks Found</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {this.tasks.map(task => {\r\n              const isSelected = this.selectedIds.includes(task.id);\r\n              return (\r\n                <tr style={{ cursor: 'pointer' }} onClick={() => this.toggleSelection(task.id)} class={{ 'selected': isSelected, 'task-table-row': true }} key={task.id}>\r\n                  <td class=\"task-row\">\r\n                    <ir-checkbox checked={isSelected}></ir-checkbox>\r\n                  </td>\r\n                  <td class=\"task-row\">{task.date}</td>\r\n                  <td class=\"task-row\">{task.unit.name}</td>\r\n                  <td class=\"task-row\">{task.status.description}</td>\r\n                  <td class=\"task-row\">{task.hint}</td>\r\n                  <td class=\"task-row\">{task.adult}</td>\r\n                  <td class=\"task-row\">{task.child}</td>\r\n                  <td class=\"task-row\">{task.infant}</td>\r\n                  <td class=\"w-50 task-row\" style={{ textAlign: 'start' }}>\r\n                    {task.housekeeper ?? 'Unassigned'}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}