{"version":3,"names":["BatchingQueue","constructor","processor","options","this","queue","isProcessing","flushTimer","Object","assign","maxQueueSize","onError","error","console","onBatchProcessed","offer","data","length","item","timestamp","Date","now","id","generateId","push","scheduleFlush","offerAll","items","added","size","isEmpty","flush","clearTimeout","processBatch","clear","shutdown","batchSize","setTimeout","flushInterval","Math","min","batch","splice","map","startTime","processingTime","v4","iglooCalendarCss","IglooCalendarStyle0","IglooCalendar","hostRef","ticket","calendarData","days","Array","scrollViewDragging","dialogData","bookingItem","editBookingItem","showLegend","showPaymentDetails","showToBeAssigned","unassignedDates","roomNightsData","renderAgain","showBookProperty","isAuthenticated","bookingService","BookingService","roomService","RoomService","eventsService","EventsService","toBeAssignedService","ToBeAssignedService","housekeepingService","HouseKeepingService","countries","visibleCalendarCells","x","y","today","reachedEndOfCalendar","token","Token","salesQueue","processSalesBatch","bind","e","availabilityQueue","processAvailabilityBatch","roomTypeIdsCache","Map","scrollViewDragPos","top","left","onScrollContentMoveHandler","event","buttons","dx","clientX","dy","clientY","scrollContainer","scrollTop","scrollLeft","abs","onScrollContentMoveEndHandler","document","removeEventListener","componentWillLoad","baseUrl","setBaseUrl","init","componentDidLoad","scrollToElement","handleDeleteEvent","ev","stopImmediatePropagation","preventDefault","deleteEvent","detail","handleCalendarSidebarEvents","log","stopPropagation","calendarSidebarState","scrollPageToRoom","targetScrollClass","refClass","element","querySelector","topLeftCell","gotoRoom","scrollTo","gotoRect","getBoundingClientRect","containerRect","topLeftCellRect","height","handleShowDialog","_a","calendarModalEl","openModal","handleShowRoomNightsDialog","handleBookingDatasChange","bookings","bookingEvents","filter","bookingEvent","ID","STATUS","updateBookingEventsDateRange","handleUpdateBookingEvent","newBookingEvent","showBookingPopupEventDataHandler","onOptionSelect","updateEventDataHandler","bookedData","find","bookedEvent","entries","forEach","key","value","dragOverEventDataHandler","containerDays","querySelectorAll","containerRooms","htmlElement","offsetLeft","offsetWidth","width","getAttribute","offsetTop","offsetHeight","highlightDragOver","ticketChanged","newValue","oldValue","setToken","initializeApp","calDates","from","from_date","to","to_date","handleUnAssignedDatesChange","keys","highlightedDate","renderModalBody","reason","_b","description","setUpCalendarData","roomResp","bookingResp","currency","allowedBookingSources","allowed_booking_sources","adultChildConstraints","adult_child_constraints","legendData","getLegendData","is_vacation_rental","My_Params_Get_Rooming_Data","FROM","TO","startingDate","getTime","endingDate","formattedLegendData","formatLegendColors","myBookings","toDate","moment","TO_DATE","fromDate","FROM_DATE","isSame","toBeAssignedEvents","propertyId","propertyid","p","Error","propertyData","getExposedProperty","aname","language","is_backend","include_units_hk_status","include_sales_rate_plans","My_Result","property_id","requests","getCalendarData","getCountries","fetchLanguage","getExposedHKSetup","results","Promise","all","tasksEndDate","add","format","getHousekeepingTasks","calendar_dates","months","setRoomsData","paymentMethods","some","code","transformDateForScroll","startingDay","setHours","monthsInfo","getUnassignedDates","addUnassignedDates","socket","io","on","async","msg","handleSocketMessage","tasks","getHkTasks","housekeepers","cleaning_frequency","_c","calendar_data","housekeeping_store","hk_criteria","cleaning_frequencies","dusty_window","_e","_d","dusty_periods","highlight_window","_g","_f","highlight_checkin_options","addCleaningTasks","msgAsObject","JSON","parse","REASON","KEY","PAYLOAD","toString","result","includes","reasonHandlers","DORESERVATION","handleDoReservation","BLOCK_EXPOSED_UNIT","handleBlockExposedUnit","ASSIGN_EXPOSED_ROOM","handleAssignExposedRoom","REALLOCATE_EXPOSED_ROOM_BLOCK","handleReallocateExposedRoomBlock","DELETE_CALENDAR_POOL","handleDeleteCalendarPool","GET_UNASSIGNED_DATES","handleGetUnassignedDates","UPDATE_CALENDAR_AVAILABILITY","r","CHANGE_IN_DUE_AMOUNT","handleChangeInDueAmount","CHANGE_IN_BOOK_STATUS","handleChangeInBookStatus","NON_TECHNICAL_CHANGE_IN_BOOKING","handleNonTechnicalChangeInBooking","ROOM_STATUS_CHANGED","handleRoomStatusChanged","UNIT_HK_STATUS_CHANGED","handleUnitHKStatusChanged","SHARING_PERSONS_UPDATED","handleSharingPersonsUpdated","ROOM_TYPE_CLOSE","is_available_to_book","ROOM_TYPE_OPEN","HK_SKIP","handleHkSkip","handler","call","warn","IDENTIFIER","identifier","mainGuest","guests","is_main","NAME","formatName","first_name","last_name","ROOM_INFO","sharing_persons","room_identifier","getRoomStatus","in_out","status","status_code","BASE_STATUS_CODE","CHECKIN","CHECKOUT","cleanRoom","date","DATE","unitId","PR_ID","updatedRooms","roomsInfo","changedRoomTypeIdx","findIndex","roomType","ROOM_CATEGORY_ID","changedRoomType","changedPhysicalRoomIdx","physicalrooms","room","updatedPhysicalRooms","targetPhysicalRoom","hk_status","HKS_CODE","roomPayload","addRoomForCleaning","transformedBooking","transformNewBooking","AddOrUpdateRoomBookings","transformNewBLockedRooms","POOL","parsedResult","parseDateRange","dateToFormattedString","removeUnassignedDates","reduceAvailableUnitEvent","emit","str","pairs","split","pair","res","pools","BALANCE","due_amount","bookingStatus","BOOKING_NUMBER","booking_nbr","PRIVATE_NOTE","getPrivateNote","extras","checkBookingAvailability","booking","eventData","defaultDateRange","fromDateStr","getDateStr","fromDateTimeStamp","toDateStr","toDateTimeStamp","dateDifference","NO_OF_DAYS","isBlockUnit","STATUS_CODE","disabled_cells","sale","dayIdx","d","night","entry","get","rate_plan_id","rtIdx","rate","rt","rateplans","rp","set","rpIdx","index","roomTypeIdx","ratePlanIdx","updatedRateplans","i","disabled","day","room_type_index","room_type_id","room_type","exposed_inventory","rts","availability","isClosed","every","roomServiceResp","roomsData","roomtypes","roomCategory","expanded","aData","calendar_legends","locale","getDate","toLocaleString","month","getFullYear","goToDate","gotoDay","pool","undefined","isDateInBetweenTheLastPeriodDate","endDate","isSameOrBefore","shouldRenderCalendarView","opt","calendarElement","classList","remove","toggle","dt","start","end","handleDateSearch","setDate","noScroll","getMonth","type","payload","event_type","closeSideMenu","addDatesToCalendar","newBookings","newMonths","monthName","daysCount","pop","stringify","newBooking","existingBookingIndex","calculateDaysBetweenDates","diff","shift","dates","startDate","defaultFromDate","defaultToDate","nextDay","getNextDay","dragScrollContent","isPreventPageScroll","target","hasAncestorWithClass","addEventListener","calendarScrolling","highlightedElement","right","isVisible","window","innerWidth","leftSideMenuSize","maxWidth","leftX","rightX","cells","monthContainer","monthRect","indexOf","nextTwoMonths","addTwoMonthToDate","titleElement","marginLeft","monthWidth","style","className","currentElement","matches","parentElement","hightLightElement","currentPosition","xElement","yElement","pos","dragOverHighlightElement","dragOverElement","moveBookingTo","bookingId","fromRoomId","toRoomId","moveToDay","convertDMYToISO","computeEndDate","nbOfDays","handleModalConfirm","resetModalState","bookingNumber","roomIdentifier","handleExposedRoomInOut","finally","openCalendarSidebar","sidebarPayload","rest","__rest$2","showRoomNightsDialog","reallocateEvent","then","catch","revertBooking","handleModalCancel","handleRoomNightsDialogClose","handleSideBarToggle","handleCloseBookingWindow","render","h","Host","class","Fragment","unassignedDatesProp","onOptionEvent","evt","onMouseDown","onScroll","isScrollViewDragging","message","bookingData","onCloseBookingWindow","onIrSidebarToggle","open","showCloseButton","sidebarStyles","background","slot","onCloseRoomNightsDialog","defaultDates","hasPrint","hasReceipt","hasCloseButton","onCloseSidebar","is_from_front_desk","hasRoomEdit","hasRoomDelete","hasRoomAdd","roomName","totalGuests","_j","_h","sharedPersons","_l","_k","checkIn","_o","_m","checkin","onCloseModal","_p","ref","el","modalTitle","rightBtnActive","_q","hideConfirmButton","leftBtnText","_r","locales","Lcz_Cancel","rightBtnText","_s","Lcz_Confirm","modalBody","onConfirmModal","onCancelModal","irBookingEmailLogsCss","IrBookingEmailLogsStyle0","IrBookingEmailLogs","handleTicketChange","handledEndpoints","gap","inputContainerStyle","margin","onTextChange","placeholder","text","onClickHandler","axios","post","BOOK_NBR","ExceptionMsg","getAllParams","params","URLSearchParams","location","search","out","irBookingListingCss","IrBookingListingStyle0","IrBookingListing","rowCount","isLoading","currentPage","totalPages","oldStartValue","showCost","bookingListingService","BookingListingService","statusColors","updateUserSelection","booking_listing","onBookingListingChange","newTotal","total_count","ceil","financial","gross_cost","getSetupEntriesByTableNameMulti","getExposedBookingsCriteria","setupEntries","pay_type","pay_type_group","pay_method","groupEntryTablesResult","paymentEntries","groups","methods","types","getExposedBookings","userSelection","is_to_export","geSearchFiltersFromParams","obj","Number","s","updateUserSelections","getPaginationBounds","totalCount","startItem","endItem","listingModalTimeout","listingModal","editBooking","disconnectedCallback","handleResetData","handleResetStoreData","handleBookingChanged","b","renderItemRange","Lcz_View","Lcz_Of","updateData","start_row","end_row","calculateTotalPersons","sumOfOccupancy","adult_nbr","children_nbr","infant_nbr","rooms","reduce","prev","cur","occupancy","scope","Lcz_Booking","Lcz_BookedOn","Lcz_GuestSource","Lcz_Services","Lcz_Dates","Lcz_Amount","customSlot","Lcz_BookingBalance","Lcz_ClickToSettle","Lcz_Balance","Lcz_Cost","Lcz_Status","colSpan","Lcz_NoDataAvailable","confirmationBG","is_requested_to_cancel","lastManipulation","ota_manipulations","totalPersons","btn_color","btnStyle","padding","cause","channel_booking_nbr","booked_on","_formatTime","hour","minute","src","origin","Icon","alt","Label","guest","labelStyle","nbr_confirmed_bookings","agent","Lcz_BookingsNbr","replace","color","name","Lcz_P","is_in_loyalty_mode","promo_key","xmlns","viewBox","Lcz_LoyaltyDiscountApplied","fill","stroke","Lcz_Coupon","roomtype","unit","isSingleUnit","substring","extra_services","Lcz_ExtraServices","whiteSpace","formatAmount","symbol","gross_total","cancelation_penality_as_if_today","onClick","Lcz_CancellationRequested","events","toLowerCase","marginTop","marginBottom","trigger","content","user","title","variant","icon_name","btn_disabled","selectedValue","showFirstOption","onSelectChange","_","onModalClosed","isInSideBar","headerShown","_t","email","_v","_u","onCloseSideBar","PropertyService","allowed_payment_methods","pickup_service","max_nights","taxes","country","is_automatic_check_in_out","tax_statement","is_frontdesk_enabled","is_pms_enabled","spitTime","time_constraints","check_out_till","checkin_checkout_hours","offset","city","gmt_offset","getCountrySales","is_export_to_excel","downloadFile","My_Params_Get_Country_Sales","Link_excel","getDailyRevenueReport","My_Params_Get_Daily_Revenue_Report","setExposedCleaningFrequency","getMonthlyStats","My_Params_Get_Monthly_Stats","irDailyRevenueCss","IrDailyRevenueStyle0","IrDailyRevenue","filters","users","tokenService","propertyService","handleSidebarClose","sideBarEvent","handleOpenSidebar","handleFetchNewReports","getPaymentReports","handleResetBooking","renderSidebarBody","isPageLoading","groupPaymentsByName","payments","groupedPayment","payment","payTypeCode","payMethodCode","sort","a","aNum","bNum","isNaN","localeCompare","isExportToExcel","excludeYesterday","getReportObj","report","method","METHOD","PAY_TYPE_CODE","PAY_METHOD_CODE","amount","AMOUNT","HOUR","MINUTE","USER","CURRENCY","bookingNbr","BOOKING_NBR","previousDateGroupedPayments","Lcz_Export","iconPosition","icon_style","groupedPayments","Boolean","irHkTasksCss","IrHkTasksStyle0","IrHkTasks","isCleaningLoading","selectedDuration","selectedHouseKeeper","selectedRoom","archiveOpened","hkNameCache","houseKeepingService","table_sorting","handleCloseSidebar","isSidebarOpen","handleSortingChanged","field","direction","handleSkipSelectedTask","modalCauses","task","modal","setLoading","tasksResult","updateTasks","buildHousekeeperNameCache","hk","updateTasksStore","t","housekeeper","hkm_id","hkName","handleHeaderButtonPress","sortingArray","url","fetchTasksWithFilters","handleSelectedTaskCleaningEvent","handleModalConfirmation","hkTasksStore","selectedTasks","editHkSkip","COMMENT","HK_SKIP_ID","HK_SKIP_REASON_CODE","executeHKAction","actions","unit_id","clearSelectedTasks","closeModal","applyFilters","isApplyFiltersLoading","export_to_excel","cleaning_periods","dusty_units","highlight_check_ins","onApplyFilters","onRowSelectChange","updateSelectedTasks","autoClose","iconAvailable","icon","leftBtnColor","rightBtnColor","Lcz_Confirmation","getToken","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","updateHKStore","housekeeping_enabled","selectedCleaningFrequency","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","default_properties","flag","toast","position","saveCleaningFrequency","Lcz_HouseKeepingAndCheckInSetup","borderShown","label","Lcz_CheckInOutGuestsAutomatically","Lcz_YesAsPerPropertyPolicy","Lcz_NoIWillDoItManually","Lcz_CleaningFrequency","v","isRequestPending","irMonthlyBookingsReportCss","IrMonthlyBookingsReportStyle0","IrMonthlyBookingsReport","reports","baseFilters","firstOfMonth","startOf","lastOfMonth","endOf","include_previous_year","handleApplyFiltersChange","getReports","units_booked","Units_booked","occupancy_percent","Occupancy","adr","ADR","rooms_revenue","Rooms_Revenue","total_guests","Total_Guests","currentReports","enrichedReports","DailyStats","__rest$1","stats","previousYearReports","formattedReports","current","previous","last_year","alignItems","Occupancy_Difference_From_Previous_Month","cardTitle","AverageOccupancy","toFixed","subtitle","TotalUnitsBooked","PeakDays","pd","concat","join","max","OccupancyPercent","irSalesByCountryCss","IrSalesByCountryStyle0","IrSalesByCountry","BOOK_CASE","WINDOW","salesFilters","mappedCountries","formatSalesData","COUNTRY","country_id","COUNTRY_ID","nights","NIGHTS","percentage","PCT","revenue","REVENUE","number_of_guests","filterParams","__rest","currentSales","AC_ID","shouldFetchPreviousYear","enrichedSales","previousYearSales","subtract","record","salesData","salesReports","records"],"sources":["src/utils/Queue/batch-queue.ts","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/components/ir-booking-email-logs/ir-booking-email-logs.css?tag=ir-booking-email-logs&encapsulation=scoped","src/components/ir-booking-email-logs/ir-booking-email-logs.tsx","src/utils/browserHistory.ts","src/components/ir-booking-listing/ir-booking-listing.css?tag=ir-booking-listing&encapsulation=scoped","src/components/ir-booking-listing/ir-booking-listing.tsx","src/services/property.service.ts","src/components/ir-daily-revenue/ir-daily-revenue.css?tag=ir-daily-revenue&encapsulation=scoped","src/components/ir-daily-revenue/ir-daily-revenue.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.css?tag=ir-monthly-bookings-report&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.tsx","src/components/ir-sales-by-country/ir-sales-by-country.css?tag=ir-sales-by-country&encapsulation=scoped","src/components/ir-sales-by-country/ir-sales-by-country.tsx"],"sourcesContent":["import { v4 } from 'uuid';\nimport { BatchProcessor, QueueItem, QueueOptions } from './types';\n\nexport class BatchingQueue<T, R = void> {\n  private queue: QueueItem<T>[] = [];\n  private isProcessing = false;\n  private flushTimer: NodeJS.Timeout | null = null;\n  private readonly options: Required<QueueOptions>;\n  private readonly processor: BatchProcessor<T, R>;\n\n  constructor(processor: BatchProcessor<T, R>, options: QueueOptions) {\n    this.processor = processor;\n    this.options = {\n      maxQueueSize: 10000,\n      onError: error => console.error('Queue processing error:', error),\n      onBatchProcessed: () => {},\n      ...options,\n    };\n  }\n  /**\n   * Add a single item to the queue\n   */\n  offer(data: T): boolean {\n    if (this.queue.length >= this.options.maxQueueSize) {\n      return false; // Queue is full\n    }\n\n    const item: QueueItem<T> = {\n      data,\n      timestamp: Date.now(),\n      id: this.generateId(),\n    };\n\n    this.queue.push(item);\n    this.scheduleFlush();\n    return true;\n  }\n\n  /**\n   * Add multiple items to the queue\n   */\n  offerAll(items: T[]): number {\n    let added = 0;\n    for (const item of items) {\n      if (this.offer(item)) {\n        added++;\n      } else {\n        break; // Queue is full\n      }\n    }\n    return added;\n  }\n\n  /**\n   * Get current queue size\n   */\n  size(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Check if queue is empty\n   */\n  isEmpty(): boolean {\n    return this.queue.length === 0;\n  }\n\n  /**\n   * Force flush the current queue\n   */\n  async flush(): Promise<void> {\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n    await this.processBatch();\n  }\n\n  /**\n   * Clear all items from the queue\n   */\n  clear(): void {\n    this.queue = [];\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n  }\n\n  /**\n   * Shutdown the queue and process remaining items\n   */\n  async shutdown(): Promise<void> {\n    await this.flush();\n  }\n\n  private scheduleFlush(): void {\n    // If we've reached batch size, process immediately\n    if (this.queue.length >= this.options.batchSize) {\n      this.processBatch();\n      return;\n    }\n\n    // If no timer is set, schedule one\n    if (!this.flushTimer) {\n      this.flushTimer = setTimeout(() => {\n        this.processBatch();\n      }, this.options.flushInterval);\n    }\n  }\n\n  private async processBatch(): Promise<void> {\n    if (this.isProcessing || this.queue.length === 0) {\n      return;\n    }\n\n    this.isProcessing = true;\n\n    try {\n      // Extract batch to process\n      const batchSize = Math.min(this.options.batchSize, this.queue.length);\n      const batch = this.queue.splice(0, batchSize);\n      const data = batch.map(item => item.data);\n\n      const startTime = Date.now();\n\n      // Process the batch\n      await this.processor(data);\n\n      const processingTime = Date.now() - startTime;\n      this.options.onBatchProcessed(batchSize, processingTime);\n\n      // Clear the timer since we've processed\n      if (this.flushTimer) {\n        clearTimeout(this.flushTimer);\n        this.flushTimer = null;\n      }\n\n      // If there are more items, schedule next batch\n      if (this.queue.length > 0) {\n        this.scheduleFlush();\n      }\n    } catch (error) {\n      this.options.onError(error as Error);\n    } finally {\n      this.isProcessing = false;\n    }\n  }\n\n  private generateId(): string {\n    return v4();\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n  background-color: #ffffff;\n  height: 100%;\n  text-align: center;\n}\n\n.igl-calendar {\n  display: grid;\n  grid-template-columns: 1fr;\n  height: 100%;\n}\n\n/* .calendarScrollContainer div {\n  position: relative;\n} */\n\n.calendarScrollContainer {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  white-space: nowrap;\n  border-left: 2px solid grey;\n}\n\n.showToBeAssigned,\n.showLegend {\n  grid-template-columns: 330px 1fr;\n}\n\n#calendarContainer {\n  position: absolute;\n}\n\n/* div {\n  position: relative;\n} */\n\n.legendContainer,\n.tobeAssignedContainer {\n  display: none;\n  height: 100%;\n  overflow-y: auto;\n  padding-left: 0.5em !important;\n  padding-right: 0.5em !important;\n}\n\n.showToBeAssigned .tobeAssignedContainer {\n  display: block;\n}\n\n.showLegend .legendContainer {\n  display: block;\n}\n\n.tobeBooked {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-align: left;\n}\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { RoomService } from '@/services/room.service';\nimport { BookingService } from '@/services/booking.service';\nimport { addTwoMonthToDate, computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors, getNextDay, isBlockUnit } from '@/utils/utils';\nimport io, { Socket } from 'socket.io-client';\nimport { EventsService } from '@/services/events.service';\nimport { ICountry, RoomBlockDetails, RoomBookingDetails, RoomDetail, bookingReasons } from '@/models/IBooking';\nimport moment, { Moment } from 'moment';\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\nimport { bookingStatus, calculateDaysBetweenDates, formatName, getPrivateNote, getRoomStatus, transformNewBLockedRooms, transformNewBooking } from '@/utils/booking';\nimport { IRoomNightsData, IRoomNightsDataEventPayload, CalendarModalEvent } from '@/models/property-types';\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport calendar_dates, { addCleaningTasks, addRoomForCleaning, cleanRoom } from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\nimport { addUnassignedDates, handleUnAssignedDatesChange, removeUnassignedDates } from '@/stores/unassigned_dates.store';\nimport Token from '@/models/Token';\nimport { RoomHkStatus, RoomType } from '@/models/booking.dto';\nimport { BatchingQueue } from '@/utils/Queue';\nimport { HKSkipParams, HouseKeepingService } from '@/services/housekeeping.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import Auth from '@/models/Auth';\nexport interface UnitHkStatusChangePayload {\n  PR_ID: number;\n  ROOM_CATEGORY_ID: number;\n  NAME: string;\n  DESCRIPTION: string;\n  ENTRY_USER_ID: number;\n  ENTRY_DATE: string;\n  OWNER_ID: number;\n  IS_ACTIVE: boolean;\n  HKS_CODE: RoomHkStatus;\n  HKM_ID: number;\n  CHECKLIST: null;\n  My_Room_category: null;\n  My_Hkm: null;\n}\nexport type SalesBatchPayload = { rate_plan_id: number; night: string; is_available_to_book: boolean };\nexport type AvailabilityBatchPayload = { room_type_id: number; date: string; availability: number };\nexport type CalendarSidebarState = {\n  type: 'room-guests' | 'booking-details' | 'add-days' | 'bulk-blocks';\n  payload: any;\n};\n@Component({\n  tag: 'igloo-calendar',\n  styleUrl: 'igloo-calendar.css',\n  scoped: true,\n})\nexport class IglooCalendar {\n  @Prop() propertyid: number;\n  @Prop({ mutable: true }) from_date: string;\n  @Prop() to_date: string;\n  @Prop() language: string;\n  @Prop() loadingMessage: string;\n  @Prop() currencyName: string;\n  @Prop() ticket: string = '';\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @Element() private element: HTMLElement;\n\n  @State() calendarData: { [key: string]: any } = new Object();\n  @State() property_id: number;\n  @State() days: { [key: string]: any }[] = new Array();\n  @State() scrollViewDragging: boolean = false;\n  @State() dialogData: CalendarModalEvent | null = null;\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\n  @State() editBookingItem: TIglBookPropertyPayload | null = null;\n  @State() showLegend: boolean = false;\n  @State() showPaymentDetails: boolean = false;\n  @State() showToBeAssigned: boolean = false;\n  @State() unassignedDates = {};\n  @State() roomNightsData: IRoomNightsData | null = null;\n  @State() renderAgain = false;\n  @State() showBookProperty: boolean = false;\n  @State() highlightedDate: string;\n  @State() calDates: { from: string; to: string };\n  @State() isAuthenticated = false;\n  @State() calendarSidebarState: CalendarSidebarState;\n\n  @Event({ bubbles: true, composed: true })\n  dragOverHighlightElement: EventEmitter;\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\n  @Event() calculateUnassignedDates: EventEmitter;\n  @Event({ bubbles: true, composed: true })\n  reduceAvailableUnitEvent: EventEmitter<{ fromDate: string; toDate: string }>;\n  @Event({ bubbles: true }) revertBooking: EventEmitter;\n  @Event() openCalendarSidebar: EventEmitter<CalendarSidebarState>;\n  @Event() showRoomNightsDialog: EventEmitter<IRoomNightsData>;\n\n  private bookingService: BookingService = new BookingService();\n  private roomService: RoomService = new RoomService();\n  private eventsService = new EventsService();\n  private toBeAssignedService = new ToBeAssignedService();\n  private housekeepingService = new HouseKeepingService();\n  // private auth = new Auth();\n  private countries: ICountry[] = [];\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\n  private scrollContainer: HTMLElement;\n  private today: String = '';\n  private reachedEndOfCalendar = false;\n\n  private socket: Socket;\n  private token = new Token();\n  private calendarModalEl: HTMLIrModalElement;\n\n  private salesQueue = new BatchingQueue<SalesBatchPayload[]>(this.processSalesBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Sales Update Error:', e),\n  });\n\n  private availabilityQueue = new BatchingQueue<AvailabilityBatchPayload[]>(this.processAvailabilityBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Availability Update Error:', e),\n  });\n\n  private roomTypeIdsCache: Map<number, { id: number; index: number } | 'skip'> = new Map();\n  private tasksEndDate: string;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    this.init();\n  }\n  componentDidLoad() {\n    this.scrollToElement(this.today);\n  }\n  @Listen('deleteButton')\n  async handleDeleteEvent(ev: CustomEvent) {\n    try {\n      ev.stopImmediatePropagation();\n      ev.preventDefault();\n      await this.eventsService.deleteEvent(ev.detail);\n    } catch (error) {\n      //toastr.error(error);\n    }\n  }\n  @Listen('openCalendarSidebar', { target: 'window' })\n  async handleCalendarSidebarEvents(ev: CustomEvent) {\n    console.log('hit 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥');\n    ev.stopImmediatePropagation();\n    ev.stopPropagation();\n    this.calendarSidebarState = ev.detail;\n  }\n  @Listen('scrollPageToRoom', { target: 'window' })\n  scrollPageToRoom(event: CustomEvent) {\n    let targetScrollClass = event.detail.refClass;\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\n    if (gotoRoom) {\n      this.scrollContainer.scrollTo({ top: 0 });\n      const gotoRect = gotoRoom.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\n      });\n    }\n  }\n  @Listen('showDialog')\n  handleShowDialog(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    this.dialogData = event.detail;\n    this.calendarModalEl?.openModal();\n  }\n  @Listen('showRoomNightsDialog')\n  handleShowRoomNightsDialog(event: CustomEvent<IRoomNightsData>) {\n    this.roomNightsData = event.detail;\n  }\n  @Listen('addBookingDatasEvent')\n  handleBookingDatasChange(event: CustomEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    let bookings = [...this.calendarData.bookingEvents];\n    bookings = bookings.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\n    bookings.push(...event.detail.filter(ev => ev.STATUS === 'PENDING-CONFIRMATION'));\n    this.updateBookingEventsDateRange(event.detail);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n  }\n  @Listen('updateBookingEvent')\n  handleUpdateBookingEvent(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    const newBookingEvent = e.detail;\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (newBookingEvent.ID === event.ID) {\n          return newBookingEvent;\n        }\n        return event;\n      }),\n    };\n  }\n  @Listen('showBookingPopup', { target: 'window' })\n  showBookingPopupEventDataHandler(event: CustomEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.onOptionSelect(event);\n    //console.log(\"show booking event\", event);\n  }\n\n  @Listen('updateEventData')\n  updateEventDataHandler(event: CustomEvent) {\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\n    if (bookedData && event.detail && event.detail.data) {\n      Object.entries(event.detail.data).forEach(([key, value]) => {\n        bookedData[key] = value;\n      });\n    }\n  }\n\n  @Listen('dragOverEventData')\n  dragOverEventDataHandler(event: CustomEvent) {\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\n      this.visibleCalendarCells = { x: [], y: [] };\n\n      containerDays.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.x.push({\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\n          width: htmlElement.offsetWidth,\n          id: htmlElement.getAttribute('data-day'),\n        });\n      });\n\n      containerRooms.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.y.push({\n          top: htmlElement.offsetTop,\n          height: htmlElement.offsetHeight,\n          id: htmlElement.getAttribute('data-room'),\n        });\n      });\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER') {\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  private init() {\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    handleUnAssignedDatesChange('unassigned_dates', newValue => {\n      if (Object.keys(newValue).length === 0 && this.highlightedDate !== '') {\n        this.highlightedDate = '';\n      }\n    });\n  }\n  private renderModalBody() {\n    switch (this.dialogData?.reason) {\n      case 'checkin': {\n        return `Are you sure you want to Check In this unit?`;\n      }\n      case 'checkout': {\n        return 'Are you sure you want to Check Out this unit?';\n      }\n      case 'reallocate':\n        return this.dialogData?.description || '';\n      case 'stretch':\n        return 'Warning ';\n      default:\n        return 'Unknown modal content';\n    }\n  }\n  private setUpCalendarData(roomResp, bookingResp) {\n    this.calendarData.currency = roomResp['My_Result'].currency;\n    this.calendarData.allowedBookingSources = roomResp['My_Result'].allowed_booking_sources;\n    this.calendarData.adultChildConstraints = roomResp['My_Result'].adult_child_constraints;\n    this.calendarData.legendData = this.getLegendData(roomResp);\n    this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\n    this.calendarData.from_date = bookingResp.My_Params_Get_Rooming_Data.FROM;\n    this.calendarData.to_date = bookingResp.My_Params_Get_Rooming_Data.TO;\n    this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\n    this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\n    this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\n    let bookings = bookingResp.myBookings || [];\n    bookings = bookings.filter(bookingEvent => {\n      const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n      const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n      return !toDate.isSame(fromDate);\n    });\n    this.calendarData.bookingEvents = bookings;\n\n    this.calendarData.toBeAssignedEvents = [];\n  }\n\n  async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n          include_sales_rate_plans: true,\n        });\n        roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [\n        this.bookingService.getCalendarData(propertyId, this.from_date, this.to_date),\n        this.bookingService.getCountries(this.language),\n        this.roomService.fetchLanguage(this.language),\n        this.housekeepingService.getExposedHKSetup(this.property_id),\n      ];\n\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      // this.tasksEndDate=housekeeping_store?.hk_criteria?.cleaning_periods[housekeeping_store?.hk_criteria?.cleaning_periods.length - 1].code\n      this.tasksEndDate = moment().add(30, 'days').format('YYYY-MM-DD');\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n      if (!roomResp) {\n        roomResp = results[results.length - 1];\n      }\n      const [bookingResp, countries] = results as any;\n      calendar_dates.days = bookingResp.days;\n      calendar_dates.months = bookingResp.months;\n      this.setRoomsData(roomResp);\n      this.countries = countries;\n      this.setUpCalendarData(roomResp, bookingResp);\n      let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\n      this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\n      this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\n      this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\n      this.today = this.transformDateForScroll(new Date());\n      let startingDay: Date = new Date(this.calendarData.startingDate);\n      startingDay.setHours(0, 0, 0, 0);\n      this.days = bookingResp.days;\n      this.calendarData.days = this.days;\n      this.calendarData.monthsInfo = bookingResp.months;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      calendar_dates.toDate = this.calendarData.to_date;\n\n      setTimeout(() => {\n        this.scrollToElement(this.today);\n      }, 200);\n      if (!this.calendarData.is_vacation_rental) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, this.from_date, this.to_date);\n        this.unassignedDates = { fromDate: this.from_date, toDate: this.to_date, data: { ...this.unassignedDates, ...data } };\n        this.calendarData = { ...this.calendarData, unassignedDates: data };\n        addUnassignedDates(data);\n      }\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.error('Initializing Calendar Error', error);\n    }\n  }\n  private async getHousekeepingTasks({ from_date, to_date }: { from_date: string; to_date: string }) {\n    const { tasks } = await this.housekeepingService.getHkTasks({\n      property_id: this.property_id,\n      from_date,\n      to_date,\n      housekeepers: [],\n      cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n      dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n      highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n    });\n    addCleaningTasks(tasks);\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result: any;\n    if (['DELETE_CALENDAR_POOL', 'GET_UNASSIGNED_DATES'].includes(REASON)) {\n      result = PAYLOAD;\n    } else {\n      result = JSON.parse(PAYLOAD);\n    }\n    console.log({ [REASON]: result });\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n      DORESERVATION: this.handleDoReservation,\n      BLOCK_EXPOSED_UNIT: this.handleBlockExposedUnit,\n      ASSIGN_EXPOSED_ROOM: this.handleAssignExposedRoom,\n      REALLOCATE_EXPOSED_ROOM_BLOCK: this.handleReallocateExposedRoomBlock,\n      DELETE_CALENDAR_POOL: this.handleDeleteCalendarPool,\n      GET_UNASSIGNED_DATES: this.handleGetUnassignedDates,\n      UPDATE_CALENDAR_AVAILABILITY: r => this.availabilityQueue.offer(r),\n      CHANGE_IN_DUE_AMOUNT: this.handleChangeInDueAmount,\n      CHANGE_IN_BOOK_STATUS: this.handleChangeInBookStatus,\n      NON_TECHNICAL_CHANGE_IN_BOOKING: this.handleNonTechnicalChangeInBooking,\n      ROOM_STATUS_CHANGED: this.handleRoomStatusChanged,\n      UNIT_HK_STATUS_CHANGED: this.handleUnitHKStatusChanged,\n      SHARING_PERSONS_UPDATED: this.handleSharingPersonsUpdated,\n      ROOM_TYPE_CLOSE: r => this.salesQueue.offer({ ...r, is_available_to_book: false }),\n      ROOM_TYPE_OPEN: r => this.salesQueue.offer({ ...r, is_available_to_book: true }),\n      HK_SKIP: this.handleHkSkip,\n    };\n\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n  private handleSharingPersonsUpdated(result: any) {\n    console.log('sharing persons updated', result);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.identifier) {\n            const mainGuest = result.guests?.find(p => p.is_main);\n            return { ...e, NAME: formatName(mainGuest.first_name, mainGuest.last_name), ROOM_INFO: { ...e.ROOM_INFO, sharing_persons: result.guests } };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleRoomStatusChanged(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.room_identifier) {\n            const STATUS = getRoomStatus({\n              from_date: e.FROM_DATE,\n              to_date: e.TO_DATE,\n              in_out: { ...e.ROOM_INFO.in_out, code: result.status },\n              status_code: e.BASE_STATUS_CODE,\n            });\n            return {\n              ...e,\n              CHECKIN: result.status === '001',\n              CHECKOUT: result.status === '002',\n              STATUS,\n            };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleHkSkip(result: HKSkipParams) {\n    cleanRoom({ date: result.DATE, unitId: result.PR_ID });\n  }\n  private handleUnitHKStatusChanged(result: UnitHkStatusChangePayload) {\n    console.log('hk unit change', result);\n    const updatedRooms: RoomType[] = [...this.calendarData.roomsInfo];\n    const changedRoomTypeIdx = updatedRooms.findIndex((roomType: RoomType) => roomType.id === result.ROOM_CATEGORY_ID);\n    if (changedRoomTypeIdx !== -1) {\n      const changedRoomType = { ...updatedRooms[changedRoomTypeIdx] };\n      const changedPhysicalRoomIdx = changedRoomType.physicalrooms.findIndex(room => room.id === result.PR_ID);\n      if (changedPhysicalRoomIdx !== -1) {\n        const updatedPhysicalRooms = [...changedRoomType.physicalrooms];\n        const targetPhysicalRoom = { ...updatedPhysicalRooms[changedPhysicalRoomIdx] };\n        targetPhysicalRoom.hk_status = result.HKS_CODE;\n        updatedPhysicalRooms[changedPhysicalRoomIdx] = targetPhysicalRoom;\n        changedRoomType.physicalrooms = updatedPhysicalRooms;\n        updatedRooms[changedRoomTypeIdx] = changedRoomType;\n        this.calendarData = {\n          ...this.calendarData,\n          roomsInfo: updatedRooms,\n        };\n      }\n    }\n    const roomPayload = { date: moment().format('YYYY-MM-DD'), unitId: result.PR_ID };\n    if (result.HKS_CODE === '002') {\n      addRoomForCleaning(roomPayload);\n    } else {\n      cleanRoom(roomPayload);\n    }\n  }\n  private async handleDoReservation(result: any) {\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleBlockExposedUnit(result: any) {\n    const transformedBooking = [await transformNewBLockedRooms(result)];\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleAssignExposedRoom(result: any) {\n    console.log(result);\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleReallocateExposedRoomBlock(result: any) {\n    await this.handleBlockExposedUnit(result);\n  }\n\n  private async handleDeleteCalendarPool(result: any) {\n    console.log('delete calendar pool');\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.filter(e => e.POOL !== result),\n    };\n  }\n\n  private async handleGetUnassignedDates(result: any) {\n    const parsedResult = this.parseDateRange(result);\n    if (\n      !this.calendarData.is_vacation_rental &&\n      new Date(parsedResult.FROM_DATE).getTime() >= this.calendarData.startingDate &&\n      new Date(parsedResult.TO_DATE).getTime() <= this.calendarData.endingDate\n    ) {\n      const data = await this.toBeAssignedService.getUnassignedDates(\n        this.property_id,\n        dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        dateToFormattedString(new Date(parsedResult.TO_DATE)),\n      );\n      addUnassignedDates(data);\n      this.unassignedDates = {\n        fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        data,\n      };\n      if (Object.keys(data).length === 0) {\n        removeUnassignedDates(dateToFormattedString(new Date(parsedResult.FROM_DATE)), dateToFormattedString(new Date(parsedResult.TO_DATE)));\n        this.reduceAvailableUnitEvent.emit({\n          fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n          toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        });\n      }\n    }\n  }\n\n  private parseDateRange(str: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    const pairs = str.split('|');\n\n    pairs.forEach(pair => {\n      const res = pair.split(':');\n      result[res[0]] = res[1];\n    });\n    return result;\n  }\n\n  private handleChangeInDueAmount(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return { ...event, BALANCE: result.due_amount };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleChangeInBookStatus(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return {\n            ...event,\n            STATUS: event.STATUS !== 'IN-HOUSE' ? bookingStatus[result.status_code] : result.status_code === '001' ? bookingStatus[result.status_code] : 'IN-HOUSE',\n          };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleNonTechnicalChangeInBooking(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (event.BOOKING_NUMBER === result.booking_nbr) {\n          return { ...event, PRIVATE_NOTE: getPrivateNote(result.extras) };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private checkBookingAvailability(data) {\n    return this.calendarData.bookingEvents.some(\n      booking => booking.ID === data.ID || (booking.FROM_DATE === data.FROM_DATE && booking.TO_DATE === data.TO_DATE && booking.PR_ID === data.PR_ID),\n    );\n  }\n\n  private updateBookingEventsDateRange(eventData) {\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        // if (calendar_data.checkin_enabled) {\n        bookingEvent.STATUS = getRoomStatus({\n          in_out: bookingEvent.ROOM_INFO?.in_out,\n          from_date: bookingEvent.FROM_DATE,\n          to_date: bookingEvent.TO_DATE,\n          status_code: bookingEvent.BASE_STATUS_CODE,\n        });\n        // } else {\n        //   const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        //   const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        //   if (bookingEvent.STATUS !== 'PENDING') {\n        //     if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['003'];\n        //     }\n        //   }\n        // }\n      }\n    });\n  }\n  /**\n   * \n   *private updateBookingEventsDateRange(eventData) {\n    const now = moment();\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        if (bookingEvent.STATUS !== 'PENDING') {\n          if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n            bookingEvent.STATUS = bookingStatus['003'];\n          }\n        }\n      }\n    });\n  }\n   */\n  private processSalesBatch(batch: SalesBatchPayload[]) {\n    const days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const sale of batch) {\n      // 1) find the day index\n      const dayIdx = days.findIndex(d => d.value === sale.night);\n      if (dayIdx === -1) {\n        console.warn(`Couldn't find day ${sale.night}`);\n        continue;\n      }\n\n      // 2) check cache entry\n      let entry = this.roomTypeIdsCache.get(sale.rate_plan_id);\n      if (entry === 'skip') {\n        // previously determined no matching room type for this rate_plan_id\n        continue;\n      }\n\n      // 3) if not cached, look it up and cache it\n      if (!entry) {\n        const rtIdx = days[dayIdx].rate.findIndex(rt => rt.rateplans.some(rp => rp.id === sale.rate_plan_id));\n        if (rtIdx === -1) {\n          this.roomTypeIdsCache.set(sale.rate_plan_id, 'skip');\n          console.warn(`Couldn't find room type for rate plan ${sale.rate_plan_id}`);\n          continue;\n        }\n        const roomType = days[dayIdx].rate[rtIdx];\n        const rpIdx = roomType.rateplans.findIndex(rp => rp.id === sale.rate_plan_id);\n        entry = { id: rtIdx, index: rpIdx };\n        this.roomTypeIdsCache.set(sale.rate_plan_id, entry);\n      }\n\n      // 4) apply cached indices\n      const { id: roomTypeIdx, index: ratePlanIdx } = entry as { id: number; index: number };\n      const roomType = days[dayIdx].rate[roomTypeIdx];\n\n      // 5) update that specific rateplan\n      const updatedRateplans = roomType.rateplans.map((rp, i) => (i === ratePlanIdx ? { ...rp, is_available_to_book: sale.is_available_to_book } : rp));\n      const is_available_to_book = updatedRateplans.some(rp => rp.is_available_to_book);\n      days[dayIdx].rate[roomTypeIdx] = {\n        ...roomType,\n        rateplans: updatedRateplans,\n        // overall room availability = true if any rateplan is bookable\n        is_available_to_book,\n      };\n      //update the disabled cells\n      for (const room of roomType.physicalrooms) {\n        const key = `${room.id}_${days[dayIdx].value}`;\n        disabled_cells.set(key, { disabled: !is_available_to_book, reason: 'stop_sale' });\n      }\n    }\n\n    // 6) write back to the store\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = days;\n  }\n  private processAvailabilityBatch(batch: AvailabilityBatchPayload[]) {\n    let days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const queue of batch) {\n      //find the selected day\n      const index = days.findIndex(day => day.value === queue.date);\n      if (index === -1) {\n        console.warn(`Couldn't find day ${queue.date}`);\n        return;\n      }\n      //find room_type_id\n      const room_type_index = days[index].rate.findIndex(room => room.id === queue.room_type_id);\n      if (room_type_index === -1) {\n        console.warn(`Couldn't find room type ${queue.room_type_id}`);\n        return;\n      }\n      const room_type = days[index].rate[room_type_index];\n      //update the availability\n      room_type.exposed_inventory.rts = queue.availability;\n      // if (queue.availability === 0) {\n      const isClosed = room_type.rateplans.every(rp => !rp.is_available_to_book);\n      for (const room of room_type.physicalrooms) {\n        const key = `${room.id}_${queue.date}`;\n        disabled_cells.set(key, { disabled: queue.availability === 0, reason: isClosed ? 'stop_sale' : 'inventory' });\n      }\n      // }\n    }\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = [...days];\n  }\n\n  private setRoomsData(roomServiceResp) {\n    let roomsData: RoomDetail[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    calendar_data.roomsInfo = roomsData;\n    this.calendarData.roomsInfo = roomsData;\n  }\n\n  private getLegendData(aData) {\n    return aData['My_Result'].calendar_legends;\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n\n  private scrollToElement(goToDate) {\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\n    if (gotoDay) {\n      this.scrollContainer.scrollTo({ left: 0 });\n      const gotoRect = gotoDay.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\n      });\n    }\n  }\n  private AddOrUpdateRoomBookings(data: RoomBlockDetails[] | RoomBookingDetails[], pool: string | undefined = undefined) {\n    let bookings = [...this.calendarData.bookingEvents];\n    data.forEach(d => {\n      if (!this.checkBookingAvailability(d)) {\n        bookings = bookings.filter(booking => booking.ID !== d.ID);\n      }\n    });\n    this.updateBookingEventsDateRange(data);\n    if (pool) {\n      bookings = bookings.filter(booking => booking.POOL === pool);\n    }\n    data.forEach(d => {\n      if (!bookings.some(booking => booking.ID === d.ID)) {\n        bookings.push(d);\n      }\n    });\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n\n    const isDateInBetweenTheLastPeriodDate = (d: any): boolean => {\n      const endDate = moment(this.tasksEndDate, 'YYYY-MM-DD');\n      // return moment(d.FROM_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate) || moment(d.TO_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate);\n      return moment(d.FROM_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date') || moment(d.TO_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date');\n    };\n\n    if (data.some(isDateInBetweenTheLastPeriodDate)) {\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n    }\n  }\n\n  private transformDateForScroll(date: Date) {\n    return moment(date).format('D_M_YYYY');\n  }\n\n  shouldRenderCalendarView() {\n    // console.log(\"rendering...\")\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\n  }\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\n    const opt: { [key: string]: any } = event.detail;\n    const calendarElement = this.element.querySelector('#iglooCalendar');\n    switch (opt.key) {\n      case 'showAssigned':\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.toggle('showToBeAssigned');\n\n        this.showLegend = false;\n        this.showToBeAssigned = true;\n        break;\n      case 'showLegend':\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.toggle('showLegend');\n\n        this.showLegend = true;\n        this.showToBeAssigned = false;\n        break;\n      case 'calendar':\n        let dt = new Date();\n        if (opt.data.start !== undefined && opt.data.end !== undefined) {\n          dt = opt.data.start.toDate();\n          this.handleDateSearch(opt.data);\n        } else {\n          //scroll to unassigned dates\n          dt = new Date(opt.data);\n          dt.setDate(dt.getDate() + 1);\n          if (!opt?.noScroll) {\n            this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\n          }\n        }\n        this.highlightedDate = this.transformDateForScroll(dt);\n        break;\n      case 'search':\n        break;\n      case 'bulk':\n        this.calendarSidebarState = {\n          type: 'bulk-blocks',\n          payload: null,\n        };\n        break;\n      case 'add':\n        //console.log('data:', opt.data);\n        if (opt.data.event_type !== 'EDIT_BOOKING') {\n          this.bookingItem = opt.data;\n        } else {\n          this.editBookingItem = opt.data;\n        }\n        break;\n      case 'gotoToday':\n        this.scrollToElement(this.today);\n        break;\n      case 'closeSideMenu':\n        this.closeSideMenu();\n        this.highlightedDate = '';\n        this.showBookProperty = false;\n        break;\n    }\n  }\n\n  private async addDatesToCalendar(fromDate: string, toDate: string) {\n    const [results] = await Promise.all([this.bookingService.getCalendarData(this.property_id, fromDate, toDate)]);\n\n    const newBookings = results.myBookings || [];\n    this.updateBookingEventsDateRange(newBookings);\n    if (new Date(fromDate).getTime() < new Date(this.calendarData.startingDate).getTime()) {\n      this.calendarData.startingDate = new Date(fromDate).getTime();\n      this.calendarData.from_date = fromDate;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      this.days = [...results.days, ...this.days];\n      let newMonths = [...results.months];\n      if (this.calendarData.monthsInfo[0].monthName === results.months[results.months.length - 1].monthName) {\n        this.calendarData.monthsInfo[0].daysCount = this.calendarData.monthsInfo[0].daysCount + results.months[results.months.length - 1].daysCount;\n        newMonths.pop();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE = newBooking.FROM_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            newBooking.FROM_DATE,\n            this.calendarData.bookingEvents[existingBookingIndex].TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...newMonths, ...this.calendarData.monthsInfo],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      if (Math.abs(moment().diff(moment(fromDate, 'YYYY-MM-DD'), 'days')) <= 10) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n        this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n        this.unassignedDates = {\n          fromDate,\n          toDate,\n          data,\n        };\n        addUnassignedDates(data);\n      }\n    } else {\n      this.calendarData.endingDate = new Date(toDate).getTime();\n      this.calendarData.to_date = toDate;\n      calendar_dates.toDate = this.calendarData.to_date;\n      let newMonths = [...results.months];\n      this.days = [...this.days, ...results.days];\n      if (this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].monthName === results.months[0].monthName) {\n        this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount =\n          this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount + results.months[0].daysCount;\n        newMonths.shift();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].TO_DATE = newBooking.TO_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE,\n            newBooking.TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      //calendar_dates.months = bookingResp.months;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...this.calendarData.monthsInfo, ...newMonths],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n      this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n      this.unassignedDates = {\n        fromDate,\n        toDate,\n        data,\n      };\n      addUnassignedDates(data);\n    }\n  }\n  async handleDateSearch(dates: { start: Moment; end: Moment }) {\n    const startDate = moment(dates.start).toDate();\n    const defaultFromDate = moment(this.calDates.from).toDate();\n    const endDate = dates.end.toDate();\n    const defaultToDate = this.calendarData.endingDate;\n    if (startDate.getTime() < new Date(this.calDates.from).getTime()) {\n      await this.addDatesToCalendar(moment(startDate).add(-1, 'days').format('YYYY-MM-DD'), moment(defaultFromDate).add(-1, 'days').format('YYYY-MM-DD'));\n      this.calDates = { ...this.calDates, from: dates.start.add(-1, 'days').format('YYYY-MM-DD') };\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultFromDate.getTime() && startDate.getTime() < defaultToDate && endDate.getTime() < defaultToDate) {\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultToDate) {\n      const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n      await this.addDatesToCalendar(nextDay, moment(endDate).add(2, 'months').format('YYYY-MM-DD'));\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    }\n  }\n\n  private closeSideMenu() {\n    // const calendarElement = this.element.querySelector('#iglooCalendar');\n    // calendarElement.classList.remove('showToBeAssigned');\n    // calendarElement.classList.remove('showLegend');\n\n    this.showLegend = false;\n    this.showToBeAssigned = false;\n  }\n\n  private scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\n  private dragScrollContent(event: MouseEvent) {\n    this.scrollViewDragging = false;\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\n    if (!isPreventPageScroll && event.buttons === 1) {\n      this.scrollViewDragPos = {\n        left: this.scrollContainer.scrollLeft,\n        top: this.scrollContainer.scrollTop,\n        x: event.clientX,\n        y: event.clientY,\n      };\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\n    }\n  }\n\n  private onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\n    if (event.buttons !== 1) {\n      return;\n    }\n\n    const dx = event.clientX - this.scrollViewDragPos.x;\n    const dy = event.clientY - this.scrollViewDragPos.y;\n\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\n      this.scrollViewDragging = true;\n    }\n  };\n\n  private onScrollContentMoveEndHandler: EventListener = () => {\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\n  };\n\n  private calendarScrolling() {\n    if (this.scrollContainer) {\n      if (this.highlightedDate) {\n        const highlightedElement = document.querySelector(`.day-${this.highlightedDate}`);\n        if (highlightedElement) {\n          const { left, right } = highlightedElement.getBoundingClientRect();\n          const isVisible = left >= 0 && right <= window.innerWidth;\n          if (!isVisible) {\n            this.highlightedDate = '';\n          }\n        }\n      }\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      let leftSideMenuSize = 170;\n      let maxWidth = containerRect.width - leftSideMenuSize;\n      let leftX = containerRect.x + leftSideMenuSize;\n      let rightX = containerRect.x + containerRect.width;\n\n      let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\n\n      if (cells.length) {\n        cells.map(async (monthContainer: HTMLElement) => {\n          let monthRect = monthContainer.getBoundingClientRect();\n          if (cells.indexOf(monthContainer) === cells.length - 1) {\n            if (monthRect.x + monthRect.width <= rightX && !this.reachedEndOfCalendar) {\n              this.reachedEndOfCalendar = true;\n              //await this.addNextTwoMonthsToCalendar();\n              const nextTwoMonths = addTwoMonthToDate(new Date(this.calendarData.endingDate));\n              const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n              await this.addDatesToCalendar(nextDay, nextTwoMonths);\n              this.reachedEndOfCalendar = false;\n            }\n          }\n          if (monthRect.x + monthRect.width < leftX) {\n            // item end is scrolled outside view, in -x\n          } else if (monthRect.x > rightX) {\n            // item is outside scrollview, in +x\n          } else {\n            let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\n            let marginLeft = 0;\n            let monthWidth = monthRect.width;\n            if (monthRect.x < leftX) {\n              marginLeft = Math.abs(monthRect.x) - leftX;\n              marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\n              monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\n            } else {\n              monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\n            }\n            titleElement.style.marginLeft = marginLeft + 'px';\n            titleElement.style.width = monthWidth + 'px';\n          }\n        });\n      }\n    }\n  }\n\n  private hasAncestorWithClass(element: HTMLElement, className: string): boolean {\n    let currentElement = element;\n    while (currentElement !== null) {\n      if (currentElement.matches(`.${className}`)) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n\n  private async highlightDragOver(hightLightElement, currentPosition) {\n    let xElement, yElement;\n    if (currentPosition) {\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\n    }\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\n    if (hightLightElement && xElement && yElement) {\n      this.dragOverHighlightElement.emit({\n        dragOverElement: yElement.id + '_' + xElement.id,\n      });\n    } else {\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\n    }\n    if (!hightLightElement) {\n      this.moveBookingTo.emit({\n        bookingId: currentPosition.id,\n        fromRoomId: currentPosition.fromRoomId,\n        toRoomId: (yElement && yElement.id) || 'revert',\n        moveToDay: (xElement && xElement.id) || 'revert',\n        pool: currentPosition.pool,\n        from_date: convertDMYToISO(xElement && xElement.id),\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\n      });\n    }\n  }\n  private handleModalConfirm() {\n    // Helper to reset modal state\n    const resetModalState = () => {\n      this.dialogData = null;\n    };\n\n    try {\n      switch (this.dialogData?.reason) {\n        case 'checkin':\n        case 'checkout': {\n          const { bookingNumber, roomIdentifier } = this.dialogData;\n          const status = this.dialogData.reason === 'checkin' ? '001' : '002';\n          this.bookingService.handleExposedRoomInOut({ booking_nbr: bookingNumber, room_identifier: roomIdentifier, status }).finally(resetModalState);\n          if (this.dialogData.reason === 'checkin') {\n            this.openCalendarSidebar.emit({ type: 'room-guests', payload: this.dialogData.sidebarPayload });\n          }\n          break;\n        }\n        case 'stretch':\n          const { reason, ...rest } = this.dialogData;\n          this.showRoomNightsDialog.emit(rest);\n          break;\n        case 'reallocate': {\n          if (!this.dialogData) {\n            console.warn('No dialog data available for reallocation.');\n            return;\n          }\n          const { pool, toRoomId, from_date, to_date } = this.dialogData;\n\n          // Handle room reallocation\n          this.eventsService\n            .reallocateEvent(pool, toRoomId, from_date, to_date)\n            .then(resetModalState)\n            .catch(() => {\n              console.error('Reallocation failed. Reverting booking.');\n              this.revertBooking.emit(pool);\n            })\n            .finally(resetModalState);\n          break;\n        }\n\n        default:\n          resetModalState();\n          break;\n      }\n    } catch (error) {\n      console.error('Error handling modal confirm:', error);\n      resetModalState();\n    }\n  }\n  private handleModalCancel() {\n    if (this.dialogData?.reason === 'reallocate' || this.dialogData.reason === 'stretch') {\n      this.revertBooking.emit(this.dialogData.pool);\n    }\n    this.dialogData = null;\n  }\n  private handleRoomNightsDialogClose(e: CustomEvent<IRoomNightsDataEventPayload>) {\n    if (e.detail.type === 'cancel') {\n      this.revertBooking.emit(this.roomNightsData.pool);\n    }\n    this.roomNightsData = null;\n  }\n  private handleSideBarToggle(e: CustomEvent<boolean>) {\n    if (e.detail) {\n      this.calendarSidebarState = null;\n      if (this.editBookingItem) {\n        this.editBookingItem = null;\n      }\n      if (this.roomNightsData) {\n        this.revertBooking.emit(this.roomNightsData.pool);\n        this.roomNightsData = null;\n      }\n      if (this.dialogData?.reason === 'reallocate') {\n        this.revertBooking.emit(this.dialogData.pool);\n        this.dialogData = null;\n      }\n    }\n  }\n  private handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  render() {\n    // if (!this.isAuthenticated) {\n    //   return <ir-login onAuthFinish={() => this.auth.setIsAuthenticated(true)}></ir-login>;\n    // }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <div id=\"iglooCalendar\" class={{ 'igl-calendar': true, 'showToBeAssigned': this.showToBeAssigned, 'showLegend': this.showLegend }}>\n          {this.shouldRenderCalendarView() ? (\n            <Fragment data-testid=\"ir-calendar\">\n              {this.showToBeAssigned && (\n                <igl-to-be-assigned\n                  unassignedDatesProp={this.unassignedDates}\n                  to_date={this.to_date}\n                  from_date={this.from_date}\n                  propertyid={this.property_id}\n                  class=\"tobeAssignedContainer\"\n                  calendarData={this.calendarData}\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\n                ></igl-to-be-assigned>\n              )}\n              {this.showLegend && <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>}\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\n                <div id=\"calendarContainer\">\n                  <igl-cal-header\n                    unassignedDates={this.unassignedDates}\n                    to_date={this.to_date}\n                    propertyid={this.property_id}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    highlightedDate={this.highlightedDate}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-header>\n                  <igl-cal-body\n                    propertyId={this.property_id}\n                    language={this.language}\n                    countries={this.countries}\n                    currency={this.calendarData.currency}\n                    today={this.today}\n                    highlightedDate={this.highlightedDate}\n                    isScrollViewDragging={this.scrollViewDragging}\n                    calendarData={this.calendarData}\n                  ></igl-cal-body>\n                  <igl-cal-footer\n                    highlightedDate={this.highlightedDate}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-footer>\n                </div>\n              </div>\n            </Fragment>\n          ) : (\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\n          )}\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowedBookingSources}\n            adultChildConstraints={this.calendarData.adultChildConstraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.property_id}\n            bookingData={this.bookingItem}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={!!this.calendarSidebarState || this.roomNightsData !== null || (this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING')}\n          showCloseButton={false}\n          sidebarStyles={{\n            width: this.calendarSidebarState?.type === 'room-guests' ? '60rem' : this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.editBookingItem ? '#F2F3F8' : 'white',\n          }}\n        >\n          {this.roomNightsData && (\n            <ir-room-nights\n              slot=\"sidebar-body\"\n              pool={this.roomNightsData.pool}\n              onCloseRoomNightsDialog={this.handleRoomNightsDialogClose.bind(this)}\n              language={this.language}\n              bookingNumber={this.roomNightsData.bookingNumber}\n              identifier={this.roomNightsData.identifier}\n              toDate={this.roomNightsData.to_date}\n              fromDate={this.roomNightsData.from_date}\n              defaultDates={this.roomNightsData.defaultDates}\n              ticket={this.ticket}\n              propertyId={this.property_id}\n            ></ir-room-nights>\n          )}\n          {this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING' && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              hasPrint\n              hasReceipt\n              hasCloseButton\n              onCloseSidebar={() => (this.editBookingItem = null)}\n              is_from_front_desk\n              propertyid={this.property_id}\n              hasRoomEdit\n              hasRoomDelete\n              bookingNumber={this.editBookingItem.BOOKING_NUMBER}\n              ticket={this.ticket}\n              language={this.language}\n              hasRoomAdd\n            ></ir-booking-details>\n          )}\n          {this.calendarSidebarState?.type === 'room-guests' && (\n            <ir-room-guests\n              countries={this.countries}\n              language={this.language}\n              identifier={this.calendarSidebarState?.payload?.identifier}\n              bookingNumber={this.calendarSidebarState?.payload.bookingNumber}\n              roomName={this.calendarSidebarState?.payload?.roomName}\n              totalGuests={this.calendarSidebarState?.payload?.totalGuests}\n              sharedPersons={this.calendarSidebarState?.payload?.sharing_persons}\n              slot=\"sidebar-body\"\n              checkIn={this.calendarSidebarState?.payload?.checkin}\n              onCloseModal={() => (this.calendarSidebarState = null)}\n            ></ir-room-guests>\n          )}\n          {this.calendarSidebarState?.type === 'bulk-blocks' && (\n            <igl-bulk-operations slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-operations>\n            // <igl-bulk-stop-sale slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-stop-sale>\n          )}\n        </ir-sidebar>\n        <ir-modal\n          ref={el => (this.calendarModalEl = el)}\n          modalTitle={''}\n          rightBtnActive={this.dialogData?.reason === 'reallocate' ? !this.dialogData.hideConfirmButton : true}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          rightBtnText={locales?.entries?.Lcz_Confirm}\n          modalBody={this.renderModalBody()}\n          onConfirmModal={this.handleModalConfirm.bind(this)}\n          onCancelModal={this.handleModalCancel.bind(this)}\n        ></ir-modal>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport axios from 'axios';\n\n@Component({\n  tag: 'ir-booking-email-logs',\n  styleUrl: 'ir-booking-email-logs.css',\n  scoped: true,\n})\nexport class IrBookingEmailLogs {\n  @Prop() ticket: string;\n\n  @State() data: any[];\n  @State() bookingNumber: string;\n\n  private token = new Token();\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  @Watch('ticket')\n  handleTicketChange() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"p-1\">\n        <ir-interceptor handledEndpoints={['/Get_Email_log_By_BOOK_NBR']}></ir-interceptor>\n        <ir-toast></ir-toast>\n        <div class=\"d-flex align-items-center mb-1\" style={{ gap: '0.5rem' }}>\n          <ir-input-text\n            class=\"m-0\"\n            inputContainerStyle={{ margin: '0' }}\n            value={this.bookingNumber}\n            onTextChange={e => (this.bookingNumber = e.detail)}\n            placeholder=\"booking number\"\n          ></ir-input-text>\n          <ir-button\n            size=\"sm\"\n            text=\"search\"\n            onClickHandler={async () => {\n              const { data } = await axios.post('/Get_Email_log_By_BOOK_NBR', {\n                BOOK_NBR: this.bookingNumber,\n              });\n              if (data.ExceptionMsg) {\n                return;\n              }\n              this.data = data.My_Result;\n            }}\n          ></ir-button>\n        </div>\n        <p>{JSON.stringify(this.data, null, 2)}</p>\n      </Host>\n    );\n  }\n}\n","// src/utils/browserHistory.ts\n\n/**\n * A small utility for reading and writing browser history\n * and manipulating URL search params in a type-safe way.\n */\n\ntype Parser<T> = (value: string | null) => T;\n\n// Common parsers/serializers\nexport const ParamTypes = {\n  string: {\n    parse: (v: string | null): string => v ?? '',\n    serialize: (v: string): string => v,\n  },\n  number: {\n    parse: (v: string | null): number => {\n      if (v == null || v === '') return NaN;\n      const n = Number(v);\n      return isNaN(n) ? NaN : n;\n    },\n    serialize: (v: number): string => String(v),\n  },\n  boolean: {\n    parse: (v: string | null): boolean => v === 'true',\n    serialize: (v: boolean): string => (v ? 'true' : 'false'),\n  },\n} as const;\n\n/**\n * Read a single search‑param, parse it, and return a typed value.\n * Falls back to defaultValue if missing or parse fails.\n */\nexport function getParam<T>(key: string, { parse }: { parse: Parser<T> }, defaultValue: T): T {\n  const params = new URLSearchParams(window.location.search);\n  const raw = params.get(key);\n  try {\n    if (raw == null) return defaultValue;\n    return parse(raw);\n  } catch {\n    return defaultValue;\n  }\n}\n\n/** Helpers for the three built‑in types */\nexport function getStringParam(key: string, defaultValue = ''): string {\n  return getParam(key, ParamTypes.string, defaultValue);\n}\n\nexport function getNumberParam(key: string, defaultValue = NaN): number {\n  return getParam(key, ParamTypes.number, defaultValue);\n}\n\nexport function getBooleanParam(key: string, defaultValue = false): boolean {\n  return getParam(key, ParamTypes.boolean, defaultValue);\n}\n\n/**\n * Read all current search params into a Record<string, string>\n */\nexport function getAllParams(): Record<string, string> {\n  const params = new URLSearchParams(window.location.search);\n  const out: Record<string, string> = {};\n  for (const [key, value] of params.entries()) {\n    out[key] = value;\n  }\n  return out;\n}\n\ninterface SetParamsOptions {\n  /** if true, uses replaceState instead of pushState */\n  replace?: boolean;\n}\n\n/**\n * Update one or more search params.\n * Pass null to delete a param.\n * By default uses history.pushState; set replace: true to call replaceState.\n */\nexport function setParams(updates: Record<string, string | number | boolean | null>, options: SetParamsOptions = {}): void {\n  const params = new URLSearchParams(window.location.search);\n\n  for (const [key, value] of Object.entries(updates)) {\n    if (!value) {\n      params.delete(key);\n    } else {\n      params.set(key, String(value));\n    }\n  }\n\n  const newSearch = params.toString();\n  const newUrl = window.location.pathname + (newSearch ? `?${newSearch}` : '') + window.location.hash;\n\n  if (options.replace) {\n    window.history.replaceState(window.history.state, '', newUrl);\n  } else {\n    window.history.pushState(window.history.state, '', newUrl);\n  }\n}\n\n/**\n * Push a new history entry.\n * `path` may include search or hash.\n * `state` is the history state object.\n */\nexport function pushHistory(path: string, state: any = {}): void {\n  window.history.pushState(state, '', path);\n}\n\n/**\n * Replace the current history entry.\n * `path` may include search or hash.\n * `state` is the history state object.\n */\nexport function replaceHistory(path: string, state: any = {}): void {\n  window.history.replaceState(state, '', path);\n}\n",":host {\n  display: block;\n  height: 100%;\n}\n.logo {\n  height: 2rem;\n  width: 2rem;\n}\n.card {\n  overflow-x: auto;\n}\n.secondary-p {\n  font-size: 12px !important;\n}\n.room-service {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 0.5rem;\n  width: 100%;\n  padding: 0.25rem 0;\n}\n.room-name-container {\n  background: #acecff;\n  padding: 0.1rem 0.3rem;\n  border-radius: 5px;\n  /* cursor: pointer; */\n\n  /* max-width: max-content; */\n}\n.h-screen {\n  height: 100%;\n}\n.price-span {\n  margin: 0;\n  margin-right: 5px;\n}\n.main-container {\n  height: 100%;\n  overflow-y: auto;\n}\n.badge.ct_ir_badge {\n  padding: 0.2rem 0.3rem;\n}\n.yellow_dot {\n  height: 0.5rem;\n  width: 0.5rem;\n  height: 0.5rem;\n  width: 0.8rem;\n  border-radius: 50%;\n  background: rgb(244, 213, 82);\n  margin-left: 0.5rem;\n  display: inline-flex;\n  padding: 0;\n  margin: 0;\n}\n.booking_name {\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n.bg-ir-red {\n  background: #ff4961;\n  padding: 0.2rem 0.3rem;\n}\n.due-btn {\n  border: 1px solid #ff4961;\n  color: #ff4961;\n  cursor: pointer;\n  padding: 1px 0.25rem !important;\n  font-size: 12px !important;\n}\n.due-btn:hover {\n  background: #ff4961;\n  color: white;\n}\n.booking_number {\n  all: unset;\n  cursor: pointer;\n}\n.booking_number:hover {\n  color: #1e9ff2;\n}\n.in-out {\n  width: 150px !important;\n}\n.booking_guest_name {\n  width: fit-content;\n  padding: 0 !important;\n  margin: 0;\n}\n.booking_guest_name .button-text {\n  padding: 0 !important;\n}\n.buttons-container {\n  gap: 10px;\n}\ntd ul {\n  width: max-content !important;\n}\ntd {\n  width: max-content !important ;\n}\n.date-p {\n  width: max-content !important;\n  min-width: 100%;\n  text-align: center !important;\n}\n.booking-label-gap {\n  gap: 5px;\n}\n@media (min-width: 1024px) {\n  .yellow_dot {\n    height: 0.5rem;\n    width: 0.5rem;\n  }\n}\n","import { Booking, IUnit, Occupancy } from '@/models/booking.dto';\nimport { BookingListingService } from '@/services/booking_listing.service';\nimport { RoomService } from '@/services/room.service';\nimport booking_listing, { updateUserSelection, onBookingListingChange, IUserListingSelection, updateUserSelections } from '@/stores/booking_listing.store';\nimport locales from '@/stores/locales.store';\nimport { formatAmount } from '@/utils/utils';\nimport { Component, Host, Prop, State, Watch, h, Element, Listen, Fragment } from '@stencil/core';\nimport moment from 'moment';\nimport { _formatTime } from '../ir-booking-details/functions';\nimport { getPrivateNote } from '@/utils/booking';\nimport Token from '@/models/Token';\nimport { isSingleUnit } from '@/stores/calendar-data';\nimport { getAllParams } from '@/utils/browserHistory';\nimport { BookingService } from '@/services/booking.service';\nimport { PaymentEntries } from '../ir-booking-details/types';\n\n@Component({\n  tag: 'ir-booking-listing',\n  styleUrl: 'ir-booking-listing.css',\n  scoped: true,\n})\nexport class IrBookingListing {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() rowCount: number = 10;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() currentPage = 1;\n  @State() totalPages = 1;\n  @State() oldStartValue = 0;\n  @State() editBookingItem: { booking: Booking; cause: 'edit' | 'payment' | 'delete' | 'guest' } | null = null;\n  @State() showCost = false;\n  @State() paymentEntries: PaymentEntries;\n\n  private bookingListingService = new BookingListingService();\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token = new Token();\n\n  private listingModal: HTMLIrListingModalElement;\n  private listingModalTimeout: NodeJS.Timeout;\n  private statusColors = {\n    '001': 'badge-warning',\n    '002': 'badge-success',\n    '003': 'badge-danger',\n    '004': 'badge-danger',\n  };\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    updateUserSelection('end_row', this.rowCount);\n    booking_listing.rowCount = this.rowCount;\n    if (this.ticket !== '') {\n      booking_listing.token = this.ticket;\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n    onBookingListingChange('userSelection', async newValue => {\n      const newTotal = newValue.total_count;\n      this.totalPages = Math.ceil(newTotal / this.rowCount);\n    });\n    onBookingListingChange('bookings', async newValue => {\n      this.showCost = newValue.some(booking => booking.financial.gross_cost !== null && booking.financial.gross_cost > 0);\n    });\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    booking_listing.token = this.ticket;\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      const requests = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP', '_PAY_METHOD']),\n        this.bookingListingService.getExposedBookingsCriteria(propertyId),\n        this.roomService.fetchLanguage(this.language, ['_BOOKING_LIST_FRONT']),\n      ];\n\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group, pay_method } = this.bookingService.groupEntryTablesResult(setupEntries as any);\n      this.paymentEntries = {\n        groups: pay_type_group,\n        methods: pay_method,\n        types: pay_type,\n      };\n      updateUserSelection('property_id', propertyId);\n      // this.geSearchFiltersFromParams();\n      await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  handleSideBarToggle(e: CustomEvent<boolean>) {\n    if (e.detail) {\n      this.editBookingItem = null;\n    }\n  }\n  geSearchFiltersFromParams() {\n    //e=10&status=002&from=2025-04-15&to=2025-04-22&filter=2&c=Alitalia+Cabin+Crew\n    const params = getAllParams();\n    if (params) {\n      console.log('update params');\n      let obj: Partial<IUserListingSelection> = {};\n      if (params.e) {\n        obj['end_row'] = Number(params.e);\n      }\n      if (params.s) {\n        obj['start_row'] = Number(params.s);\n      }\n      if (params.status) {\n        obj['booking_status'] = params.status;\n      }\n      if (params.filter) {\n        obj['filter_type'] = params.filter;\n      }\n      if (params.from) {\n        obj['from'] = params.from;\n      }\n      if (params.to) {\n        obj['to'] = params.to;\n      }\n      updateUserSelections(obj);\n    }\n    console.log('params=>', params);\n  }\n  getPaginationBounds() {\n    const totalCount = booking_listing.userSelection.total_count;\n    const startItem = (this.currentPage - 1) * this.rowCount;\n    let endItem = this.currentPage * this.rowCount;\n    endItem = endItem > totalCount ? totalCount : endItem;\n    return { startItem, endItem, totalCount };\n  }\n\n  openModal() {\n    this.listingModalTimeout = setTimeout(() => {\n      this.listingModal = this.el.querySelector('ir-listing-modal');\n      this.listingModal.editBooking = this.editBookingItem;\n      this.listingModal.openModal();\n    }, 100);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.listingModalTimeout);\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n  }\n\n  @Listen('resetBookingData')\n  async handleResetStoreData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n  }\n  @Listen('bookingChanged')\n  handleBookingChanged(e: CustomEvent<Booking>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    booking_listing.bookings = [\n      ...booking_listing.bookings.map(b => {\n        if (b.booking_nbr === e.detail.booking_nbr) {\n          return e.detail;\n        }\n        return b;\n      }),\n    ];\n  }\n\n  renderItemRange() {\n    const { endItem, startItem, totalCount } = this.getPaginationBounds();\n    return `${locales.entries.Lcz_View} ${startItem + 1} - ${endItem} ${locales.entries.Lcz_Of} ${totalCount}`;\n  }\n\n  async updateData() {\n    const { endItem, startItem } = this.getPaginationBounds();\n    // setParams({\n    //   s: startItem,\n    //   e: endItem,\n    // });\n    await this.bookingListingService.getExposedBookings({\n      ...booking_listing.userSelection,\n      is_to_export: false,\n      start_row: startItem,\n      end_row: endItem,\n    });\n  }\n  private calculateTotalPersons(booking: Booking) {\n    const sumOfOccupancy = ({ adult_nbr, children_nbr, infant_nbr }: Occupancy) => {\n      return (adult_nbr ?? 0) + (children_nbr ?? 0) + (infant_nbr ?? 0);\n    };\n    return booking.rooms.reduce((prev, cur) => {\n      return sumOfOccupancy(cur.occupancy) + prev;\n    }, 0);\n  }\n  render() {\n    if (this.isLoading || this.ticket === '') {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <div class=\"p-1 main-container\">\n          <ir-listing-header propertyId={this.propertyid} p={this.p} language={this.language}></ir-listing-header>\n          <section>\n            <div class=\"card p-1 flex-fill m-0 mt-2\">\n              <table class=\"table table-striped table-bordered no-footer dataTable\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"text-center\">\n                      {locales.entries?.Lcz_Booking}#\n                    </th>\n                    <th scope=\"col\">{locales.entries?.Lcz_BookedOn}</th>\n                    <th scope=\"col\">{locales.entries?.Lcz_GuestSource}</th>\n                    <th scope=\"col\" class=\"text-left services-cell\">\n                      {locales.entries?.Lcz_Services}\n                    </th>\n                    <th scope=\"col\" class=\"in-out\">\n                      {locales.entries?.Lcz_Dates}\n                    </th>\n                    <th scope=\"col\">\n                      <span class=\"price-span\">{locales.entries?.Lcz_Amount}</span>\n\n                      <ir-tooltip\n                        customSlot\n                        message={`<span style=\"width:100%;display:block;\">${locales.entries?.Lcz_BookingBalance}</span><span>${locales.entries?.Lcz_ClickToSettle}</span>`}\n                      >\n                        <span slot=\"tooltip-trigger\" class={'m-0 btn due-btn'}>\n                          {locales.entries?.Lcz_Balance}\n                        </span>\n                      </ir-tooltip>\n                    </th>\n                    {this.showCost && (\n                      <th scope=\"col\" class=\"services-cell\">\n                        {locales.entries?.Lcz_Cost}\n                      </th>\n                    )}\n                    <th scope=\"col\">{locales.entries?.Lcz_Status}</th>\n                    <th scope=\"col\">\n                      <p class=\"sr-only\">actions</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody class=\"\">\n                  {booking_listing.bookings.length === 0 && (\n                    <tr>\n                      <td colSpan={8}>{locales.entries?.Lcz_NoDataAvailable}</td>\n                    </tr>\n                  )}\n                  {booking_listing.bookings?.map(booking => {\n                    let confirmationBG: string = this.statusColors[booking.is_requested_to_cancel ? '003' : booking.status.code];\n                    const lastManipulation = booking.ota_manipulations ? booking.ota_manipulations[booking.ota_manipulations.length - 1] : null;\n                    const totalPersons = this.calculateTotalPersons(booking);\n                    return (\n                      <tr key={booking.booking_nbr}>\n                        <td class=\"text-left\">\n                          <ir-button\n                            btn_color=\"link\"\n                            btnStyle={{ padding: '0', margin: '0' }}\n                            onClickHandler={() => (this.editBookingItem = { booking, cause: 'edit' })}\n                            text={booking.booking_nbr}\n                          ></ir-button>\n                          {booking.channel_booking_nbr && <p class=\"p-0 m-0 text-center secondary-p\">{booking.channel_booking_nbr}</p>}\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.booked_on.date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                          <p class=\"p-0 m-0 secondary-p\">{_formatTime(booking.booked_on.hour.toString(), booking.booked_on.minute.toString())}</p>\n                        </td>\n                        <td>\n                          <div class=\"h-100 d-flex align-items-center \" style={{ width: 'max-content' }}>\n                            <img class=\"mr-2 logo\" src={booking.origin.Icon} alt={booking.origin.Label} />\n                            <div class=\"text-left\">\n                              <div class=\"d-flex align-items-center\">\n                                <div class=\"booking_name m-0 p-0\">\n                                  <ir-button\n                                    btn_color=\"link\"\n                                    onClickHandler={() => (this.editBookingItem = { booking, cause: 'guest' })}\n                                    text={`${booking.guest.first_name} ${booking.guest.last_name ?? ''}`}\n                                    btnStyle={{\n                                      width: 'fit-content',\n                                      padding: '0',\n                                      margin: '0',\n                                    }}\n                                    labelStyle={{\n                                      padding: '0',\n                                    }}\n                                  ></ir-button>\n                                  {booking.guest.nbr_confirmed_bookings > 1 && !booking.agent && (\n                                    <div class=\"m-0 p-0\">\n                                      <ir-tooltip message={`${locales.entries.Lcz_BookingsNbr}`.replace('%1', booking.guest.nbr_confirmed_bookings.toString())} customSlot>\n                                        <div class=\"d-flex align-items-center my-0 p-0\" slot=\"tooltip-trigger\">\n                                          <ir-icons style={{ '--icon-size': '0.875rem' }} color=\"#FB0AAD\" name=\"heart-fill\"></ir-icons>\n                                        </div>\n                                      </ir-tooltip>\n                                    </div>\n                                  )}\n                                  {/* <button\n                                    class=\"booking_number p-0 m-0 \"\n                                    onClick={() => {\n                                      this.editBookingItem = { booking, cause: 'guest' };\n                                    }}\n                                  ></button> */}\n                                  <span class={'p-0 m-0'}>\n                                    {/* {booking.occupancy.adult_nbr} */}\n                                    {totalPersons}\n                                    {locales.entries.Lcz_P}\n                                  </span>\n                                  {getPrivateNote(booking.extras) && <span class=\"yellow_dot\"></span>}\n                                </div>\n                              </div>\n                              <div class={'d-flex align-items-center booking-label-gap'}>\n                                <p class=\"p-0 m-0 secondary-p\">{booking.origin.Label}</p>\n                                {booking.is_in_loyalty_mode && !booking.promo_key && (\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n                                    <title>{locales.entries.Lcz_LoyaltyDiscountApplied}</title>\n                                    <path\n                                      fill=\"#fc6c85\"\n                                      d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"\n                                    />\n                                  </svg>\n                                )}\n                                {booking.promo_key && (\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" height={18} width={18}>\n                                    <title>{locales.entries.Lcz_Coupon + ':' + booking.promo_key}</title>\n                                    <path\n                                      stroke-linecap=\"round\"\n                                      stroke-linejoin=\"round\"\n                                      d=\"M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h3M3.375 5.25c-.621 0-1.125.504-1.125 1.125v3.026a2.999 2.999 0 0 1 0 5.198v3.026c0 .621.504 1.125 1.125 1.125h17.25c.621 0 1.125-.504 1.125-1.125v-3.026a2.999 2.999 0 0 1 0-5.198V6.375c0-.621-.504-1.125-1.125-1.125H3.375Z\"\n                                    />\n                                  </svg>\n                                )}\n                              </div>\n                              {/* {booking.agent && <p class=\"m-0 secondary-p\">{locales.entries.Lcz_AgentCode.replace('%1', booking.agent.name)}</p>} */}\n                            </div>\n                          </div>\n                        </td>\n\n                        <td>\n                          <ul>\n                            {booking.rooms.map(room => (\n                              <li>\n                                <div class={'room-service'}>\n                                  <p class={'m-0 p-0'}>{room.roomtype.name}</p>\n                                  {room.unit &&\n                                    !isSingleUnit(room.roomtype.id) &&\n                                    ((room.unit as IUnit)?.name?.length > 4 ? (\n                                      <ir-tooltip customSlot message={(room.unit as IUnit)?.name}>\n                                        <p class={'room-name-container cursor-pointer m-0'} slot=\"tooltip-trigger\">\n                                          {(room.unit as IUnit)?.name?.substring(0, 4)}\n                                        </p>\n                                      </ir-tooltip>\n                                    ) : (\n                                      <p class={'room-name-container  m-0'}>{(room.unit as IUnit)?.name?.substring(0, 4)}</p>\n                                    ))}\n                                </div>\n                              </li>\n                            ))}\n                            {booking.extra_services && <li>{locales.entries.Lcz_ExtraServices}</li>}\n                          </ul>\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.from_date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.to_date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0\" style={{ whiteSpace: 'nowrap' }}>\n                            {formatAmount(booking.currency.symbol, booking.financial?.gross_total ?? 0)}\n                          </p>\n                          <Fragment>\n                            {['003', '004'].includes(booking.status.code)\n                              ? booking.financial.cancelation_penality_as_if_today !== 0 && (\n                                  <button\n                                    onClick={() => {\n                                      this.editBookingItem = { booking, cause: 'payment' };\n                                      this.openModal();\n                                    }}\n                                    style={{ whiteSpace: 'nowrap' }}\n                                    class=\"btn p-0 m-0 due-btn\"\n                                  >\n                                    <span>{booking.financial.cancelation_penality_as_if_today < 0 ? 'Refund' : 'Charge'} </span>\n                                    {formatAmount(booking.currency.symbol, Math.abs(booking.financial.cancelation_penality_as_if_today))}\n                                  </button>\n                                )\n                              : booking.financial.due_amount !== 0 && (\n                                  <button\n                                    onClick={() => {\n                                      this.editBookingItem = { booking, cause: 'payment' };\n                                      this.openModal();\n                                    }}\n                                    style={{ whiteSpace: 'nowrap' }}\n                                    class=\"btn p-0 m-0 due-btn\"\n                                  >\n                                    {formatAmount(booking.currency.symbol, booking.financial.due_amount)}\n                                  </button>\n                                )}\n                          </Fragment>\n                        </td>\n                        {this.showCost && (\n                          <td>\n                            {booking.financial.gross_cost !== null && booking.financial.gross_cost === 0\n                              ? '_'\n                              : formatAmount(booking.currency.symbol, booking.financial.gross_cost)}\n                          </td>\n                        )}\n\n                        <td>\n                          <p class={`m-0 badge ${confirmationBG} ct_ir_badge`}>\n                            {booking.is_requested_to_cancel ? locales?.entries?.Lcz_CancellationRequested : booking.status.description}\n                          </p>\n                          {!lastManipulation && booking.events?.length > 0 && booking.events[0].type.toLowerCase() === 'modified' && (\n                            <p class=\"mx-0 p-0 small\" style={{ marginTop: '0.25rem', marginBottom: '0' }}>\n                              Modified\n                            </p>\n                          )}\n                          {lastManipulation && (\n                            <ir-popover\n                              trigger=\"hover\"\n                              content={`Modified by ${lastManipulation.user} at ${lastManipulation.date} ${lastManipulation.hour}:${lastManipulation.minute}`}\n                            >\n                              <p class=\"mx-0 p-0 small text-danger\" style={{ marginTop: '0.25rem', marginBottom: '0' }}>\n                                <b>Modified</b>\n                              </p>\n                            </ir-popover>\n                          )}\n                        </td>\n                        <td>\n                          <div class=\"d-flex justify-content-center align-items-center\" style={{ gap: '8px' }}>\n                            <ir-button title=\"Edit booking\" variant=\"icon\" icon_name=\"edit\" onClickHandler={() => (this.editBookingItem = { booking, cause: 'edit' })}></ir-button>\n                            <ir-button\n                              title=\"Delete booking\"\n                              style={{ '--icon-button-color': '#ff4961', '--icon-button-hover-color': '#FF1635' }}\n                              variant=\"icon\"\n                              icon_name=\"trash\"\n                              onClickHandler={() => {\n                                this.editBookingItem = { booking, cause: 'delete' };\n                                this.openModal();\n                              }}\n                            ></ir-button>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              {this.totalPages > 1 && (\n                <section class={'d-flex flex-column flex-md-row align-items-center justify-content-between pagination-container'}>\n                  <p class=\"m-0 mb-1 mb-md-0\">{this.renderItemRange()}</p>\n                  <div class={'d-flex align-items-center buttons-container'}>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === 1}\n                      onClickHandler={async () => {\n                        this.currentPage = 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angles_left\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === 1}\n                      onClickHandler={async () => {\n                        this.currentPage = this.currentPage - 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angle_left\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-select\n                      selectedValue={this.currentPage.toString()}\n                      showFirstOption={false}\n                      onSelectChange={async e => {\n                        this.currentPage = +e.detail;\n                        await this.updateData();\n                      }}\n                      data={Array.from(Array(this.totalPages), (_, i) => i + 1).map(i => ({\n                        text: i.toString(),\n                        value: i.toString(),\n                      }))}\n                    ></ir-select>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === this.totalPages}\n                      onClickHandler={async () => {\n                        this.currentPage = this.currentPage + 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angle_right\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === this.totalPages}\n                      onClickHandler={async () => {\n                        this.currentPage = this.totalPages;\n                        console.log(this.currentPage);\n                        await this.updateData();\n                      }}\n                      icon_name=\"angles_right\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                  </div>\n                </section>\n              )}\n            </div>\n          </section>\n        </div>\n        {this.editBookingItem && <ir-listing-modal paymentEntries={this.paymentEntries} onModalClosed={() => (this.editBookingItem = null)}></ir-listing-modal>}\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={this.editBookingItem !== null && ['edit', 'guest'].includes(this.editBookingItem.cause)}\n          showCloseButton={false}\n          sidebarStyles={\n            this.editBookingItem?.cause === 'guest' ? { background: 'white' } : { width: this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)', background: '#F2F3F8' }\n          }\n        >\n          {this.editBookingItem?.cause === 'edit' && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              p={this.p}\n              hasPrint\n              hasReceipt\n              is_from_front_desk\n              propertyid={this.propertyid}\n              hasRoomEdit\n              hasRoomDelete\n              hasCloseButton\n              onCloseSidebar={() => (this.editBookingItem = null)}\n              bookingNumber={this.editBookingItem.booking.booking_nbr}\n              ticket={this.ticket}\n              language={this.language}\n              hasRoomAdd\n            ></ir-booking-details>\n          )}\n          {this.editBookingItem?.cause === 'guest' && (\n            <ir-guest-info\n              slot=\"sidebar-body\"\n              isInSideBar={true}\n              headerShown\n              booking_nbr={this.editBookingItem?.booking?.booking_nbr}\n              email={this.editBookingItem?.booking?.guest.email}\n              language={this.language}\n              onCloseSideBar={() => (this.editBookingItem = null)}\n            ></ir-guest-info>\n          )}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n","import calendar_data from '@/stores/calendar-data';\nimport { downloadFile } from '@/utils/utils';\nimport axios from 'axios';\nexport type CountrySalesParams = {\n  AC_ID: number;\n  WINDOW: number;\n  FROM_DATE: string;\n  TO_DATE: string;\n  BOOK_CASE: string;\n  is_export_to_excel: boolean;\n};\nexport type DailyRevenueReportParams = {\n  date: string;\n  property_id: string;\n  is_export_to_excel: boolean;\n};\nexport type MonthlyStatsParams = {\n  property_id: number;\n  from_date: string;\n  to_date: string;\n  is_export_to_excel?: boolean;\n};\nexport interface MonthlyStatsResults {\n  AverageOccupancy: number;\n  DailyStats: DailyStat[];\n  ExcelLink: null;\n  PeakDays: PeakDay[];\n  Occupancy_Difference_From_Previous_Month: number;\n  TotalUnitsBooked: number;\n  Total_Guests: number;\n}\n\nexport interface PeakDay {\n  Date: string;\n  OccupancyPercent: number;\n}\n\nexport interface DailyStat {\n  Date: string;\n  Occupancy: number;\n  Units_booked: number;\n  Rooms_Revenue: number;\n  ADR: number;\n  Total_Guests: number | undefined;\n}\nexport class PropertyService {\n  public async getExposedProperty(params: {\n    id: number | null;\n    language: string;\n    is_backend?: boolean;\n    aname?: string;\n    include_units_hk_status?: boolean;\n    include_sales_rate_plans?: boolean;\n  }) {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Property`, params);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = data.My_Result;\n      calendar_data.adultChildConstraints = results.adult_child_constraints;\n      calendar_data.allowedBookingSources = results.allowed_booking_sources;\n      calendar_data.allowed_payment_methods = results.allowed_payment_methods;\n      calendar_data.currency = results.currency;\n      calendar_data.is_vacation_rental = results.is_vacation_rental;\n      calendar_data.pickup_service = results.pickup_service;\n      calendar_data.max_nights = results.max_nights;\n      calendar_data.roomsInfo = results.roomtypes;\n      calendar_data.taxes = results.taxes;\n      calendar_data.id = results.id;\n      calendar_data.country = results.country;\n      calendar_data.name = results.name;\n      calendar_data.is_automatic_check_in_out = results.is_automatic_check_in_out;\n      calendar_data.tax_statement = results.tax_statement;\n      calendar_data.is_frontdesk_enabled = results.is_frontdesk_enabled;\n      calendar_data.is_pms_enabled = results.is_pms_enabled;\n      const spitTime = results?.time_constraints?.check_out_till?.split(':');\n      calendar_data.checkin_checkout_hours = {\n        offset: results.city.gmt_offset,\n        hour: Number(spitTime[0] || 0),\n        minute: Number(spitTime[1] || 0),\n      };\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getCountrySales(params: CountrySalesParams) {\n    const { data } = await axios.post('/Get_Country_Sales', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Country_Sales.Link_excel);\n    }\n    return data.My_Result;\n  }\n  public async getDailyRevenueReport(params: DailyRevenueReportParams) {\n    const { data } = await axios.post('/Get_Daily_Revenue_Report', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Daily_Revenue_Report.Link_excel);\n    }\n    return data.My_Result;\n  }\n  public async setExposedCleaningFrequency(params: { property_id: number; code: string }) {\n    const { data } = await axios.post('/Set_Exposed_Cleaning_Frequency', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data.My_Result;\n  }\n  public async getMonthlyStats(params: MonthlyStatsParams): Promise<MonthlyStatsResults> {\n    const { data } = await axios.post('/Get_Monthly_Stats', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Monthly_Stats.Link_excel);\n    }\n    return data.My_Result;\n  }\n}\n",":host {\n  display: block;\n}\n.daily-revenue__meta {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n.daily-revenue__table {\n  flex: 1 1 0%;\n}\n\n/*sm*/\n@media (min-width: 768px) {\n  .daily-revenue__meta {\n    flex-direction: row;\n  }\n}\n","import Token from '@/models/Token';\nimport { BookingService } from '@/services/booking.service';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyPaymentFilter, FolioPayment, GroupedFolioPayment, SidebarOpenEvent } from './types';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport { PaymentEntries } from '../ir-booking-details/types';\n\n@Component({\n  tag: 'ir-daily-revenue',\n  styleUrl: 'ir-daily-revenue.css',\n  scoped: true,\n})\nexport class IrDailyRevenue {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading: boolean;\n  @State() property_id: number;\n  @State() groupedPayment: GroupedFolioPayment;\n  @State() previousDateGroupedPayments: GroupedFolioPayment;\n  @State() isLoading: string;\n  @State() filters: DailyPaymentFilter = { date: moment().format('YYYY-MM-DD'), users: null };\n  @State() sideBarEvent: SidebarOpenEvent | null;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n  private paymentEntries: PaymentEntries;\n\n  @Event() preventPageLoad: EventEmitter<null>;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.tokenService.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('revenueOpenSidebar')\n  handleOpenSidebar(e: CustomEvent<SidebarOpenEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = e.detail;\n  }\n  @Listen('fetchNewReports')\n  handleFetchNewReports(e: CustomEvent<DailyPaymentFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...e.detail };\n    this.getPaymentReports();\n  }\n  @Listen('resetBookingEvt')\n  async handleResetBooking(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.getPaymentReports(false, true);\n  }\n\n  private handleSidebarClose = (e: CustomEvent) => {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = null;\n  };\n\n  private renderSidebarBody() {\n    if (!this.sideBarEvent) {\n      return;\n    }\n    switch (this.sideBarEvent.type) {\n      case 'booking':\n        return (\n          <ir-booking-details\n            slot=\"sidebar-body\"\n            hasPrint\n            hasReceipt\n            hasCloseButton\n            onCloseSidebar={this.handleSidebarClose}\n            is_from_front_desk\n            propertyid={this.property_id}\n            hasRoomEdit\n            hasRoomDelete\n            bookingNumber={this.sideBarEvent.payload.bookingNumber.toString()}\n            ticket={this.ticket}\n            language={this.language}\n            hasRoomAdd\n          ></ir-booking-details>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private async initializeApp() {\n    this.isPageLoading = true;\n\n    try {\n      let propertyId = this.propertyid;\n      if (!propertyId && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      this.property_id = propertyId;\n\n      const requests: Promise<any>[] = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP', '_PAY_METHOD']),\n        this.getPaymentReports(),\n        this.roomService.fetchLanguage(this.language),\n      ];\n      if (propertyId) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group, pay_method } = this.bookingService.groupEntryTablesResult(setupEntries);\n      this.paymentEntries = {\n        groups: pay_type_group,\n        methods: pay_method,\n        types: pay_type,\n      };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n  private groupPaymentsByName(payments: FolioPayment[]): GroupedFolioPayment {\n    const groupedPayment: GroupedFolioPayment = new Map();\n\n    for (const payment of payments) {\n      const key = `${payment.payTypeCode}_${payment.payMethodCode}`;\n      const p = groupedPayment.get(key) ?? [];\n      groupedPayment.set(key, [...p, payment]);\n    }\n    return new Map(\n      [...groupedPayment.entries()].sort(([a], [b]) => {\n        const aNum = Number(a);\n        const bNum = Number(b);\n        if (!isNaN(aNum) && !isNaN(bNum)) {\n          return aNum - bNum;\n        }\n        return a.localeCompare(b);\n      }),\n    );\n  }\n\n  private async getPaymentReports(isExportToExcel = false, excludeYesterday = false) {\n    try {\n      const getReportObj = (report): FolioPayment => {\n        return {\n          method: report.METHOD,\n          payTypeCode: report.PAY_TYPE_CODE,\n          payMethodCode: report.PAY_METHOD_CODE,\n          amount: report.AMOUNT,\n          date: report.DATE,\n          hour: report.HOUR,\n          minute: report.MINUTE,\n          user: report.USER,\n          currency: report.CURRENCY,\n          bookingNbr: report.BOOKING_NBR,\n          id: v4(),\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const requests = [\n        this.propertyService.getDailyRevenueReport({\n          date: this.filters.date,\n          property_id: this.property_id?.toString(),\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n      if (!isExportToExcel && !excludeYesterday) {\n        requests.push(\n          this.propertyService.getDailyRevenueReport({\n            date: moment(this.filters.date, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD'),\n            property_id: this.property_id?.toString(),\n            is_export_to_excel: isExportToExcel,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      if (!isExportToExcel) {\n        if (results[0]) {\n          this.groupedPayment = this.groupPaymentsByName(results[0]?.map(getReportObj));\n        } else {\n          this.groupedPayment = new Map();\n        }\n        if (results[1]) this.previousDateGroupedPayments = this.groupPaymentsByName(results[1]?.map(getReportObj));\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Revenue</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getPaymentReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-revenue-summary\n            previousDateGroupedPayments={this.previousDateGroupedPayments}\n            groupedPayments={this.groupedPayment}\n            paymentEntries={this.paymentEntries}\n          ></ir-revenue-summary>\n          <div class=\"daily-revenue__meta\">\n            <ir-daily-revenue-filters isLoading={this.isLoading === 'filter'} payments={this.groupedPayment}></ir-daily-revenue-filters>\n            <ir-revenue-table filters={this.filters} class={'daily-revenue__table'} paymentEntries={this.paymentEntries} payments={this.groupedPayment}></ir-revenue-table>\n          </div>\n        </section>\n        <ir-sidebar\n          sidebarStyles={{\n            width: this.sideBarEvent?.type === 'booking' ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.sideBarEvent?.type === 'booking' ? '#F2F3F8' : 'white',\n          }}\n          open={Boolean(this.sideBarEvent)}\n          showCloseButton={false}\n          onIrSidebarToggle={this.handleSidebarClose}\n        >\n          {this.renderSidebarBody()}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n}\n:host * {\n  box-sizing: border-box;\n}\n\n@media only screen and (min-width: 900px) {\n  /* td {\n    min-width: 140px !important;\n    width: max-content !important;\n  } */\n}\n@media only screen and (max-width: 900px) {\n  /* td {\n    min-width: 100px !important;\n  } */\n  /* .table-container {\n    width: max-content !important;\n  } */\n}\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n.tasks-view {\n  display: flex;\n  flex-direction: column;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .tasks-view {\n    flex-direction: row;\n  }\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { CleanTaskEvent, IPendingActions } from '@/models/housekeeping';\nimport Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { TaskFilters } from './types';\nimport { downloadFile } from '@/utils/utils';\nimport { updateTasks as updateTasksStore, updateSelectedTasks, clearSelectedTasks, hkTasksStore, setLoading } from '@/stores/hk-tasks.store';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  tag: 'ir-hk-tasks',\n  styleUrl: 'ir-hk-tasks.css',\n  scoped: true,\n})\nexport class IrHkTasks {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() isCleaningLoading = false;\n  @State() selectedDuration = '';\n  @State() selectedHouseKeeper = '0';\n  @State() selectedRoom: IPendingActions | null = null;\n  @State() archiveOpened = false;\n  @State() property_id: number;\n  @State() isSidebarOpen: boolean;\n  @State() isApplyFiltersLoading: boolean;\n  @State() filters: TaskFilters;\n  @State() modalCauses: CleanTaskEvent & { cause: 'skip' | 'clean' };\n\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\n\n  private hkNameCache: Record<number, string> = {};\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private token = new Token();\n  private table_sorting: Map<string, 'ASC' | 'DESC'> = new Map();\n  private modal: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  @Listen('closeSideBar')\n  handleCloseSidebar(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.isSidebarOpen = false;\n  }\n  @Listen('sortingChanged')\n  handleSortingChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { field, direction } = e.detail;\n    console.log(e.detail);\n    if (field === 'date') {\n      return;\n    }\n    this.table_sorting.set(field, direction);\n  }\n  @Listen('skipSelectedTask')\n  handleSkipSelectedTask(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { task: e.detail, cause: 'skip' };\n    this.modal?.openModal();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      setLoading(true);\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.houseKeepingService.getExposedHKSetup(this.property_id), this.roomService.fetchLanguage(this.language)];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      const tasksResult = await this.houseKeepingService.getHkTasks({\n        property_id: this.property_id,\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: moment().format('YYYY-MM-DD'),\n        housekeepers: [],\n        cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n        dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n        highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n      });\n\n      // updateTaskList();\n      if (tasksResult?.tasks) {\n        this.updateTasks(tasksResult.tasks);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      setLoading(false);\n    }\n  }\n\n  private buildHousekeeperNameCache() {\n    this.hkNameCache = {};\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\n      if (hk.id != null && hk.name != null) {\n        this.hkNameCache[hk.id] = hk.name;\n      }\n    });\n  }\n\n  private updateTasks(tasks: any[]) {\n    this.buildHousekeeperNameCache();\n    updateTasksStore(\n      tasks.map(t => ({\n        ...t,\n        id: v4(),\n        housekeeper: (() => {\n          const name = this.hkNameCache[t.hkm_id];\n          if (name) {\n            return name;\n          }\n          const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\n          this.hkNameCache[t.hkm_id] = hkName;\n          return hkName;\n        })(),\n      })),\n    );\n  }\n  @Listen('headerButtonPress')\n  async handleHeaderButtonPress(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { name } = e.detail;\n    switch (name) {\n      case 'cleaned':\n      case 'clean-inspect':\n        this.modal?.openModal();\n        this.modalCauses = {\n          task: null,\n          cause: 'clean',\n          status: name === 'clean-inspect' ? '004' : '001',\n        };\n        break;\n      case 'export':\n        const sortingArray: { key: string; value: string }[] = Array.from(this.table_sorting.entries()).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        console.log(sortingArray);\n        const { url } = await this.fetchTasksWithFilters(true);\n        downloadFile(url);\n        break;\n      case 'archive':\n        this.isSidebarOpen = true;\n        break;\n    }\n  }\n  @Listen('cleanSelectedTask')\n  handleSelectedTaskCleaningEvent(e: CustomEvent<CleanTaskEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { ...e.detail, cause: 'clean' };\n    this.modal?.openModal();\n  }\n\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (hkTasksStore.selectedTasks.length === 0) {\n        return;\n      }\n      this.isCleaningLoading = true;\n      if (this.modalCauses?.cause === 'skip') {\n        const { booking_nbr, date, unit } = this.modalCauses.task;\n        await this.houseKeepingService.editHkSkip({\n          BOOK_NBR: booking_nbr,\n          DATE: date,\n          COMMENT: '',\n          HK_SKIP_ID: -1,\n          HK_SKIP_REASON_CODE: '001',\n          PR_ID: unit.id,\n        });\n      } else {\n        await this.houseKeepingService.executeHKAction({\n          actions: hkTasksStore.selectedTasks.map(t => ({\n            description: 'Cleaned',\n            hkm_id: t.hkm_id === 0 ? null : t.hkm_id,\n            unit_id: t.unit.id,\n            booking_nbr: t.booking_nbr,\n            status: this.modalCauses?.status ?? '001',\n          })),\n        });\n      }\n      await this.fetchTasksWithFilters();\n    } finally {\n      clearSelectedTasks();\n      if (this.modalCauses) {\n        this.modalCauses = null;\n      }\n      this.isCleaningLoading = false;\n      // this.clearSelectedTasks.emit();\n      this.modal.closeModal();\n    }\n  }\n\n  private async applyFilters(e: CustomEvent) {\n    try {\n      this.isApplyFiltersLoading = true;\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.filters = { ...e.detail };\n      await this.fetchTasksWithFilters();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isApplyFiltersLoading = false;\n    }\n  }\n\n  private async fetchTasksWithFilters(export_to_excel: boolean = false) {\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\n\n    const { tasks, url } = await this.houseKeepingService.getHkTasks({\n      housekeepers,\n      cleaning_frequency: cleaning_frequencies?.code,\n      dusty_window: dusty_units?.code,\n      highlight_window: highlight_check_ins?.code,\n      property_id: this.property_id,\n      from_date: moment().format('YYYY-MM-DD'),\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\n      is_export_to_excel: export_to_excel,\n    });\n    console.log(tasks);\n    if (tasks) {\n      this.updateTasks(tasks);\n    }\n    return { tasks, url };\n  }\n\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host data-testid=\"hk_tasks_base\">\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-1 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <h3>Housekeeping Tasks</h3>\n          <div class=\"tasks-view \" style={{ gap: '1rem' }}>\n            <ir-tasks-filters\n              isLoading={this.isApplyFiltersLoading}\n              onApplyFilters={e => {\n                this.applyFilters(e);\n              }}\n            ></ir-tasks-filters>\n            <div class=\"d-flex w-100 flex-column\" style={{ gap: '1rem' }}>\n              <ir-tasks-table\n                onRowSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  updateSelectedTasks(e.detail);\n                }}\n                class=\"flex-grow-1 w-100\"\n              ></ir-tasks-table>\n              {/* <ir-tasks-table-pagination></ir-tasks-table-pagination> */}\n            </div>\n          </div>\n        </section>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isCleaningLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          onCancelModal={() => {\n            if (this.modalCauses) {\n              clearSelectedTasks();\n              this.modalCauses = null;\n            }\n          }}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={\n            this.modalCauses\n              ? this.modalCauses?.cause === 'clean'\n                ? this.modalCauses.task\n                  ? `Update ${this.modalCauses?.task?.unit?.name} to Clean`\n                  : 'Update selected unit(s) to Clean'\n                : 'Skip cleaning and reschedule for tomorrow.'\n              : 'Update selected unit(s) to Clean'\n          }\n        ></ir-modal>\n        <ir-sidebar\n          open={this.isSidebarOpen}\n          id=\"editGuestInfo\"\n          onIrSidebarToggle={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.isSidebarOpen = false;\n          }}\n          // sidebarStyles={{\n          //   width: '80vw',\n          // }}\n          showCloseButton={false}\n        >\n          {this.isSidebarOpen && <ir-hk-archive ticket={this.token.getToken()} propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\n        </ir-sidebar>\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\n          </ir-title> */}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { PropertyService } from '@/services/property.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n@Component({\n  tag: 'ir-housekeeping',\n  styleUrl: 'ir-housekeeping.css',\n  scoped: true,\n})\nexport class IrHousekeeping {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n\n  @Event() toast: EventEmitter<IToast>;\n\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private propertyService = new PropertyService();\n  private token = new Token();\n  modal: HTMLIrModalElement;\n  selectedCleaningFrequency: any;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_sales_rate_plans: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\n      const requests: Array<Promise<any>> = [];\n      if (calendar_data.housekeeping_enabled) {\n        requests.push(this.houseKeepingService.getExposedHKSetup(propertyId));\n      }\n      requests.push(this.roomService.fetchLanguage(this.language, ['_HK_FRONT', '_PMS_FRONT']));\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private async saveAutomaticCheckInCheckout(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.roomService.SetAutomaticCheckInOut({\n        property_id: housekeeping_store.default_properties.property_id,\n        flag: e.detail === 'auto',\n      });\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async saveCleaningFrequency(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.propertyService.setExposedCleaningFrequency({\n        property_id: housekeeping_store.default_properties.property_id,\n        code: this.selectedCleaningFrequency,\n      });\n      calendar_data.cleaning_frequency = { code: this.selectedCleaningFrequency, description: '' };\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n      this.modal.closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    console.log(calendar_data.cleaning_frequency);\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <section class=\"p-1\">\n          <h3 class=\"mb-2\">{locales.entries.Lcz_HouseKeepingAndCheckInSetup}</h3>\n          <div class=\"card p-1\">\n            <ir-title borderShown label=\"Operations Settings\"></ir-title>\n            <div class={'d-flex align-items-center mb-1'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CheckInOutGuestsAutomatically}</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\n                data={[\n                  { text: locales.entries.Lcz_YesAsPerPropertyPolicy, value: 'auto' },\n                  { text: locales.entries.Lcz_NoIWillDoItManually, value: 'manual' },\n                ]}\n              ></ir-select>\n            </div>\n            <div class={'d-flex align-items-center'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CleaningFrequency}:</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={this.selectedCleaningFrequency}\n                onSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.selectedCleaningFrequency = e.detail;\n                  this.modal.openModal();\n                }}\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n              ></ir-select>\n            </div>\n          </div>\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\n          {calendar_data.housekeeping_enabled && <ir-hk-team class=\"mb-1\"></ir-hk-team>}\n          <ir-modal\n            autoClose={false}\n            ref={el => (this.modal = el)}\n            isLoading={isRequestPending('/Set_Exposed_Cleaning_Frequency')}\n            onConfirmModal={this.saveCleaningFrequency.bind(this)}\n            iconAvailable={true}\n            onCancelModal={() => {\n              this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n            }}\n            icon=\"ft-alert-triangle danger h1\"\n            leftBtnText={locales.entries.Lcz_Cancel}\n            rightBtnText={locales.entries.Lcz_Confirm}\n            leftBtnColor=\"secondary\"\n            rightBtnColor={'primary'}\n            modalTitle={locales.entries.Lcz_Confirmation}\n            modalBody={'This action will reschedule all cleaning tasks. Do you want to continue?'}\n          ></ir-modal>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyReport, DailyReportFilter } from './types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { RoomService } from '@/services/room.service';\nimport { DailyStat, MonthlyStatsResults, PropertyService } from '@/services/property.service';\n\n@Component({\n  tag: 'ir-monthly-bookings-report',\n  styleUrl: 'ir-monthly-bookings-report.css',\n  scoped: true,\n})\nexport class IrMonthlyBookingsReport {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading = true;\n  @State() isLoading: 'export' | 'filter' | null = null;\n\n  @State() reports: DailyReport[] = [];\n  @State() filters: DailyReportFilter;\n  @State() property_id: number;\n  @State() stats: Omit<MonthlyStatsResults, 'DailyStats'>;\n\n  private baseFilters: DailyReportFilter;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  componentWillLoad() {\n    this.baseFilters = {\n      date: {\n        description: moment().format('MMMM YYYY'),\n        firstOfMonth: moment().startOf('month').format('YYYY-MM-DD'),\n        lastOfMonth: moment().endOf('month').format('YYYY-MM-DD'),\n      },\n      include_previous_year: false,\n    };\n    this.filters = this.baseFilters;\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Listen('applyFilters')\n  handleApplyFiltersChange(e: CustomEvent<DailyReportFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = e.detail;\n    this.getReports();\n  }\n\n  private async init() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.roomService.fetchLanguage(this.language), this.getReports()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getReports(isExportToExcel = false) {\n    try {\n      const getReportObj = (report: DailyStat): DailyReport => {\n        return {\n          day: report.Date,\n          units_booked: report.Units_booked,\n          occupancy_percent: report.Occupancy,\n          adr: report.ADR,\n          rooms_revenue: report.Rooms_Revenue,\n          total_guests: report?.Total_Guests,\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const { date, include_previous_year } = this.filters;\n\n      const requests = [\n        this.propertyService.getMonthlyStats({\n          from_date: date.firstOfMonth,\n          to_date: date.lastOfMonth,\n          property_id: this.property_id,\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n\n      if (include_previous_year) {\n        requests.push(\n          this.propertyService.getMonthlyStats({\n            from_date: moment(date.firstOfMonth, 'YYYY-MM-DD').add(-1, 'year').format('YYYY-MM-DD'),\n            to_date: moment(date.lastOfMonth, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'),\n            property_id: this.property_id,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      const currentReports = results[0];\n      let enrichedReports: DailyReport[] = [];\n      const { DailyStats, ...rest } = currentReports;\n\n      this.stats = { ...rest };\n\n      if (include_previous_year && results[isExportToExcel ? 0 : 1]) {\n        const previousYearReports = results[isExportToExcel ? 0 : 1];\n        let formattedReports = previousYearReports.DailyStats.map(getReportObj);\n        enrichedReports = DailyStats.map(getReportObj).map(current => {\n          const previous = formattedReports.find(prev => prev.day === moment(current.day, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'));\n          return {\n            ...current,\n            last_year: previous ?? null,\n          };\n        });\n      } else {\n        enrichedReports = DailyStats.map(getReportObj);\n      }\n      this.reports = [...enrichedReports];\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Occupancy</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <section>\n            <div class=\"d-flex flex-column flex-md-row w-100\" style={{ gap: '1rem', alignItems: 'stretch' }}>\n              <ir-stats-card\n                icon={this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? 'arrow-trend-down' : 'arrow-trend-up'}\n                cardTitle=\"Average Occupancy\"\n                value={this.stats.AverageOccupancy ? this.stats?.AverageOccupancy.toFixed(2) + '%' : null}\n                subtitle={`${this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? '' : '+'}${this.stats?.Occupancy_Difference_From_Previous_Month.toFixed(\n                  2,\n                )}% from last month`}\n              ></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"hotel\"\n                cardTitle=\"Total Units\"\n                value={this.stats?.TotalUnitsBooked ? this.stats?.TotalUnitsBooked.toString() : null}\n                subtitle=\"Booked\"\n              ></ir-stats-card>\n\n              <ir-stats-card icon=\"user_group\" cardTitle=\"Total Guests\" value={this.stats?.Total_Guests?.toString()} subtitle=\"Stayed\"></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"calendar\"\n                cardTitle=\"Peak Days\"\n                value={this.stats?.PeakDays.length === 0 ? null : this.stats?.PeakDays?.map(pd => moment(pd.Date, 'YYYY-MM-DD').format('D').concat('th')).join(' - ')}\n                subtitle={`${Math.max(...(this.stats.PeakDays?.map(pd => pd.OccupancyPercent) || []))}% occupancy`}\n              ></ir-stats-card>\n            </div>\n            <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n              <ir-monthly-bookings-report-filter isLoading={this.isLoading === 'filter'} class=\"filters-card\" baseFilters={this.baseFilters}></ir-monthly-bookings-report-filter>\n              <ir-monthly-bookings-report-table reports={this.reports}></ir-monthly-bookings-report-table>\n            </div>\n          </section>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { BaseSalesRecord, CountrySalesFilter, MappedCountries, SalesRecord } from './types';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-sales-by-country',\n  styleUrl: 'ir-sales-by-country.css',\n  scoped: true,\n})\nexport class IrSalesByCountry {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n  @State() property_id: number;\n  @State() salesData: SalesRecord[];\n  @State() salesFilters: CountrySalesFilter;\n  @State() countries: MappedCountries = new Map();\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n\n  private baseFilters = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.salesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  private async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.bookingService.getCountries(this.language), this.roomService.fetchLanguage(this.language), this.getCountrySales()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [countries] = await Promise.all(requests);\n      const mappedCountries = new Map();\n      (countries as ICountry[]).map(country => {\n        mappedCountries.set(country.id, {\n          flag: country.flag,\n          name: country.name,\n        });\n      });\n      this.countries = mappedCountries;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getCountrySales(isExportToExcel = false) {\n    const formatSalesData = (data): Omit<BaseSalesRecord, 'id'> => {\n      return {\n        country: data.COUNTRY,\n        country_id: data.COUNTRY_ID,\n        nights: data.NIGHTS,\n        percentage: data.PCT,\n        revenue: data.REVENUE,\n        number_of_guests: data.Total_Guests,\n      };\n    };\n    try {\n      const { include_previous_year, ...filterParams } = this.salesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const currentSales = await this.propertyService.getCountrySales({\n        AC_ID: this.property_id,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n\n      let enrichedSales: SalesRecord[] = [];\n\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getCountrySales({\n          AC_ID: this.property_id,\n          is_export_to_excel: false,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.COUNTRY.toLowerCase() === current.COUNTRY.toLowerCase());\n          return {\n            id: v4(),\n            ...formatSalesData(current),\n            last_year: previous ? formatSalesData(previous) : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          id: v4(),\n          ...formatSalesData(record),\n          last_year: null,\n        }));\n      }\n\n      // this.salesData = enrichedSales.sort((a, b) => {\n      //   if (a.country_id === 0) return -1;\n      //   if (b.country_id === 0) return 1;\n      //   return 0;\n      // });\n      this.salesData = [...enrichedSales];\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Country</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getCountrySales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-sales-by-country-summary salesReports={this.salesData}></ir-sales-by-country-summary>\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.salesFilters = e.detail;\n                this.getCountrySales();\n              }}\n              class=\"filters-card\"\n              baseFilters={this.baseFilters}\n            ></ir-sales-filters>\n            <ir-sales-table mappedCountries={this.countries} class=\"card mb-0\" records={this.salesData}></ir-sales-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}