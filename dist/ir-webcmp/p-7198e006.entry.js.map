{"version":3,"names":["iglBookingEventCss","IglBookingEventStyle0","IglBookingEvent","constructor","hostRef","this","is_vacation_rental","allBookingEvents","renderElement","isShrinking","dayWidth","eventSpace","vertSpace","showInfoPopup","bubbleInfoTopSide","isStretch","eventsService","EventsService","bookingService","BookingService","resizeSide","isDragging","animationFrameId","handleMouseMoveBind","handleMouseMove","bind","handleMouseUpBind","handleMouseUp","handleClickOutsideBind","handleClickOutside","findRoomType","roomId","roomType","bookingEvent","roomsInfo","filter","room","physicalrooms","some","r","id","length","componentWillLoad","window","addEventListener","fetchAndAssignBookingData","console","log","BOOKING_NUMBER","validStatuses","includes","STATUS","data","getExposedBooking","filteredRooms","rooms","ID","Error","transformedBooking","transformNewBooking","TO_DATE","FROM_DATE","NO_OF_DAYS","NAME","IDENTIFIER","origin","TOTAL_PRICE","PR_ID","POOL","NOTES","is_direct","BALANCE","channel_booking_nbr","otherBookingData","__rest","Object","assign","booking","DEPARTURE_TIME","PHONE","PHONE_PREFIX","PRIVATE_NOTE","updateBookingEvent","emit","showEventInfo","error","message","componentDidLoad","isNewEvent","hideBubble","setTimeout","async","STATUS_CODE","renderAgain","disconnectedCallback","removeEventListener","cancelAnimationFrame","event","clickedElement","target","element","contains","hideBubbleInfoPopup","detail","currentInfoBubbleId","getBookingId","key","moveBookingToHandler","bookingId","moveToDay","toRoomId","fromRoomId","isTouchStart","moveDifferenceX","moveDifferenceY","isBlockUnit","requestAnimationFrame","resetBookingToInitialPosition","pool","to_date","from_date","previousToDate","moment","add","format","Number","isSame","_a","calendar_dates","disabled_cells","get","disabled","_b","_c","reset","checkIfSlotOccupied","reallocateEvent","catch","description","status","getModalDescription","hideConfirmButton","oldFromDate","defaultDates","oldToDate","diffDays","calculateDaysBetweenDates","shrinkingDirection","fromDate","toDate","isAfter","isBefore","newToDate","subtract","warn","showDialog","reason","title","validateDates","base_date","cursor","counter","locales","entries","Lcz_ThisUnitIsNotAvailable","payload","bookingNumber","identifier","showRoomNightsDialog","toast","position","type","Lcz_OTA_Modification_Alter","initialRT","targetRT","Lcz_AreYouSureWantToMoveAnotherUnit","Lcz_CannotChangeCHBookings","toString","Lcz_ConfrmModiication","Lcz_SameRatesWillBeKept","style","left","initialLeft","width","initialWidth","finalWidth","top","dragInitPos","handleRevertBooking","fromTime","toTime","isOccupied","eventFromTime","eventToTime","isSameOrAfter","getUniqueId","Date","getTime","isSplitBooking","SPLIT_BOOKING","isHighlightEventType","getEventType","getBookingStatus","getBookedBy","getBookedRoomId","getEventStartingDate","getEventEndingDate","event_type","getEventLegend","legendData","statusId","orderRide","color","getLegendOfStatus","aStatusId","getNoteNode","INTERNAL_NOTE","getBalanceNode","setStayDays","aStayDays","getStayDays","getPosition","startingDate","startingCellClass","getDate","getMonth","getFullYear","bodyContainer","document","querySelector","startingCell","pos","height","getBoundingClientRect","bodyContainerRect","boundingRect","getNumber","aData","parseFloat","startDragging","side","preventDefault","stopPropagation","stopImmediatePropagation","initialX","clientX","touches","initialY","clientY","elementRect","offsetX","offsetY","x","y","dragEndPos","dragOverEventData","offsetWidth","offsetLeft","currentX","distanceX","currentY","distanceY","baseCondition","newWidth","Math","min","max","newLeft","abs","nbOfDays","numberOfDays","round","initialStayDays","isNaN","replace","offset","updateData","updateEventData","calculateHoverPosition","barRect","barWidth","barLeft","screenWidth","innerWidth","hoverLeft","transform","renderEventBookingNumber","showInfo","midPoint","hideBubbleInfo","render","legend","noteNode","balanceNode","h","Host","class","clsName","backgroundColor","onTouchStart","onMouseDown","Fragment","countries","currency","bubbleInfoTop","ReloadInterceptor","options","isActive","handleBeforeUnload","e","onIntercept","returnValue","autoActivate","activate","capture","deactivate","iglBulkBlockCss","IglBulkBlockStyle0","sheetCss","IglBulkBlockStyle1","IglBulkBlock","maxDatesLength","selectedRoomTypes","Map","selectedUnit","blockState","dates","from","to","dateRefs","minDate","datesSchema","z","array","object","any","refine","val","isMoment","reloadInterceptor","sidebar","addBlockDates","errors","isLoading","periods","parse","unitSections","scrollIntoView","behavior","block","blockAvailabilityForBrackets","unit_id","block_status_code","brackets","map","p","unBlockUnitByPeriod","Lcz_RequestSubmittedSuccessfully","closeModal","ZodError","datesSections","preventClose","handleDateChange","index","date","i","rowFrom","isSameOrBefore","openDatePicker","nextFrom","findIndex","d","addDateRow","last_dates","onSubmit","gap","showFirstOption","selectedValue","text","value","onSelectChange","calendar_data","Lcz_PlzSelectOneListing","Lcz_PlzSelectOneUnit","ref","el","name","j","row_style","checked","onCheckChange","roomtype_id","label","Lcz_From","Lcz_ToExclusive","variant","icon_name","onClickHandler","fromDateMinDate","clone","toDateMinDate","_e","_d","forceDestroyOnUpdate","_f","emitEmptyDate","String","onDateChanged","evt","start","onDatePickerFocus","slot","_g","maxDate","undefined","_","Lcz_Cancel","btn_color","Lcz_Confirm","btn_type","iglBulkOperationsCss","IglBulkOperationsStyle0","IglBulkOperationsStyle1","IglBulkOperations","tabs","tabsEl","setProperty","titleEl","onCloseSideBar","displayContext","onTabChanged","selectedTab","property_id","iglBulkStopSaleCss","IglBulkStopSaleStyle0","IglBulkStopSaleStyle1","IglBulkStopSale","selectedWeekdays","Set","Array","fill","getDayIndex","dateStr","day","generatePeriodsToModify","period","current","lastDay","nextDay","has","selectedRoom","push","room_type_id","night","updateCalendarCells","payloads","prevDisabledCells","roomsInfoById","rt","dayIndexByValue","days","rateByRoomTypeAndDate","restriction","restrictions","dayIndex","rateKey","rp","rate","find","set","haveAvailability","exposed_inventory","rts","is_closed","size","weekdaysSections","periods_to_modify","isAllOpen","every","result","isAllClosed","setExposedRestrictionPerRoomType","f","Promise","all","firstOption","Lcz_Select","Lcz_Open","Lcz_StopSale","choice","rest","entry","weekdays","onWeekdayChange","Lcz_Save","iglCalBodyCss","IglCalBodyStyle0","IglCalBody","dragOverElement","selectedRooms","currentDate","housekeepingService","HouseKeepingService","bookingMap","interactiveTitle","dayRateMap","setHours","getBookingMap","getBookingData","forEach","updateDisabledCellsCache","handleCalendarDataChange","dragOverHighlightElementHandler","gotoRoom","category","getRoomCategoryByRoomId","expanded","toggleCategory","scrollToRoom","addToBeAssignedEvents","addBookingDatas","closeWindow","ind","ev","splice","scrollPageToRoom","refClass","calendarData","roomCategory","getCategoryRooms","getRoomId","getCategoryName","getCategoryId","getTotalPhysicalRooms","getRoomName","roomInfo","getRoomById","physicalRooms","physical_room","bookingEvents","addBookingDatasEvent","getSelectedCellRefName","selectedDay","getSplitBookingEvents","newEvent","addNewEvent","keys","startDate","endDate","dateDifference","EMAIL","convertBooking","REFERENCE_TYPE","getTwoDigitNumStr","RELEASE_AFTER_HOURS","ENTRY_DATE","ADULTS_COUNT","COUNTRY","RATE","RATE_PLAN","ARRIVAL_TIME","TITLE","Lcz_NewBookingFor","CATEGORY","defaultDateRange","fromDateStr","toDateStr","editable","popupTitle","BLOCK_DATES_TITLE","Lcz_BlockDatesFor","getDateStr","toISOString","formattedLegendData","splitBookingEvents","num","locale","toLocaleString","month","removeNewEvent","events","clickCell","isScrollViewDragging","refKey","hasOwnProperty","disabledCount","dateKey","isCellDisabled","showNewBookingPopup","bookings","today","startOf","compareTime","createDateWithOffsetAndHour","checkin_checkout_hours","hour","getGeneralCategoryDayColumns","addClass","isCategory","dayInfo","highlightedDate","getGeneralRoomDayColumns","roomName","prevDate","isDisabled","isSelected","isCurrentDate","cleaningDates","cleaningTasks","shouldBeCleaned","cleaning_frequency","code","onClick","role","Boolean","getRoomCategoryRow","is_active","popoverTitle","xmlns","viewBox","getRoomsByCategory","haveSingleRooms","housekeeping_enabled","hkModal","openModal","onMouseEnter","onMouseLeave","removeProperty","hk_status","hkStatus","display","getRoomRows","confirmHousekeepingUpdate","setExposedUnitHKStatus","propertyId","unit","executeHKAction","actions","hkm_id","housekeeper","booking_nbr","RATE_TYPE","language","leftBtnText","middleBtnText","renderModalMiddleButtonText","middleBtnActive","rightBtnText","renderModalRightButtonText","modalBody","renderModalBody","onConfirmModal","onMiddleModal","autoClose","isMiddleButtonLoading","onCancelModal","clear","categoryIndex","cellKey","getCellKey","is_available_to_book","iglCalFooterCss","IglCalFooterStyle0","IglCalFooter","handleOptionEvent","optionEvent","Lcz_Legend","dayDisplayName","iglCalHeaderCss","IglCalHeaderStyle0","IglCalHeader","unassignedRoomsNumber","roomsList","toBeAssignedService","ToBeAssignedService","initializeRoomsList","handleUnAssignedDatesChange","newValue","fetchAndAssignUnassignedRooms","handleCalendarDataChanged","concat","assignRoomsToDate","unassignedDates","dt","selectedDate","getUnassignedRooms","propertyid","dateToFormattedString","res","newEndDate","renderView","handleReduceAvailableUnitEvent","showToBeAssigned","gotoToBeAssignedDate","handleDateSelect","handleClearSearch","handleFilterRooms","inputElement","trim","toLowerCase","handleScrollToRoom","gotoRoomEvent","getStringDateFormat","getNewBookingModel","setDate","Lcz_NewBooking","editabled","colorVariants","secondary","Lcz_UnassignedUnitsTooltip","btn_styles","visibleBackgroundOnHover","Lcz_Navigate","dateRef","Lcz_Today","Lcz_CreateNewBooking","Lcz_StopOpenSale","placeholder","Lcz_FindUnit","onOptionChange","monthsInfo","monthInfo","daysCount","monthName","unassigned_units_nbr","occupancy","iglLegendsCss","IglLegendsStyle0","IglLegends","legendInfo","design","Lcz_MonthAndYear","Lcz_UnassignedUnits","Lcz_Date","Lcz_Occupancy","Lcz_TotalAvailability","iglTbaCategoryViewCss","IglTbaCategoryViewStyle0","IglTbaCategoryView","categoriesData","handleAssignRoomEvent","opt","eventDatas","eventData","assignUnitEvent","RT_ID","categoryId","assignEvent","getEventView","eventIndex","onAssignRoomEvent","iglToBeAssignedCss","IglToBeAssignedStyle0","IglToBeAssigned","showDatesList","orderedDatesList","noScroll","isGotoToBeAssignedDate","reArrangeData","loadingMessage","Lcz_FetchingUnAssignedUnits","handleUnassignedDatesToBeAssignedChange","setMinutes","setSeconds","sort","a","b","parseInt","showForDate","handleAssignUnit","categories","isArray","updateCategories","categorisedRooms","roomIds","getUnassignedDates","firstKey","gotoDate","handleToBeAssignedDate","showBookingPopup","dateStamp","withLoading","showUnassignedDate","addToBeAssignedEvent","getDay","dayOfWeek","getLocalizedDayOfWeek","weekday","toLocaleDateString","highlightToBeAssignedBookingEvent","getToBeAssignedEntities","getCategoryView","onAssignUnitEvent","Lcz_Assignments","Lcz_AllBookingsAreAssigned","ordDate","Lcz_AllAssignForThisDay","irInteractiveTitleCss","IrInteractiveTitleStyle0","IrInteractiveTitle","irPopoverLeft","cropSize","lastRenderedTitle","initializePopoverIfNeeded","titleContainer","popoverInstance","disposePopover","tempSpan","createElement","visibility","whiteSpace","textContent","body","appendChild","textWidth","removeChild","containerWidth","clientWidth","iconWidth","willOverflow","$","popover","trigger","content","placement","html","sanitize","delay","show","hide","titleContainerRef","shouldCrop","displayTitle","slice","overflow","textOverflow","alignItems","flexShrink","minWidth","broomTooltip","irRoomNightsCss","IrRoomNightsStyle0","IrRoomNightsStyle1","IrRoomNights","rates","initialLoading","inventory","isEndDateBeforeFromDate","defaultTotalNights","isInputFocused","init","isButtonDisabled","amount","fetchBookingAvailability","rateplan","newDatesArr","getDaysArray","cost","handleInput","inputValue","rate_plan_id","bookingAvailability","getBookingAvailability","adultChildCount","adult","selected_variation","adult_nbr","child","child_nbr","room_type_ids","roomtype","rate_plan_ids","rate_plan","rateplans","variations","variation","discounted_gross_amount","renderInputField","currency_symbol","onTextChange","renderReadOnlyField","toFixed","renderRateFields","renderDates","symbol","convertDatePrice","handleRoomConfirmation","oldRooms","selectedRoomIndex","assign_units","check_in","is_pms","pickup_info","extra_services","remark","property","source","arrival","guest","doReservation","closeRoomNightsDialog","Lcz_AddingRoomNightsTo","Lcz_Booking","formatDate","is_non_refundable","Lcz_NonRefundable","Lcz_NoAvailabilityForAdditionalNights","custom_text","btn_disabled","irTabsCss","IrTabsStyle0","IrTabs","ariaLabel","remSize","fontSize","getComputedStyle","documentElement","tab","t","initialTab","selectTab","updateActiveIndicator","parentLeft","activeIndicator","_selectedTab","tabChanged","handleKeyDown","currentTab","currentIndex","nextIndex","nextTab","tabButton","focus","tabindex","onKeyDown"],"sources":["src/components/igloo-calendar/igl-booking-event/igl-booking-event.css?tag=igl-booking-event&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event/igl-booking-event.tsx","src/utils/ReloadInterceptor.ts","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-block/igl-bulk-block.css?tag=igl-bulk-block&encapsulation=scoped","src/common/sheet.css?tag=igl-bulk-block&encapsulation=scoped","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-block/igl-bulk-block.tsx","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-operations.css?tag=igl-bulk-operations&encapsulation=scoped","src/common/sheet.css?tag=igl-bulk-operations&encapsulation=scoped","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-operations.tsx","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-stop-sale/igl-bulk-stop-sale.css?tag=igl-bulk-stop-sale&encapsulation=scoped","src/common/sheet.css?tag=igl-bulk-stop-sale&encapsulation=scoped","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-stop-sale/igl-bulk-stop-sale.tsx","src/components/igloo-calendar/igl-cal-body/igl-cal-body.css?tag=igl-cal-body&encapsulation=scoped","src/components/igloo-calendar/igl-cal-body/igl-cal-body.tsx","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.css?tag=igl-cal-footer&encapsulation=scoped","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.tsx","src/components/igloo-calendar/igl-cal-header/igl-cal-header.css?tag=igl-cal-header&encapsulation=scoped","src/components/igloo-calendar/igl-cal-header/igl-cal-header.tsx","src/components/igloo-calendar/igl-legends/igl-legends.css?tag=igl-legends&encapsulation=scoped","src/components/igloo-calendar/igl-legends/igl-legends.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.css?tag=igl-tba-category-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.css?tag=igl-to-be-assigned&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.tsx","src/components/ui/ir-interactive-title/ir-interactive-title.css?tag=ir-interactive-title&encapsulation=scoped","src/components/ui/ir-interactive-title/ir-interactive-title.tsx","src/components/igloo-calendar/ir-room-nights/ir-room-nights.css?tag=ir-room-nights&encapsulation=scoped","src/common/sheet.css?tag=ir-room-nights&encapsulation=scoped","src/components/igloo-calendar/ir-room-nights/ir-room-nights.tsx","src/components/ui/ir-tabs/ir-tabs.css?tag=ir-tabs&encapsulation=scoped","src/components/ui/ir-tabs/ir-tabs.tsx"],"sourcesContent":[":host {\n  display: block;\n  position: absolute;\n  --ota-bar-width: 2px;\n}\n\n.bookingEventBase {\n  position: absolute;\n  background-color: rgb(49, 190, 241);\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  transform: skewX(-22deg);\n}\n\n.bookingEventBase.skewedLeft::before {\n  content: '';\n  position: absolute;\n  top: 0px;\n  bottom: 0;\n  left: -4px;\n  width: 50%;\n  height: 100%;\n  background-color: var(--ir-event-bg);\n  transform-origin: right;\n  transform: skewX(22deg);\n  border-radius: 4px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.bookingEventBase.skewedRight::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: -4px;\n  width: 50%;\n  height: 100%;\n  background-color: var(--ir-event-bg);\n  transform-origin: left;\n  transform: skewX(22deg);\n  border-radius: 4px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.bookingEventBase.border.skewedLeft::before {\n  border: var(--ota-bar-width) solid #424242;\n  border-right: 0;\n  border-left: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  top: calc(var(--ota-bar-width) * -1);\n  height: 20px;\n  left: -4px;\n}\n.ota-booking-event {\n  border-width: var(--ota-bar-width) !important;\n}\n.bookingEventBase.border.skewedRight::before {\n  border: var(--ota-bar-width) solid #424242;\n  border-left: 0;\n  border-right: 0;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  top: calc(var(--ota-bar-width) * -1);\n  height: 20px;\n  right: -4px;\n}\n.bookingEvent {\n  cursor: pointer;\n}\n.bookingEventBase {\n  cursor: pointer;\n}\n.bookingEventHiddenBase {\n  position: absolute;\n  top: 0;\n  left: -4px;\n  width: calc(100% + 8);\n}\n\n.bookingEventDragHandle {\n  position: absolute;\n  top: 0;\n  width: 15px;\n  height: 100%;\n  opacity: 0.1;\n  background-color: rgba(0, 0, 0, 0.15);\n  transform: skewX(-22deg);\n  border-radius: 4px;\n  /* display: none; */\n  cursor: pointer;\n}\n\n.splitBooking {\n  border-right: 2px solid #000000;\n}\n\n:host:hover .bookingEventDragHandle {\n  display: block;\n  opacity: 1;\n}\n\n:host.newEvent:hover .bookingEventDragHandle {\n  display: none;\n  opacity: 1;\n}\n\n.leftSide {\n  left: 0;\n}\n.leftSide.skewedLeft {\n  transform: skewX(0);\n}\n.rightSide.skewedRight {\n  transform: skewX(0);\n}\n.rightSide {\n  right: 0;\n}\n\n.bookingEventTitle {\n  color: #fff;\n  font-size: 0.8em;\n  position: relative;\n  max-width: calc(100% - 10px);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  top: 2px;\n  left: 5px;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n  cursor: pointer;\n}\n\n.legend_circle {\n  border-radius: 100%;\n  width: 10px;\n  height: 10px;\n  margin: 3px 3px 3px 2px;\n  border: 1px solid #fff;\n}\n\n.noteIcon {\n  position: absolute;\n  bottom: -8px;\n  left: 2px;\n}\n\n.balanceIcon {\n  position: absolute;\n  top: -8px;\n  right: 2px;\n}\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { calculateDaysBetweenDates, transformNewBooking } from '@/utils/booking';\nimport { isBlockUnit } from '@/utils/utils';\nimport { IRoomNightsData, CalendarModalEvent } from '@/models/property-types';\nimport moment from 'moment';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport { EventsService } from '@/services/events.service';\nimport locales from '@/stores/locales.store';\nimport { ICountry } from '@/models/IBooking';\nimport calendar_dates from '@/stores/calendar-dates.store';\n\n@Component({\n  tag: 'igl-booking-event',\n  styleUrl: 'igl-booking-event.css',\n  scoped: true,\n})\nexport class IglBookingEvent {\n  @Element() private element: HTMLElement;\n\n  @Prop() currency;\n  @Prop() is_vacation_rental: boolean = false;\n  @Prop() language: string;\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\n  @Prop() allBookingEvents: { [key: string]: any } = [];\n  @Prop() countries: ICountry[];\n\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\n  @Event() updateEventData: EventEmitter;\n  @Event() dragOverEventData: EventEmitter;\n  @Event() showRoomNightsDialog: EventEmitter<IRoomNightsData>;\n  @Event() showDialog: EventEmitter<CalendarModalEvent>;\n  @Event() resetStretchedBooking: EventEmitter<string>;\n  @Event() toast: EventEmitter<IToast>;\n  @Event() updateBookingEvent: EventEmitter<{ [key: string]: any }>;\n\n  @State() renderElement: boolean = false;\n  @State() position: { [key: string]: any };\n  @State() isShrinking: boolean | null = null;\n\n  dayWidth: number = 0;\n  eventSpace: number = 8;\n\n  vertSpace: number = 10;\n\n  /* show bubble */\n  private showInfoPopup: boolean = false;\n  private bubbleInfoTopSide: boolean = false;\n  private isStretch = false;\n  /*Services */\n  private eventsService = new EventsService();\n  private bookingService = new BookingService();\n  /* Resize props */\n  resizeSide: string = '';\n  isDragging: boolean = false;\n  initialX: number;\n  initialY: number;\n  currentX: number;\n  currentY: number;\n  initialWidth: number;\n  initialLeft: number;\n  finalWidth: number;\n  dragInitPos: { [key: string]: any };\n  dragEndPos: { [key: string]: any };\n  elementRect: { [key: string]: any };\n  isTouchStart: boolean;\n  moveDifferenceX: number;\n  moveDifferenceY: number;\n  private animationFrameId: number | null = null;\n\n  handleMouseMoveBind = this.handleMouseMove.bind(this);\n  handleMouseUpBind = this.handleMouseUp.bind(this);\n  handleClickOutsideBind = this.handleClickOutside.bind(this);\n\n  componentWillLoad() {\n    window.addEventListener('click', this.handleClickOutsideBind);\n  }\n\n  async fetchAndAssignBookingData() {\n    try {\n      console.log('clicked on book#', this.bookingEvent.BOOKING_NUMBER);\n\n      const validStatuses = ['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'];\n      if (!validStatuses.includes(this.bookingEvent.STATUS)) {\n        return;\n      }\n\n      const data = await this.bookingService.getExposedBooking(this.bookingEvent.BOOKING_NUMBER, 'en');\n      const filteredRooms = data.rooms.filter(room => room['assigned_units_pool'] === this.bookingEvent.ID);\n\n      if (filteredRooms.length === 0) {\n        throw new Error(`booking#${this.bookingEvent.BOOKING_NUMBER} has an empty array`);\n      }\n\n      if (filteredRooms.some(room => room['assigned_units_pool'] === null)) {\n        throw new Error(`booking#${this.bookingEvent.BOOKING_NUMBER} has an empty pool`);\n      }\n\n      data.rooms = filteredRooms;\n\n      const transformedBooking = transformNewBooking(data)[0];\n      const {\n        ID,\n        TO_DATE,\n        FROM_DATE,\n        NO_OF_DAYS,\n        STATUS,\n        NAME,\n        IDENTIFIER,\n        origin,\n        TOTAL_PRICE,\n        PR_ID,\n        POOL,\n        BOOKING_NUMBER,\n        NOTES,\n        is_direct,\n        BALANCE,\n        channel_booking_nbr,\n        ...otherBookingData\n      } = transformedBooking;\n      this.bookingEvent = {\n        ...otherBookingData,\n        ...this.bookingEvent,\n        channel_booking_nbr,\n        booking: data,\n        DEPARTURE_TIME: otherBookingData.DEPARTURE_TIME,\n        PHONE: otherBookingData.PHONE,\n        PHONE_PREFIX: otherBookingData.PHONE_PREFIX,\n        PRIVATE_NOTE: otherBookingData.PRIVATE_NOTE,\n        origin,\n        BALANCE,\n        TOTAL_PRICE,\n      };\n      this.updateBookingEvent.emit(this.bookingEvent);\n      this.showEventInfo(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  componentDidLoad() {\n    if (this.isNewEvent()) {\n      if (!this.bookingEvent.hideBubble) {\n        /* auto matically open the popup, calling the method shows bubble either top or bottom based on available space. */\n        setTimeout(async () => {\n          if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\n            this.showEventInfo(true);\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\n            await this.fetchAndAssignBookingData();\n          } else {\n            this.showEventInfo(true);\n          }\n          this.renderAgain();\n        }, 1);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('click', this.handleClickOutsideBind);\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n    }\n  }\n\n  @Listen('click', { target: 'window' })\n  handleClickOutside(event: Event) {\n    const clickedElement = event.target as HTMLElement;\n    // Check if the clicked element is not within the target div\n    if (!this.element.contains(clickedElement)) {\n      // The click occurred outside the target div\n      this.showEventInfo(false);\n    }\n  }\n\n  @Listen('hideBubbleInfo', { target: 'window' })\n  hideBubbleInfoPopup(event: CustomEvent) {\n    if (event.detail.currentInfoBubbleId != this.getBookingId() || (event.detail.key === 'hidebubble' && event.detail.currentInfoBubbleId === this.getBookingId())) {\n      this.showInfoPopup = false;\n      this.renderAgain();\n    }\n  }\n\n  @Listen('moveBookingTo', { target: 'window' })\n  async moveBookingToHandler(event: CustomEvent) {\n    try {\n      if (event.detail.bookingId !== this.getBookingId()) {\n        this.showEventInfo(false);\n        return;\n      }\n\n      if (event.detail.moveToDay === 'revert' || event.detail.toRoomId === 'revert') {\n        event.detail.moveToDay = this.bookingEvent.FROM_DATE;\n        event.detail.toRoomId = event.detail.fromRoomId;\n        if (this.isTouchStart && this.moveDifferenceX <= 5 && this.moveDifferenceY <= 5 && !this.isStretch) {\n          if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\n            this.showEventInfo(true);\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\n            await this.fetchAndAssignBookingData();\n          }\n        } else {\n          this.animationFrameId = requestAnimationFrame(() => {\n            this.resetBookingToInitialPosition();\n          });\n          return;\n        }\n      } else {\n        if (this.isTouchStart && this.moveDifferenceX <= 5 && this.moveDifferenceY <= 5 && !this.isStretch) {\n          if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\n            this.showEventInfo(true);\n          } else if (['IN-HOUSE', 'CONFIRMED', 'PENDING-CONFIRMATION', 'CHECKED-OUT'].includes(this.bookingEvent.STATUS)) {\n            await this.fetchAndAssignBookingData();\n          }\n        } else {\n          const { pool, to_date, from_date, toRoomId } = event.detail as any;\n          const previousToDate = moment(to_date, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD');\n          console.log(this.findRoomType(Number(this.bookingEvent.PR_ID)), this.findRoomType(Number(toRoomId)));\n          if (\n            (!moment(this.bookingEvent.TO_DATE, 'YYYY-MM-DD').isSame(moment(to_date, 'YYYY-MM-DD'), 'dates') ||\n              this.findRoomType(Number(this.bookingEvent.PR_ID)) !== this.findRoomType(Number(toRoomId))) &&\n            (calendar_dates.disabled_cells.get(`${toRoomId}_${from_date}`)?.disabled ||\n              (calendar_dates.disabled_cells.get(`${toRoomId}_${to_date}`)?.disabled && calendar_dates.disabled_cells.get(`${toRoomId}_${previousToDate}`)?.disabled)) &&\n            !this.isStretch\n          ) {\n            this.reset('This room isn’t available for the entire selected period. Please choose different dates or a different room.');\n          }\n          if (this.checkIfSlotOccupied(toRoomId, from_date, to_date)) {\n            this.reset('Overlapping Dates');\n          }\n          if (pool) {\n            if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\n              // let fromDate = moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(moment(new Date(from_date)))\n              //   ? this.bookingEvent.defaultDates.from_date\n              //   : from_date;\n              // console.log('room', fromDate, this.bookingEvent.defaultDates.from_date, from_date);\n              await this.eventsService.reallocateEvent(pool, toRoomId, from_date, to_date).catch(() => {\n                this.resetBookingToInitialPosition();\n              });\n            } else {\n              if (this.isShrinking || !this.isStretch) {\n                // try {\n                //   if (this.bookingEvent.PR_ID.toString() === toRoomId.toString()) {\n                //     await this.eventsService.reallocateEvent(pool, toRoomId, from_date, to_date);\n                //     return;\n                //   }\n                // } catch (error) {\n                //   this.resetBookingToInitialPosition();\n                //   return;\n                // }\n                const { description, status } = this.getModalDescription(toRoomId, from_date, to_date);\n                let hideConfirmButton = false;\n                if (status === '400') {\n                  hideConfirmButton = true;\n                }\n                const oldFromDate = this.bookingEvent.defaultDates.from_date;\n                const oldToDate = this.bookingEvent.defaultDates.to_date;\n                const diffDays = calculateDaysBetweenDates(oldFromDate, oldToDate);\n\n                let shrinkingDirection = null;\n                let fromDate = oldFromDate;\n                let toDate = oldToDate;\n                if (this.isShrinking) {\n                  if (moment(from_date, 'YYYY-MM-DD').isAfter(moment(oldFromDate, 'YYYY-MM-DD')) && moment(to_date, 'YYYY-MM-DD').isBefore(moment(oldToDate, 'YYYY-MM-DD'))) {\n                    fromDate = oldFromDate;\n                    toDate = to_date;\n                  } else {\n                    shrinkingDirection = moment(from_date, 'YYYY-MM-DD').isAfter(moment(oldFromDate, 'YYYY-MM-DD'))\n                      ? 'left'\n                      : moment(to_date, 'YYYY-MM-DD').isBefore(moment(oldToDate, 'YYYY-MM-DD'))\n                      ? 'right'\n                      : null;\n                    if (shrinkingDirection === 'left') {\n                      fromDate = from_date;\n                    }\n\n                    if (shrinkingDirection === 'right') {\n                      toDate = to_date;\n                    }\n                  }\n                } else {\n                  console.log('stretching');\n                  if (moment(from_date, 'YYYY-MM-DD').isBefore(moment(oldFromDate, 'YYYY-MM-DD'))) {\n                    fromDate = from_date;\n                    const newToDate = moment(from_date, 'YYYY-MM-DD').add(diffDays, 'days');\n                    toDate = newToDate.isBefore(moment(to_date, 'YYYY-MM-DD'), 'days') ? to_date : newToDate.format('YYYY-MM-DD');\n                  } else if (moment(to_date, 'YYYY-MM-DD').isAfter(moment(oldToDate, 'YYYY-MM-DD'))) {\n                    toDate = to_date;\n                    fromDate = moment(to_date, 'YYYY-MM-DD').subtract(diffDays, 'days').format('YYYY-MM-DD');\n                  }\n                }\n                console.warn({ fromDate, toDate });\n                this.showDialog.emit({ reason: 'reallocate', ...event.detail, description, title: '', hideConfirmButton, from_date: fromDate, to_date: toDate });\n              } else {\n                // if (this.checkIfSlotOccupied(toRoomId, from_date, to_date)) {\n                //   this.animationFrameId = requestAnimationFrame(() => {\n                //     this.resetBookingToInitialPosition();\n                //   });\n                //   throw new Error('Overlapping Dates');\n                // } else {\n\n                // let stretchDirection: \"left\" | \"right\"\n                const oldFromDate = this.bookingEvent.defaultDates.from_date;\n                const oldToDate = this.bookingEvent.defaultDates.to_date;\n                // const diffDays = calculateDaysBetweenDates(oldFromDate, oldToDate);\n\n                // let fromDate = oldFromDate;\n\n                // if (moment(from_date, 'YYYY-MM-DD').isBefore(moment(oldFromDate, 'YYYY-MM-DD'))) {\n                //   fromDate = from_date;\n                //   const newToDate = moment(from_date, 'YYYY-MM-DD').add(diffDays, 'days');\n                //   toDate = newToDate.isBefore(moment(to_date, 'YYYY-MM-DD'), 'days') ? to_date : newToDate.format('YYYY-MM-DD');\n                // } else if (moment(to_date, 'YYYY-MM-DD').isAfter(moment(oldToDate, 'YYYY-MM-DD'))) {\n                //   toDate = to_date;\n                //   fromDate = moment(to_date, 'YYYY-MM-DD').subtract(diffDays, 'days').format('YYYY-MM-DD');\n                // }\n                const validateDates = (base_date: string, to_date: string) => {\n                  let cursor = base_date;\n                  let counter = 0;\n                  while (cursor !== to_date) {\n                    if (calendar_dates.disabled_cells.get(`${toRoomId}_${cursor}`)?.disabled) {\n                      counter++;\n                    }\n                    cursor = moment(cursor, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n                  }\n                  if (counter >= 1) {\n                    this.reset(locales.entries.Lcz_ThisUnitIsNotAvailable);\n                  }\n                };\n\n                if (moment(oldToDate, 'YYYY-MM-DD').isBefore(moment(to_date), 'dates')) {\n                  validateDates(oldToDate, to_date);\n                } else if (moment(oldFromDate, 'YYYY-MM-DD').isAfter(moment(from_date, 'YYYY-MM-DD'), 'dates')) {\n                  validateDates(from_date, oldFromDate);\n                }\n                const payload: IRoomNightsData = {\n                  booking: this.bookingEvent,\n                  bookingNumber: this.bookingEvent.BOOKING_NUMBER,\n                  identifier: this.bookingEvent.IDENTIFIER,\n                  to_date,\n                  pool,\n                  from_date,\n                  defaultDates: this.bookingEvent.defaultDates,\n                };\n                if (!this.bookingEvent.is_direct) {\n                  this.showDialog.emit({ reason: 'stretch', ...payload });\n                } else {\n                  this.showRoomNightsDialog.emit(payload);\n                }\n                // }\n              }\n            }\n            this.isShrinking = null;\n          }\n        }\n      }\n    } catch (error) {\n      this.toast.emit({\n        position: 'top-right',\n        title: error.message,\n        description: '',\n        type: 'error',\n      });\n      console.log('something went wrong');\n    }\n  }\n  private reset(message: string) {\n    this.animationFrameId = requestAnimationFrame(() => {\n      this.resetBookingToInitialPosition();\n    });\n    throw new Error(message);\n  }\n  private findRoomType = (roomId: number) => {\n    let roomType = this.bookingEvent.roomsInfo.filter(room => room.physicalrooms.some(r => r.id === +roomId));\n    if (roomType.length) {\n      return roomType[0].id;\n    }\n    return null;\n  };\n  private getModalDescription(toRoomId: number, from_date, to_date): { status: '200' | '400'; description: string } {\n    if (!this.bookingEvent.is_direct) {\n      if (this.isShrinking) {\n        return {\n          description: locales.entries.Lcz_OTA_Modification_Alter,\n          status: '200',\n        };\n        // return {\n        //   description: `${locales.entries.Lcz_YouWillLoseFutureUpdates}.`,\n        //   status: '200',\n        // };\n      } else {\n        if (\n          moment(from_date, 'YYYY-MM-DD').isSame(moment(this.bookingEvent.FROM_DATE, 'YYYY-MM-DD')) &&\n          moment(to_date, 'YYYY-MM-DD').isSame(moment(this.bookingEvent.TO_DATE, 'YYYY-MM-DD'))\n        ) {\n          const initialRT = this.findRoomType(this.bookingEvent.PR_ID);\n          const targetRT = this.findRoomType(toRoomId);\n          if (initialRT === targetRT) {\n            return { description: `${locales.entries.Lcz_AreYouSureWantToMoveAnotherUnit}?`, status: '200' };\n          } else {\n            return {\n              description: locales.entries.Lcz_OTA_Modification_Alter,\n              status: '200',\n            };\n            // return {\n            //   description: `${locales.entries.Lcz_YouWillLoseFutureUpdates} ${this.bookingEvent.origin ? this.bookingEvent.origin.Label : ''}. ${\n            //     locales.entries.Lcz_SameRatesWillBeKept + '.'\n            //   }`,\n            //   status: '200',\n            // };\n          }\n        }\n        return { description: locales.entries.Lcz_CannotChangeCHBookings + '.', status: '400' };\n      }\n    } else {\n      if (!this.isShrinking) {\n        const initialRT = this.findRoomType(Number(this.bookingEvent.PR_ID));\n        const targetRT = this.findRoomType(Number(toRoomId));\n        if (initialRT === targetRT) {\n          console.log('same rt');\n          if (this.bookingEvent.PR_ID.toString() === toRoomId.toString()) {\n            //TODO add the description\n            return { description: locales.entries.Lcz_ConfrmModiication + '.', status: '200' };\n          }\n          return { description: `${locales.entries.Lcz_AreYouSureWantToMoveAnotherUnit}?`, status: '200' };\n        } else {\n          return {\n            description: locales.entries.Lcz_SameRatesWillBeKept + '.',\n            status: '200',\n          };\n        }\n      }\n      return { description: locales.entries.Lcz_ConfrmModiication + '.', status: '200' };\n    }\n  }\n  private resetBookingToInitialPosition() {\n    if (this.isStretch) {\n      this.element.style.left = `${this.initialLeft}px`;\n      this.element.style.width = `${this.initialWidth}px`;\n      this.isStretch = false;\n      this.finalWidth = this.initialWidth;\n      this.isShrinking = null;\n    } else {\n      this.element.style.top = `${this.dragInitPos.top}px`;\n      this.element.style.left = `${this.dragInitPos.left}px`;\n    }\n  }\n  @Listen('revertBooking', { target: 'window' })\n  handleRevertBooking(event: CustomEvent<string>) {\n    if (this.bookingEvent.POOL === event.detail) {\n      this.resetBookingToInitialPosition();\n    }\n  }\n  checkIfSlotOccupied(toRoomId, from_date, to_date) {\n    const fromTime = moment(from_date, 'YYYY-MM-DD');\n    const toTime = moment(to_date, 'YYYY-MM-DD');\n    const isOccupied = this.allBookingEvents.some(event => {\n      if (event.POOL === this.bookingEvent.POOL) {\n        return false;\n      }\n      const eventFromTime = moment(event.FROM_DATE, 'YYYY-MM-DD').add(1, 'days');\n      const eventToTime = moment(event.TO_DATE, 'YYYY-MM-DD');\n      return event.PR_ID === +toRoomId && toTime.isSameOrAfter(eventFromTime) && fromTime.isBefore(eventToTime);\n    });\n    return isOccupied;\n  }\n\n  renderAgain() {\n    this.renderElement = !this.renderElement;\n  }\n\n  getUniqueId() {\n    return new Date().getTime();\n  }\n\n  isSplitBooking() {\n    return !!this.bookingEvent.SPLIT_BOOKING;\n  }\n\n  isNewEvent() {\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\n  }\n\n  isHighlightEventType() {\n    return this.getEventType() === 'HIGH_LIGHT';\n  }\n\n  getBookingId() {\n    return this.bookingEvent.ID;\n  }\n\n  getBookingStatus() {\n    return this.bookingEvent.STATUS;\n  }\n\n  getBookedBy() {\n    return this.bookingEvent.NAME;\n  }\n\n  getBookedRoomId() {\n    return this.bookingEvent.PR_ID;\n  }\n\n  getEventStartingDate() {\n    return new Date(this.bookingEvent.FROM_DATE);\n  }\n\n  getEventEndingDate() {\n    return new Date(this.bookingEvent.TO_DATE);\n  }\n\n  getEventType() {\n    return this.bookingEvent.event_type;\n  }\n\n  getEventLegend() {\n    // console.log(this.getBookingStatus());\n    let status = this.bookingEvent?.legendData.statusId[this.getBookingStatus()];\n    let orderRide = this.isNewEvent() ? { color: '#f9f9c9' } : {};\n    return {\n      ...this.bookingEvent?.legendData[status.id],\n      ...status,\n      ...orderRide,\n    };\n  }\n\n  getLegendOfStatus(aStatusId) {\n    // console.log(aStatusId);\n    let status = this.bookingEvent?.legendData.statusId[aStatusId];\n    return { ...this.bookingEvent.legendData[status.id], ...status };\n  }\n\n  getNoteNode() {\n    if (this.bookingEvent.NOTES || this.bookingEvent.INTERNAL_NOTE || this.bookingEvent.PRIVATE_NOTE) {\n      return this.getLegendOfStatus('NOTES');\n    }\n    return null;\n  }\n\n  getBalanceNode() {\n    if (this.bookingEvent.BALANCE !== null && this.bookingEvent.BALANCE >= 1) {\n      return this.getLegendOfStatus('OUTSTANDING-BALANCE');\n    }\n    return null;\n  }\n\n  setStayDays(aStayDays: number) {\n    this.bookingEvent.NO_OF_DAYS = aStayDays;\n    this.renderAgain();\n    // this.updateData({id: this.getBookedRoomId(), data: { NO_OF_DAYS: aStayDays }});\n  }\n\n  getStayDays() {\n    return this.bookingEvent.NO_OF_DAYS;\n  }\n\n  getPosition() {\n    let startingDate = this.getEventStartingDate();\n    let startingCellClass = '.room_' + this.getBookedRoomId() + '_' + startingDate.getDate() + '_' + (startingDate.getMonth() + 1) + '_' + startingDate.getFullYear();\n    let bodyContainer = document.querySelector('.bodyContainer');\n    let startingCell = document.querySelector(startingCellClass);\n    let pos = { top: '0', left: '0', width: '0', height: '20px' };\n    if (startingCell && bodyContainer && startingCell.getBoundingClientRect() && bodyContainer.getBoundingClientRect()) {\n      let bodyContainerRect = bodyContainer.getBoundingClientRect();\n      let boundingRect = startingCell.getBoundingClientRect();\n      this.dayWidth = this.dayWidth || boundingRect.width;\n      pos.top = boundingRect.top + boundingRect.height / 2 - this.vertSpace - bodyContainerRect.top + 'px';\n      // pos.left = boundingRect.left + this.dayWidth / 2 + this.eventSpace / 2 - bodyContainerRect.left + 'px';\n      // pos.width = this.getStayDays() * this.dayWidth - this.eventSpace + 'px';\n      pos.left =\n        boundingRect.left +\n        (!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? 0 : this.dayWidth / 2) +\n        this.eventSpace / 2 -\n        bodyContainerRect.left +\n        'px';\n      pos.width =\n        (this.getStayDays() + (!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? 0.5 : 0)) *\n          this.dayWidth -\n        this.eventSpace +\n        'px';\n    } else {\n      console.log(this.bookingEvent);\n      console.log('Locating event cell failed ', startingCellClass);\n    }\n    //console.log(pos);\n    return pos;\n  }\n\n  getNumber(aData) {\n    return aData ? parseFloat(aData) : 0;\n  }\n\n  startDragging(event: any, side: string) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    if (this.isNewEvent() || this.isHighlightEventType()) {\n      return null;\n    }\n\n    this.resizeSide = side;\n    this.isDragging = true;\n\n    this.showEventInfo(false);\n    this.isStretch = side !== 'move';\n    if (side === 'move') {\n      this.initialX = event.clientX || event.touches[0].clientX;\n      this.initialY = event.clientY || event.touches[0].clientY;\n      this.elementRect = this.element.getBoundingClientRect();\n      const offsetX = 0;\n      const offsetY = 0;\n      this.dragInitPos = {\n        id: this.getBookingId(),\n        fromRoomId: this.getBookedRoomId(),\n        top: this.getNumber(this.element.style.top) + offsetY,\n        left: this.getNumber(this.element.style.left) + offsetX,\n      };\n      this.dragInitPos.x = this.dragInitPos.left;\n      this.dragInitPos.y = this.dragInitPos.top;\n      this.dragEndPos = { ...this.dragInitPos };\n      this.element.style.top = `${this.dragInitPos.top}px`;\n      this.element.style.left = `${this.dragInitPos.left}px`;\n      this.isTouchStart = true; // !!(event.touches && event.touches.length);\n      this.dragOverEventData.emit({\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\n        data: this.dragInitPos,\n      });\n    } else {\n      this.initialWidth = this.element.offsetWidth;\n      this.initialLeft = this.element.offsetLeft;\n      this.initialX = event.clientX || event.touches[0].clientX;\n      this.dragOverEventData.emit({\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\n        data: {\n          id: this.getBookingId(),\n          fromRoomId: this.getBookedRoomId(),\n          top: this.getNumber(this.element.style.top),\n          left: this.initialLeft,\n          x: this.initialX,\n          y: event.clientY || event.touches[0].clientY,\n        },\n      });\n    }\n\n    document.addEventListener('mousemove', this.handleMouseMoveBind);\n    document.addEventListener('touchmove', this.handleMouseMoveBind);\n    document.addEventListener('pointermove', this.handleMouseMoveBind);\n\n    document.addEventListener('mouseup', this.handleMouseUpBind);\n    document.addEventListener('touchup', this.handleMouseUpBind);\n    document.addEventListener('pointerup', this.handleMouseUpBind);\n  }\n\n  handleMouseMove(event: any) {\n    if (this.isDragging) {\n      this.currentX = event.clientX || event.touches[0].clientX;\n      let distanceX = this.currentX - this.initialX;\n      if (this.resizeSide === 'move') {\n        this.currentY = event.clientY || event.touches[0].clientY;\n        let distanceY = this.currentY - this.initialY;\n        this.element.style.top = `${this.dragInitPos.top + distanceY}px`;\n        this.element.style.left = `${this.dragInitPos.left + distanceX}px`;\n        this.dragEndPos = {\n          id: this.getBookingId(),\n          fromRoomId: this.getBookedRoomId(),\n          top: this.dragInitPos.top + distanceY,\n          left: this.dragInitPos.left + distanceX,\n        };\n        this.dragEndPos.x = this.dragEndPos.left; // + 18;\n        this.dragEndPos.y = this.dragEndPos.top; // + (this.elementRect.height/2);\n        this.dragOverEventData.emit({ id: 'DRAG_OVER', data: this.dragEndPos });\n      } else {\n        // if (this.bookingEvent.is_direct && !isBlockUnit(this.bookingEvent.STATUS_CODE)) {\n        //   return;\n        // }\n        const baseCondition = !this.bookingEvent.is_direct && !isBlockUnit(this.bookingEvent.STATUS_CODE);\n        let newWidth = this.initialWidth;\n        if (this.resizeSide == 'rightSide') {\n          newWidth = this.initialWidth + distanceX;\n          newWidth = Math.min(newWidth, this.initialX + this.element.offsetWidth);\n          newWidth = Math.max(this.dayWidth - this.eventSpace, newWidth);\n          this.isShrinking = distanceX < 0;\n          if (!this.isShrinking && baseCondition) {\n            return;\n          }\n          this.element.style.width = `${newWidth}px`;\n        } else if (this.resizeSide == 'leftSide') {\n          this.isShrinking = distanceX > 0;\n          if (!this.isShrinking && baseCondition) {\n            return;\n          }\n          newWidth = Math.max(this.dayWidth - this.eventSpace, this.initialWidth - distanceX);\n          let newLeft = this.initialLeft + (this.initialWidth - newWidth);\n          this.element.style.left = `${newLeft}px`;\n          this.element.style.width = `${newWidth}px`;\n        }\n        this.finalWidth = newWidth;\n      }\n    } else {\n      console.log('still mouse move listening...');\n    }\n  }\n\n  handleMouseUp() {\n    if (this.isDragging) {\n      if (this.resizeSide === 'move') {\n        // console.log(\"Initial X::\"+this.dragInitPos.x);\n        // console.log(\"Initial Y::\"+this.dragInitPos.y);\n        // console.log(\"End X::\"+this.dragEndPos.x);\n        // console.log(\"End Y::\"+this.dragEndPos.y);\n        if (this.isTouchStart) {\n          this.moveDifferenceX = Math.abs(this.dragEndPos.x - this.dragInitPos.x);\n          this.moveDifferenceY = Math.abs(this.dragEndPos.y - this.dragInitPos.y);\n        }\n        this.dragOverEventData.emit({\n          id: 'DRAG_OVER_END',\n          data: {\n            ...this.dragEndPos,\n            pool: this.bookingEvent.POOL,\n            nbOfDays: this.bookingEvent.NO_OF_DAYS,\n          },\n        });\n      } else {\n        const finalWidth =\n          this.finalWidth -\n          (!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? this.dayWidth / 2 : 0);\n        const numberOfDays = Math.round(finalWidth / this.dayWidth);\n        console.log(finalWidth, this.dayWidth, numberOfDays);\n        let initialStayDays = this.getStayDays();\n        if (initialStayDays != numberOfDays && !isNaN(numberOfDays)) {\n          //this.setStayDays(numberOfDays);\n          if (this.resizeSide == 'leftSide') {\n            this.element.style.left = `${this.initialLeft + (initialStayDays - numberOfDays) * this.dayWidth}px`;\n            // set FROM_DATE = TO_DATE - numberOfDays\n          } else {\n            if (numberOfDays < initialStayDays) {\n              this.isShrinking = true;\n            }\n            // set TO_DATE = FROM_DATE + numberOfDays\n          }\n          // const nbrOfDays =\n          // !this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? numberOfDays - 1 : numberOfDays;\n          this.dragOverEventData.emit({\n            id: 'STRETCH_OVER_END',\n            data: {\n              id: this.getBookingId(),\n              fromRoomId: +this.getBookedRoomId(),\n              x: +this.element.style.left.replace('px', ''),\n              y: +this.element.style.top.replace('px', ''),\n              pool: this.bookingEvent.POOL,\n              nbOfDays: numberOfDays,\n            },\n          });\n          const offset = !this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? +this.dayWidth / 2 : 0;\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace + offset}px`;\n        } else {\n          this.element.style.left = `${this.initialLeft}px`;\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\n        }\n      }\n    } else {\n      console.log('still mouse up listening...');\n    }\n    this.isDragging = false;\n\n    document.removeEventListener('mousemove', this.handleMouseMoveBind);\n    document.removeEventListener('touchmove', this.handleMouseMoveBind);\n    document.removeEventListener('pointermove', this.handleMouseMoveBind);\n\n    document.removeEventListener('mouseup', this.handleMouseUpBind);\n    document.removeEventListener('touchup', this.handleMouseUpBind);\n    document.removeEventListener('pointerup', this.handleMouseUpBind);\n  }\n\n  updateData(data: any) {\n    this.updateEventData.emit(data);\n  }\n  private calculateHoverPosition() {\n    const barRect = this.element.getBoundingClientRect();\n    const barWidth = barRect.width;\n    const barLeft = barRect.left;\n    const screenWidth = window.innerWidth;\n\n    let hoverLeft;\n\n    if (barWidth <= screenWidth) {\n      hoverLeft = barWidth / 2;\n    } else {\n      hoverLeft = screenWidth / 2 - barLeft;\n    }\n    return {\n      position: 'absolute',\n      left: `${hoverLeft}px`,\n      transform: 'translateX(-50%)',\n    };\n  }\n  renderEventBookingNumber() {\n    if (this.bookingEvent.STATUS === 'TEMP-EVENT' || this.bookingEvent.ID === 'NEW_TEMP_EVENT') {\n      return '';\n    }\n    if (isBlockUnit(this.bookingEvent.STATUS_CODE)) {\n      return '';\n    }\n    if (!this.bookingEvent.is_direct) {\n      return ` - ${this.bookingEvent.channel_booking_nbr}`;\n    }\n    return ` - ${this.bookingEvent.BOOKING_NUMBER}`;\n  }\n  showEventInfo(showInfo) {\n    // if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\n    //   return null;\n    // }\n\n    // if (showInfo) {\n    //   // Calculate which side we need to show the bubble, top side or bottom.\n    //   let bodyContainer = document.querySelector('.calendarScrollContainer');\n    //   let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\n    //   let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\n    //   let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top + 50;\n    //   // let topDifference = elementRect.top - bodyContainerRect.top;\n    //   // let bottomDifference = bodyContainerRect.bottom - elementRect.bottom;\n\n    //   if (elementRect.top < midPoint) {\n    //     this.bubbleInfoTopSide = false;\n    //   } else {\n    //     this.bubbleInfoTopSide = true;\n    //   }\n    // }\n\n    // // showInfo = true;\n    // if (showInfo) {\n    //   this.hideBubbleInfo.emit({\n    //     key: 'hidePopup',\n    //     currentInfoBubbleId: this.getBookingId(),\n    //   });\n    // }\n    // this.showInfoPopup = showInfo;\n    // this.renderAgain();\n    if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\n      return null;\n    }\n\n    if (showInfo) {\n      // Calculate which side we need to show the bubble, top side or bottom.\n      let bodyContainer = document.querySelector('.calendarScrollContainer');\n      let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\n      let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\n      let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top + 50;\n\n      if (elementRect.top < midPoint) {\n        this.bubbleInfoTopSide = false;\n      } else {\n        this.bubbleInfoTopSide = true;\n      }\n    }\n\n    if (showInfo) {\n      this.hideBubbleInfo.emit({\n        key: 'hidePopup',\n        currentInfoBubbleId: this.getBookingId(),\n      });\n    }\n    this.showInfoPopup = showInfo;\n    this.renderAgain();\n  }\n\n  render() {\n    // onMouseLeave={()=>this.showEventInfo(false)}\n    let legend = this.getEventLegend();\n    let noteNode = this.getNoteNode();\n    let balanceNode = this.getBalanceNode();\n    // console.log(this.bookingEvent.BOOKING_NUMBER === '46231881' ? this.bookingEvent : '');\n    return (\n      <Host\n        class={`bookingEvent  ${this.isNewEvent() || this.isHighlightEventType() ? 'newEvent' : ''} ${legend.clsName} `}\n        style={this.getPosition()}\n        id={'event_' + this.getBookingId()}\n      >\n        {/* onMouseOver={() =>this.showEventInfo(true)}  */}\n        <div\n          class={`bookingEventBase  ${\n            !this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? 'skewedLeft' : ''\n          }\n          ${!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.to_date)).isAfter(new Date(this.bookingEvent.TO_DATE)) ? 'skewedRight' : ''}\n          ${\n            !this.bookingEvent.is_direct &&\n            !isBlockUnit(this.bookingEvent.STATUS_CODE) &&\n            this.bookingEvent.STATUS !== 'TEMP-EVENT' &&\n            this.bookingEvent.ID !== 'NEW_TEMP_EVENT' &&\n            'border border-dark ota-booking-event'\n          }  ${this.isSplitBooking() ? 'splitBooking' : ''}`}\n          style={{ 'backgroundColor': legend.color, '--ir-event-bg': legend.color }}\n          onTouchStart={event => this.startDragging(event, 'move')}\n          onMouseDown={event => this.startDragging(event, 'move')}\n        ></div>\n        {noteNode ? <div class=\"legend_circle noteIcon\" style={{ backgroundColor: noteNode.color }}></div> : null}\n        {balanceNode ? <div class=\"legend_circle balanceIcon\" style={{ backgroundColor: balanceNode.color }}></div> : null}\n        {/* onMouseOver={() => this.showEventInfo(true)}  */}\n        <div class=\"bookingEventTitle\" onTouchStart={event => this.startDragging(event, 'move')} onMouseDown={event => this.startDragging(event, 'move')}>\n          {this.getBookedBy()}\n          {this.renderEventBookingNumber()}\n        </div>\n\n        {/* {(this.bookingEvent.is_direct || isBlockUnit(this.bookingEvent.STATUS_CODE)) && ( */}\n        <Fragment>\n          <div\n            class={`bookingEventDragHandle leftSide ${\n              !this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? 'skewedLeft' : ''\n            }\n            ${!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.to_date)).isAfter(new Date(this.bookingEvent.TO_DATE)) ? 'skewedRight' : ''}`}\n            onTouchStart={event => this.startDragging(event, 'leftSide')}\n            onMouseDown={event => this.startDragging(event, 'leftSide')}\n          ></div>\n          <div\n            class={`bookingEventDragHandle rightSide ${\n              !this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.from_date)).isBefore(new Date(this.bookingEvent.FROM_DATE)) ? 'skewedLeft' : ''\n            }\n              ${!this.isNewEvent() && moment(new Date(this.bookingEvent.defaultDates.to_date)).isAfter(new Date(this.bookingEvent.TO_DATE)) ? 'skewedRight' : ''}`}\n            onTouchStart={event => this.startDragging(event, 'rightSide')}\n            onMouseDown={event => this.startDragging(event, 'rightSide')}\n          ></div>\n        </Fragment>\n        {/* )} */}\n\n        {this.showInfoPopup ? (\n          <igl-booking-event-hover\n            is_vacation_rental={this.is_vacation_rental}\n            countries={this.countries}\n            currency={this.currency}\n            class=\"top\"\n            bookingEvent={this.bookingEvent}\n            bubbleInfoTop={this.bubbleInfoTopSide}\n            style={this.calculateHoverPosition()}\n          ></igl-booking-event-hover>\n        ) : null}\n      </Host>\n    );\n  }\n}\n","export class ReloadInterceptor {\n  private isActive = false;\n  private readonly onIntercept: () => void;\n\n  /**\n   * @param onIntercept\n   *   Called whenever a reload is intercepted (F5/Ctrl+R or beforeunload).\n   * @param autoActivate\n   *   If true, will immediately attach listeners.\n   */\n  constructor(options: { onIntercept?: () => void; autoActivate: boolean }) {\n    this.onIntercept = options.onIntercept ?? (() => {});\n    if (options.autoActivate) {\n      this.activate();\n    }\n  }\n\n  /** Begin intercepting reloads & navigations */\n  public activate(): void {\n    if (this.isActive) return;\n    window.addEventListener('beforeunload', this.handleBeforeUnload, { capture: true });\n    this.isActive = true;\n  }\n\n  /** Stop intercepting reloads & navigations */\n  public deactivate(): void {\n    if (!this.isActive) return;\n    window.removeEventListener('beforeunload', this.handleBeforeUnload, { capture: true });\n    this.isActive = false;\n  }\n\n  /** Native “Are you sure you want to leave?” dialog */\n  private handleBeforeUnload = (e: BeforeUnloadEvent): void => {\n    this.onIntercept();\n    e.preventDefault();\n    e.returnValue = '';\n  };\n}\n",":host {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 0%;\n  height: 100%;\n}\n.bulk-sheet-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-height: 0;\n  gap: 1rem;\n}\n.animated-container {\n  transition: all 0.5s ease;\n}\n.physical-room {\n  margin-left: 1rem !important;\n  padding-top: 0.5rem;\n}\n/* target only the last <td> in each .physical-room row */\n.physical-room > td:last-child {\n  padding-left: 1rem; /* or whatever indent you like */\n}\n.room-type-list {\n  padding: 0;\n  margin: 0;\n}\n\n.room-type-list > li,\n.physical-room,\n.room-type-row {\n  list-style: none;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { BookingService } from '@/services/booking.service';\nimport calendar_data from '@/stores/calendar-data';\nimport { ReloadInterceptor } from '@/utils/ReloadInterceptor';\nimport { Component, Event, EventEmitter, Fragment, h, Prop, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\nimport { z, ZodError } from 'zod';\nimport { IToast } from '@components/ui/ir-toast/toast';\n// import calendar_dates from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nexport type RoomStatus = 'open' | 'closed';\nexport type SelectedRooms = {\n  id: string | number;\n  result: RoomStatus;\n};\n\n@Component({\n  tag: 'igl-bulk-block',\n  styleUrls: ['igl-bulk-block.css', '../../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBulkBlock {\n  @Prop() maxDatesLength = 8;\n  @Prop() property_id: number;\n\n  @State() selectedRoomTypes: Map<string | number, SelectedRooms[]> = new Map();\n  @State() selectedUnit: {\n    roomtype_id: number;\n    unit_id: number;\n  } | null = null;\n  @State() errors: 'dates' | 'rooms';\n  @State() isLoading: boolean;\n  @State() blockState: 'block' | 'unblock' = 'block';\n  @State() dates: {\n    from: Moment | null;\n    to: Moment | null;\n  }[] = [{ from: null, to: null }];\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private sidebar: HTMLIrSidebarElement;\n  private dateRefs: { from?: HTMLIrDatePickerElement; to?: HTMLIrDatePickerElement }[] = [];\n  private reloadInterceptor: ReloadInterceptor;\n  private minDate = moment().format('YYYY-MM-DD');\n  private bookingService = new BookingService();\n\n  private datesSchema = z.array(\n    z.object({\n      from: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'from' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n      to: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'to' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n    }),\n  );\n\n  private unitSections: HTMLUListElement;\n  private datesSections: HTMLTableElement;\n\n  componentDidLoad() {\n    this.reloadInterceptor = new ReloadInterceptor({ autoActivate: false });\n    this.sidebar = document.querySelector('ir-sidebar') as HTMLIrSidebarElement;\n  }\n\n  disconnectedCallback() {\n    this.reloadInterceptor.deactivate();\n  }\n\n  private async addBlockDates() {\n    try {\n      this.errors = null;\n      this.isLoading = true;\n      const periods = this.datesSchema.parse(this.dates);\n      if (!this.selectedUnit) {\n        this.unitSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'rooms';\n        return;\n      }\n      if (this.blockState === 'block') {\n        await this.bookingService.blockAvailabilityForBrackets({\n          unit_id: this.selectedUnit?.unit_id,\n          description: '',\n          block_status_code: '002',\n          brackets: periods.map(p => ({\n            from_date: p.from,\n            to_date: p.to,\n          })),\n        });\n      } else {\n        await this.bookingService.unBlockUnitByPeriod({\n          unit_id: this.selectedUnit?.unit_id,\n          from_date: periods[0].from,\n          to_date: periods[0].to,\n        });\n      }\n      this.activate();\n      this.deactivate();\n      this.toast.emit({\n        type: 'success',\n        title: locales.entries.Lcz_RequestSubmittedSuccessfully,\n        description: '',\n      });\n      this.isLoading = false;\n      this.closeModal.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        this.datesSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'dates';\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private activate() {\n    this.reloadInterceptor.activate();\n    if (this.sidebar) this.sidebar.preventClose = true;\n  }\n\n  private deactivate() {\n    this.reloadInterceptor.deactivate();\n    if (this.sidebar) this.sidebar.preventClose = false;\n  }\n\n  private handleDateChange({ index, date, key }: { index: number; date: Moment; key: 'from' | 'to' }) {\n    // 1) clone and set the new date\n    const dates = [...this.dates];\n    dates[index] = { ...dates[index], [key]: date };\n\n    // 1a) if they just changed the \"from\", always clear that row's \"to\"\n    if (key === 'from' && dates[index].to?.isBefore(date, 'dates')) {\n      dates[index].to = null;\n    }\n\n    // 2) clear any subsequent rows whose \"from\" is on or before the changed date\n    for (let i = index + 1; i < dates.length; i++) {\n      const rowFrom = dates[i]?.from;\n      if (rowFrom && rowFrom.isSameOrBefore(date, 'day')) {\n        dates[i] = { from: null, to: null };\n      }\n    }\n\n    // 3) commit\n    this.dates = dates;\n\n    // 4) open the appropriate picker\n    setTimeout(() => {\n      if (key === 'from') {\n        this.dateRefs[index]?.to.openDatePicker();\n      } else {\n        const nextFrom = dates.findIndex(d => d.from === null);\n        if (nextFrom > -1) {\n          this.dateRefs[nextFrom]?.from.openDatePicker();\n        }\n      }\n    }, 100);\n  }\n\n  private addDateRow() {\n    const last_dates = this.dates[this.dates.length - 1];\n    if (!last_dates.from || !last_dates.to) {\n      this.errors = 'dates';\n      return;\n    }\n    this.errors = null;\n    this.dates = [...this.dates, { from: null, to: null }];\n    setTimeout(() => {\n      this.dateRefs[this.dates.length - 1].to?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }, 100);\n  }\n\n  render() {\n    return (\n      <form\n        class={'bulk-sheet-container'}\n        onSubmit={e => {\n          e.preventDefault();\n          this.addBlockDates();\n        }}\n      >\n        <div class=\"sheet-body px-1\">\n          <div class=\"text-muted text-left pt-0 my-0 d-flex align-items-center pb-1\" style={{ gap: '0.5rem' }}>\n            <p class=\"m-0 p-0\">Select the unit to</p>\n            <ir-select\n              showFirstOption={false}\n              selectedValue={this.blockState}\n              data={[\n                { text: 'Block', value: 'block' },\n                { text: 'Unblock', value: 'unblock' },\n              ]}\n              onSelectChange={e => {\n                this.blockState = e.detail;\n              }}\n            ></ir-select>\n          </div>\n          <div>\n            {this.errors === 'rooms' && (\n              <p class={'text-danger text-left smaller p-0 '} style={{ 'margin-bottom': '0.5rem' }}>\n                {calendar_data.is_vacation_rental ? locales.entries.Lcz_PlzSelectOneListing : locales.entries.Lcz_PlzSelectOneUnit}\n              </p>\n            )}\n            <ul class=\"room-type-list\" ref={el => (this.unitSections = el)}>\n              {calendar_data.roomsInfo.map(roomType => {\n                return (\n                  <Fragment>\n                    <li key={`roomTypeRow-${roomType.id}`} class={`room-type-row`}>\n                      <div class={'d-flex choice-row'}>\n                        <span class=\"pl-1 text-left room-type-name\">{roomType.name}</span>\n                      </div>\n                    </li>\n                    {roomType.physicalrooms.map((room, j) => {\n                      const row_style = j === roomType.physicalrooms.length - 1 ? 'pb-1' : '';\n                      return (\n                        <li key={`physicalRoom-${room.id}-${j}`} class={`physical-room ${row_style}`}>\n                          <div class={'d-flex choice-row'}>\n                            <ir-radio\n                              class=\"pl-1 \"\n                              name=\"unit\"\n                              checked={this.selectedUnit?.unit_id === room.id}\n                              onCheckChange={() =>\n                                (this.selectedUnit = {\n                                  roomtype_id: roomType.id,\n                                  unit_id: room.id,\n                                })\n                              }\n                              label={room.name}\n                            ></ir-radio>\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </Fragment>\n                );\n              })}\n            </ul>\n          </div>\n          {/* Dates */}\n          <table class=\"mt-1\" ref={el => (this.datesSections = el)}>\n            <thead>\n              <tr>\n                <th class=\"text-left\">{locales.entries.Lcz_From}</th>\n                <th class=\"text-left\">{locales.entries.Lcz_ToExclusive}</th>\n                <td>\n                  {this.dates.length !== this.maxDatesLength && this.blockState === 'block' && (\n                    <ir-button\n                      variant=\"icon\"\n                      icon_name=\"plus\"\n                      onClickHandler={() => {\n                        this.addDateRow();\n                      }}\n                    ></ir-button>\n                  )}\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {this.dates.map((d, i) => {\n                if (!this.dateRefs[i]) {\n                  this.dateRefs[i] = {};\n                }\n                const fromDateMinDate = i > 0 ? this.dates[i - 1]?.to.clone().add(1, 'days')?.format('YYYY-MM-DD') ?? this.minDate : this.minDate;\n                const toDateMinDate = this.dates[i].from ? this.dates[i]?.from.clone().add(1, 'days')?.format('YYYY-MM-DD') : this.minDate;\n                return (\n                  <tr key={`date_${i}`}>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        ref={el => {\n                          this.dateRefs[i].from = el;\n                        }}\n                        forceDestroyOnUpdate\n                        minDate={fromDateMinDate}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.from?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        aria-invalid={String(this.errors === 'dates' && !d.from)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'from' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          if (i === 0) {\n                            return;\n                          }\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.from ? d.from.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors === 'dates' && !d.to ? 'border-danger' : ''} text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        forceDestroyOnUpdate\n                        ref={el => {\n                          this.dateRefs[i].to = el;\n                        }}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.to?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        minDate={toDateMinDate}\n                        aria-invalid={String(this.errors === 'dates' && !d.to)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'to' });\n                        }}\n                        maxDate={d.from ? moment(d.from).add(3, 'months').format('YYYY-MM-DD') : undefined}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from?.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.to ? d.to.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm \n                          ${this.errors === 'dates' && !d.to ? 'border-danger' : ''}\n                          text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    {i > 0 && (\n                      <td class=\"pb-1\">\n                        <ir-button\n                          variant=\"icon\"\n                          icon_name=\"minus\"\n                          onClickHandler={() => {\n                            this.dates = this.dates.filter((_, j) => j !== i);\n                          }}\n                        ></ir-button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div class={'sheet-footer'}>\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class={'flex-fill'} onClickHandler={() => this.closeModal.emit(null)}></ir-button>\n          <ir-button isLoading={this.isLoading} text={locales.entries.Lcz_Confirm} btn_type=\"submit\" class=\"flex-fill\"></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",".bulk-operations-sheet-container {\n  display: flex;\n  flex-direction: column;\n  height: auto !important;\n  min-height: 100vh;\n  background: white !important;\n  /* gap: 1rem; */\n}\n.animated-container {\n  transition: all 0.5s ease;\n}\n.tabs {\n  position: sticky;\n  top: var(--ir-tabs-top, 54px);\n  background-color: white;\n  z-index: 9999999;\n  padding-top: 1rem;\n  margin-bottom: 1rem;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Tab } from '@/components/ui/ir-tabs/ir-tabs';\nimport { IrToast } from '@/components/ui/ir-toast/ir-toast';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'igl-bulk-operations',\n  styleUrls: ['igl-bulk-operations.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBulkOperations {\n  @Prop() maxDatesLength = 8;\n  @Prop() property_id: number;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() toast: EventEmitter<IrToast>;\n\n  @State() selectedTab: Tab;\n\n  private tabs = [\n    {\n      id: 'stop-sale',\n      label: 'Stop/Open Sale',\n    },\n    {\n      id: 'block',\n      label: 'Block Unit',\n    },\n  ];\n\n  private tabsEl: HTMLIrTabsElement;\n  private titleEl: HTMLIrTitleElement;\n\n  componentDidLoad() {\n    this.tabsEl.style.setProperty('--ir-tabs-top', this.titleEl?.getBoundingClientRect()?.height?.toString() + 'px');\n  }\n\n  render() {\n    return (\n      <div class={'bulk-operations-sheet-container'}>\n        <div class=\"sheet-header d-flex align-items-center\">\n          <ir-title\n            ref={el => (this.titleEl = el)}\n            onCloseSideBar={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              // if (this.isLoading) {\n              //   return;\n              // }\n              this.closeModal.emit(null);\n            }}\n            class=\"px-1 mb-0\"\n            // label={locales.entries.Lcz_BulkStopOpenSale}\n            label={'Bulk Operations'}\n            displayContext=\"sidebar\"\n          ></ir-title>\n        </div>\n        <ir-tabs ref={el => (this.tabsEl = el)} class=\"tabs\" tabs={this.tabs} onTabChanged={e => (this.selectedTab = e.detail)}></ir-tabs>\n        {this.selectedTab?.id === 'stop-sale' ? (\n          <igl-bulk-stop-sale maxDatesLength={this.maxDatesLength} property_id={this.property_id}></igl-bulk-stop-sale>\n        ) : (\n          <igl-bulk-block maxDatesLength={this.maxDatesLength} property_id={this.property_id}></igl-bulk-block>\n        )}\n      </div>\n    );\n  }\n}\n",":host {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 0%;\n  height: 100%;\n}\n.bulk-sheet-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-height: 0;\n  gap: 1rem;\n}\n.animated-container {\n  transition: all 0.5s ease;\n}\n.days-checkbox {\n  gap: 0.5rem;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { BookingService } from '@/services/booking.service';\nimport calendar_data from '@/stores/calendar-data';\nimport { ReloadInterceptor } from '@/utils/ReloadInterceptor';\nimport { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\nimport { z, ZodError } from 'zod';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nexport type SelectedRooms = { id: string | number; result: 'open' | 'closed' };\n\n@Component({\n  tag: 'igl-bulk-stop-sale',\n  styleUrls: ['igl-bulk-stop-sale.css', '../../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBulkStopSale {\n  @Prop() maxDatesLength = 8;\n  @Prop() property_id: number;\n\n  @State() selectedRoomTypes: SelectedRooms[] = [];\n  @State() errors: 'dates' | 'rooms' | 'weekdays';\n  @State() isLoading: boolean;\n  @State() dates: {\n    from: Moment | null;\n    to: Moment | null;\n  }[] = [{ from: null, to: null }];\n\n  @State() selectedWeekdays: Set<number> = new Set(\n    Array(7)\n      .fill(null)\n      .map((_, i) => i),\n  );\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private sidebar: HTMLIrSidebarElement;\n  private dateRefs: { from?: HTMLIrDatePickerElement; to?: HTMLIrDatePickerElement }[] = [];\n  // private allRoomTypes: SelectedRooms[] = [];\n  private reloadInterceptor: ReloadInterceptor;\n  private minDate = moment().format('YYYY-MM-DD');\n  private bookingService = new BookingService();\n  private getDayIndex(dateStr: string): number {\n    return moment(dateStr, 'YYYY-MM-DD').day();\n  }\n  private datesSchema = z.array(\n    z.object({\n      from: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'from' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n      to: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'to' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n    }),\n  );\n\n  //sections\n  private unitSections: HTMLTableElement;\n  private weekdaysSections: HTMLIrWeekdaySelectorElement;\n  private datesSections: HTMLTableElement;\n\n  componentDidLoad() {\n    this.reloadInterceptor = new ReloadInterceptor({ autoActivate: false });\n    this.sidebar = document.querySelector('ir-sidebar') as HTMLIrSidebarElement;\n  }\n\n  disconnectedCallback() {\n    this.reloadInterceptor.deactivate();\n  }\n\n  // @Listen('beforeSidebarClose', { target: 'body' })\n  // handleBeforeSidebarClose(e: CustomEvent) {\n  //   e.stopImmediatePropagation();\n  //   e.stopPropagation();\n  //   if (window.confirm('Do you really want to proceed?')) {\n  //     this.deactivate();\n  //     this.sidebar.toggleSidebar();\n  //   }\n  // }\n\n  private async addBlockDates() {\n    const generatePeriodsToModify = periods => {\n      const p = [];\n      for (const period of periods) {\n        let current = period.from;\n        const lastDay = moment(period.to, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n        while (current !== lastDay) {\n          const nextDay = moment(current, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n          if (!this.selectedWeekdays.has(this.getDayIndex(current))) {\n            current = nextDay;\n            continue;\n          }\n          for (const selectedRoom of this.selectedRoomTypes) {\n            p.push({\n              room_type_id: selectedRoom.id,\n              night: current,\n            });\n          }\n          current = nextDay;\n        }\n      }\n      return p;\n    };\n    const updateCalendarCells = (\n      payloads: {\n        is_closed: boolean;\n        restrictions: {\n          night: string;\n          room_type_id: number;\n        }[];\n      }[],\n    ) => {\n      const prevDisabledCells = new Map(calendar_dates.disabled_cells);\n\n      // Caches\n      const roomsInfoById = new Map(calendar_data.roomsInfo.map((rt, i) => [rt.id, { roomType: rt, index: i }]));\n      const dayIndexByValue = new Map(calendar_dates.days.map((day, i) => [day.value, i]));\n      const rateByRoomTypeAndDate = new Map<string, any>();\n\n      for (const payload of payloads) {\n        for (const restriction of payload.restrictions) {\n          const { night, room_type_id } = restriction;\n          const { roomType } = roomsInfoById.get(room_type_id);\n\n          if (!roomType) continue;\n\n          const dayIndex = dayIndexByValue.get(night);\n          if (dayIndex === undefined) {\n            console.warn(`Couldn't find date ${night}`);\n            continue;\n          }\n\n          const day = calendar_dates.days[dayIndex];\n          const rateKey = `${room_type_id}_${night}`;\n          let rp = rateByRoomTypeAndDate.get(rateKey);\n          if (!rp) {\n            rp = day.rate.find(r => r.id === room_type_id);\n            if (!rp) {\n              console.warn(`Couldn't find room type ${room_type_id}`);\n              continue;\n            }\n            rateByRoomTypeAndDate.set(rateKey, rp);\n          }\n\n          const haveAvailability = (rp.exposed_inventory as any).rts === 0;\n          for (const room of roomType.physicalrooms) {\n            const key = `${room.id}_${night}`;\n            prevDisabledCells.set(key, {\n              disabled: payload.is_closed ? true : haveAvailability,\n              reason: payload.is_closed ? 'stop_sale' : haveAvailability ? 'inventory' : 'stop_sale',\n            });\n          }\n        }\n      }\n      calendar_dates['disabled_cells'] = new Map(prevDisabledCells);\n    };\n    try {\n      this.errors = null;\n      this.isLoading = true;\n      const periods = this.datesSchema.parse(this.dates);\n      if (this.selectedRoomTypes.length === 0) {\n        this.unitSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'rooms';\n        return;\n      }\n      if (this.selectedWeekdays.size === 0) {\n        this.weekdaysSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'weekdays';\n        return;\n      }\n      this.activate();\n      const periods_to_modify = generatePeriodsToModify(periods);\n      const isAllOpen = this.selectedRoomTypes.every(e => e.result === 'open');\n      const isAllClosed = this.selectedRoomTypes.every(e => e.result === 'closed');\n      if (isAllClosed || isAllOpen) {\n        const payload = {\n          is_closed: isAllClosed,\n          restrictions: periods_to_modify,\n          property_id: this.property_id,\n        };\n        await this.bookingService.setExposedRestrictionPerRoomType(payload);\n        updateCalendarCells([payload]);\n      } else {\n        const payloads = [];\n        for (const room of this.selectedRoomTypes) {\n          const periods = periods_to_modify.filter(f => f.room_type_id === room.id);\n          payloads.push({\n            is_closed: room.result === 'closed',\n            restrictions: periods,\n            property_id: this.property_id,\n          });\n        }\n        await Promise.all(payloads.map(p => this.bookingService.setExposedRestrictionPerRoomType(p)));\n        updateCalendarCells(payloads);\n      }\n      this.deactivate();\n      this.toast.emit({\n        type: 'success',\n        title: locales.entries.Lcz_RequestSubmittedSuccessfully,\n        description: '',\n      });\n      this.isLoading = false;\n      this.closeModal.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        this.datesSections.scrollIntoView({ behavior: 'smooth', block: 'end' });\n        this.errors = 'dates';\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private activate() {\n    this.reloadInterceptor.activate();\n    if (this.sidebar) this.sidebar.preventClose = true;\n  }\n\n  private deactivate() {\n    this.reloadInterceptor.deactivate();\n    if (this.sidebar) this.sidebar.preventClose = false;\n  }\n\n  private handleDateChange({ index, date, key }: { index: number; date: Moment; key: 'from' | 'to' }) {\n    // 1) clone and set the new date\n    const dates = [...this.dates];\n    dates[index] = { ...dates[index], [key]: date };\n\n    // 1a) if they just changed the “from”, always clear that row’s “to”\n    if (key === 'from' && dates[index].to?.isBefore(date, 'dates')) {\n      dates[index].to = null;\n    }\n\n    // 2) clear any subsequent rows whose “from” is on or before the changed date\n    for (let i = index + 1; i < dates.length; i++) {\n      const rowFrom = dates[i]?.from;\n      if (rowFrom && rowFrom.isSameOrBefore(date, 'day')) {\n        dates[i] = { from: null, to: null };\n      }\n    }\n\n    // 3) commit\n    this.dates = dates;\n\n    // 4) open the appropriate picker\n    setTimeout(() => {\n      if (key === 'from') {\n        this.dateRefs[index]?.to.openDatePicker();\n      } else {\n        const nextFrom = dates.findIndex(d => d.from === null);\n        if (nextFrom > -1) {\n          this.dateRefs[nextFrom]?.from.openDatePicker();\n        }\n      }\n    }, 100);\n  }\n\n  private addDateRow() {\n    const last_dates = this.dates[this.dates.length - 1];\n    if (!last_dates.from || !last_dates.to) {\n      this.errors = 'dates';\n      return;\n    }\n    this.errors = null;\n    this.dates = [...this.dates, { from: null, to: null }];\n    setTimeout(() => {\n      this.dateRefs[this.dates.length - 1].to?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }, 100);\n  }\n\n  render() {\n    return (\n      <form\n        class={'bulk-sheet-container'}\n        onSubmit={e => {\n          e.preventDefault();\n          this.addBlockDates();\n        }}\n      >\n        {/* <div class=\"sheet-header d-flex align-items-center\">\n          <ir-title\n            onCloseSideBar={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              if (this.isLoading) {\n                return;\n              }\n              this.closeModal.emit(null);\n            }}\n            class=\"px-1 mb-0\"\n            label={locales.entries.Lcz_BulkStopOpenSale}\n            displayContext=\"sidebar\"\n          ></ir-title>\n        </div> */}\n        <div class=\"sheet-body px-1\">\n          <div class=\"text-muted text-left py-0 my-0\">\n            <p>\n              {/* {locales.entries.Lcz_SelectAffectedUnits} */}\n              Select the types to stop or open sales for all related rate plans\n              {/* <span class=\"text-warning\">{locales.entries.Lcz_OperationRequiresSeveralMinutes}</span> */}\n            </p>\n          </div>\n          <div>\n            {this.errors === 'rooms' && (\n              <p class={'text-danger text-left smaller p-0 '} style={{ 'margin-bottom': '0.5rem' }}>\n                {calendar_data.is_vacation_rental ? locales.entries.Lcz_PlzSelectOneListing : locales.entries.Lcz_PlzSelectOneUnit}\n              </p>\n            )}\n            <table ref={el => (this.unitSections = el)}>\n              <thead>\n                <tr>\n                  <th class=\"sr-only\">choice</th>\n                  <th class=\"sr-only\">room type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {calendar_data.roomsInfo.map((roomType, i) => {\n                  const row_style = i === calendar_data.roomsInfo.length - 1 ? '' : 'pb-1';\n                  return (\n                    <tr key={roomType.id}>\n                      <td class={`choice-row ${row_style}`}>\n                        <div class={'d-flex justify-content-end'}>\n                          <ir-select\n                            firstOption={`${locales.entries.Lcz_Select}...`}\n                            data={[\n                              { value: 'open', text: locales.entries.Lcz_Open },\n                              { value: 'closed', text: locales.entries.Lcz_StopSale },\n                            ]}\n                            onSelectChange={e => {\n                              const choice = e.detail as 'open' | 'closed' | undefined;\n                              // drop any existing entry for this roomType\n                              const rest = this.selectedRoomTypes.filter(entry => entry.id !== roomType.id);\n                              // if they actually picked something, append it\n                              if (choice) {\n                                rest.push({ id: roomType.id, result: choice });\n                              }\n                              this.selectedRoomTypes = rest;\n                            }}\n                          ></ir-select>\n                        </div>\n                      </td>\n                      <td class={`pl-1 text-left ${row_style}`}>{roomType.name}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <p class=\"text-left mt-2 text-muted\">Included days</p>\n          {this.errors === 'weekdays' && <p class={'text-danger text-left smaller m-0 p-0'}>Please select at least one day</p>}\n          <ir-weekday-selector\n            ref={el => (this.weekdaysSections = el)}\n            weekdays={Array.from(this.selectedWeekdays)}\n            onWeekdayChange={e => {\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n              this.selectedWeekdays = new Set(e.detail);\n            }}\n          ></ir-weekday-selector>\n          {/* Dates */}\n          <table class=\"mt-1\" ref={el => (this.datesSections = el)}>\n            <thead>\n              <tr>\n                <th class=\"text-left\">{locales.entries.Lcz_From}</th>\n                <th class=\"text-left\">{locales.entries.Lcz_ToExclusive}</th>\n                <td>\n                  {this.dates.length !== this.maxDatesLength && (\n                    <ir-button\n                      variant=\"icon\"\n                      icon_name=\"plus\"\n                      onClickHandler={() => {\n                        this.addDateRow();\n                      }}\n                    ></ir-button>\n                  )}\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {this.dates.map((d, i) => {\n                if (!this.dateRefs[i]) {\n                  this.dateRefs[i] = {};\n                }\n\n                const fromDateMinDate = i > 0 ? this.dates[i - 1]?.to.clone().add(1, 'days')?.format('YYYY-MM-DD') ?? this.minDate : this.minDate;\n                const toDateMinDate = this.dates[i].from ? this.dates[i]?.from.clone()?.format('YYYY-MM-DD') : this.minDate;\n                return (\n                  <tr key={`date_${i}`}>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        ref={el => {\n                          this.dateRefs[i].from = el;\n                        }}\n                        forceDestroyOnUpdate\n                        minDate={fromDateMinDate}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.from?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        aria-invalid={String(this.errors === 'dates' && !d.from)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'from' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          if (i === 0) {\n                            return;\n                          }\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.from ? d.from.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors === 'dates' && !d.to ? 'border-danger' : ''} text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        forceDestroyOnUpdate\n                        ref={el => {\n                          this.dateRefs[i].to = el;\n                        }}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.to?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        minDate={toDateMinDate}\n                        aria-invalid={String(this.errors === 'dates' && !d.to)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'to' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from?.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.to ? d.to.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm \n                          ${this.errors === 'dates' && !d.to ? 'border-danger' : ''}\n                          text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    {i > 0 && (\n                      <td class=\"pb-1\">\n                        <ir-button\n                          variant=\"icon\"\n                          icon_name=\"minus\"\n                          onClickHandler={() => {\n                            this.dates = this.dates.filter((_, j) => j !== i);\n                          }}\n                        ></ir-button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div class={'sheet-footer'}>\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class={'flex-fill'} onClickHandler={() => this.closeModal.emit(null)}></ir-button>\n          <ir-button isLoading={this.isLoading} text={locales.entries.Lcz_Save} btn_type=\"submit\" class=\"flex-fill\"></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.bodyContainer {\n  position: relative;\n}\n\n.roomRow {\n  width: max-content;\n}\n\n.roomRow:first-child {\n  margin-top: 80px;\n}\n.categoryName {\n  font-weight: bold;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n/* .cellData[data-dirty-room='true'] { \n  border-bottom: 5px solid rgb(80, 80, 80) !important;\n} */\n.cellData[data-dirty-room='true']::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  height: 100%;\n  left: 30%;\n  right: 30%;\n  background-color: #d4d0be !important;\n}\n\n/* .cellData.disabled[data-dirty-room='true'] {\n  border-bottom: 2px solid rgb(80, 80, 80) !important;\n} */\n.cellData.disabled {\n  background: rgba(153, 153, 153, 15%);\n  cursor: var(--cell-cursor, not-allowed);\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.roomRow .room {\n  cursor: pointer;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.roomRow .room:hover {\n  background: #e0e0e0;\n}\n.roomRow .room:hover[data-hk-enabled='false'] {\n  background: white;\n  cursor: default;\n}\n.cellData {\n  width: 58px;\n  height: 30px;\n  display: inline-grid;\n  border-top: 1px solid #e0e0e0;\n  border-left: 1px solid #e0e0e0;\n  vertical-align: top;\n}\n.triangle-button {\n  --size: 10px;\n  position: absolute;\n  right: -6px;\n  top: -1px;\n\n  width: 0;\n  height: 0;\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  width: 0;\n  height: 0;\n  border-left: var(--size) solid transparent;\n  border-right: var(--size) solid transparent;\n  border-bottom: var(--size) solid var(--in-toggle-color);\n\n  transform: rotate(45deg);\n}\n.cellData:nth-child(2) {\n  border-left: 0px;\n}\n\n.cellData:last-child {\n  border-right: 1px solid rgba(186, 191, 199, 0.5);\n}\n\n.roomHeaderCell {\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n  background: #fff;\n  border-right: 1px solid #ccc;\n  width: 170px;\n  z-index: 1;\n}\n\n.currentDay {\n  background-color: #e3f3fa;\n}\n\n.dragOverHighlight {\n  background-color: #f5f5dc !important;\n}\n\n.selectedDay {\n  background-color: #f9f9c9 !important;\n}\n\n.categoryTitle {\n  grid-template-columns: 1fr 20px;\n  padding-left: 10px;\n  cursor: pointer;\n  height: 40px;\n  font-size: 0.9em;\n}\n.categoryTitle > :nth-child(1) {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.roomTitle {\n  padding-left: 20px;\n  font-size: 0.9em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.roomTitle > :nth-child(1) {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.roomTitle.pl10 {\n  padding-left: 10px;\n}\n\n.categoryPriceColumn {\n  align-items: center;\n  height: 40px;\n  -webkit-user-select: none;\n  user-select: none;\n  position: relative;\n}\n\n/* BOOKING EVENT */\n.bookingEventsContainer {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n","import { Component, Host, Listen, Prop, State, h, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\n\nimport moment from 'moment';\n\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { compareTime, createDateWithOffsetAndHour } from '@/utils/booking';\n\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\n\nimport { PhysicalRoom, RoomHkStatus, RoomType } from '@/models/booking.dto';\nimport { ICountry } from '@/models/IBooking';\n\nexport type RoomCategory = RoomType & { expanded: boolean };\n\n@Component({\n  tag: 'igl-cal-body',\n  styleUrl: 'igl-cal-body.css',\n  scoped: true,\n})\nexport class IglCalBody {\n  @Prop() isScrollViewDragging: boolean;\n  @Prop() propertyId: number;\n  @Prop() calendarData: { [key: string]: any };\n  @Prop() today: String;\n  @Prop() currency;\n  @Prop() language: string;\n  @Prop() countries: ICountry[];\n  @Prop() highlightedDate: string;\n\n  @State() dragOverElement: string = '';\n  @State() renderAgain: boolean = false;\n  @State() selectedRoom: PhysicalRoom;\n  @State() isLoading: 'middle' | 'right' | null = null;\n\n  @Event() addBookingDatasEvent: EventEmitter<any[]>;\n  @Event() showBookingPopup: EventEmitter;\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\n\n  @State() selectedRooms: { [key: string]: any } = {};\n  private fromRoomId: number = -1;\n  private newEvent: { [key: string]: any };\n  private currentDate = new Date();\n  private hkModal: HTMLIrModalElement;\n  private housekeepingService = new HouseKeepingService();\n  private bookingMap = new Map<string | number, string | number>();\n  private interactiveTitle: HTMLIrInteractiveTitleElement[] = [];\n  private dayRateMap = new Map<string, (typeof calendar_dates.days)[0]['rate']>();\n  // private disabledCellsCache = new Map<string, boolean>();\n\n  componentWillLoad() {\n    this.currentDate.setHours(0, 0, 0, 0);\n    this.bookingMap = this.getBookingMap(this.getBookingData());\n    calendar_dates.days.forEach(day => {\n      this.dayRateMap.set(day.day, day.rate);\n    });\n    this.updateDisabledCellsCache();\n  }\n\n  @Watch('calendarData')\n  handleCalendarDataChange() {\n    this.bookingMap = this.getBookingMap(this.getBookingData());\n    this.updateDisabledCellsCache();\n  }\n\n  @Listen('dragOverHighlightElement', { target: 'window' })\n  dragOverHighlightElementHandler(event: CustomEvent) {\n    this.dragOverElement = event.detail.dragOverElement;\n  }\n\n  @Listen('gotoRoomEvent', { target: 'window' })\n  gotoRoom(event: CustomEvent) {\n    let roomId = event.detail.roomId;\n    let category = this.getRoomCategoryByRoomId(roomId);\n    if (!category.expanded) {\n      this.toggleCategory(category);\n      setTimeout(() => {\n        this.scrollToRoom(roomId);\n      }, 10);\n    } else {\n      this.scrollToRoom(roomId);\n    }\n  }\n\n  @Listen('addToBeAssignedEvent', { target: 'window' })\n  addToBeAssignedEvents(event: CustomEvent) {\n    // let roomId = event.detail.roomId;\n    this.addBookingDatas(event.detail.data);\n    this.renderElement();\n  }\n\n  @Listen('closeBookingWindow', { target: 'window' })\n  closeWindow() {\n    let ind = this.getBookingData().findIndex(ev => ev.ID === 'NEW_TEMP_EVENT');\n    if (ind !== -1) {\n      this.getBookingData().splice(ind, 1);\n      console.log('removed item..');\n      this.renderElement();\n    }\n  }\n\n  private scrollToRoom(roomId: number) {\n    this.scrollPageToRoom.emit({\n      key: 'scrollPageToRoom',\n      id: roomId,\n      refClass: 'room_' + roomId,\n    });\n  }\n\n  private getRoomCategoryByRoomId(roomId) {\n    return this.calendarData.roomsInfo.find(roomCategory => {\n      return this.getCategoryRooms(roomCategory).find(room => this.getRoomId(room) === roomId);\n    });\n  }\n\n  private getCategoryName(roomCategory) {\n    return roomCategory.name;\n  }\n\n  private getCategoryId(roomCategory) {\n    return roomCategory.id;\n  }\n\n  private getTotalPhysicalRooms(roomCategory) {\n    return this.getCategoryRooms(roomCategory).length;\n  }\n\n  private getCategoryRooms(roomCategory: RoomCategory) {\n    return (roomCategory && roomCategory.physicalrooms) || [];\n  }\n\n  private getRoomName(roomInfo) {\n    return roomInfo.name;\n  }\n\n  private getRoomId(roomInfo) {\n    return roomInfo.id;\n  }\n\n  private getRoomById(physicalRooms, roomId) {\n    return physicalRooms.find(physical_room => this.getRoomId(physical_room) === roomId);\n  }\n\n  private getBookingData() {\n    return this.calendarData.bookingEvents;\n  }\n\n  private addBookingDatas(aData) {\n    this.addBookingDatasEvent.emit(aData);\n  }\n\n  private getSelectedCellRefName(roomId, selectedDay) {\n    return 'room_' + roomId + '_' + selectedDay.currentDate;\n  }\n\n  // getSplitBookingEvents(newEvent) {\n  //   return this.getBookingData().some(bookingEvent => !['003', '002', '004'].includes(bookingEvent.STATUS_CODE) && newEvent.FROM_DATE === bookingEvent.FROM_DATE);\n  // }\n  private getSplitBookingEvents(newEvent) {\n    console.log(newEvent.FROM_DATE);\n    return this.getBookingData().some(bookingEvent => {\n      if (!['003', '002', '004'].includes(bookingEvent.STATUS_CODE)) {\n        if (\n          new Date(newEvent.FROM_DATE).getTime() >= new Date(bookingEvent.FROM_DATE).getTime() &&\n          new Date(newEvent.FROM_DATE).getTime() <= new Date(bookingEvent.TO_DATE).getTime()\n        ) {\n          return bookingEvent;\n        }\n      }\n    });\n  }\n\n  private addNewEvent(roomCategory) {\n    let keys = Object.keys(this.selectedRooms);\n    let startDate: Date, endDate: Date;\n\n    if (this.selectedRooms[keys[0]].currentDate < this.selectedRooms[keys[1]].currentDate) {\n      startDate = new Date(this.selectedRooms[keys[0]].currentDate);\n      endDate = new Date(this.selectedRooms[keys[1]].currentDate);\n    } else {\n      startDate = new Date(this.selectedRooms[keys[1]].currentDate);\n      endDate = new Date(this.selectedRooms[keys[0]].currentDate);\n    }\n\n    const dateDifference = Math.round(Math.abs((endDate.getTime() - startDate.getTime()) / 86_400_000));\n    this.newEvent = {\n      ID: 'NEW_TEMP_EVENT',\n      NAME: <span>&nbsp;</span>,\n      EMAIL: '',\n      PHONE: '',\n      convertBooking: false,\n      REFERENCE_TYPE: 'PHONE',\n      FROM_DATE: startDate.getFullYear() + '-' + this.getTwoDigitNumStr(startDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(startDate.getDate()),\n      TO_DATE: endDate.getFullYear() + '-' + this.getTwoDigitNumStr(endDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(endDate.getDate()),\n      BALANCE: '',\n      NOTES: '',\n      RELEASE_AFTER_HOURS: 0,\n      PR_ID: this.selectedRooms[keys[0]].roomId,\n      ENTRY_DATE: '',\n      NO_OF_DAYS: dateDifference,\n      ADULTS_COUNT: 1,\n      COUNTRY: '',\n      INTERNAL_NOTE: '',\n      RATE: '',\n      TOTAL_PRICE: '',\n      RATE_PLAN: '',\n      ARRIVAL_TIME: '',\n      TITLE: locales.entries.Lcz_NewBookingFor,\n      roomsInfo: [roomCategory],\n      CATEGORY: roomCategory.name,\n      event_type: 'BAR_BOOKING',\n      STATUS: 'TEMP-EVENT',\n      defaultDateRange: {\n        fromDate: null,\n        fromDateStr: '',\n        toDate: null,\n        toDateStr: '',\n        dateDifference,\n        editable: false,\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\n      },\n    };\n\n    let popupTitle = roomCategory.name + ' ' + this.getRoomName(this.getRoomById(this.getCategoryRooms(roomCategory), this.selectedRooms[keys[0]].roomId));\n    this.newEvent.BLOCK_DATES_TITLE = `${locales.entries.Lcz_BlockDatesFor} ${popupTitle}`;\n    this.newEvent.TITLE += popupTitle;\n    this.newEvent.defaultDateRange.toDate = new Date(this.newEvent.TO_DATE + 'T00:00:00');\n    this.newEvent.defaultDateRange.fromDate = new Date(this.newEvent.FROM_DATE + 'T00:00:00');\n    this.newEvent.defaultDateRange.fromDateStr = this.getDateStr(this.newEvent.defaultDateRange.fromDate);\n    this.newEvent.defaultDateRange.toDateStr = this.getDateStr(this.newEvent.defaultDateRange.toDate);\n    this.newEvent.ENTRY_DATE = new Date().toISOString();\n    this.newEvent.legendData = this.calendarData.formattedLegendData;\n\n    let splitBookingEvents = this.getSplitBookingEvents(this.newEvent);\n    if (splitBookingEvents) {\n      this.newEvent.splitBookingEvents = splitBookingEvents;\n    }\n\n    this.getBookingData().push(this.newEvent);\n    return this.newEvent;\n  }\n\n  private getTwoDigitNumStr(num) {\n    return num <= 9 ? '0' + num : num;\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n\n  private removeNewEvent() {\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(events => events.ID !== 'NEW_TEMP_EVENT');\n    this.newEvent = null;\n  }\n\n  // private clickCell(roomId, selectedDay, roomCategory) {\n  //   if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\n  //     let refKey = this.getSelectedCellRefName(roomId, selectedDay);\n  //     if (this.selectedRooms.hasOwnProperty(refKey)) {\n  //       this.removeNewEvent();\n  //       delete this.selectedRooms[refKey];\n  //       this.renderElement();\n  //       return;\n  //     } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\n  //       this.removeNewEvent();\n  //       this.selectedRooms = {};\n  //       this.selectedRooms[refKey] = { ...selectedDay, roomId };\n  //       this.fromRoomId = roomId;\n  //       this.renderElement();\n  //     } else {\n  //       // create bar;\n  //       this.selectedRooms[refKey] = { ...selectedDay, roomId };\n  //       this.addNewEvent(roomCategory);\n  //       this.selectedRooms = {};\n  //       this.renderElement();\n  //       this.showNewBookingPopup(this.newEvent);\n  //     }\n  //   }\n  // }\n  private clickCell(roomId: number, selectedDay: any, roomCategory: RoomCategory) {\n    if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\n      let refKey = this.getSelectedCellRefName(roomId, selectedDay);\n      if (this.selectedRooms.hasOwnProperty(refKey)) {\n        this.removeNewEvent();\n        delete this.selectedRooms[refKey];\n        this.renderElement();\n        return;\n      } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\n        this.removeNewEvent();\n        this.selectedRooms = {};\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\n        this.fromRoomId = roomId;\n        this.renderElement();\n      } else {\n        const keys = Object.keys(this.selectedRooms);\n        const startDate = moment(this.selectedRooms[keys[0]].value, 'YYYY-MM-DD');\n        const endDate = moment(selectedDay.value, 'YYYY-MM-DD');\n        let cursor = startDate.clone().add(1, 'days');\n        let disabledCount = 0;\n        while (cursor.isBefore(endDate, 'day')) {\n          const dateKey = cursor.format('YYYY-MM-DD');\n          if (this.isCellDisabled(roomId, dateKey)) {\n            disabledCount++;\n          }\n          cursor.add(1, 'days');\n        }\n        if (disabledCount >= 1) {\n          this.selectedRooms = {};\n          this.fromRoomId = roomId;\n          this.renderElement();\n          return;\n        }\n\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\n        this.addNewEvent(roomCategory);\n        this.selectedRooms = {};\n        this.renderElement();\n        this.showNewBookingPopup(this.newEvent);\n      }\n    }\n  }\n  private showNewBookingPopup(data) {\n    console.log(data);\n    // this.showBookingPopup.emit({key: \"add\", data});\n  }\n\n  private renderElement() {\n    this.renderAgain = !this.renderAgain;\n  }\n  private getBookingMap(bookings: any[]): Map<string | number, string | number> {\n    const bookingMap = new Map<string | number, string | number>();\n    const today = moment().startOf('day');\n\n    for (const booking of bookings) {\n      const fromDate = moment(booking.FROM_DATE, 'YYYY-MM-DD').startOf('day');\n      const toDate = moment(booking.TO_DATE, 'YYYY-MM-DD').startOf('day');\n\n      // Check if today is between fromDate and toDate, inclusive.\n      if (today.isSameOrAfter(fromDate) && today.isSameOrBefore(toDate)) {\n        if (!bookingMap.has(booking.PR_ID)) {\n          bookingMap.set(booking.PR_ID, booking.BOOKING_NUMBER);\n        } else {\n          if (compareTime(moment().toDate(), createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour))) {\n            bookingMap.set(booking.PR_ID, booking.BOOKING_NUMBER);\n          }\n        }\n      }\n    }\n\n    return bookingMap;\n  }\n  private getGeneralCategoryDayColumns(addClass: string, isCategory: boolean = false, index: number) {\n    return calendar_dates.days.map(dayInfo => {\n      // const isActive = true;\n      return (\n        <div\n          class={`cellData  font-weight-bold categoryPriceColumn ${addClass + '_' + dayInfo.day} ${\n            dayInfo.day === this.today || dayInfo.day === this.highlightedDate ? 'currentDay' : ''\n          }`}\n        >\n          {isCategory ? (\n            <Fragment>\n              <span class={'categoryName'}>\n                {dayInfo.rate[index].exposed_inventory.rts}\n                {/* <button class={'triangle-button'} style={{ '--in-toggle-color': isActive ? 'green' : '#ff4961' }}></button> */}\n                {/* <br />\n              {dayInfo.rate[index].exposed_inventory.offline} */}\n              </span>\n            </Fragment>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    });\n  }\n\n  private getGeneralRoomDayColumns(roomId: string, roomCategory: RoomCategory, roomName: string) {\n    return this.calendarData.days.map(dayInfo => {\n      const isCellDisabled = this.isCellDisabled(Number(roomId), dayInfo.value);\n      const prevDate = moment(dayInfo.value, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD');\n      const isDisabled = (isCellDisabled && Object.keys(this.selectedRooms).length === 0) || (isCellDisabled && this.isCellDisabled(Number(roomId), prevDate));\n      const isSelected = this.selectedRooms.hasOwnProperty(this.getSelectedCellRefName(roomId, dayInfo));\n      const isCurrentDate = dayInfo.day === this.today || dayInfo.day === this.highlightedDate;\n      const cleaningDates = calendar_dates.cleaningTasks.has(+roomId) ? calendar_dates.cleaningTasks.get(+roomId) : null;\n      const shouldBeCleaned = ['001', '003'].includes(calendar_data.cleaning_frequency?.code) ? false : cleaningDates?.has(dayInfo.value);\n      return (\n        <div\n          class={`cellData position-relative roomCell ${isCellDisabled ? 'disabled' : ''} ${'room_' + roomId + '_' + dayInfo.day} ${isCurrentDate ? 'currentDay' : ''} ${\n            this.dragOverElement === roomId + '_' + dayInfo.day ? 'dragOverHighlight' : ''\n          } ${isSelected ? 'selectedDay' : ''}`}\n          style={!isDisabled && { '--cell-cursor': 'default' }}\n          onClick={() => {\n            if (isDisabled) {\n              return;\n            }\n            this.clickCell(Number(roomId), dayInfo, roomCategory);\n          }}\n          aria-label={roomName}\n          role=\"gridcell\"\n          data-room-id={roomId}\n          data-date={dayInfo.value}\n          aria-current={isCurrentDate ? 'date' : undefined}\n          data-room-name={roomName}\n          data-dirty-room={String(shouldBeCleaned)}\n          aria-disabled={String(isDisabled)}\n          aria-selected={Boolean(isSelected)}\n          // tabIndex={-1}\n        >\n          {/* <button class={'triangle-button'} style={{ '--in-toggle-color': isDisabled ? 'green' : '#ff4961' }}></button> */}\n        </div>\n      );\n    });\n  }\n\n  private toggleCategory(roomCategory: RoomCategory) {\n    roomCategory.expanded = !roomCategory.expanded;\n    this.renderElement();\n  }\n\n  private getRoomCategoryRow(roomCategory: RoomCategory, index: number) {\n    if (this.getTotalPhysicalRooms(roomCategory) <= 1 || !roomCategory.is_active) {\n      return null;\n    }\n    return (\n      <div class=\"roomRow\">\n        <div\n          class={`cellData text-left align-items-center roomHeaderCell categoryTitle ${'category_' + this.getCategoryId(roomCategory)}`}\n          onClick={() => this.toggleCategory(roomCategory)}\n        >\n          <div class={'categoryName'}>\n            <ir-interactive-title popoverTitle={this.getCategoryName(roomCategory)}></ir-interactive-title>\n            {/* <ir-popover popoverTitle={this.getCategoryName(roomCategory)}></ir-popover> */}\n          </div>\n          {roomCategory.expanded ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" height={14} width={14}>\n              <path\n                fill=\"#6b6f82\"\n                d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"\n              />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" height={14} width={14}>\n              <path\n                fill=\"#6b6f82\"\n                d=\"M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z\"\n              />\n            </svg>\n          )}\n          {/* <i class={`la la-angle-${roomCategory.expanded ? 'down' : 'right'}`}></i> */}\n        </div>\n        {this.getGeneralCategoryDayColumns('category_' + this.getCategoryId(roomCategory), true, index)}\n      </div>\n    );\n  }\n\n  /**\n   * Renders a list of active rooms for an expanded room category. Returns an array of JSX elements, including headers and day columns, or an empty array if the category is collapsed or contains no active rooms.\n   *\n   * @param {RoomCategory} roomCategory - The category containing room details.\n   */\n  private getRoomsByCategory(roomCategory: RoomCategory) {\n    // Check accordion is expanded.\n    if (!roomCategory.expanded) {\n      return null;\n    }\n    return this.getCategoryRooms(roomCategory)?.map(room => {\n      if (!room.is_active) {\n        return null;\n      }\n      const haveSingleRooms = this.getTotalPhysicalRooms(roomCategory) <= 1;\n      const name = haveSingleRooms ? this.getCategoryName(roomCategory) : this.getRoomName(room);\n      return (\n        <div class=\"roomRow\">\n          <div\n            class={`cellData room text-left align-items-center roomHeaderCell  roomTitle ${this.getTotalPhysicalRooms(roomCategory) <= 1 ? 'pl10' : ''} ${\n              'room_' + this.getRoomId(room)\n            }`}\n            data-room-name={name}\n            data-hk-enabled={String(calendar_data.housekeeping_enabled)}\n            data-room={this.getRoomId(room)}\n            onClick={() => {\n              if (!calendar_data.housekeeping_enabled) {\n                return;\n              }\n              this.selectedRoom = room;\n              this.hkModal.openModal();\n            }}\n            onMouseEnter={() => {\n              this.interactiveTitle[room.id]?.style?.setProperty('--ir-interactive-hk-bg', '#e0e0e0');\n            }}\n            onMouseLeave={() => {\n              this.interactiveTitle[room.id]?.style?.removeProperty('--ir-interactive-hk-bg');\n            }}\n          >\n            <ir-interactive-title\n              ref={el => {\n                if (el) this.interactiveTitle[room.id] = el;\n              }}\n              style={room.hk_status === '003' && { '--dot-color': '#ededed' }}\n              hkStatus={calendar_data.housekeeping_enabled && room.hk_status !== '001'}\n              popoverTitle={name}\n            >\n              {room.hk_status !== '001' && (\n                <div slot=\"end\" class=\"d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n                  {room.hk_status === '004' ? (\n                    <svg height={14} width={14} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 640\">\n                      <title>Inspected</title>\n                      <path\n                        fill=\"green\"\n                        d=\"M530.8 134.1C545.1 144.5 548.3 164.5 537.9 178.8L281.9 530.8C276.4 538.4 267.9 543.1 258.5 543.9C249.1 544.7 240 541.2 233.4 534.6L105.4 406.6C92.9 394.1 92.9 373.8 105.4 361.3C117.9 348.8 138.2 348.8 150.7 361.3L252.2 462.8L486.2 141.1C496.6 126.8 516.6 123.6 530.9 134z\"\n                      />\n                    </svg>\n                  ) : (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"13.5\" viewBox=\"0 0 576 512\" style={{ display: 'block' }}>\n                      {room.hk_status === '002' && <title>This unit is dirty</title>}\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M566.6 54.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192-34.7-34.7c-4.2-4.2-10-6.6-16-6.6c-12.5 0-22.6 10.1-22.6 22.6l0 29.1L364.3 320l29.1 0c12.5 0 22.6-10.1 22.6-22.6c0-6-2.4-11.8-6.6-16l-34.7-34.7 192-192zM341.1 353.4L222.6 234.9c-42.7-3.7-85.2 11.7-115.8 42.3l-8 8C76.5 307.5 64 337.7 64 369.2c0 6.8 7.1 11.2 13.2 8.2l51.1-25.5c5-2.5 9.5 4.1 5.4 7.9L7.3 473.4C2.7 477.6 0 483.6 0 489.9C0 502.1 9.9 512 22.1 512l173.3 0c38.8 0 75.9-15.4 103.4-42.8c30.6-30.6 45.9-73.1 42.3-115.8z\"\n                      />\n                    </svg>\n                  )}\n                </div>\n              )}\n            </ir-interactive-title>\n          </div>\n          {this.getGeneralRoomDayColumns(this.getRoomId(room), roomCategory, name)}\n        </div>\n      );\n    });\n  }\n\n  private getRoomRows() {\n    return this.calendarData.roomsInfo?.map((roomCategory, index) => {\n      if (roomCategory.is_active) {\n        return (\n          <Fragment>\n            {this.getRoomCategoryRow(roomCategory, index)}\n            {roomCategory.expanded && this.getRoomsByCategory(roomCategory)}\n          </Fragment>\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n  private async confirmHousekeepingUpdate(e: CustomEvent, status: RoomHkStatus) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      this.isLoading = status === '004' ? 'right' : 'middle';\n      await this.housekeepingService.setExposedUnitHKStatus({\n        property_id: this.propertyId,\n        // housekeeper: this.selectedRoom?.housekeeper ? { id: this.selectedRoom?.housekeeper?.id } : null,\n        status: {\n          code: status,\n        },\n        unit: {\n          id: this.selectedRoom?.id,\n        },\n      });\n      if (['001', '004'].includes(status)) {\n        await this.housekeepingService.executeHKAction({\n          actions: [\n            {\n              description: 'Cleaned',\n              hkm_id: this.selectedRoom?.housekeeper?.id || null,\n              unit_id: this.selectedRoom?.id,\n              booking_nbr: this.bookingMap.get(this.selectedRoom?.id) ?? null,\n              status: status as any,\n            },\n          ],\n        });\n      }\n    } finally {\n      this.isLoading = null;\n      this.selectedRoom = null;\n      this.hkModal.closeModal();\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"bodyContainer\">\n          {this.getRoomRows()}\n          <div class=\"bookingEventsContainer preventPageScroll\">\n            {this.getBookingData()?.map(bookingEvent => {\n              return (\n                <igl-booking-event\n                  data-testid={`booking_${bookingEvent.BOOKING_NUMBER}`}\n                  data-room-name={bookingEvent.roomsInfo?.find(r => r.id === bookingEvent.RATE_TYPE)?.physicalrooms.find(r => r.id === bookingEvent.PR_ID)?.name}\n                  language={this.language}\n                  is_vacation_rental={this.calendarData.is_vacation_rental}\n                  countries={this.countries}\n                  currency={this.currency}\n                  data-component-id={bookingEvent.ID}\n                  bookingEvent={bookingEvent}\n                  allBookingEvents={this.getBookingData()}\n                ></igl-booking-event>\n              );\n            })}\n          </div>\n        </div>\n        <ir-modal\n          ref={el => (this.hkModal = el)}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          middleBtnText={this.renderModalMiddleButtonText()}\n          middleBtnActive\n          rightBtnText={this.renderModalRightButtonText()}\n          modalBody={this.renderModalBody()}\n          onConfirmModal={e => this.confirmHousekeepingUpdate(e, '004')}\n          onMiddleModal={e => this.confirmHousekeepingUpdate(e, this.selectedRoom?.hk_status === '002' ? '001' : '002')}\n          autoClose={false}\n          isMiddleButtonLoading={this.isLoading === 'middle'}\n          isLoading={this.isLoading === 'right'}\n          onCancelModal={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.selectedRoom = null;\n            this.hkModal.closeModal();\n          }}\n        ></ir-modal>\n      </Host>\n    );\n  }\n\n  private renderModalBody() {\n    if (!this.selectedRoom) {\n      return null;\n    }\n    return (\n      <p>Update unit {this.selectedRoom?.name} to ...</p>\n      // <ir-select\n      //   showFirstOption={false}\n      //   selectedValue={this.selectedRoom?.hk_status === '001' ? '001' : '002'}\n      //   data={[\n      //     { text: 'Clean', value: '001' },\n      //     { text: 'Dirty', value: '002' },\n      //   ]}\n      //   onSelectChange={e => (this.selectedHKStatus = e.detail)}\n      // ></ir-select>\n    );\n  }\n  private renderModalMiddleButtonText() {\n    if (!this.selectedRoom) {\n      return null;\n    }\n    return this.selectedRoom.hk_status === '002' ? 'Clean' : 'Dirty';\n  }\n  private renderModalRightButtonText() {\n    if (!this.selectedRoom) {\n      return null;\n    }\n    return this.selectedRoom.hk_status !== '004' ? 'Clean & Inspected' : 'Clean';\n  }\n\n  private updateDisabledCellsCache() {\n    calendar_dates.disabled_cells.clear();\n    this.calendarData.roomsInfo?.forEach((roomCategory, categoryIndex) => {\n      if (roomCategory.is_active) {\n        this.getCategoryRooms(roomCategory)?.forEach(room => {\n          if (room.is_active) {\n            this.calendarData.days.forEach(dayInfo => {\n              const cellKey = this.getCellKey(room.id, dayInfo.value);\n              calendar_dates.disabled_cells.set(cellKey, {\n                disabled: !dayInfo.rate[categoryIndex].is_available_to_book,\n                reason: 'stop_sale',\n              });\n            });\n          }\n        });\n      }\n    });\n  }\n\n  private getCellKey(roomId: number, day: string): string {\n    return `${roomId}_${day}`;\n  }\n\n  private isCellDisabled(roomId: number, day: string): boolean {\n    const key = this.getCellKey(roomId, day);\n    if (!calendar_dates.disabled_cells.has(key)) {\n      return false;\n    }\n    const { disabled } = calendar_dates.disabled_cells.get(key);\n    return disabled;\n  }\n}\n",":host {\n  display: block;\n  position: sticky;\n  bottom: 0;\n  width: max-content;\n  z-index: 3;\n}\n\n.footerCell {\n  display: -moz-inline-grid;\n  display: -ms-inline-grid;\n  display: inline-grid;\n  position: -webkit-sticky;\n  position: sticky;\n  bottom: 0;\n  width: 58px;\n  height: 40px;\n  /* color: #b8b6b7; */\n  background: #fff;\n  vertical-align: top;\n  border-top: 1px solid #e0e0e0;\n}\n\n.bottomLeftCell {\n  left: -1px;\n  z-index: 2;\n  width: 170px;\n  text-align: left;\n  padding-left: 15px;\n  color: #000000;\n}\n\n.footerCell i {\n  margin-right: 5px;\n}\n\n.legendBtn {\n  color: #41bff3;\n  cursor: pointer;\n}\n\n.isOnline i {\n  color: #2f9c3f;\n  font-weight: bold;\n}\n\n.isOffline i {\n  font-weight: bold;\n}\n\n.isOffline {\n  color: #a40000;\n}\n\n.dayTitle {\n  font-size: 0.8em;\n  font-weight: 600;\n  display: grid;\n  user-select: none;\n  /* height: 100%;\n  \n  align-items: center;\n  text-align: center;\n  width: 100%; */\n}\n\n.currentDay .dayTitle {\n  font-weight: bold;\n  /* color: #262b31; */\n}\n\n.currentDay {\n  background-color: #e3f3fa;\n}\n\n.dayCapacityPercent {\n  font-size: 0.75em;\n}\n\n.badge-pill {\n  padding-left: 1em;\n  padding-right: 1em;\n  font-size: 0.7em;\n  margin-bottom: 2px;\n}\n","import locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'igl-cal-footer',\n  styleUrl: 'igl-cal-footer.css',\n  scoped: true,\n})\nexport class IglCalFooter {\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\n  @Prop() calendarData: { [key: string]: any };\n  @Prop() today: String;\n  @Prop() highlightedDate: string;\n\n  // private isOnline:boolean = false;\n\n  handleOptionEvent(key, data = '') {\n    this.optionEvent.emit({ key, data });\n  }\n\n  render() {\n    return (\n      <Host class=\"footerContainer\">\n        <div class=\"footerCell bottomLeftCell align-items-center preventPageScroll\">\n          <div class=\"legendBtn\" onClick={() => this.handleOptionEvent('showLegend')}>\n            <i class=\"la la-square\"></i>\n            <u>{locales.entries.Lcz_Legend}</u>\n            <span> - v1.0133</span>\n          </div>\n          {/* <div class={`${this.isOnline ? 'isOnline' : 'isOffline'}`}>\n            <i class=\"la la-share-alt isOffline\"></i><span>{this.isOnline ? \"Connected\": \"Offline\"}</span>\n          </div> */}\n        </div>\n        {this.calendarData.days.map(dayInfo => (\n          <div class=\"footerCell align-items-center\">\n            <div class={`dayTitle full-height align-items-center ${dayInfo.day === this.today || this.highlightedDate === dayInfo.day ? 'currentDay' : ''}`}>\n              {dayInfo.dayDisplayName}\n            </div>\n\n            {/* <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\n              <div class=\"dayCapacityPercent\">28.57%</div>\n              <div class=\"preventPageScroll\">\n                <span class=\"badge badge-primary badge-pill\">\n                  {index}\n                </span>\n              </div> */}\n          </div>\n        ))}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  position: absolute;\n  top: 0;\n  height: 100%;\n}\n.svg-icon {\n  height: 20px;\n  width: 20px;\n}\n.darkGrey {\n  background: #ececec;\n}\n.btn {\n  pointer-events: auto;\n}\n\n.stickyCell {\n  display: -ms-inline-grid;\n  display: -moz-inline-grid;\n  display: inline-grid;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0px;\n  height: 82px;\n  display: inline-block;\n  vertical-align: top;\n  z-index: 2;\n}\n\n.headersContainer {\n  background-color: #ffffff;\n}\n\n.headerCell {\n  display: inline-grid;\n  width: 58px;\n  height: 58px;\n  vertical-align: top;\n  background-color: #ffffff;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.monthsContainer {\n  height: 20px;\n  background-color: #ffffff;\n  margin-bottom: 0.2em;\n}\n\n.monthCell {\n  display: inline-grid;\n  height: 20px;\n  background-color: #ececec;\n  border-right: 1px solid #c7c7c7;\n  vertical-align: top;\n}\n\n.monthCell:nth-child(odd) {\n  background-color: #dddddd;\n}\n\n.monthTitle {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 0.9em;\n  text-transform: uppercase;\n  font-weight: bold;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.topLeftCell {\n  left: 0px;\n  z-index: 3;\n  width: 170px;\n  background-color: #ffffff;\n  display: -ms-inline-grid;\n  display: -moz-inline-grid;\n  display: inline-grid;\n}\n.datePickerHidden {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  opacity: 0;\n  cursor: pointer;\n  /* z-index: 1; */\n  z-index: 1;\n}\n\n.date_btn {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.date_btn:hover {\n  background: #f6f6f6;\n  border-radius: 0.3rem;\n}\n.caledarBtns {\n  position: relative;\n  cursor: pointer;\n  padding: 0.4rem;\n}\n\n.caledarBtns:hover {\n  background-color: #f6f6f6;\n}\n\n.dayTitle {\n  font-size: 0.8em;\n  font-weight: 600;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.currentDay .dayTitle {\n  font-weight: bold;\n}\n\n.currentDay {\n  background-color: #e3f3fa;\n}\n\n.dayCapacityPercent {\n  font-size: 0.75em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.badge-pill {\n  padding: 3px 1em;\n  font-size: 0.8em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.searchContiner {\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.searchListContainer {\n  background: #fff;\n  border: 1px solid #ccc;\n  border-bottom: none;\n}\n\n.searchListItem {\n  background: white;\n  border-bottom: 1px solid #ccc;\n  padding-left: 8px;\n}\n\n.badge-light {\n  background-color: #999999;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n.min-width-full {\n  min-width: 100%;\n}\n","import { Component, Event, EventEmitter, Host, Prop, h, State, Listen, Watch } from '@stencil/core';\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\nimport { dateToFormattedString } from '@/utils/utils';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { handleUnAssignedDatesChange } from '@/stores/unassigned_dates.store';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\n\n@Component({\n  tag: 'igl-cal-header',\n  styleUrl: 'igl-cal-header.css',\n  scoped: true,\n})\nexport class IglCalHeader {\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\n  @Event({ bubbles: true, composed: true }) gotoRoomEvent: EventEmitter<{\n    [key: string]: any;\n  }>;\n  @Event({ bubbles: true, composed: true }) gotoToBeAssignedDate: EventEmitter<{\n    [key: string]: any;\n  }>;\n  @Prop() calendarData: { [key: string]: any };\n  @Prop() today: String;\n  @Prop() propertyid: number;\n  @Prop() unassignedDates;\n  @Prop() to_date: string;\n  @Prop() highlightedDate: string;\n  @State() renderAgain: boolean = false;\n  @State() unassignedRoomsNumber: any = {};\n  // private searchValue: string = '';\n  // private searchList: { [key: string]: any }[] = [];\n  private roomsList: { [key: string]: any }[] = [];\n  private toBeAssignedService = new ToBeAssignedService();\n  dateRef: HTMLIrButtonElement;\n  componentWillLoad() {\n    try {\n      this.initializeRoomsList();\n\n      if (!this.calendarData.is_vacation_rental) {\n        handleUnAssignedDatesChange('unassigned_dates', newValue => {\n          if (Object.keys(newValue).length > 0) {\n            this.fetchAndAssignUnassignedRooms();\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in componentWillLoad:', error);\n    }\n  }\n  @Watch('unassignedDates')\n  handleCalendarDataChanged() {\n    this.fetchAndAssignUnassignedRooms();\n  }\n  private initializeRoomsList() {\n    this.roomsList = [];\n    this.calendarData.roomsInfo.forEach(category => {\n      this.roomsList = this.roomsList.concat(...category.physicalrooms);\n    });\n  }\n\n  private async fetchAndAssignUnassignedRooms() {\n    await this.assignRoomsToDate();\n  }\n\n  private async assignRoomsToDate() {\n    try {\n      const { fromDate, toDate, data } = this.unassignedDates;\n      let dt = new Date(fromDate);\n      dt.setHours(0, 0, 0, 0);\n      let endDate = dt.getTime();\n      while (endDate <= new Date(toDate).getTime()) {\n        const selectedDate = moment(endDate).format('D_M_YYYY');\n        if (data[endDate]) {\n          const result = await this.toBeAssignedService.getUnassignedRooms(\n            { from_date: this.calendarData.from_date, to_date: this.calendarData.to_date },\n            this.propertyid,\n            dateToFormattedString(new Date(endDate)),\n            this.calendarData.roomsInfo,\n            this.calendarData.formattedLegendData,\n          );\n          this.unassignedRoomsNumber[selectedDate] = result.length;\n        } else if (this.unassignedRoomsNumber[selectedDate]) {\n          const res = this.unassignedRoomsNumber[selectedDate] - 1;\n          this.unassignedRoomsNumber[selectedDate] = res < 0 ? 0 : res;\n        }\n        const newEndDate = moment(endDate).add(1, 'days').toDate();\n        newEndDate.setHours(0, 0, 0, 0);\n        endDate = newEndDate.getTime();\n        this.renderView();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  @Listen('reduceAvailableUnitEvent', { target: 'window' })\n  handleReduceAvailableUnitEvent(event: CustomEvent<{ fromDate: string; toDate: string }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const { fromDate, toDate } = event.detail;\n    let endDate = new Date(fromDate).getTime();\n    while (endDate < new Date(toDate).getTime()) {\n      const selectedDate = moment(endDate).format('D_M_YYYY');\n      this.unassignedRoomsNumber[selectedDate] = this.unassignedRoomsNumber[selectedDate] - 1;\n      endDate = moment(endDate).add(1, 'days').toDate().getTime();\n    }\n    this.renderView();\n  }\n\n  showToBeAssigned(dayInfo) {\n    if (this.unassignedRoomsNumber[dayInfo.day] || 0) {\n      this.handleOptionEvent('showAssigned');\n      setTimeout(() => {\n        this.gotoToBeAssignedDate.emit({\n          key: 'gotoToBeAssignedDate',\n          data: dayInfo.currentDate,\n        });\n      }, 100);\n    } else {\n      // do nothing as the value is 0;\n    }\n  }\n\n  handleOptionEvent(key, data: any = '') {\n    this.optionEvent.emit({ key, data });\n  }\n\n  handleDateSelect(event: CustomEvent) {\n    if (Object.keys(event.detail).length > 0) {\n      this.handleOptionEvent('calendar', event.detail);\n    }\n  }\n\n  handleClearSearch() {\n    // this.searchValue = '';\n    // this.searchList = [];\n    this.renderView();\n  }\n\n  handleFilterRooms(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    let value = inputElement.value.trim();\n    // this.searchValue = value;\n    value = value.toLowerCase();\n    if (value === '') {\n      this.handleClearSearch();\n    } else {\n      // this.searchList = this.roomsList.filter(room => room.name.toLocaleLowerCase().indexOf(value) != -1);\n    }\n    this.renderView();\n  }\n\n  handleScrollToRoom(roomId) {\n    this.handleClearSearch();\n    this.gotoRoomEvent.emit({ key: 'gotoRoom', roomId });\n  }\n\n  getStringDateFormat(dt) {\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\n  }\n\n  getNewBookingModel() {\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n    let from_date = this.getStringDateFormat(today);\n    today.setDate(today.getDate() + 1);\n    today.setHours(0, 0, 0, 0);\n    let to_date = this.getStringDateFormat(today);\n    return {\n      ID: '',\n      NAME: '',\n      EMAIL: '',\n      PHONE: '',\n      REFERENCE_TYPE: 'PHONE',\n      FROM_DATE: from_date, // \"2023-07-09\",\n      TO_DATE: to_date, // \"2023-07-11\",\n      roomsInfo: this.calendarData.roomsInfo,\n      TITLE: locales.entries.Lcz_NewBooking,\n      event_type: 'PLUS_BOOKING',\n      legendData: this.calendarData.formattedLegendData,\n      defaultDateRange: {\n        fromDate: new Date(from_date), //new Date(\"2023-09-10\"),\n        fromDateStr: '', //\"10 Sep 2023\",\n        toDate: new Date(to_date), //new Date(\"2023-09-15\"),\n        toDateStr: '', // \"15 Sep 2023\",\n        dateDifference: 0,\n        editabled: true,\n        message: '',\n      },\n    };\n  }\n\n  renderView() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"stickyCell align-items-center topLeftCell preventPageScroll\">\n          <div class=\"row justify-content-around no-gutters\">\n            {/* {!this.calendarData.is_vacation_rental && (\n              <div\n                class=\"caledarBtns\"\n                onClick={() => this.handleOptionEvent('showAssigned')}\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title={locales.entries.Lcz_UnassignedUnitsTooltip}\n              >\n\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-icon\">\n                  <path\n                    fill=\"#6b6f82\"\n                    d=\"M448 160H320V128H448v32zM48 64C21.5 64 0 85.5 0 112v64c0 26.5 21.5 48 48 48H464c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zM448 352v32H192V352H448zM48 288c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48H464c26.5 0 48-21.5 48-48V336c0-26.5-21.5-48-48-48H48z\"\n                  />\n                </svg>\n              </div>\n            )} */}\n            {/* <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('calendar')} data-toggle=\"tooltip\" data-placement=\"bottom\" title={locales.entries.Lcz_Navigate}>\n          \n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" class={'svg-icon'}>\n                <path\n                  fill=\"#6b6f82\"\n                  d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n                />\n              </svg>\n\n              </div> */}\n            {/* <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('gotoToday')} data-toggle=\"tooltip\" data-placement=\"bottom\" title={locales.entries.Lcz_Today}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"svg-icon\">\n              <path\n                  fill=\"#6b6f82\"\n                  d=\"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"\n                />\n                </svg>\n                </div> */}\n            {!this.calendarData.is_vacation_rental && (\n              <ir-button\n                variant=\"icon\"\n                icon_name=\"server\"\n                style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title={locales.entries.Lcz_UnassignedUnitsTooltip}\n                onClickHandler={() => this.handleOptionEvent('showAssigned')}\n                btn_styles=\"caledarBtns\"\n                visibleBackgroundOnHover\n              ></ir-button>\n            )}\n            <ir-date-picker\n              minDate={moment().add(-2, 'months').startOf('month').format('YYYY-MM-DD')}\n              // autoApply\n              // singleDatePicker\n              onDateChanged={evt => {\n                console.log('evt', evt);\n                this.handleDateSelect(evt);\n              }}\n              // class=\"datePickerHidden\"\n              class={'date_btn'}\n              title={locales.entries.Lcz_Navigate}\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n            >\n              <ir-button\n                slot=\"trigger\"\n                btn_styles=\"caledarBtns\"\n                variant=\"icon\"\n                icon_name=\"calendar\"\n                style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}\n                onClickHandler={() => this.handleOptionEvent('calendar')}\n                visibleBackgroundOnHover\n                ref={el => (this.dateRef = el)}\n              ></ir-button>\n            </ir-date-picker>\n\n            <ir-button\n              variant=\"icon\"\n              btn_styles=\"caledarBtns\"\n              class={'pointer'}\n              icon_name=\"clock\"\n              visibleBackgroundOnHover\n              style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n              title={locales.entries.Lcz_Today}\n              onClickHandler={() => this.handleOptionEvent('gotoToday')}\n            ></ir-button>\n            <ir-button\n              variant=\"icon\"\n              btn_styles=\"caledarBtns\"\n              icon_name=\"plus\"\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n              data-testid=\"new_booking_btn\"\n              title={locales.entries.Lcz_CreateNewBooking}\n              visibleBackgroundOnHover\n              style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}\n              onClickHandler={() => this.handleOptionEvent('add', this.getNewBookingModel())}\n            ></ir-button>\n            <ir-button\n              variant=\"icon\"\n              btn_styles=\"caledarBtns\"\n              icon_name=\"calendar-xmark\"\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n              data-testid=\"new_bulk_btn\"\n              title={locales.entries.Lcz_StopOpenSale}\n              visibleBackgroundOnHover\n              style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}\n              onClickHandler={() => this.handleOptionEvent('bulk', this.getNewBookingModel())}\n            ></ir-button>\n            {/* <div\n              class=\"caledarBtns\"\n              onClick={() => this.handleOptionEvent('add', this.getNewBookingModel())}\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n              title={locales.entries.Lcz_CreateNewBooking}\n            >\n\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" class=\"svg-icon\">\n                <path\n                  fill=\"#6b6f82\"\n                  d=\"M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z\"\n                />\n              </svg>\n            </div> */}\n          </div>\n          <div class=\"row justify-content-around no-gutters searchContiner\">\n            <ir-m-combobox\n              placeholder={locales.entries.Lcz_FindUnit}\n              options={this.roomsList.map(r => ({\n                label: r.name,\n                value: r.id,\n              }))}\n              onOptionChange={e => {\n                this.handleScrollToRoom(e.detail.value);\n              }}\n            ></ir-m-combobox>\n          </div>\n        </div>\n        <div class=\"stickyCell headersContainer\">\n          <div class=\"monthsContainer\">\n            {this.calendarData.monthsInfo.map(monthInfo => (\n              <div class=\"monthCell\" style={{ width: monthInfo.daysCount * 58 + 'px' }}>\n                <div class=\"monthTitle\">{monthInfo.monthName}</div>\n              </div>\n            ))}\n          </div>\n          {this.calendarData.days.map(dayInfo => (\n            <div\n              class={`headerCell align-items-center ${'day-' + dayInfo.day} ${dayInfo.day === this.today || dayInfo.day === this.highlightedDate ? 'currentDay' : ''}`}\n              data-day={dayInfo.day}\n            >\n              {!this.calendarData.is_vacation_rental && (\n                <div class=\"preventPageScroll\">\n                  <span\n                    class={`badge badge-${this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr !== 0 ? 'info pointer' : 'light'} badge-pill`}\n                    onClick={() => this.showToBeAssigned(dayInfo)}\n                  >\n                    {this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr}\n                  </span>\n                </div>\n              )}\n              <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\n              <div class=\"dayCapacityPercent\">{dayInfo.occupancy}%</div>\n            </div>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n/* Legend */\n\n.legendHeader {\n  font-weight: 500;\n  letter-spacing: 0.05rem;\n  font-size: 1.12rem;\n  padding-top: 5px;\n  margin-bottom: 1rem;\n}\n\n.legendCloseBtn {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  cursor: pointer;\n  font-size: 1.75em;\n  line-height: 1em;\n  padding: 0.4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  transform: translateY(-50%);\n}\n\n.legendCloseBtn:hover {\n  background-color: #f6f6f6;\n}\n\n.stickyHeader {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  background-color: #ffffff;\n  z-index: 1;\n}\n\n.legendRow {\n  position: relative;\n  vertical-align: middle;\n  margin-bottom: 0.3rem;\n}\n\n.legendRow div {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.legend_skew,\n.legend_skew-bordered,\n.legend_skewsplit {\n  transform: skew(-30deg);\n  width: 15px;\n  height: 16px;\n}\n.legend_skew-bordered {\n  border: 1px solid black;\n}\n.legend_dirty-unit {\n  background-color: white !important;\n  border: 1px solid #e0e0e0;\n  height: 12px;\n  width: 20px;\n  margin-right: 1rem;\n  position: relative;\n}\n.legend_dirty-unit::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  height: 100%;\n  left: 30%;\n  right: 30%;\n  background-color: #d4d0be !important;\n}\n\n.legend_circle {\n  border-radius: 100%;\n  width: 10px;\n  height: 10px;\n  margin: 3px 3px 3px 2px;\n}\n\n.legend_skewsplit {\n  border-right: 2px solid #000000;\n}\n.headerCell .blueColor {\n  background-color: #31bef1;\n}\n.greenColor {\n  background-color: #45b16d;\n}\n.yellowColor {\n  background-color: #f4d552;\n}\n.greyColor {\n  background-color: #a0a0a0;\n}\n.redColor {\n  background-color: #f34752;\n}\n.pinkColor {\n  background-color: #f9b4b7;\n}\n\n/* Legend Calendar */\n\n.legendCalendar .legendRow {\n  margin-bottom: 0;\n}\n\n.legendCalendar .legendRow:first-child .legendCal {\n  background-color: #ececec;\n}\n\n.legendCalendar .legendRow div {\n  display: inline-block;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n.total-availability {\n  font-size: 1em !important;\n}\n.legendCalendar .legendCal {\n  width: 80px;\n  height: 25px;\n  text-align: center;\n  display: inline-grid !important;\n  align-content: center;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.legendCalendar .legendCal .badge {\n  margin-top: 0.2rem;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.legendCalendar .legendCal.legendCal-h2 {\n  height: 40px;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.br-t {\n  border-top: 1px solid #a0a0a0;\n}\n.br-s {\n  border-left: 1px solid #a0a0a0;\n  border-right: 1px solid #a0a0a0;\n}\n.br-bt {\n  border-bottom: 1px solid #a0a0a0;\n}\n\n.highphenLegend {\n  font-size: 0.9em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.highphenLegend::before {\n  width: 12px;\n  height: 0.5px;\n  content: ' ';\n  background-color: #000000;\n  vertical-align: middle;\n  display: inline-block;\n  margin-left: 5px;\n  margin-right: 5px;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n/* .badge-pill {\n  padding: 4px 1.1em;\n  font-size: 0.9em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n} */\n.badge-pill {\n  padding: 3px 1em;\n  font-size: 0.8em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.headerCell {\n  width: 70px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.dayTitle {\n  font-size: 0.8em;\n  font-weight: 600;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n.dayCapacityPercent {\n  font-size: 0.75em;\n  -webkit-user-select: none;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n.legend_rectangle {\n  height: 12px;\n  width: 20px;\n  margin-right: 1rem;\n}\n","import locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'igl-legends',\n  styleUrl: 'igl-legends.css',\n  scoped: true,\n})\nexport class IglLegends {\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\n  @Prop() legendData: { [key: string]: any };\n  handleOptionEvent(key, data = '') {\n    this.optionEvent.emit({ key, data });\n  }\n\n  render() {\n    return (\n      <Host class=\"legendContainer pr-1 text-left\">\n        <div class={'w-full'}>\n          <div class={'w-full'}>\n            <div class=\"stickyHeader pt-1 \">\n              <p class=\"legendHeader\">{locales.entries.Lcz_Legend}</p>\n              <div class=\"legendCloseBtn\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\n                {/* <i class=\"ft-chevrons-left\"></i> */}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n                  <path\n                    fill=\"#6b6f82\"\n                    d=\"M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160zm352-160l-160 160c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L301.3 256 438.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0z\"\n                  />\n                </svg>\n              </div>\n              <hr />\n            </div>\n            <div class=\"mt-2 pl-1\">\n              <table>\n                {this.legendData.map(legendInfo => {\n                  console.log(legendInfo);\n                  return (\n                    <tr key={`legend_${legendInfo.id}`} class=\"legendRow \">\n                      <td>\n                        {legendInfo.design === 'broom' ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"13.5\" viewBox=\"0 0 576 512\" style={{ display: 'block' }}>\n                            <path\n                              fill=\"black\"\n                              d=\"M566.6 54.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192-34.7-34.7c-4.2-4.2-10-6.6-16-6.6c-12.5 0-22.6 10.1-22.6 22.6l0 29.1L364.3 320l29.1 0c12.5 0 22.6-10.1 22.6-22.6c0-6-2.4-11.8-6.6-16l-34.7-34.7 192-192zM341.1 353.4L222.6 234.9c-42.7-3.7-85.2 11.7-115.8 42.3l-8 8C76.5 307.5 64 337.7 64 369.2c0 6.8 7.1 11.2 13.2 8.2l51.1-25.5c5-2.5 9.5 4.1 5.4 7.9L7.3 473.4C2.7 477.6 0 483.6 0 489.9C0 502.1 9.9 512 22.1 512l173.3 0c38.8 0 75.9-15.4 103.4-42.8c30.6-30.6 45.9-73.1 42.3-115.8z\"\n                            />\n                          </svg>\n                        ) : legendInfo.design === 'check' ? (\n                          <svg height={14} width={14} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 640\">\n                            <path\n                              fill=\"green\"\n                              d=\"M530.8 134.1C545.1 144.5 548.3 164.5 537.9 178.8L281.9 530.8C276.4 538.4 267.9 543.1 258.5 543.9C249.1 544.7 240 541.2 233.4 534.6L105.4 406.6C92.9 394.1 92.9 373.8 105.4 361.3C117.9 348.8 138.2 348.8 150.7 361.3L252.2 462.8L486.2 141.1C496.6 126.8 516.6 123.6 530.9 134z\"\n                            />\n                          </svg>\n                        ) : (\n                          <div class={`legend_${legendInfo.design}`} style={{ backgroundColor: legendInfo.color }}></div>\n                        )}\n                      </td>\n                      <td>\n                        <span class=\"font-small-3\">{legendInfo.name}</span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </table>\n            </div>\n            <hr />\n            <div class=\"mt-2\">\n              <div class=\"legendCalendar\">\n                <div class=\"legendRow align-items-center\">\n                  <div class=\"legendCal br-t br-s br-bt\">\n                    <strong>MAR 2022</strong>\n                  </div>\n                  <div class=\"highphenLegend\">{locales.entries.Lcz_MonthAndYear}</div>\n                </div>\n                <div class=\"legendRow\">\n                  <div class=\"legendCal headerCell align-items-center br-s\">\n                    <span class=\"badge badge-info  badge-pill\">3</span>\n                  </div>\n                  <div class=\"highphenLegend\">\n                    <div>{locales.entries.Lcz_UnassignedUnits}</div>\n                  </div>\n                </div>\n                <div class=\"legendRow\">\n                  <div class=\"legendCal dayTitle br-s\">Fri 18</div>\n                  <div class=\"highphenLegend\">{locales.entries.Lcz_Date}</div>\n                </div>\n                <div class=\"legendRow\">\n                  <div class=\"legendCal br-s br-bt dayCapacityPercent\">15%</div>\n                  <div class=\"highphenLegend\">{locales.entries.Lcz_Occupancy}</div>\n                </div>\n                <div class=\"legendRow\">\n                  <div class=\"legendCal br-s br-bt  font-weight-bold total-availability\">20</div>\n                  <div class=\"highphenLegend\">{locales.entries.Lcz_TotalAvailability}</div>\n                </div>\n                {/* <div class=\"legendRow align-items-center\">\n                  <div class=\"legendCal br-s br-bt font-small-2\">15</div>\n                  <div class=\"highphenLegend\">\n                    <div>{locales.entries.Lcz_OfflineAvailability}</div>\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Host, Prop, State, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'igl-tba-category-view',\n  styleUrl: 'igl-tba-category-view.css',\n  scoped: true,\n})\nexport class IglTbaCategoryView {\n  @Prop() calendarData: { [key: string]: any };\n  @Prop() selectedDate;\n  @Prop() categoriesData: { [key: string]: any } = {};\n  @Prop() categoryId;\n  @Prop({ mutable: true }) eventDatas;\n  @Prop() categoryIndex;\n\n  @State() renderAgain: boolean = false;\n\n  @Event() assignUnitEvent: EventEmitter<{ [key: string]: any }>;\n\n  handleAssignRoomEvent(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n\n    const opt: { [key: string]: any } = event.detail;\n    this.eventDatas = this.eventDatas.filter(eventData => eventData.ID != opt.data.ID);\n    this.calendarData.bookingEvents.push(opt.data);\n    this.assignUnitEvent.emit({\n      key: 'assignUnit',\n      data: {\n        RT_ID: this.categoryId,\n        selectedDate: this.selectedDate,\n        assignEvent: opt.data,\n        calendarData: this.calendarData,\n      },\n    });\n    // if(this.localEventDatas.length){\n    this.renderView();\n    // }\n  }\n\n  getEventView(categoryId, eventDatas) {\n    return eventDatas.map((eventData, ind) => (\n      <igl-tba-booking-view\n        calendarData={this.calendarData}\n        selectedDate={this.selectedDate}\n        eventData={eventData}\n        categoriesData={this.categoriesData}\n        categoryId={categoryId}\n        categoryIndex={this.categoryIndex}\n        eventIndex={ind}\n        onAssignRoomEvent={evt => this.handleAssignRoomEvent(evt)}\n      ></igl-tba-booking-view>\n    ));\n  }\n\n  renderView() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"sectionContainer\">\n          <div class=\"font-weight-bold mt-1 font-small-3\">{this.categoriesData[this.categoryId]?.name}</div>\n          {this.getEventView(this.categoryId, this.eventDatas)}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.custom-dropdown {\n  cursor: pointer;\n  padding: 5px 10px;\n  width: min-content;\n  margin-left: auto;\n  margin-right: auto;\n}\n.dropdown-toggle {\n  all: unset;\n  display: flex;\n  width: max-content;\n  align-items: center;\n  gap: 10px;\n}\n.close_btn_style {\n  padding: 0.4rem;\n}\n.close_btn_style:hover {\n  background-color: #f6f6f6;\n}\n.dropdown-menu {\n  max-height: 250px;\n  overflow-y: auto;\n}\n.tobeAssignedHeader {\n  font-weight: 500;\n  letter-spacing: 0.05rem;\n  font-size: 1.12rem;\n  padding: 0;\n  margin: 0;\n}\n.assignment_header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 5px;\n  margin-bottom: 1rem;\n}\n.dropdown-toggle::after {\n  content: none;\n  display: none;\n}\n.dropdown-toggle .caret-icon {\n  transition: transform 0.2s ease;\n}\n.show .caret-icon {\n  transform: rotate(-180deg);\n}\n.stickyHeader {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  background-color: #ffffff;\n  z-index: 1;\n}\n.pointer {\n  cursor: pointer;\n}\n\n.dots {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 3px;\n  padding: 0;\n}\n.dot {\n  width: 5px;\n  height: 5px;\n  margin: 5px 4px 0;\n  background-color: #6b6f82;\n  border-radius: 50%;\n  animation: dotFlashing 1s infinite linear alternate;\n}\n.dot:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.dot:nth-child(3) {\n  animation-delay: 0.4s;\n}\n\n@keyframes dotFlashing {\n  0% {\n    opacity: 0;\n  }\n  50%,\n  100% {\n    opacity: 1;\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Listen, Fragment, Watch } from '@stencil/core';\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\nimport { dateToFormattedString } from '@/utils/utils';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { getUnassignedDates } from '@/stores/unassigned_dates.store';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\n//import { updateCategories } from '@/utils/events.utils';\n\n@Component({\n  tag: 'igl-to-be-assigned',\n  styleUrl: 'igl-to-be-assigned.css',\n  scoped: true,\n})\nexport class IglToBeAssigned {\n  @Prop() unassignedDatesProp: any;\n  @Prop() propertyid: number;\n  @Prop() from_date: string;\n  @Prop() to_date: string;\n  @Prop({ mutable: true }) calendarData: { [key: string]: any };\n\n  @State() loadingMessage: string;\n  @State() showDatesList: boolean = false;\n  @State() renderAgain: boolean = false;\n  @State() orderedDatesList: any[] = [];\n  @State() noScroll = false;\n\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\n  @Event({ bubbles: true, composed: true })\n  reduceAvailableUnitEvent: EventEmitter<{ [key: string]: any }>;\n  @Event() showBookingPopup: EventEmitter;\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\n  @Event({ bubbles: true, composed: true })\n  highlightToBeAssignedBookingEvent: EventEmitter;\n\n  private isGotoToBeAssignedDate: boolean = false;\n  private isLoading: boolean = true;\n  private selectedDate = null;\n  private data: { [key: string]: any } = {};\n  private today = new Date();\n  private categoriesData: { [key: string]: any } = {};\n  private toBeAssignedService: ToBeAssignedService = new ToBeAssignedService();\n  private unassignedDates: any;\n\n  componentWillLoad() {\n    this.reArrangeData();\n    this.loadingMessage = locales.entries.Lcz_FetchingUnAssignedUnits;\n  }\n\n  @Watch('unassignedDatesProp')\n  handleUnassignedDatesToBeAssignedChange(newValue: any) {\n    const { fromDate, toDate, data } = newValue;\n    let dt = new Date(fromDate);\n    dt.setHours(0);\n    dt.setMinutes(0);\n    dt.setSeconds(0);\n    let endDate = dt.getTime();\n    while (endDate <= new Date(toDate).getTime()) {\n      if (data && !data[endDate] && this.unassignedDates.hasOwnProperty(endDate)) {\n        delete this.unassignedDates[endDate];\n      } else if (data && data[endDate]) {\n        this.unassignedDates[endDate] = data[endDate];\n      }\n      endDate = moment(endDate).add(1, 'days').toDate().getTime();\n    }\n    this.data = { ...this.unassignedDates };\n    this.orderedDatesList = Object.keys(this.data).sort((a, b) => parseInt(a) - parseInt(b));\n\n    if (this.orderedDatesList.length) {\n      if (!this.data.hasOwnProperty(this.selectedDate)) {\n        this.selectedDate = this.orderedDatesList.length ? this.orderedDatesList[0] : null;\n      }\n      this.showForDate(this.selectedDate, false);\n      this.renderView();\n    } else {\n      this.selectedDate = null;\n    }\n  }\n  handleAssignUnit(event: CustomEvent<{ [key: string]: any }>) {\n    const opt: { [key: string]: any } = event.detail;\n    const data = opt.data;\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n\n    if (opt?.key === 'assignUnit' && this.data) {\n      // Verify data.selectedDate exists in this.data\n      if (data?.selectedDate && this.data[data.selectedDate]) {\n        // Check if categories exist and there's only one category\n        if (this.data[data.selectedDate]?.categories && Object.keys(this.data[data.selectedDate]?.categories || {})?.length === 1) {\n          this.isLoading = true;\n          this.noScroll = true;\n        }\n\n        // Make sure all required properties exist before filtering\n        if (\n          data?.RT_ID &&\n          this.data[data.selectedDate]?.categories &&\n          this.data[data.selectedDate].categories[data.RT_ID] &&\n          Array.isArray(this.data[data.selectedDate].categories[data.RT_ID]) &&\n          data?.assignEvent?.ID\n        ) {\n          this.data[data.selectedDate].categories[data.RT_ID] = this.data[data.selectedDate].categories[data.RT_ID].filter(\n            eventData => eventData && eventData.ID !== data.assignEvent.ID,\n          );\n        }\n\n        // Only update calendarData if it exists in the data\n        if (data?.calendarData) {\n          this.calendarData = data.calendarData;\n        }\n\n        this.renderView();\n      }\n    }\n  }\n\n  async updateCategories(key, calendarData) {\n    try {\n      //console.log(\"called\")\n      let categorisedRooms = {};\n      const result = await this.toBeAssignedService.getUnassignedRooms(\n        { from_date: calendarData.from_date, to_date: calendarData.to_date },\n        this.propertyid,\n        dateToFormattedString(new Date(+key)),\n        calendarData.roomsInfo,\n        calendarData.formattedLegendData,\n      );\n      result.forEach(room => {\n        if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\n          categorisedRooms[room.RT_ID] = [room];\n        } else {\n          categorisedRooms[room.RT_ID].push(room);\n        }\n      });\n      this.unassignedDates[key].categories = categorisedRooms;\n    } catch (error) {\n      //  toastr.error(error);\n    }\n  }\n\n  async reArrangeData() {\n    try {\n      this.today.setHours(0, 0, 0, 0);\n      this.calendarData.roomsInfo.forEach(category => {\n        this.categoriesData[category.id] = {\n          name: category.name,\n          roomsList: category.physicalrooms,\n          roomIds: category.physicalrooms.map(room => {\n            return room.id;\n          }),\n        };\n      });\n\n      this.selectedDate = null;\n      //this.unassignedDates = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\n      this.unassignedDates = getUnassignedDates();\n      console.log(this.unassignedDates);\n\n      this.data = this.unassignedDates;\n      this.orderedDatesList = Object.keys(this.data).sort((a, b) => parseInt(a) - parseInt(b));\n\n      if (!this.selectedDate && this.orderedDatesList.length) {\n        this.selectedDate = this.orderedDatesList[0];\n      }\n    } catch (error) {\n      console.error('Error fetching unassigned dates:', error);\n      //  toastr.error(error);\n    }\n  }\n  async componentDidLoad() {\n    setTimeout(() => {\n      if (!this.isGotoToBeAssignedDate && Object.keys(this.unassignedDates).length > 0) {\n        //console.log(this.isGotoToBeAssignedDate);\n        const firstKey = Object.keys(this.unassignedDates)[0];\n\n        this.showForDate(firstKey);\n      }\n    }, 100);\n  }\n  @Listen('gotoToBeAssignedDate', { target: 'window' })\n  async gotoDate(event: CustomEvent) {\n    this.isGotoToBeAssignedDate = true;\n    this.showForDate(event.detail.data);\n    this.showDatesList = false;\n    this.renderView();\n  }\n  @Listen('highlightToBeAssignedBookingEvent')\n  handleToBeAssignedDate(e: CustomEvent) {\n    this.showBookingPopup.emit({\n      key: 'calendar',\n      data: new Date(e.detail.data.fromDate).getTime() - 86400000,\n      noScroll: false,\n    });\n  }\n  async showForDate(dateStamp, withLoading = true) {\n    try {\n      if (withLoading) {\n        this.isLoading = true;\n      }\n      if (this.showDatesList) {\n        this.showUnassignedDate();\n      }\n      await this.updateCategories(dateStamp, this.calendarData);\n      this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\n      this.showBookingPopup.emit({\n        key: 'calendar',\n        data: parseInt(dateStamp) - 86400000,\n        noScroll: this.noScroll,\n      });\n      if (this.isGotoToBeAssignedDate) {\n        this.isGotoToBeAssignedDate = false;\n      }\n      this.isLoading = false;\n      this.selectedDate = dateStamp;\n      this.renderView();\n    } catch (error) {\n      // toastr.error(error);\n    }\n  }\n\n  getDay(dt) {\n    const currentDate = new Date(dt);\n    const locale = 'default'; //'en-US';\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\n    // const monthName = currentDate.toLocaleString(\"default\", { month: 'short' })\n    return dayOfWeek + ' ' + currentDate.getDate() + ', ' + currentDate.getFullYear();\n  }\n\n  getLocalizedDayOfWeek(date, locale) {\n    const options = { weekday: 'short' };\n    return date.toLocaleDateString(locale, options);\n  }\n\n  handleOptionEvent(key, data = '') {\n    this.highlightToBeAssignedBookingEvent.emit({\n      key: 'highlightBookingId',\n      data: { bookingId: '----' },\n    });\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\n    this.optionEvent.emit({ key, data });\n  }\n\n  showUnassignedDate() {\n    this.showDatesList = !this.showDatesList;\n  }\n\n  getToBeAssignedEntities() {\n    // toBeAssignedEvents\n  }\n\n  getCategoryView() {\n    if (this.orderedDatesList.length && this.selectedDate && this.data[this.selectedDate]) {\n      return Object.entries(this.data[this.selectedDate].categories).map(([id, eventDatas], ind) => (\n        <igl-tba-category-view\n          calendarData={this.calendarData}\n          selectedDate={this.selectedDate}\n          categoryId={id}\n          categoryIndex={ind}\n          categoriesData={this.categoriesData}\n          eventDatas={eventDatas}\n          onAssignUnitEvent={evt => this.handleAssignUnit(evt)}\n        ></igl-tba-category-view>\n      ));\n    } else {\n      return null;\n    }\n  }\n\n  renderView() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  render() {\n    return (\n      <Host class=\"tobeAssignedContainer pr-1 text-left\">\n        <div>\n          <div>\n            <div class=\"stickyHeader pt-1\">\n              <div class={'assignment_header'}>\n                <p class=\"tobeAssignedHeader \">{locales.entries.Lcz_Assignments}</p>\n                <ir-button\n                  class=\"close_btn\"\n                  variant=\"icon\"\n                  btn_styles=\"close_btn_style\"\n                  icon_name=\"double_caret_left\"\n                  style={colorVariants.secondary}\n                  onClickHandler={() => this.handleOptionEvent('closeSideMenu')}\n                  visibleBackgroundOnHover\n                ></ir-button>\n              </div>\n              <hr />\n              {Object.keys(this.data).length === 0 ? (\n                <p>{locales.entries.Lcz_AllBookingsAreAssigned}</p>\n              ) : this.isLoading ? (\n                <p class=\"d-flex align-items-center\">\n                  <span class=\"p-0\">{this.loadingMessage}</span>\n                  <div class=\"dots\">\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                    <div class=\"dot\"></div>\n                  </div>\n                </p>\n              ) : (\n                <Fragment>\n                  {this.orderedDatesList.length ? (\n                    <div\n                      class={`custom-dropdown border border-light rounded text-center ` + (this.showDatesList ? 'show' : '')}\n                      id=\"dropdownMenuButton\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      <div\n                        class={'dropdown-toggle'}\n                        //onClick={() => this.showUnassignedDate()}\n                      >\n                        <span class=\"font-weight-bold\">{this.data[this.selectedDate].dateStr}</span>\n                        <svg class={'caret-icon'} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" height={14} width={14}>\n                          <path\n                            fill=\"#6b6f82\"\n                            d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"\n                          />\n                        </svg>\n                      </div>\n                      <div class=\"dropdown-menu dropdown-menu-right full-width\" aria-labelledby=\"dropdownMenuButton\">\n                        {this.orderedDatesList?.map(ordDate => (\n                          <div class=\"dropdown-item pointer\" onClick={() => this.showForDate(ordDate)}>\n                            {this.data[ordDate].dateStr}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ) : (\n                    locales.entries.Lcz_AllBookingsAreAssigned\n                  )}\n                </Fragment>\n              )}\n            </div>\n            {!this.isLoading && (\n              <div class=\"scrollabledArea\">\n                {this.orderedDatesList.length ? (\n                  Object.keys(this.data[this.selectedDate].categories).length ? (\n                    this.getCategoryView()\n                  ) : (\n                    <div class=\"mt-1\">{locales.entries.Lcz_AllAssignForThisDay}</div>\n                  )\n                ) : null}\n              </div>\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  width: 100%;\n  --hk-green: green;\n}\n* {\n  box-sizing: border-box;\n}\n.popover-title {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  z-index: 10;\n  left: 0;\n  display: flex;\n  align-items: center;\n}\n.popover-container {\n  position: absolute;\n  bottom: 0px;\n  left: var(--ir-popover-left, 10px);\n  background: rgb(0, 0, 0);\n  color: white;\n  min-width: 100%;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 10px;\n  z-index: 9999;\n  padding: 3.5px 7px;\n  border-radius: 5px;\n  pointer-events: none;\n  opacity: 0;\n  transition: all 100ms ease;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.45;\n  text-decoration: none;\n  text-shadow: none;\n  font-size: 0.875rem;\n}\n.popover-container[data-state='show'] {\n  opacity: 1;\n}\n.hk-dot {\n  inset: 0;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  padding: 4px;\n  left: auto;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  padding-inline: var(--ir-popover-left);\n  background: var(--ir-interactive-hk-bg, white);\n  color: var(--dot-color, black);\n}\n.hk-dot::slotted(*)[name='end'] {\n  height: 12px;\n}\n\n/* .hk-dot::after {\n  content: '';\n  height: 8px;\n  aspect-ratio: 1;\n  border-radius: 9999999px;\n  background: var(--dot-color, #ffffff);\n} */\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ir-interactive-title',\n  styleUrl: 'ir-interactive-title.css',\n  scoped: true,\n})\nexport class IrInteractiveTitle {\n  @Element() el: HTMLElement;\n\n  /**\n   * The full title string that may be cropped in the UI.\n   */\n  @Prop() popoverTitle: string = '';\n\n  /**\n   * CSS offset for the left position of the popover.\n   * Used as a CSS variable `--ir-popover-left`.\n   */\n  @Prop() irPopoverLeft: string = '10px';\n\n  /**\n   * Whether to show the housekeeping (HK) status dot.\n   */\n  @Prop() hkStatus: boolean = false;\n\n  /**\n   * The number of characters to display before cropping the title with ellipsis.\n   */\n  @Prop() cropSize: number = 20;\n  /**\n   * The message shown when hovering over the broom svg if provided.\n   * @requires hkStatus to be true\n   */\n  @Prop() broomTooltip: string;\n\n  /**\n   * Reference to track if we've initialized popover for current render\n   */\n  private lastRenderedTitle: string = '';\n  private titleContainerRef: HTMLElement;\n  private popoverInstance: any;\n\n  /**\n   * Initialize popover with overflow detection\n   */\n  private initializePopoverIfNeeded(titleContainer: HTMLElement, title: string) {\n    // Only initialize if title changed or first time\n    if (this.lastRenderedTitle === title && this.popoverInstance) {\n      return;\n    }\n    this.disposePopover();\n\n    const tempSpan = document.createElement('span');\n    tempSpan.style.visibility = 'hidden';\n    tempSpan.style.position = 'absolute';\n    tempSpan.style.whiteSpace = 'nowrap';\n    tempSpan.textContent = title;\n    document.body.appendChild(tempSpan);\n\n    const textWidth = tempSpan.offsetWidth;\n    document.body.removeChild(tempSpan);\n\n    const containerWidth = titleContainer.clientWidth;\n    const iconWidth = this.hkStatus ? 20 : 0;\n\n    const willOverflow = textWidth + iconWidth > containerWidth;\n\n    if (willOverflow && typeof $ !== 'undefined') {\n      try {\n        this.popoverInstance = $(titleContainer).popover({\n          trigger: 'hover',\n          content: title,\n          placement: 'top',\n          html: false,\n          sanitize: true,\n          delay: { show: 300, hide: 100 },\n        });\n      } catch (error) {\n        console.error('Failed to initialize popover:', error);\n      }\n    }\n\n    this.lastRenderedTitle = title;\n  }\n\n  private disposePopover() {\n    if (this.popoverInstance && typeof $ !== 'undefined') {\n      try {\n        $(this.titleContainerRef).popover('dispose');\n        this.popoverInstance = null;\n      } catch (error) {\n        console.error('Failed to dispose popover:', error);\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    this.disposePopover();\n  }\n\n  render() {\n    const title = this.popoverTitle || '';\n\n    const shouldCrop = title.length > this.cropSize;\n    const displayTitle = shouldCrop ? title.slice(0, this.cropSize) + '...' : title;\n\n    return (\n      <Host style={{ '--ir-popover-left': this.irPopoverLeft }}>\n        <p\n          ref={el => {\n            this.titleContainerRef = el;\n            if (el && title) {\n              setTimeout(() => this.initializePopoverIfNeeded(el, title), 0);\n            }\n          }}\n          class=\"popover-title\"\n          style={{\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '4px',\n          }}\n        >\n          <span\n            class=\"cropped-title\"\n            style={{\n              flexShrink: '1',\n              minWidth: '0',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n            }}\n          >\n            {displayTitle}\n          </span>\n          {this.hkStatus && (\n            <div title={this.broomTooltip} class=\"hk-dot\" style={{ flexShrink: '0' }}>\n              <slot name=\"end\"></slot>\n            </div>\n          )}\n        </p>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n  margin: 0;\n  position: relative;\n}\n.loading-container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.close-icon {\n  position: absolute;\n  top: 18px;\n  right: 33px;\n  outline: none;\n}\n.close {\n  float: right;\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.5;\n\n  padding: 0;\n  background-color: transparent;\n  border: 0;\n  appearance: none;\n}\n.card {\n  top: 0;\n  z-index: 1000;\n}\n.card-title {\n  border-bottom: 1px solid #e4e5ec;\n  width: 100%;\n}\n.irfontgreen {\n  color: #0e930e;\n}\n.currency {\n  display: block;\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  height: auto;\n  left: 10px;\n}\n.rate-input {\n  font-size: 14px;\n  line-height: 0;\n  padding: 0;\n  height: 0;\n  border-left: 0;\n  border-radius: 0.25rem !important;\n}\n.rate-input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n}\n.new-currency {\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.975rem;\n  height: 2rem;\n  background: rgb(255, 255, 255);\n  padding-right: 0 !important;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.input-group-prepend span[data-state='focus'] {\n  border-color: var(--blue);\n}\n.input-group-prepend span[data-disabled] {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n.rateInputBorder {\n  padding-left: 5px !important;\n  padding-right: 5px !important;\n  border-top-left-radius: 0 !important;\n  border-bottom-left-radius: 0 !important;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Component, Prop, State, h, Event, EventEmitter, Fragment } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { convertDatePrice, formatDate, getDaysArray } from '@/utils/utils';\nimport { Booking, Day, IUnit, Room } from '@/models/booking.dto';\nimport { IRoomNightsDataEventPayload } from '@/models/property-types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { Variation } from '@/models/property';\n\n@Component({\n  tag: 'ir-room-nights',\n  styleUrls: ['ir-room-nights.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrRoomNights {\n  @Prop() bookingNumber: string;\n  @Prop() propertyId: number;\n  @Prop() language: string;\n  @Prop() identifier: string;\n  @Prop() toDate: string;\n  @Prop() fromDate: string;\n  @Prop() pool: string;\n  @Prop() ticket: string;\n  @Prop() defaultDates: { from_date: string; to_date: string };\n\n  @State() bookingEvent: Booking;\n  @State() selectedRoom: Room;\n  @State() rates: Day[] = [];\n  @State() isLoading = false;\n  @State() initialLoading = false;\n  @State() inventory: number | null = null;\n  @State() isEndDateBeforeFromDate: boolean = false;\n  @State() defaultTotalNights = 0;\n  @State() isInputFocused = -1;\n  @State() dates: { from_date: Date; to_date: Date } = { from_date: new Date(), to_date: new Date() };\n\n  @Event() closeRoomNightsDialog: EventEmitter<IRoomNightsDataEventPayload>;\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.dates = { from_date: new Date(this.fromDate), to_date: new Date(this.toDate) };\n    this.init();\n  }\n\n  isButtonDisabled() {\n    return this.isLoading || this.rates.some(rate => rate.amount === -1) || this.inventory === 0 || this.inventory === null;\n  }\n  async init() {\n    try {\n      const { from_date } = this.defaultDates;\n      if (moment(from_date, 'YYYY-MM-DD').isBefore(moment(this.fromDate, 'YYYY-MM-DD'))) {\n        this.dates.from_date = new Date(from_date);\n      } else {\n        this.dates.from_date = new Date(this.fromDate);\n      }\n      this.dates.to_date = new Date(this.toDate);\n      this.bookingEvent = await this.bookingService.getExposedBooking(this.bookingNumber, this.language);\n      if (this.bookingEvent) {\n        const filteredRooms = this.bookingEvent.rooms.filter(room => room.identifier === this.identifier);\n        this.selectedRoom = filteredRooms[0];\n        const lastDay = this.selectedRoom?.days[this.selectedRoom.days.length - 1];\n        //let first_rate = this.selectedRoom.days[0].amount;\n        if (moment(this.toDate).add(-1, 'days').isSame(moment(lastDay.date))) {\n          console.log('here1');\n          const amount = await this.fetchBookingAvailability(this.fromDate, this.selectedRoom.days[0].date, this.selectedRoom.rateplan.id);\n          const newDatesArr = getDaysArray(this.selectedRoom.days[0].date, this.fromDate);\n          this.isEndDateBeforeFromDate = true;\n          this.rates;\n          this.rates = [\n            ...newDatesArr.map(day => ({\n              amount: amount / newDatesArr.length,\n              date: day,\n              cost: null,\n            })),\n            ...this.selectedRoom.days,\n          ];\n          this.defaultTotalNights = this.rates.length - this.selectedRoom.days.length;\n        } else {\n          console.log('here2');\n          console.log(lastDay);\n          const amount = await this.fetchBookingAvailability(this.bookingEvent.to_date, moment(this.toDate, 'YYYY-MM-DD').format('YYYY-MM-DD'), this.selectedRoom.rateplan.id);\n          const newDatesArr = getDaysArray(lastDay.date, this.toDate);\n          this.rates = [\n            ...this.selectedRoom.days,\n            ...newDatesArr.map(day => ({\n              amount: amount / newDatesArr.length,\n              date: day,\n              cost: null,\n            })),\n          ];\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private handleInput(event: string, index: number) {\n    let inputValue = event;\n    let days = [...this.rates];\n    inputValue = inputValue.replace(/[^0-9.]/g, '');\n    if (inputValue === '') {\n      days[index].amount = -1;\n    } else {\n      if (!isNaN(Number(inputValue))) {\n        days[index].amount = Number(inputValue);\n      }\n    }\n    this.rates = days;\n  }\n  async fetchBookingAvailability(from_date: string, to_date: string, rate_plan_id: number) {\n    try {\n      this.initialLoading = true;\n      const bookingAvailability = await this.bookingService.getBookingAvailability({\n        from_date,\n        to_date,\n        propertyid: this.propertyId,\n        adultChildCount: {\n          adult: this.selectedRoom.rateplan.selected_variation.adult_nbr,\n          child: this.selectedRoom.rateplan.selected_variation.child_nbr,\n        },\n        language: this.language,\n        currency: this.bookingEvent.currency,\n        room_type_ids: [this.selectedRoom.roomtype.id],\n        rate_plan_ids: [rate_plan_id],\n      });\n      console.log(bookingAvailability[0], rate_plan_id);\n      this.inventory = bookingAvailability[0].inventory;\n      const rate_plan = bookingAvailability[0].rateplans.find(rate => rate.id === rate_plan_id);\n      if (!rate_plan || !rate_plan.variations) {\n        this.inventory = null;\n        return null;\n      }\n      const selected_variation: Variation = rate_plan.variations?.find(\n        variation =>\n          variation.adult_nbr === this.selectedRoom.rateplan.selected_variation.adult_nbr && variation.child_nbr === this.selectedRoom.rateplan.selected_variation.child_nbr,\n      );\n      if (!selected_variation) {\n        return null;\n      }\n      return selected_variation.discounted_gross_amount;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.initialLoading = false;\n    }\n  }\n\n  private renderInputField(index: number, currency_symbol: string, day: Day) {\n    return (\n      <div class=\"col-3 ml-1 position-relative  m-0 p-0 rate-input-container\">\n        <ir-price-input\n          value={day.amount > 0 ? day.amount.toString() : ''}\n          disabled={this.inventory === 0 || this.inventory === null}\n          currency={currency_symbol}\n          aria-label=\"rate\"\n          aria-describedby=\"rate cost\"\n          onTextChange={e => this.handleInput(e.detail, index)}\n        ></ir-price-input>\n      </div>\n    );\n  }\n\n  private renderReadOnlyField(currency_symbol: string, day: Day) {\n    return <p class=\"col-9 ml-1 m-0 p-0\">{`${currency_symbol}${Number(day.amount).toFixed(2)}`}</p>;\n  }\n  private renderRateFields(index: number, currency_symbol: string, day: Day) {\n    if (this.isEndDateBeforeFromDate) {\n      if (index < this.defaultTotalNights) {\n        return this.renderInputField(index, currency_symbol, day);\n      } else {\n        return this.renderReadOnlyField(currency_symbol, day);\n      }\n    } else {\n      return index < this.selectedRoom.days.length ? this.renderReadOnlyField(currency_symbol, day) : this.renderInputField(index, currency_symbol, day);\n    }\n  }\n  renderDates() {\n    const currency_symbol = this.bookingEvent.currency.symbol;\n    // const currency_symbol = getCurrencySymbol(this.bookingEvent.currency.code);\n    return (\n      <div class={'mt-2 m-0'}>\n        {this.rates?.map((day, index) => (\n          <div class={'row m-0 mt-1 align-items-center'}>\n            <p class={'col-2 m-0 p-0'}>{convertDatePrice(day.date)}</p>\n            {this.renderRateFields(index, currency_symbol, day)}\n          </div>\n        ))}\n      </div>\n    );\n  }\n  async handleRoomConfirmation() {\n    try {\n      this.isLoading = true;\n      let oldRooms = [...this.bookingEvent.rooms];\n      let selectedRoomIndex = oldRooms.findIndex(room => room.identifier === this.identifier);\n      if (selectedRoomIndex === -1) {\n        throw new Error('Invalid Pool');\n      }\n      oldRooms[selectedRoomIndex] = {\n        ...oldRooms[selectedRoomIndex],\n        days: this.rates,\n        to_date: moment(this.dates.to_date).format('YYYY-MM-DD'),\n        from_date: moment(this.dates.from_date).format('YYYY-MM-DD'),\n      };\n      const body = {\n        assign_units: true,\n        check_in: true,\n        is_pms: true,\n        is_direct: true,\n        pickup_info: this.bookingEvent.pickup_info,\n        extra_services: this.bookingEvent.extra_services,\n        booking: {\n          booking_nbr: this.bookingNumber,\n          from_date: moment(this.dates.from_date).format('YYYY-MM-DD'),\n          to_date: moment(this.dates.to_date).format('YYYY-MM-DD'),\n          remark: this.bookingEvent.remark,\n          property: this.bookingEvent.property,\n          source: this.bookingEvent.source,\n          currency: this.bookingEvent.currency,\n          arrival: this.bookingEvent.arrival,\n          guest: this.bookingEvent.guest,\n          rooms: oldRooms,\n        },\n      };\n      await this.bookingService.doReservation(body);\n      this.closeRoomNightsDialog.emit({ type: 'confirm', pool: this.pool });\n    } catch (error) {\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  render() {\n    if (!this.bookingEvent) {\n      return (\n        <div class=\"loading-container\">\n          <ir-loading-screen></ir-loading-screen>\n        </div>\n      );\n    }\n    return (\n      <div class=\"sheet-container\">\n        <ir-title\n          class=\"p-1 sheet-header\"\n          onCloseSideBar={() => this.closeRoomNightsDialog.emit({ type: 'cancel', pool: this.pool })}\n          label={`${locales.entries.Lcz_AddingRoomNightsTo} ${this.selectedRoom?.roomtype?.name} ${(this.selectedRoom?.unit as IUnit).name}`}\n          displayContext=\"sidebar\"\n        ></ir-title>\n        <section class={'text-left px-1 pt-0 sheet-body'}>\n          <p class={'font-medium-1'}>\n            {`${locales.entries.Lcz_Booking}#`} {this.bookingNumber}\n          </p>\n          {this.initialLoading ? (\n            <p class={'mt-2 text-secondary'}>{locales.entries['Lcz_CheckingRoomAvailability ']}</p>\n          ) : (\n            <Fragment>\n              <p class={'font-weight-bold font-medium-1'}>{`${formatDate(moment(this.dates.from_date).format('YYYY-MM-DD'), 'YYYY-MM-DD')} - ${formatDate(\n                moment(this.dates.to_date).format('YYYY-MM-DD'),\n                'YYYY-MM-DD',\n              )}`}</p>\n              <p class={'font-medium-1 mb-0'}>\n                {`${this.selectedRoom.rateplan.name}`} {this.selectedRoom.rateplan.is_non_refundable && <span class={'irfontgreen'}>{locales.entries.Lcz_NonRefundable}</span>}\n              </p>\n              {(this.inventory === 0 || this.inventory === null) && <p class=\"font-medium-1 text danger\">{locales.entries.Lcz_NoAvailabilityForAdditionalNights}</p>}\n\n              {this.selectedRoom.rateplan.custom_text && <p class={'text-secondary mt-0'}>{this.selectedRoom.rateplan.custom_text}</p>}\n              {this.renderDates()}\n            </Fragment>\n          )}\n        </section>\n        <section class={'sheet-footer'}>\n          <ir-button\n            btn_color=\"secondary\"\n            btn_disabled={this.isLoading}\n            text={locales?.entries.Lcz_Cancel}\n            class=\"full-width\"\n            btn_styles=\"justify-content-center\"\n            onClickHandler={() => this.closeRoomNightsDialog.emit({ type: 'cancel', pool: this.pool })}\n          ></ir-button>\n\n          {this.inventory > 0 && this.inventory !== null && (\n            <ir-button\n              isLoading={this.isLoading}\n              text={locales?.entries.Lcz_Confirm}\n              btn_disabled={this.isButtonDisabled()}\n              class=\"full-width\"\n              btn_styles=\"justify-content-center\"\n              onClickHandler={this.handleRoomConfirmation.bind(this)}\n            ></ir-button>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n",":host {\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow-x: auto;\n  gap: 1rem;\n  padding: 0 1rem;\n}\n.tab {\n  font-size: 0.95rem;\n  font-weight: 400;\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n  padding: 0rem;\n  padding-bottom: 1rem;\n  transition: color 0.3s ease;\n  user-select: none;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  flex: 1 1 0%;\n  text-align: center;\n  white-space: nowrap;\n}\n.tab[data-disabled] {\n  cursor: auto;\n}\n.tab:hover {\n  opacity: 80%;\n}\n\n.tab[data-state='selected'],\n.tab[data-state='selected']:hover {\n  color: var(--blue, #1e9ff2);\n  opacity: 100%;\n}\n.active-indicator {\n  padding: 0;\n  bottom: 0px;\n  position: absolute;\n  height: 3px;\n  border-radius: 4px;\n  transition: transform 0.3s ease, width 0.3s ease;\n  background: var(--blue, #1e9ff2);\n}\n","import { Component, Element, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\n\nexport type Tab = { id: string; label: string };\n\n@Component({\n  tag: 'ir-tabs',\n  styleUrl: 'ir-tabs.css',\n  scoped: true,\n})\nexport class IrTabs {\n  @Element() el: HTMLElement;\n\n  /**\n   * Array of tab objects containing id and label\n   * @type {Tab[]}\n   * @default []\n   */\n  @Prop() tabs: Tab[] = [];\n\n  /**\n   * ID of the tab that should be selected initially\n   * @type {string}\n   * @default undefined\n   */\n  @Prop() initialTab: string;\n\n  /**\n   * Whether the tabs are disabled\n   * @type {boolean}\n   * @default false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Aria label for the tab list\n   * @type {string}\n   * @default 'Tabs'\n   */\n  @Prop() ariaLabel: string = 'Tabs';\n\n  @State() _selectedTab: Tab;\n\n  /**\n   * Emitted when a tab is selected\n   * @event tabChanged\n   * @type {CustomEvent<Tab>}\n   */\n  @Event() tabChanged: EventEmitter<Tab>;\n\n  private activeIndicator: HTMLSpanElement;\n  private animationFrameId: number;\n\n  componentWillLoad() {\n    const tab = this.tabs?.find(t => t.id === this.initialTab);\n    if (tab) {\n      this.selectTab(tab);\n    } else if (this.tabs?.length > 0) {\n      // Select first tab if no initial tab is specified\n      this.selectTab(this.tabs[0]);\n    }\n  }\n\n  // componentDidLoad() {\n  //   this.updateActiveIndicator();\n  // }\n\n  disconnectedCallback() {\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n    }\n  }\n\n  private updateActiveIndicator() {\n    // if (this.animationFrameId) {\n    //   cancelAnimationFrame(this.animationFrameId);\n    // }\n    // this.animationFrameId = requestAnimationFrame(() => {\n    //   const selectedTab = this.el.querySelector(`button.tab[data-state=\"selected\"]`);\n    //   if (selectedTab && this.activeIndicator) {\n    //     const { left, width } = selectedTab.getBoundingClientRect();\n    //     const parentLeft = this.el.getBoundingClientRect().left;\n    //     const position = left - parentLeft;\n    //     this.activeIndicator.style.width = `${width}px`;\n    //     this.activeIndicator.style.transform = `translateX(${position}px)`;\n    //   }\n    // });\n    if (this.animationFrameId) {\n      cancelAnimationFrame(this.animationFrameId);\n    }\n    requestAnimationFrame(() => {\n      const selectedTab = this.el.querySelector(`.tab[data-state=\"selected\"]`);\n      if (selectedTab) {\n        const { left, width } = selectedTab.getBoundingClientRect();\n        const parentLeft = this.el.getBoundingClientRect().left;\n        const position = left - parentLeft - this.remSize;\n        this.activeIndicator.style.width = `${width - this.remSize}px`;\n        this.activeIndicator.style.transform = `translateX(${position}px)`;\n      }\n    });\n  }\n  private remSize = (() => {\n    const fontSize = getComputedStyle(document.documentElement).fontSize;\n    return parseFloat(fontSize);\n  })();\n  private selectTab(tab: Tab) {\n    if (this.disabled) return;\n\n    this._selectedTab = tab;\n    this.updateActiveIndicator();\n    this.tabChanged.emit(tab);\n  }\n\n  private handleKeyDown(event: KeyboardEvent, currentTab: Tab) {\n    if (this.disabled) return;\n\n    const currentIndex = this.tabs.findIndex(t => t.id === currentTab.id);\n    let nextIndex = currentIndex;\n\n    switch (event.key) {\n      case 'ArrowRight':\n        event.preventDefault();\n        nextIndex = (currentIndex + 1) % this.tabs.length;\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        nextIndex = currentIndex === 0 ? this.tabs.length - 1 : currentIndex - 1;\n        break;\n      case 'Home':\n        event.preventDefault();\n        nextIndex = 0;\n        break;\n      case 'End':\n        event.preventDefault();\n        nextIndex = this.tabs.length - 1;\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.selectTab(currentTab);\n        return;\n      default:\n        return;\n    }\n\n    const nextTab = this.tabs[nextIndex];\n    if (nextTab) {\n      this.selectTab(nextTab);\n      requestAnimationFrame(() => {\n        const tabButton = this.el.querySelector(`button.tab[data-tab-id=\"${nextTab.id}\"]`) as HTMLButtonElement;\n        if (tabButton) {\n          tabButton.focus();\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Host role=\"tablist\" aria-label={this.ariaLabel} aria-orientation=\"horizontal\">\n        {this.tabs.map(tab => (\n          <button\n            class=\"tab\"\n            key={tab.id}\n            type=\"button\"\n            data-tab-id={tab.id}\n            role=\"tab\"\n            tabindex={this._selectedTab?.id === tab.id ? 0 : -1}\n            aria-selected={this._selectedTab?.id === tab.id ? 'true' : 'false'}\n            aria-controls={`tabpanel-${tab.id}`}\n            id={`tab-${tab.id}`}\n            disabled={this.disabled}\n            data-state={this._selectedTab?.id === tab.id ? 'selected' : undefined}\n            onClick={() => this.selectTab(tab)}\n            onKeyDown={event => this.handleKeyDown(event, tab)}\n          >\n            {tab.label}\n          </button>\n        ))}\n        <span class=\"active-indicator\" ref={el => (this.activeIndicator = el)}></span>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}