{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","this","userRate","componentWillLoad","guestInfo","isRateModified","rateType","rate","dateDifference","guestData","Object","assign","roomId","defaultGuestRoomId","roomsList","filter","e","id","toString","length","preference","defaultGuestPreference","updateRoomList","componentDidLoad","timeout","setTimeout","updateData","disconnectedCallback","clearTimeout","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","includes","name","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","handleGuestNameChange","event","guestName","target","handleButtonClicked","detail","isButtonPressed","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","locales","entries","Lcz_GuestFirstnameAndLastname","onInput","required","calendar_data","is_frontdesk_enabled","onChange","selected","Lcz_Assignunits","map","is_bed_configuration_enabled","Lcz_BedConfiguration","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","formatAmount","currency","symbol","Lcz_Stay","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","setToken","token","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","from_date","fromDate","dateOption","showDateDifference","to_date","toDate","isEventHover","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","isEventType","eventType","editNext","label","renderButton","disabled","icon_name","shouldRenderTwoButtons","btn_color","text","btn_disabled","onClickHanlder","buttonClicked","iconPostion","style","icon_style","paddingBottom","Fragment","Lcz_Cancel","Lcz_Next","isRequestPending","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","sourceOption","code","description","tag","getSplitBookingList","Lcz_Tobooking","keys","bookedByInfoData","bookingNumber","firstName","lastName","moment","bookingDataDefaultDateRange","format","propertyId","Lcz_BookingNumber","onComboboxValue","stopImmediatePropagation","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","sourceOptions","option","handleAdultChildChange","obj","adultChildCount","adultChild","getAdultChildConstraints","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","Array","from","adultChildConstraints","adult_max_nbr","_","i","child_max_nbr","renderChildCaption","btn_id","isLoading","icon","size","Lcz_Check","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","toast","title","Lcz_ChooseBookingNumber","position","initialToDate","defaultDaterange","initialFromDate","selectedFromDate","dateRangeData","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","adult","Lcz_PlzSelectNumberOfGuests","animateIrSelect","minDate","getTime","bookingData","event_type","showSourceNode","showSplitBookingOption","dateLabel","Lcz_Dates","add","startOf","tax_statement","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","getSplitBookings","hasOwnProperty","splitBookingEvents","setMinDate","FROM_DATE","today","splitBookingId","defaultDateRange","splitBookings","_b","_a","roomsInfo","roomInfo","initialRoomIds","isBookDisabled","ratePricingMode","roomTypeData","roomInfoId","selectedRooms","has","get","onDataUpdateEvent","roomsDataUpdate","iglBookingRoomRatePlanCss","IglBookingRoomRatePlanStyle0","IglBookingRoomRatePlan","getAvailableRooms","assignable_units","result","forEach","unit","Is_Fully_Available","push","pr_id","updateSelectedRatePlan","ratePlanData","disableForm","shouldBeDisabled","selectedData","is_closed","totalAvailableRooms","physicalRooms","setAvailableRooms","availableRooms","selectedRoom","roomName","sort","a","b","getSelectedOffering","variations","variation","ratePlanId","totalRooms","amount","adultCount","adult_nbr","childrenCount","child_nbr","defaultSelectedRate","changedKey","ratePlanDataChanged","newData","handleRateDaysUpdate","selectedOffering","handleInput","inputElement","inputValue","validDecimalNumber","test","substring","updateOffering","updateRate","updateGenericData","offering","numericValue","Number","bookProperty","gotoSplitPageTwoEvent","renderRate","console","log","toFixed","split","short_name","isInputFocused","onFocus","onBlur","Lcz_Rate","onClick","Lcz_Current","Lcz_Select","Lcz_Book","iglBookingRoomsCss","IglBookingRoomsStyle0","IglBookingRooms","validBookingTypes","initializeRoomData","inventory","rateplans","fill","roomsDistributions","calculateInitialDistributions","handleRoomTypeData","distributions","selectedIndexes","sum","category","onRoomDataUpdate","updatedData","handleTotalRoomsUpdate","roomCategoryId","newValue","updateRatePlanTotalRooms","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","rooms","idx","newRoomsDistributions","totalSelectedRoomsExcludingCurrent","JSON","stringify","isValidBookingType","ratePlan","physicalrooms","defaultRoomId","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","totalNights","fromDateStr","toDateStr","getStringDateFormat","getFullYear","getMonth","initializeDates","setDate","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","oldValue","calculateDaysBetweenDates","toLowerCase","dateSelectEvent","handleDateChange","start","end","maxDate","autoApply","onDateChanged","xmlns","height","width","viewBox","d","withDateDifference","Lcz_Nights","Lcz_Night","iglPagetwoCss","IglPagetwoStyle0","IglPagetwo","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","rate_plan","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","opt","categoryIdKey","updatedUnits","handleEventData","isGuestDataIncomplete","selectedGuestData","isButtonDisabled","isValidProperty","property","comparedBy","Lcz_TotalPrice","defaultGuestData","bed_preference","PR_ID","isEditOrAddRoomEvent","countryNodeList","language","showPaymentDetails","Lcz_Back","btn_styles","Lcz_Save","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","email","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","arrivalTime","handleNumberInput","numericRegex","checkUser","z","string","safeParse","success","res","getUserInfo","first_name","last_name","mobile","country_id","prevBookedByData","handleComboboxChange","stopPropagation","clearEvent","Lcz_BookedBy","bind","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","countryNode","Lcz_MobilePhone","Lcz_Isd","phone_prefix","Lcz_ContactNumber","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","irAutocompleteCss","IrAutocompleteStyle0","IrAutocomplete","no_result_found","Lcz_NoResultsFound","handleKeyDown","dataSize","itemHeight","getHeightOfPElement","preventDefault","selectedIndex","adjustScrollPosition","selectItem","inputRef","blur","isComboBoxVisible","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","debounceTimer","fetchData","duration","fetchExposedGuest","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","inputFocused","isDropdownItem","document","activeElement","inputCleared","element","closest","removeEventListener","_c","_d","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","booking_nbr","guest","clearInput","withblur","inputId","ref"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ir-autocomplete/ir-autocomplete.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State, Listen } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { ICurrency } from '@/models/calendarData';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() defaultGuestPreference: number | null;\r\n  @Prop() index: number;\r\n  @Prop() defaultGuestRoomId: number;\r\n  @Prop() dateDifference: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  @State() isButtonPressed = false;\r\n  @State() guestData: { [key: string]: any };\r\n  private userRate = 0;\r\n  private timeout: NodeJS.Timeout;\r\n\r\n  componentWillLoad() {\r\n    if (this.guestInfo.isRateModified && this.guestInfo.rateType === 2) {\r\n      this.userRate = this.guestInfo.rate * this.dateDifference;\r\n    } else {\r\n      this.userRate = this.guestInfo.rate;\r\n    }\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.guestData.roomId = '';\r\n    if (this.defaultGuestRoomId && this.roomsList.filter(e => e.id.toString() === this.defaultGuestRoomId.toString()).length > 0) {\r\n      this.guestData.roomId = this.defaultGuestRoomId;\r\n    }\r\n    this.guestData.preference = +this.defaultGuestPreference || '';\r\n    this.updateRoomList();\r\n  }\r\n  componentDidLoad() {\r\n    this.timeout = setTimeout(() => {\r\n      this.updateData();\r\n    }, 200);\r\n  }\r\n  disconnectedCallback() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id) || e.name === '');\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1 \">\r\n          <div class=\" mb-1 \">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5 mr-1\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\" font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\" mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-column flex-md-row m-0 p-0 align-items-md-center aplicationInfoContainer \">\r\n            <div class=\"mr-1 flex-fill guest-info-container\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class={`form-control ${this.isButtonPressed && this.guestData.guestName === '' && 'border-danger'}`}\r\n                placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            <div class={'mt-1 mt-md-0 d-flex align-items-center flex-fill'}>\r\n              {calendar_data.is_frontdesk_enabled && (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') ? (\r\n                <div class=\"mr-1 p-0 flex-fill  preference-select-container\">\r\n                  <select class={`form-control  input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                    <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {this.filterdRoomList.map(room => (\r\n                      <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.guestData.is_bed_configuration_enabled && (\r\n                <div class=\"mr-1 flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm ${this.isButtonPressed && (this.guestData.preference === '' || this.guestData.preference === 0) && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}\r\n                  >\r\n                    <option value=\"\" selected={this.guestData.preference === ''}>\r\n                      {locales.entries.Lcz_BedConfiguration}\r\n                    </option>\r\n                    {this.bedPreferenceType.map(data => (\r\n                      <option value={+data.CODE_NAME} selected={this.guestData.preference === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <div class=\"\">\r\n                {formatAmount(this.currency.symbol, this.userRate)}/{locales.entries.Lcz_Stay}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.bookingService.setToken(calendar_data.token);\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"DD MMM YYYY\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { TIcons } from '@/components/ui/ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false, icon_name?: TIcons) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button> */}\r\n        <ir-button\r\n          btn_color={type === 'cancel' ? 'secondary' : 'primary'}\r\n          text={label}\r\n          btn_disabled={disabled}\r\n          onClickHanlder={() => {\r\n            this.buttonClicked.emit({ key: type });\r\n          }}\r\n          icon_name={icon_name}\r\n          iconPostion=\"right\"\r\n          style={{ '--icon-size': '1rem' }}\r\n          icon_style={{ paddingBottom: '1.9px' }}\r\n        ></ir-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, isRequestPending('/Get_Exposed_Booking_Availability'), 'angles_right')}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, false, 'angles_right')}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { IToast } from '../../../ir-toast/toast';\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group \">\r\n              {/* <select class=\"form-control input-sm\" id=\"xAdultSmallSelect\" onChange={evt => this.handleAdultChildChange('adult', evt)}>\r\n                <option value=\"\">{locales.entries.Lcz_AdultsCaption}</option>\r\n                {Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => (\r\n                  <option value={option}>{option}</option>\r\n                ))}\r\n              </select> */}\r\n              <ir-select\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Get_Exposed_Booking_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHanlder={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} < ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0  \">\r\n            <igl-date-range\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    //console.log(this.bookingData);\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Get_Exposed_Booking_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {this.bookingData?.roomsInfo?.map(roomInfo => {\r\n                //console.log(this.selectedRooms);\r\n                return (\r\n                  <igl-booking-rooms\r\n                    initialRoomIds={this.initialRoomIds}\r\n                    isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                    key={`room-info-${roomInfo.id}`}\r\n                    currency={this.currency}\r\n                    ratePricingMode={this.ratePricingMode}\r\n                    dateDifference={this.dateRangeData.dateDifference}\r\n                    bookingType={this.bookingData.event_type}\r\n                    roomTypeData={roomInfo}\r\n                    class=\"mt-2 mb-1 p-0\"\r\n                    roomInfoId={this.selectedRooms.has(`c_${roomInfo.id}`) ? roomInfo.id : null}\r\n                    defaultData={this.selectedRooms.get(`c_${roomInfo.id}`)}\r\n                    onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                  ></igl-booking-rooms>\r\n                );\r\n              })}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type} disabled={this.selectedRooms.size === 0}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 150px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 20%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() index: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop() physicalrooms;\r\n  @Prop() shouldBeDisabled: boolean;\r\n  @Prop() dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() fullyBlocked: boolean;\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() defaultRoomId;\r\n  @Prop() selectedRoom;\r\n  @Prop() is_bed_configuration_enabled: boolean;\r\n  @State() isInputFocused = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() ratePlanChangedState: boolean = false;\r\n  getAvailableRooms(assignable_units: any[]) {\r\n    let result = [];\r\n    assignable_units.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  componentWillLoad() {\r\n    // console.log('default data', this.defaultData);\r\n    this.updateSelectedRatePlan(this.ratePlanData);\r\n  }\r\n  disableForm() {\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      return false;\r\n    } else {\r\n      return this.selectedData.is_closed || this.totalAvailableRooms === 0 || (calendar_data.is_frontdesk_enabled && this.selectedData.physicalRooms.length === 0);\r\n    }\r\n  }\r\n\r\n  setAvailableRooms(data) {\r\n    let availableRooms = this.getAvailableRooms(data);\r\n    if (this.bookingType === 'EDIT_BOOKING' && this.shouldBeDisabled) {\r\n      if (this.selectedRoom) {\r\n        availableRooms.push({\r\n          id: this.selectedRoom.roomId,\r\n          name: this.selectedRoom.roomName,\r\n        });\r\n        availableRooms.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return -1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    }\r\n    return availableRooms;\r\n  }\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n\r\n  updateSelectedRatePlan(data) {\r\n    this.selectedData = {\r\n      is_bed_configuration_enabled: this.is_bed_configuration_enabled,\r\n      ratePlanId: data.id,\r\n      adult_child_offering: data.variations[0].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: data.variations[0].amount ?? 0,\r\n      ratePlanName: data.name,\r\n      adultCount: data.variations[0].adult_nbr,\r\n      childrenCount: data.variations[0].child_nbr,\r\n      cancelation: data.cancelation,\r\n      guarantee: data.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n      index: this.index,\r\n      is_closed: data.is_closed,\r\n      physicalRooms: this.setAvailableRooms(this.ratePlanData.assignable_units),\r\n      dateDifference: this.dateDifference,\r\n    };\r\n\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n      this.selectedData['rateType'] = 1;\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    if (this.defaultData) {\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'physicalRooms',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged(newData) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      adult_child_offering: newData.variations[0].adult_child_offering,\r\n      adultCount: newData.variations[0].adult_nbr,\r\n      childrenCount: newData.variations[0].child_nbr,\r\n      rate: this.handleRateDaysUpdate(),\r\n      physicalRooms: this.setAvailableRooms(newData.assignable_units),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.defaultSelectedRate;\r\n    }\r\n    const selectedOffering = this.getSelectedOffering(this.selectedData.adult_child_offering);\r\n    return selectedOffering ? selectedOffering.amount : 0;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n    const validDecimalNumber = /^\\d*\\.?\\d*$/;\r\n    if (!validDecimalNumber.test(inputValue)) {\r\n      inputValue = inputValue.substring(0, inputValue.length - 1);\r\n    }\r\n\r\n    inputElement.value = inputValue;\r\n    if (inputValue) {\r\n      this.selectedData.isRateModified = true;\r\n      this.handleDataChange('rate', event);\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        rate: -1,\r\n        totalRooms: 0,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'roomRatePlanUpdate',\r\n        changedKey: 'rate',\r\n        data: this.selectedData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    const value = evt.target.value;\r\n    switch (key) {\r\n      case 'adult_child_offering':\r\n        this.updateOffering(value);\r\n        break;\r\n      case 'rate':\r\n        this.updateRate(value);\r\n        break;\r\n      default:\r\n        this.updateGenericData(key, value);\r\n        break;\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  updateOffering(value) {\r\n    const offering = this.getSelectedOffering(value);\r\n    if (offering) {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        adult_child_offering: value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n        isRateModified: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  updateRate(value) {\r\n    const numericValue = value === '' ? 0 : Number(value);\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: numericValue,\r\n      totalRooms: value === '' ? 0 : this.selectedData.totalRooms,\r\n      defaultSelectedRate: this.selectedData.rateType === 2 ? numericValue / this.dateDifference : numericValue,\r\n    };\r\n  }\r\n\r\n  updateGenericData(key, value) {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      [key]: value === '' ? 0 : parseInt(value),\r\n    };\r\n  }\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  renderRate(): string | number | string[] {\r\n    if (this.selectedData.isRateModified) {\r\n      console.log('selectedData.rate', this.selectedData.rate);\r\n      return this.selectedData.rate === -1 ? '' : this.selectedData.rate;\r\n    }\r\n    return this.selectedData.rateType === 1 ? Number(this.selectedData.rate).toFixed(2) : Number(this.selectedData.rate / this.dateDifference).toFixed(2);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-column m-0 p-0 flex-lg-row align-items-lg-center justify-content-lg-between \">\r\n          <div class=\"rateplan-name-container\">\r\n            {this.bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\t\">{this.ratePlanData.name.split('/')[0]}</span>\r\n                <span>/{this.ratePlanData.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>{this.ratePlanData.short_name}</span>\r\n            )}\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n\r\n          <div class={'d-md-flex justify-content-md-end  align-items-md-center flex-fill rateplan-container'}>\r\n            <div class=\"mt-1 mt-md-0 flex-fill max-w-300\">\r\n              <fieldset class=\"position-relative\">\r\n                <select disabled={this.disableForm()} class=\"form-control  input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class={'m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1 '}>\r\n              <div class=\" d-flex  m-0 p-0 rate-total-night-view  mt-0\">\r\n                <fieldset class=\"position-relative has-icon-left m-0 p-0 rate-input-container  \">\r\n                  <div class=\"input-group-prepend\">\r\n                    <span data-disabled={this.disableForm()} data-state={this.isInputFocused ? 'focus' : ''} class=\"input-group-text new-currency\" id=\"basic-addon1\">\r\n                      {/* {getCurrencySymbol(this.currency.code)} */}\r\n                      {this.currency.symbol}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    onFocus={() => (this.isInputFocused = true)}\r\n                    onBlur={() => (this.isInputFocused = false)}\r\n                    disabled={this.disableForm()}\r\n                    type=\"text\"\r\n                    class=\"form-control pl-0 input-sm rate-input py-0 m-0 rounded-0 rateInputBorder\"\r\n                    value={this.renderRate()}\r\n                    id={v4()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                    onInput={(event: InputEvent) => this.handleInput(event)}\r\n                  />\r\n                  {/* <span class=\"currency\">{getCurrencySymbol(this.currency.code)}</span> */}\r\n                </fieldset>\r\n                <fieldset class=\"position-relative m-0 total-nights-container p-0 \">\r\n                  <select\r\n                    disabled={this.disableForm()}\r\n                    class=\"form-control input-sm m-0 nightBorder rounded-0 m-0  py-0\"\r\n                    id={v4()}\r\n                    onChange={evt => this.handleDataChange('rateType', evt)}\r\n                  >\r\n                    {this.ratePricingMode.map(data => (\r\n                      <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                        {data.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n\r\n              {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n                <div class=\"flex-fill  mt-lg-0 ml-1 m-0 mt-md-0 p-0\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <select\r\n                      disabled={this.selectedData.rate === 0 || this.disableForm()}\r\n                      class=\"form-control input-sm\"\r\n                      id={v4()}\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                    >\r\n                      {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                        <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <Fragment>\r\n                <div class=\" m-0 p-0  mt-lg-0  ml-md-1 mt-md-1 d-none d-md-block\">\r\n                  <fieldset class=\"position-relative\">\r\n                    <input\r\n                      disabled={this.disableForm()}\r\n                      type=\"radio\"\r\n                      name=\"ratePlanGroup\"\r\n                      value=\"1\"\r\n                      onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      checked={this.selectedData.totalRooms === 1}\r\n                    />\r\n                  </fieldset>\r\n                </div>\r\n                <button\r\n                  disabled={this.selectedData.rate === -1 || this.disableForm()}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 d-md-none \"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {this.selectedData.totalRooms === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                </button>\r\n              </Fragment>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button\r\n                disabled={this.selectedData.rate === -1 || this.disableForm() || (this.bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                type=\"button\"\r\n                class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1  mt-1 \"\r\n                onClick={() => this.bookProperty()}\r\n              >\r\n                {locales.entries.Lcz_Book}\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-booking-rooms',\r\n  styleUrl: 'igl-booking-rooms.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop() roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: Map<string, any>;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @Prop() isBookDisabled: boolean;\r\n  @Prop() initialRoomIds: any;\r\n  @State() roomsDistributions: number[] = [];\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  componentWillLoad() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private initializeRoomData() {\r\n    const { inventory, rateplans } = this.roomTypeData;\r\n    this.totalRooms = inventory || 0;\r\n    this.selectedRooms = new Array(rateplans.length).fill(0);\r\n    this.roomsDistributions = this.calculateInitialDistributions(rateplans, inventory);\r\n  }\r\n  @Watch('roomTypeData')\r\n  handleRoomTypeData() {\r\n    this.initializeRoomData();\r\n  }\r\n\r\n  private calculateInitialDistributions(rateplans, inventory) {\r\n    let distributions = new Array(rateplans.length).fill(inventory);\r\n    if (this.defaultData && this.bookingType !== 'EDIT_BOOKING' && inventory > 0) {\r\n      let selectedIndexes = [];\r\n      let sum = 0;\r\n      this.defaultData.forEach(category => {\r\n        this.selectedRooms[category.index] = category.totalRooms;\r\n        distributions[category.index] = category.totalRooms;\r\n        sum += category.totalRooms;\r\n        selectedIndexes.push(category.index);\r\n      });\r\n      if (selectedIndexes.length < distributions.length) {\r\n        distributions.forEach((_, index) => {\r\n          if (!selectedIndexes.includes(index)) {\r\n            if (sum === this.totalRooms) {\r\n              distributions[index] = 0;\r\n            } else {\r\n              distributions[index] = distributions[index] - sum;\r\n            }\r\n          } else {\r\n            if (sum < this.totalRooms) {\r\n              distributions[index] = this.totalRooms - sum + distributions[index];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      distributions.fill(inventory);\r\n    }\r\n    return distributions;\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    const {\r\n      detail: { data, changedKey },\r\n    } = event;\r\n    let updatedData = { ...data };\r\n\r\n    if (changedKey === 'totalRooms') {\r\n      this.handleTotalRoomsUpdate(index, updatedData.totalRooms);\r\n    }\r\n\r\n    updatedData = {\r\n      ...updatedData,\r\n      roomCategoryId: this.roomTypeData.id,\r\n      roomCategoryName: this.roomTypeData.name,\r\n      inventory: this.roomTypeData.inventory,\r\n    };\r\n\r\n    this.dataUpdateEvent.emit({ key: data.key, data: updatedData, changedKey });\r\n  }\r\n\r\n  private handleTotalRoomsUpdate(index: number, newValue: number) {\r\n    if (this.selectedRooms[index] !== newValue) {\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n  }\r\n\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = excludedIndex => {\r\n      return this.selectedRooms.reduce((acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc), 0);\r\n    };\r\n    const newRoomsDistributions = this.selectedRooms.map((_, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return this.roomsDistributions[index];\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent = calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms = this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n\r\n    if (JSON.stringify(this.roomsDistributions) !== JSON.stringify(newRoomsDistributions)) {\r\n      this.roomsDistributions = [...newRoomsDistributions];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomTypeData.rateplans.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomTypeData.name}</div>}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomTypeData.id;\r\n            let roomId = -1;\r\n            if (shouldBeDisabled && this.initialRoomIds) {\r\n              roomId = this.initialRoomIds.roomId;\r\n            }\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                is_bed_configuration_enabled={this.roomTypeData.is_bed_configuration_enabled}\r\n                index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={(this.defaultData && this.defaultData.get(`p_${ratePlan.id}`)) || null}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                onDataUpdateEvent={evt => this.onRoomDataUpdate(evt, index)}\r\n                physicalrooms={this.roomTypeData.physicalrooms}\r\n                defaultRoomId={roomId}\r\n                selectedRoom={this.initialRoomIds}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n  font-size: 14px !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 220px !important;\r\n  opacity: 0;\r\n  user-select: none;\r\n  font-size: 14px !important;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 14px;\r\n  margin-right: 14px;\r\n  font-size: 13.65px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  inset: 0;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 245px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\nimport { IToast } from '../../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt: Date) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n  initializeDates() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent('selectedDateRange', {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n  @Watch('defaultData')\r\n  handleDataChange(newValue: any, oldValue: any) {\r\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer form-control input-sm\" data-state={this.disabled ? 'disabled' : 'active'}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div data-state={this.disabled ? 'disabled' : 'active'} class=\"date-view\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <ir-date-view showDateDifference={this.disabled} from_date={this.fromDate} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        {this.withDateDifference && (\r\n          <span>\r\n            {this.totalNights && !this.disabled ? (\r\n              <span class=\"iglRangeNights mx-1\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </span>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../models/igl-book-property';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      // const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      // if (!this.showPaymentDetails && isCardDetails) {\r\n      //   return false;\r\n      // }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={this.dateRangeData.fromDateStr}\r\n            to_date={this.dateRangeData.toDateStr}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => {\r\n          return (\r\n            <igl-application-info\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              defaultGuestPreference={this.defaultGuestData.bed_preference}\r\n              defaultGuestRoomId={this.defaultGuestData.PR_ID}\r\n              currency={this.currency}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              index={index}\r\n              selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n              guestInfo={roomInfo}\r\n              guestRefKey={index}\r\n              bookingType={this.bookingData.event_type}\r\n              roomsList={roomInfo.physicalRooms}\r\n              onDataUpdateEvent={event => this.handleEventData(event, 'application-info', index)}\r\n            ></igl-application-info>\r\n          );\r\n        })}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              {\r\n                console.log('user info details', event.detail);\r\n                this.handleEventData(event, 'propertyBookedBy', 0);\r\n              }\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                {locales.entries.Lcz_Cancel}\r\n              </button> */}\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n              {/* <button\r\n                disabled={this.isLoading === 'save'}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => {\r\n                  console.log('save button clicked');\r\n                  this.buttonClicked.emit({ key: 'save' });\r\n                }}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Save}\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              {/* <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                <span class={'d-none d-md-inline-flex'}> &lt;&lt;</span> {locales.entries.Lcz_Back}\r\n              </button> */}\r\n              <ir-button\r\n                icon_name=\"angles_left\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'back' })}\r\n                text={locales.entries.Lcz_Back}\r\n                style={{ '--icon-size': '1rem' }}\r\n                icon_style={{ paddingBottom: '1.9px' }}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n              {/* <button disabled={this.isLoading === 'book'} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                {locales.entries.Lcz_Book}\r\n              </button> */}\r\n            </div>\r\n            {/* <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'bookAndChekcIn'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHanlder={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n                text={locales.entries.Lcz_BookAndChekcIn}\r\n              ></ir-button>\r\n              // <button\r\n              //   //disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n              //   type=\"button\"\r\n              //   class=\"btn btn-primary full-width\"\r\n              //   onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              // >\r\n              //   {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n              //   {locales.entries.Lcz_BookAndChekcIn}\r\n              // </button>\r\n            </div> */}\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log('data', data, 'key', key);\r\n    switch (key) {\r\n      case 'blur':\r\n        if (data !== '') {\r\n          this.bookedByData.email = data;\r\n          this.checkUser();\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email: '' };\r\n          this.bookedByData = { ...prevBookedByData };\r\n          this.dataUpdateEvent.emit({\r\n            key: 'bookedByInfoUpdated',\r\n            data: { ...this.bookedByData },\r\n          });\r\n        }\r\n\r\n        break;\r\n      case 'select':\r\n        this.bookedByData.email = data.email;\r\n        this.bookedByData = {\r\n          ...this.bookedByData,\r\n          id: data.id,\r\n          firstName: data.first_name,\r\n          lastName: data.last_name,\r\n          contactNumber: data.mobile,\r\n          countryId: data.country_id,\r\n          isdCode: data.country_id.toString(),\r\n        };\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: this.bookedByData,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"email\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: relative;\r\n}\r\n.selected {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\ninput {\r\n  width: 100%;\r\n  position: relative;\r\n  border-top-left-radius: 0px !important;\r\n  border-left: 0 !important;\r\n  border-bottom-left-radius: 0px !important;\r\n}\r\nlabel {\r\n  margin: 0;\r\n  border-top-right-radius: 0px !important;\r\n  border-right: 0 !important;\r\n  border-bottom-right-radius: 0px !important;\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding-right: 3px !important;\r\n  justify-content: center;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\nlabel[data-state='focused'] {\r\n  border-color: var(--blue);\r\n}\r\n\r\n.combobox {\r\n  margin: 0;\r\n  top: 30px;\r\n  min-width: 100%;\r\n  width: max-content;\r\n  display: block;\r\n  z-index: 10000;\r\n  padding: 1px;\r\n  background: white;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  padding: 5px 0;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  all: unset;\r\n  right: 4px;\r\n}\r\n.combobox p,\r\nspan,\r\nloader-container {\r\n  padding: 5px 16px;\r\n  margin: 0px;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n}\r\n.combobox p {\r\n  cursor: pointer;\r\n}\r\n.combobox p:hover {\r\n  background: #f4f5fa;\r\n}\r\n\r\n.combobox p[data-selected],\r\n.combobox p[data-selected]:hover {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\n.loader {\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid #0f0f0f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\n\r\n@Component({\r\n  tag: 'ir-autocomplete',\r\n  styleUrl: 'ir-autocomplete.css',\r\n  scoped: true,\r\n})\r\nexport class IrAutocomplete {\r\n  @Prop() duration: number = 300;\r\n  @Prop() placeholder: string = '';\r\n  @Prop() propertyId: number;\r\n  @Prop() isSplitBooking: boolean = false;\r\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\r\n  @Prop() name: string = '';\r\n  @Prop() inputId: string = v4();\r\n  @Prop() required: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: string;\r\n  @Prop() from_date: string = '';\r\n  @Prop() to_date: string = '';\r\n  @Prop() danger_border: boolean;\r\n\r\n  @State() inputValue: string = '';\r\n  @State() data: any[] = [];\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputFocused: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  @Element() el: HTMLElement;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n  private bookingService = new BookingService();\r\n  private no_result_found = '';\r\n  componentWillLoad() {\r\n    this.bookingService.setToken(calendar_data.token);\r\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n      let data = [];\r\n      if (!this.isSplitBooking) {\r\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\r\n      } else {\r\n        if (this.inputValue.split(' ').length === 1) {\r\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\r\n        }\r\n      }\r\n      this.data = data;\r\n      if (!this.isComboBoxVisible) {\r\n        this.isComboBoxVisible = true;\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n  handleBlur() {\r\n    this.inputFocused = false;\r\n    setTimeout(() => {\r\n      if (this.isDropdownItem(document.activeElement)) {\r\n        return;\r\n      }\r\n      if (this.isSplitBooking) {\r\n        if (!this.isItemSelected) {\r\n          if (this.data.length > 0) {\r\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          } else {\r\n            if (this.inputValue !== '') {\r\n              this.toast.emit({\r\n                type: 'error',\r\n                description: '',\r\n                title: `The Booking #${this.inputValue} is not Available`,\r\n                position: 'top-right',\r\n              });\r\n              this.inputCleared.emit();\r\n            }\r\n          }\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      } else {\r\n        if (!this.isItemSelected) {\r\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  renderDropdown() {\r\n    if (this.inputValue !== '') {\r\n      return (\r\n        <div class={`position-absolute border rounded combobox`}>\r\n          {this.data?.map((d, index) => (\r\n            <p role=\"button\" onKeyDown={e => this.handleItemKeyDown(e, index)} data-selected={this.selectedIndex === index} tabIndex={0} onClick={() => this.selectItem(index)}>\r\n              {this.isSplitBooking ? (\r\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\r\n              ) : (\r\n                <div class={'d-flex align-items-center flex-fill'}>\r\n                  <p class={'p-0 m-0'}>\r\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </p>\r\n          ))}\r\n          {this.isLoading && (\r\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          )}\r\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n    this.inputFocused = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={'d-flex align-items-center '}>\r\n          <label data-state={this.inputFocused ? 'focused' : 'blured'} htmlFor={this.inputId} class={`form-control input-sm ${this.danger_border && 'border-danger'}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\r\n              />\r\n            </svg>\r\n          </label>\r\n          <input\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n            id={this.inputId}\r\n            onKeyDown={this.handleKeyDown.bind(this)}\r\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\r\n            type={this.type}\r\n            name={this.name}\r\n            value={this.value || this.inputValue}\r\n            placeholder={this.placeholder}\r\n            onBlur={this.handleBlur.bind(this)}\r\n            onInput={this.handleInputChange.bind(this)}\r\n            onFocus={this.handleFocus.bind(this)}\r\n            ref={el => (this.inputRef = el)}\r\n          />\r\n          {this.inputValue && (\r\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\r\n              <p class={'sr-only'}>clear input</p>\r\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                  fill=\"currentColor\"\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {this.isComboBoxVisible && this.renderDropdown()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}