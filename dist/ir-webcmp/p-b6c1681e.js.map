{"version":3,"names":["initialValue","default_properties","undefined","hk_criteria","hk_tasks","pending_housekeepers","state","housekeeping_store","createStore","updateHKStore","key","value","getDefaultProperties","HouseKeepingService","getExposedHKSetup","property_id","data","axios","post","getExposedHKStatusCriteria","editHkSkip","params","getArchivedHKTasks","url","My_Params_Get_Archived_HK_Tasks","Link_excel","tasks","_a","setExposedInspectionMode","mode","manageExposedAssignedUnitToHKM","assignments","links","editExposedHKM","is_to_remove","Object","assign","getHKPendingActions","map","d","original","selected","setExposedUnitHKStatus","getHkTasks","ExceptionMsg","Error","My_Params_Get_HK_Tasks","My_Result","executeHKAction","generateUserName","name"],"sources":["src/stores/housekeeping.store.ts","src/services/housekeeping.service.ts"],"sourcesContent":["import { IExposedHouseKeepingSetup, IHKTasks, IPendingActions } from '@/models/housekeeping';\nimport { createStore } from '@stencil/store';\n\nexport interface IHouseKeepingStore {\n  hk_criteria: IExposedHouseKeepingSetup;\n  default_properties: {\n    token: string;\n    property_id: number;\n    language: string;\n  };\n  hk_tasks: IHKTasks;\n  pending_housekeepers: { original: IPendingActions; selected?: boolean }[];\n}\n\nconst initialValue: IHouseKeepingStore = {\n  default_properties: undefined,\n  hk_criteria: undefined,\n  hk_tasks: undefined,\n  pending_housekeepers: [],\n};\n\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\nexport function updateHKStore(key: keyof IHouseKeepingStore, value: any) {\n  housekeeping_store[key] = value;\n}\nexport function getDefaultProperties() {\n  return housekeeping_store.default_properties;\n}\nexport default housekeeping_store;\n","import { RoomHkStatus } from '@/models/booking.dto';\nimport { ArchivedTask, IExposedHouseKeepingSetup, IInspectionMode, IPropertyHousekeepingAssignment, THKUser, TPendingHkSetupParams } from '@/models/housekeeping';\nimport { updateHKStore } from '@/stores/housekeeping.store';\nimport axios from 'axios';\nexport type HKSkipParams = { HK_SKIP_ID: number; BOOK_NBR: string; PR_ID: number; DATE: string; HK_SKIP_REASON_CODE: '001'; COMMENT: string };\nexport class HouseKeepingService {\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup`, {\n      property_id,\n    });\n    updateHKStore('hk_criteria', data['My_Result']);\n    return data['My_Result'];\n  }\n  public async getExposedHKStatusCriteria(property_id: number): Promise<IExposedHouseKeepingSetup> {\n    const { data } = await axios.post(`/Get_Exposed_HK_Status_Criteria`, { property_id });\n    updateHKStore('hk_tasks', data['My_Result']);\n    return data['My_Result'];\n  }\n  public async editHkSkip(params: HKSkipParams) {\n    const { data } = await axios.post(`/Edit_Hk_skip`, params);\n    return data;\n  }\n  public async getArchivedHKTasks(params: {\n    property_id: number;\n    from_date: string;\n    to_date: string;\n    filtered_by_hkm?: number[];\n    filtered_by_unit?: number[];\n    is_export_to_excel?: boolean;\n  }): Promise<{ tasks: ArchivedTask[]; url: string } | null> {\n    const { data } = await axios.post(`/Get_Archived_HK_Tasks`, params);\n    return { url: data.My_Params_Get_Archived_HK_Tasks.Link_excel, tasks: data['My_Result'] ?? [] };\n  }\n\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode`, {\n      property_id,\n      mode,\n    });\n    return data['My_Result'];\n  }\n  public async manageExposedAssignedUnitToHKM(property_id: number, assignments: IPropertyHousekeepingAssignment[]) {\n    const { data } = await axios.post(`/Manage_Exposed_Assigned_Unit_To_HKM`, {\n      property_id,\n      links: assignments,\n    });\n    return data['My_Result'];\n  }\n  public async editExposedHKM(params: THKUser, is_to_remove: boolean = false) {\n    const { data } = await axios.post(`/Edit_Exposed_HKM`, { ...params, is_to_remove });\n    return data['My_Result'];\n  }\n  public async getHKPendingActions(params: TPendingHkSetupParams) {\n    const { data } = await axios.post(`/Get_HK_Pending_Actions`, { ...params });\n    updateHKStore(\n      'pending_housekeepers',\n      [...data['My_Result']].map(d => ({ original: d, selected: false })),\n    );\n    return data['My_Result'];\n  }\n  public async setExposedUnitHKStatus(params: {\n    property_id: number;\n    status: {\n      code: RoomHkStatus;\n    };\n    unit: {\n      id: number;\n    };\n  }) {\n    const { data } = await axios.post(`/Set_Exposed_Unit_HK_Status`, { ...params });\n    return data['My_Result'];\n  }\n  public async getHkTasks(params: {\n    property_id: number;\n    from_date: string;\n    to_date: string;\n    housekeepers?: { id: number }[];\n    cleaning_frequency?: string;\n    dusty_window?: string;\n    highlight_window?: string;\n    is_export_to_excel?: boolean;\n  }) {\n    const { data } = await axios.post('/Get_HK_Tasks', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return { url: data.My_Params_Get_HK_Tasks?.Link_excel, tasks: data.My_Result };\n  }\n  public async executeHKAction(params: {\n    actions: {\n      unit_id: number;\n      hkm_id: number;\n      description: string;\n      booking_nbr?: string | number;\n      status: '001' | '004';\n    }[];\n  }) {\n    await axios.post(`/Execute_HK_Action`, { ...params });\n  }\n  public async generateUserName(name: string) {\n    const { data } = await axios.post(`/Generate_UserName`, { name });\n    return data.My_Result;\n  }\n}\n"],"mappings":"wEAcA,MAAMA,EAAmC,CACvCC,mBAAoBC,UACpBC,YAAaD,UACbE,SAAUF,UACVG,qBAAsB,I,MAGTC,MAAOC,GAAuBC,EAAgCR,G,SAC7DS,EAAcC,EAA+BC,GAC3DJ,EAAmBG,GAAOC,CAC5B,C,SACgBC,IACd,OAAOL,EAAmBN,kBAC5B,C,MCtBaY,EACJ,uBAAMC,CAAkBC,GAC7B,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,wBAAyB,CACzDH,gBAEFN,EAAc,cAAeO,EAAK,cAClC,OAAOA,EAAK,Y,CAEP,gCAAMG,CAA2BJ,GACtC,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,kCAAmC,CAAEH,gBACvEN,EAAc,WAAYO,EAAK,cAC/B,OAAOA,EAAK,Y,CAEP,gBAAMI,CAAWC,GACtB,MAAML,KAAEA,SAAeC,EAAMC,KAAK,gBAAiBG,GACnD,OAAOL,C,CAEF,wBAAMM,CAAmBD,G,MAQ9B,MAAML,KAAEA,SAAeC,EAAMC,KAAK,yBAA0BG,GAC5D,MAAO,CAAEE,IAAKP,EAAKQ,gCAAgCC,WAAYC,OAAOC,EAAAX,EAAK,gBAAY,MAAAW,SAAA,EAAAA,EAAI,G,CAGtF,8BAAMC,CAAyBb,EAAqBc,GACzD,MAAMb,KAAEA,SAAeC,EAAMC,KAAK,+BAAgC,CAChEH,cACAc,SAEF,OAAOb,EAAK,Y,CAEP,oCAAMc,CAA+Bf,EAAqBgB,GAC/D,MAAMf,KAAEA,SAAeC,EAAMC,KAAK,uCAAwC,CACxEH,cACAiB,MAAOD,IAET,OAAOf,EAAK,Y,CAEP,oBAAMiB,CAAeZ,EAAiBa,EAAwB,OACnE,MAAMlB,KAAEA,SAAeC,EAAMC,KAAK,oBAAmBiB,OAAAC,OAAAD,OAAAC,OAAA,GAAOf,GAAM,CAAEa,kBACpE,OAAOlB,EAAK,Y,CAEP,yBAAMqB,CAAoBhB,GAC/B,MAAML,KAAEA,SAAeC,EAAMC,KAAK,0BAAyBiB,OAAAC,OAAA,GAAOf,IAClEZ,EACE,uBACA,IAAIO,EAAK,cAAcsB,KAAIC,IAAC,CAAOC,SAAUD,EAAGE,SAAU,WAE5D,OAAOzB,EAAK,Y,CAEP,4BAAM0B,CAAuBrB,GASlC,MAAML,KAAEA,SAAeC,EAAMC,KAAK,8BAA6BiB,OAAAC,OAAA,GAAOf,IACtE,OAAOL,EAAK,Y,CAEP,gBAAM2B,CAAWtB,G,MAUtB,MAAML,KAAEA,SAAeC,EAAMC,KAAK,gBAAiBG,GACnD,GAAIL,EAAK4B,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM7B,EAAK4B,a,CAEvB,MAAO,CAAErB,KAAKI,EAAAX,EAAK8B,0BAAsB,MAAAnB,SAAA,SAAAA,EAAEF,WAAYC,MAAOV,EAAK+B,U,CAE9D,qBAAMC,CAAgB3B,SASrBJ,EAAMC,KAAK,qBAAoBiB,OAAAC,OAAA,GAAOf,G,CAEvC,sBAAM4B,CAAiBC,GAC5B,MAAMlC,KAAEA,SAAeC,EAAMC,KAAK,qBAAsB,CAAEgC,SAC1D,OAAOlC,EAAK+B,S","ignoreList":[]}