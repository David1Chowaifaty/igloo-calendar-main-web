{"version":3,"names":["irMComboboxCss","IrMComboboxStyle0","IrMCombobox","constructor","hostRef","this","dataMode","options","debounceDelay","loading","useSlot","isOpen","focusedIndex","filteredOptions","slotElements","hasPrefix","hasSuffix","itemChildren","id","v4","dropdownId","mo","handleDocumentClick","event","el","contains","target","closeDropdown","updateAffixPresence","prefixAssigned","prefixSlotRef","assignedElements","Array","from","querySelectorAll","suffixAssigned","suffixSlotRef","isArray","length","e","prefixFallback","querySelector","suffixFallback","handleKeyDown","maxIndex","key","preventDefault","openDropdown","Math","min","focusSlotElement","scrollToFocusedOption","max","selectSlotElement","selectOption","handleInput","value","isCompositionMode","emitSearchQuery","filterComposition","allOptions","filter","option","label","toLowerCase","includes","selectOptionFromSlot","watchOptionsChanged","newOptions","updateSlotElements","watchDefaultValueChanged","newOption","selectedOption","applyDefaultOption","watchUseSlotChanged","setTimeout","componentWillLoad","initializeOptions","collectItemChildren","MutationObserver","observe","childList","subtree","componentDidLoad","document","addEventListener","bind","_a","_b","disconnectedCallback","removeEventListener","debounceTimeout","clearTimeout","_c","disconnect","handleDocumentKeyDown","inputRef","focus","handleComboboxItemSelect","ev","stopPropagation","console","log","detail","handleComboboxItemRegister","handleComboboxItemUnregister","defaultOption","opt","find","o","Object","assign","updateSlotElementsForItems","findIndex","v","query","searchQuery","emit","removeSlotFocus","dropdownRef","slotElement","forEach","element","index","setAttribute","toString","classList","remove","removeAttribute","add","scrollIntoView","block","click","optionChange","focusedElement","items","String","results","Promise","all","map","item","matchesQuery","i","setHidden","render","h","Host","class","name","ref","type","role","placeholder","onKeyDown","onInput","onClick","onMouseEnter","innerHTML","html_content"],"sources":["src/components/ir-m-combobox/ir-m-combobox.css?tag=ir-m-combobox&encapsulation=scoped","src/components/ir-m-combobox/ir-m-combobox.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: block;\n}\n\n/* Input wrapper and affix (prefix/suffix) positioning */\n.input-wrapper {\n  position: relative;\n  width: 100%;\n}\n\n.prefix-container,\n.suffix-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: inline-flex;\n  align-items: center;\n  color: var(--ir-combobox-affix-color, #6c757d);\n  pointer-events: none;\n}\n.dropdown-item {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.prefix-container {\n  left: 0.5rem;\n}\n\n.suffix-container {\n  right: 0.5rem;\n}\n\n/* Default sizing for slotted icons/elements */\n::slotted([slot='prefix']),\n::slotted([slot='suffix']) {\n  display: inline-flex;\n  width: var(--ir-combobox-affix-size, 1rem);\n  height: var(--ir-combobox-affix-size, 1rem);\n}\n\n/* Adjust input paddings if prefix/suffix exist */\n:host(.has-prefix) input.form-control {\n  padding-left: calc(0.75rem + var(--ir-combobox-affix-size, 1rem));\n}\n\n:host(.has-suffix) input.form-control {\n  padding-right: calc(0.75rem + var(--ir-combobox-affix-size, 1rem));\n}\n.dropdown {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  width: 100%;\n}\n\n.dropdown-menu {\n  max-height: var(--ir-combobox-height, 200px);\n  overflow-y: auto;\n  min-width: 100%;\n  width: var(--ir-combobox-width, 100%) !important;\n  scroll-behavior: smooth;\n}\n\n.dropdown-item.loading,\n.dropdown-item.no-results {\n  color: #6c757d;\n  cursor: default;\n  pointer-events: none;\n}\n.dropdown-item {\n  padding: 0.5rem 1rem !important;\n}\n\n.dropdown-item.active,\n.dropdown-item:active,\n.dropdown-item.focused {\n  background-color: var(--blue, #1e9ff2) !important;\n  color: white !important;\n}\n\n/* Slot content focus styles */\n[slot='dropdown-content'] .dropdown-item.focused,\n[slot='dropdown-content'] .dropdown-item.active {\n  background-color: #1e9ff2 !important;\n  color: white !important;\n}\n\n[slot='dropdown-content'] [data-option].focused,\n[slot='dropdown-content'] [data-option].active {\n  background-color: #1e9ff2 !important;\n  color: white !important;\n}\n","import { Component, Host, h, Element, State, Listen, Prop, Event, EventEmitter, Watch, Method } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { ComboboxOption, DataMode } from './types';\n\n@Component({\n  tag: 'ir-m-combobox',\n  styleUrl: 'ir-m-combobox.css',\n  scoped: true,\n})\nexport class IrMCombobox {\n  @Element() el: HTMLElement;\n\n  /**\n   * Placeholder text displayed in the input when no option is selected.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * default selected option for the combobox.\n   */\n  @Prop() defaultOption: ComboboxOption['value'];\n\n  /**\n   * Determines how the options are loaded into the component.\n   * - 'static': Uses the options passed through the `options` prop or the default internal list.\n   * - 'external': Emits search events for external handling, options updated via `options` prop.\n   *\n   * @default 'static'\n   */\n  @Prop() dataMode: DataMode = 'static';\n\n  /**\n   * List of available options for the combobox when using static data mode.\n   * If empty, falls back to a default internal option list.\n   */\n  @Prop() options: ComboboxOption[] = [];\n\n  /**\n   * Debounce delay in milliseconds for search events when using external data mode.\n   * @default 300\n   */\n  @Prop() debounceDelay: number = 300;\n\n  /**\n   * Whether to show loading state\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Whether to use slot content for custom dropdown rendering\n   */\n  @Prop({ mutable: true }) useSlot: boolean = false;\n\n  @State() isOpen: boolean = false;\n  @State() selectedOption: ComboboxOption;\n  @State() focusedIndex: number = -1;\n  @State() filteredOptions: ComboboxOption[] = [];\n  @State() slotElements: HTMLElement[] = [];\n  @State() hasPrefix: boolean = false;\n  @State() hasSuffix: boolean = false;\n  @State() itemChildren: HTMLIrMComboboxItemElement[] = [];\n\n  /**\n   * Emitted when a user selects an option from the combobox.\n   * The event payload contains the selected `ComboboxOption` object.\n   */\n  @Event() optionChange: EventEmitter<ComboboxOption>;\n\n  /**\n   * Emitted when the user types in the input field (debounced).\n   * Used for external data fetching in 'external' data mode.\n   */\n  @Event() searchQuery: EventEmitter<string>;\n\n  /**\n   * Public method to select an option from external slot content\n   */\n  @Method()\n  async selectOptionFromSlot(option: ComboboxOption) {\n    this.selectOption(option);\n  }\n\n  private inputRef: HTMLInputElement;\n  private dropdownRef: HTMLElement;\n  private id = v4();\n  private dropdownId = `dropdown-${this.id}`;\n  private debounceTimeout: NodeJS.Timeout;\n  private prefixSlotRef: HTMLSlotElement;\n  private suffixSlotRef: HTMLSlotElement;\n  private mo: MutationObserver | null = null;\n\n  private get isCompositionMode() {\n    return this.itemChildren.length > 0;\n  }\n\n  @Watch('options')\n  watchOptionsChanged(newOptions: ComboboxOption[]) {\n    this.filteredOptions = newOptions || [];\n    if (this.useSlot) {\n      this.updateSlotElements();\n    }\n  }\n  @Watch('defaultOption')\n  watchDefaultValueChanged(newOption: string) {\n    if (newOption !== this.selectedOption.value) {\n      this.applyDefaultOption();\n    }\n  }\n\n  @Watch('useSlot')\n  watchUseSlotChanged() {\n    if (this.useSlot) {\n      setTimeout(() => this.updateSlotElements(), 0);\n    }\n  }\n\n  componentWillLoad() {\n    this.initializeOptions();\n    // discover items on first paint\n    this.collectItemChildren();\n\n    // watch DOM changes to children\n    this.mo = new MutationObserver(() => this.collectItemChildren());\n    this.mo.observe(this.el, { childList: true, subtree: true });\n  }\n\n  componentDidLoad() {\n    document.addEventListener('click', this.handleDocumentClick.bind(this));\n\n    // existing stuff\n    if (this.useSlot) {\n      setTimeout(() => this.updateSlotElements(), 0);\n    }\n    setTimeout(() => this.updateAffixPresence(), 0);\n    setTimeout(() => {\n      this.applyDefaultOption();\n    }, 0);\n    this.prefixSlotRef?.addEventListener('slotchange', this.updateAffixPresence);\n    this.suffixSlotRef?.addEventListener('slotchange', this.updateAffixPresence);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.handleDocumentClick.bind(this));\n    if (this.debounceTimeout) clearTimeout(this.debounceTimeout);\n    this.prefixSlotRef?.removeEventListener('slotchange', this.updateAffixPresence);\n    this.suffixSlotRef?.removeEventListener('slotchange', this.updateAffixPresence);\n    this.mo?.disconnect();\n  }\n\n  @Listen('keydown', { target: 'document' })\n  handleDocumentKeyDown(event: KeyboardEvent) {\n    if (!this.isOpen) return;\n\n    if (event.key === 'Escape') {\n      this.closeDropdown();\n      this.inputRef?.focus();\n    }\n  }\n  @Listen('comboboxItemSelect')\n  handleComboboxItemSelect(ev: CustomEvent<ComboboxOption>) {\n    ev.stopPropagation();\n    console.log(ev.detail);\n    this.selectOption(ev.detail);\n  }\n\n  @Listen('comboboxItemRegister')\n  handleComboboxItemRegister() {\n    this.collectItemChildren();\n  }\n\n  @Listen('comboboxItemUnregister')\n  handleComboboxItemUnregister() {\n    this.collectItemChildren();\n  }\n\n  private applyDefaultOption() {\n    if (!this.defaultOption || !Array.isArray(this.options)) return;\n    const opt = this.options.find(o => o.value === this.defaultOption);\n    if (opt) this.selectedOption = { ...opt };\n  }\n\n  private initializeOptions() {\n    this.filteredOptions = this.options.length > 0 ? this.options : [];\n  }\n\n  private handleDocumentClick = (event: Event) => {\n    if (!this.el.contains(event.target as Node)) {\n      this.closeDropdown();\n    }\n  };\n\n  // private openDropdown() {\n  //   this.isOpen = true;\n  //   if (this.useSlot) {\n  //     this.focusedIndex = -1;\n  //     setTimeout(() => this.updateSlotElements(), 0);\n  //   } else {\n  //     this.focusedIndex = this.selectedOption ? this.filteredOptions.findIndex(v => v.value === this.selectedOption.value) : -1;\n  //   }\n  // }\n  private openDropdown() {\n    this.isOpen = true;\n    if (this.isCompositionMode || this.useSlot) {\n      this.focusedIndex = -1;\n      setTimeout(() => (this.isCompositionMode ? this.updateSlotElementsForItems() : this.updateSlotElements()), 0);\n    } else {\n      this.focusedIndex = this.selectedOption ? this.filteredOptions.findIndex(v => v.value === this.selectedOption.value) : -1;\n    }\n  }\n  private emitSearchQuery(query: string) {\n    if (this.debounceTimeout) {\n      clearTimeout(this.debounceTimeout);\n    }\n\n    this.debounceTimeout = setTimeout(() => {\n      this.searchQuery.emit(query);\n    }, this.debounceDelay);\n  }\n\n  private closeDropdown() {\n    this.isOpen = false;\n    this.focusedIndex = -1;\n    this.removeSlotFocus();\n  }\n\n  private updateSlotElements() {\n    if (!this.useSlot || !this.dropdownRef) return;\n\n    const slotElement = this.dropdownRef.querySelector('slot[name=\"dropdown-content\"]');\n    if (slotElement) {\n      const assignedElements = (slotElement as any).assignedElements\n        ? (slotElement as any).assignedElements()\n        : Array.from(this.el.querySelectorAll('[slot=\"dropdown-content\"] [data-option]'));\n\n      this.slotElements = assignedElements.length > 0 ? assignedElements : Array.from(this.dropdownRef.querySelectorAll('[data-option], .dropdown-item[style*=\"cursor\"]'));\n\n      this.slotElements.forEach((element, index) => {\n        element.setAttribute('data-slot-index', index.toString());\n        element.setAttribute('role', 'option');\n        element.setAttribute('tabindex', '-1');\n      });\n    }\n  }\n\n  private updateAffixPresence = () => {\n    try {\n      const prefixAssigned =\n        this.prefixSlotRef && (this.prefixSlotRef as any).assignedElements\n          ? (this.prefixSlotRef as any).assignedElements()\n          : Array.from(this.el.querySelectorAll('[slot=\"prefix\"]'));\n      const suffixAssigned =\n        this.suffixSlotRef && (this.suffixSlotRef as any).assignedElements\n          ? (this.suffixSlotRef as any).assignedElements()\n          : Array.from(this.el.querySelectorAll('[slot=\"suffix\"]'));\n\n      this.hasPrefix = Array.isArray(prefixAssigned) ? prefixAssigned.length > 0 : false;\n      this.hasSuffix = Array.isArray(suffixAssigned) ? suffixAssigned.length > 0 : false;\n    } catch (e) {\n      const prefixFallback = this.el.querySelector('[slot=\"prefix\"]');\n      const suffixFallback = this.el.querySelector('[slot=\"suffix\"]');\n      this.hasPrefix = !!prefixFallback;\n      this.hasSuffix = !!suffixFallback;\n    }\n  };\n\n  private removeSlotFocus() {\n    this.slotElements.forEach(element => {\n      element.classList.remove('focused', 'active');\n      element.removeAttribute('aria-selected');\n    });\n  }\n\n  private focusSlotElement(index: number) {\n    this.removeSlotFocus();\n    if (index >= 0 && index < this.slotElements.length) {\n      const element = this.slotElements[index];\n      element.classList.add('focused', 'active');\n      element.setAttribute('aria-selected', 'true');\n      element.scrollIntoView({ block: 'nearest' });\n    }\n  }\n\n  private selectSlotElement(index: number) {\n    if (index >= 0 && index < this.slotElements.length) {\n      const element = this.slotElements[index];\n      element.click();\n    }\n  }\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    const maxIndex = this.useSlot ? this.slotElements.length - 1 : this.filteredOptions.length - 1;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!this.isOpen) {\n          this.openDropdown();\n        } else {\n          this.focusedIndex = Math.min(this.focusedIndex + 1, maxIndex);\n          if (this.useSlot) {\n            this.focusSlotElement(this.focusedIndex);\n          } else {\n            this.scrollToFocusedOption();\n          }\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (this.isOpen) {\n          this.focusedIndex = Math.max(this.focusedIndex - 1, 0);\n          if (this.useSlot) {\n            this.focusSlotElement(this.focusedIndex);\n          } else {\n            this.scrollToFocusedOption();\n          }\n        }\n        break;\n\n      case 'Enter':\n        event.preventDefault();\n        if (this.isOpen && this.focusedIndex >= 0) {\n          if (this.useSlot) {\n            this.selectSlotElement(this.focusedIndex);\n          } else {\n            this.selectOption(this.filteredOptions[this.focusedIndex]);\n          }\n        } else if (!this.isOpen) {\n          this.openDropdown();\n        }\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        this.closeDropdown();\n        break;\n\n      case 'Tab':\n        if (this.isOpen) {\n          this.closeDropdown();\n        }\n        break;\n    }\n  };\n\n  private selectOption(option: ComboboxOption) {\n    this.selectedOption = option;\n    this.optionChange.emit(option);\n    this.closeDropdown();\n    this.inputRef?.focus();\n  }\n\n  private scrollToFocusedOption() {\n    if (this.focusedIndex < 0 || !this.dropdownRef || this.useSlot) return;\n\n    const focusedElement = this.dropdownRef.querySelector(`#${this.dropdownId}-option-${this.focusedIndex}`) as HTMLElement;\n    if (focusedElement) {\n      focusedElement.scrollIntoView({ block: 'nearest' });\n    }\n  }\n\n  // private handleInput = (event: Event) => {\n  //   const target = event.target as HTMLInputElement;\n  //   const value = target.value;\n\n  //   if (this.dataMode === 'external') {\n  //     this.emitSearchQuery(value);\n  //   } else {\n  //     const allOptions = this.options.length > 0 ? this.options : [];\n  //     this.filteredOptions = value ? allOptions.filter(option => option.label.toLowerCase().includes(value.toLowerCase())) : allOptions;\n  //   }\n\n  //   this.focusedIndex = -1;\n  //   if (!this.isOpen) {\n  //     this.openDropdown();\n  //   }\n  // };\n  private handleInput = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n\n    if (this.dataMode === 'external' && !this.isCompositionMode) {\n      this.emitSearchQuery(value);\n    } else if (this.isCompositionMode) {\n      // composition mode: filter child items\n      this.filterComposition(value);\n    } else {\n      // static options mode (existing behavior)\n      const allOptions = this.options.length > 0 ? this.options : [];\n      this.filteredOptions = value ? allOptions.filter(option => option.label.toLowerCase().includes(value.toLowerCase())) : allOptions;\n    }\n\n    this.focusedIndex = -1;\n    if (!this.isOpen) {\n      this.openDropdown();\n    }\n  };\n  private collectItemChildren() {\n    // find *direct or nested* items inside the dropdown container\n    const items = Array.from(this.el.querySelectorAll('ir-m-combobox-item')) as HTMLIrMComboboxItemElement[];\n    this.itemChildren = items;\n    console.log(items);\n    // when in composition mode, use slot-like navigation on the items\n    if (this.isCompositionMode) {\n      this.useSlot = true; // leverage your existing slot-based keyboard handling\n      setTimeout(() => this.updateSlotElementsForItems(), 0);\n    }\n  }\n\n  private updateSlotElementsForItems() {\n    // Treat the child items as \"slot elements\" for nav\n    this.slotElements = this.itemChildren as unknown as HTMLElement[];\n\n    // index and decorate for ARIA & focus handling\n    this.slotElements.forEach((el, index) => {\n      el.setAttribute('data-slot-index', String(index));\n      el.setAttribute('role', 'option');\n      el.setAttribute('tabindex', '-1');\n    });\n  }\n  private async filterComposition(query: string) {\n    // Hide/show each child according to its own matching logic\n    const results: boolean[] = await Promise.all(this.itemChildren.map(item => item.matchesQuery(query)));\n\n    await Promise.all(this.itemChildren.map((item, i) => item.setHidden(query ? !results[i] : false)));\n\n    // refresh slotElements (only visible items should be navigable)\n    this.updateSlotElementsForItems();\n  }\n\n  render() {\n    return (\n      <Host class={{ 'has-prefix': this.hasPrefix, 'has-suffix': this.hasSuffix }}>\n        <div class=\"input-wrapper\">\n          <span class=\"prefix-container\" aria-hidden={!this.hasPrefix}>\n            <slot name=\"prefix\" ref={el => (this.prefixSlotRef = el as HTMLSlotElement)}></slot>\n          </span>\n          <input\n            ref={el => (this.inputRef = el)}\n            type=\"text\"\n            class=\"form-control\"\n            role=\"combobox\"\n            id={this.id}\n            value={this.selectedOption?.label || ''}\n            placeholder={this.placeholder}\n            aria-expanded={String(this.isOpen)}\n            aria-autocomplete=\"list\"\n            aria-controls={this.dropdownId}\n            data-reference=\"parent\"\n            aria-haspopup=\"listbox\"\n            aria-activedescendant={this.focusedIndex >= 0 ? `${this.dropdownId}-option-${this.focusedIndex}` : null}\n            aria-label=\"Combobox\"\n            aria-required={true}\n            onKeyDown={this.handleKeyDown}\n            onInput={this.handleInput}\n          />\n          <span class=\"suffix-container\" aria-hidden={!this.hasSuffix}>\n            <slot name=\"suffix\" ref={el => (this.suffixSlotRef = el as HTMLSlotElement)}></slot>\n          </span>\n        </div>\n        <div class={`dropdown ${this.isOpen ? 'show' : ''}`}>\n          <div ref={el => (this.dropdownRef = el)} class={`dropdown-menu ${this.isOpen ? 'show' : ''}`} id={this.dropdownId} role=\"listbox\" aria-expanded={String(this.isOpen)}>\n            {this.isCompositionMode ? (\n              <slot></slot>\n            ) : this.useSlot ? (\n              <slot name=\"dropdown-content\"></slot>\n            ) : (\n              [\n                this.loading && <div class=\"dropdown-item loading\">Loading...</div>,\n                !this.loading && this.filteredOptions.length === 0 && <div class=\"dropdown-item no-results\">No results found</div>,\n                !this.loading &&\n                  this.filteredOptions.map((option, index) => (\n                    <button\n                      id={`${this.dropdownId}-option-${index}`}\n                      class={`dropdown-item ${this.focusedIndex === index ? 'active' : ''}`}\n                      role=\"option\"\n                      aria-selected={this.selectedOption?.value === option.value ? 'true' : 'false'}\n                      onClick={() => this.selectOption(option)}\n                      onMouseEnter={() => (this.focusedIndex = index)}\n                      innerHTML={option.html_content}\n                    >\n                      {option.html_content ? null : option.label}\n                    </button>\n                  )),\n              ]\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}