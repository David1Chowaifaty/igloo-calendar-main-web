{"version":3,"names":["irLabelCss","IrLabelStyle0","IrLabel","openEditSidebar","this","editSidebar","emit","render","value","h","Host","class","imageSrc","label","src","iconShown","id","onIconClickHandler","e","stopImmediatePropagation","stopPropagation","slot","xmlns","height","width","viewBox","fill","d","irModalCss","IrModalStyle0","IrModal","closeModal","isOpen","openModal","btnClickHandler","event","target","name","leftBtnText","cancelModal","item","rightBtnText","confirmModal","key","onClick","tabindex","modalBody","btnPosition","leftBtnActive","icon","btn_color","leftBtnColor","btn_block","text","rightBtnActive","rightBtnColor"],"sources":["src/components/ir-label/ir-label.css?tag=ir-label&encapsulation=scoped","src/components/ir-label/ir-label.tsx","src/components/ir-modal/ir-modal.css?tag=ir-modal&encapsulation=scoped","src/components/ir-modal/ir-modal.tsx"],"sourcesContent":["* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host {\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  gap: 5px;\r\n}\r\n.icon {\r\n  margin-left: 3px;\r\n  padding: 0;\r\n  margin-top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\np {\r\n  margin: 0 3px;\r\n  padding: 0;\r\n}\r\n.icon-container {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nsvg {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n","import { Component, Prop, h, EventEmitter, Event, Host } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-label',\r\n  styleUrl: 'ir-label.css',\r\n  scoped: true,\r\n})\r\nexport class IrLabel {\r\n  // Properties\r\n  @Prop() label: string;\r\n  @Prop() value: string;\r\n  @Prop() iconShown = false;\r\n  @Prop() imageSrc: string;\r\n\r\n  // Events\r\n  @Event() editSidebar: EventEmitter;\r\n\r\n  openEditSidebar() {\r\n    this.editSidebar.emit();\r\n  }\r\n\r\n  render() {\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Host class={this.imageSrc ? 'align-items-center' : ''}>\r\n        <strong>{this.label}</strong>\r\n        {this.imageSrc && <img src={this.imageSrc} class=\"p-0 m-0\" />}\r\n        <p>{this.value}</p>\r\n        {this.iconShown && (\r\n          <div class=\"icon-container\">\r\n            <ir-icon\r\n              class=\"pointer icon\"\r\n              id=\"pickup\"\r\n              onIconClickHandler={e => {\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n                this.openEditSidebar();\r\n              }}\r\n            >\r\n              <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"15\" width=\"15\" viewBox=\"0 0 512 550\">\r\n                <path\r\n                  fill=\"#6b6f82\"\r\n                  d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\"\r\n                />\r\n              </svg>\r\n            </ir-icon>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".backdropModal {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n  pointer-events: none;\r\n}\r\n.backdropModal.active {\r\n  cursor: pointer;\r\n  opacity: 1 !important;\r\n  pointer-events: all;\r\n}\r\n\r\n.ir-modal[data-state='opened'] {\r\n  opacity: 1;\r\n  /* transform: translate(-50%, 0); */\r\n  visibility: visible; /* Make modal visible */\r\n  pointer-events: all; /* Restore pointer events */\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n.ir-alert-content {\r\n  padding: 10px;\r\n  background: white;\r\n  border-radius: 5px;\r\n}\r\n.modal {\r\n  z-index: 1001 !important;\r\n}\r\n\r\n.modal-dialog {\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.ir-alert-footer {\r\n  gap: 10px;\r\n}\r\n.ir-modal {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 1050;\r\n  width: 90%;\r\n  max-width: 32rem;\r\n  overflow: hidden;\r\n  outline: 0;\r\n  opacity: 0;\r\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n  visibility: hidden;\r\n  pointer-events: none;\r\n}\r\n\r\n.ir-modal.active {\r\n  opacity: 1;\r\n  transform: translate(-50%, 0);\r\n  visibility: visible; /* Make modal visible */\r\n  pointer-events: all; /* Restore pointer events */\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n","import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-modal',\r\n  styleUrl: 'ir-modal.css',\r\n  scoped: true,\r\n})\r\nexport class IrModal {\r\n  @Prop() modalTitle: string = 'Modal Title';\r\n  @Prop() modalBody: string = 'Modal Body';\r\n\r\n  @Prop() rightBtnActive: boolean = true;\r\n  @Prop() leftBtnActive: boolean = true;\r\n\r\n  @Prop() rightBtnText: string = 'Confirm';\r\n  @Prop() leftBtnText: string = 'Close';\r\n\r\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\r\n\r\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\r\n  @Prop() iconAvailable: boolean = false;\r\n  @Prop() icon: string = '';\r\n\r\n  @State() isOpen: boolean = false;\r\n\r\n  @Method()\r\n  async closeModal() {\r\n    this.isOpen = false;\r\n  }\r\n  @Method()\r\n  async openModal() {\r\n    this.isOpen = true;\r\n  }\r\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\r\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\r\n\r\n  @Listen('clickHanlder')\r\n  btnClickHandler(event: CustomEvent) {\r\n    let target = event.target as HTMLInputElement;\r\n    let name = target.name;\r\n\r\n    if (name === this.leftBtnText) {\r\n      this.cancelModal.emit();\r\n      this.item = {};\r\n      this.closeModal();\r\n    } else if (name === this.rightBtnText) {\r\n      this.confirmModal.emit(this.item);\r\n      this.item = {};\r\n      this.closeModal();\r\n    }\r\n  }\r\n\r\n  @Prop({ mutable: true }) item: any = {};\r\n\r\n  render() {\r\n    return [\r\n      <div\r\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\r\n        onClick={() => {\r\n          this.closeModal();\r\n        }}\r\n      ></div>,\r\n      <div data-state={this.isOpen ? 'opened' : 'closed'} class={`ir-modal`} tabindex=\"-1\">\r\n        <div class={`ir-alert-content p-2`}>\r\n          <div class={`ir-alert-header align-items-center border-0 py-0 m-0 `}>\r\n            {/*\r\n            <p class=\"font-weight-bold p-0 my-0 mb-1\">\r\n              {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} \r\n               {this.modalBody} \r\n              {this.modalTitle}\r\n            </p>\r\n            */}\r\n            {/* <div class=\"font-weight-bold d-flex align-items-center font-size-large my-0 py-0\">\r\n              <ir-icon\r\n                icon=\"ft-x\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => {\r\n                  this.closeModal();\r\n                  this.cancelModal.emit();\r\n                }}\r\n              ></ir-icon>\r\n            </div> */}\r\n          </div>\r\n          <div class=\"modal-body text-left p-0 mb-2\">\r\n            <div>{this.modalBody}</div>\r\n          </div>\r\n\r\n          <div class={`ir-alert-footer border-0  d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\r\n            {this.leftBtnActive && <ir-button icon={''} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>}\r\n            {this.rightBtnActive && <ir-button icon={''} btn_color={this.rightBtnColor} btn_block text={this.rightBtnText} name={this.rightBtnText}></ir-button>}\r\n          </div>\r\n        </div>\r\n      </div>,\r\n    ];\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAa,0SACnB,MAAAC,EAAeD,E,MCMFE,EAAO,M,2HAIE,M,wBAMpB,eAAAC,GACEC,KAAKC,YAAYC,M,CAGnB,MAAAC,GACE,IAAKH,KAAKI,MAAO,CACf,OAAO,I,CAGT,OACEC,EAACC,EAAI,CAACC,MAAOP,KAAKQ,SAAW,qBAAuB,IAClDH,EAAA,cAASL,KAAKS,OACbT,KAAKQ,UAAYH,EAAA,OAAKK,IAAKV,KAAKQ,SAAUD,MAAM,YACjDF,EAAA,SAAIL,KAAKI,OACRJ,KAAKW,WACJN,EAAA,OAAKE,MAAM,kBACTF,EAAA,WACEE,MAAM,eACNK,GAAG,SACHC,mBAAoBC,IAClBA,EAAEC,2BACFD,EAAEE,kBACFhB,KAAKD,iBAAiB,GAGxBM,EAAA,OAAKY,KAAK,OAAOC,MAAM,6BAA6BC,OAAO,KAAKC,MAAM,KAAKC,QAAQ,eACjFhB,EAAA,QACEiB,KAAK,UACLC,EAAE,4f,aC7CpB,MAAMC,EAAa,6iCACnB,MAAAC,EAAeD,E,MCMFE,EAAO,M,6HACW,c,eACD,a,oBAEM,K,mBACD,K,kBAEF,U,iBACD,Q,mBAEkF,U,kBACD,Y,iBAE5D,Q,mBAClB,M,UACV,G,YAEI,M,UA6BU,E,CA1BrC,gBAAMC,GACJ3B,KAAK4B,OAAS,K,CAGhB,eAAMC,GACJ7B,KAAK4B,OAAS,I,CAMhB,eAAAE,CAAgBC,GACd,IAAIC,EAASD,EAAMC,OACnB,IAAIC,EAAOD,EAAOC,KAElB,GAAIA,IAASjC,KAAKkC,YAAa,CAC7BlC,KAAKmC,YAAYjC,OACjBF,KAAKoC,KAAO,GACZpC,KAAK2B,Y,MACA,GAAIM,IAASjC,KAAKqC,aAAc,CACrCrC,KAAKsC,aAAapC,KAAKF,KAAKoC,MAC5BpC,KAAKoC,KAAO,GACZpC,KAAK2B,Y,EAMT,MAAAxB,GACE,MAAO,CACLE,EAAA,OAAAkC,IAAA,2CACEhC,MAAO,iBAAiBP,KAAK4B,OAAS,SAAW,KACjDY,QAAS,KACPxC,KAAK2B,YAAY,IAGrBtB,EAAA,OAAAkC,IAAA,wDAAiBvC,KAAK4B,OAAS,SAAW,SAAUrB,MAAO,WAAYkC,SAAS,MAC9EpC,EAAA,OAAAkC,IAAA,2CAAKhC,MAAO,wBACVF,EAAA,OAAAkC,IAAA,2CAAKhC,MAAO,0DAmBZF,EAAA,OAAAkC,IAAA,2CAAKhC,MAAM,iCACTF,EAAA,OAAAkC,IAAA,4CAAMvC,KAAK0C,YAGbrC,EAAA,OAAAkC,IAAA,2CAAKhC,MAAO,oDAAoDP,KAAK2C,cAAgB,SAAW,SAAW3C,KAAK2C,cAAgB,OAAS,QAAU,SAChJ3C,KAAK4C,eAAiBvC,EAAA,aAAWwC,KAAM,GAAIC,UAAW9C,KAAK+C,aAAcC,UAAS,KAACC,KAAMjD,KAAKkC,YAAaD,KAAMjC,KAAKkC,cACtHlC,KAAKkD,gBAAkB7C,EAAA,aAAWwC,KAAM,GAAIC,UAAW9C,KAAKmD,cAAeH,UAAS,KAACC,KAAMjD,KAAKqC,aAAcJ,KAAMjC,KAAKqC,kB"}