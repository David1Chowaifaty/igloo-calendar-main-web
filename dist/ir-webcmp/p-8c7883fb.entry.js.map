{"version":3,"names":["irTextareaCss","IrTextareaStyle0","IrTextArea","handleAriaInvalidChange","newValue","this","error","connectedCallback","disconnectedCallback","render","variant","h","class","labelWidth","label","value","style","height","maxLength","onChange","e","textChange","emit","target","rows","textareaClassname","placeholder","onInput"],"sources":["src/components/ir-textarea/ir-textarea.css?tag=ir-textarea&encapsulation=scoped","src/components/ir-textarea/ir-textarea.tsx"],"sourcesContent":[".prepend-textarea {\r\n  padding: 0 !important ;\r\n}\r\n.ta-prepend-text {\r\n  width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-textarea',\r\n  styleUrl: 'ir-textarea.css',\r\n  scoped: true,\r\n})\r\nexport class IrTextArea {\r\n  @Prop() rows = 3;\r\n  @Prop() cols = 5;\r\n  @Prop() text = '';\r\n  @Prop() label = '<label>';\r\n  @Prop() placeholder = '<placeholder>';\r\n  @Prop() value = '';\r\n  @Prop() maxLength: number = 250;\r\n  @Prop() textareaClassname: string;\r\n  @Prop() variant: 'default' | 'prepend' = 'default';\r\n  @Prop() labelWidth: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 = 3;\r\n  @State() error = false;\r\n\r\n  @Event() textChange: EventEmitter<string>;\r\n\r\n  @Watch('aria-invalid')\r\n  handleAriaInvalidChange(newValue) {\r\n    this.error = newValue === 'true';\r\n  }\r\n  connectedCallback() {}\r\n  disconnectedCallback() {}\r\n  render() {\r\n    if (this.variant === 'prepend') {\r\n      return (\r\n        <fieldset class=\"input-group\">\r\n          <div class={`input-group-prepend col-${this.labelWidth} prepend-textarea`}>\r\n            <span class=\"input-group-text ta-prepend-text\">{this.label}</span>\r\n          </div>\r\n          <textarea\r\n            value={this.value}\r\n            class={`form-control`}\r\n            style={{ height: '7rem' }}\r\n            maxLength={this.maxLength}\r\n            onChange={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\r\n            aria-label={this.label}\r\n          ></textarea>\r\n        </fieldset>\r\n      );\r\n    }\r\n    return (\r\n      <div class={'form-group'}>\r\n        <label>{this.label}</label>\r\n        <textarea\r\n          maxLength={this.maxLength}\r\n          rows={this.rows}\r\n          value={this.value}\r\n          class={`form-control ${this.textareaClassname} ${this.error ? 'border-danger' : ''}`}\r\n          placeholder={this.placeholder}\r\n          onInput={e => this.textChange.emit((e.target as HTMLTextAreaElement).value)}\r\n        ></textarea>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"kDAAA,MAAMA,EAAgB,oGACtB,MAAAC,EAAeD,E,MCMFE,EAAU,M,0EACN,E,UACA,E,UACA,G,WACC,U,iBACM,gB,WACN,G,eACY,I,8CAEa,U,gBACyB,E,WACjD,K,CAKjB,uBAAAC,CAAwBC,GACtBC,KAAKC,MAAQF,IAAa,M,CAE5B,iBAAAG,GAAiB,CACjB,oBAAAC,GAAoB,CACpB,MAAAC,GACE,GAAIJ,KAAKK,UAAY,UAAW,CAC9B,OACEC,EAAA,YAAUC,MAAM,eACdD,EAAA,OAAKC,MAAO,2BAA2BP,KAAKQ,+BAC1CF,EAAA,QAAMC,MAAM,oCAAoCP,KAAKS,QAEvDH,EAAA,YACEI,MAAOV,KAAKU,MACZH,MAAO,eACPI,MAAO,CAAEC,OAAQ,QACjBC,UAAWb,KAAKa,UAChBC,SAAUC,GAAKf,KAAKgB,WAAWC,KAAMF,EAAEG,OAA+BR,OAAM,aAChEV,KAAKS,Q,CAKzB,OACEH,EAAA,OAAKC,MAAO,cACVD,EAAA,aAAQN,KAAKS,OACbH,EAAA,YACEO,UAAWb,KAAKa,UAChBM,KAAMnB,KAAKmB,KACXT,MAAOV,KAAKU,MACZH,MAAO,gBAAgBP,KAAKoB,qBAAqBpB,KAAKC,MAAQ,gBAAkB,KAChFoB,YAAarB,KAAKqB,YAClBC,QAASP,GAAKf,KAAKgB,WAAWC,KAAMF,EAAEG,OAA+BR,S","ignoreList":[]}