{"version":3,"names":["SystemService","validateOTP","params","data","axios","post","ExceptionMsg","Error","resendOTP","checkOTPNecessity"],"sources":["src/services/system.service.ts"],"sourcesContent":["import axios from 'axios';\n\nexport class SystemService {\n  public async validateOTP(params: { METHOD_NAME: string; OTP: string }) {\n    const { data } = await axios.post('/Validate_Exposed_OTP', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async resendOTP(params: { METHOD_NAME: string }) {\n    const { data } = await axios.post('/Resend_Exposed_OTP', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async checkOTPNecessity(params: { METHOD_NAME: string }) {\n    const { data } = await axios.post('/Check_OTP_Necessity', params);\n    return data;\n  }\n}\n"],"mappings":"qCAEaA,EACJ,iBAAMC,CAAYC,GACvB,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,wBAAyBH,GAC3D,GAAIC,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,OAAOH,C,CAEF,eAAMK,CAAUN,GACrB,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,sBAAuBH,GACzD,GAAIC,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,OAAOH,C,CAEF,uBAAMM,CAAkBP,GAC7B,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,uBAAwBH,GAC1D,OAAOC,C","ignoreList":[]}