{"version":3,"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","emitReserved","listeners","hasListeners","nextTick","isPromiseAvailable","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","Date","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","Polling","_polling","name","_poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","WT","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","DEFAULT_TRANSPORTS","filter","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"sources":["node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/@socket.io/component-emitter/lib/esm/index.js","node_modules/engine.io-client/build/esm/globals.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/url.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],"mappings":"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","ignoreList":[]}