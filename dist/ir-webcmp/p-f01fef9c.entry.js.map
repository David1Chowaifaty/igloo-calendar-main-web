{"version":3,"names":["irDailyRevenueFiltersCss","IrDailyRevenueFiltersStyle0","IrDailyRevenueFilters","constructor","hostRef","this","collapsed","users","Set","baseFilters","date","moment","format","componentWillLoad","filters","Object","assign","updateGuests","handlePaymentChange","set","payments","forEach","payment","p","add","user","applyFiltersEvt","e","stopImmediatePropagation","stopPropagation","fetchNewReports","emit","resetFilters","updateFilter","params","render","h","key","class","style","gap","xmlns","viewBox","height","width","fill","d","locales","entries","Lcz_Filters","variant","id","icon_name","onClickHandler","htmlFor","paddingBottom","_a","emitEmptyDate","maxDate","onDateChanged","evt","detail","start","slot","type","value","_b","btn_type","text","Lcz_Reset","size","btn_color","isLoading","Lcz_Apply","irRevenueRowCss","IrRevenueRowStyle0","accId","IrRevenueRow","contentId","total","reduce","prev","curr","amount","Host","groupName","length","formatAmount","calendar_data","currency","symbol","map","irRevenueSummaryCss","IrRevenueSummaryStyle0","IrRevenueSummary","groupedPayments","Map","previousDateGroupedPayments","calculateTotalPayments","split","calculateTotalValue","calculateTotalRefunds","refundKeyCode","push","c","getTrendIcon","val1","val2","undefined","paymentsTotal","refundAmount","totalAmount","previousDatePaymentsTotal","previousDateRefundAmount","previousDateTotalAmount","icon","cardTitle","subtitle","irRevenueTableCss","IrRevenueTableStyle0","IrRevenueTable","groupType","buildPaymentLookup","pt","paymentEntries","CODE_NAME","CODE_VALUE_EN","payTypesObj","payMethodObj","regroupPaymentsByMethod","result","src","parseKey","rest","method","join","safeType","trim","safeMethod","rawKey","rawList","paymentType","paymentMethod","list","Array","isArray","filter","Boolean","has","get","typeMap","existing","concat","hasPayments","Fragment","from","PAYMENT_TYPES_WITH_METHOD","includes","_c","flatMap","methodKey","byType","_","typeKey"],"sources":["src/components/ir-daily-revenue/ir-daily-revenue-filters/ir-daily-revenue-filters.css?tag=ir-daily-revenue-filters&encapsulation=scoped","src/components/ir-daily-revenue/ir-daily-revenue-filters/ir-daily-revenue-filters.tsx","src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-row/ir-revenue-row.css?tag=ir-revenue-row&encapsulation=scoped","src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-row/ir-revenue-row.tsx","src/components/ir-daily-revenue/ir-revenue-summary/ir-revenue-summary.css?tag=ir-revenue-summary&encapsulation=scoped","src/components/ir-daily-revenue/ir-revenue-summary/ir-revenue-summary.tsx","src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-table.css?tag=ir-revenue-table&encapsulation=scoped","src/components/ir-daily-revenue/ir-revenue-table/ir-revenue-table.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.revenue-filter__date-picker-icon {\n  position: absolute;\n  inset: 0;\n  left: 0.75rem;\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  transform: translateY(-0.15rem);\n}\n:host {\n  display: block;\n  height: 100%;\n}\n@media (min-width: 768px) {\n  :host {\n    width: 300px;\n  }\n  .collapse-btn {\n    display: none;\n  }\n  #dailyRevenueFiltersCollapse.collapse:not(.show) {\n    display: block;\n  }\n}\n","import { Component, Event, EventEmitter, Prop, State, Watch, h } from '@stencil/core';\nimport moment from 'moment';\nimport { DailyPaymentFilter, GroupedFolioPayment } from '../types';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-daily-revenue-filters',\n  styleUrl: 'ir-daily-revenue-filters.css',\n  scoped: true,\n})\nexport class IrDailyRevenueFilters {\n  @Prop() payments: GroupedFolioPayment;\n  @Prop() isLoading: boolean;\n\n  @State() collapsed: boolean = false;\n  @State() users: Set<string> = new Set();\n  @State() filters: DailyPaymentFilter;\n  private baseFilters: DailyPaymentFilter = {\n    date: moment().format('YYYY-MM-DD'),\n    users: null,\n  };\n\n  @Event() fetchNewReports: EventEmitter<DailyPaymentFilter>;\n\n  componentWillLoad() {\n    this.filters = { ...this.baseFilters };\n    this.updateGuests();\n  }\n\n  @Watch('payments')\n  handlePaymentChange() {\n    this.updateGuests();\n  }\n  private updateGuests() {\n    const set: Set<string> = new Set();\n    this.payments.forEach(payment => {\n      payment.forEach(p => {\n        set.add(p.user);\n      });\n    });\n    this.users = new Set(set);\n  }\n\n  private applyFiltersEvt(e: CustomEvent): void {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.fetchNewReports.emit(this.filters);\n  }\n\n  private resetFilters(e: CustomEvent): void {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...this.baseFilters };\n    this.fetchNewReports.emit(this.filters);\n  }\n  private updateFilter(params: Partial<DailyPaymentFilter>) {\n    this.filters = { ...this.filters, ...params };\n  }\n  render() {\n    return (\n      <div class=\"card mb-0 p-1 d-flex flex-column sales-filters-card\">\n        <div class=\"d-flex align-items-center justify-content-between sales-filters-header\">\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n              <path\n                fill=\"currentColor\"\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\n              />\n            </svg>\n            <h4 class=\"m-0 p-0 flex-grow-1\">{locales.entries.Lcz_Filters}</h4>\n          </div>\n          <ir-button\n            variant=\"icon\"\n            id=\"drawer-icon\"\n            data-toggle=\"collapse\"\n            data-target=\"#dailyRevenueFiltersCollapse\"\n            aria-expanded={this.collapsed ? 'true' : 'false'}\n            aria-controls=\"dailyRevenueFiltersCollapse\"\n            class=\"mr-1 collapse-btn toggle-collapse-btn\"\n            icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\n            onClickHandler={() => {\n              this.collapsed = !this.collapsed;\n            }}\n            style={{ '--icon-size': '1.6rem' }}\n          ></ir-button>\n        </div>\n        <div class=\"m-0 p-0 collapse filters-section\" id=\"dailyRevenueFiltersCollapse\">\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\n            <fieldset class=\"pt-1 filter-group\">\n              <label htmlFor=\"rooms\" class=\"m-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                Select a date\n              </label>\n              <div class=\"w-100 d-flex\">\n                <style>\n                  {`\n                  .ir-date-picker-trigger{\n                    width:100%;\n                  }\n                  `}\n                </style>\n                <ir-date-picker\n                  data-testid=\"pickup_date\"\n                  date={this.filters?.date}\n                  class=\"w-100\"\n                  emitEmptyDate={true}\n                  maxDate={moment().format('YYYY-MM-DD')}\n                  onDateChanged={evt => {\n                    evt.stopImmediatePropagation();\n                    evt.stopPropagation();\n                    this.updateFilter({ date: evt.detail.start?.format('YYYY-MM-DD') });\n                  }}\n                >\n                  <input\n                    slot=\"trigger\"\n                    type=\"text\"\n                    value={this?.filters?.date}\n                    class={`revenue-table__date-picker-input form-control w-100 input-sm  text-left`}\n                    style={{ width: '100%' }}\n                  ></input>\n                </ir-date-picker>\n              </div>\n            </fieldset>\n            {/* <fieldset class=\" filter-group\">\n              <label htmlFor=\"rooms\" class=\"m-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                Users\n              </label>\n              <ir-select\n                selectedValue={this.filters?.users}\n                selectId=\"rooms\"\n                firstOption=\"All\"\n                onSelectChange={e =>\n                  this.updateFilter({\n                    users: e.detail,\n                  })\n                }\n                data={Array.from(this.users).map(u => ({\n                  text: u,\n                  value: u,\n                }))}\n              ></ir-select>\n            </fieldset> */}\n            <div class=\"d-flex mt-1 align-items-center justify-content-end filter-actions\" style={{ gap: '1rem' }}>\n              <ir-button\n                btn_type=\"button\"\n                data-testid=\"reset\"\n                text={locales.entries.Lcz_Reset}\n                size=\"sm\"\n                btn_color=\"secondary\"\n                onClickHandler={e => this.resetFilters(e)}\n              ></ir-button>\n              <ir-button\n                btn_type=\"button\"\n                data-testid=\"apply\"\n                isLoading={this.isLoading}\n                text={locales.entries.Lcz_Apply}\n                size=\"sm\"\n                onClickHandler={e => this.applyFiltersEvt(e)}\n              ></ir-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  --ir-border: #e5e7eb;\n}\n\n.ir-revenue-row__accordion::part(base),\n.ir-revenue-row {\n  border: 0;\n  border-radius: 0;\n  border-bottom: 1px solid var(--ir-border, #e5e7eb);\n  background: #fff;\n  padding: 0;\n}\n\n/* Header */\n.ir-revenue-row__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--ir-space-4, 1rem);\n  border-bottom: 1px solid var(--ir-border, #e5e7eb);\n}\n.ir-revenue-row__accordion::part(trigger),\n.ir-revenue-row__title {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: transparent;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n  text-align: left;\n  width: 100%;\n  justify-content: space-between;\n  padding: 0.5rem;\n  color: rgb(83, 83, 83);\n}\n.ir-revenue-row__title {\n  padding: 0;\n}\n.ir-revenue-row__header-left {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.ir-revenue-row__accordion::part(trigger):hover {\n  background: #f4f5fa;\n}\n\n.ir-revenue-row__group {\n  margin: 0;\n  /* font-weight: 600; */\n}\n\n.ir-revenue-row__badge {\n  background: lightgray;\n\n  border-radius: 0.25rem;\n  font-size: 0.75rem;\n  padding: 0 0.5rem;\n  margin-left: 0.375rem;\n}\n\n.ir-revenue-row__total {\n  font-weight: 700;\n  margin: 0;\n}\n.ir-revenue-row__accordion::part(content) {\n  padding: 0.25rem 1rem;\n}\n\n.ir-revenue-row__detail {\n  display: block;\n  border-bottom: 1px solid var(--ir-border, #e5e7eb);\n}\n\n.ir-revenue-row__detail:last-child {\n  border-bottom: none;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .ir-revenue-row__header-left {\n    width: 40vw;\n  }\n  .ir-revenue-row__accordion::part(trigger),\n  .ir-revenue-row__title {\n    justify-content: flex-start;\n  }\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { FolioPayment } from '../../types';\nimport { formatAmount } from '@/utils/utils';\nimport calendar_data from '@/stores/calendar-data';\n\nlet accId = 0;\n\n@Component({\n  tag: 'ir-revenue-row',\n  styleUrl: 'ir-revenue-row.css',\n  scoped: true,\n})\nexport class IrRevenueRow {\n  @Element() host!: HTMLElement;\n\n  /** Array of payments for this method group */\n  @Prop() payments: FolioPayment[] = [];\n\n  /** Group display name (e.g., \"Credit Card\") */\n  @Prop() groupName!: string;\n\n  private contentId = `ir-rr-content-${++accId}`;\n\n  render() {\n    const total = this.payments.reduce((prev, curr) => prev + curr.amount, 0);\n    return (\n      <Host>\n        <ir-accordion class=\"ir-revenue-row__accordion\">\n          <div slot=\"trigger\" class=\"ir-revenue-row__title\">\n            <div class=\"ir-revenue-row__header-left\">\n              <p class=\"ir-revenue-row__group\">\n                {this.groupName}{' '}\n                <span class=\"ir-revenue-row__badge\" aria-label={`${this.payments.length} transactions`}>\n                  {this.payments.length}\n                </span>\n              </p>\n            </div>\n            <p class=\"ir-revenue-row__total\">{formatAmount(calendar_data.currency.symbol, total)}</p>\n          </div>\n          <div class=\"ir-revenue-row__details\" id={this.contentId}>\n            <div class=\"ir-revenue-row__details-inner\">\n              {this.payments.map(payment => (\n                <ir-revenue-row-details class=\"ir-revenue-row__detail\" id={payment.id} payment={payment} key={payment.id}></ir-revenue-row-details>\n              ))}\n            </div>\n          </div>\n        </ir-accordion>\n      </Host>\n    );\n  }\n}\n",".ir-revenue-summary__mobile {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n.ir-revenue-summary__tablet {\n  display: none;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1rem;\n}\n.stats-card__payments-value {\n  padding: 0;\n  margin: 0;\n  color: #629a4c;\n}\n.stats-card__refund-value {\n  padding: 0;\n  margin: 0;\n  color: #ff4961;\n}\n/*md*/\n@media (min-width: 768px) {\n  .ir-revenue-summary__tablet {\n    display: grid;\n  }\n  .ir-revenue-summary__mobile {\n    display: none;\n  }\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\nimport { FolioPayment, GroupedFolioPayment } from '../types';\nimport { formatAmount } from '@/utils/utils';\nimport calendar_data from '@/stores/calendar-data';\nimport { PaymentEntries } from '@/components/ir-booking-details/types';\n\n@Component({\n  tag: 'ir-revenue-summary',\n  styleUrl: 'ir-revenue-summary.css',\n  scoped: true,\n})\nexport class IrRevenueSummary {\n  @Prop() groupedPayments: GroupedFolioPayment = new Map();\n  @Prop() previousDateGroupedPayments: GroupedFolioPayment = new Map();\n  @Prop() paymentEntries: PaymentEntries;\n\n  private calculateTotalPayments(groupedPayments: GroupedFolioPayment) {\n    let total = 0;\n    groupedPayments.forEach((value, key) => {\n      if (key.split('_')[0] === '001') {\n        total += this.calculateTotalValue(value);\n      }\n    });\n    return total;\n  }\n\n  // private calculateTotalAmount(groupedPayments: GroupedFolioPayment) {\n  //   return Array.from(groupedPayments.entries()).reduce((prev, curr) => prev + this.calculateTotalValue(curr[1]), 0);\n  // }\n\n  private calculateTotalRefunds(groupedPayments: GroupedFolioPayment) {\n    const refundKeyCode = '010';\n    const payments: any = [];\n    groupedPayments.forEach((value, key) => {\n      if (key.split('_')[0] === refundKeyCode) {\n        payments.push(...value);\n      }\n    });\n\n    return this.calculateTotalValue(payments);\n  }\n\n  private calculateTotalValue(payments: FolioPayment[]) {\n    return payments.reduce((p, c) => p + c.amount, 0);\n  }\n\n  private getTrendIcon(val1: number, val2: number) {\n    if (val1 === val2) {\n      return undefined;\n    }\n    return val1 > val2 ? 'arrow-trend-up' : 'arrow-trend-down';\n  }\n  render() {\n    const paymentsTotal = this.calculateTotalPayments(this.groupedPayments);\n    const refundAmount = this.calculateTotalRefunds(this.groupedPayments);\n    const totalAmount = paymentsTotal + refundAmount;\n\n    const previousDatePaymentsTotal = this.calculateTotalPayments(this.previousDateGroupedPayments);\n    const previousDateRefundAmount = this.calculateTotalRefunds(this.previousDateGroupedPayments);\n    const previousDateTotalAmount = previousDatePaymentsTotal + previousDateRefundAmount;\n\n    return (\n      <Host>\n        <div class=\"ir-revenue-summary__mobile\">\n          <ir-stats-card icon={'arrow-trend-up'} value={formatAmount(calendar_data.currency.symbol, paymentsTotal)} cardTitle=\"Payments\">\n            <p class=\"stats-card__payments-value\" slot=\"value\">\n              {formatAmount(calendar_data.currency.symbol, paymentsTotal)}\n            </p>\n          </ir-stats-card>\n          <ir-stats-card value=\"123$\" class=\"refunds-card\" icon={'arrow-trend-down'} cardTitle=\"Refunds\">\n            <p class=\"stats-card__refund-value\" slot=\"value\">\n              {formatAmount(calendar_data.currency.symbol, refundAmount)}\n            </p>\n          </ir-stats-card>\n        </div>\n        <div class=\"ir-revenue-summary__tablet\">\n          <ir-stats-card\n            icon={'arrow-trend-up'}\n            value={formatAmount(calendar_data.currency.symbol, paymentsTotal)}\n            cardTitle=\"Payments\"\n            subtitle={`Previous day  ${formatAmount(calendar_data.currency.symbol, previousDatePaymentsTotal)}`}\n          >\n            <p class=\"stats-card__payments-value\" slot=\"value\">\n              {formatAmount(calendar_data.currency.symbol, paymentsTotal)}\n            </p>\n          </ir-stats-card>\n          <ir-stats-card\n            value=\"123$\"\n            class=\"refunds-card\"\n            icon={'arrow-trend-down'}\n            cardTitle=\"Refunds\"\n            subtitle={`Previous day  ${formatAmount(calendar_data.currency.symbol, previousDateRefundAmount)}`}\n          >\n            <p class=\"stats-card__refund-value\" slot=\"value\">\n              {formatAmount(calendar_data.currency.symbol, refundAmount)}\n            </p>\n          </ir-stats-card>\n          <ir-stats-card\n            icon={this.getTrendIcon(totalAmount, previousDateTotalAmount)}\n            value={formatAmount(calendar_data.currency.symbol, totalAmount)}\n            cardTitle=\"Difference\"\n            subtitle={`Previous day  ${formatAmount(calendar_data.currency.symbol, previousDateTotalAmount)}`}\n          ></ir-stats-card>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  overflow-x: hidden;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n:host * {\n  font-family: inherit !important;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n.revenue-table__header,\n.revenue-table__method_header {\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n}\n.revenue-table__header {\n  background: #ececec;\n  color: #374151;\n}\n.revenue-table__header p,\n.revenue-table__method_header p {\n  padding: 0;\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 700;\n}\n.revenue-table__method_header {\n  color: black;\n}\n.revenue-table__title-section {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 0.875rem;\n}\n.revenue-table__table {\n  min-height: 50vh;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .revenue-table__header,\n  .revenue-table__method_header {\n    width: 100%;\n    justify-content: flex-start;\n  }\n  .revenue-table__header p:first-child,\n  .revenue-table__method_header p:first-child {\n    width: calc(40vw + 1.375rem + 0.5rem + 1rem);\n  }\n}\n","import { Component, Fragment, h, Prop } from '@stencil/core';\nimport { DailyPaymentFilter, FolioPayment, GroupedFolioPayment } from '../types';\nimport { PaymentEntries } from '@/components/ir-booking-details/types';\nimport { PAYMENT_TYPES_WITH_METHOD } from '@/components/ir-booking-details/ir-payment-details/global.variables';\nimport { formatAmount } from '@/utils/utils';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  tag: 'ir-revenue-table',\n  styleUrl: 'ir-revenue-table.css',\n  scoped: true,\n})\nexport class IrRevenueTable {\n  @Prop() payments: GroupedFolioPayment = new Map();\n  @Prop() paymentEntries: PaymentEntries;\n  @Prop() filters: DailyPaymentFilter;\n\n  private payTypesObj: {};\n  private payMethodObj: {};\n  private groupType: 'method' | 'type' = 'method';\n\n  componentWillLoad() {\n    const buildPaymentLookup = (key: keyof PaymentEntries) => {\n      let pt = {};\n      this.paymentEntries[key].forEach(p => {\n        pt = { ...pt, [p.CODE_NAME]: p.CODE_VALUE_EN };\n      });\n      return pt;\n    };\n\n    this.payTypesObj = buildPaymentLookup('types');\n    this.payMethodObj = buildPaymentLookup('methods');\n  }\n\n  /**\n   * Groups payments by method, then by type.\n   * - Never throws on bad input (null/undefined, non-Map, malformed keys, non-array values).\n   * - Keys are parsed defensively; unknown parts fall back to \"UNKNOWN\".\n   */\n  private regroupPaymentsByMethod(): Map<string, Map<string, FolioPayment[]>> {\n    const result = new Map<string, Map<string, FolioPayment[]>>();\n\n    // Early return on empty/invalid source\n    const src = this.payments;\n    if (!(src instanceof Map) || src.size === 0) return result;\n\n    // Helper: parse \"TYPE_METHOD\" into [type, method] safely\n    const parseKey = (key: unknown): [string, string] => {\n      if (typeof key !== 'string') return ['UNKNOWN', 'UNKNOWN'];\n      // Allow extra underscores on the method side: TYPE_METHOD_WITH_UNDERSCORES\n      const [type, ...rest] = key.split('_');\n      const method = rest.join('_');\n      const safeType = (type && type.trim()) || 'UNKNOWN';\n      const safeMethod = (method && method.trim()) || 'UNKNOWN';\n      return [safeType, safeMethod];\n    };\n\n    for (const [rawKey, rawList] of src.entries()) {\n      const [paymentType, paymentMethod] = parseKey(rawKey);\n\n      // Normalize value to a clean array of FolioPayment\n      const list: FolioPayment[] = Array.isArray(rawList) ? (rawList.filter(Boolean) as FolioPayment[]) : [];\n\n      // Skip silently if nothing to add\n      if (list.length === 0) {\n        // Still ensure the buckets exist so consumers can rely on them if needed\n        if (!result.has(paymentMethod)) result.set(paymentMethod, new Map());\n        if (!result.get(paymentMethod)!.has(paymentType)) {\n          result.get(paymentMethod)!.set(paymentType, []);\n        }\n        continue;\n      }\n\n      const typeMap = result.get(paymentMethod) ?? new Map<string, FolioPayment[]>();\n      const existing = typeMap.get(paymentType) ?? [];\n      typeMap.set(paymentType, existing.concat(list));\n      result.set(paymentMethod, typeMap);\n    }\n\n    return result;\n  }\n\n  render() {\n    const hasPayments = this.payments instanceof Map && this.payments.size > 0;\n\n    return (\n      <div class=\"card p-1 revenue-table__table\">\n        {hasPayments ? (\n          <Fragment>\n            <div class=\"revenue-table__header\">\n              <p>Method</p>\n              <p>Amount</p>\n            </div>\n            {this.groupType === 'type' &&\n              Array.from((this.payments as Map<string, FolioPayment[]>).entries()).map(([key, list]) => {\n                const [paymentType, paymentMethod] = key.split('_');\n                const groupName = PAYMENT_TYPES_WITH_METHOD.includes(paymentType)\n                  ? `${this.payTypesObj[paymentType] ?? paymentType}: ${this.payMethodObj[paymentMethod] ?? paymentMethod}`\n                  : this.payTypesObj[paymentType] ?? paymentType;\n\n                return <ir-revenue-row key={key} payments={list} groupName={groupName}></ir-revenue-row>;\n              })}\n            {this.groupType === 'method' &&\n              Array.from(this.regroupPaymentsByMethod().entries()).flatMap(([methodKey, byType]) => {\n                const total = Array.from(byType.entries()).reduce((prev, [_, list]) => prev + list.reduce((p, c) => p + c.amount, 0), 0);\n                return (\n                  <div key={`method_${methodKey}`}>\n                    <div class=\"revenue-table__method_header\">\n                      <p>{this.payMethodObj[methodKey] ?? methodKey}</p>\n                      <p>{formatAmount(calendar_data.currency.symbol, total)}</p>\n                    </div>\n                    {Array.from(byType.entries()).map(([typeKey, list]) => {\n                      const groupName = PAYMENT_TYPES_WITH_METHOD.includes(typeKey) ? `${this.payTypesObj[typeKey] ?? typeKey}` : this.payTypesObj[typeKey] ?? typeKey;\n\n                      return (\n                        <div key={`type_${typeKey}`} class=\"px-1\">\n                          <ir-revenue-row payments={list} groupName={groupName}></ir-revenue-row>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n          </Fragment>\n        ) : (\n          <p class=\"text-center my-auto mx-auto\">There are no payment transactions recorded for the selected date.</p>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}