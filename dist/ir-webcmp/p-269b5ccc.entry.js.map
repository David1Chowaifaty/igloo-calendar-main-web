{"version":3,"names":["irPaginationCss","IrPaginationStyle0","IrPagination","constructor","hostRef","this","pages","total","currentPage","showing","from","to","showTotalRecords","recordLabel","disabled","pageSize","validateCurrentPage","newValue","console","warn","validatePages","renderItemRange","Math","max","min","handlePageChange","newPage","eventType","eventData","totalPages","firstPage","emit","previousPage","nextPage","lastPage","pageChange","handlePageSizeChange","newPageSize","pageSizeChange","shouldRender","render","isFirstPage","isLastPage","h","Host","class","role","allowPageSizeChange","pageSizes","selectedValue","String","data","map","size","text","value","showFirstOption","style","margin","onSelectChange","e","Number","detail","Fragment","btn_disabled","onClickHandler","icon_name","toString","Array","_","i"],"sources":["src/components/ir-pagination/ir-pagination.css?tag=ir-pagination&encapsulation=scoped","src/components/ir-pagination/ir-pagination.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-family: var(--font-family, inherit);\n  font-size: var(--font-size, 0.875rem);\n  color: var(--text-color, #333);\n}\n\n.pagination-container {\n  gap: 1rem;\n  padding: 0.5rem 0;\n  min-height: 2.5rem;\n}\n\n.pagination-container.disabled {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.pagination-info {\n  color: var(--text-muted, #6c757d);\n  font-size: var(--font-size-sm, 0.875rem);\n  white-space: nowrap;\n}\n\n.buttons-container {\n  gap: 0.25rem;\n  flex-wrap: wrap;\n}\n\n.buttons-container ir-button {\n  flex-shrink: 0;\n}\n\n/* .buttons-container ir-select {\n  min-width: 4rem;\n  max-width: 6rem;\n  flex-shrink: 0;\n} */\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .pagination-container {\n    gap: 0.75rem;\n  }\n\n  .pagination-info {\n    text-align: center;\n    order: 2;\n    margin-top: 0.5rem !important;\n    margin-bottom: 0 !important;\n  }\n\n  .buttons-container {\n    order: 1;\n    justify-content: center;\n  }\n}\n\n@media (max-width: 480px) {\n  .pagination-container {\n    gap: 0.5rem;\n  }\n\n  .buttons-container {\n    gap: 0.125rem;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .pagination-info {\n    color: var(--text-color, #000);\n  }\n\n  .pagination-container.disabled {\n    opacity: 0.8;\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    transition: none !important;\n  }\n}\n","import { Component, Host, Prop, Event, EventEmitter, Watch, h, Fragment } from '@stencil/core';\n\n/**\n * Interface for pagination range display\n */\nexport interface PaginationRange {\n  /** Starting index (0-based) */\n  from: number;\n  /** Ending index (0-based) */\n  to: number;\n}\n\n/**\n * Event data emitted when page changes\n */\nexport interface PaginationChangeEvent {\n  /** New current page number (1-based) */\n  currentPage: number;\n  /** Total number of pages */\n  totalPages: number;\n  /** Page size */\n  pageSize?: number;\n}\n\n@Component({\n  tag: 'ir-pagination',\n  styleUrl: 'ir-pagination.css',\n  scoped: true,\n})\nexport class IrPagination {\n  /**\n   * Total number of pages available\n   */\n  @Prop() pages: number = 0;\n\n  /**\n   * List of all page size\n   */\n  @Prop() pageSizes: number[];\n  /**\n   * Enables a dropdown for changing the number of items displayed per page.\n   *\n   * When set to `true`, users can select a page size from the `pageSizes` array.\n   *\n   * **Note:** This prop requires the `pageSizes` prop to be defined with one or more numeric values.\n   * If `pageSizes` is empty or undefined, the page size selector will not be displayed.\n   *\n   * @default false\n   */\n  @Prop() allowPageSizeChange: boolean;\n\n  /**\n   * Total number of records/items\n   */\n  @Prop() total: number = 0;\n\n  /**\n   * Current active page number (1-based)\n   */\n  @Prop() currentPage: number = 1;\n\n  /**\n   * Range of items currently being displayed\n   */\n  @Prop() showing: PaginationRange = { from: 0, to: 0 };\n\n  /**\n   * Whether to show total records count\n   */\n  @Prop() showTotalRecords: boolean = true;\n\n  /**\n   * Label for the record type (e.g., 'items', 'tasks', 'records')\n   */\n  @Prop() recordLabel: string = '';\n\n  /**\n   * Whether the pagination is disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Page size for calculations\n   */\n  @Prop() pageSize: number = 10;\n\n  /**\n   * Emitted when the current page changes\n   */\n  @Event() pageChange: EventEmitter<PaginationChangeEvent>;\n  /**\n   * Emitted when the page size changes\n   */\n  @Event() pageSizeChange: EventEmitter<PaginationChangeEvent>;\n\n  /**\n   * Emitted when the first page is requested\n   */\n  @Event() firstPage: EventEmitter<PaginationChangeEvent>;\n\n  /**\n   * Emitted when the last page is requested\n   */\n  @Event() lastPage: EventEmitter<PaginationChangeEvent>;\n\n  /**\n   * Emitted when the previous page is requested\n   */\n  @Event() previousPage: EventEmitter<PaginationChangeEvent>;\n\n  /**\n   * Emitted when the next page is requested\n   */\n  @Event() nextPage: EventEmitter<PaginationChangeEvent>;\n\n  /**\n   * Watch for changes to currentPage prop\n   */\n  @Watch('currentPage')\n  validateCurrentPage(newValue: number) {\n    if (newValue < 1) {\n      console.warn('currentPage must be greater than 0');\n    }\n    if (newValue > this.pages) {\n      console.warn('currentPage cannot be greater than total pages');\n    }\n  }\n\n  /**\n   * Watch for changes to pages prop\n   */\n  @Watch('pages')\n  validatePages(newValue: number) {\n    if (newValue < 0) {\n      console.warn('pages must be greater than or equal to 0');\n    }\n  }\n\n  /**\n   * Renders the item range display text\n   * @returns Formatted string showing current range and total\n   */\n  private renderItemRange(): string {\n    if (!this.showTotalRecords) {\n      return '';\n    }\n\n    const from = Math.max(this.showing.from, 1);\n    const to = Math.min(this.showing.to, this.total);\n\n    return `${'View'} ${from} - ${to} ${'of'} ${this.total} ${this.recordLabel}`;\n  }\n\n  /**\n   * Handles page change and emits appropriate events\n   * @param newPage - The new page number to navigate to\n   * @param eventType - The type of navigation event\n   */\n  private handlePageChange(newPage: number, eventType: 'first' | 'previous' | 'next' | 'last' | 'direct' = 'direct') {\n    if (this.disabled || newPage < 1 || newPage > this.pages || newPage === this.currentPage) {\n      return;\n    }\n\n    const eventData: PaginationChangeEvent = {\n      currentPage: newPage,\n      totalPages: this.pages,\n      pageSize: this.pageSize,\n    };\n\n    // Emit specific event type\n    switch (eventType) {\n      case 'first':\n        this.firstPage.emit(eventData);\n        break;\n      case 'previous':\n        this.previousPage.emit(eventData);\n        break;\n      case 'next':\n        this.nextPage.emit(eventData);\n        break;\n      case 'last':\n        this.lastPage.emit(eventData);\n        break;\n    }\n\n    // Always emit the general page change event\n    this.pageChange.emit(eventData);\n  }\n  /**\n   * Handles page change and emits appropriate events\n   * @param newPage - The new page number to navigate to\n   * @param eventType - The type of navigation event\n   */\n  private handlePageSizeChange(newPageSize: number) {\n    const eventData: PaginationChangeEvent = {\n      currentPage: this.currentPage,\n      totalPages: this.pages,\n      pageSize: newPageSize,\n    };\n    // Emit specific event type\n    this.pageSizeChange.emit(eventData);\n  }\n\n  /**\n   * Checks if the component should be rendered\n   * @returns True if pagination should be shown\n   */\n  private shouldRender(): boolean {\n    return this.pages > 0 && this.total > 0;\n  }\n\n  render() {\n    if (!this.shouldRender()) {\n      return null;\n    }\n\n    const isFirstPage = this.currentPage === 1;\n    const isLastPage = this.currentPage === this.pages;\n\n    return (\n      <Host\n        class={{\n          'd-flex flex-column flex-md-row align-items-center justify-content-between pagination-container': true,\n          'disabled': this.disabled,\n        }}\n        role=\"navigation\"\n        aria-label=\"Pagination Navigation\"\n      >\n        {this.showTotalRecords && (\n          <p class=\"m-0 mb-1 mb-md-0 pagination-info\" aria-live=\"polite\">\n            {this.renderItemRange()}\n          </p>\n        )}\n        <div class={'d-flex align-items-center buttons-container'}>\n          {this.allowPageSizeChange && this.pageSizes && (\n            <ir-select\n              selectedValue={String(this.pageSize)}\n              data={this.pageSizes.map(size => ({\n                text: `${size} ${this.recordLabel}`,\n                value: String(size),\n              }))}\n              showFirstOption={false}\n              style={{ margin: '0 0.5rem' }}\n              onSelectChange={e => this.handlePageSizeChange(Number(e.detail))}\n            ></ir-select>\n          )}\n          {this.pages > 1 && (\n            <Fragment>\n              <ir-button\n                size=\"sm\"\n                btn_disabled={isFirstPage || this.disabled}\n                onClickHandler={() => this.handlePageChange(1, 'first')}\n                icon_name=\"angles_left\"\n                style={{ '--icon-size': '0.875rem' }}\n                aria-label=\"Go to first page\"\n              ></ir-button>\n              <ir-button\n                size=\"sm\"\n                btn_disabled={isFirstPage || this.disabled}\n                onClickHandler={() => this.handlePageChange(this.currentPage - 1, 'previous')}\n                icon_name=\"angle_left\"\n                style={{ '--icon-size': '0.875rem' }}\n                aria-label=\"Go to previous page\"\n              ></ir-button>\n              <ir-select\n                selectedValue={this.currentPage.toString()}\n                showFirstOption={false}\n                onSelectChange={e => this.handlePageChange(+e.detail, 'direct')}\n                data={Array.from(Array(this.pages), (_, i) => i + 1).map(i => ({\n                  text: i.toString(),\n                  value: i.toString(),\n                }))}\n                aria-label={`Current page ${this.currentPage} of ${this.pages}`}\n                disabled={this.disabled}\n              ></ir-select>\n              <ir-button\n                size=\"sm\"\n                btn_disabled={isLastPage || this.disabled}\n                onClickHandler={() => this.handlePageChange(this.currentPage + 1, 'next')}\n                icon_name=\"angle_right\"\n                style={{ '--icon-size': '0.875rem' }}\n                aria-label=\"Go to next page\"\n              ></ir-button>\n              <ir-button\n                size=\"sm\"\n                btn_disabled={isLastPage || this.disabled}\n                onClickHandler={() => this.handlePageChange(this.pages, 'last')}\n                icon_name=\"angles_right\"\n                style={{ '--icon-size': '0.875rem' }}\n                aria-label=\"Go to last page\"\n              ></ir-button>\n            </Fragment>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}