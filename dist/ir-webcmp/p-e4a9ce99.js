import{T as e}from"./p-dfa14c12.js";import{c as t}from"./p-bb593e1b.js";import{c as n}from"./p-0bd92c75.js";import{a as o}from"./p-06203439.js";class r extends e{async getExposedChannels(){try{const e=this.getToken();if(e!==null){const{data:t}=await o.post(`/Get_Exposed_Channels?Ticket=${e}`,{});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}const r=t.My_Result;n.channels=[...r];return t}}catch(e){console.log(e);throw new Error(e)}}async getExposedConnectedChannels(e){try{const t=this.getToken();if(t!==null){const{data:r}=await o.post(`/Get_Exposed_Connected_Channels?Ticket=${t}`,{property_id:e});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}n.connected_channels=[...r.My_Result]}}catch(e){console.log(e);throw new Error(e)}}async saveConnectedChannel(e=null,r){try{let s={};if(r){s={id:e,is_remove:r}}else{s={id:n.channel_id,title:n.channel_settings.hotel_title,is_active:n.is_active,channel:{id:n.selectedChannel.id,name:n.selectedChannel.name},property:{id:t.id,name:t.name},map:n.mappedChannels,is_remove:r}}const a=this.getToken();if(!a){throw new Error("Invalid Token")}const{data:c}=await o.post(`/Handle_Connected_Channel?Ticket=${a}`,s);return c}catch(e){console.error(e)}}}export{r as C};
//# sourceMappingURL=p-e4a9ce99.js.map