import{a as e}from"./p-06203439.js";import{j as t,a,d as o,h as r}from"./p-12acf4cb.js";class n{async getUnassignedDates(t,a,o){try{const{data:r}=await e.post(`/Get_UnAssigned_Dates`,{propertyid:t,from_date:a,to_date:o});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return this.convertUnassignedDates(r.My_Result)}catch(e){console.error(e);throw new Error(e)}}async getUnassignedRooms(t,a,o,r,n){try{const{data:s}=await e.post(`/Get_Aggregated_UnAssigned_Rooms`,{propertyid:a,specific_date:o});if(s.ExceptionMsg!==""){throw new Error(s.ExceptionMsg)}return this.transformToAssignable(t,s,r,n)}catch(e){console.error(e);throw new Error(e)}}async assignUnit(a){try{const{data:o}=await e.post(`/Assign_Exposed_Room`,Object.assign(Object.assign({},a),{extras:t}));if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}console.log(o);return o["My_Result"]}catch(e){console.error(e);throw new Error(e)}}cleanSpacesAndSpecialChars(e){const t=/[^a-zA-Z0-9]+/g;return e.replace(t,"")}transformToAssignable(e,t,a,o){const r=[];t.My_Result.forEach((t=>{t.unassigned_rooms.forEach((t=>{let n={roomTypeName:t.room_type_name,ID:t.identifier,NAME:t.guest_name,identifier:t.identifier,FROM_DATE:t.unassigned_date,TO_DATE:t.unassigned_date,BOOKING_NUMBER:t.book_nbr,STATUS:"IN-HOUSE",defaultDateRange:{fromDate:undefined,toDate:undefined,fromDateTimeStamp:0,toDateTimeStamp:0,fromDateStr:"",toDateStr:"",dateDifference:0},NO_OF_DAYS:1,roomsInfo:a,legendData:o,availableRooms:[],RT_ID:this.getRoomTypeId(t.room_type_name,a)};this.updateAvailableRooms(e,t,n,o,a);this.addDefaultDateRange(n);r.push(n)}))}));return r}addDefaultDateRange(e){e.defaultDateRange.fromDate=new Date(e.FROM_DATE+"T00:00:00");e.defaultDateRange.fromDateStr=a(e.defaultDateRange.fromDate);e.defaultDateRange.fromDateTimeStamp=e.defaultDateRange.fromDate.getTime();e.defaultDateRange.toDate=new Date(e.TO_DATE+"T00:00:00");e.defaultDateRange.toDateStr=a(e.defaultDateRange.toDate);e.defaultDateRange.toDateTimeStamp=e.defaultDateRange.toDate.getTime();e.defaultDateRange.dateDifference=e.NO_OF_DAYS}getRoomTypeId(e,t){var a;return((a=t.find((t=>this.cleanSpacesAndSpecialChars(t.name)===this.cleanSpacesAndSpecialChars(e))))===null||a===void 0?void 0:a.id)||null}updateAvailableRooms(e,t,a,n,s){const i=[];t.assignable_units.forEach((t=>{if(t.Is_Fully_Available&&!t.Is_Not_Available){const D=o(t.from_date,t.to_date);const c=r(new Date(e.from_date)).isAfter(r(new Date(t.from_date)))?e.from_date:t.from_date;const d=r(new Date(e.to_date)).isBefore(r(new Date(t.to_date)))&&r(new Date(e.to_date)).isAfter(r(new Date(t.from_date)))?e.to_date:t.to_date;i.push({RT_ID:a.RT_ID,STATUS:"PENDING-CONFIRMATION",FROM_DATE:c,roomName:t.name,PR_ID:t.pr_id,TO_DATE:d,NO_OF_DAYS:D,ID:"NEW_TEMP_EVENT",NAME:"",NOTES:"",BALANCE:"",INTERNAL_NOTE:"",hideBubble:true,legendData:n,roomsInfo:s});a.TO_DATE=t.to_date;a.NO_OF_DAYS=D}}));a.availableRooms=i}convertUnassignedDates(e){let t={};e.forEach((e=>{let a=new Date(e.date);a.setHours(0,0,0,0);t[a.getTime()]={categories:{},dateStr:e.description}}));return t}}export{n as T};
//# sourceMappingURL=p-29272a4b.js.map