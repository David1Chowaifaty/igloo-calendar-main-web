{"version":3,"names":["irHkArchiveCss","IrHkArchiveStyle0","IrHkArchive","constructor","hostRef","this","language","filters","from_date","to_date","filtered_by_hkm","filtered_by_unit","data","isLoading","fetchedData","minSelectableDate","moment","subtract","toDate","houseKeepingService","HouseKeepingService","units","handleSideBarToggle","e","stopImmediatePropagation","stopPropagation","selectedBooking","componentWillLoad","setUpUnits","calendar_data","roomsInfo","forEach","r","physicalrooms","room","push","id","name","getArchivedTasks","export_to_excel","res","getArchivedHKTasks","Object","assign","property_id","Number","propertyId","is_export_to_excel","_a","tasks","map","t","v4","url","handleDateRangeChange","fromDate","detail","updateFilters","format","props","searchArchive","error","console","log","exportArchive","downloadFile","render","h","Host","key","class","label","displayContext","showFirstOption","LabelAvailable","text","value","v","toString","sort","a","b","toLowerCase","localeCompare","onSelectChange","_b","housekeeping_store","hk_criteria","housekeepers","length","selectedValue","_d","_c","_f","_e","_g","maxDate","minDate","title","_h","locales","entries","Lcz_Search","variant","icon_name","onClickHandler","_j","Lcz_ExportToExcel","Fragment","_k","isRequestPending","Lcz_NoResultsFound","Lcz_Period","Lcz_Housekeeper","Lcz_Unit","Lcz_BookingNumber","_l","d","date","house_keeper","message","unit","customSlot","containerStyle","width","slot","booking_nbr","btn_color","btnStyle","padding","margin","labelStyle","onClick","onIrSidebarToggle","bind","open","showCloseButton","sidebarStyles","background","hasPrint","hasReceipt","hasCloseButton","onCloseSidebar","is_from_front_desk","propertyid","hasRoomEdit","hasRoomDelete","bookingNumber","_m","hasRoomAdd","ticket","irTasksCardCss","IrTasksCardStyle0","IrTasksCard","baseText","btnText","task","housekeeper","slice","style","gap","formatted_date","status","description","marginLeft","hint","height","xmlns","viewBox","fill","adult","child","stroke","infant","isCheckable","toggleTaskSelection","cleanSelectedTask","emit","size","textAlign","btn_styles","isSkippable","skipSelectedTask","irTasksFiltersCss","IrTasksFiltersStyle0","IrTasksFilters","cleaning_periods","code","cleaning_frequencies","dusty_units","highlight_check_ins","collapsed","baseFilters","cleaning_frequency","dusty_periods","highlight_checkin_options","updateFilter","params","applyFiltersEvt","applyFilters","resetFilters","Lcz_Filters","paddingBottom","testId","Lcz_Housekeepers","Lcz_Allhousekeepers","_p","_o","btn_type","Lcz_Reset","Lcz_Apply","irTasksHeaderCss","IrTasksHeaderStyle0","IrTasksHeader","handleCleanedButtonAnimation","btnRef","bounce","placeholder","hkTasksStore","searchField","onTextChange","updateSearchField","Lcz_Export","headerButtonPress","iconPosition","icon_style","Lcz_Archives","btn_disabled","selectedTasks","ref","el","irTasksTableCss","IrTasksTableStyle0","tableCss","IrTasksTableStyle1","IrTasksTable","updateSorting","handleSort","newDirection","sorting","direction","field","sortingChanged","handleClearSelectedHkTasks","clearSelectedTasks","handleTasksChange","newTasks","toggleSelection","animateCleanedButton","emitSelectedTasks","rowSelectChange","allSelected","isAllTasksSelected","toggleSelectAll","selectAllTasks","getCheckableTasks","isSameOrBefore","isTodayTask","isSame","haveManyHousekeepers","getPaginatedTasks","mobileTasks","getMobileTasks","Lcz_NoTasksFound","indeterminate","checked","onCheckChange","Lcz_Status","Lcz_Hint","Lcz_A","Lcz_C","Lcz_I","colSpan","isSelected","some","cursor","selected","is_highlight","Lcz_Unassigned","irTasksTablePaginationCss","IrTasksTablePaginationStyle0","IrTasksTablePagination","currentPage","pageSize","totalPages","mobileCurrentPage","pagination","totalTasks","start","end","Math","min","pageSizes","tasksList","shouldLoadMore","loadMoreTasks","showing","from","to","total","pages","onPageChange","updateCurrentPage","onPageSizeChange","updatePageSize","showTotalRecords","recordLabel"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.css?tag=ir-hk-archive&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-card/ir-tasks-card.css?tag=ir-tasks-card&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-card/ir-tasks-card.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.css?tag=ir-tasks-filters&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.css?tag=ir-tasks-header&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/common/table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table-pagination/ir-tasks-table-pagination.css?tag=ir-tasks-table-pagination&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table-pagination/ir-tasks-table-pagination.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.unit-name {\n  max-width: 100px;\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0 !important;\n  margin: 0 !important;\n  text-align: start;\n}\n.table th,\n.table td {\n  white-space: nowrap;\n  width: fit-content;\n  max-width: max-content !important;\n  /* background: white; */\n  border: 0;\n  text-align: start;\n  background-color: white;\n  padding: 0.25rem !important;\n}\n.table th:first-child,\n.table td:first-child {\n  padding-left: 0 !important;\n}\n","// import { HouseKeepingService } from '@/services/housekeeping.service';\n// import housekeeping_store from '@/stores/housekeeping.store';\nimport { ArchivedTask } from '@/models/housekeeping';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { downloadFile } from '@/utils/utils';\nimport { Component, Fragment, Host, Listen, Prop, State, h } from '@stencil/core';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nexport type ArchivesFilters = {\n  from_date: string;\n  to_date: string;\n  filtered_by_hkm?: number[];\n  filtered_by_unit?: number[];\n};\n@Component({\n  tag: 'ir-hk-archive',\n  styleUrl: 'ir-hk-archive.css',\n  scoped: true,\n})\nexport class IrHkArchive {\n  @Prop() propertyId: string | number;\n  @Prop() language: string = 'en';\n  @Prop() ticket: string;\n\n  @State() filters: ArchivesFilters = {\n    from_date: null,\n    to_date: null,\n    filtered_by_hkm: [],\n    filtered_by_unit: [],\n  };\n  @State() data: (ArchivedTask & { id: string })[] = [];\n  @State() isLoading: 'search' | 'excel' | null = null;\n  @State() fetchedData: boolean = false;\n  @State() selectedBooking: number | string | null;\n  private minSelectableDate = moment().subtract(90, 'days').toDate();\n  private houseKeepingService = new HouseKeepingService();\n  private units: { id: number; name: string }[] = [];\n  private handleSideBarToggle(e) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.selectedBooking = null;\n  }\n\n  componentWillLoad() {\n    this.setUpUnits();\n  }\n  private setUpUnits() {\n    const units = [];\n    calendar_data.roomsInfo.forEach(r => {\n      r.physicalrooms.forEach(room => {\n        units.push({ id: room.id, name: room.name });\n      });\n    });\n    this.units = units;\n  }\n\n  private async getArchivedTasks(export_to_excel: boolean = false) {\n    const res = await this.houseKeepingService.getArchivedHKTasks({ property_id: Number(this.propertyId), ...this.filters, is_export_to_excel: export_to_excel });\n    this.data = [...(res?.tasks || [])]?.map(t => ({ ...t, id: v4() }));\n    this.fetchedData = true;\n    return { tasks: res?.tasks, url: res?.url };\n  }\n\n  @Listen('dateRangeChanged')\n  handleDateRangeChange(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { fromDate, toDate } = e.detail;\n    this.updateFilters({\n      from_date: fromDate ? fromDate.format('YYYY-MM-DD') : null,\n      to_date: toDate ? toDate.format('YYYY-MM-DD') : null,\n    });\n  }\n\n  private updateFilters(props: Partial<ArchivesFilters>) {\n    this.filters = { ...this.filters, ...props };\n  }\n  async searchArchive(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.isLoading = 'search';\n      await this.getArchivedTasks();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  async exportArchive(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.isLoading = 'excel';\n      const { url } = await this.getArchivedTasks(true);\n      downloadFile(url);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <ir-title class=\"px-1\" label=\"Cleaning Archives (90 days)\" displayContext=\"sidebar\"></ir-title>\n        <section class=\"px-1\">\n          <div class=\"d-flex\">\n            <ir-select\n              class=\"w-100\"\n              showFirstOption={false}\n              LabelAvailable={false}\n              data={[\n                { text: 'All units', value: '000' },\n                ,\n                ...this.units\n                  ?.map(v => ({\n                    text: v.name,\n                    value: v.id.toString(),\n                  }))\n                  .sort((a, b) => a.text.toLowerCase().localeCompare(b.text.toLowerCase())),\n              ]}\n              onSelectChange={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                if (e.detail === '000') {\n                  this.updateFilters({ filtered_by_unit: [] });\n                } else {\n                  this.updateFilters({ filtered_by_unit: [e.detail] });\n                }\n              }}\n            ></ir-select>\n            {housekeeping_store?.hk_criteria?.housekeepers.length > 1 && (\n              <ir-select\n                class=\"ml-1 w-100\"\n                selectedValue={this.filters?.filtered_by_hkm?.length === housekeeping_store.hk_criteria.housekeepers.length ? '000' : this.filters?.filtered_by_hkm[0]?.toString()}\n                LabelAvailable={false}\n                showFirstOption={false}\n                data={[\n                  { text: 'All housekeepers', value: '000' },\n                  ...housekeeping_store?.hk_criteria?.housekeepers\n                    .map(v => ({\n                      text: v.name,\n                      value: v.id.toString(),\n                    }))\n                    .sort((a, b) => a.text.toLowerCase().localeCompare(b.text.toLowerCase())),\n                ]}\n                onSelectChange={e => {\n                  if (e.detail === '000') {\n                    this.updateFilters({ filtered_by_hkm: [] });\n                  } else {\n                    this.updateFilters({ filtered_by_hkm: [e.detail] });\n                  }\n                }}\n              ></ir-select>\n            )}\n          </div>\n          <div class=\"d-flex mt-1 align-items-center\">\n            {/* <igl-date-range\n              class=\"mr-1\"\n              dateLabel={locales.entries.Lcz_Dates}\n              minDate={moment().add(-90, 'days').format('YYYY-MM-DD')}\n              defaultData={{\n                fromDate: this.filters.from_date,\n                toDate: this.filters.to_date,\n              }}\n            ></igl-date-range> */}\n            <ir-range-picker\n              maxDate={moment().format('YYYY-MM-DD')}\n              minDate={this.minSelectableDate}\n              class=\"mr-1\"\n              fromDate={this.filters.from_date ? moment(this.filters.from_date, 'YYYY-MM-DD') : null}\n              toDate={this.filters.to_date ? moment(this.filters.to_date, 'YYYY-MM-DD') : null}\n            ></ir-range-picker>\n            <ir-button\n              title={locales.entries?.Lcz_Search}\n              variant=\"icon\"\n              icon_name=\"search\"\n              class=\"mr-1\"\n              isLoading={this.isLoading === 'search'}\n              onClickHandler={e => this.searchArchive(e)}\n            ></ir-button>\n            <ir-button\n              title={locales.entries?.Lcz_ExportToExcel}\n              variant=\"icon\"\n              icon_name=\"file\"\n              isLoading={this.isLoading === 'excel'}\n              onClickHandler={e => this.exportArchive(e)}\n            ></ir-button>\n          </div>\n          {this.fetchedData && (\n            <Fragment>\n              {this.data?.length === 0 && !isRequestPending('/Get_Archived_HK_Tasks') ? (\n                <p class={'text-center mt-2'}>{locales.entries.Lcz_NoResultsFound}</p>\n              ) : (\n                <table class=\"mt-2 table\">\n                  <thead>\n                    <th class=\"pl-0\">{locales.entries.Lcz_Period}</th>\n                    <th>{locales.entries.Lcz_Housekeeper}</th>\n                    <th>{locales.entries.Lcz_Unit}</th>\n                    <th>{locales.entries.Lcz_BookingNumber}</th>\n                  </thead>\n                  <tbody>\n                    {this.data?.map(d => (\n                      <tr key={d.id}>\n                        <td class=\"pl-0\">{d.date}</td>\n                        <td>{d.house_keeper}</td>\n                        <td>\n                          <ir-tooltip message={d.unit} customSlot containerStyle={{ width: 'fit-content' }}>\n                            <span slot=\"tooltip-trigger\" class={`unit-name`}>\n                              {d.unit}\n                            </span>\n                          </ir-tooltip>\n                        </td>\n                        <td>\n                          {d.booking_nbr ? (\n                            <ir-button\n                              btn_color=\"link\"\n                              btnStyle={{\n                                width: 'fit-content',\n                                padding: '0',\n                                margin: '0',\n                              }}\n                              labelStyle={{\n                                padding: '0',\n                              }}\n                              text={d.booking_nbr.toString()}\n                              onClick={() => {\n                                this.selectedBooking = d.booking_nbr;\n                                // window.open(`https://x.igloorooms.com/manage/acbookingeditV2.aspx?BN=${d.booking_nbr}`, '_blank');\n                              }}\n                            ></ir-button>\n                          ) : (\n                            locales.entries.Lcz_WasVacant\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </Fragment>\n          )}\n        </section>\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={!!this.selectedBooking}\n          showCloseButton={false}\n          sidebarStyles={{\n            width: '80rem',\n            background: '#F2F3F8',\n          }}\n        >\n          {this.selectedBooking && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              hasPrint\n              hasReceipt\n              hasCloseButton\n              onCloseSidebar={() => (this.selectedBooking = null)}\n              is_from_front_desk\n              propertyid={Number(this.propertyId)}\n              hasRoomEdit\n              hasRoomDelete\n              bookingNumber={this.selectedBooking?.toString()}\n              language={this.language}\n              hasRoomAdd\n              ticket={this.ticket}\n            ></ir-booking-details>\n          )}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n",null,"import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\nimport { Task } from '@/models/housekeeping';\nimport { toggleTaskSelection } from '@/stores/hk-tasks.store';\n\n@Component({\n  tag: 'ir-tasks-card',\n  styleUrls: ['ir-tasks-card.css'],\n  scoped: true,\n})\nexport class IrTasksCard {\n  @Prop() task: Task;\n  @Prop() isCheckable: boolean;\n  @Prop() isSkippable: boolean;\n\n  @Event() cleanSelectedTask: EventEmitter<Task>;\n  @Event() skipSelectedTask: EventEmitter<Task>;\n\n  render() {\n    const baseText = 'Mark as clean';\n    const btnText = this.task.housekeeper ? `${baseText} for ${this.task.housekeeper.slice(0, 20)}` : baseText;\n    return (\n      <Host class=\"card p-1 flex-fill m-0\" style={{ gap: '0.5rem' }}>\n        <div class=\"d-flex align items-center p-0 m-0 justify-content-between\" style={{ gap: '0.5rem' }}>\n          <div class=\"d-flex align items-center p-0 m-0\" style={{ gap: '0.5rem' }}>\n            <p class=\"m-0 p-0\">{this.task.formatted_date}</p>\n            <span>-</span>\n            <p class=\"m-0 p-0\">\n              Unit <b>{this.task.unit.name}</b>\n            </p>\n          </div>\n          {/* <span></span> */}\n        </div>\n        <p class=\"m-0 p-0\">\n          {this.task.status.description} <span style={{ marginLeft: '0.5rem' }}>{this.task.hint}</span>\n        </p>\n        <p class=\"m-0 p-0 d-flex align-items-center mb-1\" style={{ gap: '1rem' }}>\n          <span class=\"m-0 p-0 d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"lucide lucide-user-icon lucide-user\"\n            >\n              <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\n              <circle cx=\"12\" cy=\"7\" r=\"4\" />\n            </svg> */}\n            <svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"\n              />\n            </svg>\n            <span>\n              <b>{this.task.adult}</b> Adults\n            </span>\n          </span>\n          <span class=\"m-0 p-0 d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n            {/* <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"lucide lucide-users-icon lucide-users\"\n            >\n              <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n              <path d=\"M16 3.128a4 4 0 0 1 0 7.744\" />\n              <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\" />\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            </svg> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 320 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M96 64a64 64 0 1 1 128 0A64 64 0 1 1 96 64zm48 320l0 96c0 17.7-14.3 32-32 32s-32-14.3-32-32l0-192.2L59.1 321c-9.4 15-29.2 19.4-44.1 10S-4.5 301.9 4.9 287l39.9-63.3C69.7 184 113.2 160 160 160s90.3 24 115.2 63.6L315.1 287c9.4 15 4.9 34.7-10 44.1s-34.7 4.9-44.1-10L240 287.8 240 480c0 17.7-14.3 32-32 32s-32-14.3-32-32l0-96-32 0z\"\n              />\n            </svg>\n            <span>\n              <b>{this.task.child}</b> Children\n            </span>\n          </span>\n          <span class=\"m-0 p-0 d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"lucide lucide-baby-icon lucide-baby\"\n            >\n              <path d=\"M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5\" />\n              <path d=\"M15 12h.01\" />\n              <path d=\"M19.38 6.813A9 9 0 0 1 20.8 10.2a2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1\" />\n              <path d=\"M9 12h.01\" />\n            </svg>\n            <span>\n              <b>{this.task.infant}</b> Infants\n            </span>\n          </span>\n        </p>\n        {this.isCheckable && (\n          <div>\n            <ir-button\n              onClickHandler={() => {\n                toggleTaskSelection(this.task);\n                this.cleanSelectedTask.emit(this.task);\n              }}\n              size=\"sm\"\n              text={btnText}\n              labelStyle={{ textAlign: 'left !important' }}\n              btn_styles=\"text-left\"\n            ></ir-button>\n          </div>\n        )}\n        {this.isSkippable && (\n          <div>\n            <ir-button\n              onClickHandler={() => {\n                // toggleTaskSelection(this.task);\n                this.skipSelectedTask.emit(this.task);\n              }}\n              size=\"sm\"\n              text={'Skip'}\n              labelStyle={{ textAlign: 'left !important' }}\n              btn_styles=\"text-left\"\n            ></ir-button>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  min-width: 20vw;\n  height: 100%;\n  flex: 1;\n}\n@media (min-width: 1024px) {\n  .collapse-btn {\n    display: none;\n  }\n  #hkTasksFiltersCollapse.collapse:not(.show) {\n    display: block;\n    /* height: 75vh; */\n  }\n}\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport { TaskFilters } from '../types';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\nexport type ModifiedTaskFilters = Omit<TaskFilters, 'housekeepers'> & { housekeepers: string };\n@Component({\n  tag: 'ir-tasks-filters',\n  styleUrl: 'ir-tasks-filters.css',\n  scoped: true,\n})\nexport class IrTasksFilters {\n  @Prop() isLoading: boolean;\n\n  @State() filters: ModifiedTaskFilters = {\n    cleaning_periods: {\n      code: '',\n    },\n    housekeepers: '000',\n    cleaning_frequencies: { code: '' },\n    dusty_units: { code: '' },\n    highlight_check_ins: { code: '' },\n  };\n\n  @State() collapsed: boolean = false;\n\n  @Event() applyFilters: EventEmitter<TaskFilters>;\n\n  private baseFilters: TaskFilters;\n\n  componentWillLoad() {\n    this.baseFilters = {\n      cleaning_periods: housekeeping_store?.hk_criteria?.cleaning_periods[0],\n      housekeepers: [],\n      cleaning_frequencies: calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0],\n      dusty_units: housekeeping_store?.hk_criteria?.dusty_periods[0],\n      highlight_check_ins: housekeeping_store?.hk_criteria?.highlight_checkin_options[0],\n    };\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\n  }\n\n  private updateFilter(params: Partial<ModifiedTaskFilters>) {\n    this.filters = { ...this.filters, ...params };\n  }\n  private applyFiltersEvt(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.applyFilters.emit({\n      ...this.filters,\n      housekeepers: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers : [{ id: Number(this.filters.housekeepers) }],\n    });\n  }\n  private resetFilters(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\n    this.applyFilters.emit({\n      ...this.filters,\n      housekeepers: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers : [{ id: Number(this.filters.housekeepers) }],\n    });\n  }\n  render() {\n    return (\n      <div class=\"card mb-0 p-1 d-flex flex-column\">\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n              <path\n                fill=\"currentColor\"\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\n              />\n            </svg>\n            <h4 class=\"m-0 p-0 flex-grow-1\">{locales.entries.Lcz_Filters}</h4>\n          </div>\n          <ir-button\n            variant=\"icon\"\n            id=\"drawer-icon\"\n            data-toggle=\"collapse\"\n            data-target=\"#hkTasksFiltersCollapse\"\n            aria-expanded={this.collapsed ? 'true' : 'false'}\n            aria-controls=\"hkTasksFiltersCollapse\"\n            class=\"mr-1 collapse-btn\"\n            icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\n            onClickHandler={() => {\n              this.collapsed = !this.collapsed;\n            }}\n            style={{ '--icon-size': '1.6rem' }}\n          ></ir-button>\n        </div>\n        <div class=\"m-0 p-0 collapse\" id=\"hkTasksFiltersCollapse\">\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\n            <fieldset class=\"pt-1\">\n              <p class=\"m-0 pt-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                {locales.entries.Lcz_Period}\n              </p>\n              <ir-select\n                testId=\"period\"\n                selectedValue={this.filters?.cleaning_periods?.code}\n                LabelAvailable={false}\n                showFirstOption={false}\n                data={housekeeping_store?.hk_criteria?.cleaning_periods.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n                onSelectChange={e => {\n                  this.updateFilter({ cleaning_periods: { code: e.detail } });\n                }}\n              ></ir-select>\n            </fieldset>\n            {housekeeping_store?.hk_criteria?.housekeepers.length > 1 && (\n              <fieldset>\n                <p class=\"m-0 pt-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                  {locales.entries.Lcz_Housekeepers}\n                </p>\n                <ir-select\n                  testId=\"housekeepers\"\n                  selectedValue={this.filters?.housekeepers}\n                  LabelAvailable={false}\n                  showFirstOption={false}\n                  data={[\n                    { text: locales.entries.Lcz_Allhousekeepers, value: '000' },\n                    ...housekeeping_store?.hk_criteria?.housekeepers\n                      .map(v => ({\n                        text: v.name,\n                        value: v.id.toString(),\n                      }))\n                      .sort((a, b) => a.text.toLowerCase().localeCompare(b.text.toLowerCase())),\n                  ]}\n                  onSelectChange={e => {\n                    // if (e.detail === '000') {\n                    //   this.updateFilter({ housekeepers: { ids: this.baseFilters?.housekeepers?.ids } });\n                    // } else {\n                    //   this.updateFilter({ housekeepers: { ids: [e.detail] } });\n                    // }\n                    this.updateFilter({ housekeepers: e.detail });\n                  }}\n                ></ir-select>\n              </fieldset>\n            )}\n            {/* <fieldset>\n              <p class=\"m-0 pt-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                {locales.entries.Lcz_CleaningFrequency}\n              </p>\n              <ir-select\n                testId=\"cleaning_frequency\"\n                selectedValue={this.filters?.cleaning_frequencies?.code}\n                LabelAvailable={false}\n                showFirstOption={false}\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n                onSelectChange={e => {\n                  this.updateFilter({ cleaning_frequencies: { code: e.detail } });\n                }}\n              ></ir-select>\n            </fieldset> */}\n            <fieldset>\n              <p class=\"m-0 pt-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                Include dusty units\n              </p>\n              <ir-select\n                testId=\"dusty_units\"\n                showFirstOption={false}\n                LabelAvailable={false}\n                selectedValue={this.filters?.dusty_units?.code}\n                data={housekeeping_store.hk_criteria?.dusty_periods?.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n                onSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.updateFilter({ dusty_units: { code: e.detail } });\n                }}\n              ></ir-select>\n            </fieldset>\n            <fieldset class=\"mb-1\">\n              <p class=\"m-0 pt-0 px-0\" style={{ paddingBottom: '0.25rem' }}>\n                {locales.entries['Lcz_HighlightCheck-insFrom']}\n              </p>\n              <ir-select\n                testId=\"highlight_check_ins\"\n                selectedValue={this.filters?.highlight_check_ins?.code}\n                LabelAvailable={false}\n                showFirstOption={false}\n                onSelectChange={e => {\n                  this.updateFilter({ highlight_check_ins: { code: e.detail } });\n                }}\n                data={housekeeping_store.hk_criteria?.highlight_checkin_options?.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n              ></ir-select>\n            </fieldset>\n            <div class=\"d-flex align-items-center justify-content-end\" style={{ gap: '1rem' }}>\n              <ir-button\n                btn_type=\"button\"\n                data-testid=\"reset\"\n                text={locales.entries.Lcz_Reset}\n                size=\"sm\"\n                btn_color=\"secondary\"\n                onClickHandler={e => this.resetFilters(e)}\n              ></ir-button>\n              <ir-button\n                btn_type=\"button\"\n                data-testid=\"apply\"\n                isLoading={this.isLoading}\n                text={locales.entries.Lcz_Apply}\n                size=\"sm\"\n                onClickHandler={e => this.applyFiltersEvt(e)}\n              ></ir-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  display: flex;\n  /* flex-direction: column; */\n  gap: 1rem;\n  /* margin-bottom: 1rem; */\n  flex-wrap: wrap;\n}\n/* d-flex flex-column mb-1 flex-md-row align-items-md-center justify-content-between */\n/* d-flex align-items-center */\n.action-buttons {\n  display: flex;\n  align-items: center;\n\n  /* justify-content: space-between; */\n}\n.search-filter-container {\n  flex: 1 1 0%;\n}\n/*sm*/\n@media (min-width: 640px) {\n  :host {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n  }\n  .search-filter-container {\n    display: flex;\n  }\n  .action-buttons {\n    justify-content: stretch;\n  }\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { updateSearchField, hkTasksStore } from '@/stores/hk-tasks.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, h, Host, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ir-tasks-header',\n  styleUrl: 'ir-tasks-header.css',\n  scoped: true,\n})\nexport class IrTasksHeader {\n  private btnRef: HTMLIrButtonElement;\n\n  @Event() headerButtonPress: EventEmitter<{ name: 'cleaned' | 'export' | 'archive' }>;\n\n  @Listen('animateCleanedButton', { target: 'body' })\n  handleCleanedButtonAnimation(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.btnRef.bounce();\n  }\n\n  render() {\n    return (\n      <Host>\n        {/* <h3 class=\"mb-1 mb-md-0\">Housekeeping Tasks</h3> */}\n        <div class=\"search-filter-container\" style={{ gap: '1rem' }}>\n          <ir-input-text class=\"search-filter-input\" placeholder=\"Search unit\" variant=\"icon\" value={hkTasksStore.searchField} onTextChange={e => updateSearchField(e.detail)}>\n            <ir-icons name=\"search\" slot=\"icon\"></ir-icons>\n          </ir-input-text>\n        </div>\n        <div class=\"action-buttons\" style={{ gap: '1rem' }}>\n          <ir-button\n            size=\"sm\"\n            btn_color=\"outline\"\n            text={locales.entries.Lcz_Export}\n            onClickHandler={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.headerButtonPress.emit({ name: 'export' });\n            }}\n            btnStyle={{ height: '100%' }}\n            iconPosition=\"right\"\n            icon_name=\"file\"\n            icon_style={{ '--icon-size': '14px' }}\n          ></ir-button>\n          <ir-button\n            size=\"sm\"\n            btn_color=\"outline\"\n            text={locales.entries.Lcz_Archives}\n            btnStyle={{ height: '100%' }}\n            onClickHandler={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.headerButtonPress.emit({ name: 'archive' });\n            }}\n          ></ir-button>\n          <ir-button\n            class=\"d-none d-md-flex\"\n            onClickHandler={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.headerButtonPress.emit({ name: 'cleaned' });\n            }}\n            btnStyle={{ height: '100%' }}\n            size=\"sm\"\n            btn_disabled={!(hkTasksStore.selectedTasks.length > 0)}\n            text={'Cleaned'}\n            ref={el => (this.btnRef = el)}\n          ></ir-button>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  align-items: center;\n}\n.selected-row {\n  background-color: rgba(0, 0, 255, 0.1);\n}\n.selected-row:hover {\n  background-color: rgba(0, 0, 255, 0.15);\n}\n.header-content {\n  height: 100%;\n}\n\n.highlighted-unit {\n  background: #000;\n  color: white;\n  padding: 0.2rem 0.3rem;\n  border-radius: 4px;\n}\n.table-container {\n  height: 100%;\n}\n\n/* .table-container {\n  height: 75vh;\n} */\n/* td,\nth {\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  max-width: max-content !important;\n \n  text-align: start;\n}\ntr {\n  border-bottom: 1px solid #e0e0e0;\n} */\n.task-table-row td {\n  background: white !important;\n}\n.task-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.table-container {\n  display: none;\n}\n/* .pagination-container {\n  position: sticky;\n  bottom: -1rem;\n  background-color: white;\n  padding: 1rem 0;\n  } */\n.mobile-tasks-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n/*sm*/\n@media (min-width: 640px) {\n  .mobile-tasks-container {\n    display: none;\n  }\n  .table-container {\n    display: flex;\n  }\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","/* Base styles */\n.ir-table-row td {\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n  z-index: 2;\n  background-color: white;\n  white-space: nowrap;\n  /* width: max-content;\n  max-width: max-content; */\n}\n/* .ir-table-row td:last-child {\n  width: 100%; \n}*/\n/* .ir-table-row td:first-child,\n.table thead th:first-child {\n  position: sticky;\n  left: var(--ir-table-sticky-padding,-1rem);\n} */\n\n.table td {\n  border-top: 0;\n  border-bottom: 1px solid #e3ebf3;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n/* .table thead th:first-child {\n  border-top-left-radius: 0.5rem;\n  }\n  .table thead th:last-child {\n    border-top-right-radius: 0.5rem;\n    } */\n.table thead th {\n  border: none !important;\n  background: #ececec;\n  color: #374151;\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n}\n\n/* Selected Rows Styles */\n\n.selected td {\n  background: #e3f3fa !important;\n}\n.selected td {\n  color: var(--gray-dark) !important;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n/* Sorting styles */\n.sortable,\n.ir-table-row {\n  text-transform: capitalize;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.sortable:hover {\n  color: #212529;\n  background-color: #e2e8f0 !important;\n  border-color: #dae0e5;\n  cursor: pointer;\n}\n.ir-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.sortable:active {\n  color: #212529;\n  background-color: #e2e8f0;\n  border-color: #d3d9df;\n}\n.sortable svg {\n  color: var(--blue);\n}\n/* .action-row {\n  position: sticky;\n  right:var(--ir-table-sticky-padding,-1rem);\n} */\n","import { Component, Event, EventEmitter, Host, Listen, Prop, Watch, h } from '@stencil/core';\nimport { Task } from '@/models/housekeeping';\nimport moment from 'moment';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\nimport {\n  hkTasksStore,\n  toggleTaskSelection,\n  selectAllTasks,\n  clearSelectedTasks,\n  getCheckableTasks,\n  isAllTasksSelected,\n  updateSorting,\n  getPaginatedTasks,\n  getMobileTasks,\n} from '@/stores/hk-tasks.store';\n\n@Component({\n  tag: 'ir-tasks-table',\n  styleUrls: ['ir-tasks-table.css', '../../../../common/table.css'],\n  scoped: true,\n})\nexport class IrTasksTable {\n  @Prop({ mutable: true }) tasks: Task[] = [];\n\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\n  @Event({ bubbles: true, composed: true }) sortingChanged: EventEmitter<{ field: string; direction: 'ASC' | 'DESC' }>;\n  @Event({ bubbles: true, composed: true }) skipSelectedTask: EventEmitter<Task>;\n\n  componentWillLoad() {\n    if (this.tasks && this.tasks.length > 0) {\n      updateSorting('date', 'ASC');\n    }\n  }\n\n  /**\n   * Sorts the tasks by the given key. If no direction is provided,\n   * it toggles between ascending and descending.\n   */\n  private handleSort(key: string) {\n    let newDirection = hkTasksStore.sorting.direction;\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\n    if (hkTasksStore.sorting.field === key) {\n      newDirection = hkTasksStore.sorting.direction === 'ASC' ? 'DESC' : 'ASC';\n    } else {\n      newDirection = 'ASC';\n    }\n    updateSorting(key, newDirection);\n    this.sortingChanged.emit({ field: key, direction: newDirection });\n  }\n\n  @Listen('clearSelectedHkTasks', { target: 'body' })\n  handleClearSelectedHkTasks(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    clearSelectedTasks();\n  }\n\n  @Watch('tasks')\n  handleTasksChange(newTasks: Task[]) {\n    if (newTasks?.length) {\n      clearSelectedTasks();\n    }\n  }\n\n  /**\n   * Helper to toggle selection for a single row.\n   */\n  private toggleSelection(task: Task) {\n    toggleTaskSelection(task);\n    this.animateCleanedButton.emit(null);\n    this.emitSelectedTasks();\n  }\n\n  private emitSelectedTasks() {\n    this.rowSelectChange.emit(hkTasksStore.selectedTasks);\n  }\n\n  /**\n   * Checks if every row is selected.\n   */\n  private get allSelected(): boolean {\n    return isAllTasksSelected();\n  }\n\n  /**\n   * Toggles selection on all visible tasks at once.\n   */\n  private toggleSelectAll() {\n    if (this.allSelected) {\n      clearSelectedTasks();\n    } else {\n      selectAllTasks(getCheckableTasks());\n      this.animateCleanedButton.emit(null);\n    }\n    this.emitSelectedTasks();\n  }\n\n  /**\n   * Determines if a task is checkable.\n   *\n   * A task is considered checkable if its date is today or any day before.\n   * This prevents users from selecting tasks with future dates.\n   *\n   * @param {Task} task - The task to check.\n   * @returns {boolean} - Returns `true` if the task's date is today or earlier, otherwise `false`.\n   */\n  private isCheckable(task: Task): boolean {\n    return moment(task.date, 'YYYY-MM-DD').isSameOrBefore(moment(), 'days');\n  }\n\n  /**\n   * Determines if a task is skippable.\n   *\n   * A task is considered skippable if its date is today and should be In house.\n   *\n   * @param {Task} task - The task to skip.\n   * @returns {boolean} - Returns `true` if the task's date is today and in house, otherwise `false`.\n   */\n  private isSkippable(task: Task): boolean {\n    const isTodayTask = moment().isSame(moment(task.date, 'YYYY-MM-DD'), 'date');\n    return isTodayTask && task.status.code === 'IH';\n  }\n\n  render() {\n    const haveManyHousekeepers = housekeeping_store?.hk_criteria?.housekeepers?.length > 1;\n    const tasks = getPaginatedTasks();\n    // const tasks = hkTasksStore.tasks;\n    const mobileTasks = getMobileTasks();\n    return (\n      <Host class=\"flex-fill\">\n        <section class=\"mobile-tasks-container flex-fill\">\n          <div class=\"card p-1 m-0\">\n            <ir-tasks-header></ir-tasks-header>\n          </div>\n          {mobileTasks?.length === 0 && <p class=\"mx-auto\">{locales.entries.Lcz_NoTasksFound}</p>}\n          {mobileTasks.map(task => {\n            const isCheckable = this.isCheckable(task);\n            const isSkippable = this.isSkippable(task);\n            return <ir-tasks-card task={task} isSkippable={isSkippable} key={task.id} isCheckable={isCheckable}></ir-tasks-card>;\n          })}\n          <ir-tasks-table-pagination></ir-tasks-table-pagination>\n        </section>\n        <div class=\"card table-container flex-fill p-1 m-0\">\n          <ir-tasks-header></ir-tasks-header>\n          <div class={'table-responsive mb-auto'}>\n            <table class=\"table\" data-testid=\"hk_tasks_table\">\n              <thead class=\"table-header\">\n                <tr>\n                  <th class={'task-row'}>\n                    <ir-checkbox\n                      indeterminate={hkTasksStore.selectedTasks.length > 0 && hkTasksStore.selectedTasks.length < getCheckableTasks().length}\n                      checked={this.allSelected}\n                      onCheckChange={() => this.toggleSelectAll()}\n                    ></ir-checkbox>\n                  </th>\n                  <th class=\"extra-padding\">{locales.entries.Lcz_Period}</th>\n                  <th class=\"extra-padding\">\n                    {this.tasks.length > 1 && this.tasks.length + ' '}\n                    {locales.entries.Lcz_Unit}\n                  </th>\n                  <th class={'sortable extra-padding'} onClick={() => this.handleSort('status')}>\n                    <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                      <span>{locales.entries.Lcz_Status}</span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        class=\"lucide lucide-arrow-up-down\"\n                      >\n                        <path d=\"m21 16-4 4-4-4\" />\n                        <path d=\"M17 20V4\" />\n                        <path d=\"m3 8 4-4 4 4\" />\n                        <path d=\"M7 4v16\" />\n                      </svg>\n                    </div>\n                  </th>\n                  <th class=\"extra-padding text-left\">{locales.entries.Lcz_Hint}</th>\n                  <th class=\"text-left\">{locales.entries.Lcz_A}d</th>\n                  <th class=\"text-left\">{locales.entries.Lcz_C}h</th>\n                  <th class=\"text-left text-left\">{locales.entries.Lcz_I}n</th>\n                  {haveManyHousekeepers && (\n                    <th style={{ textAlign: 'start' }} class={'sortable extra-padding'} onClick={() => this.handleSort('housekeeper')}>\n                      <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                        <span>{locales.entries.Lcz_Housekeeper}</span>\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"lucide lucide-arrow-up-down\"\n                        >\n                          <path d=\"m21 16-4 4-4-4\" />\n                          <path d=\"M17 20V4\" />\n                          <path d=\"m3 8 4-4 4 4\" />\n                          <path d=\"M7 4v16\" />\n                        </svg>\n                      </div>\n                    </th>\n                  )}\n                  <th></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {tasks.length === 0 && (\n                  <tr class=\"ir-table-row\">\n                    <td colSpan={9} class=\"text-left\">\n                      <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\n                        <span> {locales.entries.Lcz_NoTasksFound}</span>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {tasks?.map(task => {\n                  const isSelected = hkTasksStore.selectedTasks.some(t => t.id === task.id);\n                  const isCheckable = this.isCheckable(task);\n                  return (\n                    <tr\n                      data-date={task.date}\n                      data-testid={`hk_task_row`}\n                      data-assigned={task.housekeeper ? 'true' : 'false'}\n                      style={isCheckable && { cursor: 'pointer' }}\n                      onClick={() => {\n                        if (!isCheckable) {\n                          return;\n                        }\n                        this.toggleSelection(task);\n                      }}\n                      class={{ 'selected': isSelected, 'task-table-row ir-table-row': true }}\n                      key={task.id}\n                    >\n                      <td class=\"task-row \">{isCheckable && <ir-checkbox checked={isSelected}></ir-checkbox>}</td>\n                      <td class=\"task-row extra-padding\">{task.formatted_date}</td>\n                      <td class=\"task-row extra-padding\">\n                        <span class={{ 'highlighted-unit': task.is_highlight }}>{task.unit.name}</span>\n                      </td>\n                      <td class=\"task-row extra-padding text-left\">{task.status.description}</td>\n                      <td class=\"task-row extra-padding text-left\">{task.hint}</td>\n                      <td class=\"task-row text-left\">{task.adult}</td>\n                      <td class=\"task-row text-left\">{task.child}</td>\n                      <td class=\"task-row text-left\">{task.infant}</td>\n                      {haveManyHousekeepers && (\n                        <td class=\" task-row extra-padding\" style={{ textAlign: 'start' }}>\n                          {task.housekeeper ?? locales.entries.Lcz_Unassigned}\n                        </td>\n                      )}\n                      <td>\n                        {this.isSkippable(task) && (\n                          <ir-button\n                            text=\"Skip\"\n                            size=\"sm\"\n                            onClickHandler={() => {\n                              this.skipSelectedTask.emit(task);\n                            }}\n                          ></ir-button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div class=\"mt-auto\">\n            <ir-tasks-table-pagination></ir-tasks-table-pagination>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin-top: auto;\n}\n.page-item.active .page-link {\n  background-color: var(--blue);\n}\n.tasks-pagination {\n  display: none !important;\n}\n/*sm*/\n@media (min-width: 640px) {\n  .tasks-load-more {\n    display: none;\n  }\n  .tasks-pagination {\n    display: flex !important;\n  }\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import hkTasksStore, { loadMoreTasks, shouldLoadMore, updateCurrentPage, updatePageSize } from '@/stores/hk-tasks.store';\nimport { Component, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'ir-tasks-table-pagination',\n  styleUrl: 'ir-tasks-table-pagination.css',\n  scoped: true,\n})\nexport class IrTasksTablePagination {\n  render() {\n    const { currentPage, pageSize, totalPages, mobileCurrentPage } = hkTasksStore.pagination;\n    const totalTasks = hkTasksStore.tasks?.length ?? 0;\n    const start = totalTasks === 0 ? 0 : (currentPage - 1) * pageSize + 1;\n    const end = Math.min(currentPage * pageSize, totalTasks);\n    const pageSizes = hkTasksStore.pagination.tasksList[0] > totalTasks ? hkTasksStore.pagination.tasksList.slice(0, 1) : hkTasksStore.pagination.tasksList;\n    return (\n      <Host>\n        {shouldLoadMore() && <ir-button size=\"sm\" class=\"tasks-load-more\" text=\"Load more\" onClickHandler={() => loadMoreTasks(mobileCurrentPage + 1)}></ir-button>}\n        <ir-pagination\n          showing={{\n            from: start,\n            to: end,\n          }}\n          class=\"tasks-pagination\"\n          total={totalTasks}\n          pages={totalPages}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          pageSizes={pageSizes}\n          onPageChange={e => updateCurrentPage(e.detail.currentPage)}\n          onPageSizeChange={e => updatePageSize(e.detail.pageSize)}\n          showTotalRecords={true}\n          recordLabel=\"tasks\"\n        ></ir-pagination>\n      </Host>\n    );\n  }\n}\n"],"mappings":"0gBAAA,MAAMA,EAAiB,8kBACvB,MAAAC,EAAeD,E,MCsBFE,EAAW,MALxB,WAAAC,CAAAC,G,UAOUC,KAAAC,SAAmB,KAGlBD,KAAAE,QAA2B,CAClCC,UAAW,KACXC,QAAS,KACTC,gBAAiB,GACjBC,iBAAkB,IAEXN,KAAAO,KAA0C,GAC1CP,KAAAQ,UAAuC,KACvCR,KAAAS,YAAuB,MAExBT,KAAAU,kBAAoBC,IAASC,SAAS,GAAI,QAAQC,SAClDb,KAAAc,oBAAsB,IAAIC,EAC1Bf,KAAAgB,MAAwC,E,CACxC,mBAAAC,CAAoBC,GAC1BA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKqB,gBAAkB,I,CAGzB,iBAAAC,GACEtB,KAAKuB,Y,CAEC,UAAAA,GACN,MAAMP,EAAQ,GACdQ,EAAcC,UAAUC,SAAQC,IAC9BA,EAAEC,cAAcF,SAAQG,IACtBb,EAAMc,KAAK,CAAEC,GAAIF,EAAKE,GAAIC,KAAMH,EAAKG,MAAO,GAC5C,IAEJhC,KAAKgB,MAAQA,C,CAGP,sBAAMiB,CAAiBC,EAA2B,O,MACxD,MAAMC,QAAYnC,KAAKc,oBAAoBsB,mBAAkBC,OAAAC,OAAAD,OAAAC,OAAA,CAAGC,YAAaC,OAAOxC,KAAKyC,aAAgBzC,KAAKE,SAAO,CAAEwC,mBAAoBR,KAC3IlC,KAAKO,MAAOoC,EAAA,KAAKR,IAAG,MAAHA,SAAG,SAAHA,EAAKS,QAAS,OAAI,MAAAD,SAAA,SAAAA,EAAEE,KAAIC,GAACT,OAAAC,OAAAD,OAAAC,OAAA,GAAUQ,GAAC,CAAEf,GAAIgB,QAC3D/C,KAAKS,YAAc,KACnB,MAAO,CAAEmC,MAAOT,IAAG,MAAHA,SAAG,SAAHA,EAAKS,MAAOI,IAAKb,IAAG,MAAHA,SAAG,SAAHA,EAAKa,I,CAIxC,qBAAAC,CAAsB/B,GACpBA,EAAEC,2BACFD,EAAEE,kBACF,MAAM8B,SAAEA,EAAQrC,OAAEA,GAAWK,EAAEiC,OAC/BnD,KAAKoD,cAAc,CACjBjD,UAAW+C,EAAWA,EAASG,OAAO,cAAgB,KACtDjD,QAASS,EAASA,EAAOwC,OAAO,cAAgB,M,CAI5C,aAAAD,CAAcE,GACpBtD,KAAKE,QAAOmC,OAAAC,OAAAD,OAAAC,OAAA,GAAQtC,KAAKE,SAAYoD,E,CAEvC,mBAAMC,CAAcrC,GAClB,IACEA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKQ,UAAY,eACXR,KAAKiC,kB,CACX,MAAOuB,GACPC,QAAQC,IAAIF,E,SAEZxD,KAAKQ,UAAY,I,EAIrB,mBAAMmD,CAAczC,GAClB,IACEA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKQ,UAAY,QACjB,MAAMwC,IAAEA,SAAchD,KAAKiC,iBAAiB,MAC5C2B,EAAaZ,E,CACb,MAAOQ,GACPC,QAAQC,IAAIF,E,SAEZxD,KAAKQ,UAAY,I,EAIrB,MAAAqD,G,4BACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,YAAAE,IAAA,2CAAUC,MAAM,OAAOC,MAAM,8BAA8BC,eAAe,YAC1EL,EAAA,WAAAE,IAAA,2CAASC,MAAM,QACbH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,UACTH,EAAA,aAAAE,IAAA,2CACEC,MAAM,QACNG,gBAAiB,MACjBC,eAAgB,MAChB9D,KAAM,CACJ,CAAE+D,KAAM,YAAaC,MAAO,O,KAEzB5B,EAAA3C,KAAKgB,SAAK,MAAA2B,SAAA,SAAAA,EACTE,KAAI2B,IAAC,CACLF,KAAME,EAAExC,KACRuC,MAAOC,EAAEzC,GAAG0C,eAEbC,MAAK,CAACC,EAAGC,IAAMD,EAAEL,KAAKO,cAAcC,cAAcF,EAAEN,KAAKO,kBAE9DE,eAAgB7D,IACdA,EAAEC,2BACFD,EAAEE,kBACF,GAAIF,EAAEiC,SAAW,MAAO,CACtBnD,KAAKoD,cAAc,CAAE9C,iBAAkB,I,KAClC,CACLN,KAAKoD,cAAc,CAAE9C,iBAAkB,CAACY,EAAEiC,S,OAI/C6B,EAAAC,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAF,SAAA,SAAAA,EAAEG,aAAaC,QAAS,GACtDtB,EAAA,aAAAE,IAAA,2CACEC,MAAM,aACNoB,gBAAeC,GAAAC,EAAAvF,KAAKE,WAAO,MAAAqF,SAAA,SAAAA,EAAElF,mBAAe,MAAAiF,SAAA,SAAAA,EAAEF,UAAWH,EAAmBC,YAAYC,aAAaC,OAAS,OAAQI,GAAAC,EAAAzF,KAAKE,WAAO,MAAAuF,SAAA,SAAAA,EAAEpF,gBAAgB,MAAE,MAAAmF,SAAA,SAAAA,EAAEf,WACxJJ,eAAgB,MAChBD,gBAAiB,MACjB7D,KAAM,CACJ,CAAE+D,KAAM,mBAAoBC,MAAO,WAChCmB,EAAAT,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAQ,SAAA,SAAAA,EAAEP,aACjCtC,KAAI2B,IAAC,CACJF,KAAME,EAAExC,KACRuC,MAAOC,EAAEzC,GAAG0C,eAEbC,MAAK,CAACC,EAAGC,IAAMD,EAAEL,KAAKO,cAAcC,cAAcF,EAAEN,KAAKO,kBAE9DE,eAAgB7D,IACd,GAAIA,EAAEiC,SAAW,MAAO,CACtBnD,KAAKoD,cAAc,CAAE/C,gBAAiB,I,KACjC,CACLL,KAAKoD,cAAc,CAAE/C,gBAAiB,CAACa,EAAEiC,S,MAMnDW,EAAA,OAAAE,IAAA,2CAAKC,MAAM,kCAUTH,EAAA,mBAAAE,IAAA,2CACE2B,QAAShF,IAAS0C,OAAO,cACzBuC,QAAS5F,KAAKU,kBACduD,MAAM,OACNf,SAAUlD,KAAKE,QAAQC,UAAYQ,EAAOX,KAAKE,QAAQC,UAAW,cAAgB,KAClFU,OAAQb,KAAKE,QAAQE,QAAUO,EAAOX,KAAKE,QAAQE,QAAS,cAAgB,OAE9E0D,EAAA,aAAAE,IAAA,2CACE6B,OAAOC,EAAAC,EAAQC,WAAO,MAAAF,SAAA,SAAAA,EAAEG,WACxBC,QAAQ,OACRC,UAAU,SACVlC,MAAM,OACNzD,UAAWR,KAAKQ,YAAc,SAC9B4F,eAAgBlF,GAAKlB,KAAKuD,cAAcrC,KAE1C4C,EAAA,aAAAE,IAAA,2CACE6B,OAAOQ,EAAAN,EAAQC,WAAO,MAAAK,SAAA,SAAAA,EAAEC,kBACxBJ,QAAQ,OACRC,UAAU,OACV3F,UAAWR,KAAKQ,YAAc,QAC9B4F,eAAgBlF,GAAKlB,KAAK2D,cAAczC,MAG3ClB,KAAKS,aACJqD,EAACyC,EAAQ,CAAAvC,IAAA,8CACNwC,EAAAxG,KAAKO,QAAI,MAAAiG,SAAA,SAAAA,EAAEpB,UAAW,IAAMqB,EAAiB,0BAC5C3C,EAAA,KAAGG,MAAO,oBAAqB8B,EAAQC,QAAQU,oBAE/C5C,EAAA,SAAOG,MAAM,cACXH,EAAA,aACEA,EAAA,MAAIG,MAAM,QAAQ8B,EAAQC,QAAQW,YAClC7C,EAAA,UAAKiC,EAAQC,QAAQY,iBACrB9C,EAAA,UAAKiC,EAAQC,QAAQa,UACrB/C,EAAA,UAAKiC,EAAQC,QAAQc,oBAEvBhD,EAAA,cACGiD,EAAA/G,KAAKO,QAAI,MAAAwG,SAAA,SAAAA,EAAElE,KAAImE,GACdlD,EAAA,MAAIE,IAAKgD,EAAEjF,IACT+B,EAAA,MAAIG,MAAM,QAAQ+C,EAAEC,MACpBnD,EAAA,UAAKkD,EAAEE,cACPpD,EAAA,UACEA,EAAA,cAAYqD,QAASH,EAAEI,KAAMC,WAAU,KAACC,eAAgB,CAAEC,MAAO,gBAC/DzD,EAAA,QAAM0D,KAAK,kBAAkBvD,MAAO,aACjC+C,EAAEI,QAITtD,EAAA,UACGkD,EAAES,YACD3D,EAAA,aACE4D,UAAU,OACVC,SAAU,CACRJ,MAAO,cACPK,QAAS,IACTC,OAAQ,KAEVC,WAAY,CACVF,QAAS,KAEXtD,KAAM0C,EAAES,YAAYhD,WACpBsD,QAAS,KACP/H,KAAKqB,gBAAkB2F,EAAES,WAAW,IAKxC1B,EAAQC,QAAqB,sBAWjDlC,EAAA,cAAAE,IAAA,2CACEgE,kBAAmBhI,KAAKiB,oBAAoBgH,KAAKjI,MACjDkI,OAAQlI,KAAKqB,gBACb8G,gBAAiB,MACjBC,cAAe,CACbb,MAAO,QACPc,WAAY,YAGbrI,KAAKqB,iBACJyC,EAAA,sBAAAE,IAAA,2CACEwD,KAAK,eACLc,SAAQ,KACRC,WAAU,KACVC,eAAc,KACdC,eAAgB,IAAOzI,KAAKqB,gBAAkB,KAC9CqH,mBAAkB,KAClBC,WAAYnG,OAAOxC,KAAKyC,YACxBmG,YAAW,KACXC,cAAa,KACbC,eAAeC,EAAA/I,KAAKqB,mBAAe,MAAA0H,SAAA,SAAAA,EAAEtE,WACrCxE,SAAUD,KAAKC,SACf+I,WAAU,KACVC,OAAQjJ,KAAKiJ,U,aCjR3B,MAAMC,EAAiB,GACvB,MAAAC,EAAeD,E,MCQFE,EAAW,M,iIAQtB,MAAAvF,GACE,MAAMwF,EAAW,gBACjB,MAAMC,EAAUtJ,KAAKuJ,KAAKC,YAAc,GAAGH,SAAgBrJ,KAAKuJ,KAAKC,YAAYC,MAAM,EAAG,MAAQJ,EAClG,OACEvF,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,yBAAyByF,MAAO,CAAEC,IAAK,WACjD7F,EAAA,OAAAE,IAAA,2CAAKC,MAAM,4DAA4DyF,MAAO,CAAEC,IAAK,WACnF7F,EAAA,OAAAE,IAAA,2CAAKC,MAAM,oCAAoCyF,MAAO,CAAEC,IAAK,WAC3D7F,EAAA,KAAAE,IAAA,2CAAGC,MAAM,WAAWjE,KAAKuJ,KAAKK,gBAC9B9F,EAAA,QAAAE,IAAA,iDACAF,EAAA,KAAAE,IAAA,2CAAGC,MAAM,WAAS,QACXH,EAAA,KAAAE,IAAA,4CAAIhE,KAAKuJ,KAAKnC,KAAKpF,SAK9B8B,EAAA,KAAAE,IAAA,2CAAGC,MAAM,WACNjE,KAAKuJ,KAAKM,OAAOC,YAAW,IAAEhG,EAAA,QAAAE,IAAA,2CAAM0F,MAAO,CAAEK,WAAY,WAAa/J,KAAKuJ,KAAKS,OAEnFlG,EAAA,KAAAE,IAAA,2CAAGC,MAAM,yCAAyCyF,MAAO,CAAEC,IAAK,SAC9D7F,EAAA,QAAAE,IAAA,2CAAMC,MAAM,oCAAoCyF,MAAO,CAAEC,IAAK,WAgB5D7F,EAAA,OAAAE,IAAA,2CAAKuD,MAAM,KAAK0C,OAAO,KAAKC,MAAM,6BAA6BC,QAAQ,eACrErG,EAAA,QAAAE,IAAA,2CACEoG,KAAK,eACLpD,EAAE,6LAGNlD,EAAA,QAAAE,IAAA,4CACEF,EAAA,KAAAE,IAAA,4CAAIhE,KAAKuJ,KAAKc,OAAU,YAG5BvG,EAAA,QAAAE,IAAA,2CAAMC,MAAM,oCAAoCyF,MAAO,CAAEC,IAAK,WAkB5D7F,EAAA,OAAAE,IAAA,2CAAKkG,MAAM,6BAA6B3C,MAAM,KAAK0C,OAAO,KAAKE,QAAQ,eACrErG,EAAA,QAAAE,IAAA,2CACEoG,KAAK,eACLpD,EAAE,4UAGNlD,EAAA,QAAAE,IAAA,4CACEF,EAAA,KAAAE,IAAA,4CAAIhE,KAAKuJ,KAAKe,OAAU,cAG5BxG,EAAA,QAAAE,IAAA,2CAAMC,MAAM,oCAAoCyF,MAAO,CAAEC,IAAK,WAC5D7F,EAAA,OAAAE,IAAA,2CACEkG,MAAM,6BACN3C,MAAM,KACN0C,OAAO,KACPE,QAAQ,YACRC,KAAK,OACLG,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBtG,MAAM,uCAENH,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,uCACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,eACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,0JACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,eAEVlD,EAAA,QAAAE,IAAA,4CACEF,EAAA,KAAAE,IAAA,4CAAIhE,KAAKuJ,KAAKiB,QAAW,cAI9BxK,KAAKyK,aACJ3G,EAAA,OAAAE,IAAA,4CACEF,EAAA,aAAAE,IAAA,2CACEoC,eAAgB,KACdsE,EAAoB1K,KAAKuJ,MACzBvJ,KAAK2K,kBAAkBC,KAAK5K,KAAKuJ,KAAK,EAExCsB,KAAK,KACLvG,KAAMgF,EACNxB,WAAY,CAAEgD,UAAW,mBACzBC,WAAW,eAIhB/K,KAAKgL,aACJlH,EAAA,OAAAE,IAAA,4CACEF,EAAA,aAAAE,IAAA,2CACEoC,eAAgB,KAEdpG,KAAKiL,iBAAiBL,KAAK5K,KAAKuJ,KAAK,EAEvCsB,KAAK,KACLvG,KAAM,OACNwD,WAAY,CAAEgD,UAAW,mBACzBC,WAAW,e,aCzIzB,MAAMG,EAAoB,mOAC1B,MAAAC,EAAeD,E,MCUFE,EAAc,MAL3B,WAAAtL,CAAAC,G,qDAQWC,KAAAE,QAA+B,CACtCmL,iBAAkB,CAChBC,KAAM,IAERnG,aAAc,MACdoG,qBAAsB,CAAED,KAAM,IAC9BE,YAAa,CAAEF,KAAM,IACrBG,oBAAqB,CAAEH,KAAM,KAGtBtL,KAAA0L,UAAqB,K,CAM9B,iBAAApK,G,cACEtB,KAAK2L,YAAc,CACjBN,kBAAkB1I,EAAAsC,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAvC,SAAA,SAAAA,EAAE0I,iBAAiB,GACpElG,aAAc,GACdoG,sBAAsBvG,EAAAxD,EAAcoK,sBAAkB,MAAA5G,SAAA,EAAAA,GAAIO,EAAAN,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAK,SAAA,SAAAA,EAAEgG,qBAAqB,GAChHC,aAAalG,EAAAL,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAI,SAAA,SAAAA,EAAEuG,cAAc,GAC5DJ,qBAAqBhG,EAAAR,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAO,SAAA,SAAAA,EAAEqG,0BAA0B,IAElF9L,KAAKE,QAAOmC,OAAAC,OAAAD,OAAAC,OAAA,GAAQtC,KAAK2L,aAAW,CAAExG,aAAc,O,CAG9C,YAAA4G,CAAaC,GACnBhM,KAAKE,QAAOmC,OAAAC,OAAAD,OAAAC,OAAA,GAAQtC,KAAKE,SAAY8L,E,CAE/B,eAAAC,CAAgB/K,GACtBA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKkM,aAAatB,KAAIvI,OAAAC,OAAAD,OAAAC,OAAA,GACjBtC,KAAKE,SAAO,CACfiF,aAAcnF,KAAKE,QAAQiF,eAAiB,MAAQnF,KAAK2L,YAAYxG,aAAe,CAAC,CAAEpD,GAAIS,OAAOxC,KAAKE,QAAQiF,kB,CAG3G,YAAAgH,CAAajL,GACnBA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKE,QAAOmC,OAAAC,OAAAD,OAAAC,OAAA,GAAQtC,KAAK2L,aAAW,CAAExG,aAAc,QACpDnF,KAAKkM,aAAatB,KAAIvI,OAAAC,OAAAD,OAAAC,OAAA,GACjBtC,KAAKE,SAAO,CACfiF,aAAcnF,KAAKE,QAAQiF,eAAiB,MAAQnF,KAAK2L,YAAYxG,aAAe,CAAC,CAAEpD,GAAIS,OAAOxC,KAAKE,QAAQiF,kB,CAGnH,MAAAtB,G,gCACE,OACEC,EAAA,OAAAE,IAAA,2CAAKC,MAAM,oCACTH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,qDACTH,EAAA,OAAAE,IAAA,2CAAKC,MAAO,4BAA6ByF,MAAO,CAAEC,IAAK,WACrD7F,EAAA,OAAAE,IAAA,2CAAKkG,MAAM,6BAA6BC,QAAQ,cAAcF,OAAQ,GAAI1C,MAAO,IAC/EzD,EAAA,QAAAE,IAAA,2CACEoG,KAAK,eACLpD,EAAE,kOAGNlD,EAAA,MAAAE,IAAA,2CAAIC,MAAM,uBAAuB8B,EAAQC,QAAQoG,cAEnDtI,EAAA,aAAAE,IAAA,2CACEkC,QAAQ,OACRnE,GAAG,cAAa,cACJ,WAAU,cACV,0BAAyB,gBACtB/B,KAAK0L,UAAY,OAAS,QAAO,gBAClC,yBACdzH,MAAM,oBACNkC,UAAWnG,KAAK0L,UAAY,aAAe,WAC3CtF,eAAgB,KACdpG,KAAK0L,WAAa1L,KAAK0L,SAAS,EAElChC,MAAO,CAAE,cAAe,aAG5B5F,EAAA,OAAAE,IAAA,2CAAKC,MAAM,mBAAmBlC,GAAG,0BAC/B+B,EAAA,OAAAE,IAAA,2CAAKC,MAAM,qBAAqByF,MAAO,CAAEC,IAAK,WAC5C7F,EAAA,YAAAE,IAAA,2CAAUC,MAAM,QACdH,EAAA,KAAAE,IAAA,2CAAGC,MAAM,gBAAgByF,MAAO,CAAE2C,cAAe,YAC9CtG,EAAQC,QAAQW,YAEnB7C,EAAA,aAAAE,IAAA,2CACEsI,OAAO,SACPjH,eAAeL,GAAArC,EAAA3C,KAAKE,WAAO,MAAAyC,SAAA,SAAAA,EAAE0I,oBAAgB,MAAArG,SAAA,SAAAA,EAAEsG,KAC/CjH,eAAgB,MAChBD,gBAAiB,MACjB7D,MAAMgF,EAAAN,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAK,SAAA,SAAAA,EAAE8F,iBAAiBxI,KAAI2B,IAAC,CAC3DF,KAAME,EAAEsF,YACRvF,MAAOC,EAAE8G,SAEXvG,eAAgB7D,IACdlB,KAAK+L,aAAa,CAAEV,iBAAkB,CAAEC,KAAMpK,EAAEiC,SAAW,OAIhEmC,EAAAL,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAI,SAAA,SAAAA,EAAEH,aAAaC,QAAS,GACtDtB,EAAA,YAAAE,IAAA,4CACEF,EAAA,KAAAE,IAAA,2CAAGC,MAAM,gBAAgByF,MAAO,CAAE2C,cAAe,YAC9CtG,EAAQC,QAAQuG,kBAEnBzI,EAAA,aAAAE,IAAA,2CACEsI,OAAO,eACPjH,eAAeI,EAAAzF,KAAKE,WAAO,MAAAuF,SAAA,SAAAA,EAAEN,aAC7Bd,eAAgB,MAChBD,gBAAiB,MACjB7D,KAAM,CACJ,CAAE+D,KAAMyB,EAAQC,QAAQwG,oBAAqBjI,MAAO,WACjDiB,EAAAP,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAM,SAAA,SAAAA,EAAEL,aACjCtC,KAAI2B,IAAC,CACJF,KAAME,EAAExC,KACRuC,MAAOC,EAAEzC,GAAG0C,eAEbC,MAAK,CAACC,EAAGC,IAAMD,EAAEL,KAAKO,cAAcC,cAAcF,EAAEN,KAAKO,kBAE9DE,eAAgB7D,IAMdlB,KAAK+L,aAAa,CAAE5G,aAAcjE,EAAEiC,QAAS,KAuBrDW,EAAA,YAAAE,IAAA,4CACEF,EAAA,KAAAE,IAAA,2CAAGC,MAAM,gBAAgByF,MAAO,CAAE2C,cAAe,YAAW,uBAG5DvI,EAAA,aAAAE,IAAA,2CACEsI,OAAO,cACPlI,gBAAiB,MACjBC,eAAgB,MAChBgB,eAAeS,GAAAJ,EAAA1F,KAAKE,WAAO,MAAAwF,SAAA,SAAAA,EAAE8F,eAAW,MAAA1F,SAAA,SAAAA,EAAEwF,KAC1C/K,MAAMiG,GAAAH,EAAApB,EAAmBC,eAAW,MAAAmB,SAAA,SAAAA,EAAEwF,iBAAa,MAAArF,SAAA,SAAAA,EAAE3D,KAAI2B,IAAC,CACxDF,KAAME,EAAEsF,YACRvF,MAAOC,EAAE8G,SAEXvG,eAAgB7D,IACdA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAK+L,aAAa,CAAEP,YAAa,CAAEF,KAAMpK,EAAEiC,SAAW,KAI5DW,EAAA,YAAAE,IAAA,2CAAUC,MAAM,QACdH,EAAA,KAAAE,IAAA,2CAAGC,MAAM,gBAAgByF,MAAO,CAAE2C,cAAe,YAC9CtG,EAAQC,QAAQ,+BAEnBlC,EAAA,aAAAE,IAAA,2CACEsI,OAAO,sBACPjH,eAAe0D,GAAAhC,EAAA/G,KAAKE,WAAO,MAAA6G,SAAA,SAAAA,EAAE0E,uBAAmB,MAAA1C,SAAA,SAAAA,EAAEuC,KAClDjH,eAAgB,MAChBD,gBAAiB,MACjBW,eAAgB7D,IACdlB,KAAK+L,aAAa,CAAEN,oBAAqB,CAAEH,KAAMpK,EAAEiC,SAAW,EAEhE5C,MAAMkM,GAAAC,EAAAzH,EAAmBC,eAAW,MAAAwH,SAAA,SAAAA,EAAEZ,6BAAyB,MAAAW,SAAA,SAAAA,EAAE5J,KAAI2B,IAAC,CACpEF,KAAME,EAAEsF,YACRvF,MAAOC,EAAE8G,YAIfxH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,gDAAgDyF,MAAO,CAAEC,IAAK,SACvE7F,EAAA,aAAAE,IAAA,2CACE2I,SAAS,SAAQ,cACL,QACZrI,KAAMyB,EAAQC,QAAQ4G,UACtB/B,KAAK,KACLnD,UAAU,YACVtB,eAAgBlF,GAAKlB,KAAKmM,aAAajL,KAEzC4C,EAAA,aAAAE,IAAA,2CACE2I,SAAS,SAAQ,cACL,QACZnM,UAAWR,KAAKQ,UAChB8D,KAAMyB,EAAQC,QAAQ6G,UACtBhC,KAAK,KACLzE,eAAgBlF,GAAKlB,KAAKiM,gBAAgB/K,Q,aClN1D,MAAM4L,EAAmB,qbACzB,MAAAC,EAAeD,E,MCQFE,EAAa,M,8EAMxB,4BAAAC,CAA6B/L,GAC3BA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAKkN,OAAOC,Q,CAGd,MAAAtJ,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CAEHF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,0BAA0ByF,MAAO,CAAEC,IAAK,SACjD7F,EAAA,iBAAAE,IAAA,2CAAeC,MAAM,sBAAsBmJ,YAAY,cAAclH,QAAQ,OAAO3B,MAAO8I,EAAaC,YAAaC,aAAcrM,GAAKsM,EAAkBtM,EAAEiC,SAC1JW,EAAA,YAAAE,IAAA,2CAAUhC,KAAK,SAASwF,KAAK,WAGjC1D,EAAA,OAAAE,IAAA,2CAAKC,MAAM,iBAAiByF,MAAO,CAAEC,IAAK,SACxC7F,EAAA,aAAAE,IAAA,2CACE6G,KAAK,KACLnD,UAAU,UACVpD,KAAMyB,EAAQC,QAAQyH,WACtBrH,eAAgBlF,IACdA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAK0N,kBAAkB9C,KAAK,CAAE5I,KAAM,UAAW,EAEjD2F,SAAU,CAAEsC,OAAQ,QACpB0D,aAAa,QACbxH,UAAU,OACVyH,WAAY,CAAE,cAAe,UAE/B9J,EAAA,aAAAE,IAAA,2CACE6G,KAAK,KACLnD,UAAU,UACVpD,KAAMyB,EAAQC,QAAQ6H,aACtBlG,SAAU,CAAEsC,OAAQ,QACpB7D,eAAgBlF,IACdA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAK0N,kBAAkB9C,KAAK,CAAE5I,KAAM,WAAY,IAGpD8B,EAAA,aAAAE,IAAA,2CACEC,MAAM,mBACNmC,eAAgBlF,IACdA,EAAEC,2BACFD,EAAEE,kBACFpB,KAAK0N,kBAAkB9C,KAAK,CAAE5I,KAAM,WAAY,EAElD2F,SAAU,CAAEsC,OAAQ,QACpBY,KAAK,KACLiD,eAAgBT,EAAaU,cAAc3I,OAAS,GACpDd,KAAM,UACN0J,IAAKC,GAAOjO,KAAKkN,OAASe,K,aCnEtC,MAAMC,EAAkB,w0BACxB,MAAAC,EAAeD,ECDf,MAAME,EAAW,g6CACjB,MAAAC,EAAeD,E,MCqBFE,EAAY,MALzB,WAAAxO,CAAAC,G,wNAM2BC,KAAA4C,MAAgB,E,CAOzC,iBAAAtB,GACE,GAAItB,KAAK4C,OAAS5C,KAAK4C,MAAMwC,OAAS,EAAG,CACvCmJ,EAAc,OAAQ,M,EAQlB,UAAAC,CAAWxK,GACjB,IAAIyK,EAAepB,EAAaqB,QAAQC,UAExC,GAAItB,EAAaqB,QAAQE,QAAU5K,EAAK,CACtCyK,EAAepB,EAAaqB,QAAQC,YAAc,MAAQ,OAAS,K,KAC9D,CACLF,EAAe,K,CAEjBF,EAAcvK,EAAKyK,GACnBzO,KAAK6O,eAAejE,KAAK,CAAEgE,MAAO5K,EAAK2K,UAAWF,G,CAIpD,0BAAAK,CAA2B5N,GACzBA,EAAEC,2BACFD,EAAEE,kBACF2N,G,CAIF,iBAAAC,CAAkBC,GAChB,GAAIA,IAAQ,MAARA,SAAQ,SAARA,EAAU7J,OAAQ,CACpB2J,G,EAOI,eAAAG,CAAgB3F,GACtBmB,EAAoBnB,GACpBvJ,KAAKmP,qBAAqBvE,KAAK,MAC/B5K,KAAKoP,mB,CAGC,iBAAAA,GACNpP,KAAKqP,gBAAgBzE,KAAKyC,EAAaU,c,CAMzC,eAAYuB,GACV,OAAOC,G,CAMD,eAAAC,GACN,GAAIxP,KAAKsP,YAAa,CACpBP,G,KACK,CACLU,EAAeC,KACf1P,KAAKmP,qBAAqBvE,KAAK,K,CAEjC5K,KAAKoP,mB,CAYC,WAAA3E,CAAYlB,GAClB,OAAO5I,EAAO4I,EAAKtC,KAAM,cAAc0I,eAAehP,IAAU,O,CAW1D,WAAAqK,CAAYzB,GAClB,MAAMqG,EAAcjP,IAASkP,OAAOlP,EAAO4I,EAAKtC,KAAM,cAAe,QACrE,OAAO2I,GAAerG,EAAKM,OAAOyB,OAAS,I,CAG7C,MAAAzH,G,QACE,MAAMiM,IAAuB9K,GAAArC,EAAAsC,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAvC,SAAA,SAAAA,EAAEwC,gBAAY,MAAAH,SAAA,SAAAA,EAAEI,QAAS,EACrF,MAAMxC,EAAQmN,IAEd,MAAMC,EAAcC,IACpB,OACEnM,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,aACVH,EAAA,WAAAE,IAAA,2CAASC,MAAM,oCACbH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,gBACTH,EAAA,mBAAAE,IAAA,+CAEDgM,IAAW,MAAXA,SAAW,SAAXA,EAAa5K,UAAW,GAAKtB,EAAA,KAAAE,IAAA,2CAAGC,MAAM,WAAW8B,EAAQC,QAAQkK,kBACjEF,EAAYnN,KAAI0G,IACf,MAAMkB,EAAczK,KAAKyK,YAAYlB,GACrC,MAAMyB,EAAchL,KAAKgL,YAAYzB,GACrC,OAAOzF,EAAA,iBAAeyF,KAAMA,EAAMyB,YAAaA,EAAahH,IAAKuF,EAAKxH,GAAI0I,YAAaA,GAA6B,IAEtH3G,EAAA,6BAAAE,IAAA,8CAEFF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,0CACTH,EAAA,mBAAAE,IAAA,6CACAF,EAAA,OAAAE,IAAA,2CAAKC,MAAO,4BACVH,EAAA,SAAAE,IAAA,2CAAOC,MAAM,QAAO,cAAa,kBAC/BH,EAAA,SAAAE,IAAA,2CAAOC,MAAM,gBACXH,EAAA,MAAAE,IAAA,4CACEF,EAAA,MAAAE,IAAA,2CAAIC,MAAO,YACTH,EAAA,eAAAE,IAAA,2CACEmM,cAAe9C,EAAaU,cAAc3I,OAAS,GAAKiI,EAAaU,cAAc3I,OAASsK,IAAoBtK,OAChHgL,QAASpQ,KAAKsP,YACde,cAAe,IAAMrQ,KAAKwP,qBAG9B1L,EAAA,MAAAE,IAAA,2CAAIC,MAAM,iBAAiB8B,EAAQC,QAAQW,YAC3C7C,EAAA,MAAAE,IAAA,2CAAIC,MAAM,iBACPjE,KAAK4C,MAAMwC,OAAS,GAAKpF,KAAK4C,MAAMwC,OAAS,IAC7CW,EAAQC,QAAQa,UAEnB/C,EAAA,MAAAE,IAAA,2CAAIC,MAAO,yBAA0B8D,QAAS,IAAM/H,KAAKwO,WAAW,WAClE1K,EAAA,OAAAE,IAAA,2CAAKC,MAAO,4BAA6ByF,MAAO,CAAEC,IAAK,WACrD7F,EAAA,QAAAE,IAAA,4CAAO+B,EAAQC,QAAQsK,YACvBxM,EAAA,OAAAE,IAAA,2CACEkG,MAAM,6BACN3C,MAAM,KACN0C,OAAO,KACPE,QAAQ,YACRC,KAAK,OACLG,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBtG,MAAM,+BAENH,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,mBACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,aACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,iBACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,eAIdlD,EAAA,MAAAE,IAAA,2CAAIC,MAAM,2BAA2B8B,EAAQC,QAAQuK,UACrDzM,EAAA,MAAAE,IAAA,2CAAIC,MAAM,aAAa8B,EAAQC,QAAQwK,MAAK,KAC5C1M,EAAA,MAAAE,IAAA,2CAAIC,MAAM,aAAa8B,EAAQC,QAAQyK,MAAK,KAC5C3M,EAAA,MAAAE,IAAA,2CAAIC,MAAM,uBAAuB8B,EAAQC,QAAQ0K,MAAK,KACrDZ,GACChM,EAAA,MAAAE,IAAA,2CAAI0F,MAAO,CAAEoB,UAAW,SAAW7G,MAAO,yBAA0B8D,QAAS,IAAM/H,KAAKwO,WAAW,gBACjG1K,EAAA,OAAAE,IAAA,2CAAKC,MAAO,4BAA6ByF,MAAO,CAAEC,IAAK,WACrD7F,EAAA,QAAAE,IAAA,4CAAO+B,EAAQC,QAAQY,iBACvB9C,EAAA,OAAAE,IAAA,2CACEkG,MAAM,6BACN3C,MAAM,KACN0C,OAAO,KACPE,QAAQ,YACRC,KAAK,OACLG,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBtG,MAAM,+BAENH,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,mBACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,aACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,iBACRlD,EAAA,QAAAE,IAAA,2CAAMgD,EAAE,eAKhBlD,EAAA,MAAAE,IAAA,+CAIJF,EAAA,SAAAE,IAAA,4CACGpB,EAAMwC,SAAW,GAChBtB,EAAA,MAAAE,IAAA,2CAAIC,MAAM,gBACRH,EAAA,MAAAE,IAAA,2CAAI2M,QAAS,EAAG1M,MAAM,aACpBH,EAAA,OAAAE,IAAA,2CAAK0F,MAAO,CAAEO,OAAQ,SAAWhG,MAAM,oDACrCH,EAAA,QAAAE,IAAA,gDAAQ+B,EAAQC,QAAQkK,qBAK/BtN,IAAK,MAALA,SAAK,SAALA,EAAOC,KAAI0G,I,MACV,MAAMqH,EAAavD,EAAaU,cAAc8C,MAAK/N,GAAKA,EAAEf,KAAOwH,EAAKxH,KACtE,MAAM0I,EAAczK,KAAKyK,YAAYlB,GACrC,OACEzF,EAAA,kBACayF,EAAKtC,KAAI,cACP,cAAa,gBACXsC,EAAKC,YAAc,OAAS,QAC3CE,MAAOe,GAAe,CAAEqG,OAAQ,WAChC/I,QAAS,KACP,IAAK0C,EAAa,CAChB,M,CAEFzK,KAAKkP,gBAAgB3F,EAAK,EAE5BtF,MAAO,CAAE8M,SAAYH,EAAY,8BAA+B,MAChE5M,IAAKuF,EAAKxH,IAEV+B,EAAA,MAAIG,MAAM,aAAawG,GAAe3G,EAAA,eAAasM,QAASQ,KAC5D9M,EAAA,MAAIG,MAAM,0BAA0BsF,EAAKK,gBACzC9F,EAAA,MAAIG,MAAM,0BACRH,EAAA,QAAMG,MAAO,CAAE,mBAAoBsF,EAAKyH,eAAiBzH,EAAKnC,KAAKpF,OAErE8B,EAAA,MAAIG,MAAM,oCAAoCsF,EAAKM,OAAOC,aAC1DhG,EAAA,MAAIG,MAAM,oCAAoCsF,EAAKS,MACnDlG,EAAA,MAAIG,MAAM,sBAAsBsF,EAAKc,OACrCvG,EAAA,MAAIG,MAAM,sBAAsBsF,EAAKe,OACrCxG,EAAA,MAAIG,MAAM,sBAAsBsF,EAAKiB,QACpCsF,GACChM,EAAA,MAAIG,MAAM,0BAA0ByF,MAAO,CAAEoB,UAAW,WACrDnI,EAAA4G,EAAKC,eAAW,MAAA7G,SAAA,EAAAA,EAAIoD,EAAQC,QAAQiL,gBAGzCnN,EAAA,UACG9D,KAAKgL,YAAYzB,IAChBzF,EAAA,aACEQ,KAAK,OACLuG,KAAK,KACLzE,eAAgB,KACdpG,KAAKiL,iBAAiBL,KAAKrB,EAAK,KAKrC,OAMfzF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WACTH,EAAA,6BAAAE,IAAA,+C,yECrRZ,MAAMkN,EAA4B,yZAClC,MAAAC,EAAeD,E,MCOFE,EAAsB,M,yBACjC,MAAAvN,G,QACE,MAAMwN,YAAEA,EAAWC,SAAEA,EAAQC,WAAEA,EAAUC,kBAAEA,GAAsBnE,EAAaoE,WAC9E,MAAMC,GAAa1M,GAAArC,EAAA0K,EAAazK,SAAK,MAAAD,SAAA,SAAAA,EAAEyC,UAAM,MAAAJ,SAAA,EAAAA,EAAI,EACjD,MAAM2M,EAAQD,IAAe,EAAI,GAAKL,EAAc,GAAKC,EAAW,EACpE,MAAMM,EAAMC,KAAKC,IAAIT,EAAcC,EAAUI,GAC7C,MAAMK,EAAY1E,EAAaoE,WAAWO,UAAU,GAAKN,EAAarE,EAAaoE,WAAWO,UAAUvI,MAAM,EAAG,GAAK4D,EAAaoE,WAAWO,UAC9I,OACElO,EAACC,EAAI,CAAAC,IAAA,4CACFiO,KAAoBnO,EAAA,aAAAE,IAAA,2CAAW6G,KAAK,KAAK5G,MAAM,kBAAkBK,KAAK,YAAY8B,eAAgB,IAAM8L,EAAcV,EAAoB,KAC3I1N,EAAA,iBAAAE,IAAA,2CACEmO,QAAS,CACPC,KAAMT,EACNU,GAAIT,GAEN3N,MAAM,mBACNqO,MAAOZ,EACPa,MAAOhB,EACPD,SAAUA,EACVD,YAAaA,EACbU,UAAWA,EACXS,aAActR,GAAKuR,EAAkBvR,EAAEiC,OAAOkO,aAC9CqB,iBAAkBxR,GAAKyR,EAAezR,EAAEiC,OAAOmO,UAC/CsB,iBAAkB,KAClBC,YAAY,U","ignoreList":[]}