import{a as e}from"./p-BdhGE_xS.js";import{e as t,a as n,b as r,d as o,h as a}from"./p-NERN52Pj.js";import{c as i}from"./p-vROPuQAY.js";import{c as s}from"./p-CT3GgrvE.js";const l={checkout_guest:null,guest:null,tax_statement:null,roomTypes:[],enableBooking:false,resetBooking:false,ratePlanSelections:{},isInFreeCancelationZone:false,bookingAvailabilityParams:{from_date:null,to_date:null,adult_nbr:0,child_nbr:0,infant_nbr:0},booking:null,fictus_booking_nbr:null,event_type:{type:"PLUS_BOOKING"}};let{state:c,onChange:u,reset:d}=i(l);function _(){d()}function b(e,t){var n;if(!e){return null}if(!t||c.resetBooking){return e[0]}return(n=e===null||e===void 0?void 0:e.find((e=>e.adult_nbr===t.adult_nbr&&e.child_nbr===t.child_nbr)))!==null&&n!==void 0?n:null}u("roomTypes",(e=>{const t=c.ratePlanSelections;const n={};e.forEach((e=>{if(!e.is_active)return;n[e.id]=n[e.id]||{};e.rateplans.forEach((r=>{var o,a,i,s;if(!r.is_active||!((o=r===null||r===void 0?void 0:r.variations)===null||o===void 0?void 0:o.length))return;const l=(a=t[e.id])===null||a===void 0?void 0:a[r.id];n[e.id][r.id]=l&&Object.keys(l).length>0?Object.assign(Object.assign({},l),{ratePlan:r,selected_variation:(i=b(r.variations,l.selected_variation))!==null&&i!==void 0?i:null,visibleInventory:e.inventory,reserved:e.inventory===0?0:c.resetBooking?0:l.reserved,checkoutVariations:e.inventory===0?[]:l.checkoutVariations,checkoutBedSelection:e.inventory===0?[]:l.checkoutBedSelection,checkoutSmokingSelection:e.inventory===0?[]:l.checkoutSmokingSelection,guestName:e.inventory===0?[]:l.guestName,roomtype:Object.assign({},l.roomtype)}):{reserved:0,rp_amount:0,view_mode:"001",guest:null,visibleInventory:e.inventory,selected_variation:(s=r===null||r===void 0?void 0:r.variations[0])!==null&&s!==void 0?s:null,ratePlan:r,guestName:[],is_bed_configuration_enabled:e.is_bed_configuration_enabled,roomtype:Object.assign(Object.assign({},e),{physicalrooms:null,rateplans:null,availabilities:null}),checkoutVariations:[],checkoutBedSelection:[],checkoutSmokingSelection:[]}}))}));c.ratePlanSelections=n;c.resetBooking=false}));function f(e){const t=c.ratePlanSelections[e];const n=e=>Object.entries(t).reduce(((t,[n,r])=>Number(n)!==e?t+r.reserved:t),0);const r=Object.fromEntries(Object.entries(t).map((([t,r])=>{const o=n(Number(t));const a=c.roomTypes.find((t=>t.id===e));const i=a?a.inventory-o:0;return[t,Object.assign(Object.assign({},r),{visibleInventory:i>0?i:0})]})));if(JSON.stringify(t)!==JSON.stringify(r)){c.ratePlanSelections=Object.assign(Object.assign({},c.ratePlanSelections),{[e]:r})}}function h({ratePlanId:e,roomTypeId:t,params:n}){c.ratePlanSelections=Object.assign(Object.assign({},c.ratePlanSelections),{[Number(t)]:Object.assign(Object.assign({},c.ratePlanSelections[Number(t)]),{[e]:Object.assign(Object.assign({},c.ratePlanSelections[t][e]),n)})})}function w({ratePlanId:e,roomTypeId:t,rooms:n,guest:r}){var o;if(!c.ratePlanSelections[t]){c.ratePlanSelections[t]={}}const a=(o=c.roomTypes)===null||o===void 0?void 0:o.find((e=>e.id===t));if(!a){throw new Error("Invalid room type id")}const i=a.rateplans.find((t=>t.id===e));if(!i){throw new Error("Invalid rate plan")}let s=Array.from({length:n},(()=>({first_name:"",last_name:"",unit:null,bed_preference:null,infant_nbr:null})));if(r){s=r}if(!c.ratePlanSelections[t][e]){c.ratePlanSelections[t][e]={guestName:null,reserved:0,view_mode:"001",rp_amount:0,guest:s,is_bed_configuration_enabled:a.is_bed_configuration_enabled,visibleInventory:0,selected_variation:null,ratePlan:i,checkoutVariations:[],checkoutBedSelection:[],checkoutSmokingSelection:[],roomtype:{id:a.id,name:a.name,physicalrooms:null,rateplans:null,availabilities:null,inventory:a.inventory,rate:a.rate,bedding_setup:a.bedding_setup,smoking_option:a.smoking_option,is_bed_configuration_enabled:a.is_bed_configuration_enabled}}}c.ratePlanSelections=Object.assign(Object.assign({},c.ratePlanSelections),{[Number(t)]:Object.assign(Object.assign({},c.ratePlanSelections[Number(t)]),{[e]:Object.assign(Object.assign({},c.ratePlanSelections[t][e]),{reserved:n,checkoutVariations:[],guest:s})})});f(t)}function y(e,t){if(!c.ratePlanSelections||!c.ratePlanSelections[e]){return{reserved:0,guest:null,visibleInventory:0,selected_variation:null,ratePlan:null,guestName:[],is_bed_configuration_enabled:false,checkoutVariations:[],checkoutBedSelection:[],checkoutSmokingSelection:[],rp_amount:0,view_mode:"001",roomtype:null}}return c.ratePlanSelections[e][t]}function v(e,t){c[e]=t}function E(){return Object.values(c.ratePlanSelections).reduce(((e,t)=>e+Object.values(t).reduce(((e,t)=>{if(t.reserved===0){return e}return e+t.reserved}),0)),0)}var m=undefined&&undefined.__rest||function(e,t){var n={};for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0)n[r]=e[r];if(e!=null&&typeof Object.getOwnPropertySymbols==="function")for(var o=0,r=Object.getOwnPropertySymbols(e);o<r.length;o++){if(t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o]))n[r[o]]=e[r[o]]}return n};class p{async handleExposedRoomInOut(t){const{data:n}=await e.post(`/Handle_Exposed_Room_InOut`,t);if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n}async sendBookingConfirmationEmail(t,n){const{data:r}=await e.post(`/Send_Booking_Confirmation_Email`,{booking_nbr:t,language:n});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}async getCalendarData(a,i,s){try{const{data:l}=await e.post(`/Get_Exposed_Calendar`,{propertyid:a,from_date:i,to_date:s,extras:t});if(l.ExceptionMsg!==""){throw new Error(l.ExceptionMsg)}const c=l.My_Result.months;const u=[];const d=await n(c);const _=c.map((e=>{u.push({daysCount:e.days.length,monthName:e.description});return e.days.map((t=>({day:o(t.description,e.description),currentDate:r(t.description,e.description),dayDisplayName:t.description,rate:t.room_types,unassigned_units_nbr:t.unassigned_units_nbr,occupancy:t.occupancy})))})).flat();return Promise.resolve({ExceptionCode:null,ExceptionMsg:"",My_Params_Get_Rooming_Data:{AC_ID:a,FROM:l.My_Params_Get_Exposed_Calendar.from_date,TO:l.My_Params_Get_Exposed_Calendar.to_date},days:_,months:u,myBookings:d,defaultMonths:c})}catch(e){console.error(e)}}async handleExposedRoomGuests(t){const{data:n}=await e.post("/Handle_Exposed_Room_Guests",t);if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n}async fetchGuest(t){try{const{data:n}=await e.post(`/Get_Exposed_Guest`,{email:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){console.log(e);throw new Error(e)}}async changeExposedBookingStatus(t){try{const{data:n}=await e.post(`/Change_Exposed_Booking_Status`,t);if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){throw new Error(e)}}async fetchPMSLogs(t){try{const{data:n}=await e.post(`/Get_Exposed_PMS_Logs`,{booking_nbr:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){console.log(e);throw new Error(e)}}async getExposedBookingEvents(t){try{const{data:n}=await e.post(`/Get_Exposed_Booking_Events`,{booking_nbr:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){console.log(e);throw new Error(e)}}async editExposedGuest(t,n){try{const{data:r}=await e.post(`/Edit_Exposed_Guest`,Object.assign(Object.assign({},t),{book_nbr:n}));if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r.My_Result}catch(e){console.log(e);throw new Error(e)}}async getBookingAvailability(t){try{const{adultChildCount:n,currency:r}=t,o=m(t,["adultChildCount","currency"]);const{data:a}=await e.post(`/Check_Availability`,Object.assign(Object.assign({},o),{adult_nbr:n.adult,child_nbr:n.child,currency_ref:r.code,skip_getting_assignable_units:!s.is_frontdesk_enabled,is_backend:true}));if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}const i=this.modifyRateplans(this.sortRoomTypes(a["My_Result"],{adult_nbr:Number(n.adult),child_nbr:Number(n.child)}));c.roomTypes=[...i];c.tax_statement={message:a.My_Result.tax_statement};return i}catch(e){console.error(e);throw new Error(e)}}sortRoomTypes(e,t){return e.sort(((e,n)=>{var r,o,a,i;if(e.is_available_to_book&&!n.is_available_to_book)return-1;if(!e.is_available_to_book&&n.is_available_to_book)return 1;const s=(r=e.rateplans)===null||r===void 0?void 0:r.some((e=>{var t;return(t=e.variations)===null||t===void 0?void 0:t.some((e=>e.discounted_amount===0||e.discounted_amount===null))}));const l=(o=n.rateplans)===null||o===void 0?void 0:o.some((e=>{var t;return(t=e.variations)===null||t===void 0?void 0:t.some((e=>e.discounted_amount===0||e.discounted_amount===null))}));if(s&&!l)return 1;if(!s&&l)return-1;const c=(a=e.rateplans)===null||a===void 0?void 0:a.some((e=>{var n;return(n=e.variations)===null||n===void 0?void 0:n.some((e=>e.adult_nbr===t.adult_nbr&&e.child_nbr===t.child_nbr))}));const u=(i=n.rateplans)===null||i===void 0?void 0:i.some((e=>{var n;return(n=e.variations)===null||n===void 0?void 0:n.some((e=>e.adult_nbr===t.adult_nbr&&e.child_nbr===t.child_nbr))}));if(c&&!u)return-1;if(!c&&u)return 1;const d=Math.max(...e.rateplans.flatMap((e=>{var t;return(t=e.variations)===null||t===void 0?void 0:t.map((e=>{var t;return(t=e.discounted_amount)!==null&&t!==void 0?t:0}))})));const _=Math.max(...n.rateplans.flatMap((e=>{var t;return(t=e.variations)===null||t===void 0?void 0:t.map((e=>{var t;return(t=e.discounted_amount)!==null&&t!==void 0?t:0}))})));if(d<_)return-1;if(d>_)return 1;return 0}))}modifyRateplans(e){return e===null||e===void 0?void 0:e.map((e=>{var t;return Object.assign(Object.assign({},e),{rateplans:(t=e.rateplans)===null||t===void 0?void 0:t.map((e=>{var t;return Object.assign(Object.assign({},e),{variations:this.sortVariations((t=e===null||e===void 0?void 0:e.variations)!==null&&t!==void 0?t:[])})}))})}))}sortVariations(e){return e.sort(((e,t)=>{if(e.adult_nbr!==t.adult_nbr){return t.adult_nbr-e.adult_nbr}return t.child_nbr-e.child_nbr}))}async getCountries(t){try{const{data:n}=await e.post(`/Get_Exposed_Countries`,{language:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){console.error(e);throw new Error(e)}}async getSetupEntriesByTableName(t){const{data:n}=await e.post(`/Get_Setup_Entries_By_TBL_NAME`,{TBL_NAME:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}const r=n.My_Result;return r}async fetchSetupEntries(){try{const{data:t}=await e.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`,{TBL_NAMES:["_ARRIVAL_TIME","_RATE_PRICING_MODE","_BED_PREFERENCE_TYPE"]});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}const n=t.My_Result;return{arrivalTime:n.filter((e=>e.TBL_NAME==="_ARRIVAL_TIME")),ratePricingMode:n.filter((e=>e.TBL_NAME==="_RATE_PRICING_MODE")),bedPreferenceType:n.filter((e=>e.TBL_NAME==="_BED_PREFERENCE_TYPE"))}}catch(e){console.error(e);throw new Error(e)}}async doBookingExtraService({booking_nbr:t,service:n,is_remove:r}){const{data:o}=await e.post(`/Do_Booking_Extra_Service`,Object.assign(Object.assign({},n),{booking_nbr:t,is_remove:r}));if(o.ExceptionMsg!==""){throw new Error(o.ExceptionMsg)}return o.My_Result}async getBlockedInfo(){try{const{data:t}=await e.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`,{TBL_NAMES:["_CALENDAR_BLOCKED_TILL"]});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}return t.My_Result}catch(e){console.error(e);throw new Error(e)}}async getUserDefaultCountry(){try{const{data:t}=await e.post(`/Get_Country_By_IP`,{IP:""});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}return t["My_Result"]}catch(e){console.error(e);throw new Error(e)}}async blockUnit(t){try{const{data:n}=await e.post(`/Block_Exposed_Unit`,t);if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}console.log(n);return n["My_Params_Block_Exposed_Unit"]}catch(e){console.error(e);throw new Error(e)}}async getUserInfo(t){try{const{data:n}=await e.post(`/GET_EXPOSED_GUEST`,{email:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n.My_Result}catch(e){console.error(e);throw new Error(e)}}async getExposedBooking(n,r,o=true){try{const{data:a}=await e.post(`/Get_Exposed_Booking`,{booking_nbr:n,language:r,extras:o?t:null});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}return a.My_Result}catch(e){console.error(e)}}generateDays(e,t,n){const r=new Date(e);const o=new Date(t);const a=[];while(r<o){a.push({date:r.toISOString().split("T")[0],amount:n,cost:null});r.setDate(r.getDate()+1)}return a}calculateTotalRate(e,t,n,r){if(n&&r===2){return+e}return+e/+t}async fetchExposedGuest(t,n){try{const{data:r}=await e.post(`/Fetch_Exposed_Guests`,{email:t,property_id:n});if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}return r["My_Result"]}catch(e){console.error(e);throw new Error(e)}}async fetchExposedBookings(t,n,r,o){try{const{data:a}=await e.post(`/Fetch_Exposed_Bookings`,{booking_nbr:t,property_id:n,from_date:r,to_date:o});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}return a["My_Result"]}catch(e){console.error(e);throw new Error(e)}}async getPCICardInfoURL(t){try{const{data:n}=await e.post(`/Get_PCI_Card_Info_URL`,{BOOK_NBR:t});if(n.ExceptionMsg!==""){throw new Error(n.ExceptionMsg)}return n["My_Result"]}catch(e){console.error(e);throw new Error(e)}}async doReservation(n){const{data:r}=await e.post(`/DoReservation`,Object.assign(Object.assign({},n),{extras:n.extras?n.extras:t}));if(r.ExceptionMsg!==""){throw new Error(r.ExceptionMsg)}console.log(r["My_Result"]);return r["My_Result"]}async bookUser({bookedByInfoData:e,check_in:t,currency:n,extras:r=null,fromDate:o,guestData:i,pickup_info:s,propertyid:l,rooms:c,source:u,toDate:d,totalNights:_,arrivalTime:b,bookingNumber:f,defaultGuest:h,identifier:w,pr_id:y}){try{const v=a(o);const E=a(d);let m={email:e.email===""?null:e.email||null,first_name:e.firstName,last_name:e.lastName,country_id:e.countryId===""?null:e.countryId,city:null,mobile:e.contactNumber===null?"":e.contactNumber,phone_prefix:null,address:"",dob:null,subscribe_to_news_letter:e.emailGuest||false,cci:e.cardNumber?{nbr:e.cardNumber,holder_name:e.cardHolderName,expiry_month:e.expiryMonth,expiry_year:e.expiryYear}:null};if(h){m=Object.assign(Object.assign({},h),{email:h.email===""?null:h.email})}if(e.id){m=Object.assign(Object.assign({},m),{id:e.id})}const p={assign_units:true,check_in:t,is_pms:true,is_direct:true,is_in_loyalty_mode:false,promo_key:null,extras:r,booking:{booking_nbr:f||"",from_date:v,to_date:E,remark:e.message||null,property:{id:l},source:u,currency:n,arrival:{code:b?b:e.selectedArrivalTime},guest:m,rooms:[...i.map((e=>({identifier:w||null,roomtype:{id:e.roomCategoryId,name:e.roomCategoryName,physicalrooms:null,rateplans:null,availabilities:null,inventory:e.inventory,rate:e.rate/_},rateplan:{id:e.ratePlanId,name:e.ratePlanName,rate_restrictions:null,variations:null,cancelation:e.cancelation,guarantee:e.guarantee},unit:typeof y==="undefined"&&e.roomId===""?null:{id:+y||+e.roomId},occupancy:{adult_nbr:e.adultCount,children_nbr:e.childrenCount,infant_nbr:null},bed_preference:e.preference,from_date:v,to_date:E,notes:null,days:this.generateDays(v,E,this.calculateTotalRate(e.rate,_,e.isRateModified,e.rateType)),guest:{email:null,first_name:e.guestName,last_name:null,country_id:null,city:null,mobile:null,address:null,dob:null,subscribe_to_news_letter:null}}))),...c]},pickup_info:s};console.log("book user payload",p)}catch(e){console.error(e);throw new Error(e)}}}export{p as B,w as a,c as b,E as c,y as g,v as m,_ as r,h as u};
//# sourceMappingURL=p-C4fS5Rwt.js.map