{"version":3,"names":["initialState","adultChildConstraints","adult_max_nbr","child_max_nbr","child_max_age","allowedBookingSources","currency","undefined","endingDate","formattedLegendData","is_vacation_rental","legendData","roomsInfo","startingDate","language","toBeAssignedEvents","allowed_payment_methods","pickup_service","checkin_enabled","max_nights","is_frontdesk_enabled","taxes","id","name","token","tax_statement","country","is_pms_enabled","roomHistory","is_automatic_check_in_out","state","calendar_data","onChange","onCalendarDatesChange","createStore","isSingleUnit","roomtype","find","r","console","warn","result","_a","physicalrooms","length"],"sources":["src/stores/calendar-data.ts"],"sourcesContent":["import { CalendarDataDetails } from '@/models/calendarData';\r\nimport { createStore } from '@stencil/store';\r\n\r\ntype CalendarStore = CalendarDataDetails & { roomHistory: Record<string, boolean>; checkin_enabled: boolean };\r\nconst initialState: CalendarStore = {\r\n  adultChildConstraints: {\r\n    adult_max_nbr: 0,\r\n    child_max_nbr: 0,\r\n    child_max_age: 0,\r\n  },\r\n  allowedBookingSources: [],\r\n  currency: undefined,\r\n  endingDate: 0,\r\n  formattedLegendData: undefined,\r\n  is_vacation_rental: false,\r\n  legendData: [],\r\n  roomsInfo: [],\r\n  startingDate: 0,\r\n  language: '',\r\n  toBeAssignedEvents: [],\r\n  allowed_payment_methods: [],\r\n  pickup_service: undefined,\r\n  checkin_enabled: true,\r\n  max_nights: 0,\r\n  is_frontdesk_enabled: false,\r\n  taxes: [],\r\n  id: null,\r\n  name: '',\r\n  token: '',\r\n  tax_statement: '',\r\n  country: undefined,\r\n  is_pms_enabled: false,\r\n  roomHistory: {},\r\n  is_automatic_check_in_out: false,\r\n};\r\nexport const { state: calendar_data, onChange: onCalendarDatesChange } = createStore<CalendarStore>(initialState);\r\nexport function isSingleUnit(id: number) {\r\n  if (calendar_data.roomHistory[id]) {\r\n    return calendar_data.roomHistory[id];\r\n  }\r\n  const roomtype = calendar_data.roomsInfo.find(r => r.id === id);\r\n  if (!roomtype) {\r\n    console.warn(`Room type not found for ID: ${id}`);\r\n    return false;\r\n  }\r\n  const result = roomtype.physicalrooms?.length <= 1;\r\n  calendar_data.roomHistory[id] = result;\r\n  return result;\r\n}\r\nexport default calendar_data;\r\n"],"mappings":"oCAIA,MAAMA,EAA8B,CAClCC,sBAAuB,CACrBC,cAAe,EACfC,cAAe,EACfC,cAAe,GAEjBC,sBAAuB,GACvBC,SAAUC,UACVC,WAAY,EACZC,oBAAqBF,UACrBG,mBAAoB,MACpBC,WAAY,GACZC,UAAW,GACXC,aAAc,EACdC,SAAU,GACVC,mBAAoB,GACpBC,wBAAyB,GACzBC,eAAgBV,UAChBW,gBAAiB,KACjBC,WAAY,EACZC,qBAAsB,MACtBC,MAAO,GACPC,GAAI,KACJC,KAAM,GACNC,MAAO,GACPC,cAAe,GACfC,QAASnB,UACToB,eAAgB,MAChBC,YAAa,GACbC,0BAA2B,O,MAEdC,MAAOC,EAAeC,SAAUC,GAA0BC,EAA2BlC,G,SACpFmC,EAAab,G,MAC3B,GAAIS,EAAcH,YAAYN,GAAK,CACjC,OAAOS,EAAcH,YAAYN,E,CAEnC,MAAMc,EAAWL,EAAcnB,UAAUyB,MAAKC,GAAKA,EAAEhB,KAAOA,IAC5D,IAAKc,EAAU,CACbG,QAAQC,KAAK,+BAA+BlB,KAC5C,OAAO,K,CAET,MAAMmB,IAASC,EAAAN,EAASO,iBAAa,MAAAD,SAAA,SAAAA,EAAEE,SAAU,EACjDb,EAAcH,YAAYN,GAAMmB,EAChC,OAAOA,CACT,Q","ignoreList":[]}