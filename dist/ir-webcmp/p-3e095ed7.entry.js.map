{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","constructor","hostRef","this","bedPreferenceType","bookingType","totalNights","isButtonPressed","variationService","VariationService","componentWillLoad","isSingleUnit","rateplanSelection","roomtype","id","filteredRooms","filterRooms","length","updateGuest","unit","_b","_a","toString","params","roomTypeId","ratePlanId","ratePlan","prevGuest","guest","roomIndex","Object","assign","booking_store","ratePlanSelections","handleButtonClicked","event","detail","key","getTooltipMessages","selected_variation","selectedVariation","guestInfo","infant_nbr","getVariationBasedOnInfants","variations","baseVariation","infants","matchingVariation","_c","find","variation","adult_nbr","child_nbr","cancellationPolicy","_e","_d","applicable_policies","p","type","combined_statement","guaranteePolicy","_g","_f","tooltip","undefined","getAmount","is_amount_modified","view_mode","rp_amount","discounted_gross_amount","result","calendar_data","is_frontdesk_enabled","assignable_units","forEach","Is_Fully_Available","push","name","pr_id","filteredGuestsRoom","filter","_","i","map","r","filteredResults","includes","baseData","roomtypeId","f","sort","a","b","localeCompare","render","filteredRoomList","formattedVariation","formatVariationBasedOnInfants","h","Host","class","short_name","is_non_refundable","message","innerHTML","formatAmount","currency","symbol","locales","entries","Lcz_Stay","v4","first_name","placeholder","onInput","target","value","event_type","modifyBookingStore","required","last_name","onChange","selected","_h","Lcz_Assignunits","room","is_bed_configuration_enabled","_j","bed_preference","_k","Lcz_BedConfiguration","data","CODE_NAME","CODE_VALUE_EN","_l","style","gap","marginTop","_m","width","Number","_o","Array","from","item","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","isEventHover","renderAgain","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","renderPage","dataUpdateEvent","emit","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","console","log","fromDate","toDate","from_date","dateOption","showDateDifference","to_date","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","splitBookingId","bookingData","sourceOptions","showSplitBookingOption","sourceOption","code","description","tag","getSplitBookingList","Lcz_Tobooking","keys","bookedByInfoData","bookingNumber","firstName","lastName","moment","bookingDataDefaultDateRange","format","propertyId","Lcz_BookingNumber","onComboboxValue","e","stopImmediatePropagation","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","label","handleAdultChildChange","obj","adultChildCount","adultChild","getAdultChildConstraints","testId","selectedValue","adult","onSelectChange","selectId","firstOption","Lcz_AdultsCaption","adultChildConstraints","adult_max_nbr","text","child_max_nbr","child","renderChildCaption","btn_id","isLoading","isRequestPending","size","Lcz_Check","onClickHandler","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","isEventType","toast","title","Lcz_ChooseBookingNumber","position","initialToDate","defaultDaterange","initialFromDate","selectedFromDate","dateRangeData","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","replace","Lcz_PlzSelectNumberOfGuests","animateIrSelect","buttonClicked","minDate","getTime","getMinDate","add","startOf","wasBlockedUnit","block_exposed_unit_props","getMaxDate","showSourceNode","variant","dateLabel","Lcz_Dates","maxDate","disabled","tax_statement","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","withDateDifference","fromDateStr","toDateStr","initializeDates","handleDataChange","newValue","oldValue","JSON","stringify","setDate","getFormattedDateString","calculateTotalNights","calculateDaysBetweenDates","toLowerCase","getFullYear","handleDateSelectEvent","dateSelectEvent","handleDateChange","start","end","dateDifference","autoApply","onDateChanged","xmlns","height","viewBox","fill","d","Lcz_Nights","Lcz_Night","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","showPaymentDetails","countries","arrivalTimeList","expiryMonths","expiryYears","currentMonth","bookedByData","email","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","index","country","getUserDefaultCountry","getMonth","arrivalTime","handleCountryChange","handleNumberInput","inputElement","inputValue","numericRegex","test","checkUser","z","string","safeParse","success","res","getUserInfo","mobile_without_prefix","country_id","country_phone_prefix","prevBookedByData","props","checkout_guest","handleComboboxChange","stopPropagation","clearEvent","Lcz_BookedBy","bind","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","onCountryChange","c","Lcz_MobilePhone","language","phone_prefix","default_country","onTextChange","mobile","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Fragment","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","iglRatePlanCss","IglRatePlanStyle0","IglRatePlan","ratePricingMode","isBookDisabled","disableForm","shouldBeDisabled","visibleInventory","is_available_to_book","updateRateplanSelection","currentSelections","handleVariationChange","reserveRooms","rooms","bookProperty","resetReserved","reserveRoom","roomtype_id","renderRate","amount","discounted_amount","amount_per_night_gross","formatVariation","adults","children","v","updateRoomParams","isAvailableToBook","formattedVariations","split","uuidv4","Lcz_Rate","reserved","onClick","Lcz_Current","Lcz_Select","Lcz_Book","iglRoomTypeCss","IglRoomTypeStyle0","IglRoomType","roomInfoId","selectedRooms","roomsDistributions","validBookingTypes","isValidBookingType","roomType","rateplans","getVisibleInventory","irAutocompleteCss","IrAutocompleteStyle0","IrAutocomplete","duration","inputId","selectedIndex","isComboBoxVisible","inputFocused","no_result_found","Lcz_NoResultsFound","handleKeyDown","dataSize","itemHeight","getHeightOfPElement","preventDefault","adjustScrollPosition","selectItem","inputRef","blur","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","setTimeout","fetchData","fetchExposedGuest","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","isDropdownItem","document","activeElement","inputCleared","element","closest","disconnectedCallback","removeEventListener","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","booking_nbr","clearInput","withblur","onBlur","autoComplete","onFocus","ref","irCountryPickerCss","IrCountryPickerStyle0","IrCountryPicker","autoValidate","filteredCountries","searching","selectedCountry","newCountry","oldCountry","filterCountries","selectCountry","debounceTimeout","countryChange","scrollToSelected","dropdownItem","scrollIntoView","block","shouldShowPropertyCountry","propertyCountry","onInputFocus","onInputBlur","trim","src","flag","alt","aspectRatio","borderRadius","irDateRangeCss","IrDateRangeStyle0","IrDateRange","firstDay","monthNames","daysOfWeek","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","singleDatePicker","maxSpan","days","getElementById","createElement","textContent","head","appendChild","componentDidLoad","dateRangeInput","initializeDateRangePicker","updateDateRangePickerDates","openDatePickerTimeout","$","remove","handleMinDateChange","datePropChanged","openDatePicker","click","picker","newDate","date","setStartDate","setEndDate","newStartDate","newEndDate","clone","daterangepicker","opens","startDate","endDate","locale","dateChanged","irDateViewCss","IrDateViewStyle0","IrDateView","handleFromDateChange","newVal","oldVal","handleToDateChange","convertDate","dates","date_difference","isMoment","irPhoneInputCss","IrPhoneInputStyle0","IrPhoneInput","isDropdownVisible","hasFocus","random","slice","labelId","getCountries","setCountryFromPhonePrefix","setCurrentCountry","handleValueChange","handlePhoneChange","textChange","currentCountry","Error","useFloating","floatingLabel","showSideLabel","isActive","maxLength","onComboboxValueChange","autoFocus","image"],"sources":["src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.css?tag=igl-room-type&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.tsx","src/components/ui/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ui/ir-autocomplete/ir-autocomplete.tsx","src/components/ui/ir-country-picker/ir-country-picker.css?tag=ir-country-picker&encapsulation=scoped","src/components/ui/ir-country-picker/ir-country-picker.tsx","src/components/ui/ir-date-range/ir-date-range.css?tag=ir-date-range&encapsulation=scoped","src/components/ui/ir-date-range/ir-date-range.tsx","src/components/ir-date-view/ir-date-view.css?tag=ir-date-view&encapsulation=scoped","src/components/ir-date-view/ir-date-view.tsx","src/components/ui/ir-phone-input/ir-phone-input.css?tag=ir-phone-input&encapsulation=scoped","src/components/ui/ir-phone-input/ir-phone-input.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.rate_amount {\n  display: none;\n  padding: 0;\n  margin: 0;\n}\n\n.booking-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n  gap: 0.5rem;\n}\n.non-ref-span {\n  font-size: 12px;\n  color: var(--green);\n}\n.booking-roomtype-title {\n  font-size: 1.25rem;\n  margin-right: 0.5rem;\n  margin: 0;\n  padding: 0;\n}\n\n.booking-details-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n}\n\n.booking-rateplan {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0;\n  padding: 0;\n}\n\n.booking-rateplan-name {\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n}\n\n.booking-tooltip {\n  margin-right: 0.5rem;\n  margin: 0;\n  padding: 0;\n}\n\n.booking-variation {\n  margin: 0;\n  padding: 0;\n}\n\n.booking-price {\n  margin: 0;\n  padding: 0;\n}\n\n.booking-footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0;\n  margin-bottom: 0.5rem;\n}\n\n.booking-details-container {\n  display: none;\n}\n\n/*md*/\n@media (min-width: 768px) {\n  .booking-header {\n    justify-content: flex-start;\n  }\n  .booking-footer,\n  .booking-price {\n    display: none;\n  }\n  .booking-details-container,\n  .rate_amount {\n    display: inline-flex;\n    gap: 0.5rem;\n  }\n}\n\n@media only screen and (min-width: 908px) {\n  .aplicationInfoContainer {\n    max-width: 100%;\n  }\n  .guest-info-container,\n  .bed-preference-container,\n  .unit-select-container {\n    max-width: 250px;\n  }\n  /* .preference-select-container {\n    max-width: 250px;\n  } */\n}\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\nimport { TPropertyButtonsTypes } from '@/components';\nimport { ICurrency } from '@/models/calendarData';\nimport booking_store, { IRatePlanSelection, modifyBookingStore, RatePlanGuest } from '@/stores/booking.store';\nimport locales from '@/stores/locales.store';\nimport { v4 } from 'uuid';\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\nimport { formatAmount } from '@/utils/utils';\nimport VariationService from '@/services/variation.service';\n\n@Component({\n  tag: 'igl-application-info',\n  styleUrl: 'igl-application-info.css',\n  scoped: true,\n})\nexport class IglApplicationInfo {\n  @Prop() rateplanSelection: IRatePlanSelection;\n  @Prop() guestInfo: RatePlanGuest | null;\n  @Prop() currency: ICurrency;\n  @Prop() bedPreferenceType = [];\n  @Prop() bookingType: string = 'PLUS_BOOKING';\n  @Prop() roomIndex: number;\n  @Prop() totalNights: number = 1;\n  @Prop() baseData: { unit: { id: string; name: string }; roomtypeId: number };\n\n  @State() isButtonPressed = false;\n\n  private variationService = new VariationService();\n\n  componentWillLoad() {\n    if (isSingleUnit(this.rateplanSelection.roomtype.id)) {\n      const filteredRooms = this.filterRooms();\n      if (filteredRooms.length > 0) this.updateGuest({ unit: filteredRooms[0]?.id?.toString() });\n    }\n  }\n\n  private updateGuest(params: Partial<RatePlanGuest>) {\n    const roomTypeId = this.rateplanSelection.roomtype.id;\n    const ratePlanId = this.rateplanSelection.ratePlan.id;\n    let prevGuest = [...this.rateplanSelection.guest];\n    prevGuest[this.roomIndex] = {\n      ...prevGuest[this.roomIndex],\n      ...params,\n    };\n    booking_store.ratePlanSelections = {\n      ...booking_store.ratePlanSelections,\n      [roomTypeId]: {\n        ...booking_store.ratePlanSelections[roomTypeId],\n        [ratePlanId]: { ...this.rateplanSelection, guest: [...prevGuest] },\n      },\n    };\n  }\n\n  @Listen('buttonClicked', { target: 'body' })\n  handleButtonClicked(\n    event: CustomEvent<{\n      key: TPropertyButtonsTypes;\n      data?: CustomEvent;\n    }>,\n  ) {\n    switch (event.detail.key) {\n      case 'book':\n      case 'bookAndCheckIn':\n      case 'save':\n        this.isButtonPressed = true;\n        break;\n    }\n  }\n\n  private getTooltipMessages(): string | undefined {\n    const { ratePlan, selected_variation } = this.rateplanSelection;\n    let selectedVariation = selected_variation;\n    if (this.guestInfo?.infant_nbr) {\n      selectedVariation = this.variationService.getVariationBasedOnInfants({\n        variations: ratePlan.variations,\n        baseVariation: selected_variation,\n        infants: this.guestInfo?.infant_nbr,\n      });\n    }\n\n    if (!selectedVariation) return;\n\n    const matchingVariation = ratePlan.variations?.find(variation => variation.adult_nbr === selectedVariation.adult_nbr && variation.child_nbr === selectedVariation.child_nbr);\n\n    if (!matchingVariation) return;\n\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\n\n    let tooltip = '';\n    if (cancellationPolicy) {\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\n    }\n    if (guaranteePolicy) {\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\n    }\n    return tooltip || undefined;\n  }\n\n  private getAmount(): number {\n    if (this.rateplanSelection.is_amount_modified) {\n      return this.rateplanSelection.view_mode === '001' ? this.rateplanSelection.rp_amount : this.rateplanSelection.rp_amount * this.totalNights;\n    }\n    let variation = this.rateplanSelection.selected_variation;\n    if (this.guestInfo?.infant_nbr) {\n      variation = this.variationService.getVariationBasedOnInfants({\n        variations: this.rateplanSelection.ratePlan.variations,\n        baseVariation: this.rateplanSelection.selected_variation,\n        infants: this.guestInfo?.infant_nbr,\n      });\n    }\n    return variation.discounted_gross_amount;\n  }\n\n  private filterRooms(): { name: string; id: number }[] {\n    const result = [];\n    if (!calendar_data.is_frontdesk_enabled) {\n      return result;\n    }\n    this.rateplanSelection.ratePlan?.assignable_units?.forEach(unit => {\n      if (unit.Is_Fully_Available) {\n        result.push({ name: unit.name, id: unit.pr_id });\n      }\n    });\n    const filteredGuestsRoom = this.rateplanSelection.guest.filter((_, i) => i !== this.roomIndex).map(r => r.unit);\n    const filteredResults = result.filter(r => !filteredGuestsRoom.includes(r.id.toString()));\n    return this.bookingType === 'EDIT_BOOKING'\n      ? [...filteredResults, this.rateplanSelection.roomtype.id === this.baseData?.roomtypeId ? this.baseData?.unit : null]\n          .filter(f => !!f)\n          .sort((a, b) => a.name.localeCompare(b.name))\n      : filteredResults;\n  }\n\n  render() {\n    const filteredRoomList = this.filterRooms();\n    const formattedVariation = this.variationService.formatVariationBasedOnInfants({\n      baseVariation: this.rateplanSelection.selected_variation,\n      infants: this.guestInfo.infant_nbr,\n      variations: this.rateplanSelection.ratePlan.variations,\n    });\n    return (\n      <Host class={'my-2'} data-testid={`room_info_${this.rateplanSelection.ratePlan.id}`}>\n        <div class=\"booking-header\">\n          {(this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\n            <span class=\"booking-roomtype-title\">{this.rateplanSelection.roomtype.name}</span>\n          )}\n          <div class=\"booking-details-container\">\n            <div class=\"booking-rateplan\">\n              <p class=\"booking-rateplan-name\">\n                {this.rateplanSelection.ratePlan.short_name} {this.rateplanSelection.ratePlan.is_non_refundable && <span class={'non-ref-span'}>Non Refundable</span>}\n              </p>\n              <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\n            </div>\n            <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\n          </div>\n          <p class=\"booking-price\">\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\n          </p>\n        </div>\n        <div class=\"booking-footer\">\n          <div class=\"booking-rateplan\">\n            <p class=\"booking-rateplan-name\">{this.rateplanSelection.ratePlan.short_name}</p>\n            <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\n          </div>\n          <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\n        </div>\n        <div class=\"d-flex flex-column flex-md-row  p-0 align-items-md-center aplicationInfoContainer\">\n          <div class=\"mr-md-1 mb-1 mb-md-0 flex-fill guest-info-container\">\n            <input\n              id={v4()}\n              type=\"text\"\n              data-testid=\"guest_first_name\"\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.first_name === '' && 'border-danger'}`}\n              placeholder={locales.entries['Lcz_GuestFirstname'] ?? 'Guest first name'}\n              name=\"guestFirstName\"\n              onInput={event => {\n                const name = (event.target as HTMLInputElement).value;\n                this.updateGuest({ first_name: name });\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\n                  modifyBookingStore('guest', {\n                    ...booking_store.guest,\n                    name,\n                  });\n                }\n              }}\n              required\n              value={this.guestInfo?.first_name}\n            />\n          </div>\n          <div class=\"mr-md-1 flex-fill guest-info-container\">\n            <input\n              id={v4()}\n              type=\"text\"\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.last_name === '' && 'border-danger'}`}\n              placeholder={locales.entries['Lcz_GuestLastname'] ?? 'Guest last name'}\n              name=\"guestLastName\"\n              data-testid=\"guest_last_name\"\n              onInput={event => {\n                const name = (event.target as HTMLInputElement).value;\n                this.updateGuest({ last_name: name });\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\n                  modifyBookingStore('guest', {\n                    ...booking_store.guest,\n                    name,\n                  });\n                }\n              }}\n              required\n              value={this.guestInfo?.last_name}\n            />\n          </div>\n          {calendar_data.is_frontdesk_enabled &&\n            !isSingleUnit(this.rateplanSelection.roomtype.id) &&\n            (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\n              <div class=\"mt-1 mt-md-0 d-flex align-items-center flex-fill\">\n                <div class=\"mr-md-1 p-0 flex-fill preference-select-container\">\n                  <select data-testid=\"unit\" class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.updateGuest({ unit: (event.target as HTMLInputElement).value })}>\n                    <option value=\"\" selected={this.guestInfo?.unit === ''}>\n                      {locales.entries.Lcz_Assignunits}\n                    </option>\n                    {filteredRoomList?.map(room => (\n                      <option value={room.id} selected={this.guestInfo?.unit === room.id.toString()}>\n                        {room.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            )}\n          {this.rateplanSelection.roomtype.is_bed_configuration_enabled && (\n            <div class=\"mt-1 mt-md-0 mr-md-1 flex-fill\">\n              <select\n                data-testid=\"bed_configuration\"\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\n                id={v4()}\n                onChange={event => this.updateGuest({ bed_preference: (event.target as HTMLInputElement).value })}\n              >\n                <option value=\"\" selected={this.guestInfo?.bed_preference === ''}>\n                  {locales.entries.Lcz_BedConfiguration}\n                </option>\n                {this.bedPreferenceType.map(data => (\n                  <option value={data.CODE_NAME} selected={this.guestInfo?.bed_preference === data.CODE_NAME}>\n                    {data.CODE_VALUE_EN}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          <p class=\"rate_amount\">\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\n          </p>\n        </div>\n        {this.rateplanSelection.selected_variation.child_nbr > 0 && (\n          <div style={{ gap: '0.5rem', marginTop: '0.5rem' }} class=\"d-flex  flex-row  p-0 align-items-center aplicationInfoContainer\">\n            <p class={'m-0 p-0 text-danger'}>Any of the children below 3 years?</p>\n            <div class=\"mr-1 flex-fill\">\n              <select\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\n                id={v4()}\n                style={{ width: 'max-content' }}\n                onChange={event => this.updateGuest({ infant_nbr: Number((event.target as HTMLInputElement).value) })}\n              >\n                <option value=\"\" selected={Number(this.guestInfo?.infant_nbr) === 0}>\n                  {locales.entries['No'] || 'No'}\n                </option>\n                {Array.from({ length: this.rateplanSelection.selected_variation.child_nbr }, (_, i) => i + 1).map(item => (\n                  <option value={item} selected={this.guestInfo?.infant_nbr === item}>\n                    {item}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n:host .controlContainer {\n  width: 24px;\n}\n\n:host .checkBoxContainer input {\n  height: 1.2rem !important;\n  width: 30px;\n}\n\n.releaseTime {\n  padding-left: 5px;\n}\n.out-of-service-label {\n  margin-left: 5px !important;\n}\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { IEntries } from '@/models/IBooking';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'igl-block-dates-view',\n  styleUrl: 'igl-block-dates-view.css',\n  scoped: true,\n})\nexport class IglBlockDatesView {\n  @Prop() defaultData: { [key: string]: any };\n  @Prop() fromDate: string;\n  @Prop() toDate: string;\n  @Prop({ mutable: true }) entryDate: string;\n  @Prop() entryHour: number;\n  @Prop() isEventHover: boolean = false;\n  @Prop() entryMinute: number;\n  @State() renderAgain: boolean = false;\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\n\n  private blockDatesData: { [key: string]: any } = {\n    RELEASE_AFTER_HOURS: 0,\n    OPTIONAL_REASON: '',\n    OUT_OF_SERVICE: false,\n  }; // Change of property name might require updates in booking-event-hover\n  private releaseList: IEntries[] = [];\n  private bookingService: BookingService = new BookingService();\n\n  async componentWillLoad() {\n    try {\n      this.releaseList = await this.bookingService.getBlockedInfo();\n      if (this.defaultData) {\n        this.blockDatesData = { ...this.defaultData };\n      } else {\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\n        this.emitData();\n      }\n    } catch (error) {\n      // toastr.error(error);\n    }\n  }\n\n  handleOptionalReason(event) {\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\n    this.emitData();\n  }\n\n  handleReleaseAfterChange(evt) {\n    if (this.entryDate) this.entryDate = undefined;\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\n    this.renderPage();\n    this.emitData();\n  }\n\n  emitData() {\n    this.dataUpdateEvent.emit({\n      key: 'blockDatesData',\n      data: { ...this.blockDatesData },\n    });\n  }\n\n  getReleaseHoursString() {\n    // console.log(\"entry date\", this.entryDate);\n    // console.log(\"blocked date data\", this.blockDatesData);\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\n    if (this.entryDate && this.entryHour && this.entryMinute) {\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\n    } else {\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\n    }\n\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\n  }\n  formatNumber(value: number) {\n    return value < 10 ? `0${value}` : value;\n  }\n  handleOutOfService(evt) {\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\n    if (this.blockDatesData.OUT_OF_SERVICE) {\n      this.blockDatesData.OPTIONAL_REASON = '';\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\n    }\n    this.renderPage();\n    this.emitData();\n  }\n\n  renderPage() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  render() {\n    console.log({ fromDate: this.fromDate, toDate: this.toDate });\n    return (\n      <Host>\n        <div class={`m-0 p-0 mb-1`}>\n          <div class=\"text-left p-0\">\n            <ir-date-view from_date={this.fromDate} dateOption=\"YYYY-MM-DD\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\n          </div>\n        </div>\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\n          <div class=\"mb-1 \">\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\n            </div>\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\n          </div>\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\n            <div>\n              <div class=\"mb-1 d-flex  align-items-center\">\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\n                <div class=\"d-inline-flex col pr-0 align-middle\">\n                  <input\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder={locales.entries.Lcz_OptionalReason}\n                    id=\"optReason\"\n                    value={this.blockDatesData.OPTIONAL_REASON}\n                    onInput={event => this.handleOptionalReason(event)}\n                  />\n                </div>\n              </div>\n              <div class=\"mb-1 w-100 pr-0 \">\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\n                <div class=\"d-inline-block\">\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\n                    {this.releaseList.map(releaseItem => (\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\n                        {releaseItem.CODE_VALUE_EN}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\n                  <div class=\"d-inline-block releaseTime\">\n                    <em>\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\n                    </em>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.sourceContainer {\n  max-width: 350px;\n}\n.message-label {\n  font-size: 80%;\n}\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\n\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport calendar_data from '@/stores/calendar-data';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nimport { modifyBookingStore } from '@/stores/booking.store';\n\n@Component({\n  tag: 'igl-book-property-header',\n  styleUrl: 'igl-book-property-header.css',\n  scoped: true,\n})\nexport class IglBookPropertyHeader {\n  @Prop() splitBookingId: any = '';\n  @Prop() bookingData: any = '';\n  @Prop() minDate: string;\n  @Prop() sourceOptions: TSourceOptions[] = [];\n  @Prop() message: string;\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\n  @Prop() showSplitBookingOption: boolean = false;\n  @Prop() adultChildConstraints: TAdultChildConstraints;\n  @Prop() splitBookings: any[];\n  @Prop() adultChildCount: { adult: number; child: number };\n  @Prop() dateRangeData: any;\n  @Prop() bookedByInfoData: any;\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\n  @Prop() propertyId: number;\n  @Prop() wasBlockedUnit: boolean;\n\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\n  @Event() sourceDropDownChange: EventEmitter<string>;\n  @Event() adultChild: EventEmitter<any>;\n  @Event() checkClicked: EventEmitter<any>;\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\n  @Event() toast: EventEmitter<IToast>;\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\n\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\n\n  private sourceOption: TSourceOption = {\n    code: '',\n    description: '',\n    tag: '',\n    id: '',\n    type: '',\n  };\n\n  getSplitBookingList() {\n    return (\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\n          <ir-autocomplete\n            value={\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\n            }\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\n            propertyId={this.propertyId}\n            placeholder={locales.entries.Lcz_BookingNumber}\n            onComboboxValue={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation;\n              this.spiltBookingSelected.emit(e.detail);\n            }}\n            isSplitBooking\n          ></ir-autocomplete>\n        </div>\n      </fieldset>\n    );\n  }\n  getSourceNode() {\n    return (\n      <fieldset class=\"d-flex text-left  align-items-center\">\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\n            {this.sourceOptions.map(option => {\n              if (option.type === 'LABEL') {\n                return <optgroup label={option.value}></optgroup>;\n              }\n              return (\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\n                  {option.value}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </fieldset>\n    );\n  }\n  handleAdultChildChange(key: string, value: string) {\n    //const value = (event.target as HTMLSelectElement).value;\n    let obj = {};\n    if (value === '') {\n      obj = {\n        ...this.adultChildCount,\n        [key]: 0,\n      };\n    } else {\n      obj = {\n        ...this.adultChildCount,\n        [key]: value,\n      };\n    }\n    modifyBookingStore('bookingAvailabilityParams', {\n      from_date: this.bookingDataDefaultDateRange.fromDate,\n      to_date: this.bookingDataDefaultDateRange.toDate,\n      adult_nbr: obj?.['adult'] ?? 0,\n      child_nbr: obj?.['child'] ?? 0,\n    });\n    this.adultChild.emit(obj);\n  }\n\n  getAdultChildConstraints() {\n    return (\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\n        <div class=\"form-group  my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\n          <fieldset>\n            <div class=\"btn-group ml-0\">\n              <ir-select\n                testId=\"adult_number\"\n                class={'m-0'}\n                selectedValue={this.adultChildCount?.adult?.toString()}\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\n                selectId=\"adult_select\"\n                firstOption={locales.entries.Lcz_AdultsCaption}\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\n                  text: option.toString(),\n                  value: option.toString(),\n                }))}\n              ></ir-select>\n            </div>\n          </fieldset>\n          {this.adultChildConstraints.child_max_nbr > 0 && (\n            <fieldset>\n              <div class=\"btn-group ml-1 p-0\">\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\n                  <option value={''}>{this.renderChildCaption()}</option>\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\n                    <option value={option}>{option}</option>\n                  ))}\n                </select> */}\n                <ir-select\n                  selectedValue={this.adultChildCount?.child?.toString()}\n                  testId=\"child_number\"\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\n                  selectId=\"child_select\"\n                  firstOption={this.renderChildCaption()}\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\n                    text: option.toString(),\n                    value: option.toString(),\n                  }))}\n                ></ir-select>\n              </div>\n            </fieldset>\n          )}\n          <ir-button\n            btn_id=\"check_availability\"\n            isLoading={isRequestPending('/Check_Availability')}\n            size=\"sm\"\n            class=\"ml-2\"\n            text={locales.entries.Lcz_Check}\n            onClickHandler={() => this.handleButtonClicked()}\n          ></ir-button>\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\n            {locales.entries.Lcz_Check}\n          </button> */}\n        </div>\n      </div>\n    );\n  }\n  renderChildCaption() {\n    const maxAge = this.adultChildConstraints.child_max_age;\n    let years = locales.entries.Lcz_Years;\n\n    if (maxAge === 1) {\n      years = locales.entries.Lcz_Year;\n    }\n    return `${locales.entries.Lcz_ChildCaption} 0 - ${this.adultChildConstraints.child_max_age} ${years}`;\n  }\n  handleButtonClicked() {\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\n      this.toast.emit({\n        type: 'error',\n        title: locales.entries.Lcz_ChooseBookingNumber,\n        description: '',\n        position: 'top-right',\n      });\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\n        this.toast.emit({\n          type: 'error',\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\n            '%1',\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\n          description: '',\n          position: 'top-right',\n        });\n        return;\n      } else if (this.adultChildCount.adult === 0) {\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\n        this.animateIrSelect.emit('adult_child_select');\n      } else {\n        this.buttonClicked.emit({ key: 'check' });\n      }\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\n      this.toast.emit({\n        type: 'error',\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\n          '%1',\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\n        description: '',\n        position: 'top-right',\n      });\n    } else if (this.adultChildCount.adult === 0) {\n      this.animateIrSelect.emit('adult_child_select');\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\n    } else {\n      this.buttonClicked.emit({ key: 'check' });\n    }\n  }\n  isEventType(key: string) {\n    return this.bookingData.event_type === key;\n  }\n  private getMinDate() {\n    if (this.isEventType('PLUS_BOOKING')) {\n      return moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD');\n    }\n    if (this.wasBlockedUnit) {\n      return this.bookingData?.block_exposed_unit_props.from_date;\n    }\n    return this.minDate;\n  }\n  private getMaxDate() {\n    if (!this.bookingData?.block_exposed_unit_props) {\n      return undefined;\n    }\n    return this.bookingData?.block_exposed_unit_props.to_date;\n  }\n  render() {\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\n    return (\n      <Host>\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\n        {showSourceNode && this.getSourceNode()}\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\n          <fieldset class=\"mt-lg-0 mr-1 \">\n            <igl-date-range\n              data-testid=\"date_picker\"\n              variant=\"booking\"\n              dateLabel={locales.entries.Lcz_Dates}\n              maxDate={this.getMaxDate()}\n              minDate={this.getMinDate()}\n              disabled={(this.isEventType('BAR_BOOKING') && !this.wasBlockedUnit) || this.isEventType('SPLIT_BOOKING')}\n              defaultData={this.bookingDataDefaultDateRange}\n            ></igl-date-range>\n          </fieldset>\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\n        </div>\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  align-items: center !important;\n  font-size: 14px !important;\n}\n.date-range-input {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex: 1;\n  cursor: pointer;\n  width: 100%;\n  user-select: none;\n  font-size: 14px !important;\n}\n.iglRangeNights {\n  margin: 0;\n  padding: 0;\n}\n.date-view {\n  position: absolute;\n  background: white;\n  pointer-events: none;\n  cursor: pointer;\n  display: block;\n  margin-left: 14px;\n  margin-right: 14px;\n  font-size: 13.65px !important;\n  display: flex;\n  align-items: center;\n  inset: 0;\n}\n.date-view svg {\n  padding: 0 !important;\n  margin: 0;\n  margin-right: 10px;\n}\n.calendarPickerContainer {\n  display: flex !important;\n  position: relative !important;\n  text-align: left;\n  align-items: center !important;\n  padding: 0 !important;\n  margin: 0;\n  border: 1px solid var(--ir-date-range-border, #379ff2);\n  width: var(--ir-date-range-width, 245px);\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.calendarPickerContainer:focus-within {\n  border-color: #379ff2;\n}\n.calendarPickerContainer[data-state='disabled'] {\n  border: 0px;\n  width: 280px;\n}\n.date-view[data-state='disabled'],\n.date-range-input[data-state='disabled'] {\n  margin: 0;\n  cursor: default;\n}\n.date-range-container-cn {\n  position: relative;\n  width: fit-content;\n}\n.date-range-container-cn:focus-within .date-range-container {\n  border: 1px solid #379ff2;\n}\n.date-range-container {\n  position: relative;\n  gap: 1rem;\n  font-size: 0.975rem;\n  line-height: 1.45;\n  border-radius: 0.21rem;\n  border: 1px solid #cacfe7;\n  color: #3b4781;\n  padding: 0.75rem 1rem;\n  box-sizing: border-box !important;\n  font-weight: 400;\n  background-color: #fff;\n  background-clip: padding-box;\n  height: 2rem;\n  pointer-events: none;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.date-range-container-cn .date-range-input {\n  position: absolute;\n  width: 100% !important;\n  inset: 0;\n  cursor: pointer;\n}\n.date-range-container.disabled {\n  border: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n.date-range-input[data-state='disabled'] {\n  cursor: default;\n}\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { calculateDaysBetweenDates } from '@/utils/booking';\nimport moment from 'moment';\n\n@Component({\n  tag: 'igl-date-range',\n  styleUrl: 'igl-date-range.css',\n  scoped: true,\n})\nexport class IglDateRange {\n  @Prop() defaultData: { [key: string]: any };\n  @Prop({ reflect: true }) disabled: boolean = false;\n  @Prop() minDate: string;\n  @Prop() dateLabel: string;\n  @Prop() maxDate: string;\n  @Prop() withDateDifference: boolean = true;\n  @Prop() variant: 'booking' | 'default' = 'default';\n\n  @State() renderAgain: boolean = false;\n\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private totalNights: number = 0;\n  private fromDate: Date;\n  private toDate: Date;\n  private fromDateStr: string = 'from';\n  private toDateStr: string = 'to';\n\n  componentWillLoad() {\n    this.initializeDates();\n  }\n\n  @Watch('defaultData')\n  handleDataChange(newValue: any, oldValue: any) {\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\n      this.initializeDates();\n    }\n  }\n\n  private initializeDates() {\n    let dt = new Date();\n    dt.setHours(0, 0, 0, 0);\n    dt.setDate(dt.getDate() + 1);\n    if (this.defaultData) {\n      if (this.defaultData.fromDate) {\n        this.fromDate = new Date(this.defaultData.fromDate);\n        this.fromDate.setHours(0, 0, 0, 0);\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\n      }\n      if (this.defaultData.toDate) {\n        this.toDate = new Date(this.defaultData.toDate);\n        this.toDate.setHours(0, 0, 0, 0);\n        this.toDateStr = this.getFormattedDateString(this.toDate);\n      }\n    }\n    if (this.fromDate && this.toDate) {\n      this.calculateTotalNights();\n      // this.handleDateSelectEvent('selectedDateRange', {\n      //   fromDate: this.fromDate.getTime(),\n      //   toDate: this.toDate.getTime(),\n      //   fromDateStr: this.fromDateStr,\n      //   toDateStr: this.toDateStr,\n      //   dateDifference: this.totalNights,\n      // });\n    }\n    return [this.fromDateStr, this.toDateStr];\n  }\n\n  private calculateTotalNights() {\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\n  }\n  private getFormattedDateString(dt) {\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\n  }\n\n  private handleDateSelectEvent(key, data: any = '') {\n    this.dateSelectEvent.emit({ key, data });\n  }\n  private handleDateChange(evt) {\n    const { start, end } = evt.detail;\n    this.fromDate = start.toDate();\n    this.toDate = end.toDate();\n    this.calculateTotalNights();\n\n    this.handleDateSelectEvent('selectedDateRange', {\n      fromDate: this.fromDate.getTime(),\n      toDate: this.toDate.getTime(),\n      fromDateStr: start.format('DD MMM YYYY'),\n      toDateStr: end.format('DD MMM YYYY'),\n      dateDifference: this.totalNights,\n    });\n\n    this.renderAgain = !this.renderAgain;\n  }\n  render() {\n    if (this.variant === 'booking') {\n      return (\n        <div class={`p-0 m-0 date-range-container-cn`}>\n          <ir-date-range\n            maxDate={this.maxDate}\n            class={'date-range-input'}\n            disabled={this.disabled}\n            fromDate={this.fromDate}\n            toDate={this.toDate}\n            minDate={this.minDate}\n            autoApply\n            data-state={this.disabled ? 'disabled' : 'active'}\n            onDateChanged={evt => {\n              this.handleDateChange(evt);\n            }}\n          ></ir-date-range>\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n              />\n            </svg>\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n              />\n            </svg>\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\n            {this.totalNights && <span class=\"m-0 p-0\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Host>\n        <div class={`p-0 m-0 date-range-container-cn`}>\n          <ir-date-range\n            maxDate={this.maxDate}\n            class={'date-range-input'}\n            disabled={this.disabled}\n            fromDate={this.fromDate}\n            toDate={this.toDate}\n            minDate={this.minDate}\n            autoApply\n            data-state={this.disabled ? 'disabled' : 'active'}\n            onDateChanged={evt => {\n              this.handleDateChange(evt);\n            }}\n          ></ir-date-range>\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n              />\n            </svg>\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n              />\n            </svg>\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.bookedByEmailContainer {\n  flex: auto;\n  max-width: 350px;\n}\n\n.bookedDetailsForm label {\n  min-width: 125px;\n  max-width: 125px;\n}\n.row.sc-igl-booking-form {\n  padding: 0 !important;\n}\n.bookedDetailsForm .form-group {\n  margin-bottom: 10px !important;\n}\n\n.bookedDetailsForm .checkBoxContainer input {\n  height: 1.2rem !important;\n  width: 30px;\n}\n/* .controlContainer1 .textarea-container {\n  border: 1px solid #ced4da; \n  border-radius: 0.25rem; \n  height: 60px; \n  width: 100%;\n} */\n.controlContainer textarea {\n  height: 60px !important;\n}\n.margin3 {\n  margin-bottom: 5px !important;\n}\n@media (min-width: 768px) {\n  .bookedByEmailContainer {\n    margin-left: 37px;\n  }\n}\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { IEntries, ICountry } from '@/models/IBooking';\nimport { v4 } from 'uuid';\nimport locales from '@/stores/locales.store';\nimport { TPropertyButtonsTypes } from '@/components';\nimport { z } from 'zod';\nimport { validateEmail } from '@/utils/utils';\nimport booking_store, { BookingStore, modifyBookingStore } from '@/stores/booking.store';\n\n@Component({\n  tag: 'igl-property-booked-by',\n  styleUrl: 'igl-property-booked-by.css',\n  scoped: true,\n})\nexport class IglPropertyBookedBy {\n  @Prop() language: string;\n  @Prop() showPaymentDetails: boolean = false;\n  @Prop() defaultData: { [key: string]: any };\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\n  @Prop() countries: ICountry[] = [];\n  @Prop() propertyId: number;\n  @State() isButtonPressed: boolean = false;\n  private bookingService: BookingService = new BookingService();\n  private arrivalTimeList: IEntries[] = [];\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n  private expiryYears: string[] = [];\n  private currentMonth: string = '01';\n  private country;\n  @State() bookedByData: { [key: string]: any } = {\n    id: undefined,\n    email: '',\n    firstName: '',\n    lastName: '',\n    countryId: '',\n    isdCode: '',\n    contactNumber: '',\n    selectedArrivalTime: '',\n    emailGuest: false,\n    message: '',\n    cardNumber: '',\n    cardHolderName: '',\n    expiryMonth: '',\n    expiryYear: '',\n  };\n\n  async componentWillLoad() {\n    this.assignCountryCode();\n    this.initializeExpiryYears();\n    this.initializeDateData();\n    this.populateBookedByData();\n  }\n\n  private initializeExpiryYears() {\n    const currentYear = new Date().getFullYear();\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\n  }\n  private async assignCountryCode() {\n    const country = await this.bookingService.getUserDefaultCountry();\n\n    const countryId = country['COUNTRY_ID'];\n    this.country = countryId;\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\n  }\n  private initializeDateData() {\n    const dt = new Date();\n    const month = dt.getMonth() + 1;\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\n  }\n\n  private populateBookedByData() {\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\n    if (!this.bookedByData.expiryMonth) {\n      this.bookedByData.expiryMonth = this.currentMonth;\n    }\n    if (!this.bookedByData.expiryYear) {\n      this.bookedByData.expiryYear = new Date().getFullYear();\n    }\n    console.log('initial bookedby data', this.bookedByData);\n  }\n\n  private handleDataChange(key, event) {\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\n    this.dataUpdateEvent.emit({\n      key: 'bookedByInfoUpdated',\n      data: { ...this.bookedByData },\n    });\n    if (key === 'countryId') {\n      this.bookedByData = {\n        ...this.bookedByData,\n        isdCode: event.target.value,\n      };\n    }\n    // console.log(this.bookedByData);\n  }\n  private handleCountryChange(value) {\n    this.bookedByData = {\n      ...this.bookedByData,\n      isdCode: value,\n      countryId: value,\n    };\n    this.dataUpdateEvent.emit({\n      key: 'bookedByInfoUpdated',\n      data: { ...this.bookedByData },\n    });\n    // console.log(this.bookedByData);\n  }\n\n  private handleNumberInput(key, event: InputEvent) {\n    const inputElement = event.target as HTMLInputElement;\n    const inputValue = inputElement.value;\n\n    // Regular expression to match only numeric characters (0-9)\n    const numericRegex = /^[0-9]+$/;\n\n    if (!numericRegex.test(inputValue)) {\n      // If the input is not numeric, prevent it from being entered\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\n    }\n    if (inputValue === inputElement.value) {\n      this.handleDataChange(key, event);\n    }\n  }\n\n  // async handleEmailInput(key, event: InputEvent) {\n  //   const inputElement = event.target as HTMLInputElement;\n  //   const inputValue = inputElement.value;\n  //   if (z.string().email().safeParse(inputValue).success) {\n  //     this.handleDataChange(key, event);\n  //   }\n  // }\n  async checkUser() {\n    try {\n      const email = this.bookedByData.email;\n      if (z.string().email().safeParse(email).success) {\n        const res = await this.bookingService.getUserInfo(email);\n        if (res !== null) {\n          this.bookedByData = {\n            ...this.bookedByData,\n            id: res.id,\n            firstName: res.first_name,\n            lastName: res.last_name,\n            contactNumber: res.mobile_without_prefix,\n            countryId: res.country_id,\n            isdCode: res?.country_phone_prefix ?? res.isdCode.toString(),\n          };\n          console.log(this.bookedByData);\n        } else {\n          let prevBookedByData = { ...this.bookedByData };\n          prevBookedByData = { ...prevBookedByData, email };\n          this.bookedByData = { ...prevBookedByData };\n        }\n      } else {\n        let prevBookedByData = { ...this.bookedByData };\n        prevBookedByData = { ...prevBookedByData, email: '' };\n        this.bookedByData = { ...prevBookedByData };\n      }\n      this.dataUpdateEvent.emit({\n        key: 'bookedByInfoUpdated',\n        data: { ...this.bookedByData },\n      });\n    } catch (error) {\n      //   toastr.error(error);\n    }\n  }\n  private updateGuest(props: Partial<BookingStore['checkout_guest']>) {\n    modifyBookingStore('checkout_guest', { ...(booking_store.checkout_guest ?? {}), ...props });\n  }\n  handleComboboxChange(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { key, data } = e.detail;\n    console.log(key, data);\n    if (key === 'blur') {\n      if (z.string().email().safeParse(data).success) {\n        this.bookedByData.email = data;\n        this.checkUser();\n      } else if (this.bookedByData.email !== '' && data == '') {\n        this.bookedByData.email = '';\n      }\n      this.dataUpdateEvent.emit({\n        key: 'bookedByInfoUpdated',\n        data: this.bookedByData,\n      });\n    }\n    if (key === 'select') {\n      this.bookedByData.email = data.email;\n      this.bookedByData = {\n        ...this.bookedByData,\n        id: data.id,\n        firstName: data.first_name,\n        lastName: data.last_name,\n        contactNumber: data.mobile_without_prefix,\n        countryId: data.country_id,\n        isdCode: data['country_phone_prefix'] ?? data?.country_id,\n      };\n      this.dataUpdateEvent.emit({\n        key: 'bookedByInfoUpdated',\n        data: this.bookedByData,\n      });\n    }\n\n    // console.log('data', data, 'key', key);\n    // switch (key) {\n    //   case 'blur':\n    //     if (data !== '') {\n    //       this.bookedByData.email = data;\n    //       this.checkUser();\n    //     } else {\n    //       let prevBookedByData = { ...this.bookedByData };\n    //       prevBookedByData = { ...prevBookedByData, email: '' };\n    //       this.bookedByData = { ...prevBookedByData };\n    //       this.dataUpdateEvent.emit({\n    //         key: 'bookedByInfoUpdated',\n    //         data: { ...this.bookedByData },\n    //       });\n    //     }\n\n    //     break;\n    //   case 'select':\n    //     this.bookedByData.email = data.email;\n    //     this.bookedByData = {\n    //       ...this.bookedByData,\n    //       id: data.id,\n    //       firstName: data.first_name,\n    //       lastName: data.last_name,\n    //       contactNumber: data.mobile,\n    //       countryId: data.country_id,\n    //       isdCode: data.country_id.toString(),\n    //     };\n    //     this.dataUpdateEvent.emit({\n    //       key: 'bookedByInfoUpdated',\n    //       data: this.bookedByData,\n    //     });\n    //     break;\n    //   default:\n    //     break;\n    // }\n  }\n  clearEvent() {\n    this.bookedByData = {\n      ...this.bookedByData,\n      id: '',\n      firstName: '',\n      lastName: '',\n      contactNumber: '',\n      isdCode: this.country.toString(),\n      countryId: this.country,\n    };\n    this.dataUpdateEvent.emit({\n      key: 'bookedByInfoUpdated',\n      data: { ...this.bookedByData },\n    });\n  }\n  @Listen('buttonClicked', { target: 'body' })\n  handleButtonClicked(\n    event: CustomEvent<{\n      key: TPropertyButtonsTypes;\n      data?: CustomEvent;\n    }>,\n  ) {\n    switch (event.detail.key) {\n      case 'book':\n      case 'bookAndCheckIn':\n        this.isButtonPressed = true;\n        break;\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"text-left mt-3\">\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\n              {/* <input\n                id={v4()}\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Email address\"\n                name=\"bookeyByEmail\"\n                value={this.bookedByData.email}\n                onInput={event => this.handleEmailInput('email', event)}\n                required\n                onBlur={() => this.checkUser()}\n              /> */}\n              <ir-autocomplete\n                testId={'main_guest_email'}\n                onComboboxValue={this.handleComboboxChange.bind(this)}\n                propertyId={this.propertyId}\n                type=\"text\"\n                value={this.bookedByData.email}\n                required\n                class={'flex-fill'}\n                placeholder={locales.entries.Lcz_FindEmailAddress}\n                onInputCleared={() => this.clearEvent()}\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\n              ></ir-autocomplete>\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\n            </div>\n          </div>\n        </div>\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\n            <div class=\"p-0 flex-fill \">\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\n                  <input\n                    data-testid=\"main_guest_first_name\"\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\n                    type=\"text\"\n                    placeholder={locales.entries.Lcz_FirstName}\n                    id={v4()}\n                    value={this.bookedByData.firstName}\n                    onInput={event => {\n                      this.updateGuest({ first_name: (event.target as HTMLInputElement).value });\n                      this.handleDataChange('firstName', event);\n                    }}\n                    required\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\n                  <input\n                    data-testid=\"main_guest_last_name\"\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\n                    type=\"text\"\n                    placeholder={locales.entries.Lcz_LastName}\n                    id={v4()}\n                    value={this.bookedByData.lastName}\n                    onInput={event => this.handleDataChange('lastName', event)}\n                  />\n                </div>\n              </div>\n\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\n                {/* <div class=\"p-0 m-0  controlContainer flex-fill\"> */}\n                <ir-country-picker\n                  testId=\"main_guest_country\"\n                  class=\"flex-grow-1 m-0\"\n                  onCountryChange={e => this.handleCountryChange(e.detail.id)}\n                  countries={this.countries}\n                  country={this.countries.find(c => c.id === this.bookedByData.countryId)}\n                ></ir-country-picker>\n                {/* <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\n                      {locales.entries.Lcz_Select}\n                    </option>\n                    {this.countries.map(countryNode => (\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\n                        {countryNode.name}\n                      </option>\n                    ))}\n                  </select> */}\n                {/* </div> */}\n              </div>\n\n              {/* <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\n                  <div class=\" p-0 m-0\">\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\n                        {locales.entries.Lcz_Isd}\n                      </option>\n                      {this.countries.map(country => (\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\n                          {country.phone_prefix}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div class=\"flex-fill p-0 m-0\">\n                    <input\n                      class={`form-control\n                     \n                      `}\n                      type=\"tel\"\n                      placeholder={locales.entries.Lcz_ContactNumber}\n                      id={v4()}\n                      value={this.bookedByData.contactNumber}\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\n                    />\n                  </div>\n                </div>\n              </div> */}\n              <div class=\"form-group p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\n                <div class=\"p-0 m-0 controlContainer flex-fill\">\n                  <ir-phone-input\n                    testId=\"main_guest_phone\"\n                    language={this.language}\n                    // label={locales.entries.Lcz_MobilePhone}\n                    value={this.bookedByData.contactNumber}\n                    phone_prefix={this.bookedByData.isdCode}\n                    default_country={this.bookedByData.countryId}\n                    onTextChange={e => {\n                      this.handleDataChange('isdCode', { target: { value: e.detail.phone_prefix } });\n                      this.handleDataChange('contactNumber', { target: { value: e.detail.mobile } });\n                    }}\n                  ></ir-phone-input>\n                </div>\n              </div>\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\n                  <select\n                    data-testid=\"arrival_time\"\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\n                    id={v4()}\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\n                  >\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\n                      -\n                    </option> */}\n                    {this.arrivalTimeList.map(time => (\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\n                        {time.CODE_VALUE_EN}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div class=\"p-0 flex-fill  ml-md-3\">\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\n                  <textarea\n                    data-testid=\"note\"\n                    id={v4()}\n                    rows={4}\n                    class=\"form-control \"\n                    name=\"message\"\n                    value={this.bookedByData.message}\n                    onInput={event => this.handleDataChange('message', event)}\n                  ></textarea>\n                </div>\n              </div>\n              {this.showPaymentDetails && (\n                <Fragment>\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\n                      <input\n                        class=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        pattern=\"0-9 \"\n                        id={v4()}\n                        value={this.bookedByData.cardNumber}\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\n                      <input\n                        class=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        pattern=\"0-9 \"\n                        id={v4()}\n                        value={this.bookedByData.cardHolderName}\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\n                      <div class=\"p-0 m-0\">\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\n                          {this.expiryMonths.map(month => (\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\n                              {month}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div class=\"p-0 m-0 ml-1\">\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\n                          {this.expiryYears.map((year, index) => (\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\n                              {year}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </Fragment>\n              )}\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\n                  {locales.entries.Lcz_EmailTheGuest}\n                </label>\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\n                  <input\n                    class=\"form-control\"\n                    type=\"checkbox\"\n                    checked={this.bookedByData.emailGuest}\n                    id={'emailTheGuestId'}\n                    onChange={event => this.handleDataChange('emailGuest', event)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n.currency {\n  display: block;\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  height: auto;\n  left: 10px;\n}\n.rate-input {\n  font-size: 14px;\n  line-height: 0;\n  padding: 0;\n  height: 0;\n  border-left: 0;\n}\n.rate-input-container {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  flex: 1;\n}\n.new-currency {\n  color: #3b4781;\n  border: 1px solid #cacfe7;\n  font-size: 0.975rem;\n  height: 2rem;\n  background: white;\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n.input-group-prepend span[data-state='focus'] {\n  border-color: var(--blue);\n}\n.input-group-prepend span[data-disabled] {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n}\n.non-ref-span {\n  font-size: 12px;\n  color: var(--green);\n}\n.rateplan-name-container {\n  margin-bottom: 0.5rem !important;\n}\n.rateplan-container {\n  margin-top: 0.5rem;\n}\n@media only screen and (min-width: 1200px) {\n  .rateplan-name-container {\n    width: 40%;\n    margin-top: 0;\n  }\n  .rateplan-container {\n    width: 40%;\n  }\n}\n@media only screen and (min-width: 991px) {\n  .max-w-300 {\n    max-width: 200px;\n  }\n  .rate-input-container {\n    max-width: 50px;\n  }\n  .rateplan-name-container {\n    margin-bottom: 0 !important;\n  }\n}\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\n  .rateplan-name-container {\n    width: 40%;\n  }\n  .price-amount {\n    max-width: 150px !important;\n  }\n}\n@media only screen and (max-width: 768px) {\n  .booking-btn {\n    width: 100%;\n  }\n}\n\n.total-nights-container {\n  width: max-content;\n}\n.nightBorder {\n  border-left-width: 0;\n  border-top-right-radius: 3px !important;\n  border-bottom-right-radius: 3px !important;\n}\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport locales from '@/stores/locales.store';\nimport { RatePlan, Variation } from '@/models/property';\nimport booking_store, { IRatePlanSelection, reserveRooms, resetReserved, updateRoomParams } from '@/stores/booking.store';\n\n@Component({\n  tag: 'igl-rate-plan',\n  styleUrl: 'igl-rate-plan.css',\n  scoped: true,\n})\nexport class IglRatePlan {\n  // Used Props with type annotations\n  @Prop() ratePlan: RatePlan;\n  @Prop() roomTypeId: number;\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\n  @Prop() currency!: { symbol: string };\n  @Prop() shouldBeDisabled!: boolean;\n  @Prop() bookingType: string = 'PLUS_BOOKING';\n  @Prop() isBookDisabled: boolean = false;\n  @Prop() visibleInventory!: IRatePlanSelection;\n\n  @Event() buttonClicked!: EventEmitter<{ [key: string]: any }>;\n\n  // Determine if the form inputs should be disabled\n  private disableForm(): boolean {\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\n      return false;\n    }\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\n  }\n\n  // Update the rate plan selection in the booking store\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\n    const { roomTypeId, ratePlan } = this;\n    const currentSelections = booking_store.ratePlanSelections;\n\n    booking_store.ratePlanSelections = {\n      ...currentSelections,\n      [roomTypeId]: {\n        ...currentSelections[roomTypeId],\n        [ratePlan.id]: {\n          ...currentSelections[roomTypeId][ratePlan.id],\n          ...props,\n        },\n      },\n    };\n  }\n\n  // Handle changes to select inputs\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\n    if (key === 'adult_child_offering') {\n      this.handleVariationChange(value);\n    } else if (key === 'rate') {\n      this.updateRateplanSelection({ view_mode: value as any });\n    } else if (key === 'totalRooms') {\n      reserveRooms({\n        roomTypeId: this.roomTypeId,\n        ratePlanId: this.ratePlan.id,\n        rooms: Number(value),\n      });\n    }\n  }\n\n  // Navigate to the next page for booking\n  private bookProperty(): void {\n    if (this.bookingType === 'BAR_BOOKING') {\n      resetReserved();\n    }\n    this.reserveRoom();\n    this.buttonClicked.emit({ key: 'next' });\n  }\n\n  private reserveRoom() {\n    reserveRooms({\n      roomTypeId: this.roomTypeId,\n      ratePlanId: this.ratePlan.id,\n      rooms: 1,\n      guest: [\n        {\n          last_name: booking_store.guest?.last_name,\n          first_name: booking_store.guest?.first_name,\n          unit: this.roomTypeId === booking_store.guest?.roomtype_id ? booking_store.guest?.unit : null,\n          bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest?.bed_preference : null,\n          infant_nbr: this.visibleInventory.selected_variation?.child_nbr > 0 ? booking_store.guest?.infant_nbr : null,\n        },\n      ],\n    });\n  }\n  // Render the rate amount\n  private renderRate(): string {\n    const { visibleInventory } = this;\n    if (!visibleInventory) return '';\n    if (visibleInventory.is_amount_modified) {\n      return visibleInventory.rp_amount.toString();\n    }\n    const { selected_variation, view_mode } = visibleInventory;\n    const amount = view_mode === '001' ? selected_variation?.discounted_amount : selected_variation?.amount_per_night_gross;\n    return amount?.toString() || '';\n  }\n\n  // Format variation for display\n  private formatVariation(variation: Variation): string {\n    if (!variation) return '';\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\n    const children =\n      variation.child_nbr > 0\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\n        : '';\n    return children ? `${adults} ${children}` : adults;\n  }\n\n  // Get tooltip messages for the rate plan\n  private getTooltipMessages(): string | undefined {\n    const { ratePlan, visibleInventory } = this;\n    const selectedVariation = visibleInventory?.selected_variation;\n    if (!selectedVariation) return;\n\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\n\n    if (!matchingVariation) return;\n\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\n\n    let tooltip = '';\n    if (cancellationPolicy) {\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\n    }\n    if (guaranteePolicy) {\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\n    }\n    return tooltip || undefined;\n  }\n\n  // Handle variation change when a different option is selected\n  private async handleVariationChange(value: string): Promise<void> {\n    const { ratePlan, roomTypeId } = this;\n    const variations = ratePlan.variations || [];\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\n\n    if (!selectedVariation) return;\n\n    updateRoomParams({\n      params: { selected_variation: selectedVariation },\n      ratePlanId: ratePlan.id,\n      roomTypeId,\n    });\n  }\n\n  // Reset reserved rooms in the booking store\n\n  render() {\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\n    const isAvailableToBook = ratePlan.is_available_to_book;\n    const disableForm = this.disableForm();\n    const selectedVariation = visibleInventory?.selected_variation;\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\n    // if (!this.visibleInventory) {\n    //   return null;\n    // }\n    return (\n      <Host data-testid={`rp-${this.ratePlan.id}`}>\n        <div\n          class={`d-flex mt-1  p-0 ${\n            isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'\n          }`}\n        >\n          <div data-testid={'rp_name'} class=\"rateplan-name-container m-0 p-0  d-flex align-items-center\" style={{ gap: '0.5rem' }}>\n            {bookingType === 'BAR_BOOKING' ? (\n              <p class=\"m-0 p-0\">\n                {/* <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span> */}\n                <span>\n                  {ratePlan.name.split('/')[1]} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\n                </span>\n              </p>\n            ) : (\n              <span>\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\n              </span>\n            )}\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\n          </div>\n\n          {isAvailableToBook ? (\n            <div class=\"d-md-flex m-md-0  justify-content-md-end align-items-md-center flex-fill rateplan-container\">\n              <div class=\"flex-fill max-w-300 flex-grow-1\">\n                <fieldset class=\"position-relative flex-grow-1 w-100\">\n                  <select\n                    disabled={disableForm}\n                    data-testid=\"adult-child-offering\"\n                    class=\"form-control input-sm flex-grow-1 w-100\"\n                    id={uuidv4()}\n                    onChange={evt => this.handleDataChange('adult_child_offering', evt)}\n                  >\n                    {formattedVariations?.map(variation => (\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\n                        {variation}\n                      </option>\n                    ))}\n                  </select>\n                </fieldset>\n              </div>\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0 flex-grow-1\">\n                  <ir-price-input\n                    testId={'amount_input'}\n                    disabled={disableForm}\n                    onTextChange={e =>\n                      this.updateRateplanSelection({\n                        is_amount_modified: true,\n                        rp_amount: Number(e.detail),\n                      })\n                    }\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\n                    class=\"ir-br-input-none price-amount w-100 flex-grow-1\"\n                    currency={currency.symbol}\n                    value={this.renderRate()}\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\n                  ></ir-price-input>\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\n                    <select\n                      data-testid={'nigh_stay_select'}\n                      disabled={disableForm}\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\n                      id={uuidv4()}\n                      onChange={evt =>\n                        this.updateRateplanSelection({\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\n                        })\n                      }\n                    >\n                      {ratePricingMode.map(data => (\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\n                          {data.CODE_VALUE_EN}\n                        </option>\n                      ))}\n                    </select>\n                  </fieldset>\n                </div>\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\n                  <div class=\"flex-fill mt-0 ml-1 m-0 mt-md-0 p-0\">\n                    <fieldset class=\"position-relative\">\n                      <select\n                        data-testid={'inventory_select'}\n                        disabled={visibleInventory.visibleInventory === 0}\n                        class=\"form-control input-sm\"\n                        id={uuidv4()}\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\n                      >\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\n                          <option value={i} selected={visibleInventory.reserved === i}>\n                            {i}\n                          </option>\n                        ))}\n                      </select>\n                    </fieldset>\n                  </div>\n                )}\n              </div>\n              {bookingType === 'EDIT_BOOKING' && (\n                <Fragment>\n                  <div class=\"m-0 p-0 ml-md-1 mt-md-0 d-none d-md-block\">\n                    <fieldset class=\"position-relative\">\n                      <input\n                        data-testid={'inventory_radio'}\n                        disabled={disableForm}\n                        type=\"radio\"\n                        name=\"ratePlanGroup\"\n                        value=\"1\"\n                        onChange={() => {\n                          resetReserved();\n                          this.reserveRoom();\n                        }}\n                        checked={visibleInventory.reserved === 1}\n                      />\n                    </fieldset>\n                  </div>\n                  <button\n                    data-testid=\"book_property\"\n                    disabled={disableForm}\n                    type=\"button\"\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\n                    onClick={() => {\n                      resetReserved();\n                      this.reserveRoom();\n                      this.bookProperty();\n                    }}\n                  >\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\n                  </button>\n                </Fragment>\n              )}\n\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\n                <button\n                  data-testid=\"book\"\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\n                  type=\"button\"\n                  class=\"btn btn-primary booking-btn mt-md-0 btn-sm ml-md-1 mt-1\"\n                  onClick={() => this.bookProperty()}\n                >\n                  {locales.entries.Lcz_Book}\n                </button>\n              )}\n            </div>\n          ) : (\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.margin-bottom-8 {\n  margin-bottom: 8px !important;\n}\n","import { RoomType } from '@/models/property';\nimport { getVisibleInventory } from '@/stores/booking.store';\nimport { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\n\n@Component({\n  tag: 'igl-room-type',\n  styleUrl: 'igl-room-type.css',\n  scoped: true,\n})\nexport class IglRoomType {\n  @Prop() roomType: RoomType;\n  @Prop() bookingType = 'PLUS_BOOKING';\n  @Prop() dateDifference: number;\n  @Prop() ratePricingMode = [];\n  @Prop() roomInfoId: number | null = null;\n  @Prop() currency;\n  @Prop() initialRoomIds: any;\n  @Prop() isBookDisabled: boolean;\n\n  @State() selectedRooms: number[] = [];\n  @State() totalRooms: number;\n  @State() roomsDistributions: number[] = [];\n\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\n\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\n\n  render() {\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\n\n    return (\n      <Host>\n        {isValidBookingType && this.roomType.rateplans?.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomType.name}</div>}\n        {this.roomType.rateplans?.map(ratePlan => {\n          if (!!ratePlan.variations) {\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomType.id;\n            // let roomId = -1;\n            // if (shouldBeDisabled && this.initialRoomIds) {\n            //   roomId = this.initialRoomIds.roomId;\n            // }\n            const visibleInventory = getVisibleInventory(this.roomType.id, ratePlan.id);\n            return (\n              <igl-rate-plan\n                // is_bed_configuration_enabled={this.roomType.is_bed_configuration_enabled}\n                // index={index}\n                isBookDisabled={this.isBookDisabled}\n                visibleInventory={visibleInventory}\n                key={`rate-plan-${ratePlan.id}`}\n                ratePricingMode={this.ratePricingMode}\n                class={isValidBookingType ? '' : ''}\n                currency={this.currency}\n                // dateDifference={this.dateDifference}\n                ratePlan={ratePlan}\n                roomTypeId={this.roomType.id}\n                // totalAvailableRooms={this.roomsDistributions[index]}\n                bookingType={this.bookingType}\n                shouldBeDisabled={shouldBeDisabled}\n                // physicalrooms={this.roomType.physicalrooms}\n                // defaultRoomId={roomId}\n              ></igl-rate-plan>\n            );\n          }\n          return null;\n        })}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n}\n.selected {\n  color: #fff;\n  text-decoration: none;\n  background-color: #666ee8;\n}\ninput {\n  width: 100%;\n  position: relative;\n  border-top-left-radius: 0px !important;\n  border-left: 0 !important;\n  border-bottom-left-radius: 0px !important;\n}\nlabel {\n  margin: 0;\n  border-top-right-radius: 0px !important;\n  border-right: 0 !important;\n  border-bottom-right-radius: 0px !important;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n\n  padding-right: 3px !important;\n  justify-content: center;\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\nlabel[data-state='focused'] {\n  border-color: var(--blue);\n}\n\n.combobox {\n  margin: 0;\n  top: 30px;\n  min-width: 100%;\n  width: max-content;\n  display: block;\n  z-index: 10000;\n  padding: 1px;\n  background: white;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  padding: 5px 0;\n  max-height: 250px;\n  overflow-y: auto;\n}\n.dropdown-item {\n  cursor: pointer;\n}\nbutton {\n  all: unset;\n  right: 4px;\n}\n.combobox p,\nspan,\nloader-container {\n  padding: 5px 16px;\n  margin: 0px;\n  margin-top: 2px;\n  width: 100%;\n}\n.combobox p {\n  cursor: pointer;\n}\n.combobox p:hover {\n  background: #f4f5fa;\n}\n\n.combobox p[data-selected],\n.combobox p[data-selected]:hover {\n  color: #fff;\n  text-decoration: none;\n  background-color: #666ee8;\n}\n.loader {\n  width: 14px;\n  height: 14px;\n  border: 2px solid #0f0f0f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { BookingService } from '../../../services/booking.service';\nimport { IToast } from '../ir-toast/toast';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-autocomplete',\n  styleUrl: 'ir-autocomplete.css',\n  scoped: true,\n})\nexport class IrAutocomplete {\n  @Prop() duration: number = 300;\n  @Prop() placeholder: string = '';\n  @Prop() propertyId: number;\n  @Prop() isSplitBooking: boolean = false;\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\n  @Prop() name: string = '';\n  @Prop() inputId: string = v4();\n  @Prop() required: boolean = false;\n  @Prop() disabled: boolean = false;\n  @Prop() value: string;\n  @Prop() from_date: string = '';\n  @Prop() to_date: string = '';\n  @Prop() danger_border: boolean;\n  @Prop() testId: string;\n\n  @State() inputValue: string = '';\n  @State() data: any[] = [];\n  @State() selectedIndex: number = -1;\n  @State() isComboBoxVisible: boolean = false;\n  @State() isLoading: boolean = true;\n  @State() isItemSelected: boolean;\n  @State() inputFocused: boolean = false;\n\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\n  @Event() inputCleared: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  @Element() el: HTMLElement;\n  private inputRef: HTMLInputElement;\n  private debounceTimer: any;\n  private bookingService = new BookingService();\n  private no_result_found = '';\n  componentWillLoad() {\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const dataSize = this.data.length;\n    const itemHeight = this.getHeightOfPElement();\n    if (dataSize > 0) {\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\n          this.adjustScrollPosition(itemHeight);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\n          this.adjustScrollPosition(itemHeight);\n          break;\n        case 'Enter':\n        case ' ':\n        case 'ArrowRight':\n          event.preventDefault();\n          this.selectItem(this.selectedIndex);\n          break;\n        case 'Escape':\n          this.inputRef?.blur();\n          this.isComboBoxVisible = false;\n          break;\n      }\n    }\n  }\n  getHeightOfPElement() {\n    const combobox = this.el.querySelector('.combobox');\n    if (combobox) {\n      const pItem = combobox.querySelector('p');\n      return pItem ? pItem.offsetHeight : 0;\n    }\n    return 0;\n  }\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\n    const combobox = this.el.querySelector('.combobox');\n    if (combobox) {\n      const margin = 2;\n      const itemTotalHeight = itemHeight + margin;\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\n      combobox.scrollTo({\n        top: newScrollTop,\n        behavior: 'auto',\n      });\n    }\n  }\n\n  selectItem(index) {\n    if (this.data[index]) {\n      this.isItemSelected = true;\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\n      this.inputValue = '';\n      this.resetCombobox();\n    }\n  }\n\n  debounceFetchData() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => {\n      this.fetchData();\n    }, this.duration);\n  }\n\n  async fetchData() {\n    try {\n      this.isLoading = true;\n      let data = [];\n      if (!this.isSplitBooking) {\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\n      } else {\n        if (this.inputValue.split(' ').length === 1) {\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\n        }\n      }\n      this.data = data;\n      if (!this.isComboBoxVisible) {\n        this.isComboBoxVisible = true;\n      }\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  handleInputChange(event: Event) {\n    this.inputValue = (event.target as HTMLInputElement).value;\n    if (this.inputValue) {\n      this.debounceFetchData();\n    } else {\n      clearTimeout(this.debounceTimer);\n      this.resetCombobox(false);\n    }\n  }\n\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isComboBoxVisible = false;\n    }\n  }\n  handleBlur() {\n    this.inputFocused = false;\n    setTimeout(() => {\n      if (this.isDropdownItem(document.activeElement)) {\n        return;\n      }\n      if (this.isSplitBooking) {\n        if (!this.isItemSelected) {\n          if (this.data.length > 0) {\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\n          } else {\n            if (this.inputValue !== '') {\n              this.toast.emit({\n                type: 'error',\n                description: '',\n                title: `The Booking #${this.inputValue} is not Available`,\n                position: 'top-right',\n              });\n              this.inputCleared.emit();\n            }\n          }\n          this.inputValue = '';\n          this.resetCombobox();\n        } else {\n          this.isItemSelected = false;\n        }\n      } else {\n        if (!this.isItemSelected) {\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\n          this.inputValue = '';\n          this.resetCombobox();\n        } else {\n          this.isItemSelected = false;\n        }\n      }\n    }, 200);\n  }\n  isDropdownItem(element) {\n    return element && element.closest('.combobox');\n  }\n\n  disconnectedCallback() {\n    clearTimeout(this.debounceTimer);\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\n    this.inputRef?.removeEventListener('click', this.selectItem);\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\n  }\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\n      this.selectItem(index);\n      event.preventDefault();\n    } else if (event.key === 'Escape') {\n      this.isComboBoxVisible = false;\n      this.inputRef?.blur();\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  renderDropdown() {\n    if (this.inputValue !== '') {\n      return (\n        <div class={`position-absolute dropdown-menu  rounded combobox`}>\n          {this.data?.map((d, index) => (\n            <p\n              role=\"button\"\n              class=\"dropdown-item\"\n              onKeyDown={e => this.handleItemKeyDown(e, index)}\n              data-selected={this.selectedIndex === index}\n              tabIndex={0}\n              onClick={() => this.selectItem(index)}\n            >\n              {this.isSplitBooking ? (\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\n              ) : (\n                <div class={'d-flex align-items-center flex-fill'}>\n                  <p class={'p-0 m-0'}>\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\n                  </p>\n                </div>\n              )}\n            </p>\n          ))}\n          {this.isLoading && (\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\n              <div class=\"loader\"></div>\n            </div>\n          )}\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\n        </div>\n      );\n    }\n  }\n  handleFocus() {\n    this.isComboBoxVisible = true;\n    this.inputFocused = true;\n  }\n  clearInput() {\n    this.inputValue = '';\n    this.resetCombobox();\n    this.inputCleared.emit(null);\n  }\n  resetCombobox(withblur: boolean = true) {\n    if (withblur) {\n      this.inputRef?.blur();\n    }\n    this.data = [];\n    this.selectedIndex = -1;\n    this.isComboBoxVisible = false;\n  }\n  render() {\n    return (\n      <Host>\n        <div class={'d-flex align-items-center '}>\n          <label data-state={this.inputFocused ? 'focused' : 'blured'} htmlFor={this.inputId} class={`form-control input-sm ${this.danger_border && 'border-danger'}`}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\n              />\n            </svg>\n          </label>\n          <input\n            data-testid={this.testId}\n            required={this.required}\n            disabled={this.disabled}\n            id={this.inputId}\n            onKeyDown={this.handleKeyDown.bind(this)}\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\n            type={this.type}\n            name={this.name}\n            value={this.value || this.inputValue}\n            placeholder={this.placeholder}\n            onBlur={this.handleBlur.bind(this)}\n            autoComplete=\"none\"\n            onInput={this.handleInputChange.bind(this)}\n            onFocus={this.handleFocus.bind(this)}\n            ref={el => (this.inputRef = el)}\n          />\n          {this.inputValue && (\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\n              <p class={'sr-only'}>clear input</p>\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n                  fill=\"currentColor\"\n                  fill-rule=\"evenodd\"\n                  clip-rule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          )}\n        </div>\n        {this.isComboBoxVisible && this.renderDropdown()}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n.combobox-menu {\n  max-height: 200px;\n  overflow: auto;\n}\n","import { ICountry } from '@/models/IBooking';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-country-picker',\n  styleUrl: 'ir-country-picker.css',\n  scoped: true,\n})\nexport class IrCountryPicker {\n  /**\n   * List of countries to display in the dropdown.\n   */\n  @Prop() countries: ICountry[] = [];\n\n  /**\n   * Currently selected country.\n   */\n  @Prop() country: ICountry;\n\n  /**\n   * Whether to show an error state on the input.\n   */\n  @Prop({ mutable: true }) error: boolean;\n\n  /**\n   * The property-associated country, shown separately if relevant.\n   */\n  @Prop() propertyCountry: ICountry;\n\n  /**\n   * The label to display for the input.\n   */\n  @Prop() label: string;\n\n  /**\n   * Test ID for automated testing.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Whether to automatically validate the input.\n   */\n  @Prop() autoValidate: boolean = false;\n\n  /**\n   * The current input value typed by the user.\n   */\n  @State() inputValue: string;\n\n  /**\n   * The currently selected country object.\n   */\n  @State() selectedCountry: ICountry;\n\n  /**\n   * Filtered list of countries based on the user's input.\n   */\n  @State() filteredCountries: ICountry[] = [];\n\n  /**\n   * Whether the input is currently being used for searching.\n   */\n  @State() searching: boolean = false;\n\n  /**\n   * Event emitted when a country is selected.\n   */\n  @Event() countryChange: EventEmitter<ICountry>;\n\n  private debounceTimeout: NodeJS.Timeout;\n\n  componentWillLoad() {\n    this.filteredCountries = [...this.countries];\n    if (this.country) {\n      this.inputValue = this.country.name;\n      this.selectedCountry = this.country;\n    }\n  }\n\n  @Watch('country')\n  handleCountryChange(newCountry: ICountry, oldCountry: ICountry) {\n    if (newCountry?.id !== oldCountry?.id) {\n      this.inputValue = this.country?.name;\n      this.selectedCountry = newCountry;\n    }\n  }\n  /**\n   * Filters the list of countries based on the current input.\n   */\n  private filterCountries() {\n    if (this.inputValue === '' && this.country) {\n      this.selectCountry(null);\n    }\n    clearTimeout(this.debounceTimeout);\n    this.debounceTimeout = setTimeout(() => {\n      if (!this.inputValue) {\n        this.filteredCountries = [...this.countries];\n      } else {\n        this.filteredCountries = this.countries.filter(c => c.name.toLowerCase().includes(this.inputValue.toLowerCase()));\n      }\n    }, 300);\n  }\n  /**\n   * Selects a country and emits the change event.\n   */\n  private selectCountry(c: ICountry | null) {\n    this.selectedCountry = c;\n    this.inputValue = c?.name;\n    this.filteredCountries = [...this.countries];\n    this.countryChange.emit(c);\n  }\n  /**\n   * Scrolls to the selected country in the dropdown for accessibility.\n   */\n  private scrollToSelected() {\n    setTimeout(() => {\n      const dropdownItem = document.querySelector(`.dropdown-item.active`);\n      if (dropdownItem) {\n        dropdownItem.scrollIntoView({ behavior: 'instant', block: 'center' });\n      }\n    }, 100);\n  }\n  render() {\n    const shouldShowPropertyCountry = this.filteredCountries.length > 0 && this.propertyCountry && (!this.searching || (this.searching && this.inputValue === ''));\n    return (\n      <form class=\"dropdown m-0 p-0\">\n        <ir-input-text\n          onTextChange={e => {\n            if (!this.searching) {\n              this.searching = true;\n            }\n            this.inputValue = e.detail;\n            this.filterCountries();\n          }}\n          testId={this.testId}\n          autoValidate={this.autoValidate}\n          label={this.label}\n          error={this.error}\n          placeholder=\"\"\n          class=\"m-0 p-0\"\n          value={this.inputValue}\n          id=\"dropdownMenuCombobox\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onInputFocus={() => this.scrollToSelected()}\n          onInputBlur={() => {\n            this.searching = false;\n            if (this.filteredCountries.length > 0 && this.inputValue && this.inputValue.trim() !== '') {\n              this.selectCountry(this.filteredCountries[0]);\n            }\n          }}\n        ></ir-input-text>\n\n        <div class=\"dropdown-menu combobox-menu\" aria-labelledby=\"dropdownMenuCombobox\">\n          {shouldShowPropertyCountry && (\n            <Fragment>\n              <button\n                type=\"button\"\n                class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === this.propertyCountry.id ? 'active' : ''}`}\n                onClick={() => {\n                  this.selectCountry(this.propertyCountry);\n                }}\n              >\n                <img src={this.propertyCountry.flag} alt={this.propertyCountry.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n                <p class=\"pl-1 m-0\">{this.propertyCountry.name}</p>\n              </button>\n              <div class=\"dropdown-divider\"></div>\n            </Fragment>\n          )}\n          {this.filteredCountries?.map(c => (\n            <button\n              key={c.id}\n              type=\"button\"\n              class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === c.id ? 'active' : ''}`}\n              onClick={() => {\n                this.selectCountry(c);\n              }}\n            >\n              <img src={c.flag} alt={c.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n              <p class=\"pl-1 m-0\">{c.name}</p>\n            </button>\n          ))}\n          {this.filteredCountries?.length === 0 && <p class=\"dropdown-item-text\">Invalid Country</p>}\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n  width: 100%;\n}\n.date-range-input {\n  width: 100%;\n}\n","import { Component, h, Element, Prop, Event, EventEmitter, Host, Watch, Method } from '@stencil/core';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-date-range',\n  styleUrl: 'ir-date-range.css',\n  scoped: true,\n})\nexport class IrDateRange {\n  @Element() private element: HTMLElement;\n  /**\n   * Start date for the date range.\n   */\n  @Prop() fromDate: Date;\n\n  /**\n   * End date for the date range.\n   */\n  @Prop() toDate: Date;\n\n  /**\n   * Single date selection value (used in single date picker mode).\n   */\n  @Prop() date: Date;\n\n  /**\n   * Defines which side the calendar opens to.\n   * Options: `'left'`, `'right'`, `'center'`.\n   */\n  @Prop() opens: 'left' | 'right' | 'center';\n\n  /**\n   * Whether to apply the selected range automatically without clicking 'Apply'.\n   */\n  @Prop() autoApply: boolean;\n\n  /**\n   * First day of the week (0 = Sunday, 1 = Monday, ...).\n   */\n  @Prop() firstDay: number = 1;\n\n  /**\n   * Month names shown in the calendar header.\n   */\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  /**\n   * Abbreviated names of the days of the week.\n   */\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n\n  /**\n   * Date format used in the input and picker.\n   */\n  @Prop() format: string = 'MMM DD, YYYY';\n\n  /**\n   * Separator string used between start and end dates.\n   */\n  @Prop() separator: string = ' - ';\n\n  /**\n   * Text shown on the Apply button.\n   */\n  @Prop() applyLabel: string = 'Apply';\n\n  /**\n   * Text shown on the Cancel button.\n   */\n  @Prop() cancelLabel: string = 'Cancel';\n\n  /**\n   * Label for the \"From\" date input.\n   */\n  @Prop() fromLabel: string = 'Form';\n\n  /**\n   * Label for the \"To\" date input.\n   */\n  @Prop() toLabel: string = 'To';\n\n  /**\n   * Label used for the custom date range option.\n   */\n  @Prop() customRangeLabel: string = 'Custom';\n\n  /**\n   * Label for the week column in the calendar.\n   */\n  @Prop() weekLabel: string = 'W';\n\n  /**\n   * Disables the date range input when true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Enables single date selection mode.\n   */\n  @Prop() singleDatePicker = false;\n\n  /**\n   * Minimum selectable date.\n   */\n  @Prop() minDate: string | Date;\n\n  /**\n   * Maximum selectable date.\n   */\n  @Prop() maxDate: string | Date;\n\n  /**\n   * Maximum range span (e.g., `{ days: 240 }`).\n   */\n  @Prop() maxSpan: moment.DurationInputArg1 = { days: 240 };\n\n  /**\n   * Emits when a new date range is selected.\n   *\n   * Example:\n   * ```tsx\n   * <ir-date-range onDateChanged={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() dateChanged: EventEmitter<{\n    start: moment.Moment;\n    end: moment.Moment;\n  }>;\n\n  private openDatePickerTimeout: NodeJS.Timeout;\n  private dateRangeInput: HTMLElement;\n  componentWillLoad() {\n    if (!document.getElementById('ir-daterangepicker-style')) {\n      const style = document.createElement('style');\n      style.id = 'ir-daterangepicker-style';\n      style.textContent = `\n        .daterangepicker {\n          margin-top: 14px;\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }\n  componentDidLoad() {\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\n    this.initializeDateRangePicker();\n    this.updateDateRangePickerDates();\n  }\n  disconnectedCallback() {\n    if (this.openDatePickerTimeout) {\n      clearTimeout(this.openDatePickerTimeout);\n    }\n    $(this.dateRangeInput).data('daterangepicker').remove();\n  }\n  @Watch('minDate')\n  handleMinDateChange() {\n    $(this.dateRangeInput).data('daterangepicker').remove();\n    this.initializeDateRangePicker();\n  }\n  @Watch('date')\n  datePropChanged() {\n    this.updateDateRangePickerDates();\n  }\n  /**\n   * Opens the date picker programmatically.\n   *\n   * Example:\n   * ```ts\n   * const el = document.querySelector('ir-date-range');\n   * await el.openDatePicker();\n   * ```\n   */\n  @Method()\n  async openDatePicker() {\n    this.openDatePickerTimeout = setTimeout(() => {\n      this.dateRangeInput.click();\n    }, 20);\n  }\n  /**\n   * Updates the current dates displayed in the picker\n   * (used when props change externally).\n   */\n  private updateDateRangePickerDates() {\n    const picker = $(this.dateRangeInput).data('daterangepicker');\n    if (!picker) {\n      console.error('Date range picker not initialized.');\n      return;\n    }\n\n    // Adjust how dates are set based on whether it's a single date picker or range picker.\n    if (this.singleDatePicker) {\n      const newDate = this.date ? moment(this.date) : moment();\n      picker.setStartDate(newDate);\n      picker.setEndDate(newDate); // For single date picker, start and end date might be the same.\n    } else {\n      const newStartDate = this.fromDate ? moment(this.fromDate) : moment();\n      const newEndDate = this.toDate ? moment(this.toDate) : newStartDate.clone().add(1, 'days');\n      picker.setStartDate(newStartDate);\n      picker.setEndDate(newEndDate);\n    }\n  }\n  /**\n   * Initializes the date range picker using jQuery plugin with given props.\n   */\n  private initializeDateRangePicker() {\n    $(this.dateRangeInput).daterangepicker(\n      {\n        singleDatePicker: this.singleDatePicker,\n        opens: this.opens,\n        startDate: moment(this.fromDate),\n        endDate: moment(this.toDate),\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\n        maxSpan: this.maxSpan,\n        autoApply: this.autoApply,\n        locale: {\n          format: this.format,\n          separator: this.separator,\n          applyLabel: this.applyLabel,\n          cancelLabel: this.cancelLabel,\n          fromLabel: this.fromLabel,\n          toLabel: this.toLabel,\n          customRangeLabel: this.customRangeLabel,\n          weekLabel: this.weekLabel,\n          daysOfWeek: this.daysOfWeek,\n          monthNames: this.monthNames,\n          firstDay: this.firstDay,\n        },\n      },\n      (start, end) => {\n        this.dateChanged.emit({ start, end });\n      },\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <input class=\"date-range-input\" type=\"button\" disabled={this.disabled} />\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  font-size: 13.65px !important;\n  width: 100%;\n}\n.mx-01 {\n  --m: 5px;\n  margin-right: var(--m) !important;\n  margin-left: var(--m) !important;\n}\n","import locales from '@/stores/locales.store';\nimport { calculateDaysBetweenDates } from '@/utils/booking';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-date-view',\n  styleUrl: 'ir-date-view.css',\n  scoped: true,\n})\nexport class IrDateView {\n  @Prop() from_date: string | Date | moment.Moment;\n  @Prop() to_date: string | Date | moment.Moment;\n  @Prop() showDateDifference: boolean = true;\n  @Prop() dateOption: string = 'YYYY-MM-DD';\n\n  @State() dates: { from_date: string; to_date: string; date_difference: number };\n\n  componentWillLoad() {\n    this.initializeDates();\n  }\n\n  @Watch('from_date')\n  handleFromDateChange(newVal: any, oldVal: any) {\n    if (newVal !== oldVal) {\n      this.initializeDates();\n    }\n  }\n\n  @Watch('to_date')\n  handleToDateChange(newVal: any, oldVal: any) {\n    if (newVal !== oldVal) {\n      this.initializeDates();\n    }\n  }\n\n  private initializeDates() {\n    this.convertDate('from_date', this.from_date);\n    this.convertDate('to_date', this.to_date);\n    const fromDate = moment(this.dates.from_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\n    const toDate = moment(this.dates.to_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\n    this.dates.date_difference = calculateDaysBetweenDates(fromDate, toDate);\n  }\n\n  private convertDate(key: 'from_date' | 'to_date', date: string | Date | moment.Moment) {\n    this.dates = this.dates || {\n      from_date: '',\n      to_date: '',\n      date_difference: 0,\n    };\n    if (!date) {\n      return;\n    }\n    if (typeof date === 'string') {\n      this.dates[key] = moment(date, this.dateOption).format('MMM DD, YYYY');\n    } else if (date instanceof Date) {\n      this.dates[key] = moment(date).format('MMM DD, YYYY');\n    } else if (moment.isMoment(date)) {\n      this.dates[key] = date.format('MMM DD, YYYY');\n    } else {\n      console.error('Unsupported date type');\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"d-flex align-items-center\">\n        <span>{this.dates.from_date}</span>{' '}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mx-01\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\n          <path\n            fill=\"currentColor\"\n            d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n          />\n        </svg>\n        <span>\n          {this.dates.to_date}{' '}\n          {this.showDateDifference && (\n            <span class=\"mx-01\">\n              {this.dates.date_difference}\n              {'   '}\n              {this.dates.date_difference > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\n            </span>\n          )}\n        </span>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.input-container {\n  display: flex;\n  align-items: center;\n  padding: 0 !important;\n}\n.input-container:focus-within {\n  border-color: #1e9ff2;\n}\n.border-theme {\n  border-color: #cacfe7;\n}\n.input-container input {\n  flex: 1;\n  border: 0;\n}\n.input-container input:focus {\n  outline: none;\n}\n.dropdown-trigger {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: white;\n  border: 0;\n  border-right: 1px solid #cacfe7;\n}\n.ir-dropdown-container {\n  position: absolute;\n  z-index: 1000;\n  bottom: -30px;\n  width: 100%;\n  left: 0;\n  background: white;\n}\n.input-container label {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0 5px;\n}\n.flag {\n  height: 1rem;\n  aspect-ratio: 4/3;\n  border-radius: 3px;\n}\n.is-invalid {\n  border-color: #ff4961;\n}\n.phone_prefix_label {\n  padding: 0 0.5rem;\n  margin: 0;\n}\n:host {\n  /* ========= Floating label ========= */\n  /** @prop --ir-floating-label-fg: Resting label color. */\n  --ir-floating-label-fg: #6c757d;\n\n  /** @prop --ir-floating-label-fg-focus: Floated/active label color. */\n  --ir-floating-label-fg-focus: #495057;\n\n  /** @prop --ir-floating-label-bg: Background behind the floated label “chip”. */\n  --ir-floating-label-bg: #fff;\n\n  /** @prop --ir-floating-label-scale: Scale applied to the label when floated. */\n  --ir-floating-label-scale: 0.88;\n\n  /** @prop --ir-floating-label-float-translateY: translateY used when label floats (relative to its top=0). */\n  --ir-floating-label-float-translateY: -70%;\n\n  /** @prop --ir-floating-label-resting-offset-inline: Inline offset for the resting label (LTR=left, RTL=right). */\n  --ir-floating-label-resting-offset-inline: 0.9rem;\n\n  /** @prop --ir-floating-phone-input-radius: Radius of the select. */\n  --ir-floating-phone-input-radius: 0.21rem;\n\n  /** @prop --ir-floating-phone-input-height: Fixed height for the input element. */\n  --ir-floating-phone-input-height: 2rem;\n  /* existing design tokens you referenced */\n  --ir-danger: #dc3545;\n  --ir-disabled-fg: #9aa0a6;\n}\n\n:host .input-container.has-floating {\n  position: relative;\n  padding-top: 0.9rem;\n}\n\n:host .floating-label {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  position: absolute;\n  padding: 0 0.4rem;\n  z-index: 10;\n  color: var(--ir-floating-label-fg);\n  background: white;\n  transition: transform 120ms ease, color 120ms ease, top 120ms ease, background-color 120ms ease, opacity 120ms ease;\n  opacity: 0.95;\n  line-height: 1;\n  white-space: nowrap;\n}\n:host .floating-label:dir(rtl) {\n  right: 95px;\n}\n:host .floating-label:dir(ltr) {\n  left: 95px;\n}\n\n:host .floating-label.active {\n  top: 0;\n  transform: translateY(var(--ir-floating-label-float-translateY)) scale(var(--ir-floating-label-scale));\n  background: var(--ir-floating-label-bg);\n  color: var(--ir-floating-label-fg-focus);\n  font-size: 12px;\n  padding: 0;\n  opacity: 0.95;\n}\n\n/* :host .input-container.has-floating input {\n  padding-top: 0.9rem;\n}\n\n:host .input-container.has-floating .dropdown-trigger:focus ~ .floating-label,\n:host .input-container.has-floating .dropdown-trigger:hover ~ .floating-label {\n  opacity: 0.9;\n} */\n","import { ICountry } from '@/components';\nimport { BookingService } from '@/services/booking.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-phone-input',\n  styleUrl: 'ir-phone-input.css',\n  scoped: true,\n})\nexport class IrPhoneInput {\n  @Element() el: HTMLElement;\n  /**\n   * Label displayed next to the phone input.\n   */\n  @Prop() label: string;\n\n  /**\n   * Initial phone number value.\n   */\n  @Prop() value: string = '';\n\n  /**\n   * Disables the phone input when true.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * If true, styles the input to indicate an error state.\n   */\n  @Prop() error: boolean = false;\n\n  /**\n   * Auth token used by the booking service (if needed).\n   */\n  @Prop() token: string;\n\n  /**\n   * Two-letter language code used for country fetching.\n   */\n  @Prop() language: string;\n\n  /**\n   * Default country ID used if no phone prefix is set.\n   */\n  @Prop() default_country: number = null;\n\n  /**\n   * If provided, sets the phone prefix and updates selected country.\n   */\n  @Prop() phone_prefix: string | null = null;\n\n  /**\n   * Placeholder text for the input.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Country list, used to populate prefix and dropdown.\n   * If not provided, fetched from the booking service.\n   */\n  @Prop({ mutable: true }) countries: ICountry[] = [];\n\n  /**\n   * Identifier for test automation.\n   */\n  @Prop() testId: string;\n\n  /**\n   * Floating label text that appears inside the input and “floats” above\n   * when the field is focused or has a value.\n   *\n   * - If provided, a floating label will be rendered inside the input container.\n   * - If you omit this prop but set `label`, the old left-side static label is used.\n   * - If you provide both `label` and `floatingLabel`, only the floating label is shown.\n   *\n   * Accessibility:\n   * - The floating label is tied to the input via `aria-labelledby`.\n   * - You can still set `placeholder`; the label will not be replaced by it.\n   *\n   * Examples:\n   * ```tsx\n   * <ir-phone-input floating-label label=\"Phone\" />\n   * ```\n   */\n  @Prop({ attribute: 'floating-label', reflect: true }) floatingLabel: boolean;\n\n  /**\n   * Emits when the user changes the phone number.\n   * Emits `{ phone_prefix, mobile }` object.\n   *\n   * Example:\n   * ```tsx\n   * <ir-phone-input onTextChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\n\n  /**\n   * Tracks current user input value.\n   */\n  @State() inputValue: string = '';\n\n  /**\n   * Tracks visibility of the country dropdown.\n   */\n  @State() isDropdownVisible: boolean = false;\n\n  /**\n   * Currently selected country (based on prefix or ID).\n   */\n  @State() currentCountry: ICountry;\n\n  /** Internal: input focus state for floating label. */\n  @State() hasFocus: boolean = false;\n  // private cmp_countries: ICountry[] = [];\n\n  private bookingService: BookingService = new BookingService();\n  /** Internal: ids for label/input pairing (a11y). */\n  private inputId = `ir-phone-input-${Math.random().toString(36).slice(2)}`;\n  private labelId = `ir-phone-input-label-${Math.random().toString(36).slice(2)}`;\n\n  async componentWillLoad() {\n    if (this.countries.length === 0) {\n      const countries = await this.bookingService.getCountries(this.language);\n      this.countries = countries;\n    }\n    if (this.phone_prefix) {\n      this.setCountryFromPhonePrefix();\n    } else {\n      if (this.default_country) {\n        this.setCurrentCountry(this.default_country);\n      }\n    }\n    this.inputValue = this.value;\n  }\n  @Watch('value')\n  handleValueChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.inputValue = newValue;\n    }\n  }\n  @Watch('phone_prefix')\n  handlePhoneChange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.setCountryFromPhonePrefix();\n    }\n  }\n  @Listen('click', { target: 'document' })\n  handleDocumentClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (!this.el.contains(target)) {\n      this.isDropdownVisible = false;\n    }\n  }\n  /**\n   * Handles user input:\n   * - Removes all characters except numbers and \"+\"\n   * - Updates state and emits new phone number\n   */\n  private handleInputChange(e: InputEvent) {\n    let inputElement = e.target as HTMLInputElement;\n    let inputValue = inputElement.value;\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\n    inputElement.value = inputValue;\n    this.inputValue = inputValue;\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\n  }\n  /**\n   * Sets the current country based on `phone_prefix` prop or country ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCountryFromPhonePrefix() {\n    let country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\n    if (!country) {\n      country = this.countries.find(c => c.id.toString() === this.phone_prefix);\n      if (!country) {\n        return;\n      }\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  /**\n   * Sets the current country by its ID.\n   * Emits current phone prefix and phone number.\n   */\n  private setCurrentCountry(id: number) {\n    const country = this.countries.find(country => country.id === id);\n    if (!country) {\n      throw new Error('Invalid country id');\n    }\n    this.currentCountry = { ...country };\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\n  }\n  render() {\n    const useFloating = this.floatingLabel && this.label;\n    const showSideLabel = !!this.label && !useFloating;\n    const isActive = this.hasFocus || !!this.inputValue; // float when focused or has value\n    return (\n      <Host>\n        <div class=\"form-group mr-0\">\n          {/* <p class=\"mb-0\">Phone</p> */}\n          <div class=\"input-group row m-0 p-0 position-relative\">\n            {showSideLabel && (\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\n                <label class={`input-group-text border-theme flex-grow-1 text-dark`}>{this.label}</label>\n              </div>\n            )}\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\n              <button type=\"button\" onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\n                {this.currentCountry ? <img src={this.currentCountry?.flag} class=\"flag\" /> : <p class=\"p-0 m-0 \">{locales.entries.Lcz_Select}</p>}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\n                </svg>\n              </button>\n\n              <p class={'phone_prefix_label'}>{this.currentCountry?.phone_prefix}</p>\n              {useFloating && (\n                <label id={this.labelId} class={`floating-label ${isActive ? 'active' : ''}`} htmlFor={this.inputId}>\n                  {this.label}\n                </label>\n              )}\n              <input\n                data-testid={this.testId}\n                maxLength={14}\n                type=\"text\"\n                placeholder={this.placeholder}\n                required\n                value={this.inputValue}\n                disabled={this.disabled}\n                onInput={e => this.handleInputChange(e)}\n                onFocus={() => {\n                  this.hasFocus = true;\n                }}\n                onBlur={() => {\n                  this.hasFocus = false;\n                }}\n              />\n            </div>\n            {this.isDropdownVisible && (\n              <div class=\"ir-dropdown-container\">\n                <ir-combobox\n                  onComboboxValueChange={e => {\n                    this.setCurrentCountry(+e.detail.data);\n                    this.isDropdownVisible = false;\n                  }}\n                  class=\"bg-white\"\n                  autoFocus\n                  placeholder=\"Search country\"\n                  data={this.countries.map(c => ({\n                    id: c.id.toString(),\n                    name: `${c.name} (${c.phone_prefix})`,\n                    image: c.flag,\n                  }))}\n                ></ir-combobox>\n              </div>\n            )}\n          </div>\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}