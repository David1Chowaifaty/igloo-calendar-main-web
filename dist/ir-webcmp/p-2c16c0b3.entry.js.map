{"version":3,"names":["irModalCss","IrModalStyle0","IrModal","constructor","hostRef","this","modalTitle","modalBody","rightBtnActive","leftBtnActive","rightBtnText","leftBtnText","isLoading","autoClose","rightBtnColor","leftBtnColor","btnPosition","iconAvailable","icon","isOpen","item","closeModal","openModal","btnClickHandler","event","target","name","cancelModal","emit","confirmModal","render","h","key","class","onClick","tabindex","showTitle","btn_disabled","btn_color","btn_block","text"],"sources":["src/components/ui/ir-modal/ir-modal.css?tag=ir-modal&encapsulation=scoped","src/components/ui/ir-modal/ir-modal.tsx"],"sourcesContent":[".backdropModal {\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  pointer-events: none;\n}\n.backdropModal.active {\n  cursor: pointer;\n  opacity: 1 !important;\n  pointer-events: all;\n}\n\n.ir-modal[data-state='opened'] {\n  opacity: 1;\n  /* transform: translate(-50%, 0); */\n  visibility: visible; /* Make modal visible */\n  pointer-events: all; /* Restore pointer events */\n  transition: all 0.3s ease-in-out;\n}\n.ir-alert-content {\n  padding: 10px;\n  background: white;\n  border-radius: 5px;\n}\n.ir-alert-header {\n  display: flex;\n  font-size: 1rem;\n  font-weight: 700;\n}\n.modal {\n  z-index: 1001 !important;\n}\n\n.modal-dialog {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n}\n.ir-alert-footer {\n  gap: 10px;\n}\n.ir-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1050;\n  width: 90%;\n  max-width: 32rem;\n  overflow: hidden;\n  outline: 0;\n  opacity: 0;\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n  visibility: hidden;\n  pointer-events: none;\n}\n\n.ir-modal.active {\n  opacity: 1;\n  transform: translate(-50%, 0);\n  visibility: visible; /* Make modal visible */\n  pointer-events: all; /* Restore pointer events */\n  transition: all 0.3s ease-in-out;\n}\n","import { Component, h, State, Method, Event, EventEmitter, Prop, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ir-modal',\n  styleUrl: 'ir-modal.css',\n  scoped: true,\n})\nexport class IrModal {\n  @Prop() modalTitle: string = 'Modal Title';\n  @Prop() modalBody: string = 'Modal Body';\n  @Prop() showTitle: boolean;\n\n  @Prop() rightBtnActive: boolean = true;\n  @Prop() leftBtnActive: boolean = true;\n\n  @Prop() rightBtnText: string = 'Confirm';\n  @Prop() leftBtnText: string = 'Close';\n\n  @Prop() isLoading: boolean = false;\n  @Prop() autoClose: boolean = true;\n\n  @Prop() rightBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\n  @Prop() leftBtnColor: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'secondary';\n\n  @Prop() btnPosition: 'left' | 'right' | 'center' = 'right';\n  @Prop() iconAvailable: boolean = false;\n  @Prop() icon: string = '';\n\n  @State() isOpen: boolean = false;\n\n  @Method()\n  async closeModal() {\n    this.isOpen = false;\n  }\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n  }\n  @Event({ bubbles: true, composed: true }) confirmModal: EventEmitter<any>;\n  @Event({ bubbles: true, composed: true }) cancelModal: EventEmitter<any>;\n\n  @Listen('clickHandler')\n  btnClickHandler(event: CustomEvent) {\n    let target = event.target as HTMLInputElement;\n    let name = target.name;\n\n    if (name === this.leftBtnText) {\n      this.cancelModal.emit();\n      this.item = {};\n      this.closeModal();\n    } else if (name === this.rightBtnText) {\n      this.confirmModal.emit(this.item);\n      this.item = {};\n      if (this.autoClose) {\n        this.closeModal();\n      }\n    }\n  }\n\n  @Prop({ mutable: true }) item: any = {};\n\n  render() {\n    return [\n      <div\n        class={`backdropModal ${this.isOpen ? 'active' : ''}`}\n        onClick={() => {\n          this.cancelModal.emit();\n          if (this.autoClose && !this.isLoading) {\n            this.closeModal();\n          }\n        }}\n      ></div>,\n      <div data-state={this.isOpen ? 'opened' : 'closed'} class={`ir-modal`} tabindex=\"-1\">\n        <div class={`ir-alert-content p-2`}>\n          {this.showTitle && (\n            <div class={`ir-alert-header`}>\n              {/*\n            <p class=\"font-weight-bold p-0 my-0 mb-1\">\n              {this.iconAvailable && <ir-icon class=\"mr-1\" icon={this.icon}></ir-icon>} \n               {this.modalBody} \n              {this.modalTitle}\n            </p>\n            */}\n              {/* <div class=\"font-weight-bold d-flex align-items-center font-size-large my-0 py-0\">\n              <ir-icon\n                icon=\"ft-x\"\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.closeModal();\n                  this.cancelModal.emit();\n                }}\n              ></ir-icon>\n            </div> */}\n              <p>{this.modalTitle}</p>\n            </div>\n          )}\n          <div class=\"modal-body text-left p-0 mb-2\">\n            <div>{this.modalBody}</div>\n          </div>\n\n          <div class={`ir-alert-footer border-0  d-flex justify-content-${this.btnPosition === 'center' ? 'center' : this.btnPosition === 'left' ? 'start' : 'end'}`}>\n            {this.leftBtnActive && (\n              <ir-button btn_disabled={this.isLoading} icon={''} btn_color={this.leftBtnColor} btn_block text={this.leftBtnText} name={this.leftBtnText}></ir-button>\n            )}\n            {this.rightBtnActive && (\n              <ir-button\n                icon={''}\n                btn_color={this.rightBtnColor}\n                btn_disabled={this.isLoading}\n                isLoading={this.isLoading}\n                btn_block\n                text={this.rightBtnText}\n                name={this.rightBtnText}\n              ></ir-button>\n            )}\n          </div>\n        </div>\n      </div>,\n    ];\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAa,snCACnB,MAAAC,EAAeD,E,MCMFE,EAAO,MALpB,WAAAC,CAAAC,G,8FAMUC,KAAAC,WAAqB,cACrBD,KAAAE,UAAoB,aAGpBF,KAAAG,eAA0B,KAC1BH,KAAAI,cAAyB,KAEzBJ,KAAAK,aAAuB,UACvBL,KAAAM,YAAsB,QAEtBN,KAAAO,UAAqB,MACrBP,KAAAQ,UAAqB,KAErBR,KAAAS,cAAwG,UACxGT,KAAAU,aAAuG,YAEvGV,KAAAW,YAA2C,QAC3CX,KAAAY,cAAyB,MACzBZ,KAAAa,KAAe,GAEdb,KAAAc,OAAkB,MA+BFd,KAAAe,KAAY,E,CA5BrC,gBAAMC,GACJhB,KAAKc,OAAS,K,CAGhB,eAAMG,GACJjB,KAAKc,OAAS,I,CAMhB,eAAAI,CAAgBC,GACd,IAAIC,EAASD,EAAMC,OACnB,IAAIC,EAAOD,EAAOC,KAElB,GAAIA,IAASrB,KAAKM,YAAa,CAC7BN,KAAKsB,YAAYC,OACjBvB,KAAKe,KAAO,GACZf,KAAKgB,Y,MACA,GAAIK,IAASrB,KAAKK,aAAc,CACrCL,KAAKwB,aAAaD,KAAKvB,KAAKe,MAC5Bf,KAAKe,KAAO,GACZ,GAAIf,KAAKQ,UAAW,CAClBR,KAAKgB,Y,GAOX,MAAAS,GACE,MAAO,CACLC,EAAA,OAAAC,IAAA,2CACEC,MAAO,iBAAiB5B,KAAKc,OAAS,SAAW,KACjDe,QAAS,KACP7B,KAAKsB,YAAYC,OACjB,GAAIvB,KAAKQ,YAAcR,KAAKO,UAAW,CACrCP,KAAKgB,Y,KAIXU,EAAA,OAAAC,IAAA,wDAAiB3B,KAAKc,OAAS,SAAW,SAAUc,MAAO,WAAYE,SAAS,MAC9EJ,EAAA,OAAAC,IAAA,2CAAKC,MAAO,wBACT5B,KAAK+B,WACJL,EAAA,OAAAC,IAAA,2CAAKC,MAAO,mBAkBVF,EAAA,KAAAC,IAAA,4CAAI3B,KAAKC,aAGbyB,EAAA,OAAAC,IAAA,2CAAKC,MAAM,iCACTF,EAAA,OAAAC,IAAA,4CAAM3B,KAAKE,YAGbwB,EAAA,OAAAC,IAAA,2CAAKC,MAAO,oDAAoD5B,KAAKW,cAAgB,SAAW,SAAWX,KAAKW,cAAgB,OAAS,QAAU,SAChJX,KAAKI,eACJsB,EAAA,aAAAC,IAAA,2CAAWK,aAAchC,KAAKO,UAAWM,KAAM,GAAIoB,UAAWjC,KAAKU,aAAcwB,UAAS,KAACC,KAAMnC,KAAKM,YAAae,KAAMrB,KAAKM,cAE/HN,KAAKG,gBACJuB,EAAA,aAAAC,IAAA,2CACEd,KAAM,GACNoB,UAAWjC,KAAKS,cAChBuB,aAAchC,KAAKO,UACnBA,UAAWP,KAAKO,UAChB2B,UAAS,KACTC,KAAMnC,KAAKK,aACXgB,KAAMrB,KAAKK,kB","ignoreList":[]}