{"version":3,"names":["irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","this","roomService","RoomService","houseKeepingService","HouseKeepingService","componentWillLoad","baseurl","axios","defaults","baseURL","ticket","setToken","initializeApp","handleResetData","e","stopImmediatePropagation","stopPropagation","getExposedHKSetup","propertyid","ticketChanged","newValue","oldValue","isLoading","propertyId","propertyData","getExposedProperty","id","aname","p","language","is_backend","My_Result","updateHKStore","token","property_id","requests","fetchLanguage","unshift","Promise","all","error","console","render","h","Host","class"],"sources":["src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport { RoomService } from '@/services/room.service';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-housekeeping',\r\n  styleUrl: 'ir-housekeeping.css',\r\n  scoped: true,\r\n})\r\nexport class IrHousekeeping {\r\n  @Prop() language: string = '';\r\n  @Prop() ticket: string = '';\r\n  @Prop() baseurl: string = '';\r\n  @Prop() propertyid: number;\r\n  @Prop() p: string;\r\n\r\n  @State() isLoading = false;\r\n\r\n  private roomService = new RoomService();\r\n  private houseKeepingService = new HouseKeepingService();\r\n\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n    if (this.ticket !== '') {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  @Listen('resetData')\r\n  async handleResetData(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\r\n  }\r\n  @Watch('ticket')\r\n  async ticketChanged(newValue: string, oldValue: string) {\r\n    if (newValue !== oldValue) {\r\n      this.roomService.setToken(this.ticket);\r\n      this.houseKeepingService.setToken(this.ticket);\r\n      this.initializeApp();\r\n    }\r\n  }\r\n\r\n  async initializeApp() {\r\n    try {\r\n      this.isLoading = true;\r\n      let propertyId = this.propertyid;\r\n      if (!propertyId) {\r\n        const propertyData = await this.roomService.getExposedProperty({\r\n          id: 0,\r\n          aname: this.p,\r\n          language: this.language,\r\n          is_backend: true,\r\n        });\r\n        propertyId = propertyData.My_Result.id;\r\n      }\r\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\r\n      const requests = [this.houseKeepingService.getExposedHKSetup(propertyId), this.roomService.fetchLanguage(this.language, ['_HK_FRONT'])];\r\n\r\n      if (this.propertyid) {\r\n        requests.unshift(\r\n          this.roomService.getExposedProperty({\r\n            id: propertyId,\r\n            language: this.language,\r\n            is_backend: true,\r\n          }),\r\n        );\r\n      }\r\n\r\n      await Promise.all(requests);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  render() {\r\n    if (this.isLoading) {\r\n      return <ir-loading-screen></ir-loading-screen>;\r\n    }\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-toast></ir-toast>\r\n        <section class=\"p-1\">\r\n          <ir-unit-status class=\"mb-1\"></ir-unit-status>\r\n          <ir-hk-team class=\"mb-1\"></ir-hk-team>\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"qQAAA,MAAMA,EAAoB,uCAC1B,MAAAC,EAAeD,E,MCUFE,EAAc,M,yBASjBC,KAAAC,YAAc,IAAIC,EAClBF,KAAAG,oBAAsB,IAAIC,E,cATP,G,YACF,G,aACC,G,0DAIL,K,CAKrB,iBAAAC,GACE,GAAIL,KAAKM,QAAS,CAChBC,EAAMC,SAASC,QAAUT,KAAKM,O,CAEhC,GAAIN,KAAKU,SAAW,GAAI,CACtBV,KAAKC,YAAYU,SAASX,KAAKU,QAC/BV,KAAKG,oBAAoBQ,SAASX,KAAKU,QACvCV,KAAKY,e,EAIT,qBAAMC,CAAgBC,GACpBA,EAAEC,2BACFD,EAAEE,wBACIhB,KAAKG,oBAAoBc,kBAAkBjB,KAAKkB,W,CAGxD,mBAAMC,CAAcC,EAAkBC,GACpC,GAAID,IAAaC,EAAU,CACzBrB,KAAKC,YAAYU,SAASX,KAAKU,QAC/BV,KAAKG,oBAAoBQ,SAASX,KAAKU,QACvCV,KAAKY,e,EAIT,mBAAMA,GACJ,IACEZ,KAAKsB,UAAY,KACjB,IAAIC,EAAavB,KAAKkB,WACtB,IAAKK,EAAY,CACf,MAAMC,QAAqBxB,KAAKC,YAAYwB,mBAAmB,CAC7DC,GAAI,EACJC,MAAO3B,KAAK4B,EACZC,SAAU7B,KAAK6B,SACfC,WAAY,OAEdP,EAAaC,EAAaO,UAAUL,E,CAEtCM,EAAc,qBAAsB,CAAEC,MAAOjC,KAAKU,OAAQwB,YAAaX,EAAYM,SAAU7B,KAAK6B,WAClG,MAAMM,EAAW,CAACnC,KAAKG,oBAAoBc,kBAAkBM,GAAavB,KAAKC,YAAYmC,cAAcpC,KAAK6B,SAAU,CAAC,eAEzH,GAAI7B,KAAKkB,WAAY,CACnBiB,EAASE,QACPrC,KAAKC,YAAYwB,mBAAmB,CAClCC,GAAIH,EACJM,SAAU7B,KAAK6B,SACfC,WAAY,O,OAKZQ,QAAQC,IAAIJ,E,CAClB,MAAOK,GACPC,QAAQD,MAAMA,E,SAEdxC,KAAKsB,UAAY,K,EAGrB,MAAAoB,GACE,GAAI1C,KAAKsB,UAAW,CAClB,OAAOqB,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,iBACAA,EAAA,WAASE,MAAM,OACbF,EAAA,kBAAgBE,MAAM,SACtBF,EAAA,cAAYE,MAAM,U","ignoreList":[]}