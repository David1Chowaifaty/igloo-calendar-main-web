{"version":3,"names":["iglBookPropertyContainerCss","IglBookPropertyContainerStyle0","IglBookPropertyContainer","constructor","hostRef","this","language","ticket","withIrToastAndInterceptor","calendarData","bookingService","BookingService","roomService","RoomService","token","Token","setRoomsData","roomServiceResp","roomsData","Array","_b","_a","My_Result","roomtypes","length","forEach","roomCategory","expanded","roomsInfo","initializeApp","propertyid","p","Error","roomResponse","languageTexts","countriesList","Promise","all","getExposedProperty","id","aname","fetchLanguage","getCountries","locales","entries","direction","countries","allowed_payment_methods","paymentMethods","currency","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","showPaymentDetails","some","method","includes","code","error","console","componentWillLoad","setToken","ticketChanged","newValue","oldValue","handleCloseBookingWindow","bookingItem","handleTriggerClicked","tomorrow","Date","setDate","getDate","FROM_DATE","from_date","defaultDateRange","fromDate","fromDateStr","toDate","toDateStr","dateDifference","message","TO_DATE","to_date","EMAIL","event_type","ID","NAME","PHONE","REFERENCE_TYPE","TITLE","Lcz_NewBooking","render","h","Host","key","Fragment","class","onClick","bind","name","allowedBookingSources","adultChildConstraints","bookingData","onResetBookingEvt","e","stopImmediatePropagation","stopPropagation","resetBookingData","emit","onCloseBookingWindow"],"sources":["src/components/igl-book-property-container/igl-book-property-container.css?tag=igl-book-property-container&encapsulation=scoped","src/components/igl-book-property-container/igl-book-property-container.tsx"],"sourcesContent":[":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n  letter-spacing: 0px !important;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n  font-size: 1rem !important;\n  font-weight: 400 !important;\n  line-height: 1.45 !important;\n  color: #6b6f82 !important;\n  text-align: left !important;\n}\n.book-container {\n  width: min-content;\n  margin: 0;\n  padding: 0;\n}\nh3 {\n  font-size: 1rem;\n}\n","import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\nimport Token from '@/models/Token';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, State, h, Prop, Watch, Event, EventEmitter, Fragment } from '@stencil/core';\nimport { ICountry } from '@/models/IBooking';\n@Component({\n  tag: 'igl-book-property-container',\n  styleUrl: 'igl-book-property-container.css',\n  scoped: true,\n})\nexport class IglBookPropertyContainer {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() p: string;\n  @Prop() propertyid: number;\n  @Prop() from_date: string;\n  @Prop() to_date: string;\n  @Prop() withIrToastAndInterceptor: boolean = true;\n\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\n  @State() showPaymentDetails: any;\n  @State() countries: ICountry[];\n  @State() calendarData: any = {};\n\n  @Event() resetBookingData: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token = new Token();\n\n  setRoomsData(roomServiceResp) {\n    let roomsData: { [key: string]: any }[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    this.calendarData.roomsInfo = roomsData;\n  }\n  async initializeApp() {\n    try {\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\n        this.roomService.getExposedProperty({ id: this.propertyid, language: this.language, aname: this.p }),\n        this.roomService.fetchLanguage(this.language),\n        this.bookingService.getCountries(this.language),\n      ]);\n      if (!locales.entries) {\n        locales.entries = languageTexts.entries;\n        locales.direction = languageTexts.direction;\n      }\n      this.countries = countriesList;\n\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\n      this.setRoomsData(roomResponse);\n      const paymentCodesToShow = ['001', '004'];\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    }\n  }\n  componentWillLoad() {\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  handleTriggerClicked() {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\n      FROM_DATE: this.from_date,\n      defaultDateRange: {\n        fromDate: new Date(),\n        fromDateStr: '',\n        toDate: tomorrow,\n        toDateStr: '',\n        dateDifference: 0,\n        message: '',\n      },\n      TO_DATE: this.to_date,\n      EMAIL: '',\n      event_type: 'PLUS_BOOKING',\n      ID: '',\n      NAME: '',\n      PHONE: '',\n      REFERENCE_TYPE: '',\n      TITLE: locales.entries.Lcz_NewBooking,\n    };\n  }\n  render() {\n    return (\n      <Host>\n        {this.withIrToastAndInterceptor && (\n          <Fragment>\n            <ir-toast></ir-toast>\n            <ir-interceptor></ir-interceptor>\n          </Fragment>\n        )}\n\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\n          <slot name=\"trigger\"></slot>\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\n            adultChildConstraints={this.calendarData.adult_child_constraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.propertyid}\n            bookingData={this.bookingItem}\n            onResetBookingEvt={(e: CustomEvent) => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.resetBookingData.emit(null);\n            }}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}