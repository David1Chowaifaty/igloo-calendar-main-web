{"version":3,"names":["irAccordionCss","IrAccordionStyle0","accId","IrAccordion","constructor","hostRef","this","defaultExpanded","showCaret","caretIcon","_expanded","contentId","isAnimating","onTriggerClick","nextExpanded","expanded","undefined","irToggle","emit","updateExpansion","onTriggerKeyDown","ev","key","preventDefault","componentWillLoad","_a","disconnectedCallback","cleanupAnimation","watchExpanded","newValue","shouldEmit","wasExpanded","openWithAnimation","closeWithAnimation","console","log","detailsEl","contentEl","cleanupPreviousAnimation","startHeight","offsetHeight","style","height","overflow","setAttribute","targetHeight","scrollHeight","requestAnimationFrame","handleTransitionEnd","event","propertyName","target","finishOpenAnimation","removeEventListener","addEventListener","setTimeout","finishCloseAnimation","removeAttribute","render","isOpen","h","Host","class","type","onClick","onKeyDown","disabled","name","id","ref","el","role"],"sources":["src/components/ui/ir-accordion/ir-accordion.css?tag=ir-accordion&encapsulation=shadow","src/components/ui/ir-accordion/ir-accordion.tsx"],"sourcesContent":[":host {\n  --ir-acc-duration: 220ms;\n  --ir-acc-ease: cubic-bezier(0.2, 0.8, 0.2, 1);\n  --ir-acc-border: #e5e7eb;\n  --ir-acc-radius: 6px;\n  --ir-acc-bg: #fff;\n  --ir-acc-focus: #3b82f6;\n  --ir-acc-space-2: 0.5rem;\n  --ir-acc-space-3: 0.75rem;\n  --ir-acc-space-4: 1rem;\n\n  display: block;\n}\n\n.ir-accordion {\n  border: 1px solid var(--ir-acc-border);\n  border-radius: var(--ir-acc-radius);\n  background: var(--ir-acc-bg);\n  overflow: hidden;\n}\n\n/* Trigger Button */\n.ir-accordion__trigger {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: var(--ir-acc-space-2);\n  width: 100%;\n  padding: var(--ir-acc-space-4);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  text-align: left;\n  font: inherit;\n  color: inherit;\n  transition: background-color 0.15s ease;\n}\n\n.ir-accordion__trigger:hover:not(:disabled) {\n  background: rgba(0, 0, 0, 0.02);\n}\n\n.ir-accordion__trigger:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.ir-accordion__trigger:focus {\n  outline: 2px solid var(--ir-acc-focus);\n  outline-offset: -2px;\n}\n\n.ir-accordion__trigger:focus:not(:focus-visible) {\n  outline: none;\n}\n\n/* Caret Icon */\n.ir-accordion__caret {\n  flex-shrink: 0;\n  transition: transform var(--ir-acc-duration) var(--ir-acc-ease);\n  transform: rotate(-90deg);\n}\n\n.ir-accordion[data-open='true'] .ir-accordion__caret,\n.ir-accordion__caret.is-open {\n  transform: rotate(0deg);\n}\n\n/* Trigger Content Slot */\n.ir-accordion__trigger-content {\n  flex: 1;\n  min-width: 0; /* Allow content to shrink */\n}\n\n/* Collapsible Content Container */\n.ir-accordion__content {\n  transition: height var(--ir-acc-duration) var(--ir-acc-ease);\n  will-change: height;\n}\n\n/* When collapsed (default state) */\n.ir-accordion__content:not([data-expanded='true']) {\n  height: 0 !important;\n  overflow: hidden !important;\n  visibility: hidden;\n}\n\n/* When expanded or during animation */\n.ir-accordion__content[data-expanded='true'] {\n  visibility: visible;\n}\n\n/* Content Inner Wrapper */\n.ir-accordion__content-inner {\n  padding: var(--ir-acc-space-3) var(--ir-acc-space-4);\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .ir-accordion__caret {\n    transition: none;\n  }\n  .ir-accordion__content {\n    transition: none;\n  }\n}\n\n/* Focus visible support for modern browsers */\n@supports selector(:focus-visible) {\n  .ir-accordion__trigger:focus {\n    outline: none;\n  }\n\n  /* .ir-accordion__trigger:focus-visible {\n    outline: 2px solid var(--ir-acc-focus);\n    outline-offset: -2px;\n  } */\n}\n","import { Component, Host, Prop, State, Event, EventEmitter, h, Element, Watch } from '@stencil/core';\n\nlet accId = 0;\n\n@Component({\n  tag: 'ir-accordion',\n  styleUrl: 'ir-accordion.css',\n  shadow: true,\n})\nexport class IrAccordion {\n  @Element() host!: HTMLElement;\n\n  /** Start expanded */\n  @Prop() defaultExpanded: boolean = false;\n\n  /** Optional controlled prop: when provided, component follows this value */\n  @Prop() expanded?: boolean;\n\n  /** Show caret icon */\n  @Prop() showCaret: boolean = true;\n\n  /** Caret icon name */\n  @Prop() caretIcon: string = 'angle-down';\n\n  /** Fired after expansion state changes */\n  @Event() irToggle!: EventEmitter<{ expanded: boolean }>;\n\n  @State() _expanded: boolean = false;\n\n  private detailsEl?: HTMLDivElement;\n  private contentEl?: HTMLDivElement;\n  // private triggerBtn?: HTMLButtonElement;\n  private contentId = `ir-accordion-content-${++accId}`;\n  private isAnimating = false;\n  private cleanupAnimation?: () => void;\n\n  componentWillLoad() {\n    this._expanded = this.expanded ?? this.defaultExpanded;\n  }\n\n  disconnectedCallback() {\n    // Clean up any ongoing animation\n    if (this.cleanupAnimation) {\n      this.cleanupAnimation();\n    }\n  }\n\n  @Watch('expanded')\n  watchExpanded(newValue: boolean | undefined) {\n    if (newValue !== undefined && newValue !== this._expanded) {\n      this.updateExpansion(newValue, false); // Don't emit event for external changes\n    }\n  }\n\n  private updateExpansion(expanded: boolean, shouldEmit: boolean = true) {\n    // Prevent multiple simultaneous animations\n    if (this.isAnimating) {\n      return;\n    }\n\n    const wasExpanded = this._expanded;\n    this._expanded = expanded;\n\n    // Only animate if the state actually changed\n    if (wasExpanded !== expanded) {\n      if (expanded) {\n        this.openWithAnimation();\n      } else {\n        this.closeWithAnimation();\n      }\n\n      if (shouldEmit) {\n        this.irToggle.emit({ expanded });\n      }\n    }\n  }\n\n  private openWithAnimation() {\n    console.log('openWithAnimation called', { detailsEl: !!this.detailsEl, contentEl: !!this.contentEl, isAnimating: this.isAnimating });\n\n    if (!this.detailsEl || !this.contentEl || this.isAnimating) {\n      console.log('openWithAnimation aborted - missing elements or already animating');\n      return;\n    }\n\n    this.isAnimating = true;\n    this.cleanupPreviousAnimation();\n\n    // Set initial state\n    const startHeight = this.detailsEl.offsetHeight;\n    console.log('Start height:', startHeight);\n\n    this.detailsEl.style.height = `${startHeight}px`;\n    this.detailsEl.style.overflow = 'hidden';\n\n    // Make content visible and measure target height\n    this.detailsEl.setAttribute('data-expanded', 'true');\n    const targetHeight = this.contentEl.scrollHeight;\n    console.log('Target height:', targetHeight);\n\n    // Use requestAnimationFrame to ensure the browser has processed the initial state\n    requestAnimationFrame(() => {\n      if (!this.detailsEl || !this.isAnimating) {\n        console.log('requestAnimationFrame aborted');\n        return;\n      }\n\n      console.log('Setting height to:', targetHeight);\n      this.detailsEl.style.height = `${targetHeight}px`;\n\n      const handleTransitionEnd = (event: TransitionEvent) => {\n        console.log('Transition end event:', event.propertyName, event.target === this.detailsEl);\n        // Make sure this is the height transition and not a child element\n        if (event.target === this.detailsEl && event.propertyName === 'height') {\n          this.finishOpenAnimation();\n        }\n      };\n\n      this.cleanupAnimation = () => {\n        if (this.detailsEl) {\n          this.detailsEl.removeEventListener('transitionend', handleTransitionEnd);\n        }\n      };\n\n      this.detailsEl.addEventListener('transitionend', handleTransitionEnd);\n\n      // Fallback timeout in case transitionend doesn't fire\n      setTimeout(() => {\n        if (this.isAnimating) {\n          console.log('Fallback timeout triggered for open animation');\n          this.finishOpenAnimation();\n        }\n      }, 250);\n    });\n  }\n\n  private closeWithAnimation() {\n    if (!this.detailsEl || !this.contentEl || this.isAnimating) return;\n\n    this.isAnimating = true;\n    this.cleanupPreviousAnimation();\n\n    // Set initial height to current scrollHeight\n    const startHeight = this.detailsEl.scrollHeight;\n    this.detailsEl.style.height = `${startHeight}px`;\n    this.detailsEl.style.overflow = 'hidden';\n\n    // Force reflow then animate to 0\n    requestAnimationFrame(() => {\n      if (!this.detailsEl || !this.isAnimating) return;\n\n      this.detailsEl.style.height = '0px';\n\n      const handleTransitionEnd = (event: TransitionEvent) => {\n        // Make sure this is the height transition and not a child element\n        if (event.target === this.detailsEl && event.propertyName === 'height') {\n          this.finishCloseAnimation();\n        }\n      };\n\n      this.cleanupAnimation = () => {\n        if (this.detailsEl) {\n          this.detailsEl.removeEventListener('transitionend', handleTransitionEnd);\n        }\n      };\n\n      this.detailsEl.addEventListener('transitionend', handleTransitionEnd);\n\n      // Fallback timeout\n      setTimeout(() => {\n        if (this.isAnimating) {\n          this.finishCloseAnimation();\n        }\n      }, 250);\n    });\n  }\n\n  private finishOpenAnimation() {\n    if (this.cleanupAnimation) {\n      this.cleanupAnimation();\n      this.cleanupAnimation = undefined;\n    }\n\n    if (this.detailsEl) {\n      this.detailsEl.style.height = '';\n      this.detailsEl.style.overflow = '';\n    }\n\n    this.isAnimating = false;\n  }\n\n  private finishCloseAnimation() {\n    if (this.cleanupAnimation) {\n      this.cleanupAnimation();\n      this.cleanupAnimation = undefined;\n    }\n\n    if (this.detailsEl) {\n      this.detailsEl.style.height = '';\n      this.detailsEl.style.overflow = '';\n      this.detailsEl.removeAttribute('data-expanded');\n    }\n\n    this.isAnimating = false;\n  }\n\n  private cleanupPreviousAnimation() {\n    if (this.cleanupAnimation) {\n      this.cleanupAnimation();\n      this.cleanupAnimation = undefined;\n    }\n    // Always reset isAnimating when cleaning up\n    this.isAnimating = false;\n  }\n\n  private onTriggerClick = () => {\n    // Don't allow clicks during animation\n    if (this.isAnimating) {\n      return;\n    }\n\n    const nextExpanded = !this._expanded;\n\n    // For controlled components, just emit the event\n    if (this.expanded !== undefined) {\n      this.irToggle.emit({ expanded: nextExpanded });\n    } else {\n      // For uncontrolled components, update state and emit\n      this.updateExpansion(nextExpanded, true);\n    }\n  };\n\n  private onTriggerKeyDown = (ev: KeyboardEvent) => {\n    // Allow keyboard toggle with Enter/Space\n    if ((ev.key === 'Enter' || ev.key === ' ') && !this.isAnimating) {\n      ev.preventDefault();\n      this.onTriggerClick();\n    }\n  };\n\n  render() {\n    const isOpen = this._expanded;\n    console.log(isOpen);\n    return (\n      <Host>\n        <div class=\"ir-accordion\" data-open={isOpen ? 'true' : 'false'}>\n          {/* Trigger */}\n          <button\n            type=\"button\"\n            class=\"ir-accordion__trigger\"\n            aria-expanded={isOpen ? 'true' : 'false'}\n            aria-controls={this.contentId}\n            aria-busy={this.isAnimating ? 'true' : 'false'}\n            onClick={this.onTriggerClick}\n            onKeyDown={this.onTriggerKeyDown}\n            // ref={el => (this.triggerBtn = el as HTMLButtonElement)}\n            disabled={this.isAnimating}\n          >\n            {this.showCaret && <ir-icons name={'angle-down'} class={`ir-accordion__caret ${isOpen ? 'is-open' : ''}`} aria-hidden=\"true\"></ir-icons>}\n\n            <div class=\"ir-accordion__trigger-content\">\n              <slot name=\"trigger\"></slot>\n            </div>\n          </button>\n\n          {/* Collapsible Content */}\n          <div\n            class=\"ir-accordion__content\"\n            id={this.contentId}\n            ref={el => (this.detailsEl = el as HTMLDivElement)}\n            data-expanded={isOpen ? 'true' : null}\n            role=\"region\"\n            aria-hidden={isOpen ? 'false' : 'true'}\n          >\n            <div class=\"ir-accordion__content-inner\" ref={el => (this.contentEl = el as HTMLDivElement)}>\n              <slot name=\"body\"></slot>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}