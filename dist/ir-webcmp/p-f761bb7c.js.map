{"version":3,"names":["ymdDate","z","string","regex","object","channel","property_id","number","int","nullable","balance_filter","filter_type","union","from","to","name","book_nbr","booking_status","userTypeCode","optional","affiliate_id","default","is_mpo_managed","boolean","is_mpo_used","is_for_mobile","is_combined_view","start_row","end_row","total_count","is_to_export","property_ids","array","initialState","channels","settlement_methods","statuses","types","token","rowCount","bookings","userSelection","moment","add","format","download_url","state","booking_listing","onChange","onBookingListingChange","createStore","initializeUserSelection","Object","assign","code","id","value","updateUserSelections","params","updateUserSelection","key","BookingListingService","getExposedBookingsCriteria","data","axios","post","result","My_Result","getExposedBookings","rest","__rest","havePrivilege","isPrivilegedUser","extras","undefined","header","My_Params_Get_Exposed_Bookings","exported_data_url","removeExposedBooking","booking_nbr","is_to_revover"],"sources":["src/stores/booking_listing.store.ts","src/services/booking_listing.service.ts"],"sourcesContent":["import { IExposedBookingsCriteria } from '@/models/IrBookingListing';\nimport { Booking } from '@/models/booking.dto';\nimport { createStore } from '@stencil/store';\nimport moment from 'moment';\nimport { z } from 'zod';\n\nexport interface IBookingListingStore extends IExposedBookingsCriteria {\n  token: string;\n  userSelection: ExposedBookingsParams;\n  bookings: Booking[];\n  download_url: string | null;\n  rowCount: number;\n  balance_filter: { name: string; value: string }[];\n}\nconst ymdDate = z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, 'Expected date in YYYY-MM-DD format');\nexport const ExposedBookingsParamsSchema = z.object({\n  channel: z.string(),\n\n  // These are null in your initialState, so allow nulls\n  property_id: z.number().int().nullable(),\n  balance_filter: z.string().nullable(),\n  filter_type: z.union([z.number(), z.string()]).nullable(),\n\n  from: ymdDate,\n  to: ymdDate,\n\n  name: z.string(),\n  book_nbr: z.string(),\n  booking_status: z.string(),\n  userTypeCode: z.number().optional(),\n\n  // In the interface these were literal 0/false, but you treat them like values.\n  affiliate_id: z.number().int().default(0),\n  is_mpo_managed: z.boolean().default(false),\n  is_mpo_used: z.boolean().default(false),\n  is_for_mobile: z.boolean().default(false),\n  is_combined_view: z.boolean().default(false),\n\n  start_row: z.number().int(),\n  end_row: z.number().int(),\n  total_count: z.number().int(),\n\n  is_to_export: z.boolean(),\n\n  property_ids: z.array(z.number().int()).optional(),\n});\n\nexport type ExposedBookingsParams = z.infer<typeof ExposedBookingsParamsSchema>;\n\nconst initialState: IBookingListingStore = {\n  channels: [],\n  settlement_methods: [],\n  statuses: [],\n  types: [],\n  token: '',\n  rowCount: 10,\n  bookings: [],\n  balance_filter: [],\n  userSelection: {\n    from: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    to: moment().format('YYYY-MM-DD'),\n    channel: '',\n    balance_filter: null,\n    property_id: null,\n    start_row: 0,\n    end_row: 20,\n    total_count: 0,\n    filter_type: null,\n    name: '',\n    book_nbr: '',\n    booking_status: '',\n    affiliate_id: 0,\n    is_mpo_managed: false,\n    is_mpo_used: false,\n    is_for_mobile: false,\n    is_combined_view: false,\n    is_to_export: false,\n  },\n  download_url: null,\n};\n\nexport const { state: booking_listing, onChange: onBookingListingChange } = createStore<IBookingListingStore>(initialState);\nexport function initializeUserSelection() {\n  //booking_listing.channels[0].name\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    channel: '',\n    booking_status: booking_listing.statuses[0].code,\n    filter_type: booking_listing.types[0].id,\n    book_nbr: '',\n    name: '',\n    from: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    to: moment().format('YYYY-MM-DD'),\n    start_row: 0,\n    end_row: booking_listing.rowCount,\n    balance_filter: booking_listing.balance_filter[0].value,\n  };\n}\nexport function updateUserSelections(params: Partial<ExposedBookingsParams>) {\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    ...params,\n  };\n}\nexport function updateUserSelection(key: keyof ExposedBookingsParams, value: any) {\n  booking_listing.userSelection = {\n    ...booking_listing.userSelection,\n    [key]: value,\n  };\n}\nexport default booking_listing;\n","import booking_listing, { ExposedBookingsParams, initializeUserSelection } from '@/stores/booking_listing.store';\nimport { extras, isPrivilegedUser } from '@/utils/utils';\nimport axios from 'axios';\n\nexport class BookingListingService {\n  public async getExposedBookingsCriteria(property_id: number) {\n    const { data } = await axios.post(`/Get_Exposed_Bookings_Criteria`, {\n      property_id,\n    });\n    const result = data.My_Result;\n    booking_listing.channels = result.channels;\n    booking_listing.settlement_methods = result.settlement_methods;\n    booking_listing.statuses = result.statuses;\n    booking_listing.types = result.types;\n    booking_listing.balance_filter = result.balance_filter;\n    initializeUserSelection();\n  }\n\n  public async getExposedBookings(params: ExposedBookingsParams) {\n    const { property_id, userTypeCode, channel, property_ids, ...rest } = params;\n    const havePrivilege = isPrivilegedUser(userTypeCode);\n    const { data } = await axios.post(`/Get_Exposed_Bookings`, {\n      ...rest,\n      extras,\n      property_id: havePrivilege ? undefined : property_id,\n      property_ids: havePrivilege ? property_ids : null,\n      channel: havePrivilege ? '' : channel,\n    });\n    const result = data.My_Result;\n    const header = data.My_Params_Get_Exposed_Bookings;\n    booking_listing.bookings = [...result];\n    booking_listing.userSelection = {\n      ...booking_listing.userSelection,\n      total_count: header.total_count,\n    };\n    booking_listing.download_url = header.exported_data_url;\n  }\n  public async removeExposedBooking(booking_nbr: string, is_to_revover: boolean) {\n    await axios.post(`/Remove_Exposed_Booking`, {\n      booking_nbr,\n      is_to_revover,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}