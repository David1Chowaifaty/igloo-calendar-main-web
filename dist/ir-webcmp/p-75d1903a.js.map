{"version":3,"names":["RoomService","SetAutomaticCheckInOut","props","data","axios","post","ExceptionMsg","Error","getExposedProperty","params","results","My_Result","calendar_data","adultChildConstraints","adult_child_constraints","allowedBookingSources","allowed_booking_sources","allowed_payment_methods","currency","is_vacation_rental","pickup_service","max_nights","roomsInfo","roomtypes","taxes","id","country","name","is_automatic_check_in_out","tax_statement","is_frontdesk_enabled","is_pms_enabled","error","console","log","fetchLanguage","code","sections","entries","this","transformArrayToObject","locales","Object","assign","direction","object","d","description"],"sources":["src/services/room.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\r\nimport { locales } from '@/stores/locales.store';\r\nimport axios from 'axios';\r\n\r\nexport class RoomService {\r\n  public async SetAutomaticCheckInOut(props: { property_id: number; flag: boolean }) {\r\n    const { data } = await axios.post(`/Set_Automatic_Check_In_Out`, props);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public async getExposedProperty(params: { id: number | null; language: string; is_backend?: boolean; aname?: string; include_units_hk_status?: boolean }) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Property`, params);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const results = data.My_Result;\r\n      calendar_data.adultChildConstraints = results.adult_child_constraints;\r\n      calendar_data.allowedBookingSources = results.allowed_booking_sources;\r\n      calendar_data.allowed_payment_methods = results.allowed_payment_methods;\r\n      calendar_data.currency = results.currency;\r\n      calendar_data.is_vacation_rental = results.is_vacation_rental;\r\n      calendar_data.pickup_service = results.pickup_service;\r\n      calendar_data.max_nights = results.max_nights;\r\n      calendar_data.roomsInfo = results.roomtypes;\r\n      calendar_data.taxes = results.taxes;\r\n      calendar_data.id = results.id;\r\n      calendar_data.country = results.country;\r\n      calendar_data.name = results.name;\r\n      calendar_data.is_automatic_check_in_out = results.is_automatic_check_in_out;\r\n      calendar_data.tax_statement = results.tax_statement;\r\n      calendar_data.is_frontdesk_enabled = results.is_frontdesk_enabled;\r\n      calendar_data.is_pms_enabled = results.is_pms_enabled;\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async fetchLanguage(code: string, sections: string[] = ['_PMS_FRONT']) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Language`, { code, sections });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      let entries = this.transformArrayToObject(data.My_Result.entries);\r\n      locales.entries = { ...locales.entries, ...entries };\r\n      locales.direction = data.My_Result.direction;\r\n      return { entries, direction: data.My_Result.direction };\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  private transformArrayToObject(data: any) {\r\n    let object: any = {};\r\n    for (const d of data) {\r\n      object[d.code] = d.description;\r\n    }\r\n    return object;\r\n  }\r\n}\r\n"],"mappings":"kHAIaA,EACJ,4BAAMC,CAAuBC,GAClC,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,8BAA+BH,GACjE,GAAIC,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,OAAOH,C,CAGF,wBAAMK,CAAmBC,GAC9B,IACE,MAAMN,KAAEA,SAAeC,EAAMC,KAAK,wBAAyBI,GAC3D,GAAIN,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,MAAMI,EAAUP,EAAKQ,UACrBC,EAAcC,sBAAwBH,EAAQI,wBAC9CF,EAAcG,sBAAwBL,EAAQM,wBAC9CJ,EAAcK,wBAA0BP,EAAQO,wBAChDL,EAAcM,SAAWR,EAAQQ,SACjCN,EAAcO,mBAAqBT,EAAQS,mBAC3CP,EAAcQ,eAAiBV,EAAQU,eACvCR,EAAcS,WAAaX,EAAQW,WACnCT,EAAcU,UAAYZ,EAAQa,UAClCX,EAAcY,MAAQd,EAAQc,MAC9BZ,EAAca,GAAKf,EAAQe,GAC3Bb,EAAcc,QAAUhB,EAAQgB,QAChCd,EAAce,KAAOjB,EAAQiB,KAC7Bf,EAAcgB,0BAA4BlB,EAAQkB,0BAClDhB,EAAciB,cAAgBnB,EAAQmB,cACtCjB,EAAckB,qBAAuBpB,EAAQoB,qBAC7ClB,EAAcmB,eAAiBrB,EAAQqB,eACvC,OAAO5B,C,CACP,MAAO6B,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIzB,MAAMyB,E,EAIb,mBAAMG,CAAcC,EAAcC,EAAqB,CAAC,eAC7D,IACE,MAAMlC,KAAEA,SAAeC,EAAMC,KAAK,wBAAyB,CAAE+B,OAAMC,aACnE,GAAIlC,EAAKG,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAMJ,EAAKG,a,CAEvB,IAAIgC,EAAUC,KAAKC,uBAAuBrC,EAAKQ,UAAU2B,SACzDG,EAAQH,QAAOI,OAAAC,OAAAD,OAAAC,OAAA,GAAQF,EAAQH,SAAYA,GAC3CG,EAAQG,UAAYzC,EAAKQ,UAAUiC,UACnC,MAAO,CAAEN,UAASM,UAAWzC,EAAKQ,UAAUiC,U,CAC5C,MAAOZ,GACPC,QAAQC,IAAIF,GACZ,MAAM,IAAIzB,MAAMyB,E,EAIZ,sBAAAQ,CAAuBrC,GAC7B,IAAI0C,EAAc,GAClB,IAAK,MAAMC,KAAK3C,EAAM,CACpB0C,EAAOC,EAAEV,MAAQU,EAAEC,W,CAErB,OAAOF,C","ignoreList":[]}