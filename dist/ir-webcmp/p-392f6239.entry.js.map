{"version":3,"names":["irRadioCss","IrRadioStyle0","IrRadio","constructor","hostRef","this","checked","radioBoxId","v4","currentChecked","componentWillLoad","componentDidLoad","radioRef","setAttribute","JSON","stringify","handleCheckedChange","newValue","handleCheckChange","checkChange","emit","render","h","key","class","label","type","value","name","el","title","onChange","ref","irWeekdaySelectorCss","IrWeekdaySelectorStyle0","IrWeekdaySelector","weekdays","selectedWeekdays","Set","_weekdays","handleWeekdayChange","newDays","oldDays","length","size","toggleWeekDays","weekDay","prev","has","add","delete","weekdayChange","Array","from","Host","style","gap","map","w","onCheckChange","e","detail","labelClass"],"sources":["src/components/ui/ir-radio/ir-radio.css?tag=ir-radio&encapsulation=scoped","src/components/ui/ir-radio/ir-radio.tsx","src/components/ui/ir-weekday-selector/ir-weekday-selector.css?tag=ir-weekday-selector&encapsulation=scoped","src/components/ui/ir-weekday-selector/ir-weekday-selector.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.checkmark {\n  top: 50% !important;\n  transform: translateY(-50%) !important;\n}\n","import { Component, Event, EventEmitter, Prop, State, h, Watch, Element } from '@stencil/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-radio',\n  styleUrl: 'ir-radio.css',\n  scoped: true,\n})\nexport class IrRadio {\n  @Element() el: HTMLIrRadioElement;\n  /**\n   * Whether the checkbox is checked.\n   */\n  @Prop() checked: boolean = false;\n\n  /**\n   * The label text associated with the checkbox.\n   */\n  @Prop() label: string;\n\n  /**\n   * The unique ID of the checkbox element.\n   */\n  @Prop() radioBoxId = v4();\n\n  /**\n   * The name attribute of the checkbox, used for form submission.\n   */\n  @Prop() name: string;\n\n  /**\n   * Whether the checkbox is in an indeterminate state.\n   */\n  @Prop() indeterminate: boolean;\n\n  /**\n   * Disables the checkbox when true.\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * CSS class applied to the label element.\n   */\n  @Prop() labelClass: string;\n\n  /**\n   * Internal state tracking whether the checkbox is currently checked.\n   */\n  @State() currentChecked = false;\n\n  /**\n   * Emitted when the checkbox's checked state changes.\n   */\n  @Event() checkChange: EventEmitter<boolean>;\n\n  private radioRef: HTMLInputElement;\n\n  componentWillLoad() {\n    this.currentChecked = this.checked;\n  }\n  componentDidLoad() {\n    if (this.radioRef) {\n      this.radioRef.setAttribute('aria-checked', JSON.stringify(this.checked));\n    }\n  }\n  /**\n   * Watcher for the `checked` property. Syncs internal state with external prop changes.\n   */\n  @Watch('checked')\n  handleCheckedChange(newValue: boolean) {\n    if (newValue === this.currentChecked) {\n      return;\n    }\n    this.currentChecked = this.checked;\n  }\n\n  /**\n   * Handles user interaction with the checkbox and updates its state.\n   */\n  private handleCheckChange() {\n    this.currentChecked = !this.currentChecked;\n    if (this.radioRef) {\n      this.radioRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\n    }\n    this.checkChange.emit(this.currentChecked);\n  }\n  render() {\n    return (\n      <div class=\"input-group\">\n        <label class=\"check-container radio-container align-items-center m-0 py-0\">\n          <span>{this.label}</span>\n          <input\n            class=\"p-0 m-0\"\n            type=\"radio\"\n            value=\"000\"\n            name={this.el.name}\n            title=\"\"\n            onChange={() => {\n              this.handleCheckChange();\n            }}\n            checked={this.currentChecked}\n            ref={el => (this.radioRef = el)}\n          />\n          <span class=\"checkmark\"></span>\n        </label>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.days-checkbox {\n  gap: 0.5rem;\n}\n","import { Component, Event, EventEmitter, h, Host, Prop, State, Watch } from '@stencil/core';\nexport interface Weekday {\n  value: number;\n  label: string;\n}\n@Component({\n  tag: 'ir-weekday-selector',\n  styleUrl: 'ir-weekday-selector.css',\n  scoped: true,\n})\nexport class IrWeekdaySelector {\n  /**\n   * Initial list of selected weekdays (numeric values).\n   */\n  @Prop() weekdays: number[] = [];\n\n  /**\n   * Internal state tracking currently selected weekdays.\n   */\n  @State() selectedWeekdays: Set<number> = new Set(this.weekdays);\n\n  /**\n   * Emits an updated list of selected weekday values when the selection changes.\n   *\n   * Example:\n   * ```tsx\n   * <ir-weekday-selector onWeekdayChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() weekdayChange: EventEmitter<number[]>;\n\n  private _weekdays: Weekday[] = [\n    { value: 1, label: 'M' },\n    { value: 2, label: 'T' },\n    { value: 3, label: 'W' },\n    { value: 4, label: 'Th' },\n    { value: 5, label: 'Fr' },\n    { value: 6, label: 'Sa' },\n    { value: 0, label: 'Su' },\n  ];\n\n  @Watch('weekdays')\n  handleWeekdayChange(newDays: number[], oldDays: number[]) {\n    if (newDays.length !== oldDays.length && newDays.length !== this.selectedWeekdays.size) {\n      this.selectedWeekdays = new Set(newDays);\n    }\n  }\n  /**\n   * Toggles the selected state of a specific weekday.\n   * Updates internal state and emits `weekdayChange` event.\n   *\n   * @param checked - Whether the checkbox is checked.\n   * @param weekDay - The numeric value of the weekday.\n   */\n  private toggleWeekDays({ checked, weekDay }: { checked: boolean; weekDay: number }): void {\n    const prev = new Set(this.selectedWeekdays);\n    if (checked) {\n      if (!this.selectedWeekdays.has(weekDay)) {\n        prev.add(weekDay);\n        this.selectedWeekdays = new Set(prev);\n      }\n    } else {\n      prev.delete(weekDay);\n      this.selectedWeekdays = new Set(prev);\n    }\n    this.weekdayChange.emit(Array.from(this.selectedWeekdays));\n  }\n  render() {\n    return (\n      <Host class=\"my-1 d-flex align-items-center\" style={{ gap: '1.1rem' }}>\n        {this._weekdays.map(w => (\n          <ir-checkbox\n            checked={this.selectedWeekdays.has(w.value)}\n            onCheckChange={e => this.toggleWeekDays({ checked: e.detail, weekDay: w.value })}\n            label={w.label}\n            labelClass=\"m-0 p-0\"\n            class=\"days-checkbox\"\n          ></ir-checkbox>\n        ))}\n      </Host>\n    );\n  }\n}\n"],"mappings":"oGAAA,MAAMA,EAAa,gHACnB,MAAAC,EAAeD,E,MCOFE,EAAO,MALpB,WAAAC,CAAAC,G,mDAUUC,KAAAC,QAAmB,MAUnBD,KAAAE,WAAaC,IAyBZH,KAAAI,eAAiB,K,CAS1B,iBAAAC,GACEL,KAAKI,eAAiBJ,KAAKC,O,CAE7B,gBAAAK,GACE,GAAIN,KAAKO,SAAU,CACjBP,KAAKO,SAASC,aAAa,eAAgBC,KAAKC,UAAUV,KAAKC,S,EAOnE,mBAAAU,CAAoBC,GAClB,GAAIA,IAAaZ,KAAKI,eAAgB,CACpC,M,CAEFJ,KAAKI,eAAiBJ,KAAKC,O,CAMrB,iBAAAY,GACNb,KAAKI,gBAAkBJ,KAAKI,eAC5B,GAAIJ,KAAKO,SAAU,CACjBP,KAAKO,SAASC,aAAa,eAAgBC,KAAKC,UAAUV,KAAKI,gB,CAEjEJ,KAAKc,YAAYC,KAAKf,KAAKI,e,CAE7B,MAAAY,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,eACTF,EAAA,SAAAC,IAAA,2CAAOC,MAAM,+DACXF,EAAA,QAAAC,IAAA,4CAAOlB,KAAKoB,OACZH,EAAA,SAAAC,IAAA,2CACEC,MAAM,UACNE,KAAK,QACLC,MAAM,MACNC,KAAMvB,KAAKwB,GAAGD,KACdE,MAAM,GACNC,SAAU,KACR1B,KAAKa,mBAAmB,EAE1BZ,QAASD,KAAKI,eACduB,IAAKH,GAAOxB,KAAKO,SAAWiB,IAE9BP,EAAA,QAAAC,IAAA,2CAAMC,MAAM,e,mGCvGtB,MAAMS,EAAuB,4FAC7B,MAAAC,EAAeD,E,MCSFE,EAAiB,MAL9B,WAAAhC,CAAAC,G,uDASUC,KAAA+B,SAAqB,GAKpB/B,KAAAgC,iBAAgC,IAAIC,IAAIjC,KAAK+B,UAY9C/B,KAAAkC,UAAuB,CAC7B,CAAEZ,MAAO,EAAGF,MAAO,KACnB,CAAEE,MAAO,EAAGF,MAAO,KACnB,CAAEE,MAAO,EAAGF,MAAO,KACnB,CAAEE,MAAO,EAAGF,MAAO,MACnB,CAAEE,MAAO,EAAGF,MAAO,MACnB,CAAEE,MAAO,EAAGF,MAAO,MACnB,CAAEE,MAAO,EAAGF,MAAO,M,CAIrB,mBAAAe,CAAoBC,EAAmBC,GACrC,GAAID,EAAQE,SAAWD,EAAQC,QAAUF,EAAQE,SAAWtC,KAAKgC,iBAAiBO,KAAM,CACtFvC,KAAKgC,iBAAmB,IAAIC,IAAIG,E,EAU5B,cAAAI,EAAevC,QAAEA,EAAOwC,QAAEA,IAChC,MAAMC,EAAO,IAAIT,IAAIjC,KAAKgC,kBAC1B,GAAI/B,EAAS,CACX,IAAKD,KAAKgC,iBAAiBW,IAAIF,GAAU,CACvCC,EAAKE,IAAIH,GACTzC,KAAKgC,iBAAmB,IAAIC,IAAIS,E,MAE7B,CACLA,EAAKG,OAAOJ,GACZzC,KAAKgC,iBAAmB,IAAIC,IAAIS,E,CAElC1C,KAAK8C,cAAc/B,KAAKgC,MAAMC,KAAKhD,KAAKgC,kB,CAE1C,MAAAhB,GACE,OACEC,EAACgC,EAAI,CAAA/B,IAAA,2CAACC,MAAM,iCAAiC+B,MAAO,CAAEC,IAAK,WACxDnD,KAAKkC,UAAUkB,KAAIC,GAClBpC,EAAA,eACEhB,QAASD,KAAKgC,iBAAiBW,IAAIU,EAAE/B,OACrCgC,cAAeC,GAAKvD,KAAKwC,eAAe,CAAEvC,QAASsD,EAAEC,OAAQf,QAASY,EAAE/B,QACxEF,MAAOiC,EAAEjC,MACTqC,WAAW,UACXtC,MAAM,oB","ignoreList":[]}