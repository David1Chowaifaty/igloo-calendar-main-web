{"version":3,"names":["VariationService","formatVariationBasedOnInfants","params","variation","this","getVariationBasedOnInfants","formatVariation","infants","calculateVariationAmount","_a","discounted_amount","variations","baseVariation","adult_nbr","child_nbr","find","v","Math","max","infant_nbr","adultNumber","Number","infantNumber","adultLabel","locales","entries","Lcz_Adults","toLowerCase","Lcz_Adult","childLabel","Lcz_Children","Lcz_Child","infantLabel","_b","_d","_c","parts","filter","Boolean","join","iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","constructor","hostRef","bedPreferenceType","bookingType","totalNights","isButtonPressed","variationService","componentWillLoad","isSingleUnit","rateplanSelection","roomtype","id","filteredRooms","filterRooms","length","updateGuest","unit","toString","roomTypeId","ratePlanId","ratePlan","prevGuest","guest","roomIndex","Object","assign","booking_store","ratePlanSelections","handleButtonClicked","event","detail","key","getTooltipMessages","selected_variation","selectedVariation","guestInfo","matchingVariation","cancellationPolicy","_e","applicable_policies","p","type","combined_statement","guaranteePolicy","_g","_f","tooltip","undefined","getAmount","is_amount_modified","view_mode","rp_amount","discounted_gross_amount","result","calendar_data","is_frontdesk_enabled","assignable_units","forEach","Is_Fully_Available","push","name","pr_id","filteredGuestsRoom","_","i","map","r","filteredResults","includes","baseData","roomtypeId","f","sort","a","b","localeCompare","render","filteredRoomList","formattedVariation","h","Host","class","short_name","is_non_refundable","message","innerHTML","formatAmount","currency","symbol","Lcz_Stay","v4","placeholder","Lcz_GuestFirstnameAndLastname","onInput","target","value","event_type","modifyBookingStore","required","onChange","selected","Lcz_Assignunits","room","is_bed_configuration_enabled","bed_preference","Lcz_BedConfiguration","data","CODE_NAME","CODE_VALUE_EN","style","gap","marginTop","_h","width","_j","Array","from","item","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","isEventHover","renderAgain","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","renderPage","dataUpdateEvent","emit","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","console","log","fromDate","toDate","from_date","dateOption","showDateDifference","to_date","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","country_phone_prefix","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","resetRoomsInfoAndMessage","roomsInfo","onDataRoomUpdate","selectedUnits","isEdit","isEditBooking","units","changedKey","roomCategoryKey","roomCategoryId","ratePlanKey","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","fill","size","clear","guestName","roomId","generateDailyRates","amount","endDate","setDate","currentDate","days","date","moment","format","cost","extractFirstNameAndLastName","names","split","getBookedRooms","check_in","check_out","notes","identifier","override_unit","total_days","calculateDaysBetweenDates","calculateAmount","rateplanId","rateplan","reserved","prepayment_amount_gross","occupancy","children_nbr","city","address","dob","cci","prepareBookUserServiceParams","sourceOption","dateRangeData","Error","generateNewRooms","isEventType","bookingData","PR_ID","modifyBookingDetails","pickup_info","extra_services","is_direct","is_in_loyalty_mode","promo_key","extras","rest","__rest","assign_units","is_pms","booking","newBooking","currentRoomType","newRooms","isAgent","agent","tag","property","propertyid","booked_on","hour","minute","source","code","nbr","holder_name","expiry_month","expiry_year","getRoomCategoryByRoomId","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","rate","RATE","rateType","roomCategoryName","ratePlanName","RATE_PLAN","NAME","cancelation","guarantee","adult_child_offering","iglBookPropertyCss","IglBookPropertyStyle0","IglBookProperty","showPaymentDetails","adultChildCount","adult","child","bookingHistory","initialRoomIds","showSplitBookingOption","sourceOptions","guestData","ratePricingMode","bookPropertyService","updatedBooking","MAX_HISTORY_LENGTH","handleKeyDown","bind","initializeDefaultDateRange","defaultDateRange","initializeDefaultData","wasBlockedUnit","hasOwnProperty","fetchSetupEntriesAndInitialize","initializeEventData","componentDidLoad","document","addEventListener","disconnectedCallback","removeEventListener","clearBooking","e","stopImmediatePropagation","stopPropagation","handleSpiltBookingSelected","getExposedBooking","language","handleAdultChildChange","updateBookingHistory","adults","children","onDateRangeSelect","opt","dates","checkIn","checkOut","checkBookingAvailability","handleSourceDropDown","selectedSource","description","gotoSplitPageTwo","gotoPage","bookUser","closeWindow","animateIrSelect","calculateTotalRooms","animateIrButton","toast","Lcz_SelectRatePlan","title","partialData","lastEntry","newEntry","shift","FROM_DATE","TO_DATE","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","initializeEditBookingData","initializePage","CHILDREN_COUNT","roomName","page","isGuestDataIncomplete","isButtonDisabled","isValidProperty","comparedBy","bookingSource","SOURCE","arrivalTime","is_in_agent_mode","room_type_ids_to_update","room_type_ids","getBookingAvailability","agent_id","updateBooking","reserveRooms","checkAndBlockDate","block_exposed_unit_props","isAvailable","roomTypes","every","rt","is_available_to_book","handleBlockDate","resetBookingStore","closeBookingWindow","didReservation","handleBlockDateUpdate","handleGuestInfoUpdate","guestRefKey","handleBookedByInfoUpdate","getPageBlockDatesView","Fragment","ENTRY_DATE","onDataUpdateEvent","text","Lcz_Cancel","btn_color","onClick","Lcz_Blockdates","isLoading","isRequestPending","handlePageTwoDataUpdateEvent","auto_close","props","releaseData","dateToFormattedString","NOTES","STAY_STATUS_CODE","DESCRIPTION","blockUnit","setLoadingState","serviceParams","doReservation","resetBookingEvt","resetLoadingState","setTimeout","getCurrentPage","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","propertyId","selectedGuestData","countryNodeList","defaultGuestData","isEditOrAddRoomEvent","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","disabled","editNext","label","renderButton","icon_name","shouldRenderTwoButtons","btn_disabled","onClickHandler","buttonClicked","iconPosition","icon_style","paddingBottom","Lcz_Next","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","splitBookingId","getSplitBookingList","Lcz_Tobooking","keys","bookingDataDefaultDateRange","Lcz_BookingNumber","onComboboxValue","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","obj","adultChild","getAdultChildConstraints","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","adult_max_nbr","child_max_nbr","renderChildCaption","btn_id","icon","Lcz_Check","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","Lcz_ChooseBookingNumber","position","initialToDate","initialFromDate","selectedFromDate","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","replace","Lcz_PlzSelectNumberOfGuests","minDate","getTime","showSourceNode","variant","dateLabel","Lcz_Dates","add","startOf","tax_statement","iglBookingFormCss","IglBookingFormStyle0","IglBookingForm","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","isRateModified","preference","rate_plan","dateDifference","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","index","categoryIdKey","updatedUnits","handleEventData","Lcz_TotalPrice","values","val","rp","Lcz_Back","btn_styles","Lcz_Save","Lcz_Book","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","getSplitBookings","splitBookingEvents","setMinDate","today","splitBookings","roomType","isBookDisabled","roomInfoId","roomsDataUpdate","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","withDateDifference","fromDateStr","toDateStr","initializeDates","handleDataChange","newValue","oldValue","JSON","stringify","getFormattedDateString","calculateTotalNights","getFullYear","handleDateSelectEvent","dateSelectEvent","handleDateChange","start","end","maxDate","autoApply","onDateChanged","Lcz_Nights","Lcz_Night","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","bookedByData","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","getMonth","handleNumberInput","inputElement","inputValue","numericRegex","test","checkUser","z","string","safeParse","success","getUserInfo","mobile_without_prefix","prevBookedByData","checkout_guest","handleComboboxChange","clearEvent","Lcz_BookedBy","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","Lcz_Select","countryNode","Lcz_MobilePhone","phone_prefix","default_country","onTextChange","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","iglRatePlanCss","IglRatePlanStyle0","IglRatePlan","disableForm","shouldBeDisabled","visibleInventory","updateRateplanSelection","currentSelections","handleVariationChange","bookProperty","gotoSplitPageTwoEvent","renderRate","amount_per_night_gross","updateRoomParams","resetReserved","updatedSelections","reduce","acc","ratePlans","rpAcc","isAvailableToBook","formattedVariations","uuidv4","Lcz_Rate","Lcz_Current","iglRoomTypeCss","IglRoomTypeStyle0","IglRoomType","roomsDistributions","validBookingTypes","isValidBookingType","rateplans","getVisibleInventory"],"sources":["src/services/variation.service.ts","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.css?tag=igl-booking-form&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.css?tag=igl-room-type&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.tsx"],"sourcesContent":["import { Variation } from '@/models/property';\r\nimport locales from '@/stores/locales.store';\r\n\r\nexport default class VariationService {\r\n  /**\r\n   * Formats a variation based on the number of infants and returns a formatted string.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust the variation for.\r\n   * @returns {string} A formatted string describing the variation adjusted for infants.\r\n   */\r\n  public formatVariationBasedOnInfants(params: { baseVariation: Variation; variations: Variation[]; infants: number }): string {\r\n    const variation = this.getVariationBasedOnInfants(params);\r\n    return this.formatVariation(variation, params.infants);\r\n  }\r\n\r\n  /**\r\n   * Calculates the discounted amount for a variation adjusted for the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to consider for adjustments.\r\n   * @returns {number} The discounted amount for the selected variation, or 0 if no discounted amount is available.\r\n   */\r\n  public calculateVariationAmount(params: { baseVariation: Variation; variations: Variation[]; infants: number }): number {\r\n    return this.getVariationBasedOnInfants(params)?.discounted_amount || 0;\r\n  }\r\n\r\n  /**\r\n   * Finds the appropriate variation from a list of variations based on the number of infants.\r\n   * @param {Object} params - The input parameters.\r\n   * @param {Variation} params.baseVariation - The base variation object.\r\n   * @param {Variation[]} params.variations - A list of available variations.\r\n   * @param {number} params.infants - The number of infants to adjust for.\r\n   * @returns {Variation} The matching variation or the base variation if no match is found.\r\n   */\r\n  public getVariationBasedOnInfants({ variations, baseVariation, infants }: { baseVariation: Variation; variations: Variation[]; infants: number }): Variation {\r\n    const { adult_nbr, child_nbr } = baseVariation;\r\n    return variations.find(v => v.adult_nbr === adult_nbr && v.child_nbr === Math.max(0, child_nbr - Math.max(0, infants))) || baseVariation;\r\n  }\r\n\r\n  /**\r\n   * Formats a variation object into a human-readable string, adjusted for the number of infants.\r\n   * @param {Variation} variation - The variation object to format.\r\n   * @param {number} infant_nbr - The number of infants to adjust for.\r\n   * @returns {string} A formatted string representing the variation.\r\n   * @private\r\n   */\r\n  private formatVariation({ child_nbr, adult_nbr }: Variation, infant_nbr: number): string {\r\n    const adultNumber = Number(adult_nbr) || 0;\r\n    const infantNumber = Math.max(Number(infant_nbr) || 0, 0);\r\n    const adultLabel = adultNumber > 1 ? locales.entries.Lcz_Adults.toLowerCase() : locales.entries.Lcz_Adult.toLowerCase();\r\n    const childLabel = child_nbr > 1 ? locales.entries.Lcz_Children.toLowerCase() : locales.entries.Lcz_Child.toLowerCase();\r\n    const infantLabel = infantNumber > 1 ? (locales.entries['Lcz_Infants'] ?? 'infants')?.toLowerCase() : (locales?.entries['Lcz_Infant'] ?? 'infant')?.toLowerCase();\r\n    const parts = [`${adultNumber} ${adultLabel}`, child_nbr ? `${child_nbr} ${childLabel}` : '', infantNumber ? `${infantNumber} ${infantLabel}` : ''];\r\n    return parts.filter(Boolean).join('&nbsp&nbsp&nbsp&nbsp');\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.rate_amount {\r\n  display: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  gap: 0.5rem;\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.booking-roomtype-title {\r\n  font-size: 1.25rem;\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-details-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-rateplan {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-rateplan-name {\r\n  font-weight: bold;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-tooltip {\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-variation {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-price {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-details-container {\r\n  display: none;\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .booking-header {\r\n    justify-content: flex-start;\r\n  }\r\n  .booking-footer,\r\n  .booking-price {\r\n    display: none;\r\n  }\r\n  .booking-details-container,\r\n  .rate_amount {\r\n    display: inline-flex;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 80%;\r\n  }\r\n  .guest-info-container {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .preference-select-container {\r\n    max-width: 250px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection, modifyBookingStore, RatePlanGuest } from '@/stores/booking.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { v4 } from 'uuid';\r\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport VariationService from '@/services/variation.service';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() rateplanSelection: IRatePlanSelection;\r\n  @Prop() guestInfo: RatePlanGuest | null;\r\n  @Prop() currency: ICurrency;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() roomIndex: number;\r\n  @Prop() totalNights: number = 1;\r\n  @Prop() baseData: { unit: { id: string; name: string }; roomtypeId: number };\r\n\r\n  @State() isButtonPressed = false;\r\n\r\n  private variationService = new VariationService();\r\n\r\n  componentWillLoad() {\r\n    if (isSingleUnit(this.rateplanSelection.roomtype.id)) {\r\n      const filteredRooms = this.filterRooms();\r\n      if (filteredRooms.length > 0) this.updateGuest({ unit: filteredRooms[0]?.id?.toString() });\r\n    }\r\n  }\r\n\r\n  private updateGuest(params: Partial<RatePlanGuest>) {\r\n    const roomTypeId = this.rateplanSelection.roomtype.id;\r\n    const ratePlanId = this.rateplanSelection.ratePlan.id;\r\n    let prevGuest = [...this.rateplanSelection.guest];\r\n    prevGuest[this.roomIndex] = {\r\n      ...prevGuest[this.roomIndex],\r\n      ...params,\r\n    };\r\n    booking_store.ratePlanSelections = {\r\n      ...booking_store.ratePlanSelections,\r\n      [roomTypeId]: {\r\n        ...booking_store.ratePlanSelections[roomTypeId],\r\n        [ratePlanId]: { ...this.rateplanSelection, guest: [...prevGuest] },\r\n      },\r\n    };\r\n  }\r\n\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, selected_variation } = this.rateplanSelection;\r\n    let selectedVariation = selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      selectedVariation = this.variationService.getVariationBasedOnInfants({\r\n        variations: ratePlan.variations,\r\n        baseVariation: selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => variation.adult_nbr === selectedVariation.adult_nbr && variation.child_nbr === selectedVariation.child_nbr);\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  private getAmount(): number {\r\n    if (this.rateplanSelection.is_amount_modified) {\r\n      return this.rateplanSelection.view_mode === '001' ? this.rateplanSelection.rp_amount : this.rateplanSelection.rp_amount * this.totalNights;\r\n    }\r\n    let variation = this.rateplanSelection.selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      variation = this.variationService.getVariationBasedOnInfants({\r\n        variations: this.rateplanSelection.ratePlan.variations,\r\n        baseVariation: this.rateplanSelection.selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n    return variation.discounted_gross_amount;\r\n  }\r\n\r\n  private filterRooms(): { name: string; id: number }[] {\r\n    const result = [];\r\n    if (!calendar_data.is_frontdesk_enabled) {\r\n      return result;\r\n    }\r\n    this.rateplanSelection.ratePlan?.assignable_units?.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    const filteredGuestsRoom = this.rateplanSelection.guest.filter((_, i) => i !== this.roomIndex).map(r => r.unit);\r\n    const filteredResults = result.filter(r => !filteredGuestsRoom.includes(r.id.toString()));\r\n    return this.bookingType === 'EDIT_BOOKING'\r\n      ? [...filteredResults, this.rateplanSelection.roomtype.id === this.baseData?.roomtypeId ? this.baseData?.unit : null]\r\n          .filter(f => !!f)\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n      : filteredResults;\r\n  }\r\n\r\n  render() {\r\n    const filteredRoomList = this.filterRooms();\r\n    const formattedVariation = this.variationService.formatVariationBasedOnInfants({\r\n      baseVariation: this.rateplanSelection.selected_variation,\r\n      infants: this.guestInfo.infant_nbr,\r\n      variations: this.rateplanSelection.ratePlan.variations,\r\n    });\r\n    return (\r\n      <Host class={'my-2'}>\r\n        <div class=\"booking-header\">\r\n          {(this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n            <span class=\"booking-roomtype-title\">{this.rateplanSelection.roomtype.name}</span>\r\n          )}\r\n          <div class=\"booking-details-container\">\r\n            <div class=\"booking-rateplan\">\r\n              <p class=\"booking-rateplan-name\">\r\n                {this.rateplanSelection.ratePlan.short_name} {this.rateplanSelection.ratePlan.is_non_refundable && <span class={'non-ref-span'}>Non Refundable</span>}\r\n              </p>\r\n              <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n            </div>\r\n            <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n          </div>\r\n          <p class=\"booking-price\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        <div class=\"booking-footer\">\r\n          <div class=\"booking-rateplan\">\r\n            <p class=\"booking-rateplan-name\">{this.rateplanSelection.ratePlan.short_name}</p>\r\n            <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n          </div>\r\n          <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n        </div>\r\n        <div class=\"d-flex flex-column flex-md-row  p-0 align-items-md-center aplicationInfoContainer\">\r\n          <div class=\"mr-1 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"email\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries.Lcz_GuestFirstnameAndLastname}\r\n              name=\"guestName\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.name}\r\n            />\r\n          </div>\r\n          <div class=\"mt-1 mt-md-0 d-flex align-items-center flex-fill\">\r\n            {calendar_data.is_frontdesk_enabled &&\r\n              !isSingleUnit(this.rateplanSelection.roomtype.id) &&\r\n              (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n                <div class=\"mr-1 p-0 flex-fill preference-select-container\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.updateGuest({ unit: (event.target as HTMLInputElement).value })}>\r\n                    <option value=\"\" selected={this.guestInfo?.unit === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {filteredRoomList?.map(room => (\r\n                      <option value={room.id} selected={this.guestInfo?.unit === room.id.toString()}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n          </div>\r\n          {this.rateplanSelection.roomtype.is_bed_configuration_enabled && (\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                onChange={event => this.updateGuest({ bed_preference: (event.target as HTMLInputElement).value })}\r\n              >\r\n                <option value=\"\" selected={this.guestInfo?.bed_preference === ''}>\r\n                  {locales.entries.Lcz_BedConfiguration}\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestInfo?.bed_preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <p class=\"rate_amount\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        {this.rateplanSelection.selected_variation.child_nbr > 0 && (\r\n          <div style={{ gap: '0.5rem', marginTop: '0.5rem' }} class=\"d-flex  flex-row  p-0 align-items-center aplicationInfoContainer\">\r\n            <p class={'m-0 p-0 text-danger'}>Any of the children below 3 years?</p>\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                style={{ width: 'max-content' }}\r\n                onChange={event => this.updateGuest({ infant_nbr: Number((event.target as HTMLInputElement).value) })}\r\n              >\r\n                <option value=\"\" selected={Number(this.guestInfo?.infant_nbr) === 0}>\r\n                  {locales.entries['No'] || 'No'}\r\n                </option>\r\n                {Array.from({ length: this.rateplanSelection.selected_variation.child_nbr }, (_, i) => i + 1).map(item => (\r\n                  <option value={item} selected={this.guestInfo?.infant_nbr === item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries } from '@/models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    console.log({ fromDate: this.fromDate, toDate: this.toDate });\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"YYYY-MM-DD\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { Booking, Room } from '@/models/booking.dto';\r\nimport { TSourceOption } from '@/models/igl-book-property';\r\nimport VariationService from '@/services/variation.service';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { extras } from '@/utils/utils';\r\nimport moment from 'moment';\r\n\r\nexport class IglBookPropertyService {\r\n  private variationService: VariationService;\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n\r\n  private generateDailyRates(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = new Date(to_date);\r\n    endDate.setDate(endDate.getDate() - 1);\r\n\r\n    let currentDate = new Date(from_date);\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate <= endDate) {\r\n      days.push({\r\n        date: moment(currentDate).format('YYYY-MM-DD'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n\r\n  private extractFirstNameAndLastName(name: string) {\r\n    const names = name.split(' ');\r\n    return { first_name: names[0] || null, last_name: names[1] || null };\r\n  }\r\n\r\n  private getBookedRooms({\r\n    check_in,\r\n    check_out,\r\n    notes,\r\n    identifier,\r\n    override_unit,\r\n    unit,\r\n  }: {\r\n    identifier: string | null;\r\n    check_in: Date;\r\n    check_out: Date;\r\n    override_unit: boolean;\r\n    unit: string;\r\n    notes: string | null;\r\n  }) {\r\n    const rooms = [];\r\n    const total_days = calculateDaysBetweenDates(moment(check_in).format('YYYY-MM-DD'), moment(check_out).format('YYYY-MM-DD'));\r\n    const calculateAmount = ({ is_amount_modified, selected_variation, view_mode, rp_amount, ratePlan }: IRatePlanSelection, infants: number) => {\r\n      if (is_amount_modified) {\r\n        return view_mode === '002' ? rp_amount : rp_amount / total_days;\r\n      }\r\n      let variation = selected_variation;\r\n      if (infants > 0) {\r\n        if (!this.variationService) {\r\n          this.variationService = new VariationService();\r\n        }\r\n        variation = this.variationService.getVariationBasedOnInfants({ variations: ratePlan.variations, baseVariation: selected_variation, infants });\r\n      }\r\n      return Number(variation.discounted_amount) / total_days;\r\n    };\r\n    for (const roomTypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (let i = 0; i < rateplan.reserved; i++) {\r\n            const { first_name, last_name } = this.extractFirstNameAndLastName(rateplan.guest[i].name);\r\n            rooms.push({\r\n              identifier,\r\n              roomtype: rateplan.roomtype,\r\n              rateplan: rateplan.ratePlan,\r\n              prepayment_amount_gross: 0,\r\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\r\n              occupancy: {\r\n                adult_nbr: rateplan.selected_variation.adult_nbr,\r\n                children_nbr: rateplan.selected_variation.child_nbr - Math.max(rateplan.guest[i].infant_nbr, 0),\r\n                infant_nbr: rateplan.guest[i].infant_nbr,\r\n              },\r\n              bed_preference: rateplan.guest[i].bed_preference,\r\n              from_date: moment(check_in).format('YYYY-MM-DD'),\r\n              to_date: moment(check_out).format('YYYY-MM-DD'),\r\n              notes,\r\n              days: this.generateDailyRates(check_in, check_out, calculateAmount(rateplan, rateplan.guest[i].infant_nbr)),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: null,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\r\n    try {\r\n      // Validate context structure\r\n      if (!context || !context.dateRangeData) {\r\n        throw new Error('Invalid context: Missing date range data.');\r\n      }\r\n\r\n      const fromDate = new Date(context.dateRangeData.fromDate);\r\n      const toDate = new Date(context.dateRangeData.toDate);\r\n\r\n      const generateNewRooms = (identifier = null) => {\r\n        return this.getBookedRooms({\r\n          check_in: fromDate,\r\n          check_out: toDate,\r\n          identifier,\r\n          notes: '',\r\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\r\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\r\n        });\r\n      };\r\n\r\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\r\n        return {\r\n          assign_units: true,\r\n          check_in: false,\r\n          is_pms: true,\r\n          is_direct,\r\n          is_in_loyalty_mode,\r\n          promo_key,\r\n          extras,\r\n          booking: {\r\n            ...rest,\r\n            rooms,\r\n          },\r\n          extra_services,\r\n          pickup_info,\r\n        };\r\n      };\r\n\r\n      let newBooking = null;\r\n\r\n      switch (context.defaultData.event_type) {\r\n        case 'EDIT_BOOKING': {\r\n          const { booking, currentRoomType } = context.defaultData;\r\n\r\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\r\n\r\n          const newRooms = generateNewRooms(currentRoomType.identifier);\r\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\r\n          break;\r\n        }\r\n        case 'ADD_ROOM':\r\n        case 'SPLIT_BOOKING': {\r\n          const { booking } = context.defaultData;\r\n          if (!booking) {\r\n            throw new Error('Missing booking');\r\n          }\r\n          console.log(booking);\r\n          const newRooms = generateNewRooms();\r\n          newBooking = modifyBookingDetails(booking, [...booking?.rooms, ...newRooms]);\r\n          break;\r\n        }\r\n        default: {\r\n          const newRooms = generateNewRooms();\r\n          const { bookedByInfoData } = context;\r\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\r\n          newBooking = {\r\n            assign_units: true,\r\n            check_in,\r\n            is_pms: true,\r\n            is_direct: true,\r\n            is_in_loyalty_mode: false,\r\n            promo_key: null,\r\n            extras,\r\n            agent: isAgent ? { id: sourceOption.tag } : null,\r\n            booking: {\r\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\r\n              to_date: moment(toDate).format('YYYY-MM-DD'),\r\n              remark: bookedByInfoData.message || null,\r\n              booking_nbr: '',\r\n              property: {\r\n                id: context.propertyid,\r\n              },\r\n              booked_on: {\r\n                date: moment().format('YYYY-MM-DD'),\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n              },\r\n              source: isAgent ? '' : sourceOption,\r\n              rooms: newRooms,\r\n              currency: context.currency,\r\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\r\n              guest: {\r\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n                first_name: bookedByInfoData.firstName,\r\n                last_name: bookedByInfoData.lastName,\r\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n                city: null,\r\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\r\n                address: '',\r\n                dob: null,\r\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n                cci: bookedByInfoData.cardNumber\r\n                  ? {\r\n                      nbr: bookedByInfoData.cardNumber,\r\n                      holder_name: bookedByInfoData.cardHolderName,\r\n                      expiry_month: bookedByInfoData.expiryMonth,\r\n                      expiry_year: bookedByInfoData.expiryYear,\r\n                    }\r\n                  : null,\r\n              },\r\n            },\r\n            pickup_info: null,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n      return newBooking;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n/* .row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n} */\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '@/utils/utils';\r\nimport { IEntries, RoomBlockDetails } from '@/models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore } from '@/stores/booking.store';\r\nimport moment from 'moment';\r\nexport type IHistoryEntry = {\r\n  dates: { checkIn: Date; checkOut: Date };\r\n  adults: number;\r\n  children: number;\r\n};\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() bookingHistory: Array<{\r\n    dates: { checkIn: Date; checkOut: Date };\r\n    adults: number;\r\n    children: number;\r\n  }> = [];\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n  private updatedBooking: boolean = false;\r\n  private MAX_HISTORY_LENGTH: number = 2;\r\n  private didReservation: boolean;\r\n  private wasBlockedUnit: boolean;\r\n\r\n  async componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.initializeDefaultDateRange();\r\n\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    console.log('testing');\r\n    // console.log(this.bookingData);\r\n    this.initializeDefaultData();\r\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\r\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\r\n    await this.fetchSetupEntriesAndInitialize();\r\n    this.initializeEventData();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    if (key === 'select' || (key === 'blur' && data !== '')) {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\r\n      this.defaultData = { ...this.defaultData, booking: res };\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  // @Listen('adultChild')\r\n  // handleAdultChildChange(event: CustomEvent) {\r\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n  //   }\r\n  //   const { adult, child } = event.detail;\r\n  //   this.adultChildCount = { ...event.detail };\r\n  //   this.updateBookingHistory({ adults: adult, children: child });\r\n  // }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    const { adult, child } = event.detail;\r\n    this.adultChildCount = { ...event.detail };\r\n\r\n    // Update the booking history\r\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\r\n  }\r\n\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.updateBookingHistory({\r\n      dates: {\r\n        checkIn: new Date(this.dateRangeData.fromDate),\r\n        checkOut: new Date(new Date(opt.data.toDate)),\r\n      },\r\n    });\r\n    console.log('date changed', opt);\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.checkBookingAvailability();\r\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (calculateTotalRooms() > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else if (this.defaultData?.roomsInfo.length === 0) {\r\n          this.animateIrButton.emit('check_availability');\r\n          break;\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.checkBookingAvailability();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\r\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\r\n\r\n    const newEntry: IHistoryEntry = {\r\n      dates: {\r\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\r\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\r\n      },\r\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\r\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\r\n    };\r\n\r\n    // Update the booking history\r\n    this.bookingHistory.push(newEntry);\r\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\r\n      this.bookingHistory.shift();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    }\r\n  }\r\n\r\n  private initializeDefaultDateRange() {\r\n    this.defaultDateRange = {\r\n      from_date: this.bookingData.FROM_DATE,\r\n      to_date: this.bookingData.TO_DATE,\r\n    };\r\n  }\r\n\r\n  private initializeDefaultData() {\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n  }\r\n\r\n  private async fetchSetupEntriesAndInitialize() {\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  private initializeEventData() {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.initializeEditBookingData();\r\n    }\r\n\r\n    if (!this.isEventType('BAR_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n\r\n    this.initializePage();\r\n  }\r\n\r\n  private initializeEditBookingData() {\r\n    this.adultChildCount = {\r\n      adult: this.defaultData.ADULTS_COUNT,\r\n      child: this.defaultData.CHILDREN_COUNT,\r\n    };\r\n\r\n    this.initialRoomIds = {\r\n      roomName: this.defaultData.roomName,\r\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n      roomId: this.defaultData.PR_ID,\r\n      roomTypeId: this.defaultData.RATE_TYPE,\r\n    };\r\n    const { currentRoomType } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n\r\n    modifyBookingStore('guest', {\r\n      bed_preference: currentRoomType.bed_preference?.toString(),\r\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n      name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n      unit: (currentRoomType.unit as any)?.id?.toString(),\r\n    });\r\n    this.checkBookingAvailability();\r\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n  }\r\n\r\n  private initializePage() {\r\n    switch (this.defaultData.event_type) {\r\n      case 'SPLIT_BOOKING':\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n        break;\r\n      case 'BLOCK_DATES':\r\n        this.page = 'page_block_date';\r\n        break;\r\n      default:\r\n        this.page = 'page_one';\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  private isGuestDataIncomplete() {\r\n    for (const roomtypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (const guest of rateplan.guest) {\r\n            if (guest.name === '') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n    );\r\n  }\r\n\r\n  private setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  private setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  private async checkBookingAvailability() {\r\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\r\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\r\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n        room_type_ids_to_update,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\r\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\r\n        this.updateBooking();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing booking availability:', error);\r\n    }\r\n  }\r\n\r\n  private updateBooking() {\r\n    try {\r\n      const { currentRoomType } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n      const roomtypeId = currentRoomType.roomtype.id;\r\n      const rateplanId = currentRoomType.rateplan.id;\r\n      reserveRooms({\r\n        roomTypeId: roomtypeId,\r\n        ratePlanId: rateplanId,\r\n        rooms: 1,\r\n        guest: [\r\n          {\r\n            bed_preference: currentRoomType.bed_preference?.toString(),\r\n            infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n            name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n            unit: (currentRoomType.unit as any)?.id?.toString(),\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private async checkAndBlockDate() {\r\n    try {\r\n      const { block_exposed_unit_props } = this.defaultData;\r\n      await this.bookingService.getBookingAvailability({\r\n        from_date: block_exposed_unit_props.from_date,\r\n        to_date: block_exposed_unit_props.to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: {\r\n          adult: 2,\r\n          child: 0,\r\n        },\r\n        language: this.language,\r\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\r\n        currency: this.currency,\r\n      });\r\n      const isAvailable = booking_store.roomTypes.every(rt => rt.is_available_to_book);\r\n      if (isAvailable) {\r\n        await this.handleBlockDate(false);\r\n      } else {\r\n        console.log('Blocked date is unavailable. Continuing...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking and blocking date:', error);\r\n    }\r\n  }\r\n  private async closeWindow() {\r\n    resetBookingStore();\r\n    this.closeBookingWindow.emit();\r\n\r\n    if (this.wasBlockedUnit && !this.didReservation) {\r\n      await this.checkAndBlockDate();\r\n    }\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private isEventType(key: TEventType) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n\r\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  private renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  private gotoPage(gotoPage: string) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  private getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.defaultData.FROM_DATE}\r\n          toDate={this.defaultData.TO_DATE}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n\r\n  private async handleBlockDate(auto_close = true) {\r\n    const props = this.wasBlockedUnit\r\n      ? this.defaultData.block_exposed_unit_props\r\n      : (() => {\r\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n          return {\r\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n            pr_id: this.defaultData.PR_ID.toString(),\r\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n            ...releaseData,\r\n          };\r\n        })();\r\n    await this.bookingService.blockUnit(props);\r\n    // const blockedUnit = await transformNewBLockedRooms(result);\r\n    // this.blockedCreated.emit(blockedUnit);\r\n    if (auto_close) this.closeWindow();\r\n  }\r\n\r\n  private async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else if (this.isButtonDisabled()) {\r\n      this.isLoading = '';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      this.didReservation = true;\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\r\n        context: this,\r\n        sourceOption: this.sourceOption,\r\n        check_in,\r\n      });\r\n      // console.log(serviceParams);\r\n      await this.bookingService.doReservation(serviceParams);\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.error('Error booking user:', error);\r\n    } finally {\r\n      // this.isLoading = null;\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  private setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  private resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n\r\n  private getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-booking-form\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countryNodeList={this.countryNodeList}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-booking-form>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n:host > * {\r\n  margin: auto;\r\n  padding: auto;\r\n}\r\n\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { FooterButtonType, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { TIcons } from '@/components/ui/ir-icons/icons';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-footer',\r\n  styleUrl: 'igl-book-property-footer.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyFooter {\r\n  @Prop() eventType: string;\r\n  @Prop() disabled: boolean = true;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  private isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  editNext(label) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      if (label === 'Cancel') {\r\n        return 'flex-fill';\r\n      } else {\r\n        return 'd-none d-md-block  flex-fill';\r\n      }\r\n    }\r\n    return 'flex-fill';\r\n  }\r\n\r\n  private renderButton(type: FooterButtonType, label: string, disabled = false, icon_name?: TIcons) {\r\n    return (\r\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\r\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\r\n          {label}\r\n        </button> */}\r\n        <ir-button\r\n          btn_color={type === 'cancel' ? 'secondary' : 'primary'}\r\n          text={label}\r\n          btn_disabled={disabled}\r\n          onClickHandler={() => {\r\n            this.buttonClicked.emit({ key: type });\r\n          }}\r\n          icon_name={icon_name}\r\n          iconPosition=\"right\"\r\n          style={{ '--icon-size': '1rem' }}\r\n          icon_style={{ paddingBottom: '1.9px' }}\r\n        ></ir-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private shouldRenderTwoButtons() {\r\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex justify-content-between gap-30 align-items-center\">\r\n          {this.isEventType('EDIT_BOOKING') ? (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, isRequestPending('/Get_Exposed_Booking_Availability'), 'angles_right')}\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              {this.renderButton('cancel', locales.entries.Lcz_Cancel)}\r\n              {this.shouldRenderTwoButtons() && this.renderButton('next', `${locales.entries.Lcz_Next}`, false, 'angles_right')}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\n\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group  my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group ml-0\">\r\n              <ir-select\r\n                class={'m-0'}\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_child_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1 p-0\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Check_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHandler={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} 0 - ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0 mr-1 \">\r\n            <igl-date-range\r\n              variant=\"booking\"\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport locales from '@/stores/locales.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\n@Component({\r\n  tag: 'igl-booking-form',\r\n  styleUrl: 'igl-booking-form.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingForm {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() propertyId: number;\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\r\n\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: TPropertyButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n    this.selectedBookedByData = this.bookedByInfoData;\r\n  }\r\n\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\r\n      if (isRateModified && preference === 2) {\r\n        return rate * totalNights;\r\n      }\r\n      return rate;\r\n    };\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    this.selectedRooms.forEach((room, key) => {\r\n      room.forEach(rate_plan => {\r\n        newSelectedUnits[key] = rate_plan.selectedUnits;\r\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\r\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...rate_plan,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"d-flex flex-wrap\">\r\n          <ir-date-view\r\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\r\n            from_date={new Date(this.dateRangeData.fromDate)}\r\n            to_date={new Date(this.dateRangeData.toDate)}\r\n            dateOption=\"DD MMM YYYY\"\r\n          ></ir-date-view>\r\n          {this.guestData.length > 1 && (\r\n            <div class=\"mt-1 mt-md-0 text-right\">\r\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {Object.values(booking_store.ratePlanSelections).map(val =>\r\n          Object.values(val).map(ratePlan => {\r\n            const rp = ratePlan as IRatePlanSelection;\r\n            if (rp.reserved === 0) {\r\n              return null;\r\n            }\r\n\r\n            return [...new Array(rp.reserved)].map((_, i) => (\r\n              <igl-application-info\r\n                totalNights={Number(this.dateRangeData.dateDifference)}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                currency={this.currency}\r\n                guestInfo={rp.guest ? rp.guest[i] : null}\r\n                bookingType={this.bookingData.event_type}\r\n                rateplanSelection={rp}\r\n                key={`${rp.ratePlan.id}_${i}`}\r\n                roomIndex={i}\r\n                baseData={\r\n                  this.bookingData.event_type === 'EDIT_BOOKING'\r\n                    ? {\r\n                        roomtypeId: this.bookingData.currentRoomType.roomtype.id,\r\n                        unit: this.bookingData.currentRoomType.unit,\r\n                      }\r\n                    : undefined\r\n                }\r\n              ></igl-application-info>\r\n            ));\r\n          }),\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            propertyId={this.propertyId}\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event => {\r\n              this.handleEventData(event, 'propertyBookedBy', 0);\r\n            }}\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"d-flex p-0 mb-1 mt-2\">\r\n            <div class=\"flex-fill mr-2\">\r\n              <ir-button\r\n                icon=\"\"\r\n                text={locales.entries.Lcz_Back}\r\n                class=\"full-width\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'save'}\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'save' })}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                text={locales.entries.Lcz_Save}\r\n              ></ir-button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\r\n            <div class=\"flex-fill mr-md-1\">\r\n              <ir-button\r\n                icon_name=\"angles_left\"\r\n                btn_color=\"secondary\"\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\r\n                text={locales.entries.Lcz_Back}\r\n                style={{ '--icon-size': '1rem' }}\r\n                icon_style={{ paddingBottom: '1.9px' }}\r\n              ></ir-button>\r\n            </div>\r\n            <div class=\"mt-1 mt-md-0 flex-fill\">\r\n              <ir-button\r\n                isLoading={this.isLoading === 'book'}\r\n                btn_styles=\"full-width align-items-center justify-content-center\"\r\n                onClickHandler={() => this.buttonClicked.emit({ key: 'book' })}\r\n                text={locales.entries.Lcz_Book}\r\n              ></ir-button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport moment from 'moment';\r\nimport booking_store from '@/stores/booking.store';\r\n@Component({\r\n  tag: 'igl-booking-overview-page',\r\n  styleUrl: 'igl-booking-overview-page.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingOverviewPage {\r\n  @Prop() bookingData: any;\r\n  @Prop() propertyId: number;\r\n  @Prop() message: string;\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() eventType: string;\r\n  @Prop() currency: any;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() ratePricingMode: any;\r\n  @Prop() dateRangeData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() sourceOptions: TSourceOptions[];\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() initialRoomIds: any;\r\n\r\n  @Event() roomsDataUpdate: EventEmitter;\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(event: string) {\r\n    return event === this.eventType;\r\n  }\r\n  setMinDate() {\r\n    if (!this.isEventType('EDIT_BOOKING')) {\r\n      return;\r\n    }\r\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\r\n    const today = moment();\r\n    if (from_date.isAfter(today)) {\r\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\r\n    }\r\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <igl-book-property-header\r\n          bookedByInfoData={this.bookedByInfoData}\r\n          defaultDaterange={this.defaultDaterange}\r\n          dateRangeData={this.dateRangeData}\r\n          minDate={this.setMinDate()}\r\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\r\n          adultChildCount={this.adultChildCount}\r\n          splitBookingId={this.showSplitBookingOption}\r\n          bookingData={this.bookingData}\r\n          sourceOptions={this.sourceOptions}\r\n          message={this.message}\r\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\r\n          showSplitBookingOption={this.showSplitBookingOption}\r\n          adultChildConstraints={this.adultChildConstraints}\r\n          splitBookings={this.getSplitBookings()}\r\n          propertyId={this.propertyId}\r\n        ></igl-book-property-header>\r\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\r\n        <div class=\" text-left\">\r\n          {isRequestPending('/Check_Availability') && this.isEventType('EDIT_BOOKING') ? (\r\n            <div class=\"loading-container\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              {booking_store.roomTypes?.map(roomType => (\r\n                <igl-room-type\r\n                  initialRoomIds={this.initialRoomIds}\r\n                  isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\r\n                  key={`room-info-${roomType.id}`}\r\n                  currency={this.currency}\r\n                  ratePricingMode={this.ratePricingMode}\r\n                  dateDifference={this.dateRangeData.dateDifference}\r\n                  bookingType={this.bookingData.event_type}\r\n                  roomType={roomType}\r\n                  class=\"mt-2 mb-1 p-0\"\r\n                  roomInfoId={this.selectedRooms.has(`c_${roomType.id}`) ? roomType.id : null}\r\n                  onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\r\n                ></igl-room-type>\r\n              ))}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n\r\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type}></igl-book-property-footer>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n  font-size: 14px !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 220px !important;\r\n  opacity: 0;\r\n  user-select: none;\r\n  font-size: 14px !important;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 14px;\r\n  margin-right: 14px;\r\n  font-size: 13.65px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  inset: 0;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 245px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n.date-range-container-cn {\r\n  position: relative;\r\n  width: fit-content;\r\n}\r\n.date-range-container-cn:focus-within .date-range-container {\r\n  border: 1px solid #379ff2;\r\n}\r\n.date-range-container {\r\n  position: relative;\r\n  gap: 1rem;\r\n  font-size: 0.975rem;\r\n  line-height: 1.45;\r\n  border-radius: 0.21rem;\r\n  border: 1px solid #cacfe7;\r\n  color: #3b4781;\r\n  padding: 0.75rem 1rem;\r\n  box-sizing: border-box !important;\r\n  font-weight: 400;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  height: 2rem;\r\n  pointer-events: none;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.date-range-container-cn .date-range-input {\r\n  position: absolute;\r\n  width: 100% !important;\r\n}\r\n.date-range-container.disabled {\r\n  border: none;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n.date-range-input[data-state='disabled'] {\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\nimport { IToast } from '@components/ui/ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Prop() variant: 'booking' | 'default' = 'default';\r\n\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n\r\n  @Watch('defaultData')\r\n  handleDataChange(newValue: any, oldValue: any) {\r\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  private initializeDates() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      // this.handleDateSelectEvent('selectedDateRange', {\r\n      //   fromDate: this.fromDate.getTime(),\r\n      //   toDate: this.toDate.getTime(),\r\n      //   fromDateStr: this.fromDateStr,\r\n      //   toDateStr: this.toDateStr,\r\n      //   dateDifference: this.totalNights,\r\n      // });\r\n    }\r\n    return [this.fromDateStr, this.toDateStr];\r\n  }\r\n\r\n  private calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  private getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  private handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  private handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    if (this.variant === 'booking') {\r\n      return (\r\n        <div class={`p-0 m-0 date-range-container-cn`}>\r\n          <ir-date-range\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-range>\r\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\r\n            {this.totalNights && <span class=\"m-0 p-0\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer form-control input-sm\" data-state={this.disabled ? 'disabled' : 'active'}>\r\n          <ir-date-picker\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            minDate={this.fromDate}\r\n            // minDate={this.toDate}\r\n            // maxDate={this.minDate}\r\n            // autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-picker>\r\n          <div data-state={this.disabled ? 'disabled' : 'active'} class=\"date-view\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"10.5\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <ir-date-view showDateDifference={this.disabled} from_date={this.fromDate} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        {this.withDateDifference && (\r\n          <span>\r\n            {this.totalNights && !this.disabled ? (\r\n              <span class=\"iglRangeNights mx-1\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </span>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  /* width: calc(100% - 127px); */\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries, ICountry } from '@/models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\nimport booking_store, { BookingStore, modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile_without_prefix,\r\n            countryId: res.country_id,\r\n            isdCode: res?.country_phone_prefix ?? res.isdCode.toString(),\r\n          };\r\n          console.log(this.bookedByData);\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  private updateGuest(props: Partial<BookingStore['checkout_guest']>) {\r\n    modifyBookingStore('checkout_guest', { ...(booking_store.checkout_guest ?? {}), ...props });\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log(key, data);\r\n    if (key === 'blur') {\r\n      if (z.string().email().safeParse(data).success) {\r\n        this.bookedByData.email = data;\r\n        this.checkUser();\r\n      } else if (this.bookedByData.email !== '' && data == '') {\r\n        this.bookedByData.email = '';\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n    if (key === 'select') {\r\n      this.bookedByData.email = data.email;\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        id: data.id,\r\n        firstName: data.first_name,\r\n        lastName: data.last_name,\r\n        contactNumber: data.mobile_without_prefix,\r\n        countryId: data.country_id,\r\n        isdCode: data['country_phone_prefix'] ?? data?.country_id,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n\r\n    // console.log('data', data, 'key', key);\r\n    // switch (key) {\r\n    //   case 'blur':\r\n    //     if (data !== '') {\r\n    //       this.bookedByData.email = data;\r\n    //       this.checkUser();\r\n    //     } else {\r\n    //       let prevBookedByData = { ...this.bookedByData };\r\n    //       prevBookedByData = { ...prevBookedByData, email: '' };\r\n    //       this.bookedByData = { ...prevBookedByData };\r\n    //       this.dataUpdateEvent.emit({\r\n    //         key: 'bookedByInfoUpdated',\r\n    //         data: { ...this.bookedByData },\r\n    //       });\r\n    //     }\r\n\r\n    //     break;\r\n    //   case 'select':\r\n    //     this.bookedByData.email = data.email;\r\n    //     this.bookedByData = {\r\n    //       ...this.bookedByData,\r\n    //       id: data.id,\r\n    //       firstName: data.first_name,\r\n    //       lastName: data.last_name,\r\n    //       contactNumber: data.mobile,\r\n    //       countryId: data.country_id,\r\n    //       isdCode: data.country_id.toString(),\r\n    //     };\r\n    //     this.dataUpdateEvent.emit({\r\n    //       key: 'bookedByInfoUpdated',\r\n    //       data: this.bookedByData,\r\n    //     });\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"text\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => {\r\n                      this.updateGuest({ first_name: (event.target as HTMLInputElement).value });\r\n                      this.handleDataChange('firstName', event);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div class=\"form-group p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0 controlContainer flex-fill\">\r\n                  <ir-phone-input\r\n                    language={this.language}\r\n                    // label={locales.entries.Lcz_MobilePhone}\r\n                    value={this.bookedByData.contactNumber}\r\n                    phone_prefix={this.bookedByData.isdCode}\r\n                    default_country={this.bookedByData.countryId}\r\n                    onTextChange={e => {\r\n                      this.handleDataChange('isdCode', { target: { value: e.detail.phone_prefix } });\r\n                      this.handleDataChange('contactNumber', { target: { value: e.detail.mobile } });\r\n                    }}\r\n                  ></ir-phone-input>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 150px;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 20%;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { RatePlan, Variation } from '@/models/property';\r\nimport booking_store, { IRatePlanSelection, reserveRooms, updateRoomParams } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-rate-plan',\r\n  styleUrl: 'igl-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglRatePlan {\r\n  // Used Props with type annotations\r\n  @Prop() ratePlan: RatePlan;\r\n  @Prop() roomTypeId: number;\r\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\r\n  @Prop() currency!: { symbol: string };\r\n  @Prop() shouldBeDisabled!: boolean;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() visibleInventory!: IRatePlanSelection;\r\n\r\n  @Event() gotoSplitPageTwoEvent!: EventEmitter<{ [key: string]: any }>;\r\n\r\n  // Determine if the form inputs should be disabled\r\n  private disableForm(): boolean {\r\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\r\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\r\n      return false;\r\n    }\r\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\r\n  }\r\n\r\n  // Update the rate plan selection in the booking store\r\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\r\n    const { roomTypeId, ratePlan } = this;\r\n    const currentSelections = booking_store.ratePlanSelections;\r\n\r\n    booking_store.ratePlanSelections = {\r\n      ...currentSelections,\r\n      [roomTypeId]: {\r\n        ...currentSelections[roomTypeId],\r\n        [ratePlan.id]: {\r\n          ...currentSelections[roomTypeId][ratePlan.id],\r\n          ...props,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // Handle changes to select inputs\r\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\r\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\r\n    if (key === 'adult_child_offering') {\r\n      this.handleVariationChange(value);\r\n    } else if (key === 'rate') {\r\n      this.updateRateplanSelection({ view_mode: value as any });\r\n    } else if (key === 'totalRooms') {\r\n      reserveRooms({\r\n        roomTypeId: this.roomTypeId,\r\n        ratePlanId: this.ratePlan.id,\r\n        rooms: Number(value),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Navigate to the next page for booking\r\n  private bookProperty(): void {\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } } as any);\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  // Render the rate amount\r\n  private renderRate(): string {\r\n    const { visibleInventory } = this;\r\n    if (!visibleInventory) return '';\r\n    if (visibleInventory.is_amount_modified) {\r\n      return visibleInventory.rp_amount.toString();\r\n    }\r\n    const { selected_variation, view_mode } = visibleInventory;\r\n    const amount = view_mode === '001' ? selected_variation?.discounted_gross_amount : selected_variation?.amount_per_night_gross;\r\n    return amount?.toString() || '';\r\n  }\r\n\r\n  // Format variation for display\r\n  private formatVariation(variation: Variation): string {\r\n    if (!variation) return '';\r\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\r\n    const children =\r\n      variation.child_nbr > 0\r\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\r\n        : '';\r\n    return children ? `${adults} ${children}` : adults;\r\n  }\r\n\r\n  // Get tooltip messages for the rate plan\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, visibleInventory } = this;\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  // Handle variation change when a different option is selected\r\n  private async handleVariationChange(value: string): Promise<void> {\r\n    const { ratePlan, roomTypeId } = this;\r\n    const variations = ratePlan.variations || [];\r\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    updateRoomParams({\r\n      params: { selected_variation: selectedVariation },\r\n      ratePlanId: ratePlan.id,\r\n      roomTypeId,\r\n    });\r\n  }\r\n\r\n  // Reset reserved rooms in the booking store\r\n  private resetReserved(): void {\r\n    const updatedSelections = Object.entries(booking_store.ratePlanSelections).reduce((acc, [roomTypeId, ratePlans]) => {\r\n      acc[roomTypeId] = Object.entries(ratePlans).reduce((rpAcc, [ratePlanId, ratePlan]) => {\r\n        rpAcc[ratePlanId] = { ...ratePlan, reserved: 0 };\r\n        return rpAcc;\r\n      }, {} as any);\r\n      return acc;\r\n    }, {} as any);\r\n    booking_store.ratePlanSelections = updatedSelections;\r\n  }\r\n\r\n  render() {\r\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\r\n    const isAvailableToBook = ratePlan.is_available_to_book;\r\n    const disableForm = this.disableForm();\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\r\n    console.log(visibleInventory);\r\n    // if (!this.visibleInventory) {\r\n    //   return null;\r\n    // }\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={`d-flex m-0 p-0 ${isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'}`}\r\n        >\r\n          <div class=\"rateplan-name-container d-flex align-items-center\" style={{ gap: '0.5rem' }}>\r\n            {bookingType === 'BAR_BOOKING' ? (\r\n              <Fragment>\r\n                <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span>\r\n                <span>/{ratePlan.name.split('/')[1]}</span>\r\n              </Fragment>\r\n            ) : (\r\n              <span>\r\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n              </span>\r\n            )}\r\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\r\n          </div>\r\n\r\n          {isAvailableToBook ? (\r\n            <div class=\"d-md-flex justify-content-md-end align-items-md-center flex-fill rateplan-container\">\r\n              <div class=\"mt-1 mt-md-0 flex-fill max-w-300\">\r\n                <fieldset class=\"position-relative\">\r\n                  <select disabled={disableForm} class=\"form-control input-sm\" id={uuidv4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                    {formattedVariations?.map(variation => (\r\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\r\n                        {variation}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\r\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0\">\r\n                  <ir-price-input\r\n                    disabled={disableForm}\r\n                    onTextChange={e =>\r\n                      this.updateRateplanSelection({\r\n                        is_amount_modified: true,\r\n                        rp_amount: Number(e.detail),\r\n                      })\r\n                    }\r\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\r\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\r\n                    class=\"ir-br-input-none\"\r\n                    currency={currency.symbol}\r\n                    value={this.renderRate()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                  ></ir-price-input>\r\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\r\n                    <select\r\n                      disabled={disableForm}\r\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\r\n                      id={uuidv4()}\r\n                      onChange={evt =>\r\n                        this.updateRateplanSelection({\r\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\r\n                        })\r\n                      }\r\n                    >\r\n                      {ratePricingMode.map(data => (\r\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\r\n                          {data.CODE_VALUE_EN}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\r\n                  <div class=\"flex-fill mt-lg-0 ml-1 m-0 mt-md-0 p-0\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <select\r\n                        disabled={visibleInventory.visibleInventory === 0}\r\n                        class=\"form-control input-sm\"\r\n                        id={uuidv4()}\r\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      >\r\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\r\n                          <option value={i} selected={visibleInventory.reserved === i}>\r\n                            {i}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </fieldset>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {bookingType === 'EDIT_BOOKING' && (\r\n                <Fragment>\r\n                  <div class=\"m-0 p-0 mt-lg-0 ml-md-1 mt-md-1 d-none d-md-block\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <input\r\n                        disabled={disableForm}\r\n                        type=\"radio\"\r\n                        name=\"ratePlanGroup\"\r\n                        value=\"1\"\r\n                        onChange={() => {\r\n                          this.resetReserved();\r\n                          reserveRooms({\r\n                            roomTypeId: this.roomTypeId,\r\n                            ratePlanId: this.ratePlan.id,\r\n                            rooms: 1,\r\n                            guest: [\r\n                              {\r\n                                name: booking_store.guest.name,\r\n                                unit: null,\r\n                                bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest.bed_preference : null,\r\n                                infant_nbr: this.visibleInventory.selected_variation.child_nbr > 0 ? booking_store.guest.infant_nbr : null,\r\n                              },\r\n                            ],\r\n                          });\r\n                        }}\r\n                        checked={visibleInventory.reserved === 1}\r\n                      />\r\n                    </fieldset>\r\n                  </div>\r\n                  <button\r\n                    disabled={disableForm}\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\r\n                    onClick={() => {\r\n                      this.resetReserved();\r\n                      reserveRooms({\r\n                        roomTypeId: this.roomTypeId,\r\n                        ratePlanId: this.ratePlan.id,\r\n                        rooms: 1,\r\n                        guest: [\r\n                          {\r\n                            name: booking_store.guest.name,\r\n                            unit: null,\r\n                            bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest.bed_preference : null,\r\n                            infant_nbr: this.visibleInventory.selected_variation.child_nbr > 0 ? booking_store.guest.infant_nbr : null,\r\n                          },\r\n                        ],\r\n                      });\r\n                      this.bookProperty();\r\n                    }}\r\n                  >\r\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n\r\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\r\n                <button\r\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1\"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {locales.entries.Lcz_Book}\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { RoomType } from '@/models/property';\r\nimport { getVisibleInventory } from '@/stores/booking.store';\r\nimport { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-room-type',\r\n  styleUrl: 'igl-room-type.css',\r\n  scoped: true,\r\n})\r\nexport class IglRoomType {\r\n  @Prop() roomType: RoomType;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @Prop() initialRoomIds: any;\r\n  @Prop() isBookDisabled: boolean;\r\n\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @State() roomsDistributions: number[] = [];\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomType.rateplans?.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomType.name}</div>}\r\n        {this.roomType.rateplans?.map(ratePlan => {\r\n          if (!!ratePlan.variations) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomType.id;\r\n            // let roomId = -1;\r\n            // if (shouldBeDisabled && this.initialRoomIds) {\r\n            //   roomId = this.initialRoomIds.roomId;\r\n            // }\r\n            const visibleInventory = getVisibleInventory(this.roomType.id, ratePlan.id);\r\n            console.log(visibleInventory);\r\n            return (\r\n              <igl-rate-plan\r\n                // is_bed_configuration_enabled={this.roomType.is_bed_configuration_enabled}\r\n                // index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                visibleInventory={visibleInventory}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                // dateDifference={this.dateDifference}\r\n                ratePlan={ratePlan}\r\n                roomTypeId={this.roomType.id}\r\n                // totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                // physicalrooms={this.roomType.physicalrooms}\r\n                // defaultRoomId={roomId}\r\n              ></igl-rate-plan>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}