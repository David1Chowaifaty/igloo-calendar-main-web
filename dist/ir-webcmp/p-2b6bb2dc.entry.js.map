{"version":3,"names":["IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","id","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","_b","_a","country_phone_prefix","_c","toString","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","message","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","from_date","to_date","resetRoomsInfoAndMessage","defaultData","roomsInfo","onDataRoomUpdate","event","selectedUnits","isEdit","isEditBooking","name","units","data","key","changedKey","detail","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","this","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Object","assign","Array","fill","size","clear","guestName","roomId","calculateAmount","is_amount_modified","selected_variation","view_mode","rp_amount","total_days","nights","length","generateDailyRates","rate_plan","i","variation","amount","infant_nbr","variationService","VariationService","getVariationBasedOnInfants","variations","ratePlan","baseVariation","infants","map","n","date","night","discounted_amount","cost","getBookedRooms","check_in","check_out","notes","identifier","override_unit","unit","auto_check_in","roomTypeId","booking_store","ratePlanSelections","roomtype","rateplanId","rateplan","reserved","push","prepayment_amount_gross","occupancy","adult_nbr","children_nbr","Number","child_nbr","Math","max","bed_preference","moment","format","days","city","address","dob","cci","prepareBookUserServiceParams","sourceOption","dateRangeData","Error","fromDate","Date","toDate","generateNewRooms","isEventType","bookingData","PR_ID","modifyBookingDetails","pickup_info","extra_services","is_direct","is_in_loyalty_mode","promo_key","extras","rest","__rest","assign_units","is_pms","is_backend","booking","newBooking","event_type","currentRoomType","filteredRooms","filter","r","console","log","newRooms","in_out","code","ROOMS","previousRooms","isAgent","type","agent","tag","property","propertyid","booked_on","hour","getHours","minute","getMinutes","source","currency","nbr","holder_name","expiry_month","expiry_year","error","getRoomCategoryByRoomId","find","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","rate","RATE","rateType","roomCategoryName","ratePlanName","RATE_PLAN","NAME","cancelation","guarantee","adult_child_offering","iglBookPropertyCss","IglBookPropertyStyle0","sheetCss","IglBookPropertyStyle1","IglBookProperty","constructor","hostRef","showPaymentDetails","adultChildCount","adult","child","renderAgain","bookingHistory","initialRoomIds","showSplitBookingOption","sourceOptions","guestData","blockDatesData","ratePricingMode","bedPreferenceType","bookingService","BookingService","bookPropertyService","updatedBooking","MAX_HISTORY_LENGTH","componentWillLoad","roomTypes","modifyBookingStore","handleKeyDown","bind","initializeDefaultDateRange","defaultDateRange","initializeDefaultData","wasBlockedUnit","hasOwnProperty","fetchSetupEntriesAndInitialize","componentDidLoad","document","addEventListener","handleBodyOverflow","disconnectedCallback","removeEventListener","clearBooking","e","stopImmediatePropagation","stopPropagation","renderPage","handleSpiltBookingSelected","getExposedBooking","language","handleAdultChildChange","updateBookingHistory","adults","children","onDateRangeSelect","opt","dates","checkIn","checkOut","checkBookingAvailability","handleSourceDropDown","value","selectedSource","description","gotoSplitPageTwo","gotoPage","handleButtonClicked","bookUser","closeWindow","resetReserved","animateIrSelect","emit","calculateTotalRooms","animateIrButton","toast","locales","entries","Lcz_SelectRatePlan","title","partialData","lastEntry","newEntry","_d","_f","_e","_h","_g","shift","FROM_DATE","TO_DATE","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","initializeEventData","initializeEditBookingData","initializePage","CHILDREN_COUNT","roomName","GUEST","page","isGuestDataIncomplete","roomtypeId","isButtonDisabled","isValidProperty","comparedBy","undefined","bookingSource","SOURCE","arrivalTime","resetBookingStore","is_in_agent_mode","room_type_ids_to_update","room_type_ids","room","getBookingAvailability","agent_id","updateBooking","roomtype_id","reserveRooms","checkAndBlockDate","block_exposed_unit_props","isAvailable","every","rt","is_available_to_book","handleBlockDate","didReservation","el","querySelector","classList","add","setTimeout","closeBookingWindow","handleBlockDateUpdate","handleGuestInfoUpdate","guestRefKey","handleBookedByInfoUpdate","getPageBlockDatesView","h","Fragment","entryDate","ENTRY_DATE","onDataUpdateEvent","handlePageTwoDataUpdateEvent","auto_close","props","releaseData","getReleaseHoursString","RELEASE_AFTER_HOURS","dateToFormattedString","NOTES","OPTIONAL_REASON","pr_id","STAY_STATUS_CODE","OUT_OF_SERVICE","DESCRIPTION","blockUnit","setLoadingState","isLoading","serviceParams","doReservation","adjustBlockedDatesAfterReservation","resetBookingEvt","resetLoadingState","original_from_date","current_from_date","original_to_date","current_to_date","isBefore","isAfter","getCurrentPage","render","Host","class","onClick","isRequestPending","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","propertyId","selectedGuestData","countries","defaultGuestData","isEditOrAddRoomEvent","text","Lcz_Cancel","btn_color","Lcz_Blockdates","iglBookPropertyFooterCss","IglBookPropertyFooterStyle0","IglBookPropertyFooter","disabled","editNext","label","renderButton","icon_name","icon_position","shouldRenderTwoButtons","btn_disabled","onClickHandler","buttonClicked","btn_styles","iconPosition","style","icon_style","paddingBottom","Lcz_Next","showBookAndCheckin","calendar_data","checkin_enabled","isSame","Lcz_Back","Lcz_Save","Lcz_Book","Lcz_BookAndChekcIn","iglBookingFormCss","IglBookingFormStyle0","IglBookingForm","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","totalNights","isRateModified","preference","forEach","dateDifference","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","index","categoryIdKey","updatedUnits","dataUpdateEvent","handleEventData","dateOption","Lcz_TotalPrice","formatAmount","symbol","values","val","rp","_","guestInfo","bookingType","rateplanSelection","roomIndex","baseData","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","getSplitBookings","splitBookingEvents","setMinDate","today","minDate","splitBookingId","bookingDataDefaultDateRange","splitBookings","roomType","isBookDisabled","keys","roomInfoId","evt","roomsDataUpdate","irBookingDetailsCss","IrBookingDetailsStyle0","IrBookingDetails","ticket","is_from_front_desk","hasPrint","hasReceipt","hasDelete","hasMenu","hasRoomEdit","hasRoomDelete","hasRoomAdd","hasCheckIn","hasCheckOut","hasCloseButton","bookingItem","statusData","calendarData","rerenderFlag","sidebarState","isUpdateClicked","isPMSLogLoading","modalState","roomService","RoomService","paymentService","PaymentService","token","Token","printingBaseUrl","setToken","initializeApp","ticketChanged","newValue","oldValue","handleSideBarEvents","sidebarPayload","payload","handleIconClick","target","closeSidebar","Lcz_EmailBookingto","replace","loading","modalRef","openModal","openPrintingScreen","window","location","href","ID","EMAIL","PHONE","REFERENCE_TYPE","ARRIVAL","Lcz_AddingUnitToBooking","fromDateStr","toDateStr","BOOKING_NUMBER","ADD_ROOM_TO_BOOKING","handleResetExposedCancellationDueAmount","paymentActions","GetExposedCancellationDueAmount","currency_id","handleEditInitiated","handleRoomGuestsUpdate","guests","currentRoomIndex","findIndex","currentRoom","updatedRoom","sharing_persons","handleResetBooking","resetBooking","handleEditExtraService","selectedService","setRoomsData","roomServiceResp","roomsData","My_Result","roomtypes","expanded","roomResponse","languageTexts","countriesList","bookingDetails","Promise","all","getExposedProperty","aname","p","fetchLanguage","getCountries","getSetupEntriesByTableNameMulti","property_id","bed_preference_type","departure_time","groupEntryTablesResult","bedPreference","departureTime","then","direction","myResult","allowed_payment_methods","paymentMethods","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","some","method","includes","warn","mode","version","open","system_id","url","axios","post","ExceptionMsg","handleCloseBookingWindow","handleDeleteFinish","bookingChanged","handleModalConfirm","sendBookingConfirmationEmail","closeModal","renderSidebarContent","handleClose","isInSideBar","headerShown","onCloseSideBar","bookingDates","from","to","defaultPickupData","numberOfPersons","onCloseModal","service","totalGuests","sharedPersons","checkin","hasEmail","status","is_editable","variant","showCheckin","handleRoomCheckin","showCheckout","handleRoomCheckout","bedPreferences","isEditable","myRoomTypeFoodCat","mealCodeName","short_name","bookingIndex","onDeleteFinished","Lcz_ExtraServices","modalBody","leftBtnText","rightBtnText","Lcz_Confirm","autoClose","ref","onConfirmModal","onCancelModal","side","onIrSidebarToggle","showCloseButton","onCloseBookingWindow","is_automatic_check_in_out","isSameOrAfter","irBookingExtraNoteCss","IrBookingExtraNoteStyle0","IrBookingExtraNoteStyle1","IrBookingExtraNote","note","setNote","getPrivateNote","savePrivateNote","prevExtras","newExtraObj","oldPrivateNoteIndex","Is_Non_Technical_Change","onSubmit","preventDefault","Lcz_PrivateNote","displayContext","placeholder","Lcz_PrivateNote_MaxChar","maxLength","onTextChange","btn_type","irBookingHeaderCss","IrBookingHeaderStyle0","IrBookingHeader","bookingStatus","confirmationBG","alertMessage","handleSelectChange","selectedValue","updateStatus","Lcz_SelectStatus","position","changeExposedBookingStatus","book_nbr","Lcz_StatusUpdatedSuccessfully","openDialog","currentDialogStatus","dialogRef","renderDialogBody","lastManipulation","ota_manipulations","Lcz_Booking","channel_booking_nbr","gap","flexWrap","is_requested_to_cancel","Lcz_CancellationRequested","trigger","renderContentAsHtml","content","user","marginTop","marginBottom","allowed_actions","selectContainerStyle","selectStyles","firstOption","Lcz_Select","b","textSize","modalEl","Lcz_EventsLog","is_pms_enabled","Lcz_pms","colorVariants","danger","onOpenChange","modalTitle","Lcz_OTA_Modification_Alter","irDialogCss","IrDialogStyle0","IrDialog","isOpen","prepareFocusTrap","body","overflow","openChange","handleOpenChange","ev","isTabPressed","shiftKey","activeElement","lastFocusableElement","firstFocusableElement","focus","focusableElements","focusableContent","shadowRoot","querySelectorAll","tabIndex","role","irEventsLogCss","IrEventsLogStyle0","IrEventsLog","init","bookingEvents","events","opacity","String","padStart","second","irExtraServiceCss","IrExtraServiceStyle0","IrExtraService","deleteService","doBookingExtraService","is_remove","price","currencySymbol","booking_system_id","secondary","editExtraService","irModalRef","start_date","end_date","showDateDifference","iconAvailable","icon","Lcz_Delete","leftBtnColor","rightBtnColor","Lcz_Confirmation","Lcz_ThisService","Lcz_FromThisBooking","ZIdInfo","z","object","union","string","min","literal","optional","number","nullable","ZSharedPerson","coerce","refine","isValid","transform","isDDMMYYYY","id_info","is_main","boolean","default","validateSharedPerson","parse","hasValue","field","trim","ctx","path","ZodIssueCode","custom","hasAnyFieldData","ZodError","ExtraServiceSchema","irExtraServiceConfigCss","IrExtraServiceConfigStyle0","IrExtraServiceConfigStyle1","IrExtraServiceConfig","s_service","saveAmenity","updateService","params","prevService","validatePrice","priceSchema","pick","result","safeParse","success","async","Lcz_Description","onChange","Lcz_DatesOn","emitEmptyDate","maxDate","onDateChanged","start","_formatDate","borderLeftWidth","borderRightWidth","borderRadius","Lcz_TillAndIncluding","_j","_k","_m","_l","zod","Lcz_Price","wrapKey","autoValidate","parseFloat","Lcz_Cost","labelStyle","_p","_o","irExtraServicesCss","IrExtraServicesStyle0","IrExtraServices","irGuestInfoCss","IrGuestInfoStyle0","IrGuestInfoStyle1","GuestInfo","getToken","fetchedLocales","fetchGuest","resolve","mobile_without_prefix","handleInputChange","editGuest","editExposedGuest","closeSideBar","Lcz_GuestDetails","Lcz_FirstName","required","Lcz_LastName","Lcz_Email","Lcz_AlternativeEmail","alternative_email","country","c","Lcz_Country","onCountryChange","phone_prefix","Lcz_MobilePhone","checked","onInput","Lcz_Newsletter","color","irPaymentActionsCss","IrPaymentActionsStyle0","IrPaymentActions","paymentAction","pa","due_on","generatePayment","irPaymentDetailsCss","IrPaymentDetailsStyle0","IrPaymentDetails","newTableRow","collapsedPayment","collapsedGuarantee","flag","confirmModal","paymentDetailsUrl","paymentExceptionMessage","modal_mode","paymentBackground","handlePaymentGeneration","itemToBeAdded","initializeItemToBeAdded","designation","reference","_processPaymentSave","Lcz_EnterAmount","financial","due_amount","_handleSave","AddPayment","resetExposedCancelationDueAmount","handlePaymentInputChange","isNaN","inputElement","inputValue","cancelPayment","CancelPayment","toBeDeletedItem","newPaymentArray","payments","item","handleConfirmModal","modal","handleCancelModal","handleBookingDetails","handleDateChange","end","_renderTableRow","rowMode","startOf","border","marginLeft","marginRight","inputStyle","rowSpan","colSpan","onKeyPress","formatCurrency","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","bookingGuarantee","paymentMethod","getPaymentMethod","Lcz_BookingGuarantee","getPCICardInfoURL","_s","_r","_q","_u","_t","_x","_w","_v","_0","_z","_y","cvc","_3","_2","_1","src","frameborder","ota_guarante","_4","card_type","_5","is_virtual","labelText","Lcz_CardType","_6","cardholder_name","Lcz_CardHolderName","_7","card_number","Lcz_CardNumber","toFloat","_9","_8","meta","virtual_card_current_balance","_11","_10","virtual_card_decimal_places","_13","_12","virtual_card_currency_code","Lcz_CardBalance","checkPaymentCode","pm","payment_code","Lcz_OnCredit","_renderDueDate","gross_cost","Lcz_TotalCost","Lcz_Balance","Lcz_Collected","reduce","prev","curr","Lcz_Payments","backgroundColor","Lcz_Dates","Lcz_Amount","Lcz_Designation","Lcz_IfDeletedPermantlyLost","Lcz_EnteringAmountGreaterThanDue","PickupService","savePickup","splitTime","arrival_time","split","arrival_date","details","flight_details","nbr_of_units","number_of_vehicles","selected_option","due_upon_booking","transformDefaultPickupData","renderTime","toFixed","vehicle_type_code","vehicle","getAvailableLocations","locations","pickup_service","allowed_options","option","createPickupSchema","regex","dateStr","isBetween","time","hours","minutes","nonempty","validateForm","schema","err","issues","getNumberOfVehicles","capacity","total_number_of_vehicles","ceil","startNumber","bonus_number","getPickUpPersonStatus","getCodeDescription","allowed_pricing_models","model","updateDue","irPickupCss","IrPickupStyle0","IrPickupStyle1","IrPickup","allowedOptionsByLocation","pickupData","vehicleCapacity","cause","pickupService","arrival_time_mask","mask","blocks","HH","MaskedRange","placeholderChar","mm","lazy","transformedData","pickupSchema","handleLocationChange","updatePickupData","locationChoice","pricing_model","handleVehicleQuantityChange","handleVehicleTypeChange","errors","Lcz_Pickup","testId","onSelectChange","Lcz_Pickup_NoThankYou","LabelAvailable","Lcz_Pickup_YesFrom","Lcz_ArrivalDate","borderTopLeftRadius","borderBottomLeftRadius","Lcz_Time","inputStyles","Lcz_FlightDetails","showFirstOption","labelBorder","labelWidth","Lcz_NbrOfVehicles","readOnly","Lcz_DueUponBooking","irPickupViewCss","IrPickupViewStyle0","IrPickupView","is_enabled","Lcz_Date","_formatTime","pickup_instruction","pickup_cancelation_prepayment","irPmsLogsCss","IrPmsLogsStyle0","IrPmsLogs","pmsLogs","fetchPMSLogs","Lcz_PMS_Logs","Lcz_SentAt","sent_date","sent_hour","sent_minute","is_acknowledged","Lcz_YES","Lcz_NO","Lcz_Acknowledged","irReservationInformationCss","IrReservationInformationStyle0","IrReservationInformation","userCountry","guestCountryId","handleEditClick","openSidebar","renderPhoneNumber","selectedCountry","privateNote","Lcz_Source","origin","Label","image","Icon","alt","Lcz_BookedOn","Lcz_BookedBy","nbr_confirmed_bookings","Lcz_BookingsNbr","customSlot","Lcz_Phone","Lcz_Address","isCountryImage","display","Lcz_GuestPrivateNote","Lcz_ArrivalTime","Lcz_Coupon","Lcz_LoyaltyDiscountApplied","Lcz_GuestRemark","Lcz_ChannelNotes","remarks","ota_notes","maxVisibleItems","Lcz_BookingPrivateNote","Lcz_VisibleToHotelOnly","irRoomCss","IrRoomStyle0","IrRoom","collapsed","modalReason","isModelOpen","mainGuest","getMainGuest","handleClick","pressCheckIn","pressCheckOut","handleRoomDataChange","getDateStr","getDate","toLocaleString","month","getFullYear","editInitiated","formatName","Lcz_EditBookingFor","ARRIVAL_TIME","COUNTRY","FROM_DATE_STR","IDENTIFIER","IS_EDITABLE","NO_OF_DAYS","POOL","SPLIT_BOOKING","STATUS","TO_DATE_STR","PICKUP_INFO","reason","handleModalConfirmation","deleteRoom","handleExposedRoomInOut","room_identifier","resetbooking","oldRooms","deleteFinished","updateDepartureTime","setDepartureTime","formatVariation","childCount","infantCount","adultLabel","Lcz_Adults","toLowerCase","Lcz_Adult","childLabel","Lcz_Children","Lcz_Child","infantLabel","Lcz_Infants","Lcz_Infant","parts","join","getSmokingLabel","smoking_option","currRT","allowed_smoking_options","s","ota_meta","smoking_preferences","getBedName","bed","CODE_NAME","CODE_VALUE_EN","bed_preferences","renderModalMessage","handleCheckIn","showGuestModal","fontWeight","is_non_refundable","Lcz_NonRefundable","isSingleUnit","is_frontdesk_enabled","Lcz_CheckIn","Lcz_CheckOut","btnStyle","margin","padding","fontSize","textAlign","lineHeight","innerHTML","toUpperCase","Lcz_Breakdown","_getDay","Lcz_SubTotal","filtered_data","taxes","tx","pct","is_exlusive","Lcz_Excluding","Lcz_Including","ota_taxes","Lcz_SmokingOptions","Lcz_Cancellation","Lcz_Guarantee","Lcz_MealPlan","meal_plan","Lcz_Policies","policies","defaultGuest","full_name","password","dateMask","pattern","str","autofix","YYYY","MM","DD","irRoomGuestsCss","IrRoomGuestsStyle0","IrRoomGuestsStyle1","IrRoomGuests","idTypes","initializeGuests","getUserDefaultCountry","getSetupEntriesByTableName","propertyCountry","COUNTRY_ID","defaultGuestsCount","g","updateGuestInfo","tempGuests","tempGuest","saveGuests","handleExposedRoomGuests","Boolean","updateRoomGuests","minWidth","Lcz_MainGuest","Lcz_DOB","Lcz_Nationality","Lcz_Documents","idx","isRowValid","Lcz_PersonsSharingRoom","selectForcedStyles","borderTopRightRadius","borderBottomRightRadius","borderRight","t","inputForcedStyle","otaLabelCss","OtaLabelStyle0","OtaLabel","showAll","toggleShowAll","displayedRemarks","slice","v4","statement","Lcz_ShowLess","Lcz_ShowMore"],"sources":["src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/common/sheet.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.css?tag=igl-book-property-footer&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-footer/igl-book-property-footer.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.css?tag=igl-booking-form&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/ir-booking-details/ir-booking-details.css?tag=ir-booking-details&encapsulation=scoped","src/components/ir-booking-details/ir-booking-details.tsx","src/components/ir-booking-details/ir-booking-extra-note/ir-booking-extra-note.css?tag=ir-booking-extra-note&encapsulation=scoped","src/common/sheet.css?tag=ir-booking-extra-note&encapsulation=scoped","src/components/ir-booking-details/ir-booking-extra-note/ir-booking-extra-note.tsx","src/components/ir-booking-details/ir-booking-header/ir-booking-header.css?tag=ir-booking-header&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/ir-booking-header.tsx","src/components/ui/ir-dialog/ir-dialog.css?tag=ir-dialog&encapsulation=shadow","src/components/ui/ir-dialog/ir-dialog.tsx","src/components/ir-booking-details/ir-booking-header/events-log/ir-events-log.css?tag=ir-events-log&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/events-log/ir-events-log.tsx","src/components/ir-booking-details/ir-extra-services/ir-extra-service/ir-extra-service.css?tag=ir-extra-service&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-service/ir-extra-service.tsx","src/models/booking.dto.ts","src/components/ir-booking-details/ir-extra-services/ir-extra-service-config/ir-extra-service-config.css?tag=ir-extra-service-config&encapsulation=scoped","src/common/sheet.css?tag=ir-extra-service-config&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-service-config/ir-extra-service-config.tsx","src/components/ir-booking-details/ir-extra-services/ir-extra-services.css?tag=ir-extra-services&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-services.tsx","src/components/ir-guest-info/ir-guest-info.css?tag=ir-guest-info&encapsulation=scoped","src/common/sheet.css?tag=ir-guest-info&encapsulation=scoped","src/components/ir-guest-info/ir-guest-info.tsx","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-actions.css?tag=ir-payment-actions&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-actions.tsx","src/components/ir-booking-details/ir-payment-details/ir-payment-details.css?tag=ir-payment-details&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-details.tsx","src/components/ir-booking-details/ir-pickup/pickup.service.ts","src/components/ir-booking-details/ir-pickup/ir-pickup.css?tag=ir-pickup&encapsulation=scoped","src/common/sheet.css?tag=ir-pickup&encapsulation=scoped","src/components/ir-booking-details/ir-pickup/ir-pickup.tsx","src/components/ir-booking-details/ir-pickup-view/ir-pickup-view.css?tag=ir-pickup-view&encapsulation=scoped","src/components/ir-booking-details/ir-pickup-view/ir-pickup-view.tsx","src/components/ir-booking-details/ir-booking-header/ir-pms-logs/ir-pms-logs.css?tag=ir-pms-logs&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/ir-pms-logs/ir-pms-logs.tsx","src/components/ir-booking-details/ir-reservation-information/ir-reservation-information.css?tag=ir-reservation-information&encapsulation=scoped","src/components/ir-booking-details/ir-reservation-information/ir-reservation-information.tsx","src/components/ir-booking-details/ir-room/ir-room.css?tag=ir-room&encapsulation=scoped","src/components/ir-booking-details/ir-room/ir-room.tsx","src/components/ir-booking-details/ir-room-guests/data.ts","src/components/ir-booking-details/ir-room-guests/ir-room-guests.css?tag=ir-room-guests&encapsulation=scoped","src/common/sheet.css?tag=ir-room-guests&encapsulation=scoped","src/components/ir-booking-details/ir-room-guests/ir-room-guests.tsx","src/components/ui/ota-label/ota-label.css?tag=ota-label&encapsulation=scoped","src/components/ui/ota-label/ota-label.tsx"],"sourcesContent":["import { Booking, Room } from '@/models/booking.dto';\nimport { TSourceOption } from '@/models/igl-book-property';\nimport VariationService from '@/services/variation.service';\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\nimport { extras } from '@/utils/utils';\nimport moment from 'moment';\n\nexport class IglBookPropertyService {\n  private variationService: VariationService;\n  public setBookingInfoFromAutoComplete(context, res) {\n    context.bookedByInfoData = {\n      id: res.guest.id,\n      email: res.guest.email,\n      firstName: res.guest.first_name,\n      lastName: res.guest.last_name,\n      countryId: res.guest.country_id,\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\n      contactNumber: res.guest.mobile,\n      selectedArrivalTime: res.arrival,\n      emailGuest: res.guest.subscribe_to_news_letter,\n      message: res.remark,\n      cardNumber: '',\n      cardHolderName: '',\n      expiryMonth: '',\n      expiryYear: '',\n      bookingNumber: res.booking_nbr,\n      rooms: res.rooms,\n      from_date: res.from_date,\n      to_date: res.to_date,\n    };\n  }\n\n  public resetRoomsInfoAndMessage(context) {\n    context.defaultData.roomsInfo = [];\n    context.message = '';\n  }\n\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\n    let units = selectedUnits;\n    const { data, key, changedKey } = event.detail;\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\n    const ratePlanKey = `p_${data.ratePlanId}`;\n\n    if (this.shouldClearData(key)) {\n      units = new Map();\n    }\n\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\n\n    if (isEditBooking) {\n      if (changedKey === 'rate') {\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n        }\n      } else {\n        if (changedKey !== 'rateType') {\n          if (changedKey === 'adult_child_offering') {\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n            }\n          } else {\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n          }\n        }\n      }\n    } else {\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\n    }\n    this.cleanupEmptyData(roomCategoryKey, units);\n    return units;\n  }\n\n  private shouldClearData(key: string | undefined): boolean {\n    return key === 'clearData' || key === 'EDIT_BOOKING';\n  }\n\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\n    if (!selectedUnits.has(roomCategoryKey)) {\n      selectedUnits.set(roomCategoryKey, new Map());\n    }\n  }\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\n    if (data.totalRooms === 0 || data.inventory === 0) {\n      selectedRatePlans.delete(ratePlanKey);\n    } else {\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\n    }\n  }\n\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\n    if (selectedUnits.has(roomCategoryKey)) {\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\n      if (selectedRatePlans.size === 0) {\n        selectedUnits.delete(roomCategoryKey);\n      }\n    }\n  }\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\n    selectedUnits.clear();\n    let res = {};\n    if (isEdit) {\n      res = { ...data, guestName: name || '', roomId: '' };\n    } else {\n      res = { ...data };\n    }\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\n  }\n\n  private calculateAmount({ is_amount_modified, selected_variation, view_mode, rp_amount }: IRatePlanSelection) {\n    const total_days = selected_variation.nights.length;\n    if (is_amount_modified) {\n      return view_mode === '002' ? rp_amount : rp_amount / total_days;\n    }\n  }\n\n  private generateDailyRates(rate_plan: IRatePlanSelection, i: number) {\n    let variation = rate_plan.selected_variation;\n    const amount = rate_plan.is_amount_modified ? this.calculateAmount(rate_plan) : null;\n    if (rate_plan.guest[i].infant_nbr > 0 && !rate_plan.is_amount_modified) {\n      if (!this.variationService) {\n        this.variationService = new VariationService();\n      }\n      variation = this.variationService.getVariationBasedOnInfants({\n        variations: rate_plan.ratePlan.variations,\n        baseVariation: rate_plan.selected_variation,\n        infants: rate_plan.guest[i].infant_nbr,\n      });\n    }\n    return variation.nights.map(n => ({\n      date: n.night,\n      amount: amount ?? n.discounted_amount,\n      cost: null,\n    }));\n  }\n\n  // private extractFirstNameAndLastName(name: string) {\n  //   const names = name.split(' ');\n  //   return { first_name: names[0] || null, last_name: names[1] || null };\n  // }\n\n  private getBookedRooms({\n    check_in,\n    check_out,\n    notes,\n    identifier,\n    override_unit,\n    unit,\n    auto_check_in,\n  }: {\n    identifier: string | null;\n    check_in: Date;\n    check_out: Date;\n    override_unit: boolean;\n    unit: string;\n    notes: string | null;\n    auto_check_in: boolean;\n  }) {\n    const rooms = [];\n\n    for (const roomTypeId in booking_store.ratePlanSelections) {\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\n      for (const rateplanId in roomtype) {\n        const rateplan = roomtype[rateplanId];\n        if (rateplan.reserved > 0) {\n          for (let i = 0; i < rateplan.reserved; i++) {\n            const { first_name, last_name } = rateplan.guest[i];\n            rooms.push({\n              identifier,\n              roomtype: rateplan.roomtype,\n              rateplan: rateplan.ratePlan,\n              prepayment_amount_gross: 0,\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\n              occupancy: {\n                adult_nbr: rateplan.selected_variation.adult_nbr,\n                children_nbr: Number(rateplan.selected_variation.child_nbr ?? 0) - Math.max(Number(rateplan.guest[i].infant_nbr ?? 0), 0),\n                infant_nbr: rateplan.guest[i].infant_nbr,\n              },\n              bed_preference: rateplan.guest[i].bed_preference,\n              from_date: moment(check_in).format('YYYY-MM-DD'),\n              to_date: moment(check_out).format('YYYY-MM-DD'),\n              notes,\n              check_in: auto_check_in,\n              days: this.generateDailyRates(rateplan, i),\n              guest: {\n                email: null,\n                first_name,\n                last_name,\n                country_id: null,\n                city: null,\n                mobile: null,\n                address: null,\n                dob: null,\n                subscribe_to_news_letter: null,\n                cci: null,\n              },\n            });\n          }\n        }\n      }\n    }\n    return rooms;\n  }\n\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\n    try {\n      // Validate context structure\n      if (!context || !context.dateRangeData) {\n        throw new Error('Invalid context: Missing date range data.');\n      }\n\n      const fromDate = new Date(context.dateRangeData.fromDate);\n      const toDate = new Date(context.dateRangeData.toDate);\n\n      const generateNewRooms = (identifier = null, check_in: boolean = false) => {\n        return this.getBookedRooms({\n          check_in: fromDate,\n          check_out: toDate,\n          identifier,\n          notes: '',\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\n          auto_check_in: check_in,\n        });\n      };\n\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\n        return {\n          assign_units: true,\n          is_pms: true,\n          is_direct,\n          is_backend: true,\n          is_in_loyalty_mode,\n          promo_key,\n          extras,\n          booking: {\n            ...rest,\n            rooms,\n          },\n          extra_services,\n          pickup_info,\n        };\n      };\n\n      let newBooking = null;\n\n      switch (context.defaultData.event_type) {\n        case 'EDIT_BOOKING': {\n          const { booking, currentRoomType } = context.defaultData;\n\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\n          console.log('currentRoomType', currentRoomType);\n          const newRooms = generateNewRooms(currentRoomType.identifier, currentRoomType.in_out?.code === '001');\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\n          break;\n        }\n        case 'ADD_ROOM':\n        case 'SPLIT_BOOKING': {\n          const { booking, ROOMS } = context.defaultData;\n          // console.log(booking);\n          if (!booking) {\n            throw new Error('Missing booking');\n          }\n          const newRooms = generateNewRooms();\n          const previousRooms = context.defaultData.event_type === 'ADD_ROOM' ? ROOMS ?? [] : booking?.rooms;\n          newBooking = modifyBookingDetails(booking, [...previousRooms, ...newRooms]);\n          break;\n        }\n        default: {\n          const newRooms = generateNewRooms(null, check_in);\n          const { bookedByInfoData } = context;\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\n          newBooking = {\n            assign_units: true,\n            is_pms: true,\n            is_direct: true,\n            is_backend: true,\n            is_in_loyalty_mode: false,\n            promo_key: null,\n            extras,\n            agent: isAgent ? { id: sourceOption.tag } : null,\n            booking: {\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\n              to_date: moment(toDate).format('YYYY-MM-DD'),\n              remark: bookedByInfoData.message || null,\n              booking_nbr: '',\n              property: {\n                id: context.propertyid,\n              },\n              booked_on: {\n                date: moment().format('YYYY-MM-DD'),\n                hour: new Date().getHours(),\n                minute: new Date().getMinutes(),\n              },\n              source: isAgent ? '' : sourceOption,\n              rooms: newRooms,\n              currency: context.currency,\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\n              guest: {\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\n                first_name: bookedByInfoData.firstName,\n                last_name: bookedByInfoData.lastName,\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\n                city: null,\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\n                address: '',\n                dob: null,\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\n                cci: bookedByInfoData.cardNumber\n                  ? {\n                      nbr: bookedByInfoData.cardNumber,\n                      holder_name: bookedByInfoData.cardHolderName,\n                      expiry_month: bookedByInfoData.expiryMonth,\n                      expiry_year: bookedByInfoData.expiryYear,\n                    }\n                  : null,\n              },\n            },\n            pickup_info: null,\n          };\n          break;\n        }\n      }\n      return newBooking;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  private getRoomCategoryByRoomId(bookingData) {\n    return bookingData.roomsInfo?.find(roomCategory => {\n      return roomCategory.id === bookingData.RATE_TYPE;\n    });\n  }\n  public setEditingRoomInfo(bookingData, selectedUnits) {\n    const category = this.getRoomCategoryByRoomId(bookingData);\n    const room_id = !category ? '' : `c_${category?.id}`;\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\n    const data = {\n      adultCount: bookingData.ADULTS_COUNT,\n      rate: bookingData.RATE,\n      rateType: bookingData.RATE_TYPE,\n      ratePlanId: bookingData.RATE_PLAN_ID,\n      roomCategoryId: category ? category.id : '',\n      roomCategoryName: category ? category.name : '',\n      totalRooms: 1,\n      ratePlanName: bookingData.RATE_PLAN,\n      roomId: bookingData.PR_ID,\n      guestName: bookingData.NAME,\n      cancelation: bookingData.cancelation,\n      guarantee: bookingData.guarantee,\n      adult_child_offering: bookingData.adult_child_offering,\n    };\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\n  }\n}\n",":host {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 100vw;\n  min-height: 100vh;\n  z-index: 99;\n  overflow: hidden;\n  /* min-width: 450px; */\n}\n\n.card-title {\n  border-bottom: 1px solid #e4e5ec;\n  width: 100%;\n}\n.card-header-container {\n  border-bottom: 1px solid #e4e5ec;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 1rem 0;\n  justify-content: space-between;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n.card-header-container h3 {\n  padding: 0;\n  margin: 0;\n}\n\n.background-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.25);\n}\n\n.formContainer {\n  height: calc(100% - 79px);\n  overflow: auto;\n}\n.gap-30 {\n  gap: 30px;\n}\n.block-date {\n  width: 100%;\n}\n.sideWindow {\n  position: absolute;\n  inset: 0;\n  left: unset;\n  background-color: #ffffff;\n  width: 100%;\n  overflow: auto;\n  animation: slideInFromRight 0.5s;\n}\n.card {\n  top: 0;\n  z-index: 1000;\n}\n\n.close {\n  float: right;\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.5;\n  padding: 0;\n  background-color: transparent;\n  border: 0;\n  appearance: none;\n}\n\n.close-icon {\n  position: absolute;\n  top: 18px;\n  right: 33px;\n  outline: none;\n}\n\nbutton:not(:disabled),\n[type='button']:not(:disabled) {\n  cursor: pointer;\n}\n.sheet-footer {\n  width: 100%;\n}\n\n/* .row {\n  padding: 0 0 0 15px;\n  margin: 0;\n} */\n@media only screen and (min-width: 1200px) {\n  .sideWindow {\n    max-width: 70%;\n  }\n}\n@media only screen and (min-width: 2000px) {\n  .sideWindow {\n    max-width: 40%;\n  }\n}\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\n  .sideWindow {\n    max-width: 90%;\n  }\n}\n@media only screen and (min-width: 600px) and (max-width: 768px) {\n  .sideWindow {\n    max-width: 75%;\n  }\n}\n@media only screen and (min-width: 641px) {\n  .block-date {\n    max-width: 450px;\n    padding-bottom: 0 !important;\n  }\n}\n@keyframes slideInFromRight {\n  from {\n    transform: translateX(120%);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n@keyframes slideOutToRight {\n  from {\n    transform: translateX(0);\n  }\n  to {\n    transform: translateX(120%);\n  }\n}\n\n.sideWindow--exit {\n  animation: slideOutToRight 0.5s forwards;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { dateToFormattedString, getReleaseHoursString, handleBodyOverflow } from '@/utils/utils';\nimport { ICountry, IEntries, RoomBlockDetails } from '@/models/IBooking';\nimport { IPageTwoDataUpdateProps } from '@/models/models';\nimport { IglBookPropertyService } from './igl-book-property.service';\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { ICurrency } from '@/models/calendarData';\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore, resetReserved } from '@/stores/booking.store';\nimport moment from 'moment';\nexport type IHistoryEntry = {\n  dates: { checkIn: Date; checkOut: Date };\n  adults: number;\n  children: number;\n};\n@Component({\n  tag: 'igl-book-property',\n  styleUrls: ['igl-book-property.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBookProperty {\n  @Prop() propertyid: number;\n  @Prop() allowedBookingSources: any;\n  @Prop() language: string;\n  @Prop() countries: ICountry[];\n  @Prop() showPaymentDetails: boolean = false;\n  @Prop() currency: ICurrency;\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\n  @Prop() adultChildConstraints: TAdultChildConstraints;\n\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\n  @State() renderAgain: boolean = false;\n  @State() dateRangeData: { [key: string]: any };\n  @State() defaultData: any;\n  @State() isLoading: string;\n  @State() bookingHistory: Array<{\n    dates: { checkIn: Date; checkOut: Date };\n    adults: number;\n    children: number;\n  }> = [];\n\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\n  private sourceOption: TSourceOption;\n  private page: string;\n  private showSplitBookingOption: boolean = false;\n  private sourceOptions: TSourceOptions[] = [];\n  private guestData: { [key: string]: any }[] = [];\n  private bookedByInfoData: { [key: string]: any } = {};\n  private blockDatesData: { [key: string]: any } = {};\n  private ratePricingMode: IEntries[] = [];\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\n  private bedPreferenceType: IEntries[] = [];\n  private bookingService: BookingService = new BookingService();\n  private bookPropertyService = new IglBookPropertyService();\n  private defaultDateRange: { from_date: string; to_date: string };\n  private updatedBooking: boolean = false;\n  private MAX_HISTORY_LENGTH: number = 2;\n  private didReservation: boolean;\n  private wasBlockedUnit: boolean;\n\n  async componentWillLoad() {\n    console.log('<==>roomtypes<==>', booking_store?.roomTypes);\n    if (booking_store.roomTypes) {\n      modifyBookingStore('roomTypes', []);\n      modifyBookingStore('ratePlanSelections', {});\n    }\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.initializeDefaultDateRange();\n\n    if (!this.bookingData.defaultDateRange) {\n      return;\n    }\n    // console.log(this.bookingData);\n    this.initializeDefaultData();\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\n    this.fetchSetupEntriesAndInitialize();\n  }\n\n  componentDidLoad() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    handleBodyOverflow(true);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  @Listen('inputCleared')\n  clearBooking(e: CustomEvent) {\n    if (this.isEventType('SPLIT_BOOKING')) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.bookedByInfoData = {};\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n      this.renderPage();\n    }\n  }\n\n  @Listen('spiltBookingSelected')\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { key, data } = e.detail;\n    if (key === 'select' || (key === 'blur' && data !== '')) {\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\n      this.defaultData = { ...this.defaultData, booking: res };\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\n      this.sourceOption = res.source;\n      this.renderPage();\n    }\n  }\n\n  // @Listen('adultChild')\n  // handleAdultChildChange(event: CustomEvent) {\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\n  //   }\n  //   const { adult, child } = event.detail;\n  //   this.adultChildCount = { ...event.detail };\n  //   this.updateBookingHistory({ adults: adult, children: child });\n  // }\n  @Listen('adultChild')\n  handleAdultChildChange(event: CustomEvent) {\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n    }\n    const { adult, child } = event.detail;\n    this.adultChildCount = { ...event.detail };\n\n    // Update the booking history\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\n  }\n\n  @Listen('dateSelectEvent')\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.updateBookingHistory({\n      dates: {\n        checkIn: new Date(this.dateRangeData.fromDate),\n        checkOut: new Date(new Date(opt.data.toDate)),\n      },\n    });\n    console.log('date changed', opt);\n    if (opt.key === 'selectedDateRange') {\n      this.dateRangeData = opt.data;\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n        this.defaultData.roomsInfo = [];\n      } else if (this.adultChildCount.adult !== 0) {\n        this.checkBookingAvailability();\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\n      }\n    }\n  }\n  @Listen('sourceDropDownChange')\n  handleSourceDropDown(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const value = event.detail;\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\n    this.sourceOption = {\n      code: value,\n      description: selectedSource.value || '',\n      tag: selectedSource.tag,\n      id: selectedSource.id,\n      type: selectedSource.type,\n    };\n  }\n\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\n  gotoSplitPageTwo() {\n    this.gotoPage('page_two');\n  }\n\n  @Listen('buttonClicked')\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\n    switch (event.detail.key) {\n      case 'save':\n        this.bookUser(false);\n        break;\n      case 'cancel':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        this.closeWindow();\n        break;\n      case 'back':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        if (this.isEventType('BAR_BOOKING')) {\n          resetReserved();\n        }\n        this.gotoPage('page_one');\n        break;\n      case 'book':\n        this.bookUser(false);\n        break;\n      case 'bookAndCheckIn':\n        this.bookUser(true);\n        break;\n      case 'next':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        if (!this.adultChildCount?.adult) {\n          this.animateIrSelect.emit('adult_child_select');\n          break;\n        }\n        if (calculateTotalRooms() > 0) {\n          this.gotoPage('page_two');\n          break;\n        } else if (this.defaultData?.roomsInfo.length === 0) {\n          this.animateIrButton.emit('check_availability');\n          break;\n        }\n        this.toast.emit({\n          type: 'error',\n          description: locales.entries.Lcz_SelectRatePlan,\n          title: locales.entries.Lcz_SelectRatePlan,\n        });\n        break;\n      case 'check':\n        this.checkBookingAvailability();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\n\n    const newEntry: IHistoryEntry = {\n      dates: {\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\n      },\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\n    };\n\n    // Update the booking history\n    this.bookingHistory.push(newEntry);\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\n      this.bookingHistory.shift();\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape') {\n      this.closeWindow();\n    }\n  }\n\n  private initializeDefaultDateRange() {\n    this.defaultDateRange = {\n      from_date: this.bookingData.FROM_DATE,\n      to_date: this.bookingData.TO_DATE,\n    };\n  }\n\n  private initializeDefaultData() {\n    this.defaultData = this.bookingData;\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\n  }\n\n  private async fetchSetupEntriesAndInitialize() {\n    try {\n      const setupEntries = await this.fetchSetupEntries();\n      this.setSourceOptions(this.allowedBookingSources);\n      this.setOtherProperties(setupEntries);\n      this.initializeEventData();\n    } catch (error) {\n      console.error('Error fetching setup entries:', error);\n    }\n  }\n\n  private initializeEventData() {\n    if (this.isEventType('EDIT_BOOKING')) {\n      this.initializeEditBookingData();\n    }\n\n    if (!this.isEventType('BAR_BOOKING')) {\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n    }\n\n    this.initializePage();\n  }\n\n  private initializeEditBookingData() {\n    this.adultChildCount = {\n      adult: this.defaultData.ADULTS_COUNT,\n      child: this.defaultData.CHILDREN_COUNT,\n    };\n\n    this.initialRoomIds = {\n      roomName: this.defaultData.roomName,\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\n      roomId: this.defaultData.PR_ID,\n      roomTypeId: this.defaultData.RATE_TYPE,\n    };\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\n    console.log(GUEST);\n    modifyBookingStore('guest', {\n      bed_preference: currentRoomType.bed_preference?.toString(),\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\n      first_name: GUEST.first_name ?? '',\n      last_name: GUEST.last_name ?? '',\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\n      unit: (currentRoomType.unit as any)?.id?.toString(),\n    });\n    this.checkBookingAvailability();\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\n  }\n\n  private initializePage() {\n    switch (this.defaultData.event_type) {\n      case 'SPLIT_BOOKING':\n        this.showSplitBookingOption = true;\n        this.page = 'page_one';\n        break;\n      case 'BLOCK_DATES':\n        this.page = 'page_block_date';\n        break;\n      default:\n        this.page = 'page_one';\n        break;\n    }\n  }\n\n  async fetchSetupEntries() {\n    return await this.bookingService.fetchSetupEntries();\n  }\n\n  private isGuestDataIncomplete() {\n    for (const roomtypeId in booking_store.ratePlanSelections) {\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\n      for (const rateplanId in roomtype) {\n        const rateplan = roomtype[rateplanId];\n        if (rateplan.reserved > 0) {\n          for (const guest of rateplan.guest) {\n            if (guest.first_name === '' || guest.last_name === '') {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  private isButtonDisabled() {\n    const isValidProperty = (property, key, comparedBy) => {\n      if (!property) {\n        return true;\n      }\n      if (property === this.guestData) {\n        return this.isGuestDataIncomplete();\n      }\n      if (key === 'selectedArrivalTime') {\n        if (property[key] !== undefined) {\n          return property[key].code === '';\n        } else {\n          return true;\n        }\n      }\n      return property[key] === comparedBy || property[key] === undefined;\n    };\n    return (\n      isValidProperty(this.guestData, 'guestName', '') ||\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\n    );\n  }\n\n  private setSourceOptions(bookingSource: any[]) {\n    this.sourceOptions = bookingSource.map(source => ({\n      id: source.id,\n      value: source.description,\n      tag: source.tag,\n      type: source.type,\n    }));\n    if (this.isEventType('EDIT_BOOKING')) {\n      this.sourceOption = { ...this.defaultData.SOURCE };\n    } else {\n      this.sourceOption = {\n        code: bookingSource[0].code,\n        description: bookingSource[0].description,\n        tag: bookingSource[0].tag,\n        type: bookingSource[0].type,\n        id: bookingSource[0].id,\n      };\n    }\n  }\n\n  private setOtherProperties(res: any) {\n    this.ratePricingMode = res?.ratePricingMode;\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\n    this.bedPreferenceType = res.bedPreferenceType;\n  }\n\n  private async checkBookingAvailability() {\n    resetBookingStore();\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\n    try {\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\n      const data = await this.bookingService.getBookingAvailability({\n        from_date,\n        to_date,\n        propertyid: this.propertyid,\n        adultChildCount: this.adultChildCount,\n        language: this.language,\n        room_type_ids,\n        currency: this.currency,\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\n        is_in_agent_mode,\n        room_type_ids_to_update,\n      });\n      if (!this.isEventType('EDIT_BOOKING')) {\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\n      }\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\n        this.updateBooking();\n      }\n    } catch (error) {\n      console.error('Error initializing booking availability:', error);\n    }\n  }\n\n  private updateBooking() {\n    try {\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\n      const roomtypeId = currentRoomType.roomtype.id;\n      const rateplanId = currentRoomType.rateplan.id;\n      console.log({ GUEST });\n      const guest = {\n        bed_preference: currentRoomType.bed_preference?.toString(),\n        infant_nbr: currentRoomType.occupancy.infant_nbr,\n        last_name: GUEST.last_name,\n        first_name: GUEST.first_name,\n        unit: (currentRoomType.unit as any)?.id?.toString(),\n        roomtype_id: currentRoomType.roomtype.id,\n      };\n      modifyBookingStore('guest', guest);\n      reserveRooms({\n        roomTypeId: roomtypeId,\n        ratePlanId: rateplanId,\n        rooms: 1,\n        guest: [guest],\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  private async checkAndBlockDate() {\n    try {\n      const { block_exposed_unit_props } = this.defaultData;\n      await this.bookingService.getBookingAvailability({\n        from_date: block_exposed_unit_props.from_date,\n        to_date: block_exposed_unit_props.to_date,\n        propertyid: this.propertyid,\n        adultChildCount: {\n          adult: 2,\n          child: 0,\n        },\n        language: this.language,\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\n        currency: this.currency,\n      });\n      const isAvailable = booking_store.roomTypes.every(rt => {\n        if (rt.is_available_to_book) {\n          return true;\n        }\n        return rt.inventory > 0 && rt['not_available_reason'] === 'ALL-RATES-PLAN-NOT-BOOKABLE';\n      });\n      if (isAvailable) {\n        await this.handleBlockDate(false);\n      } else {\n        console.log('Blocked date is unavailable. Continuing...');\n      }\n    } catch (error) {\n      console.error('Error checking and blocking date:', error);\n    }\n  }\n  private async closeWindow() {\n    resetBookingStore();\n    handleBodyOverflow(false);\n\n    if (this.wasBlockedUnit && !this.didReservation) {\n      await this.checkAndBlockDate();\n    }\n    const el = document.querySelector('.sideWindow');\n    if (!el) return;\n\n    el.classList.add('sideWindow--exit');\n\n    setTimeout(() => {\n      this.closeBookingWindow.emit();\n      document.removeEventListener('keydown', this.handleKeyDown);\n    }, 300);\n  }\n\n  private isEventType(key: TEventType) {\n    return this.defaultData.event_type === key;\n  }\n\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.blockDatesData = opt.data;\n  }\n\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt = event.detail;\n    if (opt.guestRefKey) {\n      if (this.isEventType('BAR_BOOKING') || this.wasBlockedUnit || this.isEventType('SPLIT_BOOKING')) {\n        this.guestData[opt.guestRefKey] = {\n          ...opt.data,\n          roomId: this.defaultData.PR_ID,\n        };\n      } else this.guestData[opt.guestRefKey] = opt.data;\n    }\n  }\n\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.bookedByInfoData = opt.value.data;\n  }\n\n  private renderPage() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  private gotoPage(gotoPage: string) {\n    this.page = gotoPage;\n    this.renderPage();\n  }\n\n  private getPageBlockDatesView() {\n    return (\n      <Fragment>\n        <igl-block-dates-view\n          fromDate={this.defaultData.FROM_DATE}\n          toDate={this.defaultData.TO_DATE}\n          entryDate={this.defaultData.ENTRY_DATE}\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\n        ></igl-block-dates-view>\n      </Fragment>\n    );\n  }\n\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    if (event.detail.key === 'propertyBookedBy') {\n      this.handleBookedByInfoUpdate(event);\n    } else {\n      this.handleGuestInfoUpdate(event);\n    }\n  }\n\n  private async handleBlockDate(auto_close = true) {\n    const props = this.wasBlockedUnit\n      ? this.defaultData.block_exposed_unit_props\n      : (() => {\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\n          return {\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\n            pr_id: this.defaultData.PR_ID.toString(),\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\n            ...releaseData,\n          };\n        })();\n    // const blockedUnit = await transformNewBLockedRooms(result);\n    await this.bookingService.blockUnit(props);\n    // this.blockedCreated.emit(blockedUnit);\n    if (auto_close) this.closeWindow();\n  }\n\n  private async bookUser(check_in: boolean) {\n    this.setLoadingState(check_in);\n\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n      if (this.isGuestDataIncomplete()) {\n        this.isLoading = '';\n        return;\n      }\n    } else if (this.isButtonDisabled()) {\n      this.isLoading = '';\n      return;\n    }\n\n    try {\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n        this.bookedByInfoData.message = this.defaultData.NOTES;\n      }\n      this.didReservation = true;\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\n        context: this,\n        sourceOption: this.sourceOption,\n        check_in,\n      });\n      await this.bookingService.doReservation(serviceParams);\n      await this.adjustBlockedDatesAfterReservation(serviceParams);\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.error('Error booking user:', error);\n    } finally {\n      // this.isLoading = null;\n      this.resetLoadingState();\n    }\n  }\n  private async adjustBlockedDatesAfterReservation(serviceParams: any) {\n    if (!this.wasBlockedUnit) {\n      return;\n    }\n    const original_from_date = moment(this.defaultData.block_exposed_unit_props.from_date, 'YYYY-MM-DD');\n    const current_from_date = moment(serviceParams.booking.from_date, 'YYYY-MM-DD');\n    const original_to_date = moment(this.defaultData.block_exposed_unit_props.to_date, 'YYYY-MM-DD');\n    const current_to_date = moment(serviceParams.booking.to_date, 'YYYY-MM-DD');\n    if (current_to_date.isBefore(original_to_date, 'days')) {\n      const props = { ...this.defaultData.block_exposed_unit_props, from_date: current_to_date.format('YYYY-MM-DD') };\n      await this.bookingService.blockUnit(props);\n    }\n    if (current_from_date.isAfter(original_from_date, 'days')) {\n      const props = { ...this.defaultData.block_exposed_unit_props, to_date: current_from_date.format('YYYY-MM-DD') };\n      await this.bookingService.blockUnit(props);\n    }\n    return;\n  }\n\n  private setLoadingState(assign_units: boolean) {\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n      this.isLoading = 'save';\n    } else {\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\n    }\n  }\n\n  private resetLoadingState() {\n    this.isLoading = '';\n    setTimeout(() => {\n      this.closeWindow();\n    }, 100);\n  }\n\n  private getCurrentPage(name: string) {\n    return this.page === name;\n  }\n\n  render() {\n    return (\n      <Host data-testid=\"book_property_sheet h-100\">\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\n        <div class={'sideWindow sheet-container ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\n          {isRequestPending('/Get_Setup_Entries_By_TBL_NAME_MULTI') ? (\n            <div class={'loading-container'}>\n              <ir-spinner></ir-spinner>\n            </div>\n          ) : (\n            <Fragment>\n              <div class=\"sheet-header\">\n                <div class=\"card-header-container mb-2\">\n                  <h3 class=\"text-left font-medium-2 px-2\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\n                  <ir-icon\n                    class={'px-2'}\n                    onIconClickHandler={() => {\n                      this.closeWindow();\n                    }}\n                  >\n                    <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                      />\n                    </svg>\n                  </ir-icon>\n                </div>\n              </div>\n              <div class=\"px-2 sheet-body\">\n                {this.getCurrentPage('page_one') && (\n                  <igl-booking-overview-page\n                    wasBlockedUnit={this.wasBlockedUnit}\n                    initialRoomIds={this.initialRoomIds}\n                    defaultDaterange={this.defaultDateRange}\n                    eventType={this.defaultData.event_type}\n                    selectedRooms={this.selectedUnits}\n                    currency={this.currency}\n                    showSplitBookingOption={this.showSplitBookingOption}\n                    ratePricingMode={this.ratePricingMode}\n                    dateRangeData={this.dateRangeData}\n                    bookingData={this.defaultData}\n                    adultChildCount={this.adultChildCount}\n                    bookedByInfoData={this.bookedByInfoData}\n                    adultChildConstraints={this.adultChildConstraints}\n                    sourceOptions={this.sourceOptions}\n                    propertyId={this.propertyid}\n                  ></igl-booking-overview-page>\n                )}\n\n                {this.getCurrentPage('page_two') && (\n                  <igl-booking-form\n                    currency={this.currency}\n                    propertyId={this.propertyid}\n                    showPaymentDetails={this.showPaymentDetails}\n                    selectedGuestData={this.guestData}\n                    countries={this.countries}\n                    isLoading={this.isLoading}\n                    selectedRooms={this.selectedUnits}\n                    bedPreferenceType={this.bedPreferenceType}\n                    dateRangeData={this.dateRangeData}\n                    bookingData={this.defaultData}\n                    showSplitBookingOption={this.showSplitBookingOption}\n                    language={this.language}\n                    bookedByInfoData={this.bookedByInfoData}\n                    defaultGuestData={this.defaultData}\n                    isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\n                    onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\n                  ></igl-booking-form>\n                )}\n                {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\n              </div>\n              {this.getCurrentPage('page_block_date') ? (\n                <div class=\"sheet-footer\">\n                  <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\n                  <ir-button\n                    text={locales.entries.Lcz_Blockdates}\n                    isLoading={isRequestPending('/Block_Exposed_Unit')}\n                    class=\"flex-fill\"\n                    onClick={() => this.handleBlockDate()}\n                  ></ir-button>\n                </div>\n              ) : (\n                <igl-book-property-footer\n                  page={this.page}\n                  dateRangeData={this.dateRangeData}\n                  isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\n                  isLoading={this.isLoading}\n                  class={'sheet-footer'}\n                  eventType={this.bookingData.event_type}\n                ></igl-book-property-footer>\n              )}\n            </Fragment>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  width: 100% !important;\n  background: #000;\n}\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\nimport { TPropertyButtonsTypes } from '../../../../models/igl-book-property';\nimport locales from '@/stores/locales.store';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { TIcons } from '@/components/ui/ir-icons/icons';\nimport calendar_data from '@/stores/calendar-data';\nimport moment from 'moment';\n\n@Component({\n  tag: 'igl-book-property-footer',\n  styleUrl: 'igl-book-property-footer.css',\n  scoped: true,\n})\nexport class IglBookPropertyFooter {\n  @Prop() eventType: string;\n  @Prop() disabled: boolean = true;\n  @Prop() page: string;\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\n  @Prop() dateRangeData: { [key: string]: any };\n  @Prop() isLoading: string;\n\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\n\n  private isEventType(event: string) {\n    return event === this.eventType;\n  }\n  private editNext(label) {\n    if (this.isEventType('EDIT_BOOKING')) {\n      if (label === 'Cancel') {\n        return 'flex-fill';\n      } else {\n        return 'd-none d-md-block  flex-fill';\n      }\n    }\n    return 'flex-fill';\n  }\n\n  private renderButton({\n    label,\n    type,\n    disabled,\n    icon_name,\n    isLoading,\n    icon_position = 'right',\n  }: {\n    type: TPropertyButtonsTypes;\n    label: string;\n    disabled?: boolean;\n    icon_name?: TIcons;\n    isLoading?: boolean;\n    icon_position?: 'right' | 'left';\n  }) {\n    return (\n      <div class={this.shouldRenderTwoButtons() ? ` ${this.editNext(label)}` : 'flex-fill'}>\n        {/* <button class={`btn btn-${type === 'cancel' ? 'secondary' : 'primary'} full-width`} onClick={() => this.buttonClicked.emit({ key: type })} disabled={disabled}>\n          {label}\n        </button> */}\n        <ir-button\n          isLoading={isLoading}\n          btn_color={type === 'cancel' || type === 'back' ? 'secondary' : 'primary'}\n          text={label}\n          btn_disabled={disabled}\n          onClickHandler={() => {\n            this.buttonClicked.emit({ key: type });\n          }}\n          class=\"full-width\"\n          btn_styles=\"justify-content-center\"\n          icon_name={icon_name}\n          iconPosition={icon_position}\n          style={{ '--icon-size': '1rem' }}\n          icon_style={{ paddingBottom: '1.9px' }}\n        ></ir-button>\n      </div>\n    );\n  }\n\n  private shouldRenderTwoButtons() {\n    return this.isEventType('PLUS_BOOKING') || this.isEventType('ADD_ROOM') || this.isEventType('EDIT_BOOKING');\n  }\n\n  render() {\n    if (this.page === 'page_one') {\n      return (\n        <Host>\n          {/* <div class=\"d-flex justify-content-between gap-30 align-items-center full-width\"> */}\n          {this.isEventType('EDIT_BOOKING') ? (\n            <Fragment>\n              {this.renderButton({ type: 'cancel', label: locales.entries.Lcz_Cancel })}\n              {this.shouldRenderTwoButtons() &&\n                this.renderButton({\n                  type: 'next',\n                  label: `${locales.entries.Lcz_Next}`,\n                  disabled: isRequestPending('/Get_Exposed_Booking_Availability'),\n                  icon_name: 'angles_right',\n                })}\n            </Fragment>\n          ) : (\n            <Fragment>\n              {this.renderButton({ type: 'cancel', label: locales.entries.Lcz_Cancel })}\n              {this.shouldRenderTwoButtons() && this.renderButton({ type: 'next', label: `${locales.entries.Lcz_Next}`, icon_name: 'angles_right' })}\n            </Fragment>\n          )}\n          {/* </div> */}\n        </Host>\n      );\n    }\n    const showBookAndCheckin = calendar_data.checkin_enabled && moment(new Date(this.dateRangeData?.fromDate)).isSame(new Date(), 'day');\n    return (\n      <Fragment>\n        {this.isEditOrAddRoomEvent ? (\n          <Fragment>\n            {this.renderButton({ type: 'back', icon_position: 'left', label: locales.entries.Lcz_Back, icon_name: 'angles_left' })}\n            {this.renderButton({ type: 'save', label: locales.entries.Lcz_Save, isLoading: this.isLoading === 'save' })}\n          </Fragment>\n        ) : (\n          <Fragment>\n            {this.renderButton({ type: 'back', icon_position: 'left', label: locales.entries.Lcz_Back, icon_name: 'angles_left' })}\n            {this.renderButton({ type: 'book', label: locales.entries.Lcz_Book, isLoading: this.isLoading === 'book' })}\n            {showBookAndCheckin && this.renderButton({ type: 'bookAndCheckIn', label: locales.entries.Lcz_BookAndChekcIn, isLoading: this.isLoading === 'bookAndCheckIn' })}\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n",":host {\n  display: flex;\n  flex-direction: column;\n}\n","import { Component, Prop, h, Event, EventEmitter, State } from '@stencil/core';\nimport { IPageTwoDataUpdateProps } from '@/models/models';\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\nimport { formatAmount } from '@/utils/utils';\nimport locales from '@/stores/locales.store';\nimport { ICurrency } from '@/models/calendarData';\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\nimport { ICountry } from '@/models/IBooking';\n@Component({\n  tag: 'igl-booking-form',\n  styleUrl: 'igl-booking-form.css',\n  scoped: true,\n})\nexport class IglBookingForm {\n  @Prop() showPaymentDetails: boolean;\n  @Prop() currency: ICurrency;\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\n  @Prop() dateRangeData: { [key: string]: any };\n  @Prop() bookingData: { [key: string]: any };\n  @Prop() showSplitBookingOption: boolean;\n  @Prop() language: string;\n  @Prop() bookedByInfoData: { [key: string]: any };\n  @Prop() propertyId: number;\n  @Prop() bedPreferenceType: any;\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\n  @Prop({ reflect: true }) isLoading: string;\n  @Prop() countries: ICountry[];\n  @Prop() selectedGuestData;\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\n\n  @State() selectedBookedByData;\n  @State() guestData: any;\n  @State() selectedUnits: { [key: string]: any } = {};\n\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\n  @Event() buttonClicked: EventEmitter<{\n    key: TPropertyButtonsTypes;\n    data?: CustomEvent;\n  }>;\n\n  componentWillLoad() {\n    this.initializeGuestData();\n    this.selectedBookedByData = this.bookedByInfoData;\n  }\n\n  initializeGuestData() {\n    let total = 0;\n    const newSelectedUnits = { ...this.selectedUnits };\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\n      if (isRateModified && preference === 2) {\n        return rate * totalNights;\n      }\n      return rate;\n    };\n    this.selectedUnits = newSelectedUnits;\n    this.guestData = [];\n    this.selectedRooms.forEach((room, key) => {\n      room.forEach(rate_plan => {\n        newSelectedUnits[key] = rate_plan.selectedUnits;\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\n          this.guestData.push({\n            guestName: '',\n            roomId: '',\n            preference: '',\n            ...rate_plan,\n          });\n        }\n      });\n    });\n    this.bookingData.TOTAL_PRICE = total;\n  }\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\n    const opt = event.detail;\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\n    updatedUnits[index] = opt.data.roomId;\n    this.selectedUnits = {\n      ...this.selectedUnits,\n      [categoryIdKey]: updatedUnits,\n    };\n    this.dataUpdateEvent.emit({\n      key: 'applicationInfoUpdateEvent',\n      value: event.detail,\n    });\n  }\n\n  handleEventData(event: any, key: string, index: number) {\n    if (key === 'application-info') {\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\n    } else {\n      this.selectedBookedByData = event.detail.data;\n      this.dataUpdateEvent.emit({\n        key: 'propertyBookedBy',\n        value: event.detail,\n      });\n    }\n  }\n  isGuestDataIncomplete() {\n    if (this.selectedGuestData.length !== this.guestData.length) {\n      return true;\n    }\n    for (const data of this.selectedGuestData) {\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\n        return true;\n      }\n    }\n    return false;\n  }\n  isButtonDisabled(key: string) {\n    const isValidProperty = (property, key, comparedBy) => {\n      if (!property) {\n        return true;\n      }\n      if (property === this.selectedGuestData) {\n        return this.isGuestDataIncomplete();\n      }\n      if (key === 'selectedArrivalTime') {\n        if (property[key] !== undefined) {\n          return property[key].code === '';\n        } else {\n          return true;\n        }\n      }\n      return property[key] === comparedBy || property[key] === undefined;\n    };\n    return (\n      this.isLoading === key ||\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\n      isValidProperty(this.selectedBookedByData, 'email', '')\n    );\n  }\n\n  render() {\n    return (\n      <div class=\"d-flex flex-column h-100\">\n        <div class=\"d-flex flex-wrap\">\n          <ir-date-view\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\n            from_date={new Date(this.dateRangeData.fromDate)}\n            to_date={new Date(this.dateRangeData.toDate)}\n            dateOption=\"DD MMM YYYY\"\n          ></ir-date-view>\n          {this.guestData.length > 1 && (\n            <div class=\"mt-1 mt-md-0 text-right\">\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\n            </div>\n          )}\n        </div>\n        {Object.values(booking_store.ratePlanSelections).map(val =>\n          Object.values(val).map(ratePlan => {\n            const rp = ratePlan as IRatePlanSelection;\n            if (rp.reserved === 0) {\n              return null;\n            }\n\n            return [...new Array(rp.reserved)].map((_, i) => (\n              <igl-application-info\n                totalNights={Number(this.dateRangeData.dateDifference)}\n                bedPreferenceType={this.bedPreferenceType}\n                currency={this.currency}\n                guestInfo={rp.guest ? rp.guest[i] : null}\n                bookingType={this.bookingData.event_type}\n                rateplanSelection={rp}\n                key={`${rp.ratePlan.id}_${i}`}\n                roomIndex={i}\n                baseData={\n                  this.bookingData.event_type === 'EDIT_BOOKING'\n                    ? {\n                        roomtypeId: this.bookingData.currentRoomType.roomtype.id,\n                        unit: this.bookingData.currentRoomType.unit,\n                      }\n                    : undefined\n                }\n              ></igl-application-info>\n            ));\n          }),\n        )}\n\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\n          <igl-property-booked-by\n            propertyId={this.propertyId}\n            countries={this.countries}\n            language={this.language}\n            showPaymentDetails={this.showPaymentDetails}\n            defaultData={this.bookedByInfoData}\n            onDataUpdateEvent={event => {\n              this.handleEventData(event, 'propertyBookedBy', 0);\n            }}\n          ></igl-property-booked-by>\n        )}\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n:host > * {\n  margin: 0;\n  padding: auto;\n}\n.scrollContent {\n  height: calc(100% - 79px);\n  overflow: auto;\n  position: relative;\n}\n.loading-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  background: white;\n  position: absolute;\n  inset: 0;\n  z-index: 100;\n}\n.loader {\n  width: 1.25rem;\n  height: 1.25rem;\n  border: 2.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport moment from 'moment';\nimport booking_store from '@/stores/booking.store';\n@Component({\n  tag: 'igl-booking-overview-page',\n  styleUrl: 'igl-booking-overview-page.css',\n  scoped: true,\n})\nexport class IglBookingOverviewPage {\n  @Prop() bookingData: any;\n  @Prop() propertyId: number;\n  @Prop() message: string;\n  @Prop() showSplitBookingOption: boolean;\n  @Prop() eventType: string;\n  @Prop() currency: any;\n  @Prop() adultChildConstraints: TAdultChildConstraints;\n  @Prop() ratePricingMode: any;\n  @Prop() dateRangeData: any;\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\n  @Prop() adultChildCount: { adult: number; child: number };\n  @Prop() sourceOptions: TSourceOptions[];\n  @Prop() bookedByInfoData: any;\n  @Prop() initialRoomIds: any;\n  @Prop() wasBlockedUnit: boolean;\n\n  @Event() roomsDataUpdate: EventEmitter;\n\n  getSplitBookings() {\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\n  }\n  isEventType(event: string) {\n    return event === this.eventType;\n  }\n  setMinDate() {\n    if (!this.isEventType('EDIT_BOOKING')) {\n      return;\n    }\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\n    const today = moment();\n    if (from_date.isAfter(today)) {\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\n    }\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\n  }\n  render() {\n    return (\n      <Host>\n        <igl-book-property-header\n          wasBlockedUnit={this.wasBlockedUnit}\n          bookedByInfoData={this.bookedByInfoData}\n          defaultDaterange={this.defaultDaterange}\n          dateRangeData={this.dateRangeData}\n          minDate={this.setMinDate()}\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\n          adultChildCount={this.adultChildCount}\n          splitBookingId={this.showSplitBookingOption}\n          bookingData={this.bookingData}\n          sourceOptions={this.sourceOptions}\n          message={this.message}\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\n          showSplitBookingOption={this.showSplitBookingOption}\n          adultChildConstraints={this.adultChildConstraints}\n          splitBookings={this.getSplitBookings()}\n          propertyId={this.propertyId}\n        ></igl-book-property-header>\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\n        <div class=\" text-left\">\n          {isRequestPending('/Check_Availability') && this.isEventType('EDIT_BOOKING') ? (\n            <div class=\"loading-container\">\n              <div class=\"loader\"></div>\n            </div>\n          ) : (\n            <Fragment>\n              {booking_store.roomTypes?.map(roomType => (\n                <igl-room-type\n                  initialRoomIds={this.initialRoomIds}\n                  isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\n                  key={`room-type-${roomType.id}`}\n                  currency={this.currency}\n                  ratePricingMode={this.ratePricingMode}\n                  dateDifference={this.dateRangeData.dateDifference}\n                  bookingType={this.bookingData.event_type}\n                  roomType={roomType}\n                  class=\"mt-2 mb-1 p-0\"\n                  data-testid={`room_type_${roomType.id}`}\n                  id={roomType.id.toString()}\n                  roomInfoId={this.selectedRooms.has(`c_${roomType.id}`) ? roomType.id : null}\n                  onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\n                ></igl-room-type>\n              ))}\n            </Fragment>\n          )}\n        </div>\n\n        {/* <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type}></igl-book-property-footer> */}\n      </Host>\n    );\n  }\n}\n",":host {\n  overflow-x: hidden;\n  --ir-dialog-max-width: 20rem;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n:host * {\n  font-family: inherit !important;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n\n.font-medium {\n  font-weight: 600;\n}\n\n:host th {\n  font-weight: 600;\n}\n.h-28 {\n  height: 2rem;\n}\n.mx-01 {\n  --m: 5px;\n  margin-right: var(--m) !important;\n  margin-left: var(--m) !important;\n}\n\n.date-margin {\n  margin-right: 5px;\n}\n.pickup-margin {\n  margin-bottom: 7px !important;\n}\n.header-date {\n  padding-left: 5px !important;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n:root {\n  --sidebar-width: 50rem;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n.sm-padding-right {\n  padding-right: 0.2rem;\n}\n.sm-padding-left {\n  padding-left: 0.2rem;\n}\n.sm-padding-top {\n  padding-top: 0.2rem;\n}\n.sm-padding-bottom {\n  padding-bottom: 0.2rem;\n}\n\n.info-notes {\n  list-style: none;\n  padding-left: 0;\n}\n.light-blue-bg {\n  background-color: #acecff;\n  padding: 0.2rem 0.3rem;\n}\n.iframeHeight {\n  height: 17.5rem;\n}\n\n.dialog-title {\n  width: fit-content;\n}\n","import { Component, Listen, h, Prop, Watch, State, Event, EventEmitter, Element, Fragment } from '@stencil/core';\nimport { Booking, ExtraService, Guest, IPmsLog, Room, SharedPerson } from '@/models/booking.dto';\nimport axios from 'axios';\nimport { BookingService } from '@/services/booking.service';\nimport { IglBookPropertyPayloadAddRoom, TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport { ICountry, IEntries } from '@/models/IBooking';\nimport { IPaymentAction, PaymentService } from '@/services/payment.service';\nimport Token from '@/models/Token';\nimport { BookingDetailsSidebarEvents, OpenSidebarEvent } from './types';\nimport calendar_data from '@/stores/calendar-data';\nimport moment from 'moment';\nimport { IrModalCustomEvent } from '@/components';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n\n@Component({\n  tag: 'ir-booking-details',\n  styleUrl: 'ir-booking-details.css',\n  scoped: true,\n})\nexport class IrBookingDetails {\n  @Element() element: HTMLElement;\n  // Setup Data\n  @Prop() language: string = 'en';\n  @Prop() ticket: string = '';\n  @Prop() bookingNumber: string = '';\n  @Prop() propertyid: number;\n  @Prop() is_from_front_desk = false;\n  @Prop() p: string;\n  // Booleans Conditions\n  @Prop() hasPrint: boolean = false;\n  @Prop() hasReceipt: boolean = false;\n  @Prop() hasDelete: boolean = false;\n  @Prop() hasMenu: boolean = false;\n\n  // Room Booleans\n  @Prop() hasRoomEdit: boolean = false;\n  @Prop() hasRoomDelete: boolean = false;\n  @Prop() hasRoomAdd: boolean = false;\n  @Prop() hasCheckIn: boolean = false;\n  @Prop() hasCheckOut: boolean = false;\n  @Prop() hasCloseButton = false;\n\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\n  @State() statusData = [];\n\n  @State() showPaymentDetails: any;\n  @State() booking: Booking;\n  @State() countries: ICountry[];\n  @State() calendarData: any = {};\n  // Guest Data\n  @State() guestData: Guest = null;\n  // Rerender Flag\n  @State() rerenderFlag = false;\n  @State() sidebarState: BookingDetailsSidebarEvents | null = null;\n  @State() sidebarPayload: any;\n  @State() isUpdateClicked = false;\n\n  @State() pms_status: IPmsLog;\n  @State() isPMSLogLoading: boolean = false;\n  @State() paymentActions: IPaymentAction[];\n  @State() property_id: number;\n  @State() selectedService: ExtraService;\n  @State() bedPreference: IEntries[];\n  @State() roomGuest: any;\n  @State() modalState: { type: 'email' | (string & {}); message: string; loading: boolean } = null;\n  @State() departureTime: IEntries[];\n  // Payment Event\n  @Event() toast: EventEmitter<IToast>;\n  @Event() bookingChanged: EventEmitter<Booking>;\n  @Event() closeSidebar: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private paymentService = new PaymentService();\n  private token = new Token();\n\n  private printingBaseUrl = 'https://gateway.igloorooms.com/PrintBooking/%1/printing?id=%2';\n  private modalRef: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('openSidebar')\n  handleSideBarEvents(e: CustomEvent<OpenSidebarEvent<unknown>>) {\n    this.sidebarState = e.detail.type;\n    this.sidebarPayload = e.detail.payload;\n  }\n\n  @Listen('clickHandler')\n  handleIconClick(e: CustomEvent) {\n    const target = e.target as HTMLIrButtonElement;\n    switch (target.id) {\n      case 'pickup':\n        this.sidebarState = 'pickup';\n        return;\n      case 'close':\n        this.closeSidebar.emit(null);\n        return;\n      case 'email':\n        this.modalState = {\n          type: 'email',\n          message: locales.entries.Lcz_EmailBookingto.replace('%1', this.booking.guest.email),\n          loading: isRequestPending('/Send_Booking_Confirmation_Email'),\n        };\n        this.modalRef.openModal();\n        return;\n      case 'print':\n        this.openPrintingScreen();\n        return;\n      case 'receipt':\n        this.openPrintingScreen('invoice');\n        return;\n      case 'book-delete':\n        return;\n      case 'menu':\n        window.location.href = 'https://x.igloorooms.com/manage/acbookinglist.aspx';\n        return;\n      case 'room-add':\n        (this.bookingItem as IglBookPropertyPayloadAddRoom) = {\n          ID: '',\n          NAME: this.booking.guest.last_name,\n          EMAIL: this.booking.guest.email,\n          PHONE: this.booking.guest.mobile,\n          REFERENCE_TYPE: '',\n          FROM_DATE: this.booking.from_date,\n          ARRIVAL: this.booking.arrival,\n          TO_DATE: this.booking.to_date,\n          TITLE: `${locales.entries.Lcz_AddingUnitToBooking}# ${this.booking.booking_nbr}`,\n          defaultDateRange: {\n            fromDate: new Date(this.booking.from_date),\n            fromDateStr: '',\n            toDate: new Date(this.booking.to_date),\n            toDateStr: '',\n            dateDifference: 0,\n            message: '',\n          },\n          event_type: 'ADD_ROOM',\n          booking: this.booking,\n          BOOKING_NUMBER: this.booking.booking_nbr,\n          ADD_ROOM_TO_BOOKING: this.booking.booking_nbr,\n          GUEST: this.booking.guest,\n          message: this.booking.remark,\n          SOURCE: this.booking.source,\n          ROOMS: this.booking.rooms,\n        };\n        return;\n      case 'extra_service_btn':\n        this.sidebarState = 'extra_service';\n        return;\n      case 'add-payment':\n        return;\n    }\n  }\n\n  @Listen('resetExposedCancelationDueAmount')\n  async handleResetExposedCancellationDueAmount(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    //TODO: Payment action\n    const paymentActions = await this.paymentService.GetExposedCancellationDueAmount({ booking_nbr: this.booking.booking_nbr, currency_id: this.booking.currency.id });\n    this.paymentActions = [...paymentActions];\n  }\n  @Listen('editInitiated')\n  handleEditInitiated(e: CustomEvent<TIglBookPropertyPayload>) {\n    this.bookingItem = e.detail;\n  }\n  @Listen('updateRoomGuests')\n  handleRoomGuestsUpdate(e: CustomEvent<{ identifier: string; guests: SharedPerson[] }>) {\n    const { identifier, guests } = e.detail;\n    const rooms = [...this.booking.rooms];\n    let currentRoomIndex = rooms.findIndex(r => r.identifier === identifier);\n    if (currentRoomIndex === -1) {\n      return;\n    }\n    const currentRoom = rooms[currentRoomIndex];\n    const updatedRoom = { ...currentRoom, sharing_persons: guests };\n    rooms[currentRoomIndex] = updatedRoom;\n    this.booking = { ...this.booking, rooms: [...rooms] };\n  }\n\n  @Listen('resetBookingEvt')\n  async handleResetBooking(e: CustomEvent<Booking | null>) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (e.detail) {\n      return (this.booking = e.detail);\n    }\n    await this.resetBooking();\n  }\n  @Listen('editExtraService')\n  handleEditExtraService(e: CustomEvent) {\n    this.selectedService = e.detail;\n    this.sidebarState = 'extra_service';\n  }\n\n  private setRoomsData(roomServiceResp) {\n    let roomsData: { [key: string]: any }[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    this.calendarData.roomsInfo = roomsData;\n  }\n  private async initializeApp() {\n    try {\n      const [roomResponse, languageTexts, countriesList, bookingDetails, setupEntries] = await Promise.all([\n        this.roomService.getExposedProperty({ id: this.propertyid || 0, language: this.language, aname: this.p }),\n        this.roomService.fetchLanguage(this.language),\n        this.bookingService.getCountries(this.language),\n        this.bookingService.getExposedBooking(this.bookingNumber, this.language),\n        this.bookingService.getSetupEntriesByTableNameMulti(['_BED_PREFERENCE_TYPE', '_DEPARTURE_TIME']),\n      ]);\n      this.property_id = roomResponse?.My_Result?.id;\n      const { bed_preference_type, departure_time } = this.bookingService.groupEntryTablesResult(setupEntries);\n      this.bedPreference = bed_preference_type;\n      this.departureTime = departure_time;\n      console.log(departure_time);\n      if (bookingDetails?.booking_nbr && bookingDetails?.currency?.id && bookingDetails.is_direct) {\n        this.paymentService\n          .GetExposedCancellationDueAmount({\n            booking_nbr: bookingDetails.booking_nbr,\n            currency_id: bookingDetails.currency.id,\n          })\n          .then(res => {\n            this.paymentActions = res;\n          });\n      }\n      if (!locales?.entries) {\n        locales.entries = languageTexts.entries;\n        locales.direction = languageTexts.direction;\n      }\n      this.countries = countriesList;\n      const myResult = roomResponse?.My_Result;\n      if (myResult) {\n        const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends, aname } = myResult;\n        this.printingBaseUrl = this.printingBaseUrl.replace('%1', aname).replace('%2', this.bookingNumber);\n        this.calendarData = {\n          currency,\n          allowed_booking_sources,\n          adult_child_constraints,\n          legendData: calendar_legends,\n        };\n        this.setRoomsData(roomResponse);\n        const paymentCodesToShow = ['001', '004'];\n        this.showPaymentDetails = paymentMethods?.some(method => paymentCodesToShow.includes(method.code));\n      } else {\n        console.warn(\"Room response is missing 'My_Result'.\");\n      }\n\n      // Set guest and booking data\n      this.guestData = bookingDetails.guest;\n      this.booking = bookingDetails;\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    }\n  }\n\n  private async openPrintingScreen(mode: 'invoice' | 'print' = 'print', version: 'old' | 'new' = 'new') {\n    if (version === 'old') {\n      if (mode === 'invoice') {\n        return window.open(`https://x.igloorooms.com/manage/AcBookingEdit.aspx?IRID=${this.booking.system_id}&&PM=I&TK=${this.ticket}`);\n      }\n      return window.open(`https://x.igloorooms.com/manage/AcBookingEdit.aspx?IRID=${this.booking.system_id}&&PM=B&TK=${this.ticket}`);\n    }\n    let url = this.printingBaseUrl;\n    if (mode === 'invoice') {\n      url = url + '&mode=invoice';\n    }\n    const { data } = await axios.post(`Get_ShortLiving_Token`);\n    if (!data.ExceptionMsg) {\n      url = url + `&token=${data.My_Result}`;\n    }\n    window.open(url);\n  }\n\n  private handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n\n  private handleDeleteFinish(e: CustomEvent) {\n    this.booking = { ...this.booking, rooms: this.booking.rooms.filter(room => room.identifier !== e.detail) };\n  }\n\n  private async resetBooking() {\n    try {\n      const booking = await this.bookingService.getExposedBooking(this.bookingNumber, this.language);\n      this.booking = { ...booking };\n      this.bookingChanged.emit(this.booking);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async handleModalConfirm(e: IrModalCustomEvent<any>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    switch (this.modalState.type) {\n      case 'email':\n        await this.bookingService.sendBookingConfirmationEmail(this.booking.booking_nbr, this.language);\n        break;\n    }\n    this.modalState = null;\n    this.modalRef.closeModal();\n  }\n  private renderSidebarContent() {\n    const handleClose = () => {\n      this.sidebarState = null;\n    };\n    switch (this.sidebarState) {\n      case 'guest':\n        return (\n          <ir-guest-info\n            isInSideBar\n            headerShown\n            slot=\"sidebar-body\"\n            booking_nbr={this.bookingNumber}\n            email={this.booking?.guest.email}\n            language={this.language}\n            onCloseSideBar={handleClose}\n          ></ir-guest-info>\n        );\n      case 'pickup':\n        return (\n          <ir-pickup\n            bookingDates={{ from: this.booking.from_date, to: this.booking.to_date }}\n            slot=\"sidebar-body\"\n            defaultPickupData={this.booking.pickup_info}\n            bookingNumber={this.booking.booking_nbr}\n            numberOfPersons={this.booking.occupancy.adult_nbr + this.booking.occupancy.children_nbr}\n            onCloseModal={handleClose}\n          ></ir-pickup>\n        );\n      case 'extra_note':\n        return <ir-booking-extra-note slot=\"sidebar-body\" booking={this.booking} onCloseModal={() => (this.sidebarState = null)}></ir-booking-extra-note>;\n      case 'extra_service':\n        return (\n          <ir-extra-service-config\n            service={this.selectedService}\n            booking={{ from_date: this.booking.from_date, to_date: this.booking.to_date, booking_nbr: this.booking.booking_nbr, currency: this.booking.currency }}\n            slot=\"sidebar-body\"\n            onCloseModal={() => {\n              handleClose();\n              if (this.selectedService) {\n                this.selectedService = null;\n              }\n            }}\n          ></ir-extra-service-config>\n        );\n      case 'room-guest':\n        return (\n          <ir-room-guests\n            countries={this.countries}\n            language={this.language}\n            identifier={this.sidebarPayload?.identifier}\n            bookingNumber={this.booking.booking_nbr}\n            roomName={this.sidebarPayload?.roomName}\n            totalGuests={this.sidebarPayload?.totalGuests}\n            sharedPersons={this.sidebarPayload?.sharing_persons}\n            slot=\"sidebar-body\"\n            checkIn={this.sidebarPayload?.checkin}\n            onCloseModal={handleClose}\n          ></ir-room-guests>\n        );\n      default:\n        return null;\n    }\n  }\n  render() {\n    if (!this.booking) {\n      return (\n        <div class={'loading-container'}>\n          <ir-spinner></ir-spinner>\n        </div>\n      );\n    }\n    return [\n      <Fragment>\n        {!this.is_from_front_desk && (\n          <Fragment>\n            <ir-toast></ir-toast>\n            <ir-interceptor></ir-interceptor>\n          </Fragment>\n        )}\n      </Fragment>,\n      <ir-booking-header\n        booking={this.booking}\n        hasCloseButton={this.hasCloseButton}\n        hasDelete={this.hasDelete}\n        hasMenu={this.hasMenu}\n        hasPrint={this.hasPrint}\n        hasReceipt={this.hasReceipt}\n        hasEmail={['001', '002'].includes(this.booking?.status?.code)}\n      ></ir-booking-header>,\n      <div class=\"fluid-container p-1 text-left mx-0\">\n        <div class=\"row m-0\">\n          <div class=\"col-12 p-0 mx-0 pr-lg-1 col-lg-6\">\n            <ir-reservation-information countries={this.countries} booking={this.booking}></ir-reservation-information>\n            <div class=\"font-size-large d-flex justify-content-between align-items-center mb-1\">\n              <ir-date-view from_date={this.booking.from_date} to_date={this.booking.to_date}></ir-date-view>\n              {\n                // this.hasRoomAdd && this.booking.is_direct && this.booking.is_editable && (\n                this.hasRoomAdd && this.booking.is_editable && <ir-button id=\"room-add\" icon_name=\"square_plus\" variant=\"icon\" style={{ '--icon-size': '1.5rem' }}></ir-button>\n              }\n            </div>\n            <div class=\"card p-0 mx-0\">\n              {this.booking.rooms.map((room: Room, index: number) => {\n                const showCheckin = this.handleRoomCheckin(room);\n                const showCheckout = this.handleRoomCheckout(room);\n                return [\n                  <ir-room\n                    room={room}\n                    property_id={this.property_id}\n                    language={this.language}\n                    departureTime={this.departureTime}\n                    bedPreferences={this.bedPreference}\n                    isEditable={this.booking.is_editable}\n                    legendData={this.calendarData.legendData}\n                    roomsInfo={this.calendarData.roomsInfo}\n                    myRoomTypeFoodCat={room.roomtype.name}\n                    mealCodeName={room.rateplan.short_name}\n                    currency={this.booking.currency.symbol}\n                    hasRoomEdit={this.hasRoomEdit && this.booking.status.code !== '003' && this.booking.is_direct}\n                    hasRoomDelete={this.hasRoomDelete && this.booking.status.code !== '003' && this.booking.is_direct}\n                    hasCheckIn={showCheckin}\n                    hasCheckOut={showCheckout}\n                    booking={this.booking}\n                    bookingIndex={index}\n                    onDeleteFinished={this.handleDeleteFinish.bind(this)}\n                  />,\n                  index !== this.booking.rooms.length - 1 && <hr class=\"mr-2 ml-2 my-0 p-0\" />,\n                ];\n              })}\n            </div>\n            {/* <ir-ota-services services={this.booking.ota_services}></ir-ota-services> */}\n            <ir-pickup-view booking={this.booking}></ir-pickup-view>\n            <section>\n              <div class=\"font-size-large d-flex justify-content-between align-items-center mb-1\">\n                <p class={'font-size-large p-0 m-0 '}>{locales.entries.Lcz_ExtraServices}</p>\n                <ir-button id=\"extra_service_btn\" icon_name=\"square_plus\" variant=\"icon\" style={{ '--icon-size': '1.5rem' }}></ir-button>\n              </div>\n              <ir-extra-services\n                booking={{ booking_nbr: this.booking.booking_nbr, currency: this.booking.currency, extra_services: this.booking.extra_services }}\n              ></ir-extra-services>\n            </section>\n          </div>\n          <div class=\"col-12 p-0 m-0 pl-lg-1 col-lg-6\">\n            <ir-payment-details paymentActions={this.paymentActions} bookingDetails={this.booking}></ir-payment-details>\n          </div>\n        </div>\n      </div>,\n      <ir-modal\n        modalBody={this.modalState?.message}\n        leftBtnText={locales.entries.Lcz_Cancel}\n        rightBtnText={locales.entries.Lcz_Confirm}\n        autoClose={false}\n        isLoading={isRequestPending('/Send_Booking_Confirmation_Email')}\n        ref={el => (this.modalRef = el)}\n        onConfirmModal={e => {\n          this.handleModalConfirm(e);\n        }}\n        onCancelModal={() => {\n          this.modalRef.closeModal();\n        }}\n      ></ir-modal>,\n      <ir-sidebar\n        open={this.sidebarState !== null}\n        side={'right'}\n        id=\"editGuestInfo\"\n        style={{ '--sidebar-width': this.sidebarState === 'room-guest' ? '60rem' : undefined }}\n        onIrSidebarToggle={e => {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          this.sidebarState = null;\n        }}\n        showCloseButton={false}\n      >\n        {this.renderSidebarContent()}\n      </ir-sidebar>,\n      <Fragment>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\n            adultChildConstraints={this.calendarData.adult_child_constraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.property_id}\n            bookingData={this.bookingItem}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n      </Fragment>,\n    ];\n  }\n  private handleRoomCheckout(room: Room): boolean {\n    if (!calendar_data.checkin_enabled || calendar_data.is_automatic_check_in_out) {\n      return false;\n    }\n    return room.in_out.code === '001';\n  }\n  private handleRoomCheckin(room: Room): boolean {\n    if (!calendar_data.checkin_enabled || calendar_data.is_automatic_check_in_out) {\n      return false;\n    }\n    if (!room.unit) {\n      return false;\n    }\n    if (room.in_out && room.in_out.code !== '000') {\n      return false;\n    }\n    if (moment().isSameOrAfter(moment(room.from_date, 'YYYY-MM-DD'), 'days') && moment().isBefore(moment(room.to_date, 'YYYY-MM-DD'), 'days')) {\n      return true;\n    }\n    return false;\n  }\n}\n",":host {\n  display: block;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { Booking } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport { getPrivateNote } from '@/utils/booking';\n@Component({\n  tag: 'ir-booking-extra-note',\n  styleUrls: ['ir-booking-extra-note.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrBookingExtraNote {\n  @Prop() booking: Booking;\n\n  @State() isLoading = false;\n  @State() note = '';\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<Booking | null>;\n\n  private bookingService = new BookingService();\n  componentWillLoad() {\n    if (this.booking.extras) {\n      this.setNote(getPrivateNote(this.booking.extras));\n    }\n  }\n\n  private setNote(value: string) {\n    this.note = value;\n  }\n  private async savePrivateNote() {\n    try {\n      this.isLoading = true;\n      let prevExtras = this.booking.extras || [];\n      const newExtraObj = { key: 'private_note', value: this.note };\n      if (prevExtras.length === 0) {\n        prevExtras.push(newExtraObj);\n      } else {\n        const oldPrivateNoteIndex = prevExtras.findIndex(e => e.key === 'private_note');\n        if (oldPrivateNoteIndex === -1) {\n          prevExtras.push(newExtraObj);\n        } else {\n          prevExtras[oldPrivateNoteIndex] = newExtraObj;\n        }\n      }\n      const res = await this.bookingService.doReservation({\n        assign_units: true,\n        is_pms: true,\n        is_direct: true,\n        is_in_loyalty_mode: false,\n        promo_key: null,\n        booking: this.booking,\n        Is_Non_Technical_Change: true,\n        extras: prevExtras,\n      });\n      this.resetBookingEvt.emit(res);\n      this.closeModal.emit(null);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  render() {\n    return (\n      <form\n        class={'sheet-container h-100'}\n        onSubmit={e => {\n          e.preventDefault();\n          this.savePrivateNote();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_PrivateNote} displayContext=\"sidebar\"></ir-title>\n        <div class=\"sheet-body px-1\">\n          <ir-textarea placeholder={locales.entries.Lcz_PrivateNote_MaxChar} label=\"\" value={this.note} maxLength={150} onTextChange={e => this.setNote(e.detail)}></ir-textarea>\n        </div>\n        <div class={'sheet-footer'}>\n          <ir-button\n            onClickHandler={() => this.closeModal.emit(null)}\n            btn_styles=\"justify-content-center\"\n            class={`mb-1 mb-sm-0 flex-fill  mr-sm-1'}`}\n            text={locales.entries.Lcz_Cancel}\n            btn_color=\"secondary\"\n          ></ir-button>\n\n          <ir-button\n            btn_styles=\"justify-content-center align-items-center\"\n            class={'m-0 flex-fill text-center ml-sm-1'}\n            isLoading={this.isLoading}\n            text={locales.entries.Lcz_Save}\n            btn_color=\"primary\"\n            btn_type=\"submit\"\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.confirmed {\n  color: #fff;\n  display: flex;\n  align-items: center;\n}\n.bg-ir-green {\n  background: #629a4c;\n  padding: 0.2rem 0.3rem;\n  /* height: 28px; */\n  /* padding-top: 0 !important;\n  padding-bottom: 0 !important ; */\n}\n.bg-ir-red {\n  background: #ff4961;\n  padding: 0.2rem 0.3rem;\n  /* height: 28px; */\n  /* padding-top: 0 !important;\n  padding-bottom: 0 !important ; */\n}\n.bg-ir-orange {\n  background: #ff9149;\n  padding: 0.2rem 0.3rem;\n  /* height: 28px; */\n  /* padding-top: 0 !important;\n  padding-bottom: 0 !important ; */\n}\n","import { IToast } from '@/components/ui/ir-toast/toast';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\nimport calendar_data from '@/stores/calendar-data';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, h, Listen, Prop, State } from '@stencil/core';\nimport { BookingDetailsDialogEvents, OpenDialogEvent, OpenSidebarEvent } from '../types';\nimport { BookingService } from '@/services/booking.service';\n\n@Component({\n  tag: 'ir-booking-header',\n  styleUrl: 'ir-booking-header.css',\n  scoped: true,\n})\nexport class IrBookingHeader {\n  @Prop() booking: Booking;\n  @Prop() hasReceipt: boolean;\n  @Prop() hasPrint: boolean;\n  @Prop() hasDelete: boolean;\n  @Prop() hasMenu: boolean;\n  @Prop() hasCloseButton: boolean;\n  @Prop() hasEmail: boolean = true;\n\n  @State() bookingStatus: string | null = null;\n  @State() currentDialogStatus: BookingDetailsDialogEvents;\n\n  @Event() toast: EventEmitter<IToast>;\n  @Event() closeSidebar: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<any>>;\n\n  private confirmationBG = {\n    '001': 'bg-ir-orange',\n    '002': 'bg-ir-green',\n    '003': 'bg-ir-red',\n    '004': 'bg-ir-red',\n  };\n  private dialogRef: HTMLIrDialogElement;\n\n  private bookingService = new BookingService();\n  private alertMessage = `ALERT! Modifying an OTA booking will create a discrepancy between igloorooms and the source. Future guest modifications on the OTA may require manual adjustments of the booking.`;\n  modalEl: HTMLIrModalElement;\n\n  @Listen('selectChange')\n  handleSelectChange(e: CustomEvent<any>) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    const target = e.target;\n    this.bookingStatus = (target as any).selectedValue;\n  }\n  private async updateStatus() {\n    if (!this.bookingStatus || this.bookingStatus === '-1') {\n      this.toast.emit({\n        type: 'error',\n        description: '',\n        title: locales.entries.Lcz_SelectStatus,\n        position: 'top-right',\n      });\n      return;\n    }\n    try {\n      await this.bookingService.changeExposedBookingStatus({\n        book_nbr: this.booking.booking_nbr,\n        status: this.bookingStatus,\n      });\n      this.toast.emit({\n        type: 'success',\n        description: '',\n        title: locales.entries.Lcz_StatusUpdatedSuccessfully,\n        position: 'top-right',\n      });\n      this.bookingStatus = null;\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private openDialog(e: OpenDialogEvent) {\n    const { type } = e;\n    this.currentDialogStatus = type;\n    this.dialogRef.openModal();\n  }\n  private renderDialogBody() {\n    switch (this.currentDialogStatus) {\n      case 'pms':\n        return <ir-pms-logs slot=\"modal-body\" bookingNumber={this.booking.booking_nbr}></ir-pms-logs>;\n      case 'events-log':\n        return <ir-events-log booking={this.booking} slot=\"modal-body\" bookingNumber={this.booking.booking_nbr}></ir-events-log>;\n    }\n  }\n\n  render() {\n    const lastManipulation = this.booking.ota_manipulations ? this.booking.ota_manipulations[this.booking.ota_manipulations.length - 1] : null;\n    return (\n      <div class=\"fluid-container px-1\">\n        <div class=\"d-flex flex-column p-0 mx-0 flex-lg-row align-items-md-center justify-content-between mt-1\">\n          <div class=\"m-0 p-0 mb-1 mb-lg-0 mt-md-0\">\n            <p class=\"font-size-large m-0 p-0\">{`${locales.entries.Lcz_Booking}#${this.booking.booking_nbr}`}</p>\n            <p class=\"m-0 p-0\">{!this.booking.is_direct && <span class=\"mr-1 m-0\">{this.booking.channel_booking_nbr}</span>}</p>\n          </div>\n\n          <div class=\"d-flex justify-content-end align-items-center\" style={{ gap: '1rem', flexWrap: 'wrap' }}>\n            <div class=\"d-flex flex-column align-items-center\">\n              <span class={`confirmed btn-sm m-0  ${this.confirmationBG[this.booking.is_requested_to_cancel ? '003' : this.booking.status.code]}`}>\n                {this.booking.is_requested_to_cancel ? locales.entries.Lcz_CancellationRequested : this.booking.status.description}\n              </span>\n              {lastManipulation && (\n                <ir-popover\n                  trigger=\"hover\"\n                  renderContentAsHtml\n                  content={`<div><p>Modified by ${lastManipulation.user} at ${lastManipulation.date} ${lastManipulation.hour}:${lastManipulation.minute}.</p>\n                <p>${this.alertMessage}</p></div>`}\n                >\n                  <p class=\"mx-0 p-0 small text-danger\" style={{ marginTop: '0.25rem', marginBottom: '0' }}>\n                    <b>Modified</b>\n                  </p>\n                </ir-popover>\n              )}\n            </div>\n            {this.booking.allowed_actions.length > 0 && this.booking.is_editable && (\n              <div class=\"m-0 p-0 d-flex align-items-center\" style={{ gap: '0.25rem' }}>\n                <ir-select\n                  selectContainerStyle=\"h-28\"\n                  selectStyles=\"d-flex status-select align-items-center h-28\"\n                  firstOption={locales.entries.Lcz_Select}\n                  id=\"update-status\"\n                  size=\"sm\"\n                  label-available=\"false\"\n                  data={this.booking.allowed_actions.map(b => ({ text: b.description, value: b.code }))}\n                  textSize=\"sm\"\n                  class=\"sm-padding-right m-0 \"\n                  selectedValue={this.bookingStatus}\n                ></ir-select>\n                <ir-button\n                  onClickHandler={() => {\n                    if (!this.booking.is_direct) {\n                      this.modalEl.openModal();\n                      return;\n                    }\n                    this.updateStatus();\n                  }}\n                  btn_styles=\"h-28\"\n                  isLoading={isRequestPending('/Change_Exposed_Booking_Status')}\n                  btn_disabled={isRequestPending('/Change_Exposed_Booking_Status')}\n                  id=\"update-status-btn\"\n                  size=\"sm\"\n                  text=\"Update\"\n                ></ir-button>\n              </div>\n            )}\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              text={locales.entries.Lcz_EventsLog}\n              onClickHandler={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.openDialog({ type: 'events-log' });\n              }}\n            ></ir-button>\n            {calendar_data.is_pms_enabled && (\n              <ir-button\n                size=\"sm\"\n                btn_color=\"outline\"\n                text={locales.entries.Lcz_pms}\n                onClick={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.openDialog({ type: 'pms' });\n                }}\n              ></ir-button>\n            )}\n            {this.hasReceipt && <ir-button variant=\"icon\" id=\"receipt\" icon_name=\"reciept\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasPrint && <ir-button variant=\"icon\" id=\"print\" icon_name=\"print\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasEmail && <ir-button variant=\"icon\" id=\"email\" title=\"Email this booking\" icon_name=\"email\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasDelete && <ir-button variant=\"icon\" id=\"book-delete\" icon_name=\"trash\" class=\"\" style={{ ...colorVariants.danger, '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasMenu && <ir-button variant=\"icon\" class=\"mr-1\" id=\"menu\" icon_name=\"menu_list\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n\n            {this.hasCloseButton && (\n              <ir-button\n                id=\"close\"\n                variant=\"icon\"\n                style={{ '--icon-size': '1.65rem' }}\n                icon_name=\"xmark\"\n                class=\"ml-2\"\n                onClickHandler={e => {\n                  e.stopPropagation();\n                  e.stopImmediatePropagation();\n                  this.closeSidebar.emit(null);\n                }}\n              ></ir-button>\n            )}\n          </div>\n        </div>\n        <ir-dialog\n          onOpenChange={e => {\n            if (!e.detail) {\n              this.currentDialogStatus = null;\n            }\n          }}\n          style={this.currentDialogStatus === 'events-log' && { '--ir-dialog-max-width': 'max-content' }}\n          ref={el => (this.dialogRef = el)}\n        >\n          {this.renderDialogBody()}\n        </ir-dialog>\n        <ir-modal\n          ref={el => (this.modalEl = el)}\n          modalTitle={''}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          rightBtnText={locales?.entries?.Lcz_Confirm}\n          modalBody={locales.entries.Lcz_OTA_Modification_Alter}\n          isLoading={isRequestPending('/Change_Exposed_Booking_Status')}\n          onConfirmModal={this.updateStatus.bind(this)}\n        ></ir-modal>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n.backdrop {\n  opacity: 0;\n  background: rgba(0, 0, 0, 0.2);\n  position: fixed;\n  inset: 0;\n  z-index: 99999998;\n}\n.backdrop[data-state='opened'] {\n  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\n}\n.backdrop[data-state='closed'] {\n  opacity: 0;\n  pointer-events: none;\n}\n\n.modal-container {\n  box-sizing: border-box;\n  margin: 0;\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n  position: fixed;\n  z-index: 99999999;\n  overflow-y: auto;\n  top: 50%;\n  left: 50%;\n  background: white;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  min-height: fit-content;\n  height: fit-content;\n  max-width: var(--ir-dialog-max-width, 40rem);\n  min-width: var(--ir-dialog-min-width);\n  max-height: 85vh;\n  border-radius: 8px;\n  padding: 0;\n  animation: contentShow 300ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n\n.modal-footer ::slotted(*) {\n  flex-direction: row;\n  align-items: center;\n  justify-content: end;\n  gap: 8px;\n  --ir-btn-width: inherit;\n}\n.modal-footer {\n  --ir-btn-width: 100%;\n}\n.modal-title ::slotted(*) {\n  font-size: 18px;\n  font-weight: 600;\n  color: #101828;\n  margin-bottom: 8px;\n}\n.modal-body ::slotted(*) {\n  font-size: 14px;\n  font-weight: 400;\n  color: #475467;\n  padding: 0;\n  margin: 0;\n}\n\n@keyframes overlayShow {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes contentShow {\n  from {\n    opacity: 0;\n    transform: translate(-50%, -48%) scale(0.96);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n  }\n}\n.dialog-close-button {\n  position: absolute;\n  top: 15px;\n  right: 15px;\n}\n/* md */\n","import { Component, Host, h, Element, Method, Listen, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ir-dialog',\n  styleUrl: 'ir-dialog.css',\n  shadow: true,\n})\nexport class IrDialog {\n  @Element() el: HTMLElement;\n\n  /**\n   * Controls whether the dialog should be opened.\n   * Can be updated externally and watched internally.\n   */\n  @Prop() open: boolean = false;\n\n  /**\n   * Internal open state, driven by `open` prop or internal logic.\n   */\n  @State() isOpen = false;\n\n  /**\n   * Emits the open/close state of the modal.\n   *\n   * Example:\n   * ```tsx\n   * <ir-dialog onOpenChange={(e) => console.log(e.detail)} />\n   * ```\n   */\n  @Event() openChange: EventEmitter<boolean>;\n\n  private firstFocusableElement: HTMLElement;\n  private lastFocusableElement: HTMLElement;\n\n  componentWillLoad() {\n    if (this.open) {\n      this.openModal();\n    }\n  }\n  componentDidLoad() {\n    this.prepareFocusTrap();\n  }\n  /**\n   * Opens the modal dialog programmatically.\n   * Applies `overflow: hidden` to the `body`.\n   *\n   * Example:\n   * ```ts\n   * const dialog = document.querySelector('ir-dialog');\n   * await dialog.openModal();\n   * ```\n   */\n  @Method()\n  async openModal() {\n    this.isOpen = true;\n    document.body.style.overflow = 'hidden';\n    setTimeout(() => {\n      this.prepareFocusTrap();\n    }, 10);\n    this.openChange.emit(this.isOpen);\n  }\n  /**\n   * Closes the modal dialog programmatically.\n   * Reverts body scroll and emits `openChange`.\n   */\n  @Method()\n  async closeModal() {\n    console.log('close');\n    if (!this.isOpen) {\n      return;\n    }\n    document.body.style.overflow = 'visible';\n    this.isOpen = false;\n    this.openChange.emit(this.isOpen);\n  }\n\n  @Watch('open')\n  handleOpenChange() {\n    if (this.open) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (!this.isOpen) {\n      return;\n    }\n\n    let isTabPressed = ev.key === 'Tab';\n    if (ev.key === 'Escape' && this.isOpen) {\n      this.closeModal();\n    }\n    if (!isTabPressed) {\n      return;\n    }\n\n    // If focus is about to leave the last focusable element, redirect it to the first.\n    if (!ev.shiftKey && document.activeElement === this.lastFocusableElement) {\n      this.firstFocusableElement.focus();\n      ev.preventDefault();\n    }\n\n    // If focus is about to leave the first focusable element, redirect it to the last.\n    if (ev.shiftKey && document.activeElement === this.firstFocusableElement) {\n      this.lastFocusableElement.focus();\n      ev.preventDefault();\n    }\n  }\n\n  disconnectedCallback() {\n    document.body.style.overflow = 'visible';\n  }\n  /**\n   * Finds and traps focus within modal content for accessibility.\n   */\n  private prepareFocusTrap() {\n    const focusableElements = 'button,ir-dropdown ,[href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n    const focusableContent: NodeListOf<HTMLElement> = this.el.shadowRoot.querySelectorAll(focusableElements);\n    // console.log(focusableContent);\n    if (focusableContent.length === 0) return;\n    this.firstFocusableElement = focusableContent[0];\n    this.lastFocusableElement = focusableContent[focusableContent.length - 1];\n    this.firstFocusableElement.focus();\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"backdrop\" data-state={this.isOpen ? 'opened' : 'closed'} onClick={() => this.closeModal()}></div>\n        {this.isOpen && (\n          <div class=\"modal-container\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"dialog1Title\" aria-describedby=\"dialog1Desc\">\n            <ir-icon id=\"close\" class=\"dialog-close-button\" onIconClickHandler={() => this.closeModal()}>\n              <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={18} width={18}>\n                <path\n                  fill=\"#104064\"\n                  class=\"currentColor\"\n                  d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                />\n              </svg>\n            </ir-icon>\n            <div class={'modal-title'} id=\"dialog1Title\">\n              <slot name=\"modal-title\"></slot>\n            </div>\n            <div class=\"modal-body\" id=\"dialog1Desc\">\n              <slot name=\"modal-body\"></slot>\n            </div>\n            <div class=\"modal-footer\">\n              <slot name=\"modal-footer\"></slot>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.beta {\n  background: var(--red);\n  color: white;\n  padding: 0.2rem 0.3rem;\n  font-size: 12px;\n  border-radius: 4px;\n  margin: 0;\n}\n.event-row {\n  padding-bottom: 0.5rem;\n}\n.list-title {\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  font-weight: bold;\n  width: fit-content;\n}\n.list-item {\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  margin-left: 5px;\n  width: fit-content;\n}\n.list-item.green {\n  color: #629a4c;\n  font-weight: 600;\n}\n.list-item.red {\n  color: #ff4961;\n  font-weight: 600;\n}\n.dates-row {\n  display: flex;\n  align-items: center;\n  gap: 0.875rem;\n}\n","import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { Component, Fragment, Prop, State, h } from '@stencil/core';\nimport locales from '@/stores/locales.store';\nimport { Booking, ExposedBookingEvent } from '@/models/booking.dto';\n\n@Component({\n  tag: 'ir-events-log',\n  styleUrl: 'ir-events-log.css',\n  scoped: true,\n})\nexport class IrEventsLog {\n  @Prop() bookingNumber: string;\n  @Prop() booking: Booking;\n\n  @State() bookingEvents: ExposedBookingEvent[];\n\n  componentWillLoad() {\n    this.init();\n  }\n\n  private async init() {\n    try {\n      this.bookingEvents = this.booking.events;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"p-1\">\n        <div class=\"d-flex  align-items-center\" style={{ gap: '0.5rem' }}>\n          <h3 class=\" text-left p-0 m-0  dialog-title \">{locales.entries.Lcz_EventsLog}</h3>\n          {/* <span class=\"m-0 beta\">Beta</span> */}\n        </div>\n\n        {isRequestPending('/Get_Exposed_Booking_Events') ? (\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\n            <ir-spinner></ir-spinner>\n          </div>\n        ) : (\n          <Fragment>\n            <table class=\" dialog-container-height\">\n              <thead style={{ opacity: '0' }}>\n                <tr>\n                  <th>date</th>\n                  <th>user</th>\n                  <th>status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.bookingEvents?.map(e => (\n                  <tr key={e.id} class=\"pb-1\">\n                    <td class=\"event-row dates-row\">\n                      <span>{e.date}</span>\n                      <span>\n                        {String(e.hour).padStart(2, '0')}:{String(e.minute).padStart(2, '0')}:{String(e.second).padStart(2, '0')}\n                      </span>\n                    </td>\n                    <td class=\"pl-3 event-row \">{e.type}</td>\n                    <td class=\"pl-1 event-row \">{e.user}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.extra-service-container {\n  display: flex;\n  align-items: start;\n  justify-content: space-between;\n  gap: 0.5rem;\n}\n.extra-service-container * {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n.extra-service-actions {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n.extra-service-conditional-date {\n  margin-top: 0.5rem;\n}\n.extra-service-price {\n  white-space: nowrap;\n}\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\nimport { ExtraService } from '@/models/booking.dto';\nimport { formatAmount } from '@/utils/utils';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport locales from '@/stores/locales.store';\nimport moment from 'moment';\nimport { BookingService } from '@/services/booking.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n\n@Component({\n  tag: 'ir-extra-service',\n  styleUrl: 'ir-extra-service.css',\n  scoped: true,\n})\nexport class IrExtraService {\n  @Prop() service: ExtraService;\n  @Prop() bookingNumber: string;\n  @Prop() currencySymbol: string;\n\n  @Event() editExtraService: EventEmitter<ExtraService>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n\n  private irModalRef: HTMLIrModalElement;\n  private bookingService = new BookingService();\n\n  private async deleteService() {\n    try {\n      await this.bookingService.doBookingExtraService({\n        service: this.service,\n        is_remove: true,\n        booking_nbr: this.bookingNumber,\n      });\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    return (\n      <Host>\n        <div class=\"p-1\">\n          <div class={'extra-service-container'}>\n            <p class=\"extra-service-description\">{this.service.description}</p>\n            <div class=\"extra-service-actions\">\n              {this.service.price && <p class=\"extra-service-price p-0 m-0 font-weight-bold\">{formatAmount(this.currencySymbol, this.service.price)}</p>}\n              <ir-button\n                id={`serviceEdit-${this.service.booking_system_id}`}\n                class=\"extra-service-edit-btn m-0 p-0\"\n                variant=\"icon\"\n                icon_name=\"edit\"\n                style={colorVariants.secondary}\n                onClickHandler={() => this.editExtraService.emit(this.service)}\n              ></ir-button>\n              <ir-button\n                class=\"extra-service-delete-btn m-0 p-0\"\n                variant=\"icon\"\n                onClickHandler={() => this.irModalRef.openModal()}\n                id={`roomDelete-${this.service.booking_system_id}`}\n                icon_name=\"trash\"\n                style={colorVariants.danger}\n              ></ir-button>\n            </div>\n          </div>\n          <div class=\"extra-service-conditional-date\">\n            {this.service.start_date && this.service.end_date ? (\n              <ir-date-view class=\"extra-service-date-view mr-1\" from_date={this.service.start_date} to_date={this.service.end_date} showDateDifference={false}></ir-date-view>\n            ) : (\n              this.service.start_date && <p class=\"extra-service-date-view\">{moment(new Date(this.service.start_date)).format('MMM DD, YYYY')}</p>\n            )}\n          </div>\n        </div>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.irModalRef = el)}\n          isLoading={isRequestPending('/Do_Booking_Extra_Service')}\n          onConfirmModal={this.deleteService.bind(this)}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={locales.entries.Lcz_Delete}\n          leftBtnColor=\"secondary\"\n          rightBtnColor=\"danger\"\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={`${locales.entries['Lcz_AreYouSureDoYouWantToRemove ']} ${locales.entries.Lcz_ThisService} ${locales.entries.Lcz_FromThisBooking}`}\n        ></ir-modal>\n      </Host>\n    );\n  }\n}\n","import { z, ZodError, ZodIssueCode } from 'zod';\nimport { IAllowedOptions, ICurrency, IPickupCurrency } from './calendarData';\nimport { TSourceOption } from './igl-book-property';\nimport { ICountry } from './IBooking';\nimport moment from 'moment';\nimport { IHouseKeepers } from './housekeeping';\n\ninterface IDType {\n  code: string;\n  description: string;\n}\n\ninterface IDInfo {\n  type: IDType;\n  number: string;\n}\n\nexport interface SharedPerson {\n  address: null;\n  alternative_email: null;\n  cci: null;\n  city: null;\n  country: ICountry;\n  country_id: string;\n  country_phone_prefix: null;\n  dob: string;\n  email: null;\n  first_name: string;\n  full_name: string;\n  id: number;\n  id_info: IDInfo;\n  is_main?: boolean;\n  last_name: string;\n  mobile: null;\n  nbr_confirmed_bookings: number;\n  notes: null;\n  password: null;\n  subscribe_to_news_letter: null;\n}\n// export const ZIdInfo = z.object({\n//   type: z.object({\n//     code: z.string().min(3),\n//     description: z.string(),\n//   }),\n//   number: z.string().min(2),\n// });\n// export const ZSharedPerson = z.object({\n//   id: z.number(),\n//   full_name: z.string().min(2),\n//   country_id: z.coerce.number().min(0),\n//   dob: z.coerce.date().transform(date => moment(date).format('YYYY-MM-DD')),\n//   id_info: ZIdInfo,\n// });\n\n/**\n * ZIdInfo schema:\n * - `type.code`: Validates a non-empty string must be at least 3 chars.\n *   If empty string or not provided, validation is skipped.\n * - `type.description`: Same pattern for description (but no min length).\n * - `number`: Validates if non-empty string it should be at least 2 chars.\n */\nexport const ZIdInfo = z.object({\n  type: z.object({\n    code: z\n      .union([\n        // If provided and non-empty, must have at least 3 chars\n        z.string().min(3),\n        // or it can be an empty string\n        z.literal(''),\n      ])\n      .optional(), // or undefined\n    description: z\n      .union([\n        // If provided and non-empty, no special min\n        z.string(),\n        // or it can be empty string\n        z.literal(''),\n      ])\n      .optional(),\n  }),\n  number: z\n    .union([\n      // If provided and non-empty, must have at least 2 chars\n      z.string().min(2),\n      // or it can be empty string\n      z.literal(''),\n    ])\n    .optional()\n    .nullable(),\n});\n\n/**\n * ZSharedPerson schema:\n * - `id`: Optional numeric field.\n * - `full_name`: If provided and non-empty, must be at least 2 chars.\n * - `country_id`: If provided, coerced to number, must be >= 0.\n * - `dob`: If provided, coerced to Date and formatted. Otherwise skipped.\n * - `id_info`: The nested object above; can also be omitted entirely.\n */\nexport const ZSharedPerson = z.object({\n  id: z.number().optional(),\n  // full_name: z\n  //   .union([\n  //     z.string().min(2), // if provided and non-empty, must have min length 2\n  //     z.literal(''), // or it can be empty string\n  //   ])\n  //   .optional(),\n  first_name: z\n    .union([\n      z.string().min(2), // if provided and non-empty, must have min length 2\n      z.literal(''), // or it can be empty string\n    ])\n    .optional(),\n  // .nullable(),\n  last_name: z\n    .union([\n      z.string().min(2), // if provided and non-empty, must have min length 2\n      z.literal(''), // or it can be empty string\n    ])\n    .optional(),\n  // .nullable(),\n  country_id: z.coerce\n    .number()\n    .min(0) // if provided, must be >= 0\n    .optional(),\n  dob: z\n    .string()\n    .nullable()\n    .optional()\n    .refine(value => value === undefined || moment(value, 'DD/MM/YYYY', true).isValid() || value === '' || value === null, 'Invalid date format')\n    .transform(value => {\n      if (value === undefined || value === '' || value === null) return null;\n      const isDDMMYYYY = moment(value, 'DD/MM/YYYY', true).isValid();\n      return isDDMMYYYY ? null : moment(value, 'DD/MM/YYYY').format('YYYY-MM-DD');\n    }),\n  id_info: ZIdInfo.optional(),\n  is_main: z.boolean().default(false),\n});\n\n// export const ZSharedPersons = z.array(ZSharedPerson).superRefine((data, ctx) => {\n//   for (const d of data) {\n//     validateSharedPerson(d, ctx);\n//   }\n// });\n\nexport function validateSharedPerson(data: any) {\n  ZSharedPerson.parse(data);\n  const hasValue = (field: string | null | undefined): boolean => {\n    return field !== null && field !== undefined && field.trim() !== '';\n  };\n  const ctx = [];\n  if (data.is_main) {\n    if (!hasValue(data.first_name)) {\n      ctx.push({\n        path: ['first_name'],\n        code: ZodIssueCode.custom,\n        message: 'First name is required for main guest',\n      });\n    }\n\n    if (!hasValue(data.last_name)) {\n      ctx.push({\n        path: ['last_name'],\n        code: ZodIssueCode.custom,\n        message: 'Last name is required for main guest',\n      });\n    }\n  }\n\n  // For non-main guests: check if ANY field has data\n  const hasAnyFieldData =\n    hasValue(data.first_name) ||\n    hasValue(data.last_name) ||\n    hasValue(data.dob) ||\n    (data.country_id !== null && data.country_id !== undefined && data.country_id > 0) ||\n    hasValue(data.id_info?.number);\n\n  // If any field has data, then first_name and last_name become required\n  if (hasAnyFieldData) {\n    if (!hasValue(data.first_name)) {\n      ctx.push({\n        path: ['first_name'],\n        code: ZodIssueCode.custom,\n        message: 'First name is required when other guest information is provided',\n      });\n    }\n\n    if (!hasValue(data.last_name)) {\n      ctx.push({\n        path: ['last_name'],\n        code: ZodIssueCode.custom,\n        message: 'Last name is required when other guest information is provided',\n      });\n    }\n  }\n  if (ctx.length >= 1) {\n    throw new ZodError(ctx);\n  }\n}\nexport interface HandleExposedRoomGuestsRequest {\n  booking_nbr: string;\n  identifier: string;\n  guests: SharedPerson[];\n}\nexport interface OtaGuarantee {\n  card_number: string;\n  card_type: string;\n  cardholder_name: string;\n  cvv: string;\n  expiration_date: string;\n  is_virtual: boolean;\n  meta: Meta;\n  token: string;\n}\n\ninterface Meta {\n  virtual_card_currency_code: string;\n  virtual_card_current_balance: string;\n  virtual_card_decimal_places: string;\n  virtual_card_effective_date: string;\n  virtual_card_expiration_date: string;\n}\nexport interface OtaService {\n  name: string;\n  nights: number;\n  persons: number;\n  price_mode: string;\n  price_per_unit: number;\n  total_price: number;\n}\nexport interface ExposedBookingEvent {\n  date: string;\n  hour: number;\n  id: number;\n  minute: number;\n  second: number;\n  user: string;\n  type: string;\n}\n\nexport type OTAManipulations = {\n  user: string;\n  date: string;\n  hour: string;\n  minute: string;\n};\n\nexport type BypassedOtaRevisions = {\n  revision_nbr: number;\n  date: string;\n  revision_type: string;\n};\nexport interface Booking {\n  agent: {\n    code: string;\n    id: number;\n    name: string;\n    verification_mode: null;\n  } | null;\n  events: ExposedBookingEvent[];\n  ota_manipulations: OTAManipulations[];\n  bypassed_ota_revisions: BypassedOtaRevisions[];\n  ota_services: OtaService[];\n  is_requested_to_cancel: boolean;\n  arrival: Arrival;\n  allowed_actions: IAllowedActions[];\n  system_id: number;\n  booked_on: DateTime;\n  booking_nbr: string;\n  currency: Currency;\n  extra_services: ExtraService[] | null;\n  from_date: string;\n  guest: Guest;\n  extras: Extras[] | null;\n  occupancy: Occupancy;\n  origin: Origin;\n  ota_guarante: OtaGuarantee;\n  property: Property;\n  remark: string;\n  ota_notes: IOtaNotes[];\n  rooms: Room[];\n  source: Source;\n  status: Status;\n  to_date: string;\n  total: number;\n  is_editable: boolean;\n  format: IFormat;\n  channel_booking_nbr: string | null;\n  is_direct: boolean;\n  financial: IFinancials;\n  pickup_info: IBookingPickupInfo | null;\n  cost: number | null;\n  is_pms_enabled: boolean;\n  promo_key: string | null;\n  is_in_loyalty_mode: boolean;\n}\n\nexport const ExtraServiceSchema = z.object({\n  booking_system_id: z.number().optional(),\n  cost: z.coerce.number().nullable(),\n  currency_id: z.number().min(1),\n  description: z.string().min(1),\n  end_date: z.string().nullable(),\n  price: z.coerce.number(),\n  start_date: z.string().nullable(),\n  system_id: z.number().optional(),\n});\n\nexport type ExtraService = z.infer<typeof ExtraServiceSchema>;\nexport interface Extras {\n  key: string;\n  value: any;\n}\nexport interface IOtaNotes {\n  statement: string;\n}\nexport interface IBookingPickupInfo {\n  currency: IPickupCurrency;\n  date: string;\n  details: string;\n  hour: number;\n  minute: number;\n  nbr_of_units: number;\n  selected_option: IAllowedOptions;\n  total: number;\n}\nexport interface IAllowedActions {\n  code: string;\n  description: string;\n}\nexport interface IFinancials {\n  due_amount: number;\n  due_dates: IDueDate[];\n  payments: IPayment[] | null;\n  total_amount: number;\n  gross_total: number;\n  gross_cost: number;\n  invoice_nbr: string;\n}\nexport interface IPayment {\n  id: number | null;\n  date: string;\n  amount: number;\n  currency: ICurrency;\n  designation: string;\n  reference: string;\n}\nexport interface IDueDate {\n  amount: number;\n  currencysymbol: string;\n  date: string;\n  description: string;\n  room: string;\n}\nexport interface IFormat {\n  from_date: string;\n  to_date: string;\n}\nexport interface Arrival {\n  code: string;\n  description: string;\n}\n\nexport interface DateTime {\n  date: string;\n  hour: number;\n  minute: number;\n}\n\nexport interface Currency {\n  code: string;\n  id: number;\n  symbol: string;\n}\n\nexport interface Guest {\n  address: string | null;\n  city: string | null;\n  country_id: number | null;\n  dob: string | null;\n  email: string | null;\n  first_name: string;\n  id: number;\n  last_name: string | null;\n  mobile: string | null;\n  country_phone_prefix: string | null;\n  subscribe_to_news_letter: boolean | null;\n  cci?: ICCI | null;\n  alternative_email?: string;\n  nbr_confirmed_bookings: number;\n  notes: string;\n  mobile_without_prefix: string;\n}\nexport interface ICCI {\n  nbr: string | number;\n  holder_name: string | number;\n  expiry_month: string | number;\n  expiry_year: string | number;\n  cvc?: string | null;\n}\nexport interface Occupancy {\n  adult_nbr: number;\n  children_nbr: number;\n  infant_nbr: number | null;\n}\nexport interface DoReservationProps {\n  assign_units: boolean;\n  check_in: boolean;\n  is_pms: boolean;\n  is_direct: boolean;\n  is_in_loyalty_mode: boolean;\n  promo_key: string | null;\n  extras: any; // Assuming extras can have any structure, replace with a specific type if known\n  booking: {\n    from_date: string; // Format 'YYYY-MM-DD'\n    to_date: string; // Format 'YYYY-MM-DD'\n    remark: string | null;\n    booking_nbr: string;\n    property: {\n      id: string | number;\n    };\n    booked_on: {\n      date: string; // Format 'YYYY-MM-DD'\n      hour: number;\n      minute: number;\n    };\n    source: TSourceOption;\n    rooms: Room[]; // Assuming rooms are defined in the imported `Room` type\n    currency: string;\n    arrival: {\n      code: string;\n    };\n    guest: {\n      email: string | null;\n      first_name: string;\n      last_name: string;\n      country_id: string | number | null;\n      city: string | null;\n      mobile: string;\n      phone_prefix: string | null;\n      address: string;\n      dob: string | null;\n      subscribe_to_news_letter: boolean;\n      cci: {\n        nbr: string;\n        holder_name: string;\n        expiry_month: string;\n        expiry_year: string;\n      } | null;\n    };\n  };\n  pickup_info: any | null; // Assuming it can be any structure, replace if specific type is available\n}\nexport interface Origin {\n  Icon: string;\n  Label: string;\n}\n\nexport interface Property {\n  calendar_legends: null;\n  currency: null;\n  id: number;\n  name: string;\n  roomtypes: null;\n}\nexport type DepartureTime = {\n  code: string;\n  description: string;\n};\nexport type RoomInOut = { code: '001' | '002' | '000'; description: string };\nexport interface Room {\n  days: Day[];\n  from_date: string;\n  guest: Guest;\n  occupancy_default: number;\n  notes: string | null;\n  occupancy: Occupancy;\n  physicalroom: null;\n  in_out: RoomInOut | null;\n  sharing_persons: SharedPerson[] | null;\n  bed_preference: number | null;\n  rateplan: RatePlan;\n  roomtype: RoomType;\n  departure_time: DepartureTime;\n  to_date: string;\n  total: number;\n  smoking_option: string;\n  identifier: string;\n  unit: string | number | IUnit | null;\n  ota_taxes: IOtaTax[];\n  ota_meta: OtaMeta;\n\n  cost: number | null;\n  gross_cost: number;\n  gross_total: number;\n  guarantee: number;\n  gross_guarantee: number;\n}\ninterface OtaMeta {\n  bed_preferences: string | null;\n  meal_plan: string | null;\n  parent_rate_plan_id: string | null;\n  policies: string | null;\n  smoking_preferences: string | null;\n}\nexport interface IOtaTax {\n  amount: number;\n  currency: IOtaTaxCurrency;\n  is_exlusive: boolean;\n  name: string;\n}\nexport interface IOtaTaxCurrency {\n  code: string;\n  id: number;\n  symbol: string;\n}\nexport interface IUnit {\n  calendar_cell: null;\n  id: 2;\n  name: '402';\n}\nexport interface Day {\n  amount: number;\n  date: string;\n  cost: number | null;\n}\n\nexport interface RatePlan {\n  cancelation: string | null;\n  guarantee: null;\n  id: number;\n  name: string;\n  rate_restrictions: null;\n  variations: null;\n  selected_variation: IVariations;\n  is_non_refundable: boolean;\n  custom_text: string | null;\n  is_active: boolean;\n  short_name: string;\n}\nexport interface IVariations {\n  adult_child_offering: string;\n  adult_nbr: number;\n  amount: number | null;\n  child_nbr: number;\n}\nexport interface RoomType {\n  availabilities: null;\n  id: number;\n  inventory: number;\n  name: string;\n  physicalrooms: PhysicalRoom[];\n  rate: number;\n  rateplans: null;\n  is_active: boolean;\n}\nexport type RoomHkStatus = '001' | '002' | '003';\nexport interface PhysicalRoom {\n  calendar_cell: null;\n  housekeeper: IHouseKeepers;\n  id: number;\n  is_active: boolean;\n  name: string;\n  hk_status: RoomHkStatus;\n}\n\nexport interface Source {\n  code: string | null;\n  description: string;\n  tag: string | null;\n}\n\nexport interface Status {\n  code: string;\n  description: string;\n}\n\nexport interface IPmsLog {\n  is_acknowledged: boolean;\n  is_sent: boolean;\n  sent_date: string;\n  sent_hour: number;\n  sent_minute: number;\n}\n",":host {\n  display: block;\n  --ir-input-border-color: #cacfe7;\n}\n\n:host .input-group-text {\n  border-color: var(--ir-input-border-color);\n}\n/* .hidden-date-picker.hidden-dates .date-range-input {\n  opacity: 0;\n} */\n.currency-ph {\n  padding: 0;\n  margin: 0;\n  color: #3b4781;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 0 0 0.25rem;\n  border-top: 1px solid var(--ir-input-border-color);\n  border-bottom: 1px solid var(--ir-input-border-color);\n  border-left: 1px solid transparent;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n\n.service-description-input {\n  height: 70px !important;\n}\n\n.service-description .input-group-prepend {\n  background-color: #f4f5fa;\n  border: 1px solid var(--ir-input-border-color);\n  border-top-left-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem;\n}\n.service-date-container {\n  padding: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  justify-content: center;\n}\n.service-date-container .btn-container {\n  position: absolute;\n  right: 5px;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n.service-description .input-group-text {\n  height: fit-content;\n  border: 0;\n  padding-top: 0.75rem !important;\n}\n\n.price-input-group:focus-within .currency-ph,\n.cost-input-group:focus-within .currency-ph {\n  border-top: 1px solid #1e9ff2;\n  border-bottom: 1px solid #1e9ff2;\n  border-left: 1px solid #1e9ff2;\n}\n.currency-ph[data-state='error'] {\n  border-color: var(--red, #ff4961);\n}\n.price-input:focus {\n  border-right-width: 1px !important;\n}\n\n.is-invalid {\n  background-image: none !important;\n}\n.price-input,\n.cost-input {\n  border-left: 0;\n}\n\n.row-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n@media (min-width: 640px) {\n  .row-group {\n    flex-direction: row;\n    align-items: center;\n    gap: 0;\n  }\n  .cost-label {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    border-left: 0;\n  }\n  .until-prepend,\n  .cost-input-placeholder {\n    border-top-left-radius: 0 !important;\n    border-bottom-left-radius: 0 !important;\n  }\n  .date-from,\n  .price-input {\n    border-right-width: 0 !important;\n    border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 0 !important;\n  }\n}\n\n.date-focused {\n  border-color: #1e9ff2;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Booking, ExtraService, ExtraServiceSchema } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { ZodError } from 'zod';\nimport { _formatDate } from '../../functions';\n\n@Component({\n  tag: 'ir-extra-service-config',\n  styleUrls: ['ir-extra-service-config.css', '../../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrExtraServiceConfig {\n  @Prop() booking: Pick<Booking, 'from_date' | 'to_date' | 'currency' | 'booking_nbr'>;\n  @Prop() service: ExtraService;\n\n  @State() s_service: ExtraService;\n  @State() error: boolean;\n  @State() fromDateClicked: boolean;\n  @State() toDateClicked: boolean;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  // private d1: HTMLDivElement;\n  // private d1_0: HTMLDivElement;\n  // private d2_0: HTMLDivElement;\n  // private d2: HTMLInputElement;\n\n  componentWillLoad() {\n    if (this.service) {\n      this.s_service = { ...this.service };\n    }\n  }\n\n  private async saveAmenity() {\n    try {\n      ExtraServiceSchema.parse(this.s_service);\n      await this.bookingService.doBookingExtraService({\n        service: this.s_service,\n        booking_nbr: this.booking.booking_nbr,\n        is_remove: false,\n      });\n      this.resetBookingEvt.emit(null);\n      this.closeModal.emit(null);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        this.error = true;\n      }\n      console.error(error);\n    }\n  }\n  private updateService(params: Partial<ExtraService>) {\n    let prevService: ExtraService = this.s_service;\n    if (!prevService) {\n      prevService = {\n        cost: null,\n        description: null,\n        end_date: null,\n        start_date: null,\n        price: null,\n        currency_id: this.booking.currency.id,\n      };\n    }\n    this.s_service = { ...prevService, ...params };\n  }\n  private validatePrice(): boolean {\n    if (this.s_service?.price === undefined || this.s_service?.price?.toString() === '') {\n      return false;\n    }\n    const priceSchema = ExtraServiceSchema.pick({ price: true });\n    const result = priceSchema.safeParse({ price: this.s_service?.price });\n    return result.success;\n  }\n  render() {\n    return (\n      <form\n        class={'sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.saveAmenity();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_ExtraServices} displayContext=\"sidebar\"></ir-title>\n        <section class={'px-1 sheet-body'}>\n          {/* Description */}\n          <fieldset class=\"input-group mb-1 service-description\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">{locales.entries.Lcz_Description}</span>\n            </div>\n            <textarea\n              value={this.s_service?.description}\n              class={`form-control service-description-input ${this.error && !this.s_service?.description ? 'is-invalid' : ''}`}\n              style={{ height: '7rem' }}\n              maxLength={250}\n              onChange={e => this.updateService({ description: (e.target as HTMLTextAreaElement).value })}\n              aria-label=\"Amenity description\"\n            ></textarea>\n          </fieldset>\n          {/* Dates */}\n          <div class={'row-group mb-1'}>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">\n                  {locales.entries.Lcz_DatesOn}\n                </span>\n              </div>\n              <div\n                // ref={el => (this.d1_0 = el)}\n                class=\"form-control p-0 m-0 d-flex align-items-center justify-content-center date-from\"\n              >\n                <div class=\"service-date-container\">\n                  <ir-date-picker\n                    // onDatePickerFocus={() => {\n                    //   this.d1?.classList.add('date-focused');\n                    //   this.d1_0?.classList.add('date-focused');\n                    // }}\n                    // onDatePickerBlur={() => {\n                    //   this.d1?.classList.remove('date-focused');\n                    //   this.d1_0?.classList.remove('date-focused');\n                    // }}\n                    // customPicker\n                    emitEmptyDate\n                    date={this.s_service?.start_date}\n                    minDate={this.booking.from_date}\n                    maxDate={this.booking.to_date}\n                    onDateChanged={e => this.updateService({ start_date: e.detail.start?.format('YYYY-MM-DD') })}\n                  >\n                    <input\n                      // ref={el => (this.d1 = el)}\n                      type=\"text\"\n                      slot=\"trigger\"\n                      value={this.s_service?.start_date ? _formatDate(this.s_service.start_date) : null}\n                      style={{ borderLeftWidth: '0', borderRightWidth: '0', width: '100%', borderRadius: '0' }}\n                      class=\"text-center w-100 form-control input-sm\"\n                    ></input>\n                  </ir-date-picker>\n                  {this.s_service?.start_date && (\n                    <div class=\"btn-container\">\n                      <ir-button\n                        title=\"clear\"\n                        id=\"close\"\n                        variant=\"icon\"\n                        style={{ '--icon-size': '0.875rem' }}\n                        icon_name=\"xmark-fill\"\n                        class=\"ml-2\"\n                        onClickHandler={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          this.updateService({ start_date: null });\n                        }}\n                      ></ir-button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend \">\n                <span class=\"input-group-text until-prepend\" id=\"basic-addon1\">\n                  {locales.entries.Lcz_TillAndIncluding}\n                </span>\n              </div>\n              <div\n                // ref={el => (this.d2_0 = el)}\n                class=\"form-control p-0 m-0 d-flex align-items-center justify-content-center\"\n              >\n                <div class=\"service-date-container\">\n                  <ir-date-picker\n                    // onDatePickerFocus={() => {\n                    //   this.d2?.classList.add('date-focused');\n                    //   this.d2_0?.classList.add('date-focused');\n                    // }}\n                    // onDatePickerBlur={() => {\n                    //   this.d2?.classList.remove('date-focused');\n                    //   this.d2_0?.classList.remove('date-focused');\n                    // }}\n                    emitEmptyDate\n                    date={this.s_service?.end_date}\n                    minDate={this.s_service?.start_date ?? this.booking.from_date}\n                    maxDate={this.booking.to_date}\n                    onDateChanged={e => {\n                      e.stopImmediatePropagation();\n                      e.stopPropagation();\n                      this.updateService({ end_date: e.detail.start?.format('YYYY-MM-DD') });\n                    }}\n                  >\n                    <input\n                      // ref={el => (this.d2 = el)}\n                      slot=\"trigger\"\n                      value={this.s_service?.end_date ? _formatDate(this.s_service.end_date) : null}\n                      style={{ borderLeftWidth: '0', borderRightWidth: '0', width: '100%' }}\n                      class=\"text-center form-control input-sm\"\n                    ></input>\n                  </ir-date-picker>\n\n                  {this.s_service?.end_date && (\n                    <div class=\"btn-container\">\n                      <ir-button\n                        title=\"clear\"\n                        id=\"close\"\n                        variant=\"icon\"\n                        style={{ '--icon-size': '0.875rem' }}\n                        icon_name=\"xmark-fill\"\n                        class=\"ml-2\"\n                        onClickHandler={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          this.updateService({ end_date: null });\n                        }}\n                      ></ir-button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Prices and cost */}\n          <div class={'row-group'}>\n            <ir-price-input\n              label=\"Price\"\n              currency={this.booking.currency.symbol}\n              class=\"ir-br-input-none\"\n              value={this.s_service?.price?.toString()}\n              zod={ExtraServiceSchema.pick({ price: true })}\n              aria-label={locales.entries.Lcz_Price}\n              wrapKey=\"price\"\n              aria-describedby=\"service price\"\n              autoValidate={false}\n              data-state={this.error && !this.validatePrice() ? 'error' : ''}\n              onTextChange={e => this.updateService({ price: parseFloat(e.detail) })}\n            ></ir-price-input>\n            <ir-price-input\n              autoValidate={false}\n              label={locales.entries.Lcz_Cost}\n              labelStyle=\"rounded-0 border-left-0\"\n              currency={this.booking.currency.symbol}\n              // class=\"ir-bl-lbl-none ir-bl-none\"\n              value={this.s_service?.cost?.toString()}\n              zod={ExtraServiceSchema.pick({ cost: true })}\n              onTextChange={e => this.updateService({ cost: parseFloat(e.detail) })}\n              wrapKey=\"cost\"\n              aria-label=\"Cost\"\n              aria-describedby=\"service cost\"\n            ></ir-price-input>\n          </div>\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button\n            onClick={() => this.closeModal.emit(null)}\n            btn_styles=\"justify-content-center\"\n            class={`flex-fill`}\n            text={locales.entries.Lcz_Cancel}\n            btn_color=\"secondary\"\n          ></ir-button>\n\n          <ir-button\n            btn_styles=\"justify-content-center align-items-center\"\n            class={'flex-fill'}\n            btn_type=\"submit\"\n            isLoading={isRequestPending('/Do_Booking_Extra_Service')}\n            text={locales.entries.Lcz_Save}\n            btn_color=\"primary\"\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, Fragment, Host, Prop, h } from '@stencil/core';\nimport { Booking } from '@/models/booking.dto';\n@Component({\n  tag: 'ir-extra-services',\n  styleUrl: 'ir-extra-services.css',\n  scoped: true,\n})\nexport class IrExtraServices {\n  @Prop() booking: Pick<Booking, 'currency' | 'extra_services' | 'booking_nbr'>;\n\n  render() {\n    return (\n      <Host class={'card p-0 '}>\n        {this.booking.extra_services?.map((service, index) => (\n          <Fragment>\n            <ir-extra-service\n              bookingNumber={this.booking.booking_nbr}\n              currencySymbol={this.booking.currency.symbol}\n              key={service.booking_system_id}\n              service={service}\n            ></ir-extra-service>\n            {index !== this.booking.extra_services.length - 1 && <hr class=\"mr-2 ml-2 my-0 p-0\" />}\n          </Fragment>\n        ))}\n      </Host>\n    );\n  }\n}\n",".input-group-text {\n  min-width: 10rem;\n  text-align: left;\n}\n.mobilePrefixSelect {\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.mobilePrefixInput {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n/* custome checkbox */\n.check-container {\n  position: relative;\n  /* padding-left: 30px; */\n  cursor: pointer;\n  font-size: 14px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  display: flex;\n  align-items: center;\n}\n.check-container input {\n  position: relative;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n.check-container .checkmark {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  border: 1px solid #cacfe7;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n.check-container input:checked ~ .checkmark {\n  background-color: #1e9ff2;\n  border-color: #1e9ff2;\n}\n.checkmark:after {\n  content: '';\n  position: absolute;\n  display: none;\n}\n.check-container input:checked ~ .checkmark:after {\n  display: block;\n}\n.check-label {\n  margin-left: 10px !important;\n}\n.check-container .checkmark:after {\n  left: 6px;\n  top: 3px;\n  width: 6px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n.ir-card-header {\n  width: 100%;\n  border-bottom: 1px solid #e4e5ec;\n}\n.close-icon {\n  margin: 0;\n}\n.border-theme {\n  border: 1px solid #cacfe7;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Component, State, h, Prop, EventEmitter, Event, Watch, Fragment } from '@stencil/core';\nimport { Guest } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/components';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport Token from '@/models/Token';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n\n@Component({\n  tag: 'ir-guest-info',\n  styleUrls: ['ir-guest-info.css', '../../common/sheet.css'],\n  scoped: true,\n})\nexport class GuestInfo {\n  @Prop() language: string;\n  @Prop() headerShown: boolean;\n  @Prop() email: string;\n  @Prop() booking_nbr: string;\n  @Prop() ticket: string;\n  @Prop() isInSideBar: boolean;\n\n  @State() countries: ICountry[];\n  // @State() submit: boolean = false;\n  @State() guest: Guest | null = null;\n  @State() isLoading: boolean = true;\n  @State() autoValidate = false;\n\n  @Event() closeSideBar: EventEmitter<null>;\n  @Event({ bubbles: true }) resetBookingEvt: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token: Token = new Token();\n\n  async componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n    if (!!this.token.getToken()) this.init();\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  async init() {\n    try {\n      console.log('first');\n      this.isLoading = true;\n      const [guest, countries, fetchedLocales] = await Promise.all([\n        this.bookingService.fetchGuest(this.email),\n        this.bookingService.getCountries(this.language),\n        !locales || !locales.entries || Object.keys(locales.entries).length === 0 ? this.roomService.fetchLanguage(this.language) : Promise.resolve(null), // Skip fetching if locales are already set\n      ]);\n\n      // Set the fetched locales if they were fetched\n      if (fetchedLocales) {\n        locales.entries = fetchedLocales.entries;\n        locales.direction = fetchedLocales.direction;\n      }\n\n      // Assign the fetched guest and countries\n      this.countries = countries;\n      this.guest = { ...guest, mobile: guest.mobile_without_prefix };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private handleInputChange(params: Partial<Guest>) {\n    this.guest = { ...this.guest, ...params };\n  }\n\n  private async editGuest() {\n    try {\n      this.autoValidate = true;\n\n      await this.bookingService.editExposedGuest(this.guest, this.booking_nbr ?? null);\n      this.closeSideBar.emit(null);\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading && this.isInSideBar) {\n      <div class={'loading-container'}>\n        <ir-spinner></ir-spinner>\n      </div>;\n    }\n    if (this.isLoading) {\n      return null;\n    }\n    return (\n      <form\n        class={'p-0 sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.editGuest();\n        }}\n      >\n        {this.headerShown && <ir-title class=\"px-1 sheet-header\" displayContext=\"sidebar\" label={locales.entries.Lcz_GuestDetails}></ir-title>}\n        <div class={this.isInSideBar ? 'sheet-body' : 'card-content collapse show '}>\n          <div class={this.headerShown ? 'card-body px-1 pt-0' : 'pt-0'}>\n            <ir-input-text\n              autoValidate={this.autoValidate}\n              label={locales.entries?.Lcz_FirstName}\n              name=\"firstName\"\n              // submitted={this.submit}\n              value={this.guest?.first_name}\n              required\n              onTextChange={e => this.handleInputChange({ first_name: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              autoValidate={this.autoValidate}\n              label={locales.entries?.Lcz_LastName}\n              name=\"lastName\"\n              // submitted={this.submit}\n              value={this.guest?.last_name}\n              required\n              onTextChange={e => this.handleInputChange({ last_name: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              label={locales.entries?.Lcz_Email}\n              name=\"email\"\n              // submitted={this.submit}\n              value={this.guest?.email}\n              required\n              onTextChange={e => this.handleInputChange({ email: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              label={locales.entries?.Lcz_AlternativeEmail}\n              name=\"altEmail\"\n              value={this.guest?.alternative_email}\n              onTextChange={e => this.handleInputChange({ alternative_email: e.detail })}\n            ></ir-input-text>\n            {/* <ir-input-text label=\"Password\" placeholder=\"\" name=\"password\" submited={this.submit} type=\"password\" value={this.Model.password} required></ir-input-text> */}\n            {/* <ir-select\n              selectContainerStyle=\"mb-1\"\n              required\n              name=\"country\"\n              submited={this.submit}\n              label={locales.entries.Lcz_Country}\n              selectedValue={this.guest?.country_id?.toString() ?? ''}\n              data={this.countries?.map(item => {\n                return {\n                  value: item.id.toString(),\n                  text: item.name,\n                };\n              })}\n              firstOption={'...'}\n              onSelectChange={e => this.handleInputChange({ country_id: e.detail })}\n            ></ir-select> */}\n            <ir-country-picker\n              // error={this.submit && !this.guest.country_id}\n              country={this.countries.find(c => c.id === this.guest.country_id)}\n              label={locales.entries?.Lcz_Country}\n              onCountryChange={e => this.handleInputChange({ country_id: e.detail.id })}\n              countries={this.countries}\n            ></ir-country-picker>\n            <ir-phone-input\n              onTextChange={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                const { mobile, phone_prefix } = e.detail;\n                if (mobile !== this.guest.mobile) {\n                  this.handleInputChange({ mobile });\n                }\n                if (phone_prefix !== this.guest.country_phone_prefix) this.handleInputChange({ country_phone_prefix: phone_prefix });\n              }}\n              phone_prefix={this.guest.country_phone_prefix}\n              value={this.guest.mobile}\n              language={this.language}\n              label={locales.entries?.Lcz_MobilePhone}\n              countries={this.countries}\n            />\n            <div class=\"mb-2\">\n              <ir-textarea\n                variant=\"prepend\"\n                onTextChange={e => this.handleInputChange({ notes: e.detail })}\n                value={this.guest?.notes}\n                label={locales.entries?.Lcz_PrivateNote}\n              ></ir-textarea>\n            </div>\n            <div class={'p-0 m-0'}>\n              <label class={`check-container m-0 p-0`}>\n                <input\n                  class={'m-0 p-0'}\n                  type=\"checkbox\"\n                  name=\"newsletter\"\n                  checked={this.guest.subscribe_to_news_letter}\n                  onInput={e => this.handleInputChange({ subscribe_to_news_letter: (e.target as HTMLInputElement).checked })}\n                />\n                <span class=\"checkmark m-0 p-0\"></span>\n                <span class={'m-0 p-0  check-label'}>{locales.entries.Lcz_Newsletter}</span>\n              </label>\n              {!this.isInSideBar && (\n                <Fragment>\n                  <hr />\n                  <ir-button\n                    isLoading={this.isLoading}\n                    btn_disabled={this.isLoading}\n                    btn_styles=\"d-flex align-items-center justify-content-center\"\n                    text={locales.entries.Lcz_Save}\n                    onClickHandler={this.editGuest.bind(this)}\n                    color=\"btn-primary\"\n                  ></ir-button>\n                </Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n        {this.isInSideBar && (\n          <div class={'sheet-footer'}>\n            <ir-button\n              data-testid=\"cancel\"\n              onClickHandler={() => this.closeSideBar.emit(null)}\n              class=\"flex-fill m-0 p-0\"\n              btn_styles=\"w-100 m-0  justify-content-center align-items-center\"\n              btn_color=\"secondary\"\n              text={locales.entries.Lcz_Cancel}\n            ></ir-button>\n            <ir-button\n              data-testid=\"save\"\n              isLoading={isRequestPending('/Edit_Exposed_Guest')}\n              btn_disabled={this.isLoading}\n              class=\"flex-fill m-0\"\n              btn_type=\"submit\"\n              btn_styles=\"w-100 m-0  justify-content-center align-items-center\"\n              text={locales.entries.Lcz_Save}\n            ></ir-button>\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n:host p,\n:host div,\n:host span,\n:host ir-icons {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n.action-container td {\n  padding: 0px 0.5rem;\n  padding-bottom: 0.5rem;\n}\n.action-container .amount_action {\n  padding-inline-start: 0;\n}\n.overdue_action {\n  color: #ff4961;\n  border-radius: 0.25rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n.future_action {\n  border-radius: 0.25rem;\n  color: #1e9ff2;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 0.5rem;\n}\n.date_action {\n  font-weight: 500;\n}\n.amount_action {\n  /* color: green; */\n  font-weight: 600;\n}\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\nimport { IPaymentAction } from '@/services/payment.service';\nimport { Booking } from '@/models/booking.dto';\nimport { formatAmount } from '@/utils/utils';\nimport moment from 'moment';\n@Component({\n  tag: 'ir-payment-actions',\n  styleUrl: 'ir-payment-actions.css',\n  scoped: true,\n})\nexport class IrPaymentActions {\n  @Prop() booking: Booking;\n  @Prop() paymentAction: IPaymentAction[];\n\n  @Event() generatePayment: EventEmitter<IPaymentAction>;\n\n  render() {\n    if (this.paymentAction?.filter(pa => pa.amount !== 0).length == 0) {\n      return null;\n    }\n    return (\n      <Host>\n        <div class={'my-1'}>\n          <span class={'font-medium'}>Payment actions</span>\n        </div>\n        <table>\n          <thead>\n            <th>\n              <p class=\"sr-only\">Amount</p>\n            </th>\n            <th>\n              <p class={'sr-only'}>Due date</p>\n            </th>\n            <th>\n              <p class={'sr-only'}>Pay</p>\n            </th>\n            <th>\n              <p class={'sr-only'}>Status</p>\n            </th>\n          </thead>\n          <tbody>\n            {this.paymentAction?.map(pa => {\n              if (!pa.due_on) {\n                return null;\n              }\n              return (\n                <tr class={'action-container'}>\n                  <td class={'amount_action'}>{formatAmount(pa.currency.symbol, pa.amount)}</td>\n                  <td class={'date_action'}>{moment(new Date(pa.due_on)).format('ddd, DD MMM YYYY')}</td>\n                  {pa.amount > 0 && (\n                    <td>\n                      <ir-button btn_color=\"outline\" text={'Pay'} size=\"sm\" onClickHandler={() => this.generatePayment.emit(pa)}></ir-button>\n                    </td>\n                  )}\n                  {pa.type === 'overdue' && pa.amount > 0 && (\n                    <td>\n                      <div class={'overdue_action'}>\n                        <svg height={16} width={16} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                          <path\n                            fill=\"currentColor\"\n                            d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"\n                          />\n                        </svg>\n                        <span>Overdue</span>\n                      </div>\n                    </td>\n                  )}\n                  {pa.type === 'future' && pa.amount > 0 && (\n                    <td>\n                      <div class={'future_action '}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height={16} width={16} viewBox=\"0 0 512 512\">\n                          <path\n                            fill=\"currentColor\"\n                            d=\"M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"\n                          />\n                        </svg>\n                        <span>{moment(new Date(pa.due_on)).isSame(new Date()) ? 'Today' : 'Future'}</span>\n                      </div>\n                    </td>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Host>\n    );\n  }\n}\n",":host {\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n:host * {\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n\n.sm-margin-right {\n  margin-right: 5px !important;\n  background: #000;\n}\n.action_icons {\n  width: 60px;\n}\n.w-60 {\n  width: 100px;\n  padding: 0 5px;\n}\n.payments-height {\n  height: 30px;\n}\n.payment_date {\n  width: 100px;\n}\n.iframeHeight {\n  height: max-content;\n  height: 22.5rem;\n}\n.designation {\n  width: 120px;\n}\n.total-cost-container {\n  background: #7cbebe;\n  color: white;\n  padding: 0.5rem;\n  border-radius: 5px;\n}\n.payment-actions {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  gap: 0.5rem;\n}\n.payment_action_beta_container {\n  border: 1px solid var(--red);\n  position: relative;\n  padding: 4px;\n  box-sizing: border-box;\n  border-radius: 4px;\n}\n.beta {\n  position: absolute;\n  top: 4px;\n  background: var(--red);\n  color: white;\n  padding: 0.2rem 0.3rem;\n  font-size: 12px;\n  border-radius: 4px;\n  right: 4px;\n  margin: 0;\n}\n","import { Component, h, Prop, State, Event, EventEmitter, Fragment, Watch, Listen } from '@stencil/core';\nimport { _formatDate } from '../functions';\nimport { Booking, IDueDate, IPayment } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport moment from 'moment';\nimport { PaymentService, IPaymentAction } from '@/services/payment.service';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { formatAmount, toFloat } from '@/utils/utils';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  styleUrl: 'ir-payment-details.css',\n  tag: 'ir-payment-details',\n  scoped: true,\n})\nexport class IrPaymentDetails {\n  @Prop({ mutable: true }) bookingDetails: Booking;\n  @Prop() paymentActions: IPaymentAction[];\n\n  @State() newTableRow: boolean = false;\n\n  @State() collapsedPayment: boolean = false;\n  @State() collapsedGuarantee: boolean = false;\n\n  @State() flag: boolean = false;\n\n  @State() confirmModal: boolean = false;\n  @State() toBeDeletedItem: IPayment;\n\n  @State() paymentDetailsUrl: string = '';\n  @State() paymentExceptionMessage: string = '';\n  @State() modal_mode: 'delete' | 'save' | null = null;\n  @State() itemToBeAdded: IPayment;\n\n  @Event({ bubbles: true }) resetBookingEvt: EventEmitter<null>;\n  @Event({ bubbles: true }) resetExposedCancelationDueAmount: EventEmitter<null>;\n  @Event({ bubbles: true }) toast: EventEmitter<IToast>;\n\n  private paymentService = new PaymentService();\n  private bookingService = new BookingService();\n  private paymentBackground = 'white';\n\n  @Listen('generatePayment')\n  handlePaymentGeneration(e: CustomEvent) {\n    const value = e.detail;\n    this.newTableRow = true;\n    this.itemToBeAdded = { ...this.itemToBeAdded, amount: value.amount, date: value.due_on };\n    this.paymentBackground = 'rgba(250, 253, 174)';\n  }\n  async componentWillLoad() {\n    try {\n      this.initializeItemToBeAdded();\n    } catch (error) {\n      if (this.bookingDetails.guest.cci) {\n        return;\n      }\n      if (!this.bookingDetails.is_direct && this.bookingDetails.channel_booking_nbr) {\n        this.paymentExceptionMessage = error;\n      }\n    }\n  }\n  initializeItemToBeAdded() {\n    this.itemToBeAdded = {\n      id: -1,\n      date: moment().format('YYYY-MM-DD'),\n      amount: null,\n      currency: this.bookingDetails.currency,\n      designation: '',\n      reference: '',\n    };\n    this.paymentBackground = 'white';\n  }\n\n  async _processPaymentSave() {\n    if (this.itemToBeAdded.amount === null) {\n      this.toast.emit({\n        type: 'error',\n        title: locales.entries.Lcz_EnterAmount,\n        description: '',\n        position: 'top-right',\n      });\n      return;\n    }\n    if (Number(this.itemToBeAdded.amount) > Number(this.bookingDetails.financial.due_amount)) {\n      this.modal_mode = 'save';\n      this.openModal();\n      return;\n    }\n    this._handleSave();\n  }\n\n  async _handleSave() {\n    this.paymentBackground = 'white';\n    try {\n      await this.paymentService.AddPayment(this.itemToBeAdded, this.bookingDetails.booking_nbr);\n      this.initializeItemToBeAdded();\n      this.resetBookingEvt.emit(null);\n      this.resetExposedCancelationDueAmount.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  handlePaymentInputChange(key: keyof IPayment, value: any, event?: CustomEvent) {\n    this.paymentBackground = 'white';\n    if (key === 'amount') {\n      if (!isNaN(value) || value === '') {\n        if (value === '') {\n          this.itemToBeAdded = { ...this.itemToBeAdded, [key]: null };\n        } else {\n          this.itemToBeAdded = { ...this.itemToBeAdded, [key]: parseFloat(value) };\n        }\n      } else if (event && event.target) {\n        let inputElement = event.target as HTMLInputElement;\n        let inputValue = inputElement.value;\n        inputValue = inputValue.replace(/[^\\d-]|(?<!^)-/g, '');\n        inputElement.value = inputValue;\n      }\n    } else {\n      this.itemToBeAdded = { ...this.itemToBeAdded, [key]: value };\n    }\n  }\n  async cancelPayment() {\n    try {\n      await this.paymentService.CancelPayment(this.toBeDeletedItem.id);\n      const newPaymentArray = this.bookingDetails.financial.payments.filter((item: IPayment) => item.id !== this.toBeDeletedItem.id);\n      this.bookingDetails = { ...this.bookingDetails, financial: { ...this.bookingDetails.financial, payments: newPaymentArray } };\n      this.confirmModal = !this.confirmModal;\n      this.resetBookingEvt.emit(null);\n      this.resetExposedCancelationDueAmount.emit(null);\n      this.toBeDeletedItem = null;\n      this.modal_mode = null;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async handleConfirmModal(e: CustomEvent) {\n    this.paymentBackground = 'white';\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    if (this.modal_mode === 'delete') {\n      await this.cancelPayment();\n    } else {\n      await this._handleSave();\n    }\n  }\n  openModal() {\n    const modal: any = document.querySelector('.delete-record-modal');\n    modal.openModal();\n  }\n  async handleCancelModal(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      this.paymentBackground = 'white';\n      if (this.modal_mode === 'save') {\n        this.initializeItemToBeAdded();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @Watch('bookingDetails')\n  handleBookingDetails() {\n    if (this.newTableRow) {\n      this.newTableRow = false;\n    }\n  }\n  handleDateChange(\n    e: CustomEvent<{\n      start: moment.Moment;\n      end: moment.Moment;\n    }>,\n  ) {\n    this.handlePaymentInputChange('date', e.detail.end.format('YYYY-MM-DD'));\n  }\n  _renderTableRow(item: IPayment, rowMode: 'add' | 'normal' = 'normal') {\n    return (\n      <Fragment>\n        <tr>\n          <td class={'border payments-height border-light border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left\">{_formatDate(item.date)}</span>\n            ) : (\n              <ir-date-picker\n                date={this.itemToBeAdded?.date ? new Date(this.itemToBeAdded.date) : new Date()}\n                minDate={moment().add(-2, 'months').startOf('month').format('YYYY-MM-DD')}\n                // singleDatePicker\n                // autoApply\n                class=\"d-flex justify-content-center\"\n                onDateChanged={this.handleDateChange.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  slot=\"trigger\"\n                  value={_formatDate(this.itemToBeAdded?.date)}\n                  class=\"text-center  form-control flex-grow-1 w-100\"\n                  style={{ border: '0', marginLeft: 'auto', marginRight: 'auto', width: '100%' }}\n                ></input>\n              </ir-date-picker>\n            )}\n          </td>\n          <td class={'border payments-height border-light border-bottom-0 text-center '}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-right\">{formatAmount(this.bookingDetails.currency.symbol, item.amount)}</span>\n            ) : (\n              // <input\n              //   type=\"text\"\n              //   class=\"border-0 text-center form-control py-0 m-0 w-100\"\n              //   value={this.itemToBeAdded.amount}\n              //   onBlur={e => {\n              //     (e.target as HTMLInputElement).value = Number(this.itemToBeAdded.amount).toFixed(2);\n              //   }}\n              //   onInput={event => this.handlePaymentInputChange('amount', +(event.target as HTMLInputElement).value, event)}\n              // ></input>\n              <ir-price-input\n                value={this.itemToBeAdded.amount?.toString()}\n                onTextChange={e => this.handlePaymentInputChange('amount', Number(e.detail), e)}\n                inputStyle=\"border-0 rounded-0 text-center py-0 m-0 w-100\"\n              ></ir-price-input>\n            )}\n          </td>\n          <td class={'border payments-height border-light border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left\">{item.designation}</span>\n            ) : (\n              <input\n                class=\"border-0 w-100 form-control py-0 m-0\"\n                onInput={event => this.handlePaymentInputChange('designation', (event.target as HTMLInputElement).value)}\n                type=\"text\"\n              ></input>\n            )}\n          </td>\n          <td rowSpan={2} class={'border payments-height border-light border-bottom-0 text-center'}>\n            <div class={'payment-actions'}>\n              {rowMode === 'add' && (\n                <ir-button\n                  variant=\"icon\"\n                  icon_name=\"save\"\n                  style={colorVariants.secondary}\n                  isLoading={rowMode === 'add' && isRequestPending('/Do_Payment')}\n                  class={'m-0'}\n                  onClickHandler={() => {\n                    this._processPaymentSave();\n                  }}\n                ></ir-button>\n              )}\n              <ir-button\n                variant=\"icon\"\n                icon_name=\"trash\"\n                style={colorVariants.danger}\n                isLoading={this.toBeDeletedItem?.id === item?.id && isRequestPending('/Cancel_Payment')}\n                onClickHandler={\n                  rowMode === 'add'\n                    ? () => {\n                        this.newTableRow = false;\n                        this.initializeItemToBeAdded();\n                      }\n                    : () => {\n                        this.modal_mode = 'delete';\n                        this.toBeDeletedItem = item;\n                        this.openModal();\n                      }\n                }\n              ></ir-button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan={3} class={'border border-light payments-height border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left \">{item.reference}</span>\n            ) : (\n              <input\n                class=\"border-0 w-100  form-control py-0 m-0\"\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    this.newTableRow = false;\n                    this._handleSave();\n                  }\n                }}\n                onInput={event => this.handlePaymentInputChange('reference', (event.target as HTMLInputElement).value)}\n                type=\"text\"\n              ></input>\n            )}\n          </td>\n        </tr>\n      </Fragment>\n    );\n  }\n  private formatCurrency(amount: number, currency: string, locale: string = 'en-US'): string {\n    if (!currency) {\n      return;\n    }\n    if (amount >= 0) {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }).format(amount);\n    }\n    return;\n  }\n  private bookingGuarantee() {\n    const paymentMethod = this.bookingDetails.is_direct ? this.getPaymentMethod() : null;\n    if (this.bookingDetails.is_direct && !paymentMethod && !this.bookingDetails.guest.cci) {\n      return null;\n    }\n    return (\n      <div class=\"mb-1\">\n        <div class=\"d-flex align-items-center\">\n          <span class=\"mr-1 font-medium\">\n            {locales.entries.Lcz_BookingGuarantee}\n            {!!paymentMethod && <span>: {paymentMethod}</span>}\n          </span>\n          {(!this.bookingDetails.is_direct || (this.bookingDetails.is_direct && this.bookingDetails.guest.cci)) && (\n            <ir-button\n              id=\"drawer-icon\"\n              data-toggle=\"collapse\"\n              data-target={`.guarrantee`}\n              aria-expanded={this.collapsedGuarantee ? 'true' : 'false'}\n              aria-controls=\"myCollapse\"\n              class=\"sm-padding-right pointer\"\n              variant=\"icon\"\n              icon_name=\"credit_card\"\n              onClickHandler={async () => {\n                if (!this.bookingDetails.is_direct && this.bookingDetails.channel_booking_nbr && !this.bookingDetails.guest.cci && !this.collapsedGuarantee) {\n                  this.paymentDetailsUrl = await this.bookingService.getPCICardInfoURL(this.bookingDetails.booking_nbr);\n                }\n                this.collapsedGuarantee = !this.collapsedGuarantee;\n              }}\n            ></ir-button>\n          )}\n        </div>\n        <div class=\"collapse guarrantee \">\n          {this.bookingDetails.guest.cci ? (\n            [\n              <div>\n                {this.bookingDetails?.guest?.cci && 'Card:'} <span>{this.bookingDetails?.guest?.cci?.nbr || ''}</span> {this.bookingDetails?.guest?.cci?.expiry_month && 'Expiry: '}\n                <span>\n                  {' '}\n                  {this.bookingDetails?.guest?.cci?.expiry_month || ''} {this.bookingDetails?.guest?.cci?.expiry_year && '/' + this.bookingDetails?.guest?.cci?.expiry_year}\n                </span>\n              </div>,\n              <div>\n                {this.bookingDetails?.guest?.cci.holder_name && 'Name:'} <span>{this.bookingDetails?.guest?.cci?.holder_name || ''}</span>{' '}\n                {this.bookingDetails?.guest?.cci?.cvc && '- CVC:'} <span> {this.bookingDetails?.guest?.cci?.cvc || ''}</span>\n              </div>,\n            ]\n          ) : this.paymentDetailsUrl ? (\n            <iframe src={this.paymentDetailsUrl} width=\"100%\" class=\"iframeHeight\" frameborder=\"0\" name=\"payment\"></iframe>\n          ) : (\n            <div class=\"text-center\">{this.paymentExceptionMessage}</div>\n          )}\n        </div>\n        {!this.bookingDetails.is_direct && this.bookingDetails.ota_guarante && (\n          <div>\n            <ir-label\n              content={this.bookingDetails.ota_guarante?.card_type + `${this.bookingDetails.ota_guarante?.is_virtual ? ' (virtual)' : ''}`}\n              labelText={`${locales.entries.Lcz_CardType}:`}\n            ></ir-label>\n            <ir-label content={this.bookingDetails.ota_guarante?.cardholder_name} labelText={`${locales.entries.Lcz_CardHolderName}:`}></ir-label>\n            <ir-label content={this.bookingDetails.ota_guarante?.card_number} labelText={`${locales.entries.Lcz_CardNumber}:`}></ir-label>\n            {/* <ir-label content={this.bookingDetails.ota_guarante?.cvv} labelText=\"Cvv:\"></ir-label> */}\n            {/* <ir-label content={JSON.stringify(this.bookingDetails?.ota_guarante.is_virtual)} labelText=\"Is card virtual:\"></ir-label> */}\n            {/* <ir-label content={this.bookingDetails.ota_guarante?.expiration_date} labelText=\"Expiration date:\"></ir-label> */}\n            <ir-label\n              content={this.formatCurrency(\n                toFloat(Number(this.bookingDetails.ota_guarante?.meta?.virtual_card_current_balance), Number(this.bookingDetails.ota_guarante?.meta?.virtual_card_decimal_places)),\n                this.bookingDetails.ota_guarante?.meta?.virtual_card_currency_code,\n              )}\n              labelText={`${locales.entries.Lcz_CardBalance}:`}\n            ></ir-label>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private checkPaymentCode(value: string) {\n    console.log(calendar_data.allowed_payment_methods);\n    return calendar_data.allowed_payment_methods?.find(pm => pm.code === value)?.description ?? null;\n  }\n\n  private getPaymentMethod() {\n    let paymentMethod = null;\n    const payment_code = this.bookingDetails?.extras?.find(e => e.key === 'payment_code');\n    if (this.bookingDetails.agent) {\n      const code = this.bookingDetails?.extras?.find(e => e.key === 'agent_payment_mode');\n      if (code) {\n        paymentMethod = code.value === '001' ? locales.entries.Lcz_OnCredit : payment_code ? this.checkPaymentCode(payment_code.value) : null;\n      }\n    } else {\n      if (payment_code) {\n        paymentMethod = this.checkPaymentCode(payment_code.value);\n      }\n    }\n    return paymentMethod;\n  }\n\n  _renderDueDate(item: IDueDate) {\n    return (\n      <tr>\n        <td class={'pr-1'}>{_formatDate(item.date)}</td>\n        <td class={'pr-1'}>{formatAmount(this.bookingDetails.currency.symbol, item.amount)}</td>\n        <td class={'pr-1'}>{item.description}</td>\n        <td class=\"collapse font-size-small roomName\">{item.room}</td>\n      </tr>\n    );\n  }\n\n  render() {\n    if (!this.bookingDetails.financial) {\n      return null;\n    }\n    return [\n      <div class=\"card m-0\">\n        <div class=\"p-1\">\n          {this.bookingDetails.financial.gross_cost > 0 && this.bookingDetails.financial.gross_cost !== null && (\n            <div class=\"mb-2 h4 total-cost-container\">\n              {locales.entries.Lcz_TotalCost}: <span>{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.gross_cost)}</span>\n            </div>\n          )}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          <div class=\" h4\">\n            {locales.entries.Lcz_Balance}:{' '}\n            <span class=\"danger font-weight-bold\">{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.due_amount)}</span>\n          </div>\n          {/* <div class=\" h4\">\n            {locales.entries.Lcz_DueBalance}:{' '}\n            <span class=\"danger font-weight-bold\">{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.due_amount)}</span>\n          </div> */}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          <div class=\"mb-2 h4\">\n            {locales.entries.Lcz_Collected}:{' '}\n            <span class=\"\">\n              {formatAmount(\n                this.bookingDetails.currency.symbol,\n                this.bookingDetails.financial.payments ? this.bookingDetails.financial.payments.reduce((prev, curr) => prev + curr.amount, 0) : 0,\n              )}\n            </span>\n          </div>\n\n          {this.bookingGuarantee()}\n          {/* <div class=\"mt-2\">\n            <div>\n              {this.bookingDetails.financial?.due_dates?.length > 0 && (\n                <Fragment>\n                  <div class=\"d-flex align-items-center\">\n                    <strong class=\"mr-1\">{locales.entries.Lcz_PaymentDueDates}</strong>\n                    <ir-button\n                      id=\"drawer-icon\"\n                      data-toggle=\"collapse\"\n                      data-target={`.roomName`}\n                      aria-expanded={this.collapsedPayment ? 'true' : 'false'}\n                      aria-controls=\"myCollapse\"\n                      variant=\"icon\"\n                      icon_name={this.collapsedPayment ? 'closed_eye' : 'open_eye'}\n                      onClickHandler={() => {\n                        this.collapsedPayment = !this.collapsedPayment;\n                      }}\n                      style={{ '--icon-size': '1.5rem' }}\n                    ></ir-button>\n                  </div>\n\n                  <table>{this.bookingDetails.financial.due_dates?.map(item => this._renderDueDate(item))}</table>\n                </Fragment>\n              )}\n            </div>\n          </div> */}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          {this.paymentActions?.filter(pa => pa.amount !== 0).length > 0 && this.bookingDetails.is_direct && (\n            <div class=\"payment_action_beta_container\">\n              <p class=\"beta\">Beta</p>\n              <ir-payment-actions paymentAction={this.paymentActions} booking={this.bookingDetails}></ir-payment-actions>\n            </div>\n          )}\n          <div class=\"mt-2 d-flex  flex-column rounded payment-container\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n              <span class={'font-medium'}>{locales.entries.Lcz_Payments} history</span>\n              <ir-button\n                id=\"add-payment\"\n                variant=\"icon\"\n                icon_name=\"square_plus\"\n                style={{ '--icon-size': '1.5rem' }}\n                onClickHandler={() => {\n                  this.newTableRow = true;\n                }}\n              ></ir-button>\n            </div>\n            <table class=\"mt-1\" style={{ backgroundColor: this.paymentBackground }}>\n              <thead>\n                <tr>\n                  <th class={'border border-light border-bottom-0 text-center payment_date'}>{locales.entries.Lcz_Dates}</th>\n                  <th class={'border border-light border-bottom-0 text-center w-60'}>{locales.entries.Lcz_Amount}</th>\n                  <th class={'border border-light border-bottom-0 text-center designation'}>{locales.entries.Lcz_Designation}</th>\n                  <th class={'border border-light border-bottom-0 text-center action_icons'}>\n                    <span class={'sr-only'}>payment actions</span>\n                    {/* <ir-button\n                      id=\"add-payment\"\n                      variant=\"icon\"\n                      icon_name=\"square_plus\"\n                      onClickHandler={() => {\n                        this.newTableRow = true;\n                      }}\n                    ></ir-button> */}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.bookingDetails.financial.payments?.map((item: any) => this._renderTableRow(item))}\n                {this.newTableRow ? this._renderTableRow(null, 'add') : null}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>,\n\n      <ir-modal\n        item={this.toBeDeletedItem}\n        class={'delete-record-modal'}\n        modalTitle={locales.entries.Lcz_Confirmation}\n        modalBody={this.modal_mode === 'delete' ? locales.entries.Lcz_IfDeletedPermantlyLost : locales.entries.Lcz_EnteringAmountGreaterThanDue}\n        iconAvailable={true}\n        icon=\"ft-alert-triangle danger h1\"\n        leftBtnText={locales.entries.Lcz_Cancel}\n        rightBtnText={this.modal_mode === 'delete' ? locales.entries.Lcz_Delete : locales.entries.Lcz_Confirm}\n        leftBtnColor=\"secondary\"\n        rightBtnColor={this.modal_mode === 'delete' ? 'danger' : 'primary'}\n        onConfirmModal={this.handleConfirmModal.bind(this)}\n        onCancelModal={this.handleCancelModal.bind(this)}\n      ></ir-modal>,\n    ];\n  }\n}\n","import axios from 'axios';\nimport { TDueParams, TPickupData } from './types';\nimport calendar_data from '@/stores/calendar-data';\nimport { IBookingPickupInfo } from '@/components';\nimport { z, ZodError } from 'zod';\nimport { renderTime } from '@/utils/utils';\nimport moment from 'moment';\n\nexport class PickupService {\n  public async savePickup(params: TPickupData, booking_nbr: string, is_remove: boolean) {\n    try {\n      const splitTime = params.arrival_time.split(':');\n      await axios.post(`/Do_Pickup`, {\n        booking_nbr,\n        is_remove,\n        currency: params.currency,\n        date: params.arrival_date,\n        details: params.flight_details,\n        hour: splitTime[0],\n        minute: splitTime[1],\n        nbr_of_units: params.number_of_vehicles,\n        selected_option: params.selected_option,\n        total: +params.due_upon_booking,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public transformDefaultPickupData(data: IBookingPickupInfo): TPickupData {\n    const arrival_time = data.hour && data.minute ? renderTime(data.hour) + ':' + renderTime(data.minute) : '';\n    return {\n      arrival_date: data.date,\n      arrival_time,\n      currency: data.currency,\n      due_upon_booking: data.total.toFixed(2),\n      flight_details: data.details,\n      location: data.selected_option.location.id,\n      number_of_vehicles: data.nbr_of_units,\n      selected_option: data.selected_option,\n      vehicle_type_code: data.selected_option.vehicle.code,\n    };\n  }\n  public getAvailableLocations(message: string) {\n    let locations: { value: number; text: string }[] = [];\n    calendar_data.pickup_service.allowed_options.forEach(option => {\n      if (locations.filter(location => location.value === option.location.id).length === 0) {\n        locations.push({\n          text: message + ' ' + option.location.description,\n          value: option.location.id,\n        });\n      }\n    });\n    return locations;\n  }\n  public createPickupSchema(minDate: string, maxDate: string) {\n    return z.object({\n      arrival_date: z\n        .string()\n        .regex(/^\\d{4}-\\d{2}-\\d{2}$/, { message: 'Invalid date format, expected YYYY-MM-DD' })\n        .refine(\n          dateStr => {\n            const date = moment(dateStr, 'YYYY-MM-DD', true);\n            const min = moment(minDate, 'YYYY-MM-DD', true);\n            const max = moment(maxDate, 'YYYY-MM-DD', true);\n            return date.isValid() && min.isValid() && max.isValid() && date.isBetween(min, max, undefined, '[]');\n          },\n          { message: `arrival_date must be between ${minDate} and ${maxDate}` },\n        ),\n\n      arrival_time: z\n        .string()\n        .regex(/^\\d{2}:\\d{2}$/, { message: 'Invalid time format. Expected HH:MM' })\n        .refine(\n          time => {\n            const [hours, minutes] = time.split(':').map(Number);\n            return hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59;\n          },\n          { message: 'Time values are out of range' },\n        ),\n      flight_details: z.string().nonempty({ message: 'Flight details cannot be empty' }),\n      vehicle_type_code: z.string().nonempty({ message: 'Vehicle type code cannot be empty' }),\n      number_of_vehicles: z.coerce.number().min(1, { message: 'At least one vehicle is required' }),\n    });\n  }\n  public validateForm(\n    params: TPickupData,\n    schema: any, // : { error: boolean; cause?: keyof TPickupData }\n  ) {\n    try {\n      schema.parse(params);\n      return null;\n    } catch (error) {\n      console.log(error);\n      const err = {};\n      if (error instanceof ZodError) {\n        error.issues.forEach(e => {\n          err[e.path[0]] = true;\n        });\n        return err;\n      }\n    }\n    // if (params.arrival_time.split(':').length !== 2) {\n    //   return {\n    //     error: true,\n    //     cause: 'arrival_time',\n    //   };\n    // }\n    // if (params.flight_details === '') {\n    //   return {\n    //     error: true,\n    //     cause: 'flight_details',\n    //   };\n    // }\n    // if (params.vehicle_type_code === '') {\n    //   return {\n    //     error: true,\n    //     cause: 'vehicle_type_code',\n    //   };\n    // }\n    // if (params.number_of_vehicles === 0) {\n    //   return {\n    //     error: true,\n    //     cause: 'number_of_vehicles',\n    //   };\n    // }\n    // return { error: false };\n  }\n  public getNumberOfVehicles(capacity: number, numberOfPersons: number) {\n    let total_number_of_vehicles = Math.ceil(numberOfPersons / capacity);\n    let startNumber = total_number_of_vehicles > 1 ? total_number_of_vehicles : 1;\n    let bonus_number = total_number_of_vehicles > 1 ? 2 : 3;\n    return Array.from({ length: total_number_of_vehicles + bonus_number }, (_, i) => startNumber + i);\n  }\n  private getPickUpPersonStatus(code: string) {\n    const getCodeDescription = calendar_data.pickup_service.allowed_pricing_models.find(model => model.code === code);\n    if (!getCodeDescription) {\n      return null;\n    }\n    return getCodeDescription.description;\n  }\n  public updateDue(params: TDueParams) {\n    const getCodeDescription = this.getPickUpPersonStatus(params.code);\n    if (!getCodeDescription) {\n      return;\n    }\n    if (getCodeDescription === 'Person') {\n      return params.amount * params.numberOfPersons;\n    } else {\n      return params.amount * params.number_of_vehicles;\n    }\n  }\n}\n",":host {\n  display: block;\n}\n.custom-card-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #e4e5ec;\n}\n.card-title {\n  flex: 1;\n}\n.border-theme {\n  border: 1px solid #cacfe7;\n}\n@media (min-width: 768px) {\n  .price-input-container {\n    max-width: 290px;\n  }\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import calendar_data from '@/stores/calendar-data';\nimport locales from '@/stores/locales.store';\nimport { Component, Element, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { TPickupData } from './types';\nimport moment from 'moment';\nimport { IAllowedOptions } from '@/models/calendarData';\nimport { PickupService } from './pickup.service';\nimport { IBookingPickupInfo } from '@/models/booking.dto';\nimport { MaskedRange } from 'imask';\n\n@Component({\n  tag: 'ir-pickup',\n  styleUrls: ['ir-pickup.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrPickup {\n  @Element() el: HTMLElement;\n\n  @Prop() defaultPickupData: IBookingPickupInfo | null;\n  @Prop() numberOfPersons: number = 0;\n  @Prop() bookingNumber: string;\n  @Prop() bookingDates: { from: string; to: string };\n\n  @State() isLoading = false;\n  @State() allowedOptionsByLocation: IAllowedOptions[] = [];\n  @State() pickupData: TPickupData = {\n    location: -1,\n    flight_details: '',\n    due_upon_booking: '',\n    number_of_vehicles: 1,\n    vehicle_type_code: '',\n    currency: undefined,\n    arrival_time: '',\n    arrival_date: null,\n    selected_option: undefined,\n  };\n  @State() vehicleCapacity: number[] = [];\n  @State() cause: keyof TPickupData | null = null;\n  @State() errors: Record<string, boolean>;\n  @State() autoValidate = false;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n\n  private pickupService = new PickupService();\n  private pickupSchema;\n\n  private arrival_time_mask = {\n    mask: 'HH:mm',\n    blocks: {\n      HH: {\n        mask: MaskedRange,\n        from: 0,\n        to: 23,\n        placeholderChar: 'H',\n      },\n      mm: {\n        mask: MaskedRange,\n        from: 0,\n        to: 59,\n        placeholderChar: 'm',\n      },\n    },\n    lazy: false,\n    placeholderChar: '_',\n  };\n\n  componentWillLoad() {\n    if (this.defaultPickupData) {\n      const transformedData = this.pickupService.transformDefaultPickupData(this.defaultPickupData);\n      this.vehicleCapacity = this.pickupService.getNumberOfVehicles(transformedData.selected_option.vehicle.capacity, this.numberOfPersons);\n      this.allowedOptionsByLocation = calendar_data.pickup_service.allowed_options.filter(option => option.location.id === transformedData.location);\n      this.pickupData = { ...transformedData };\n    }\n    this.pickupSchema = this.pickupService.createPickupSchema(this.bookingDates.from, this.bookingDates.to);\n  }\n  private handleLocationChange(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const value = event.detail;\n    if (value === '') {\n      this.updatePickupData('location', -1);\n    }\n    if (value !== '') {\n      this.allowedOptionsByLocation = calendar_data.pickup_service.allowed_options.filter(option => option.location.id.toString() === value);\n      let locationChoice = this.allowedOptionsByLocation[0];\n      if (!locationChoice) {\n        return;\n      }\n      locationChoice.currency;\n      this.vehicleCapacity = this.pickupService.getNumberOfVehicles(locationChoice.vehicle.capacity, this.numberOfPersons);\n      this.pickupData = {\n        ...this.pickupData,\n        location: value,\n        selected_option: locationChoice,\n        number_of_vehicles: this.vehicleCapacity[0],\n        due_upon_booking: this.pickupService\n          .updateDue({\n            amount: locationChoice.amount,\n            code: locationChoice.pricing_model.code,\n            numberOfPersons: this.numberOfPersons,\n            number_of_vehicles: this.vehicleCapacity[0],\n          })\n          .toFixed(2),\n        vehicle_type_code: locationChoice.vehicle.code,\n        currency: locationChoice.currency,\n        // number_of_vehicles:this.pickupService\n      };\n    }\n  }\n\n  private handleVehicleQuantityChange(e: CustomEvent) {\n    if (e.detail === '') {\n      return;\n    }\n    const value = +e.detail;\n    this.pickupData = {\n      ...this.pickupData,\n      number_of_vehicles: value,\n      due_upon_booking: this.pickupService\n        .updateDue({\n          amount: this.pickupData.selected_option.amount,\n          code: this.pickupData.selected_option.pricing_model.code,\n          numberOfPersons: this.numberOfPersons,\n          number_of_vehicles: value,\n        })\n        .toFixed(2),\n    };\n  }\n\n  private handleVehicleTypeChange(e: CustomEvent) {\n    if (e.detail === '') {\n      this.pickupData = {\n        ...this.pickupData,\n        due_upon_booking: '',\n        vehicle_type_code: '',\n      };\n      return;\n    }\n    let locationChoice = calendar_data.pickup_service.allowed_options.find(option => option.location.id === +this.pickupData.location && option.vehicle.code === e.detail);\n    if (!locationChoice) {\n      return;\n    }\n    this.vehicleCapacity = [...this.pickupService.getNumberOfVehicles(locationChoice.vehicle.capacity, this.numberOfPersons)];\n    this.pickupData = {\n      ...this.pickupData,\n      selected_option: locationChoice,\n      number_of_vehicles: this.vehicleCapacity[0],\n      due_upon_booking: this.pickupService\n        .updateDue({\n          amount: locationChoice.amount,\n          code: locationChoice.pricing_model.code,\n          numberOfPersons: this.numberOfPersons,\n          number_of_vehicles: this.vehicleCapacity[0],\n        })\n        .toFixed(2),\n      vehicle_type_code: locationChoice.vehicle.code,\n    };\n  }\n\n  private updatePickupData(key: keyof TPickupData, value: any) {\n    this.pickupData = { ...this.pickupData, [key]: value };\n  }\n  private async savePickup() {\n    try {\n      this.isLoading = true;\n      this.autoValidate = true;\n      if (this.errors) {\n        this.errors = null;\n      }\n      this.errors = this.pickupService.validateForm(this.pickupData, this.pickupSchema);\n      if (this.errors) {\n        return;\n      }\n      await this.pickupService.savePickup(this.pickupData, this.bookingNumber, this.defaultPickupData !== null && this.pickupData.location === -1);\n      this.resetBookingEvt.emit(null);\n      this.closeModal.emit(null);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  render() {\n    return (\n      <form\n        class={'sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.savePickup();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_Pickup} displayContext=\"sidebar\"></ir-title>\n        <section class={'px-1 sheet-body'}>\n          <ir-select\n            testId=\"pickup_location\"\n            selectedValue={this.pickupData.location}\n            selectContainerStyle=\"mb-1\"\n            onSelectChange={this.handleLocationChange.bind(this)}\n            firstOption={locales.entries.Lcz_Pickup_NoThankYou}\n            class={'m-0 mb-1'}\n            LabelAvailable={false}\n            data={this.pickupService.getAvailableLocations(locales.entries.Lcz_Pickup_YesFrom) as any}\n          ></ir-select>\n          {this.pickupData.location > 0 && (\n            <div class=\"m-0 p-0\" data-testid=\"pickup_body\">\n              {/*Date and Time Picker container */}\n              <div class={'d-flex'}>\n                {/*Date Picker */}\n                <div class=\"form-group  mr-1\">\n                  <div class=\"input-group row m-0\">\n                    <div class={`input-group-prepend col-5 p-0 text-dark border-0`}>\n                      <label class={`input-group-text  flex-grow-1 text-dark border-theme `}>{locales.entries.Lcz_ArrivalDate}</label>\n                    </div>\n                    <div class=\"form-control  form-control-md col-7 d-flex align-items-center px-0 mx-0\" style={{ border: '0' }}>\n                      <ir-date-picker\n                        data-testid=\"pickup_arrival_date\"\n                        date={this.pickupData.arrival_date}\n                        minDate={this.bookingDates.from}\n                        maxDate={this.bookingDates?.to}\n                        emitEmptyDate={true}\n                        aria-invalid={this.errors?.arrival_date && !this.pickupData.arrival_date ? 'true' : 'false'}\n                        onDateChanged={evt => {\n                          this.updatePickupData('arrival_date', evt.detail.start?.format('YYYY-MM-DD'));\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={this.pickupData.arrival_date ? moment(this.pickupData.arrival_date).format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors?.arrival_date && !this.pickupData.arrival_date ? 'border-danger' : ''} text-center`}\n                          style={{ borderTopLeftRadius: '0', borderBottomLeftRadius: '0', width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </div>\n                  </div>\n                </div>\n                {/*Time Picker */}\n                <ir-input-text\n                  autoValidate={this.autoValidate}\n                  wrapKey=\"arrival_time\"\n                  testId=\"pickup_arrival_time\"\n                  error={this.errors?.arrival_time}\n                  value={this.pickupData.arrival_time}\n                  zod={this.pickupSchema.pick({ arrival_time: true })}\n                  label={locales.entries.Lcz_Time}\n                  inputStyles=\"col-sm-4\"\n                  data-state={this.cause === 'arrival_time' ? 'error' : ''}\n                  mask={this.arrival_time_mask}\n                  onTextChange={e => this.updatePickupData('arrival_time', e.detail)}\n                ></ir-input-text>\n              </div>\n              <ir-input-text\n                wrapKey=\"flight_details\"\n                zod={this.pickupSchema.pick({ flight_details: true })}\n                autoValidate={this.autoValidate}\n                testId=\"pickup_flight_details\"\n                value={this.pickupData.flight_details}\n                label={locales.entries.Lcz_FlightDetails}\n                onTextChange={e => this.updatePickupData('flight_details', e.detail)}\n                placeholder=\"\"\n                error={this.errors?.flight_details}\n              ></ir-input-text>\n              <ir-select\n                testId=\"pickup_vehicle_type_code\"\n                selectContainerStyle=\"mb-1\"\n                error={this.cause === 'vehicle_type_code'}\n                onSelectChange={this.handleVehicleTypeChange.bind(this)}\n                firstOption={locales.entries.Lcz_Select}\n                selectedValue={this.pickupData.vehicle_type_code}\n                class={'m-0'}\n                LabelAvailable={false}\n                data={\n                  this.allowedOptionsByLocation.map(option => ({\n                    text: option.vehicle.description,\n                    value: option.vehicle.code,\n                  })) as any\n                }\n              ></ir-select>\n              <div class={'d-flex flex-column flex-md-row'}>\n                <ir-select\n                  showFirstOption={false}\n                  testId=\"pickup_number_of_vehicles\"\n                  labelBorder=\"theme\"\n                  selectContainerStyle=\"mb-1\"\n                  onSelectChange={this.handleVehicleQuantityChange.bind(this)}\n                  selectedValue={this.pickupData.number_of_vehicles}\n                  error={this.cause === 'number_of_vehicles'}\n                  labelWidth={7}\n                  class={'m-0  mb-md-0 mr-md-1 flex-fill'}\n                  label={locales.entries.Lcz_NbrOfVehicles}\n                  data={\n                    this.vehicleCapacity.map(i => ({\n                      text: i,\n                      value: i,\n                    })) as any\n                  }\n                ></ir-select>\n                {/* <ir-input-text\n                  labelBorder=\"theme\"\n                  readonly\n                  value={this.pickupData.due_upon_booking}\n                  labelWidth={7}\n                  label={`${locales.entries.Lcz_DueUponBooking}  ${this.pickupData.currency.symbol}`}\n                  placeholder=\"\"\n                  class=\"\"\n                ></ir-input-text> */}\n                <div class=\"price-input-container\">\n                  <ir-price-input readOnly label={`${locales.entries.Lcz_DueUponBooking}`} value={this.pickupData.due_upon_booking} currency={this.pickupData.currency.symbol} />\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button\n            onClick={() => this.closeModal.emit(null)}\n            btn_styles=\"justify-content-center\"\n            class={`flex-fill`}\n            text={locales.entries.Lcz_Cancel}\n            btn_color=\"secondary\"\n          ></ir-button>\n          {(this.defaultPickupData || this.pickupData.location !== -1) && (\n            <ir-button\n              btn_styles=\"justify-content-center align-items-center\"\n              class={'flex-fill'}\n              isLoading={this.isLoading}\n              text={locales.entries.Lcz_Save}\n              btn_color=\"primary\"\n              btn_type=\"submit\"\n            ></ir-button>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import calendar_data from '@/stores/calendar-data';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, h } from '@stencil/core';\nimport { _formatTime } from '../functions';\nimport moment from 'moment';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\n@Component({\n  tag: 'ir-pickup-view',\n  styleUrl: 'ir-pickup-view.css',\n  scoped: true,\n})\nexport class IrPickupView {\n  @Prop() booking: Booking;\n  render() {\n    if (!calendar_data.pickup_service.is_enabled || !this.booking.is_editable) {\n      return null;\n    }\n    return (\n      <Host>\n        <div class=\"mb-1\">\n          <div class={'d-flex w-100 mb-1 align-items-center justify-content-between'}>\n            <p class={'font-size-large p-0 m-0 '}>{locales.entries.Lcz_Pickup}</p>\n            <ir-button id=\"pickup\" data-testid=\"new_pickup_btn\" variant=\"icon\" icon_name=\"edit\" style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}></ir-button>\n          </div>\n          {this.booking.pickup_info && (\n            <div class={'card'}>\n              <div class={'p-1'}>\n                <div class={'d-flex align-items-center py-0 my-0 pickup-margin'}>\n                  <p class={'font-weight-bold mr-1 py-0 my-0'}>\n                    {locales.entries.Lcz_Date}: <span class={'font-weight-normal'}>{moment(this.booking.pickup_info.date, 'YYYY-MM-DD').format('MMM DD, YYYY')}</span>\n                  </p>\n                  {this.booking.pickup_info.hour && this.booking.pickup_info.minute && (\n                    <p class={'font-weight-bold flex-fill py-0 my-0'}>\n                      {locales.entries.Lcz_Time}:\n                      <span class={'font-weight-normal'}> {_formatTime(this.booking.pickup_info.hour.toString(), this.booking.pickup_info.minute.toString())}</span>\n                    </p>\n                  )}\n                  <p class={'font-weight-bold py-0 my-0'}>\n                    {locales.entries.Lcz_DueUponBooking}:{' '}\n                    <span class={'font-weight-normal'}>\n                      {this.booking.pickup_info.currency.symbol}\n                      {this.booking.pickup_info.total}\n                    </span>\n                  </p>\n                </div>\n                <p class={'font-weight-bold py-0 my-0'}>\n                  {locales.entries.Lcz_FlightDetails}:<span class={'font-weight-normal'}> {`${this.booking.pickup_info.details}`}</span>\n                </p>\n                <p class={'py-0 my-0 pickup-margin'}>{`${this.booking.pickup_info.selected_option.vehicle.description}`}</p>\n                <p class={'font-weight-bold py-0 my-0 pickup-margin'}>\n                  {locales.entries.Lcz_NbrOfVehicles}:<span class={'font-weight-normal'}> {`${this.booking.pickup_info.nbr_of_units}`}</span>\n                </p>\n                <p class={'small py-0 my-0 pickup-margin'}>\n                  {calendar_data.pickup_service.pickup_instruction.description}\n                  {calendar_data.pickup_service.pickup_cancelation_prepayment.description}\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n.dialog-container-height {\n  height: 4rem;\n}\n.list-title {\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  font-weight: bold;\n  width: fit-content;\n}\n.list-item {\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  margin-left: 5px;\n  width: fit-content;\n}\n.list-item.green {\n  color: #629a4c;\n  font-weight: 600;\n}\n.list-item.red {\n  color: #ff4961;\n  font-weight: 600;\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport { _formatTime } from '../../functions';\nimport locales from '@/stores/locales.store';\nimport { IPmsLog } from '@/models/booking.dto';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { BookingService } from '@/services/booking.service';\n\n@Component({\n  tag: 'ir-pms-logs',\n  styleUrl: 'ir-pms-logs.css',\n  scoped: true,\n})\nexport class IrPmsLogs {\n  @Prop() bookingNumber: string;\n\n  @State() pmsLogs: IPmsLog;\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n  }\n\n  private async init() {\n    try {\n      this.pmsLogs = await this.bookingService.fetchPMSLogs(this.bookingNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"p-1\">\n        <h3 class=\" text-left mb-1 dialog-title \">{locales.entries.Lcz_PMS_Logs}</h3>\n\n        {isRequestPending('/Get_Exposed_PMS_Logs') ? (\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\n            <ir-spinner></ir-spinner>\n          </div>\n        ) : (\n          <div class={'dialog-container-height'}>\n            <div class=\"d-flex align-items-center \" style={{ paddingBottom: '0.5rem' }}>\n              <p class=\"list-title p-0 m-0\">{locales.entries.Lcz_SentAt}</p>\n              {this.pmsLogs?.sent_date ? (\n                <p class=\"list-item\">\n                  {this.pmsLogs?.sent_date} {_formatTime(this.pmsLogs?.sent_hour.toString(), this.pmsLogs?.sent_minute.toString())}\n                </p>\n              ) : (\n                <p class={`list-item ${this.pmsLogs?.sent_date ? 'green' : 'red'}`}>{this.pmsLogs?.is_acknowledged ? locales.entries.Lcz_YES : locales.entries.Lcz_NO}</p>\n              )}\n            </div>\n            <div class=\"d-flex align-items-center p-0 m-0\">\n              <h4 class=\"list-title p-0 m-0\">{locales.entries.Lcz_Acknowledged}</h4>\n              <p class={`list-item  ${this.pmsLogs?.is_acknowledged ? 'green' : 'red'}`}>{this.pmsLogs?.is_acknowledged ? locales.entries.Lcz_YES : locales.entries.Lcz_NO}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\nimport locales from '@/stores/locales.store';\nimport { getPrivateNote } from '@/utils/booking';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { ICountry } from '@/models/IBooking';\nimport { _formatDate, _formatTime } from '../functions';\nimport { BookingDetailsSidebarEvents, OpenSidebarEvent } from '../types';\n\n@Component({\n  tag: 'ir-reservation-information',\n  styleUrl: 'ir-reservation-information.css',\n  scoped: true,\n})\nexport class IrReservationInformation {\n  @Prop() booking: Booking;\n  @Prop() countries: ICountry[];\n\n  @State() userCountry: ICountry | null = null;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<any>>;\n  componentWillLoad() {\n    const guestCountryId = this.booking?.guest?.country_id;\n    this.userCountry = guestCountryId ? this.countries?.find(country => country.id === guestCountryId) || null : null;\n  }\n  private handleEditClick(e: CustomEvent, type: BookingDetailsSidebarEvents) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.openSidebar.emit({ type });\n  }\n\n  private renderPhoneNumber() {\n    const { mobile_without_prefix, country_phone_prefix, country_id } = this.booking.guest;\n    if (!mobile_without_prefix) {\n      return null;\n    }\n    if (country_phone_prefix) {\n      return country_phone_prefix + ' ' + mobile_without_prefix;\n    }\n    if (country_id) {\n      const selectedCountry = this.countries.find(c => c.id === country_id);\n      if (!selectedCountry) {\n        throw new Error('Invalid country id');\n      }\n      return selectedCountry.phone_prefix + ' ' + mobile_without_prefix;\n    }\n    return mobile_without_prefix;\n    // const { mobile, country_phone_prefix, country_id } = this.booking.guest;\n    // if (!mobile) {\n    //   return null;\n    // }\n    // if (this.booking.is_direct) {\n    //   if (country_phone_prefix) {\n    //     return country_phone_prefix + ' ' + mobile;\n    //   }\n    //   if (country_id) {\n    //     const selectedCountry = this.countries.find(c => c.id === country_id);\n    //     if (!selectedCountry) {\n    //       throw new Error('Invalid country id');\n    //     }\n    //     return selectedCountry.phone_prefix + ' ' + mobile;\n    //   }\n    // }\n    // return mobile;\n  }\n  render() {\n    const privateNote = getPrivateNote(this.booking.extras);\n    return (\n      <div class=\"card\">\n        <div class=\"p-1\">\n          <p>{this.booking.property.name || ''}</p>\n          <ir-label\n            labelText={`${locales.entries.Lcz_Source}:`}\n            content={this.booking.origin.Label}\n            image={{ src: this.booking.origin.Icon, alt: this.booking.origin.Label }}\n          ></ir-label>\n          <ir-label\n            renderContentAsHtml\n            labelText={`${locales.entries.Lcz_BookedOn}:`}\n            content={`${_formatDate(this.booking.booked_on.date)}&nbsp&nbsp&nbsp&nbsp${_formatTime(\n              this.booking.booked_on.hour.toString(),\n              this.booking.booked_on.minute.toString(),\n            )}`}\n          ></ir-label>\n          <ir-label labelText={`${locales.entries.Lcz_BookedBy}:`} content={`${this.booking.guest.first_name} ${this.booking.guest.last_name}`}>\n            {this.booking.guest?.nbr_confirmed_bookings > 1 && !this.booking.agent && (\n              <div class={'m-0 p-0'} slot=\"prefix\">\n                <ir-tooltip message={`${locales.entries.Lcz_BookingsNbr}`.replace('%1', this.booking.guest.nbr_confirmed_bookings.toString())} customSlot>\n                  <div class=\"d-flex align-items-center m-0 p-0\" slot=\"tooltip-trigger\" style={{ gap: '0.25rem' }}>\n                    <p class={'p-0 m-0'} style={{ color: '#FB0AAD' }}>\n                      {this.booking.guest.nbr_confirmed_bookings}\n                    </p>\n                    <ir-icons style={{ '--icon-size': '1rem' }} color=\"#FB0AAD\" name=\"heart-fill\"></ir-icons>\n                  </div>\n                </ir-tooltip>\n              </div>\n            )}\n            <ir-button\n              slot=\"suffix\"\n              variant=\"icon\"\n              icon_name={'edit'}\n              style={{ ...colorVariants.secondary, '--icon-size': '1.1rem' }}\n              onClickHandler={e => this.handleEditClick(e, 'guest')}\n            ></ir-button>\n          </ir-label>\n          {this.booking.guest.mobile && <ir-label labelText={`${locales.entries.Lcz_Phone}:`} content={this.renderPhoneNumber()}></ir-label>}\n          {!this.booking.agent && <ir-label labelText={`${locales.entries.Lcz_Email}:`} content={this.booking.guest.email}></ir-label>}\n          {this.booking.guest.alternative_email && <ir-label labelText={`${locales.entries.Lcz_AlternativeEmail}:`} content={this.booking.guest.alternative_email}></ir-label>}\n          {this.booking?.guest?.address && <ir-label labelText={`${locales.entries.Lcz_Address}:`} content={this.booking.guest.address}></ir-label>}\n          {this.userCountry && (\n            <ir-label\n              labelText={`${locales.entries.Lcz_Country}:`}\n              isCountryImage\n              content={this.userCountry.name}\n              image={{ src: this.userCountry.flag, alt: this.userCountry.name }}\n            ></ir-label>\n          )}\n          {this.booking.guest?.notes && <ir-label display=\"inline\" labelText={`${locales.entries.Lcz_GuestPrivateNote}:`} content={this.booking.guest?.notes}></ir-label>}\n          {this.booking.is_direct && <ir-label labelText={`${locales.entries.Lcz_ArrivalTime}:`} content={this.booking.arrival.description}></ir-label>}\n          {this.booking.promo_key && <ir-label labelText={`${locales.entries.Lcz_Coupon}:`} content={this.booking.promo_key}></ir-label>}\n          {/* {this.booking.agent && <ir-label labelText={`${locales.entries.Lcz_AgentCode?.split(':')[0]}:`} content={this.booking.agent.name}></ir-label>} */}\n          {this.booking.is_in_loyalty_mode && !this.booking.promo_key && (\n            <div class=\"d-flex align-items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n                <path\n                  fill=\"#fc6c85\"\n                  d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"\n                />\n              </svg>\n              <p class=\"m-0 p-0 ml-1\">{locales.entries.Lcz_LoyaltyDiscountApplied}</p>\n            </div>\n          )}\n          {this.booking.is_direct ? (\n            <ir-label labelText={`${locales.entries.Lcz_GuestRemark}:`} display=\"inline\" content={this.booking.remark}></ir-label>\n          ) : (\n            <ota-label\n              class={'m-0 p-0'}\n              label={`${locales.entries.Lcz_ChannelNotes || 'Channel notes'}:`}\n              remarks={this.booking.ota_notes}\n              maxVisibleItems={this.booking.ota_notes?.length}\n            ></ota-label>\n          )}\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <ir-label\n              labelText={`${locales.entries.Lcz_BookingPrivateNote}:`}\n              placeholder={locales.entries.Lcz_VisibleToHotelOnly}\n              content={privateNote}\n              display={privateNote ? 'inline' : 'flex'}\n              // ignore_content\n            ></ir-label>\n            <ir-button variant=\"icon\" icon_name=\"edit\" style={colorVariants.secondary} onClickHandler={e => this.handleEditClick(e, 'extra_note')}></ir-button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",".light-blue-bg {\n  background: #acecff;\n  padding: 0.1rem 0.3rem;\n  border-radius: 5px;\n  display: block;\n  max-width: 100px;\n  box-sizing: border-box;\n  display: inline-block;\n  overflow: hidden;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: default;\n}\n\n.room_statements {\n  display: block;\n  width: 100%; /* Ensure the container uses the full width */\n}\n.room_statements {\n  display: block;\n  width: 100%;\n}\n.room_statements span {\n  display: inline;\n  white-space: normal;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.room_statements b {\n  display: inline;\n  margin-right: 5px;\n}\n.payment-container {\n  position: absolute;\n  right: 1rem;\n  height: fit-content;\n}\n:host {\n  position: relative;\n}\n.sm-mr {\n  margin-right: 3px;\n}\n.subtotal_row {\n  padding-top: 8px;\n  font-weight: 600;\n}\n.room_actions_btns {\n  gap: 0.5rem;\n}\n.night-cost {\n  color: #7cbebe;\n}\n.room_actions_btns {\n  /* max-width: 50%; */\n  white-space: nowrap;\n  width: max-content;\n}\n.room_actions_btns {\n  flex: 1 1 0%;\n  display: flex;\n  justify-content: flex-end;\n}\n/* .cancelation {\n  max-width: 30%;\n} */\n.mx-0-5 {\n  margin-left: 2px !important;\n  margin-right: 2px !important;\n}\n.tax-width {\n  font-size: 10px;\n  /* flex-wrap: wrap; */\n}\n.sm-mb-1 {\n  margin-bottom: 5px !important;\n}\n.sm-mt-1 {\n  margin-top: 5px !important;\n}\n.mx-01 {\n  --m: 5px;\n  margin-right: var(--m) !important;\n  margin-left: var(--m) !important;\n}\n","import { Component, h, Prop, EventEmitter, Event, Listen, State, Element, Host, Fragment, Watch } from '@stencil/core';\nimport { _getDay } from '../functions';\nimport { Booking, IUnit, Occupancy, Room, SharedPerson } from '@/models/booking.dto';\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport { formatName } from '@/utils/booking';\nimport locales from '@/stores/locales.store';\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { formatAmount } from '@/utils/utils';\nimport { IEntries } from '@/models/IBooking';\nimport { BookingService } from '@/services/booking.service';\nimport { OpenSidebarEvent, RoomGuestsPayload } from '../types';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nexport type RoomModalReason = 'delete' | 'checkin' | 'checkout' | null;\n@Component({\n  tag: 'ir-room',\n  styleUrl: 'ir-room.css',\n  scoped: true,\n})\nexport class IrRoom {\n  @Element() element: HTMLIrRoomElement;\n  // Room Data\n  @Prop() booking: Booking;\n  @Prop() bookingIndex: number;\n  @Prop() isEditable: boolean;\n  @Prop() room: Room;\n  @Prop() property_id: number;\n  // Meal Code names\n  @Prop() mealCodeName: string;\n  @Prop() myRoomTypeFoodCat: string;\n  // Currency\n  @Prop() currency: string = 'USD';\n  @Prop() language: string = 'en';\n  @Prop() legendData;\n  @Prop() roomsInfo;\n  @Prop() bedPreferences: IEntries[];\n  @Prop() departureTime: IEntries[];\n  // Booleans Conditions\n  @Prop() hasRoomEdit: boolean = false;\n  @Prop() hasRoomDelete: boolean = false;\n  @Prop() hasRoomAdd: boolean = false;\n  @Prop() hasCheckIn: boolean = false;\n  @Prop() hasCheckOut: boolean = false;\n\n  @State() collapsed: boolean = false;\n  @State() isLoading: boolean = false;\n  @State() modalReason: RoomModalReason = null;\n  @State() mainGuest: SharedPerson;\n  @State() isModelOpen: boolean = false;\n\n  // Event Emitters\n  @Event({ bubbles: true, composed: true }) deleteFinished: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n  @Event({ bubbles: true, composed: true }) pressCheckIn: EventEmitter;\n  @Event({ bubbles: true, composed: true }) pressCheckOut: EventEmitter;\n  @Event({ bubbles: true, composed: true }) editInitiated: EventEmitter<TIglBookPropertyPayload>;\n  @Event() resetbooking: EventEmitter<null>;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<RoomGuestsPayload>>;\n\n  private modal: HTMLIrModalElement;\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.mainGuest = this.getMainGuest();\n  }\n  @Listen('clickHandler')\n  handleClick(e) {\n    let target = e.target;\n    if (target.id == 'checkin') {\n      this.pressCheckIn.emit(this.room);\n    } else if (target.id == 'checkout') {\n      this.pressCheckOut.emit(this.room);\n    }\n  }\n  @Watch('room')\n  handleRoomDataChange() {\n    this.mainGuest = this.getMainGuest();\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n  private handleEditClick() {\n    this.editInitiated.emit({\n      event_type: 'EDIT_BOOKING',\n      ID: this.room['assigned_units_pool'],\n      NAME: formatName(this.mainGuest?.first_name, this.mainGuest?.last_name),\n      EMAIL: this.booking.guest.email,\n      PHONE: this.booking.guest.mobile,\n      REFERENCE_TYPE: '',\n      FROM_DATE: this.booking.from_date,\n      TO_DATE: this.booking.to_date,\n      TITLE: `${locales.entries.Lcz_EditBookingFor} ${this.room?.roomtype?.name} ${(this.room?.unit as IUnit)?.name || ''}`,\n      defaultDateRange: {\n        dateDifference: this.room.days.length,\n        fromDate: new Date(this.room.from_date + 'T00:00:00'),\n        fromDateStr: this.getDateStr(new Date(this.room.from_date + 'T00:00:00')),\n        toDate: new Date(this.room.to_date + 'T00:00:00'),\n        toDateStr: this.getDateStr(new Date(this.room.to_date + 'T00:00:00')),\n        message: '',\n      },\n      bed_preference: this.room.bed_preference,\n      adult_child_offering: this.room.rateplan.selected_variation.adult_child_offering,\n      ADULTS_COUNT: this.room.rateplan.selected_variation.adult_nbr,\n      ARRIVAL: this.booking.arrival,\n      ARRIVAL_TIME: this.booking.arrival.description,\n      BOOKING_NUMBER: this.booking.booking_nbr,\n      cancelation: this.room.rateplan.cancelation,\n      channel_booking_nbr: this.booking.channel_booking_nbr,\n      CHILDREN_COUNT: this.room.rateplan.selected_variation.child_nbr,\n      COUNTRY: this.booking.guest.country_id,\n      ENTRY_DATE: this.booking.from_date,\n      FROM_DATE_STR: this.booking.format.from_date,\n      guarantee: this.room.rateplan.guarantee,\n      GUEST: this.mainGuest,\n      IDENTIFIER: this.room.identifier,\n      is_direct: this.booking.is_direct,\n      IS_EDITABLE: this.booking.is_editable,\n      NO_OF_DAYS: this.room.days.length,\n      NOTES: this.booking.remark,\n      origin: this.booking.origin,\n      POOL: this.room['assigned_units_pool'],\n      PR_ID: (this.room.unit as IUnit)?.id,\n      RATE: this.room.total,\n      RATE_PLAN: this.room.rateplan.name,\n      RATE_PLAN_ID: this.room.rateplan.id,\n      RATE_TYPE: this.room.roomtype.id,\n      ROOMS: this.booking.rooms,\n      SOURCE: this.booking.source,\n      SPLIT_BOOKING: false,\n      STATUS: 'IN-HOUSE',\n      TO_DATE_STR: this.booking.format.to_date,\n      TOTAL_PRICE: this.booking.total,\n      legendData: this.legendData,\n      roomsInfo: this.roomsInfo,\n      roomName: (this.room.unit as IUnit)?.name || '',\n      PICKUP_INFO: this.booking.pickup_info,\n      booking: this.booking,\n      currentRoomType: this.room,\n    });\n  }\n  private openModal(reason: RoomModalReason) {\n    if (!reason) {\n      return;\n    }\n    this.modalReason = reason;\n    this.modal.openModal();\n  }\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (!this.modalReason) {\n        return;\n      }\n      this.isLoading = true;\n      switch (this.modalReason) {\n        case 'delete':\n          await this.deleteRoom();\n          break;\n        case 'checkin':\n        case 'checkout':\n          await this.bookingService.handleExposedRoomInOut({\n            booking_nbr: this.booking.booking_nbr,\n            room_identifier: this.room.identifier,\n            status: this.modalReason === 'checkin' ? '001' : '002',\n          });\n          this.resetbooking.emit(null);\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      this.modalReason = null;\n      this.modal.closeModal();\n    }\n  }\n  private async deleteRoom() {\n    let oldRooms = [...this.booking.rooms];\n    oldRooms = oldRooms.filter(room => room.identifier !== this.room.identifier);\n\n    const body = {\n      assign_units: true,\n      check_in: true,\n      is_pms: true,\n      is_direct: true,\n      booking: {\n        booking_nbr: this.booking.booking_nbr,\n        from_date: this.booking.from_date,\n        to_date: this.booking.to_date,\n        remark: this.booking.remark,\n        property: this.booking.property,\n        source: this.booking.source,\n        currency: this.booking.currency,\n        arrival: this.booking.arrival,\n        guest: this.booking.guest,\n        rooms: oldRooms,\n      },\n      extras: this.booking.extras,\n      pickup_info: this.booking.pickup_info,\n    };\n    await this.bookingService.doReservation(body);\n    this.deleteFinished.emit(this.room.identifier);\n  }\n  private async updateDepartureTime(code: string) {\n    try {\n      await this.bookingService.setDepartureTime({\n        property_id: this.property_id,\n        code,\n        room_identifier: this.room.identifier,\n      });\n      this.toast.emit({\n        type: 'success',\n        description: '',\n        title: 'Saved Successfully',\n        position: 'top-right',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private formatVariation({ infant_nbr, adult_nbr, children_nbr }: Occupancy) {\n    const adultCount = adult_nbr > 0 ? adult_nbr : 0;\n    const childCount = children_nbr > 0 ? children_nbr : 0;\n    const infantCount = infant_nbr > 0 ? infant_nbr : 0;\n\n    const adultLabel = adultCount > 1 ? locales.entries.Lcz_Adults.toLowerCase() : locales.entries.Lcz_Adult.toLowerCase();\n    const childLabel = childCount > 1 ? locales.entries.Lcz_Children.toLowerCase() : locales.entries.Lcz_Child.toLowerCase();\n    const infantLabel = infantCount > 1 ? locales.entries.Lcz_Infants.toLowerCase() : locales.entries.Lcz_Infant.toLowerCase();\n\n    const parts = [];\n    if (adultCount > 0) {\n      parts.push(`${adultCount} ${adultLabel}`);\n    }\n    if (childCount > 0) {\n      parts.push(`${childCount} ${childLabel}`);\n    }\n    if (infantCount > 0) {\n      parts.push(`${infantCount} ${infantLabel}`);\n    }\n\n    return parts.join('&nbsp&nbsp&nbsp&nbsp');\n  }\n  private getSmokingLabel() {\n    if (this.booking.is_direct) {\n      if (!this.room.smoking_option) {\n        return null;\n      }\n      const currRT = calendar_data.roomsInfo.find(rt => rt.id === this.room.roomtype.id);\n      if (currRT) {\n        const smoking_option = currRT['smoking_option']?.allowed_smoking_options;\n        if (smoking_option) {\n          return smoking_option.find(s => s.code === this.room.smoking_option)?.description;\n        }\n        return null;\n      }\n      return null;\n    }\n    return this.room.ota_meta?.smoking_preferences;\n  }\n\n  private getBedName() {\n    if (this.booking.is_direct) {\n      const bed = this.bedPreferences.find(p => p.CODE_NAME === this.room?.bed_preference?.toString());\n      if (!bed) {\n        return;\n      }\n      return bed[`CODE_VALUE_${this.language}`] ?? bed.CODE_VALUE_EN;\n    }\n    return this.room.ota_meta?.bed_preferences;\n  }\n  private renderModalMessage() {\n    switch (this.modalReason) {\n      case 'delete':\n        return `${locales.entries['Lcz_AreYouSureDoYouWantToRemove ']} ${this.room.roomtype.name} ${this.room.unit ? (this.room.unit as IUnit).name : ''} ${\n          locales.entries.Lcz_FromThisBooking\n        }`;\n      case 'checkin':\n        return `Are you sure you want to Check In this unit?\n`;\n      case 'checkout':\n        return `Are you sure you want to Check Out this unit?`;\n      default:\n        return '';\n    }\n  }\n  private handleCheckIn() {\n    const { adult_nbr, children_nbr, infant_nbr } = this.room.occupancy;\n    if (this.room.sharing_persons.length < adult_nbr + children_nbr + infant_nbr) {\n      return this.showGuestModal();\n    }\n    return this.renderModalMessage();\n  }\n  private getMainGuest() {\n    return this.room.sharing_persons?.find(p => p.is_main);\n  }\n\n  render() {\n    const bed = this.getBedName();\n    return (\n      <Host class=\"p-1 d-flex m-0\">\n        <ir-button\n          variant=\"icon\"\n          id=\"drawer-icon\"\n          data-toggle=\"collapse\"\n          data-target={`#roomCollapse-${this.room.identifier?.split(' ').join('')}`}\n          aria-expanded={this.collapsed ? 'true' : 'false'}\n          aria-controls=\"myCollapse\"\n          class=\"mr-1\"\n          icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\n          onClickHandler={() => {\n            this.collapsed = !this.collapsed;\n          }}\n          style={{ '--icon-size': '1.6rem' }}\n        ></ir-button>\n        <div class=\"flex-fill m-0 \">\n          <div class=\"d-flex align-items-start justify-content-between sm-mb-1\">\n            <p class=\"m-0 p-0\">\n              <span class=\"m-0 p-0\" style={{ fontWeight: '600' }}>\n                {this.myRoomTypeFoodCat || ''}{' '}\n              </span>{' '}\n              {this.mealCodeName} {this.room.rateplan.is_non_refundable && ` - ${locales.entries.Lcz_NonRefundable}`}{' '}\n            </p>\n            {/*this.room.My_Room_type.My_Room_type_desc[0].CUSTOM_TXT || ''*/}\n            <div class=\"d-flex m-0 p-0 align-items-center room_actions_btns\">\n              <span class=\"p-0 m-0 font-weight-bold\">{formatAmount(this.currency, this.room['gross_total'])}</span>\n              {this.hasRoomEdit && this.isEditable && (\n                <ir-button\n                  id={`roomEdit-${this.room.identifier}`}\n                  variant=\"icon\"\n                  icon_name=\"edit\"\n                  // class=\"mx-1\"\n                  style={colorVariants.secondary}\n                  onClickHandler={this.handleEditClick.bind(this)}\n                ></ir-button>\n              )}\n              {this.hasRoomDelete && this.isEditable && (\n                <ir-button\n                  variant=\"icon\"\n                  onClickHandler={this.openModal.bind(this, 'delete')}\n                  id={`roomDelete-${this.room.identifier}`}\n                  icon_name=\"trash\"\n                  style={colorVariants.danger}\n                ></ir-button>\n              )}\n            </div>\n          </div>\n          <div class=\"d-flex align-items-center sm-mb-1\">\n            <ir-date-view\n              class=\"mr-1  flex-grow-1\"\n              style={{ width: 'fit-content' }}\n              from_date={this.room.from_date}\n              to_date={this.room.to_date}\n              showDateDifference={false}\n            ></ir-date-view>\n            {!isSingleUnit(this.room.roomtype.id) && calendar_data.is_frontdesk_enabled && this.room.unit && (\n              <div class={'d-flex justify-content-center align-items-center'}>\n                <ir-tooltip message={(this.room.unit as IUnit).name} customSlot>\n                  <span slot=\"tooltip-trigger\" class={`light-blue-bg  ${this.hasCheckIn || this.hasCheckOut ? 'mr-2' : ''} `}>\n                    {(this.room.unit as IUnit).name}\n                  </span>\n                </ir-tooltip>\n              </div>\n            )}\n            {this.hasCheckIn && (\n              <ir-button onClickHandler={this.handleCheckIn.bind(this)} id=\"checkin\" btn_color=\"outline\" size=\"sm\" text={locales.entries.Lcz_CheckIn}></ir-button>\n            )}\n            {this.hasCheckOut && (\n              <ir-button onClickHandler={this.openModal.bind(this, 'checkout')} id=\"checkout\" btn_color=\"outline\" size=\"sm\" text={locales.entries.Lcz_CheckOut}></ir-button>\n            )}\n          </div>\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n            <p class=\"m-0 p-0\">{`${this.mainGuest.first_name || ''} ${this.mainGuest.last_name || ''}`}</p>\n            {this.room.rateplan.selected_variation.adult_nbr > 0 &&\n              (this.room.unit ? (\n                <ir-tooltip message={'View guests'} class=\"m-0 p-0\" customSlot>\n                  <ir-button\n                    class=\"m-0 p-0\"\n                    slot=\"tooltip-trigger\"\n                    btn_color=\"link\"\n                    renderContentAsHtml\n                    onClickHandler={() => this.showGuestModal()}\n                    size=\"sm\"\n                    btnStyle={{ width: 'fit-content', margin: '0', padding: '0', fontSize: 'inherit', textAlign: 'center', lineHeight: '1.2' }}\n                    text={this.formatVariation(this.room.occupancy)}\n                  ></ir-button>\n                </ir-tooltip>\n              ) : (\n                <span innerHTML={this.formatVariation(this.room.occupancy)}></span>\n              ))}\n            {bed && <p class=\"m-0 p-0\">({bed})</p>}\n          </div>\n          <div class=\"d-flex align-items-center\" style={{ marginTop: '0.5rem', marginBottom: '0.875rem', gap: '0.5rem' }}>\n            <p class=\"m-0 p-0\">Expected departure time:</p>\n            <ir-select\n              selectedValue={this.room.departure_time?.code}\n              LabelAvailable={false}\n              showFirstOption={false}\n              onSelectChange={e => {\n                this.updateDepartureTime(e.detail);\n              }}\n              data={this.departureTime?.map(d => ({\n                text: d[`CODE_VALUE_${this.language?.toUpperCase()}`] ?? d[`CODE_VALUE_EN`],\n                value: d.CODE_NAME,\n              }))}\n            ></ir-select>\n          </div>\n          <div class=\"collapse\" id={`roomCollapse-${this.room.identifier?.split(' ').join('')}`}>\n            <div class=\"d-flex sm-mb-1 sm-mt-1\">\n              <div class=\" sm-padding-top\">\n                <p class=\"sm-padding-right\" style={{ fontWeight: '600' }}>{`${locales.entries.Lcz_Breakdown}:`}</p>\n              </div>\n              <div class={'flex-fill'}>\n                <table>\n                  {this.room.days.length > 0 &&\n                    this.room.days.map(room => {\n                      return (\n                        <tr>\n                          <td class={'pr-2 text-right'}>{_getDay(room.date)}</td>\n                          <td class=\"text-right\">{formatAmount(this.currency, room.amount)}</td>\n                          {room.cost > 0 && room.cost !== null && <td class=\"pl-2 text-left night-cost\">{formatAmount(this.currency, room.cost)}</td>}\n                        </tr>\n                      );\n                    })}\n                  <tr class={''}>\n                    <th class=\"text-right pr-2 subtotal_row\">{locales.entries.Lcz_SubTotal}</th>\n                    <th class=\"text-right subtotal_row\">{formatAmount(this.currency, this.room.total)}</th>\n                    {this.room.gross_cost > 0 && this.room.gross_cost !== null && <th class=\"pl-2 text-right night-cost\">{formatAmount(this.currency, this.room.cost)}</th>}\n                  </tr>\n                  {this.booking.is_direct ? (\n                    <Fragment>\n                      {(() => {\n                        const filtered_data = calendar_data.taxes.filter(tx => tx.pct > 0);\n                        return filtered_data.map(d => {\n                          return (\n                            <tr>\n                              <td class=\"text-right pr-2\">\n                                {d.is_exlusive ? locales.entries.Lcz_Excluding : locales.entries.Lcz_Including} {d.name} ({d.pct}%)\n                              </td>\n                              <td class=\"text-right\">{formatAmount(this.currency, (this.room.total * d.pct) / 100)}</td>\n                              {this.room.gross_cost > 0 && this.room.gross_cost !== null && (\n                                <td class=\"pl-2 text-right night-cost\">{formatAmount(this.currency, (this.room.cost * d.pct) / 100)}</td>\n                              )}\n                            </tr>\n                          );\n                        });\n                      })()}\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      {(() => {\n                        const filtered_data = this.room.ota_taxes.filter(tx => tx.amount > 0);\n                        return filtered_data.map(d => {\n                          return (\n                            <tr>\n                              <td class=\"text-right pr-2\">\n                                {d.is_exlusive ? locales.entries.Lcz_Excluding : locales.entries.Lcz_Including} {d.name}\n                              </td>\n                              <td class=\"text-right\">\n                                {d.currency.symbol}\n                                {d.amount}\n                              </td>\n                            </tr>\n                          );\n                        });\n                      })()}\n                    </Fragment>\n                  )}\n                </table>\n              </div>\n            </div>\n            <ir-label labelText={`${locales.entries.Lcz_SmokingOptions}:`} display=\"inline\" content={this.getSmokingLabel()}></ir-label>\n            {this.booking.is_direct && (\n              <Fragment>\n                {this.room.rateplan.cancelation && (\n                  <ir-label labelText={`${locales.entries.Lcz_Cancellation}:`} display=\"inline\" content={this.room.rateplan.cancelation || ''} renderContentAsHtml></ir-label>\n                )}\n                {this.room.rateplan.guarantee && (\n                  <ir-label labelText={`${locales.entries.Lcz_Guarantee}:`} display=\"inline\" content={this.room.rateplan.guarantee || ''} renderContentAsHtml></ir-label>\n                )}\n              </Fragment>\n            )}\n            {this.room.ota_meta && (\n              <div>\n                <ir-label labelText={`${locales.entries.Lcz_MealPlan}:`} display=\"inline\" content={this.room.ota_meta.meal_plan}></ir-label>\n                <ir-label labelText={`${locales.entries.Lcz_Policies}:`} display=\"inline\" content={this.room.ota_meta.policies}></ir-label>\n              </div>\n            )}\n            {/* {this.bookingEvent.is_direct && <ir-label labelText={`${locales.entries.Lcz_MealPlan}:`} content={this.mealCodeName}></ir-label>} */}\n          </div>\n        </div>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={this.modalReason === 'delete' ? locales.entries.Lcz_Delete : locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={this.modalReason === 'delete' ? 'danger' : 'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={this.renderModalMessage()}\n        ></ir-modal>\n      </Host>\n    );\n  }\n  private showGuestModal(): void {\n    const { adult_nbr, children_nbr, infant_nbr } = this.room.occupancy;\n    this.openSidebar.emit({\n      type: 'room-guest',\n      payload: {\n        roomName: (this.room.unit as IUnit)?.name,\n        sharing_persons: this.room.sharing_persons,\n        totalGuests: adult_nbr + children_nbr + infant_nbr,\n        checkin: this.hasCheckIn,\n        identifier: this.room.identifier,\n      },\n    });\n  }\n}\n","import { SharedPerson } from '@/models/booking.dto';\nimport moment from 'moment';\nimport { FactoryArg, MaskedRange } from 'imask';\n\nexport const defaultGuest: SharedPerson = {\n  id: -1,\n  full_name: '',\n  country_id: null,\n  dob: '',\n  id_info: {\n    type: {\n      code: null,\n      description: null,\n    },\n    number: '',\n  },\n  address: null,\n  alternative_email: null,\n  cci: null,\n  city: null,\n  country: undefined,\n  country_phone_prefix: null,\n  email: null,\n  first_name: '',\n  last_name: '',\n  mobile: null,\n  nbr_confirmed_bookings: 0,\n  notes: null,\n  password: null,\n  subscribe_to_news_letter: null,\n};\n/**Date of birth mask for room guests  with min */\nexport const dateMask: FactoryArg = {\n  mask: Date,\n  pattern: 'DD/MM/YYYY',\n  lazy: false,\n  min: new Date(1900, 0, 1),\n  max: new Date(),\n  format: date => moment(date).format('DD/MM/YYYY'),\n  parse: str => moment(str, 'DD/MM/YYYY').toDate(),\n  autofix: true,\n  placeholderChar: '_',\n  blocks: {\n    YYYY: {\n      mask: MaskedRange,\n      from: 1970,\n      to: new Date().getFullYear(),\n      placeholderChar: 'Y',\n    },\n    MM: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      placeholderChar: 'M',\n    },\n    DD: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      placeholderChar: 'D',\n    },\n  },\n};\n",":host {\n  display: block;\n  height: 100%;\n  position: relative;\n  text-align: start !important;\n}\n.id-select {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right-width: 0;\n}\n:host {\n  display: block;\n  width: 100%;\n}\n\n.guest-grid > * {\n  height: 100%;\n}\n\n.guests-labels {\n  display: none;\n}\n.guest_label {\n  width: 100px;\n  color: #6b6f82;\n}\n.sharing_persons_label {\n  display: none;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n.guest_document input {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.guests-labels *,\n.sharing_persons_label {\n  margin-bottom: 0.5rem;\n  padding-bottom: 0;\n}\n\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n  .sharing_persons_label {\n    display: block;\n  }\n  .guest_country_picker {\n    margin-bottom: 3px;\n  }\n  .guest-grid {\n    display: grid;\n    grid-template-columns: 2fr 2fr 2fr 2fr 5fr;\n    gap: 0.5rem;\n    align-items: flex-start;\n  }\n\n  .guest_label,\n  .sharing_persons_heading,\n  .main_guest_heading {\n    display: none;\n  }\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { SharedPerson, validateSharedPerson, ZIdInfo, ZSharedPerson } from '@/models/booking.dto';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, h } from '@stencil/core';\nimport moment from 'moment';\nimport { dateMask, defaultGuest } from './data';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry, IEntries } from '@/models/IBooking';\nimport { ZodError } from 'zod';\n@Component({\n  tag: 'ir-room-guests',\n  styleUrls: ['ir-room-guests.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrRoomGuests {\n  /**\n   * The name of the room currently being displayed.\n   * Used to label the room in the user interface for clarity.\n   */\n  @Prop() roomName: string;\n\n  /**\n   * A unique identifier for the room.\n   * This is used to distinguish between rooms, especially when performing operations like saving or checking in guests.\n   */\n  @Prop() identifier: string;\n\n  /**\n   * An array of people sharing the room.\n   * Contains information about the {locales.entries.Lcz_MainGuest} and additional guests, such as their name, date of birth, {locales.entries.Lcz_Nationality}, and ID details.\n   */\n  @Prop() sharedPersons: SharedPerson[] = [];\n\n  /**\n   * The total number of guests for the room.\n   * Determines how many guest input forms to display in the UI.\n   */\n  @Prop() totalGuests: number = 0;\n\n  /**\n   * A list of available countries.\n   * Used to populate dropdowns for selecting the {locales.entries.Lcz_Nationality} of guests.\n   */\n  @Prop() countries: ICountry[];\n\n  /**\n   * A boolean indicating whether the room is in the process of being checked in.\n   * If true, additional actions like saving the room state as \"checked in\" are performed.\n   */\n  @Prop() checkIn: boolean;\n\n  /**\n   * The language used for displaying text content in the component.\n   * Defaults to English ('en'), but can be set to other supported languages.\n   */\n  @Prop() language: string = 'en';\n\n  /**\n   * A unique booking number associated with the room.\n   * This is used for backend operations like saving guest information or checking in the room.\n   */\n  @Prop() bookingNumber: string;\n\n  @State() guests: SharedPerson[] = [];\n  @State() idTypes: IEntries[] = [];\n  @State() error: Record<string, boolean> = {};\n  @State() isLoading: boolean;\n  @State() propertyCountry: ICountry;\n  @State() autoValidate = false;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event() updateRoomGuests: EventEmitter<{ identifier: string; guests: SharedPerson[] }>;\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n    this.initializeGuests();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      const [country, idTypes] = await Promise.all([this.bookingService.getUserDefaultCountry(), this.bookingService.getSetupEntriesByTableName('_ID_TYPE')]);\n      this.idTypes = idTypes;\n      if (country) {\n        this.propertyCountry = this.countries.find(c => c.id === country.COUNTRY_ID);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private initializeGuests(): void {\n    let guests = [];\n    if (this.totalGuests > this.sharedPersons.length) {\n      const defaultGuestsCount = this.totalGuests - this.sharedPersons.length;\n      guests = [\n        ...this.sharedPersons,\n        ...Array(defaultGuestsCount).fill({\n          ...defaultGuest,\n          id_info: {\n            ...defaultGuest.id_info,\n            type: {\n              code: this.idTypes[0]?.CODE_NAME || '001',\n              description: this.idTypes[0]?.CODE_VALUE_EN || '',\n            },\n            number: '',\n          },\n        }),\n      ];\n    } else {\n      guests = [...this.sharedPersons];\n    }\n    guests = guests.map(g => ({ ...g, dob: new Date(g.dob).getFullYear() === 1900 ? null : g.dob }));\n    this.guests = guests.map(g => ({ ...g, dob: g.dob ? moment(new Date(g.dob)).format('DD/MM/YYYY') : '', country_id: g.country ? g.country.id : null }));\n  }\n\n  private updateGuestInfo(index: number, params: Partial<SharedPerson>) {\n    const tempGuests = [...this.guests];\n    let tempGuest = tempGuests[index];\n    tempGuest = { ...tempGuest, ...params };\n    tempGuests[index] = tempGuest;\n    this.guests = [...tempGuests];\n  }\n\n  private async saveGuests() {\n    try {\n      this.error = {};\n      this.autoValidate = true;\n      // ZSharedPersons.parse(this.guests);\n      for (const guest of this.guests) {\n        validateSharedPerson(guest);\n      }\n      await this.bookingService.handleExposedRoomGuests({\n        booking_nbr: this.bookingNumber,\n        identifier: this.identifier,\n        guests: this.guests\n          .map(g => {\n            if (!g.first_name && g.id === -1) {\n              return null;\n            }\n            return { ...g, dob: g.dob ? moment(g.dob, 'DD/MM/YYYY').format('YYYY-MM-DD') : null };\n          })\n          .filter(Boolean),\n      });\n      if (this.checkIn) {\n        await this.bookingService.handleExposedRoomInOut({\n          booking_nbr: this.bookingNumber,\n          room_identifier: this.identifier,\n          status: '001',\n        });\n      }\n      this.closeModal.emit(null);\n      this.updateRoomGuests.emit({ identifier: this.identifier, guests: this.guests });\n      this.resetBookingEvt.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        let errors = {};\n        error.issues.forEach(e => {\n          errors[e.path[e.path.length - 1]] = true;\n        });\n        this.error = { ...errors };\n      }\n    }\n  }\n\n  render() {\n    if (this.isLoading) {\n      return (\n        <div class={'loading-container'}>\n          <ir-spinner></ir-spinner>\n        </div>\n      );\n    }\n    return (\n      <form\n        class=\"sheet-container\"\n        style={{ minWidth: '300px' }}\n        onSubmit={e => {\n          e.preventDefault();\n          this.saveGuests();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={`Room ${this.roomName}`} displayContext=\"sidebar\"></ir-title>\n        <section class={'sheet-body px-1'}>\n          <div class=\"\">\n            <div class=\"guest-grid guests-labels\">\n              <p class=\"\">{locales.entries.Lcz_MainGuest}</p>\n              <p class=\"\"></p>\n              <p class=\" \">{locales.entries.Lcz_DOB}</p>\n              <p class=\"\">{locales.entries.Lcz_Nationality}</p>\n              <p class=\" \">{locales.entries.Lcz_Documents}</p>\n            </div>\n            <h5 class=\"main_guest_heading\">{locales.entries.Lcz_MainGuest}</h5>\n            {this.guests.map((guest, idx) => {\n              let isRowValid = true;\n              try {\n                validateSharedPerson(guest);\n              } catch (error) {\n                isRowValid = false;\n              }\n              console.log(`row ${idx}=>${isRowValid}`);\n              return (\n                <Fragment>\n                  {idx === 1 && (\n                    <div class=\"d-flex mx-0 px-0\">\n                      <h5 class=\"mx-0 px-0 sharing_persons_heading\">{locales.entries.Lcz_PersonsSharingRoom}</h5>\n                      <p class=\"mx-0 px-0 sharing_persons_label\">{locales.entries.Lcz_PersonsSharingRoom}</p>\n                    </div>\n                  )}\n                  <div key={idx} class=\"guest-grid\">\n                    <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                      <p class=\"guest_label\">First name</p>\n                      <ir-input-text\n                        class=\"flex-grow-1 h-100\"\n                        id={`first_name_${idx}`}\n                        zod={ZSharedPerson.pick({ first_name: true })}\n                        error={!!this.error['first_name'] && !isRowValid}\n                        autoValidate={this.autoValidate}\n                        wrapKey=\"first_name\"\n                        placeholder=\"First name\"\n                        onTextChange={e => this.updateGuestInfo(idx, { first_name: e.detail })}\n                        value={guest.first_name}\n                        maxLength={40}\n                      ></ir-input-text>\n                    </div>\n                    <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                      <p class=\"guest_label\">Last name</p>\n                      <ir-input-text\n                        maxLength={40}\n                        class=\"flex-grow-1 h-100\"\n                        id={`last_name_${idx}`}\n                        zod={ZSharedPerson.pick({ last_name: true })}\n                        error={!!this.error['last_name'] && !isRowValid}\n                        autoValidate={this.autoValidate}\n                        wrapKey=\"last_name\"\n                        placeholder=\"Last name\"\n                        onTextChange={e => this.updateGuestInfo(idx, { last_name: e.detail })}\n                        value={guest.last_name}\n                      ></ir-input-text>\n                    </div>\n                    <div class=\"flex-grow-0 m-0 p-0 h-100 d-flex align-items-center\">\n                      <p class=\"guest_label\">{locales.entries.Lcz_DOB}</p>\n                      <ir-input-text\n                        class=\"flex-grow-1 h-100\"\n                        id={`dob_${idx}`}\n                        zod={ZSharedPerson.pick({ dob: true })}\n                        error={!!this.error['dob'] && !isRowValid}\n                        autoValidate={this.autoValidate}\n                        wrapKey=\"dob\"\n                        mask={dateMask}\n                        placeholder=\"\"\n                        onTextChange={e => {\n                          this.updateGuestInfo(idx, { dob: e.detail });\n                        }}\n                        value={guest.dob}\n                      ></ir-input-text>\n                    </div>\n                    <div class=\" m-0 p-0 d-flex align-items-center\">\n                      <p class=\"guest_label\">{locales.entries.Lcz_Nationality}</p>\n                      <div class=\"mx-0 flex-grow-1  h-100\">\n                        <ir-country-picker\n                          class=\"h-100\"\n                          propertyCountry={this.propertyCountry}\n                          id={`{locales.entries.Lcz_Nationality}_${idx}`}\n                          error={!!this.error['country_id'] && !guest.country_id}\n                          country={this.countries?.find(c => c.id?.toString() === guest.country?.id?.toString())}\n                          onCountryChange={e => this.updateGuestInfo(idx, { country_id: e.detail?.id?.toString() ?? null, country: e.detail })}\n                          countries={this.countries}\n                        ></ir-country-picker>\n                      </div>\n                    </div>\n                    <div class=\"flex-grow-1 m-0 p-0 d-flex align-items-center\">\n                      <p class=\"guest_label\">{locales.entries.Lcz_Documents}</p>\n                      <div class={' d-flex m-0 flex-grow-1 h-100'}>\n                        <ir-select\n                          selectForcedStyles={{\n                            borderTopRightRadius: '0px',\n                            borderBottomRightRadius: '0px',\n                            borderRight: '0',\n                          }}\n                          selectStyles={'rounded-top-0 rounded-bottom-0'}\n                          onSelectChange={e => {\n                            this.updateGuestInfo(idx, {\n                              id_info: {\n                                ...this.guests[idx].id_info,\n                                type: {\n                                  code: e.detail,\n                                  description: '',\n                                },\n                              },\n                            });\n                          }}\n                          selectedValue={guest.id_info.type.code}\n                          LabelAvailable={false}\n                          showFirstOption={false}\n                          data={this.idTypes?.map(t => ({ text: t[`CODE_VALUE_${this.language.toUpperCase()}`] ?? t[`CODE_VALUE_EN`], value: t.CODE_NAME }))}\n                        ></ir-select>\n                        <ir-input-text\n                          autoValidate={this.autoValidate}\n                          maxLength={18}\n                          placeholder=\"12345\"\n                          class=\"flex-grow-1 guest_document\"\n                          type=\"text\"\n                          inputForcedStyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}\n                          value={guest.id_info.number}\n                          zod={ZIdInfo.pick({ number: true })}\n                          error={!!this.error['number'] && !isRowValid}\n                          wrapKey=\"number\"\n                          inputStyles=\"form-control\"\n                          onTextChange={e =>\n                            this.updateGuestInfo(idx, {\n                              id_info: {\n                                ...this.guests[idx].id_info,\n                                number: e.detail,\n                              },\n                            })\n                          }\n                        ></ir-input-text>\n                      </div>\n                    </div>\n                  </div>\n                </Fragment>\n              );\n            })}\n          </div>\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button onClick={() => this.closeModal.emit(null)} class={`flex-fill`} text={locales.entries.Lcz_Cancel} btn_color=\"secondary\"></ir-button>\n          <ir-button\n            btn_type=\"submit\"\n            class={'flex-fill'}\n            isLoading={isRequestPending('/Handle_Exposed_Room_Guests')}\n            text={this.checkIn ? locales.entries.Lcz_CheckIn : locales.entries.Lcz_Save}\n            btn_color=\"primary\"\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n","* {\n  margin: 0;\n  padding: 0;\n}\n:host {\n  display: flex;\n  margin-bottom: 5px;\n  gap: 5px;\n}\n.label_title {\n  min-width: max-content;\n  padding: 0;\n  margin: 0;\n  font-weight: 600;\n}\n.ota-message-list {\n  margin: 0 3px;\n  padding: 0;\n  overflow: hidden;\n  width: 100%;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  /* list-style: circle !important; */\n}\n.ota-message-item {\n  width: 100%;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n}\n.ota-message-item::before {\n  content: '- ';\n  margin-right: 0.25rem;\n}\n\n.ota-visibility-toggle {\n  background: white;\n  color: var(--blue);\n  padding: 0;\n  margin: 0;\n  margin-left: 3px;\n  font-size: 12px;\n  border: 0;\n}\n.ota-visibility-toggle:hover {\n  color: #355270;\n}\n.ota-message-list {\n  margin: 0 3px;\n  padding: 0;\n  overflow: hidden;\n  width: 100%;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  white-space: normal;\n  list-style: none;\n}\n.ota-message-item {\n  width: 100%;\n  line-height: 1.5;\n  margin: 0 0 0 1.2em; /* indent for dash */\n  padding: 0;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  white-space: normal;\n  position: relative;\n}\n/* .ota-message-item::before {\n  content: '-';\n  position: absolute;\n  left: 0;\n} */\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { IOtaNotes } from '@/models/booking.dto';\nimport locales from '@/stores/locales.store';\n@Component({\n  tag: 'ota-label',\n  styleUrl: 'ota-label.css',\n  scoped: true,\n})\nexport class OtaLabel {\n  /**\n   * Label displayed as the section title.\n   */\n  @Prop() label: string;\n\n  /**\n   * Array of OTA notes to display in the list.\n   */\n  @Prop() remarks: IOtaNotes[];\n\n  /**\n   * Maximum number of remarks to display before showing the \"Show More\" button.\n   */\n  @Prop() maxVisibleItems: number = 3;\n\n  /**\n   * Internal state that determines whether all remarks are shown or only the limited number.\n   */\n  @State() showAll: boolean = false;\n\n  /**\n   * Toggles between showing all remarks or only a limited number.\n   *\n   * Example:\n   * ```ts\n   * this.toggleShowAll(); // flips showAll state\n   * ```\n   */\n  private toggleShowAll = () => {\n    this.showAll = !this.showAll;\n  };\n\n  render() {\n    if (!this.remarks) {\n      return null;\n    }\n\n    const displayedRemarks = this.showAll ? this.remarks : this.remarks.slice(0, this.maxVisibleItems);\n\n    return (\n      <Host>\n        <p class={'label_title'}>{this.label}</p>\n        <ul class=\"ota-message-list\">\n          {displayedRemarks.map((remark, index) => (\n            <li key={v4()} class=\"ota-message-item\">\n              {remark.statement}{' '}\n              {this.remarks.length > this.maxVisibleItems && index === displayedRemarks.length - 1 && (\n                <button class=\"ota-visibility-toggle\" onClick={this.toggleShowAll}>\n                  {this.showAll ? locales.entries.Lcz_ShowLess : locales.entries.Lcz_ShowMore}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n        {/* Show toggle button if there are more remarks than `maxVisibleItems` */}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}