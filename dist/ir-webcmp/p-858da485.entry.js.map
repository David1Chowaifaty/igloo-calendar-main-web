{"version":3,"names":["irCheckboxCss","IrCheckboxStyle0","IrCheckbox","constructor","hostRef","this","checked","checkboxId","v4","currentChecked","handleCheckedChange","newValue","componentWillLoad","componentDidLoad","checkboxRef","setAttribute","JSON","stringify","handleCheckChange","checkChange","emit","render","h","Host","key","disabled","name","onClick","bind","id","indeterminate","value","ref","type","role","class","xmlns","height","width","viewBox","fill","d","tabindex","label","htmlFor"],"sources":["src/components/ui/ir-checkbox/ir-checkbox.css?tag=ir-checkbox&encapsulation=scoped","src/components/ui/ir-checkbox/ir-checkbox.tsx"],"sourcesContent":[":host {\n  display: flex;\n  align-items: center;\n  width: fit-content;\n}\nbutton {\n  all: unset;\n}\n.CheckboxRoot {\n  background-color: white;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #cacfe7;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n.CheckboxRoot:disabled {\n  background-color: #eceff1;\n  border-color: rgba(118, 118, 118, 0.3);\n  pointer-events: none;\n}\n\n.CheckboxRoot[data-state='checked'] {\n  background-color: #1e9ff2;\n  color: white;\n  border-color: #1e9ff2;\n}\ninput[type='checkbox'] {\n  background-color: initial;\n  cursor: default;\n  appearance: auto;\n  box-sizing: border-box;\n  margin: 3px 3px 3px 4px;\n  padding: initial;\n  border: initial;\n}\n.checkbox {\n  transform: translateX(-100%);\n  position: absolute;\n  pointer-events: none;\n  opacity: 0;\n  margin: 0px;\n  width: 20px;\n  height: 20px;\n}\n","import { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  tag: 'ir-checkbox',\n  styleUrl: 'ir-checkbox.css',\n  scoped: true,\n})\nexport class IrCheckbox {\n  @Prop() checked: boolean = false;\n  @Prop() label: string;\n  @Prop() checkboxId = v4();\n  @Prop() name: string;\n  @Prop() indeterminate: boolean;\n  @Prop() disabled: boolean;\n\n  @State() currentChecked = false;\n\n  @Event() checkChange: EventEmitter<boolean>;\n\n  @Watch('checked')\n  handleCheckedChange(newValue: boolean) {\n    if (newValue === this.currentChecked) {\n      return;\n    }\n    this.currentChecked = this.checked;\n  }\n\n  private checkboxRef: HTMLButtonElement;\n\n  componentWillLoad() {\n    this.currentChecked = this.checked;\n  }\n  componentDidLoad() {\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.checked));\n    }\n  }\n  handleCheckChange() {\n    this.currentChecked = !this.currentChecked;\n    if (this.checkboxRef) {\n      this.checkboxRef.setAttribute('aria-checked', JSON.stringify(this.currentChecked));\n    }\n    this.checkChange.emit(this.currentChecked);\n  }\n  render() {\n    return (\n      <Host>\n        <button\n          disabled={this.disabled}\n          name={this.name}\n          onClick={this.handleCheckChange.bind(this)}\n          id={this.checkboxId}\n          data-state={this.currentChecked || this.indeterminate ? 'checked' : 'unchecked'}\n          value={'on'}\n          ref={ref => (this.checkboxRef = ref)}\n          type=\"button\"\n          role=\"checkbox\"\n          class=\"CheckboxRoot\"\n        >\n          {this.currentChecked && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path\n                fill=\"currentColor\"\n                d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\n              />\n            </svg>\n          )}\n          {this.indeterminate && (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\n              <path fill=\"currentColor\" d=\"M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z\" />\n            </svg>\n          )}\n        </button>\n        <input type=\"checkbox\" indeterminate={this.indeterminate} aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.currentChecked} class=\"checkbox\" />\n        {this.label && <label htmlFor={this.checkboxId}>{this.label}</label>}\n      </Host>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAgB,s1BACtB,MAAAC,EAAeD,E,MCOFE,EAAU,MALvB,WAAAC,CAAAC,G,mDAMUC,KAAAC,QAAmB,MAEnBD,KAAAE,WAAaC,IAKZH,KAAAI,eAAiB,K,CAK1B,mBAAAC,CAAoBC,GAClB,GAAIA,IAAaN,KAAKI,eAAgB,CACpC,M,CAEFJ,KAAKI,eAAiBJ,KAAKC,O,CAK7B,iBAAAM,GACEP,KAAKI,eAAiBJ,KAAKC,O,CAE7B,gBAAAO,GACE,GAAIR,KAAKS,YAAa,CACpBT,KAAKS,YAAYC,aAAa,eAAgBC,KAAKC,UAAUZ,KAAKC,S,EAGtE,iBAAAY,GACEb,KAAKI,gBAAkBJ,KAAKI,eAC5B,GAAIJ,KAAKS,YAAa,CACpBT,KAAKS,YAAYC,aAAa,eAAgBC,KAAKC,UAAUZ,KAAKI,gB,CAEpEJ,KAAKc,YAAYC,KAAKf,KAAKI,e,CAE7B,MAAAY,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,UAAAE,IAAA,2CACEC,SAAUpB,KAAKoB,SACfC,KAAMrB,KAAKqB,KACXC,QAAStB,KAAKa,kBAAkBU,KAAKvB,MACrCwB,GAAIxB,KAAKE,WAAU,aACPF,KAAKI,gBAAkBJ,KAAKyB,cAAgB,UAAY,YACpEC,MAAO,KACPC,IAAKA,GAAQ3B,KAAKS,YAAckB,EAChCC,KAAK,SACLC,KAAK,WACLC,MAAM,gBAEL9B,KAAKI,gBACJa,EAAA,OAAAE,IAAA,2CAAKY,MAAM,6BAA6BC,OAAO,KAAKC,MAAM,QAAQC,QAAQ,eACxEjB,EAAA,QAAAE,IAAA,2CACEgB,KAAK,eACLC,EAAE,0LAIPpC,KAAKyB,eACJR,EAAA,OAAAE,IAAA,2CAAKY,MAAM,6BAA6BC,OAAO,KAAKC,MAAM,QAAQC,QAAQ,eACxEjB,EAAA,QAAAE,IAAA,2CAAMgB,KAAK,eAAeC,EAAE,2GAIlCnB,EAAA,SAAAE,IAAA,2CAAOS,KAAK,WAAWH,cAAezB,KAAKyB,cAAa,cAAc,OAAOY,SAAS,KAAKX,MAAM,KAAKzB,QAASD,KAAKI,eAAgB0B,MAAM,aACzI9B,KAAKsC,OAASrB,EAAA,SAAAE,IAAA,2CAAOoB,QAASvC,KAAKE,YAAaF,KAAKsC,O","ignoreList":[]}