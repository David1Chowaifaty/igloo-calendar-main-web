{"version":3,"names":["irPaymentActionCss","IrPaymentActionStyle0","IrPaymentAction","render","paymentActionType","this","paymentAction","type","toLowerCase","isFutureAction","h","key","class","height","width","xmlns","viewBox","fill","d","amount","moment","Date","due_on","isSame","formatAmount","currency","symbol","format","style","btn_color","text","size","onClickHandler","generatePayment","emit"],"sources":["src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-action/ir-payment-action.css?tag=ir-payment-action&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-action/ir-payment-action.tsx"],"sourcesContent":[":host {\n  display: block;\n  --label-col: 6rem; /* width for icon + status text */\n  --amount-col: 1ch; /* width for currency (tabular) */\n  --payment-action-bg: rgba(255, 73, 97, 10%);\n  --payment-action-border: rgba(255, 73, 97, 40%);\n}\n\n.action-container.overdue {\n  --payment-action-bg: rgba(255, 73, 97, 5%);\n  --payment-action-border: rgba(255, 73, 97, 40%);\n}\n.action-container.future {\n  --payment-action-bg: rgb(30, 159, 242, 5%);\n  --payment-action-border: rgba(30, 159, 242, 40%);\n}\n.action-container.overdue:hover {\n  --payment-action-bg: rgba(255, 73, 97, 10%);\n  --payment-action-border: rgba(255, 73, 97, 50%);\n}\n.action-container.future:hover {\n  --payment-action-bg: rgb(30, 159, 242, 10%);\n  --payment-action-border: rgba(30, 159, 242, 50%);\n}\n\n/* One grid per row, but with fixed track sizes so all rows align */\n.action-container {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  background: var(--payment-action-bg);\n  padding: 0.5rem 1rem;\n  box-sizing: border-box; /* (fixed the typo) */\n  border: 1px solid var(--payment-action-border);\n  border-radius: 0.25rem;\n  transition: all 0.3s ease-in-out;\n}\n\n.overdue_action,\n.future_action {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 0.25rem;\n  min-width: 0;\n}\n.action-container.overdue .overdue_action {\n  color: #ff4961;\n}\n.future_action {\n  color: #1e9ff2;\n}\n\n.payment-meta {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.alert-message {\n  display: none;\n}\n.action-container.overdue .alert-message {\n  text-transform: capitalize;\n}\n.amount_action {\n  font-weight: 600;\n  font-variant-numeric: tabular-nums;\n  text-align: right;\n  justify-self: end;\n  white-space: nowrap;\n}\n.meta-grid {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 0%;\n}\n.payment-reason {\n  font-size: 12px;\n  color: hsl(230, 10%, 46%, 80%);\n}\n.date_action {\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.action-container p {\n  margin: 0;\n  padding: 0;\n}\n\n.action-row {\n  display: contents;\n}\n\n@media (min-width: 640px) {\n  :host {\n    --amount-col: 8ch;\n  }\n  .alert-message {\n    display: inline-flex;\n  }\n  .amount_action {\n    justify-self: auto;\n  }\n  .action-container {\n    display: grid;\n    grid-template-columns: var(--label-col) 1fr auto;\n    align-items: center;\n  }\n  .payment-meta {\n    display: grid;\n    grid-template-columns: var(--amount-col) 1fr;\n    align-items: center;\n    column-gap: 1rem;\n    min-width: 0;\n  }\n}\n","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { IPaymentAction } from '@/services/payment.service';\nimport { formatAmount } from '@/utils/utils';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-payment-action',\n  styleUrl: 'ir-payment-action.css',\n  scoped: true,\n})\nexport class IrPaymentAction {\n  @Prop({ attribute: 'payment-action' }) paymentAction: IPaymentAction;\n\n  @Event() generatePayment: EventEmitter<IPaymentAction>;\n\n  render() {\n    const paymentActionType = this.paymentAction.type.toLowerCase();\n    const isFutureAction = paymentActionType === 'future';\n    return (\n      <div class={`action-container ${isFutureAction ? 'future' : 'overdue'}`}>\n        <div class={'action-row'}>\n          {!isFutureAction && (\n            <div class={'overdue_action'}>\n              <svg height={16} width={16} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"\n                />\n              </svg>\n              <span class=\"alert-message\">{paymentActionType}</span>\n            </div>\n          )}\n          {paymentActionType === 'future' && this.paymentAction.amount > 0 && (\n            <div class={'future_action '}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height={16} width={16} viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"\n                />\n              </svg>\n              <span class=\"alert-message\">{moment(new Date(this.paymentAction.due_on)).isSame(new Date()) ? 'Today' : 'Future'}</span>\n            </div>\n          )}\n          <div class=\"meta-grid\">\n            <div class=\"payment-meta\">\n              <p class=\"amount_action\">{formatAmount(this.paymentAction.currency.symbol, this.paymentAction.amount)}</p>\n              <p class=\"date_action\">{moment(new Date(this.paymentAction.due_on)).format('ddd, MMM DD YYYY')}</p>\n            </div>\n            {/* <p class=\"payment-reason\">{this.paymentAction.reason.trim()}</p> */}\n          </div>\n        </div>\n        <div style={{ width: 'fit-content' }}>\n          <ir-button btn_color=\"dark\" text={'Pay'} size=\"sm\" onClickHandler={() => this.generatePayment.emit(this.paymentAction)}></ir-button>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"kPAAA,MAAMA,EAAqB,+7EAC3B,MAAAC,EAAeD,E,MCSFE,EAAe,M,0EAK1B,MAAAC,GACE,MAAMC,EAAoBC,KAAKC,cAAcC,KAAKC,cAClD,MAAMC,EAAiBL,IAAsB,SAC7C,OACEM,EAAA,OAAAC,IAAA,2CAAKC,MAAO,oBAAoBH,EAAiB,SAAW,aAC1DC,EAAA,OAAAC,IAAA,2CAAKC,MAAO,eACRH,GACAC,EAAA,OAAAC,IAAA,2CAAKC,MAAO,kBACVF,EAAA,OAAAC,IAAA,2CAAKE,OAAQ,GAAIC,MAAO,GAAIC,MAAM,6BAA6BC,QAAQ,eACrEN,EAAA,QAAAC,IAAA,2CACEM,KAAK,eACLC,EAAE,6TAGNR,EAAA,QAAAC,IAAA,2CAAMC,MAAM,iBAAiBR,IAGhCA,IAAsB,UAAYC,KAAKC,cAAca,OAAS,GAC7DT,EAAA,OAAAC,IAAA,2CAAKC,MAAO,kBACVF,EAAA,OAAAC,IAAA,2CAAKI,MAAM,6BAA6BF,OAAQ,GAAIC,MAAO,GAAIE,QAAQ,eACrEN,EAAA,QAAAC,IAAA,2CACEM,KAAK,eACLC,EAAE,8LAGNR,EAAA,QAAAC,IAAA,2CAAMC,MAAM,iBAAiBQ,EAAO,IAAIC,KAAKhB,KAAKC,cAAcgB,SAASC,OAAO,IAAIF,MAAU,QAAU,WAG5GX,EAAA,OAAAC,IAAA,2CAAKC,MAAM,aACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,gBACTF,EAAA,KAAAC,IAAA,2CAAGC,MAAM,iBAAiBY,EAAanB,KAAKC,cAAcmB,SAASC,OAAQrB,KAAKC,cAAca,SAC9FT,EAAA,KAAAC,IAAA,2CAAGC,MAAM,eAAeQ,EAAO,IAAIC,KAAKhB,KAAKC,cAAcgB,SAASK,OAAO,wBAKjFjB,EAAA,OAAAC,IAAA,2CAAKiB,MAAO,CAAEd,MAAO,gBACnBJ,EAAA,aAAAC,IAAA,2CAAWkB,UAAU,OAAOC,KAAM,MAAOC,KAAK,KAAKC,eAAgB,IAAM3B,KAAK4B,gBAAgBC,KAAK7B,KAAKC,kB","ignoreList":[]}