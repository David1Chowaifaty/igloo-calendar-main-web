{"version":3,"names":["irDailyRevenueCss","IrDailyRevenueStyle0","IrDailyRevenue","constructor","hostRef","this","language","ticket","filters","date","moment","format","users","tokenService","Token","roomService","RoomService","propertyService","PropertyService","bookingService","BookingService","handleSidebarClose","e","stopImmediatePropagation","stopPropagation","sideBarEvent","componentWillLoad","setToken","initializeApp","ticketChanged","newValue","oldValue","handleOpenSidebar","detail","handleFetchNewReports","Object","assign","getPaymentReports","renderSidebarBody","type","h","slot","hasPrint","hasReceipt","hasCloseButton","onCloseSidebar","is_from_front_desk","propertyid","property_id","hasRoomEdit","hasRoomDelete","bookingNumber","payload","toString","hasRoomAdd","isPageLoading","propertyId","p","Error","propertyData","getExposedProperty","id","aname","is_backend","include_units_hk_status","My_Result","requests","getSetupEntriesByTableNameMulti","fetchLanguage","push","setupEntries","Promise","all","pay_type","pay_type_group","groupEntryTablesResult","payTypes","payTypeGroup","buildPaymentTypes","error","console","log","groupPaymentsByName","payments","groupedPayment","Map","payment","_a","get","payTypeCode","set","entries","sort","a","b","aNum","Number","bNum","isNaN","localeCompare","isExportToExcel","getReportObj","report","method","METHOD","PAY_TYPE_CODE","amount","AMOUNT","DATE","hour","HOUR","minute","MINUTE","user","USER","currency","CURRENCY","bookingNbr","BOOKING_NBR","v4","isLoading","getDailyRevenueReport","is_export_to_excel","add","_b","results","_c","map","previousDateGroupedPayments","_d","render","Host","class","style","gap","size","btn_color","text","locales","Lcz_Export","onClickHandler","async","btnStyle","height","iconPosition","icon_name","icon_style","groupedPayments","payTypesGroup","sidebarStyles","width","background","open","Boolean","showCloseButton","onIrSidebarToggle"],"sources":["src/components/ir-daily-revenue/ir-daily-revenue.css?tag=ir-daily-revenue&encapsulation=scoped","src/components/ir-daily-revenue/ir-daily-revenue.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.daily-revenue__meta {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n.daily-revenue__table {\n  flex: 1 1 0%;\n}\n\n/*sm*/\n@media (min-width: 768px) {\n  .daily-revenue__meta {\n    flex-direction: row;\n  }\n}\n","import Token from '@/models/Token';\nimport { BookingService, buildPaymentTypes } from '@/services/booking.service';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyPaymentFilter, FolioPayment, GroupedFolioPayment, SidebarOpenEvent } from './types';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport { IEntries } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-daily-revenue',\n  styleUrl: 'ir-daily-revenue.css',\n  scoped: true,\n})\nexport class IrDailyRevenue {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading: boolean;\n  @State() property_id: number;\n  @State() groupedPayment: GroupedFolioPayment;\n  @State() previousDateGroupedPayments: GroupedFolioPayment;\n  @State() isLoading: string;\n  @State() filters: DailyPaymentFilter = { date: moment().format('YYYY-MM-DD'), users: null };\n  @State() sideBarEvent: SidebarOpenEvent | null;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n  private payTypes: IEntries[];\n  private payTypeGroup: IEntries[];\n\n  @Event() preventPageLoad: EventEmitter<null>;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.tokenService.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('revenueOpenSidebar')\n  handleOpenSidebar(e: CustomEvent<SidebarOpenEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = e.detail;\n  }\n  @Listen('fetchNewReports')\n  handleFetchNewReports(e: CustomEvent<DailyPaymentFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...e.detail };\n    this.getPaymentReports();\n  }\n\n  private handleSidebarClose = (e: CustomEvent) => {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = null;\n  };\n\n  private renderSidebarBody() {\n    if (!this.sideBarEvent) {\n      return;\n    }\n    switch (this.sideBarEvent.type) {\n      case 'booking':\n        return (\n          <ir-booking-details\n            slot=\"sidebar-body\"\n            hasPrint\n            hasReceipt\n            hasCloseButton\n            onCloseSidebar={this.handleSidebarClose}\n            is_from_front_desk\n            propertyid={this.property_id}\n            hasRoomEdit\n            hasRoomDelete\n            bookingNumber={this.sideBarEvent.payload.bookingNumber.toString()}\n            ticket={this.ticket}\n            language={this.language}\n            hasRoomAdd\n          ></ir-booking-details>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private async initializeApp() {\n    this.isPageLoading = true;\n\n    try {\n      let propertyId = this.propertyid;\n      if (!propertyId && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      this.property_id = propertyId;\n\n      const requests: Promise<any>[] = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP']),\n        this.getPaymentReports(),\n        this.roomService.fetchLanguage(this.language),\n      ];\n      if (propertyId) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group } = this.bookingService.groupEntryTablesResult(setupEntries);\n      this.payTypes = pay_type;\n      this.payTypeGroup = buildPaymentTypes(pay_type, pay_type_group)['PAYMENTS'];\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n  private groupPaymentsByName(payments: FolioPayment[]): GroupedFolioPayment {\n    const groupedPayment: GroupedFolioPayment = new Map();\n\n    for (const payment of payments) {\n      const p = groupedPayment.get(payment.payTypeCode) ?? [];\n      groupedPayment.set(payment.payTypeCode, [...p, payment]);\n    }\n    return new Map(\n      [...groupedPayment.entries()].sort(([a], [b]) => {\n        const aNum = Number(a);\n        const bNum = Number(b);\n        if (!isNaN(aNum) && !isNaN(bNum)) {\n          return aNum - bNum;\n        }\n        return a.localeCompare(b);\n      }),\n    );\n  }\n\n  private async getPaymentReports(isExportToExcel = false) {\n    try {\n      const getReportObj = (report): FolioPayment => {\n        return {\n          method: report.METHOD,\n          payTypeCode: report.PAY_TYPE_CODE,\n          amount: report.AMOUNT,\n          date: report.DATE,\n          hour: report.HOUR,\n          minute: report.MINUTE,\n          user: report.USER,\n          currency: report.CURRENCY,\n          bookingNbr: report.BOOKING_NBR,\n          id: v4(),\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const requests = [\n        this.propertyService.getDailyRevenueReport({\n          date: this.filters.date,\n          property_id: this.property_id?.toString(),\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n      if (!isExportToExcel) {\n        requests.push(\n          this.propertyService.getDailyRevenueReport({\n            date: moment(this.filters.date, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD'),\n            property_id: this.property_id?.toString(),\n            is_export_to_excel: isExportToExcel,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      if (!isExportToExcel) {\n        if (results[0]) {\n          this.groupedPayment = this.groupPaymentsByName(results[0]?.map(getReportObj));\n        } else {\n          this.groupedPayment = new Map();\n        }\n        if (results[1]) this.previousDateGroupedPayments = this.groupPaymentsByName(results[1]?.map(getReportObj));\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Revenue</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getPaymentReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-revenue-summary\n            previousDateGroupedPayments={this.previousDateGroupedPayments}\n            groupedPayments={this.groupedPayment}\n            payTypesGroup={this.payTypeGroup}\n          ></ir-revenue-summary>\n          <div class=\"daily-revenue__meta\">\n            <ir-daily-revenue-filters isLoading={this.isLoading === 'filter'} payments={this.groupedPayment}></ir-daily-revenue-filters>\n            <ir-revenue-table filters={this.filters} class={'daily-revenue__table'} payTypes={this.payTypes} payments={this.groupedPayment}></ir-revenue-table>\n          </div>\n        </section>\n        <ir-sidebar\n          sidebarStyles={{\n            width: this.sideBarEvent?.type === 'booking' ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.sideBarEvent?.type === 'booking' ? '#F2F3F8' : 'white',\n          }}\n          open={Boolean(this.sideBarEvent)}\n          showCloseButton={false}\n          onIrSidebarToggle={this.handleSidebarClose}\n        >\n          {this.renderSidebarBody()}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}