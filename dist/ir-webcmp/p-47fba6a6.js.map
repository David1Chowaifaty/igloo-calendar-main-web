{"version":3,"names":["defaultTasksList","getPaginationInitialParams","tasks","getTaskList","tasksList","currentPage","mobileCurrentPage","pageSize","mobilePageSize","totalPages","totalItems","initialState","searchField","filteredTasks","selectedTasks","pagination","filters","isLoading","isFiltersLoading","isExportLoading","archiveOpen","archiveData","archiveFilters","from_date","to_date","filtered_by_hkm","filtered_by_unit","archiveLoading","sorting","field","direction","modalOpen","sidebarOpen","state","hkTasksStore","onChange","createStore","updateSearchField","filterTasks","updateTasks","wasEmpty","length","shouldUpdateTaskList","updateTaskList","updatePaginationFields","params","Object","assign","updatePageSize","updatePagination","updateCurrentPage","page","list","calendar_data","roomsInfo","totalRooms","calculatedList","Array","map","_","i","t","newTaskCount","currentMax","Math","max","searchText","_b","_a","toLowerCase","filter","task","_c","_d","_e","unit","name","includes","status","description","housekeeper","ceil","min","getPaginatedTasks","start","end","slice","getMobileTasks","shouldLoadMore","loadMoreTasks","updateSelectedTasks","clearSelectedTasks","toggleTaskSelection","index","findIndex","id","selectAllTasks","setLoading","loading","updateSorting","getSortedTasks","tasksToSort","sort","a","b","aValue","bValue","date","_f","_g","_h","getCheckableTasks","taskDate","Date","today","setHours","isAllTasksSelected","checkableTasks"],"sources":["src/stores/hk-tasks.store.ts"],"sourcesContent":["import { Task, ArchivedTask } from '@/models/housekeeping';\nimport { createStore } from '@stencil/store';\nimport calendar_data from './calendar-data';\n\nconst defaultTasksList = [10, 20, 50, 100];\n\nexport type TaskFilters = {\n  cleaning_periods: { code: string };\n  housekeepers: { id: number }[];\n  cleaning_frequencies: { code: string };\n  dusty_units: { code: string };\n  highlight_check_ins: { code: string };\n};\n\nexport type ArchiveFilters = {\n  from_date: string;\n  to_date: string;\n  filtered_by_hkm?: number[];\n  filtered_by_unit?: number[];\n};\n\nexport type SortingState = {\n  field: string;\n  direction: 'ASC' | 'DESC';\n};\nexport type TasksPagination = {\n  currentPage: number;\n  pageSize: number;\n  totalPages: number;\n  totalItems: number;\n  tasksList: number[];\n  mobileCurrentPage: number;\n  mobilePageSize: number;\n};\nexport interface IHkTasksStore {\n  searchField: string;\n  tasks: Task[];\n  filteredTasks: Task[];\n  selectedTasks: Task[];\n  pagination: TasksPagination;\n  filters: TaskFilters | null;\n  isLoading: boolean;\n  isFiltersLoading: boolean;\n  isExportLoading: boolean;\n  archiveOpen: boolean;\n  archiveData: ArchivedTask[];\n  archiveFilters: ArchiveFilters;\n  archiveLoading: 'search' | 'excel' | null;\n  sorting: SortingState;\n  modalOpen: boolean;\n  sidebarOpen: boolean;\n}\nfunction getPaginationInitialParams() {\n  const tasks = getTaskList();\n  return {\n    tasksList: tasks,\n    currentPage: 1,\n    mobileCurrentPage: 1,\n    pageSize: tasks[0],\n    mobilePageSize: tasks[0],\n    totalPages: 0,\n    totalItems: 0,\n  };\n}\nconst initialState: IHkTasksStore = {\n  searchField: '',\n  tasks: [],\n  filteredTasks: [],\n  selectedTasks: [],\n  pagination: getPaginationInitialParams(),\n  filters: null,\n  isLoading: false,\n  isFiltersLoading: false,\n  isExportLoading: false,\n  archiveOpen: false,\n  archiveData: [],\n  archiveFilters: {\n    from_date: null,\n    to_date: null,\n    filtered_by_hkm: [],\n    filtered_by_unit: [],\n  },\n  archiveLoading: null,\n  sorting: {\n    field: 'date',\n    direction: 'ASC',\n  },\n  modalOpen: false,\n  sidebarOpen: false,\n};\n\nexport const { state: hkTasksStore, onChange } = createStore<IHkTasksStore>(initialState);\n\nexport function updateSearchField(searchField: string) {\n  hkTasksStore.searchField = searchField;\n  hkTasksStore.pagination.currentPage = 1;\n  filterTasks();\n}\n\nexport function updateTasks(tasks: Task[]) {\n  const wasEmpty = hkTasksStore.tasks.length === 0;\n  hkTasksStore.tasks = tasks;\n\n  // Update task list if significantly changed or was empty\n  if (wasEmpty || shouldUpdateTaskList(tasks.length)) {\n    updateTaskList();\n  }\n\n  filterTasks();\n}\nfunction updatePaginationFields(params: Partial<TasksPagination>) {\n  hkTasksStore.pagination = {\n    ...hkTasksStore.pagination,\n    ...params,\n  };\n}\nexport function updatePageSize(pageSize: number) {\n  updatePaginationFields({\n    pageSize,\n    currentPage: 1,\n  });\n  updatePagination();\n}\n\nexport function updateCurrentPage(page: number) {\n  if (page >= 1 && page <= hkTasksStore.pagination.totalPages) {\n    updatePaginationFields({ currentPage: page });\n  }\n}\nexport function updateTaskList() {\n  const list = getTaskList();\n  updatePaginationFields({\n    tasksList: list,\n    pageSize: list[0],\n    mobilePageSize: list[0],\n  });\n  updatePagination();\n}\n\nfunction getTaskList(): number[] {\n  if (!calendar_data.roomsInfo) {\n    return defaultTasksList;\n  }\n  const totalRooms = calendar_data.roomsInfo.length;\n  if (totalRooms <= 10) {\n    return defaultTasksList;\n  }\n  const calculatedList = [...Array(4)].map((_, i) => {\n    const t = totalRooms * (i + 1);\n    return i === 3 ? (t < 100 ? 100 : t) : t;\n  });\n  return calculatedList;\n}\n\nfunction shouldUpdateTaskList(newTaskCount: number): boolean {\n  const currentMax = Math.max(...hkTasksStore.pagination.tasksList);\n  return newTaskCount > currentMax * 1.5 || newTaskCount < currentMax * 0.5;\n}\n\nfunction filterTasks() {\n  const searchText = hkTasksStore?.searchField?.toLowerCase() ?? '';\n\n  if (!searchText) {\n    hkTasksStore.filteredTasks = [...hkTasksStore.tasks];\n  } else {\n    hkTasksStore.filteredTasks = hkTasksStore.tasks.filter(\n      task =>\n        task.unit?.name?.toLowerCase().includes(searchText) || task.status?.description?.toLowerCase().includes(searchText) || task.housekeeper?.toLowerCase().includes(searchText),\n    );\n  }\n\n  updatePagination();\n}\n\nfunction updatePagination() {\n  const totalItems = hkTasksStore.filteredTasks.length;\n  const totalPages = Math.max(1, Math.ceil(totalItems / hkTasksStore.pagination.pageSize));\n  updatePaginationFields({\n    totalItems,\n    totalPages,\n    currentPage: Math.min(hkTasksStore.pagination.currentPage, totalPages),\n  });\n}\n\nexport function getPaginatedTasks(): Task[] {\n  const start = (hkTasksStore.pagination.currentPage - 1) * hkTasksStore.pagination.pageSize;\n  const end = start + hkTasksStore.pagination.pageSize;\n  return hkTasksStore.filteredTasks.slice(start, end);\n}\n\nexport function getMobileTasks(): Task[] {\n  const { mobileCurrentPage, mobilePageSize } = hkTasksStore.pagination;\n  const start = (mobileCurrentPage - 1) * mobilePageSize;\n  const end = start + mobilePageSize;\n  return hkTasksStore.filteredTasks.slice(0, end);\n}\n\nexport function shouldLoadMore(): boolean {\n  const { mobileCurrentPage, mobilePageSize } = hkTasksStore.pagination;\n  return !(mobilePageSize * (mobileCurrentPage - 1) + mobilePageSize >= hkTasksStore.filteredTasks.length);\n}\n\nexport function loadMoreTasks(page: number) {\n  if (!shouldLoadMore()) {\n    return;\n  }\n  updatePaginationFields({\n    mobileCurrentPage: page,\n  });\n}\n\nexport function resetHkTasksStore() {\n  hkTasksStore.searchField = '';\n  hkTasksStore.tasks = [];\n  hkTasksStore.filteredTasks = [];\n  hkTasksStore.selectedTasks = [];\n  (hkTasksStore.pagination = getPaginationInitialParams()), (hkTasksStore.filters = null);\n  hkTasksStore.isLoading = false;\n  hkTasksStore.isFiltersLoading = false;\n  hkTasksStore.isExportLoading = false;\n  hkTasksStore.archiveOpen = false;\n  hkTasksStore.archiveData = [];\n  hkTasksStore.archiveFilters = {\n    from_date: null,\n    to_date: null,\n    filtered_by_hkm: [],\n    filtered_by_unit: [],\n  };\n  hkTasksStore.archiveLoading = null;\n  hkTasksStore.sorting = {\n    field: 'date',\n    direction: 'ASC',\n  };\n  hkTasksStore.modalOpen = false;\n  hkTasksStore.sidebarOpen = false;\n}\n\n// Task selection helpers\nexport function updateSelectedTasks(tasks: Task[]) {\n  hkTasksStore.selectedTasks = tasks;\n}\n\nexport function clearSelectedTasks() {\n  hkTasksStore.selectedTasks = [];\n}\n\nexport function toggleTaskSelection(task: Task) {\n  const index = hkTasksStore.selectedTasks.findIndex(t => t.id === task.id);\n  if (index > -1) {\n    hkTasksStore.selectedTasks = hkTasksStore.selectedTasks.filter(t => t.id !== task.id);\n  } else {\n    hkTasksStore.selectedTasks = [...hkTasksStore.selectedTasks, task];\n  }\n}\n\nexport function selectAllTasks(tasks: Task[]) {\n  hkTasksStore.selectedTasks = [...tasks];\n}\n\n// Filter helpers\nexport function updateFilters(filters: TaskFilters) {\n  hkTasksStore.filters = filters;\n}\n\nexport function clearFilters() {\n  hkTasksStore.filters = null;\n}\n\n// Loading state helpers\nexport function setLoading(loading: boolean) {\n  hkTasksStore.isLoading = loading;\n}\n\nexport function setFiltersLoading(loading: boolean) {\n  hkTasksStore.isFiltersLoading = loading;\n}\n\nexport function setExportLoading(loading: boolean) {\n  hkTasksStore.isExportLoading = loading;\n}\n\n// Sorting helpers\nexport function updateSorting(field: string, direction: 'ASC' | 'DESC') {\n  hkTasksStore.sorting = { field, direction };\n  // Apply sorting to original tasks, then re-filter\n  hkTasksStore.tasks = getSortedTasks(hkTasksStore.tasks);\n  filterTasks();\n}\n\nexport function getSortedTasks(tasksToSort: Task[] = hkTasksStore.filteredTasks): Task[] {\n  const { field, direction } = hkTasksStore.sorting;\n  return [...tasksToSort].sort((a, b) => {\n    let aValue = a[field];\n    let bValue = b[field];\n\n    if (field === 'status') {\n      aValue = a.status?.description;\n      bValue = b.status?.description;\n    } else if (field === 'unit') {\n      aValue = a.unit?.name;\n      bValue = b.unit?.name;\n    }\n\n    if (aValue < bValue) return direction === 'ASC' ? -1 : 1;\n    if (aValue > bValue) return direction === 'ASC' ? 1 : -1;\n\n    // Fallback sorting by date then unit name\n    if (a.date < b.date) return -1;\n    if (a.date > b.date) return 1;\n    if (a.unit?.name < b.unit?.name) return -1;\n    if (a.unit?.name > b.unit?.name) return 1;\n\n    return 0;\n  });\n}\n\n// Archive helpers\nexport function setArchiveOpen(open: boolean) {\n  hkTasksStore.archiveOpen = open;\n}\n\nexport function updateArchiveData(data: ArchivedTask[]) {\n  hkTasksStore.archiveData = data;\n}\n\nexport function updateArchiveFilters(filters: Partial<ArchiveFilters>) {\n  hkTasksStore.archiveFilters = { ...hkTasksStore.archiveFilters, ...filters };\n}\n\nexport function setArchiveLoading(loading: 'search' | 'excel' | null) {\n  hkTasksStore.archiveLoading = loading;\n}\n\n// Modal and sidebar helpers\nexport function setModalOpen(open: boolean) {\n  hkTasksStore.modalOpen = open;\n}\n\nexport function setSidebarOpen(open: boolean) {\n  hkTasksStore.sidebarOpen = open;\n}\n\n// Computed getters\nexport function getCheckableTasks(): Task[] {\n  return hkTasksStore.tasks.filter(task => {\n    const taskDate = new Date(task.date);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    return taskDate <= today;\n  });\n}\n\nexport function getSelectedTasksCount(): number {\n  return hkTasksStore.selectedTasks.length;\n}\n\nexport function isAllTasksSelected(): boolean {\n  const checkableTasks = getCheckableTasks();\n  return checkableTasks.length > 0 && hkTasksStore.selectedTasks.length === checkableTasks.length;\n}\n\nexport function getTasksByStatus(status: string): Task[] {\n  return hkTasksStore.tasks.filter(task => task.status?.description === status);\n}\n\nexport function getTasksByHousekeeper(housekeeperId: number): Task[] {\n  return hkTasksStore.tasks.filter(task => task.hkm_id === housekeeperId);\n}\n\nexport function getTasksByUnit(unitId: number): Task[] {\n  return hkTasksStore.tasks.filter(task => task.unit?.id === unitId);\n}\n\n// Utility helpers\nexport function updateStoreProperty<K extends keyof IHkTasksStore>(key: K, value: IHkTasksStore[K]) {\n  hkTasksStore[key] = value;\n}\n\nexport function getStoreSnapshot(): IHkTasksStore {\n  return { ...hkTasksStore };\n}\n\nexport default hkTasksStore;\n"],"mappings":"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","ignoreList":[]}