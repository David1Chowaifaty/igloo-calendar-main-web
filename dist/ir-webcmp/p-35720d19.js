import{T as e}from"./p-5872a6ca.js";import{c as t}from"./p-6b3eae37.js";import{c as n}from"./p-670ec31a.js";import{a as o}from"./p-4456199b.js";class a extends e{async getExposedChannels(){try{const e=this.getToken();if(e!==null){const{data:t}=await o.post(`/Get_Exposed_Channels?Ticket=${e}`,{});if(t.ExceptionMsg!==""){throw new Error(t.ExceptionMsg)}const a=t.My_Result;n.channels=[...a];return t}}catch(e){console.log(e);throw new Error(e)}}async getExposedConnectedChannels(e){try{const t=this.getToken();if(t!==null){const{data:a}=await o.post(`/Get_Exposed_Connected_Channels?Ticket=${t}`,{property_id:e});if(a.ExceptionMsg!==""){throw new Error(a.ExceptionMsg)}n.connected_channels=[...a.My_Result]}}catch(e){console.log(e);throw new Error(e)}}async saveConnectedChannel(e){try{const a={id:n.channel_id,title:n.channel_settings.hotel_title,is_active:n.is_active,channel:{id:n.selectedChannel.id,name:n.selectedChannel.name},property:{id:t.id,name:t.name},map:n.mappedChannels,is_remove:e};const r=this.getToken();if(!r){throw new Error("Invalid Token")}const{data:s}=await o.post(`/Handle_Connected_Channel?Ticket=${r}`,a);return s}catch(e){console.error(e)}}}export{a as C};
//# sourceMappingURL=p-35720d19.js.map