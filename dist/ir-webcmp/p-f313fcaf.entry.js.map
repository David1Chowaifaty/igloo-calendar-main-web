{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfoStyle0","IglApplicationInfo","constructor","hostRef","this","bedPreferenceType","bookingType","totalNights","isButtonPressed","variationService","VariationService","componentWillLoad","isSingleUnit","rateplanSelection","roomtype","id","filteredRooms","filterRooms","length","updateGuest","unit","_b","_a","toString","params","roomTypeId","ratePlanId","ratePlan","prevGuest","guest","roomIndex","Object","assign","booking_store","ratePlanSelections","handleButtonClicked","event","detail","key","getTooltipMessages","selected_variation","selectedVariation","guestInfo","infant_nbr","getVariationBasedOnInfants","variations","baseVariation","infants","matchingVariation","_c","find","variation","adult_nbr","child_nbr","cancellationPolicy","_e","_d","applicable_policies","p","type","combined_statement","guaranteePolicy","_g","_f","tooltip","undefined","getAmount","is_amount_modified","view_mode","rp_amount","discounted_gross_amount","result","calendar_data","is_frontdesk_enabled","assignable_units","forEach","Is_Fully_Available","push","name","pr_id","filteredGuestsRoom","filter","_","i","map","r","filteredResults","includes","baseData","roomtypeId","f","sort","a","b","localeCompare","render","filteredRoomList","formattedVariation","formatVariationBasedOnInfants","h","Host","class","short_name","is_non_refundable","message","innerHTML","formatAmount","currency","symbol","locales","entries","Lcz_Stay","v4","first_name","placeholder","onInput","target","value","event_type","modifyBookingStore","required","last_name","onChange","selected","_h","Lcz_Assignunits","room","is_bed_configuration_enabled","_j","bed_preference","_k","Lcz_BedConfiguration","data","CODE_NAME","CODE_VALUE_EN","_l","style","gap","marginTop","_m","width","Number","_o","Array","from","item","iglBlockDatesViewCss","IglBlockDatesViewStyle0","IglBlockDatesView","isEventHover","renderAgain","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","renderPage","dataUpdateEvent","emit","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","console","log","fromDate","toDate","from_date","dateOption","showDateDifference","to_date","Lcz_Reason","Lcz_OutOfservice","Lcz_Or","Lcz_OptionalReason","Lcz_AutomaticReleaseIn","releaseItem","Lcz_On","iglBookPropertyHeaderCss","IglBookPropertyHeaderStyle0","IglBookPropertyHeader","splitBookingId","bookingData","sourceOptions","showSplitBookingOption","sourceOption","code","description","tag","getSplitBookingList","Lcz_Tobooking","keys","bookedByInfoData","bookingNumber","firstName","lastName","moment","bookingDataDefaultDateRange","format","propertyId","Lcz_BookingNumber","onComboboxValue","e","stopImmediatePropagation","spiltBookingSelected","isSplitBooking","getSourceNode","Lcz_Source","sourceDropDownChange","option","label","handleAdultChildChange","obj","adultChildCount","adultChild","getAdultChildConstraints","testId","selectedValue","adult","onSelectChange","select_id","firstOption","Lcz_AdultsCaption","LabelAvailable","adultChildConstraints","adult_max_nbr","text","child_max_nbr","child","renderChildCaption","btn_id","isLoading","isRequestPending","icon","size","Lcz_Check","onClickHandler","maxAge","child_max_age","years","Lcz_Years","Lcz_Year","Lcz_ChildCaption","isEventType","toast","title","Lcz_ChooseBookingNumber","position","initialToDate","defaultDaterange","initialFromDate","selectedFromDate","dateRangeData","selectedToDate","isBefore","isAfter","Lcz_CheckInDateShouldBeMAx","replace","Lcz_PlzSelectNumberOfGuests","animateIrSelect","buttonClicked","minDate","getTime","showSourceNode","variant","dateLabel","Lcz_Dates","add","startOf","disabled","tax_statement","iglDateRangeCss","IglDateRangeStyle0","IglDateRange","withDateDifference","fromDateStr","toDateStr","initializeDates","handleDataChange","newValue","oldValue","JSON","stringify","setDate","getFormattedDateString","calculateTotalNights","calculateDaysBetweenDates","toLowerCase","getFullYear","handleDateSelectEvent","dateSelectEvent","handleDateChange","start","end","dateDifference","maxDate","autoApply","onDateChanged","xmlns","height","viewBox","fill","d","Lcz_Nights","Lcz_Night","iglPropertyBookedByCss","IglPropertyBookedByStyle0","IglPropertyBookedBy","showPaymentDetails","countries","arrivalTimeList","expiryMonths","expiryYears","currentMonth","bookedByData","email","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","index","country","getUserDefaultCountry","getMonth","arrivalTime","handleCountryChange","handleNumberInput","inputElement","inputValue","numericRegex","test","checkUser","z","string","safeParse","success","res","getUserInfo","mobile_without_prefix","country_id","country_phone_prefix","prevBookedByData","props","checkout_guest","handleComboboxChange","stopPropagation","clearEvent","Lcz_BookedBy","bind","Lcz_FindEmailAddress","onInputCleared","danger_border","validateEmail","Lcz_FirstName","Lcz_LastName","Lcz_Country","onCountryChange","c","Lcz_MobilePhone","language","phone_prefix","default_country","onTextChange","mobile","Lcz_YourArrivalTime","time","Lcz_AnyMessageForUs","rows","Fragment","Lcz_CardNumber","pattern","Lcz_CardHolderName","Lcz_ExpiryDate","year","htmlFor","Lcz_EmailTheGuest","iglRatePlanCss","IglRatePlanStyle0","IglRatePlan","ratePricingMode","isBookDisabled","disableForm","shouldBeDisabled","visibleInventory","is_available_to_book","updateRateplanSelection","currentSelections","handleVariationChange","reserveRooms","rooms","bookProperty","resetReserved","reserveRoom","roomtype_id","renderRate","amount","discounted_amount","amount_per_night_gross","formatVariation","adults","children","v","updateRoomParams","isAvailableToBook","formattedVariations","split","uuidv4","Lcz_Rate","reserved","onClick","Lcz_Current","Lcz_Select","Lcz_Book","iglRoomTypeCss","IglRoomTypeStyle0","IglRoomType","roomInfoId","selectedRooms","roomsDistributions","validBookingTypes","isValidBookingType","roomType","rateplans","getVisibleInventory","irAutocompleteCss","IrAutocompleteStyle0","IrAutocomplete","duration","inputId","selectedIndex","isComboBoxVisible","inputFocused","no_result_found","Lcz_NoResultsFound","handleKeyDown","dataSize","itemHeight","getHeightOfPElement","preventDefault","adjustScrollPosition","selectItem","inputRef","blur","combobox","el","querySelector","pItem","offsetHeight","visibleHeight","margin","itemTotalHeight","selectedPosition","newScrollTop","Math","max","min","scrollHeight","scrollTo","top","behavior","isItemSelected","comboboxValue","resetCombobox","debounceFetchData","clearTimeout","debounceTimer","setTimeout","fetchData","fetchExposedGuest","fetchExposedBookings","handleInputChange","handleDocumentClick","contains","handleBlur","isDropdownItem","document","activeElement","inputCleared","element","closest","disconnectedCallback","removeEventListener","handleFocus","handleItemKeyDown","renderDropdown","role","onKeyDown","tabIndex","booking_nbr","clearInput","withblur","onBlur","autoComplete","onFocus","ref","irCountryPickerCss","IrCountryPickerStyle0","IrCountryPicker","autoValidate","filteredCountries","searching","selectedCountry","newCountry","oldCountry","filterCountries","selectCountry","debounceTimeout","countryChange","scrollToSelected","dropdownItem","scrollIntoView","block","shouldShowPropertyCountry","propertyCountry","onInputFocus","onInputBlur","trim","src","flag","alt","aspectRatio","borderRadius","irDateRangeCss","IrDateRangeStyle0","IrDateRange","firstDay","monthNames","daysOfWeek","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","singleDatePicker","maxSpan","days","handleMinDateChange","$","dateRangeInput","remove","initializeDateRangePicker","datePropChanged","updateDateRangePickerDates","openDatePicker","openDatePickerTimeout","click","picker","newDate","date","setStartDate","setEndDate","newStartDate","newEndDate","clone","getElementById","createElement","textContent","head","appendChild","componentDidLoad","daterangepicker","opens","startDate","endDate","locale","dateChanged","irDateViewCss","IrDateViewStyle0","IrDateView","handleFromDateChange","newVal","oldVal","handleToDateChange","convertDate","dates","date_difference","isMoment","irPhoneInputCss","IrPhoneInputStyle0","IrPhoneInput","isDropdownVisible","getCountries","setCountryFromPhonePrefix","setCurrentCountry","handleValueChange","handlePhoneChange","textChange","currentCountry","Error","maxLength","onComboboxValueChange","autoFocus","image","irSpinnerCss","IrSpinnerStyle0","IrSpinner","initStyles","handleSpinnerSizeChange","handleSpinnerBorderWidthChange","handleSpinnerUnitChange","handleSpinnerColorChange","applyCssElement","borderWidth","color","setProperty","irTooltipCss","IrTooltipStyle0","IrTooltip","withHtml","customSlot","toggleOpen","shouldOpen","tooltipTimeout","open","containerStyle","onMouseEnter","onMouseLeave"],"sources":["src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.css?tag=igl-book-property-header&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property-header/igl-book-property-header.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.css?tag=igl-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-rate-plan/igl-rate-plan.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.css?tag=igl-room-type&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-room-type/igl-room-type.tsx","src/components/ui/ir-autocomplete/ir-autocomplete.css?tag=ir-autocomplete&encapsulation=scoped","src/components/ui/ir-autocomplete/ir-autocomplete.tsx","src/components/ui/ir-country-picker/ir-country-picker.css?tag=ir-country-picker&encapsulation=scoped","src/components/ui/ir-country-picker/ir-country-picker.tsx","src/components/ui/ir-date-range/ir-date-range.css?tag=ir-date-range&encapsulation=scoped","src/components/ui/ir-date-range/ir-date-range.tsx","src/components/ir-date-view/ir-date-view.css?tag=ir-date-view&encapsulation=scoped","src/components/ir-date-view/ir-date-view.tsx","src/components/ui/ir-phone-input/ir-phone-input.css?tag=ir-phone-input&encapsulation=scoped","src/components/ui/ir-phone-input/ir-phone-input.tsx","src/components/ui/ir-spinner/ir-spinner.css?tag=ir-spinner&encapsulation=shadow","src/components/ui/ir-spinner/ir-spinner.tsx","src/components/ui/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ui/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.rate_amount {\r\n  display: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  gap: 0.5rem;\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.booking-roomtype-title {\r\n  font-size: 1.25rem;\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-details-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.booking-rateplan {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-rateplan-name {\r\n  font-weight: bold;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-tooltip {\r\n  margin-right: 0.5rem;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-variation {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-price {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.booking-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.booking-details-container {\r\n  display: none;\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .booking-header {\r\n    justify-content: flex-start;\r\n  }\r\n  .booking-footer,\r\n  .booking-price {\r\n    display: none;\r\n  }\r\n  .booking-details-container,\r\n  .rate_amount {\r\n    display: inline-flex;\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 908px) {\r\n  .aplicationInfoContainer {\r\n    max-width: 100%;\r\n  }\r\n  .guest-info-container,\r\n  .bed-preference-container,\r\n  .unit-select-container {\r\n    max-width: 250px;\r\n  }\r\n  /* .preference-select-container {\r\n    max-width: 250px;\r\n  } */\r\n}\r\n","import { Component, Host, h, Prop, State, Listen } from '@stencil/core';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { IRatePlanSelection, modifyBookingStore, RatePlanGuest } from '@/stores/booking.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { v4 } from 'uuid';\r\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport VariationService from '@/services/variation.service';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() rateplanSelection: IRatePlanSelection;\r\n  @Prop() guestInfo: RatePlanGuest | null;\r\n  @Prop() currency: ICurrency;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() roomIndex: number;\r\n  @Prop() totalNights: number = 1;\r\n  @Prop() baseData: { unit: { id: string; name: string }; roomtypeId: number };\r\n\r\n  @State() isButtonPressed = false;\r\n\r\n  private variationService = new VariationService();\r\n\r\n  componentWillLoad() {\r\n    if (isSingleUnit(this.rateplanSelection.roomtype.id)) {\r\n      const filteredRooms = this.filterRooms();\r\n      if (filteredRooms.length > 0) this.updateGuest({ unit: filteredRooms[0]?.id?.toString() });\r\n    }\r\n  }\r\n\r\n  private updateGuest(params: Partial<RatePlanGuest>) {\r\n    const roomTypeId = this.rateplanSelection.roomtype.id;\r\n    const ratePlanId = this.rateplanSelection.ratePlan.id;\r\n    let prevGuest = [...this.rateplanSelection.guest];\r\n    prevGuest[this.roomIndex] = {\r\n      ...prevGuest[this.roomIndex],\r\n      ...params,\r\n    };\r\n    booking_store.ratePlanSelections = {\r\n      ...booking_store.ratePlanSelections,\r\n      [roomTypeId]: {\r\n        ...booking_store.ratePlanSelections[roomTypeId],\r\n        [ratePlanId]: { ...this.rateplanSelection, guest: [...prevGuest] },\r\n      },\r\n    };\r\n  }\r\n\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n      case 'save':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, selected_variation } = this.rateplanSelection;\r\n    let selectedVariation = selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      selectedVariation = this.variationService.getVariationBasedOnInfants({\r\n        variations: ratePlan.variations,\r\n        baseVariation: selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => variation.adult_nbr === selectedVariation.adult_nbr && variation.child_nbr === selectedVariation.child_nbr);\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  private getAmount(): number {\r\n    if (this.rateplanSelection.is_amount_modified) {\r\n      return this.rateplanSelection.view_mode === '001' ? this.rateplanSelection.rp_amount : this.rateplanSelection.rp_amount * this.totalNights;\r\n    }\r\n    let variation = this.rateplanSelection.selected_variation;\r\n    if (this.guestInfo?.infant_nbr) {\r\n      variation = this.variationService.getVariationBasedOnInfants({\r\n        variations: this.rateplanSelection.ratePlan.variations,\r\n        baseVariation: this.rateplanSelection.selected_variation,\r\n        infants: this.guestInfo?.infant_nbr,\r\n      });\r\n    }\r\n    return variation.discounted_gross_amount;\r\n  }\r\n\r\n  private filterRooms(): { name: string; id: number }[] {\r\n    const result = [];\r\n    if (!calendar_data.is_frontdesk_enabled) {\r\n      return result;\r\n    }\r\n    this.rateplanSelection.ratePlan?.assignable_units?.forEach(unit => {\r\n      if (unit.Is_Fully_Available) {\r\n        result.push({ name: unit.name, id: unit.pr_id });\r\n      }\r\n    });\r\n    const filteredGuestsRoom = this.rateplanSelection.guest.filter((_, i) => i !== this.roomIndex).map(r => r.unit);\r\n    const filteredResults = result.filter(r => !filteredGuestsRoom.includes(r.id.toString()));\r\n    return this.bookingType === 'EDIT_BOOKING'\r\n      ? [...filteredResults, this.rateplanSelection.roomtype.id === this.baseData?.roomtypeId ? this.baseData?.unit : null]\r\n          .filter(f => !!f)\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n      : filteredResults;\r\n  }\r\n\r\n  render() {\r\n    const filteredRoomList = this.filterRooms();\r\n    const formattedVariation = this.variationService.formatVariationBasedOnInfants({\r\n      baseVariation: this.rateplanSelection.selected_variation,\r\n      infants: this.guestInfo.infant_nbr,\r\n      variations: this.rateplanSelection.ratePlan.variations,\r\n    });\r\n    return (\r\n      <Host class={'my-2'} data-testid={`room_info_${this.rateplanSelection.ratePlan.id}`}>\r\n        <div class=\"booking-header\">\r\n          {(this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n            <span class=\"booking-roomtype-title\">{this.rateplanSelection.roomtype.name}</span>\r\n          )}\r\n          <div class=\"booking-details-container\">\r\n            <div class=\"booking-rateplan\">\r\n              <p class=\"booking-rateplan-name\">\r\n                {this.rateplanSelection.ratePlan.short_name} {this.rateplanSelection.ratePlan.is_non_refundable && <span class={'non-ref-span'}>Non Refundable</span>}\r\n              </p>\r\n              <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n            </div>\r\n            <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n          </div>\r\n          <p class=\"booking-price\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        <div class=\"booking-footer\">\r\n          <div class=\"booking-rateplan\">\r\n            <p class=\"booking-rateplan-name\">{this.rateplanSelection.ratePlan.short_name}</p>\r\n            <ir-tooltip class=\"booking-tooltip\" message={this.getTooltipMessages()}></ir-tooltip>\r\n          </div>\r\n          <p class=\"booking-variation\" innerHTML={formattedVariation}></p>\r\n        </div>\r\n        <div class=\"d-flex flex-column flex-md-row  p-0 align-items-md-center aplicationInfoContainer\">\r\n          <div class=\"mr-md-1 mb-1 mb-md-0 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"text\"\r\n              data-testid=\"guest_first_name\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.first_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestFirstname'] ?? 'Guest first name'}\r\n              name=\"guestFirstName\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ first_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.first_name}\r\n            />\r\n          </div>\r\n          <div class=\"mr-md-1 flex-fill guest-info-container\">\r\n            <input\r\n              id={v4()}\r\n              type=\"text\"\r\n              class={`form-control ${this.isButtonPressed && this.guestInfo?.last_name === '' && 'border-danger'}`}\r\n              placeholder={locales.entries['Lcz_GuestLastname'] ?? 'Guest last name'}\r\n              name=\"guestLastName\"\r\n              data-testid=\"guest_last_name\"\r\n              onInput={event => {\r\n                const name = (event.target as HTMLInputElement).value;\r\n                this.updateGuest({ last_name: name });\r\n                if (booking_store.event_type.type === 'EDIT_BOOKING') {\r\n                  modifyBookingStore('guest', {\r\n                    ...booking_store.guest,\r\n                    name,\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n              value={this.guestInfo?.last_name}\r\n            />\r\n          </div>\r\n          {calendar_data.is_frontdesk_enabled &&\r\n            !isSingleUnit(this.rateplanSelection.roomtype.id) &&\r\n            (this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING') && (\r\n              <div class=\"mt-1 mt-md-0 d-flex align-items-center flex-fill\">\r\n                <div class=\"mr-md-1 p-0 flex-fill preference-select-container\">\r\n                  <select data-testid=\"unit\" class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.updateGuest({ unit: (event.target as HTMLInputElement).value })}>\r\n                    <option value=\"\" selected={this.guestInfo?.unit === ''}>\r\n                      {locales.entries.Lcz_Assignunits}\r\n                    </option>\r\n                    {filteredRoomList?.map(room => (\r\n                      <option value={room.id} selected={this.guestInfo?.unit === room.id.toString()}>\r\n                        {room.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            )}\r\n          {this.rateplanSelection.roomtype.is_bed_configuration_enabled && (\r\n            <div class=\"mt-1 mt-md-0 mr-md-1 flex-fill\">\r\n              <select\r\n                data-testid=\"bed_configuration\"\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                onChange={event => this.updateGuest({ bed_preference: (event.target as HTMLInputElement).value })}\r\n              >\r\n                <option value=\"\" selected={this.guestInfo?.bed_preference === ''}>\r\n                  {locales.entries.Lcz_BedConfiguration}\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestInfo?.bed_preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <p class=\"rate_amount\">\r\n            {formatAmount(this.currency?.symbol, this.getAmount())}/{locales.entries.Lcz_Stay}\r\n          </p>\r\n        </div>\r\n        {this.rateplanSelection.selected_variation.child_nbr > 0 && (\r\n          <div style={{ gap: '0.5rem', marginTop: '0.5rem' }} class=\"d-flex  flex-row  p-0 align-items-center aplicationInfoContainer\">\r\n            <p class={'m-0 p-0 text-danger'}>Any of the children below 3 years?</p>\r\n            <div class=\"mr-1 flex-fill\">\r\n              <select\r\n                class={`form-control input-sm ${this.isButtonPressed && this.guestInfo?.bed_preference === '' && 'border-danger'}`}\r\n                id={v4()}\r\n                style={{ width: 'max-content' }}\r\n                onChange={event => this.updateGuest({ infant_nbr: Number((event.target as HTMLInputElement).value) })}\r\n              >\r\n                <option value=\"\" selected={Number(this.guestInfo?.infant_nbr) === 0}>\r\n                  {locales.entries['No'] || 'No'}\r\n                </option>\r\n                {Array.from({ length: this.rateplanSelection.selected_variation.child_nbr }, (_, i) => i + 1).map(item => (\r\n                  <option value={item} selected={this.guestInfo?.infant_nbr === item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n.out-of-service-label {\r\n  margin-left: 5px !important;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries } from '@/models/IBooking';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean = false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    console.log({ fromDate: this.fromDate, toDate: this.toDate });\r\n    return (\r\n      <Host>\r\n        <div class={`m-0 p-0 mb-1`}>\r\n          <div class=\"text-left p-0\">\r\n            <ir-date-view from_date={this.fromDate} dateOption=\"YYYY-MM-DD\" showDateDifference={false} to_date={this.toDate}></ir-date-view>\r\n          </div>\r\n        </div>\r\n        <div class={` mb-1 text-left ${this.isEventHover && 'p-0'}`}>\r\n          <div class=\"mb-1 \">\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">{locales.entries.Lcz_Reason}:</label>\r\n            <div class=\"p-0 m-0 pr-1  controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>\r\n            <span class=\"align-middle out-of-service-label\">{locales.entries.Lcz_OutOfservice}</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex  align-items-center\">\r\n                <span class=\"align-middle\">{locales.entries.Lcz_Or} </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_OptionalReason}\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">{locales.entries.Lcz_AutomaticReleaseIn}: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={Number(this.blockDatesData.RELEASE_AFTER_HOURS) == Number(releaseItem.CODE_NAME)}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>\r\n                      {locales.entries.Lcz_On} {this.getReleaseHoursString()}\r\n                    </em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.sourceContainer {\r\n  max-width: 350px;\r\n}\r\n.message-label {\r\n  font-size: 80%;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter } from '@stencil/core';\r\nimport { TAdultChildConstraints, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '../../../../models/igl-book-property';\r\n\r\nimport moment from 'moment';\r\nimport locales from '@/stores/locales.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-book-property-header',\r\n  styleUrl: 'igl-book-property-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookPropertyHeader {\r\n  @Prop() splitBookingId: any = '';\r\n  @Prop() bookingData: any = '';\r\n  @Prop() minDate: string;\r\n  @Prop() sourceOptions: TSourceOptions[] = [];\r\n  @Prop() message: string;\r\n  @Prop() bookingDataDefaultDateRange: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean = false;\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n  @Prop() splitBookings: any[];\r\n  @Prop() adultChildCount: { adult: number; child: number };\r\n  @Prop() dateRangeData: any;\r\n  @Prop() bookedByInfoData: any;\r\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\r\n  @Prop() propertyId: number;\r\n\r\n  @Event() splitBookingDropDownChange: EventEmitter<any>;\r\n  @Event() sourceDropDownChange: EventEmitter<string>;\r\n  @Event() adultChild: EventEmitter<any>;\r\n  @Event() checkClicked: EventEmitter<any>;\r\n  @Event() buttonClicked: EventEmitter<{ key: TPropertyButtonsTypes }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n  @Event() spiltBookingSelected: EventEmitter<{ key: string; data: unknown }>;\r\n\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n\r\n  private sourceOption: TSourceOption = {\r\n    code: '',\r\n    description: '',\r\n    tag: '',\r\n    id: '',\r\n    type: '',\r\n  };\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"d-flex flex-column text-left mb-1  flex-lg-row align-items-lg-center\">\r\n        <label class=\"mr-lg-1\">{locales.entries.Lcz_Tobooking}# </label>\r\n        <div class=\"btn-group mt-1 mt-lg-0 sourceContainer\">\r\n          <ir-autocomplete\r\n            value={\r\n              Object.keys(this.bookedByInfoData).length > 1 ? `${this.bookedByInfoData.bookingNumber} ${this.bookedByInfoData.firstName} ${this.bookedByInfoData.lastName}` : ''\r\n            }\r\n            from_date={moment(this.bookingDataDefaultDateRange.fromDate).format('YYYY-MM-DD')}\r\n            to_date={moment(this.bookingDataDefaultDateRange.toDate).format('YYYY-MM-DD')}\r\n            propertyId={this.propertyId}\r\n            placeholder={locales.entries.Lcz_BookingNumber}\r\n            onComboboxValue={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation;\r\n              this.spiltBookingSelected.emit(e.detail);\r\n            }}\r\n            isSplitBooking\r\n          ></ir-autocomplete>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"d-flex text-left  align-items-center\">\r\n        <label class=\"mr-1\">{locales.entries.Lcz_Source} </label>\r\n        <div class=\"btn-group mt-0 flex-fill sourceContainer\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.sourceDropDownChange.emit((evt.target as HTMLSelectElement).value)}>\r\n            {this.sourceOptions.map(option => {\r\n              if (option.type === 'LABEL') {\r\n                return <optgroup label={option.value}></optgroup>;\r\n              }\r\n              return (\r\n                <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                  {option.value}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n  handleAdultChildChange(key: string, value: string) {\r\n    //const value = (event.target as HTMLSelectElement).value;\r\n    let obj = {};\r\n    if (value === '') {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: 0,\r\n      };\r\n    } else {\r\n      obj = {\r\n        ...this.adultChildCount,\r\n        [key]: value,\r\n      };\r\n    }\r\n    modifyBookingStore('bookingAvailabilityParams', {\r\n      from_date: this.bookingDataDefaultDateRange.fromDate,\r\n      to_date: this.bookingDataDefaultDateRange.toDate,\r\n      adult_nbr: obj?.['adult'] ?? 0,\r\n      child_nbr: obj?.['child'] ?? 0,\r\n    });\r\n    this.adultChild.emit(obj);\r\n  }\r\n\r\n  getAdultChildConstraints() {\r\n    return (\r\n      <div class={'mt-1 mt-lg-0 d-flex flex-column text-left'}>\r\n        {/* <label class=\"mb-1 d-lg-none\">{locales.entries.Lcz_NumberOfGuests} </label> */}\r\n        <div class=\"form-group  my-lg-0 text-left d-flex align-items-center justify-content-between justify-content-sm-start\">\r\n          <fieldset>\r\n            <div class=\"btn-group ml-0\">\r\n              <ir-select\r\n                testId=\"adult_number\"\r\n                class={'m-0'}\r\n                selectedValue={this.adultChildCount?.adult?.toString()}\r\n                onSelectChange={e => this.handleAdultChildChange('adult', e.detail)}\r\n                select_id=\"adult_select\"\r\n                firstOption={locales.entries.Lcz_AdultsCaption}\r\n                LabelAvailable={false}\r\n                data={Array.from(Array(this.adultChildConstraints.adult_max_nbr), (_, i) => i + 1).map(option => ({\r\n                  text: option.toString(),\r\n                  value: option.toString(),\r\n                }))}\r\n              ></ir-select>\r\n            </div>\r\n          </fieldset>\r\n          {this.adultChildConstraints.child_max_nbr > 0 && (\r\n            <fieldset>\r\n              <div class=\"btn-group ml-1 p-0\">\r\n                {/* <select class=\"form-control input-sm\" id=\"xChildrenSmallSelect\" onChange={evt => this.handleAdultChildChange('child', evt)}>\r\n                  <option value={''}>{this.renderChildCaption()}</option>\r\n                  {Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => (\r\n                    <option value={option}>{option}</option>\r\n                  ))}\r\n                </select> */}\r\n                <ir-select\r\n                  selectedValue={this.adultChildCount?.child?.toString()}\r\n                  testId=\"child_number\"\r\n                  onSelectChange={e => this.handleAdultChildChange('child', e.detail)}\r\n                  select_id=\"child_select\"\r\n                  firstOption={this.renderChildCaption()}\r\n                  LabelAvailable={false}\r\n                  data={Array.from(Array(this.adultChildConstraints.child_max_nbr), (_, i) => i + 1).map(option => ({\r\n                    text: option.toString(),\r\n                    value: option.toString(),\r\n                  }))}\r\n                ></ir-select>\r\n              </div>\r\n            </fieldset>\r\n          )}\r\n          <ir-button\r\n            btn_id=\"check_availability\"\r\n            isLoading={isRequestPending('/Check_Availability')}\r\n            icon=\"\"\r\n            size=\"sm\"\r\n            class=\"ml-2\"\r\n            text={locales.entries.Lcz_Check}\r\n            onClickHandler={() => this.handleButtonClicked()}\r\n          ></ir-button>\r\n          {/* <button class={'btn btn-primary btn-sm  ml-2'} onClick={() => this.handleButtonClicked()}>\r\n            {locales.entries.Lcz_Check}\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderChildCaption() {\r\n    const maxAge = this.adultChildConstraints.child_max_age;\r\n    let years = locales.entries.Lcz_Years;\r\n\r\n    if (maxAge === 1) {\r\n      years = locales.entries.Lcz_Year;\r\n    }\r\n    return `${locales.entries.Lcz_ChildCaption} 0 - ${this.adultChildConstraints.child_max_age} ${years}`;\r\n  }\r\n  handleButtonClicked() {\r\n    if (this.isEventType('SPLIT_BOOKING') && Object.keys(this.bookedByInfoData).length <= 1) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: locales.entries.Lcz_ChooseBookingNumber,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      const initialToDate = moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date));\r\n      const initialFromDate = moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date));\r\n      const selectedFromDate = moment(new Date(this.dateRangeData.fromDate));\r\n      const selectedToDate = moment(new Date(this.dateRangeData.toDate));\r\n      if (selectedToDate.isBefore(initialFromDate) || selectedFromDate.isAfter(initialToDate)) {\r\n        this.toast.emit({\r\n          type: 'error',\r\n          title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n            '%1',\r\n            moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n          ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n          description: '',\r\n          position: 'top-right',\r\n        });\r\n        return;\r\n      } else if (this.adultChildCount.adult === 0) {\r\n        this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n        this.animateIrSelect.emit('adult_child_select');\r\n      } else {\r\n        this.buttonClicked.emit({ key: 'check' });\r\n      }\r\n    } else if (this.minDate && new Date(this.dateRangeData.fromDate).getTime() > new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date).getTime()) {\r\n      this.toast.emit({\r\n        type: 'error',\r\n        title: `${locales.entries.Lcz_CheckInDateShouldBeMAx.replace(\r\n          '%1',\r\n          moment(new Date(this.bookedByInfoData.from_date || this.defaultDaterange.from_date)).format('ddd, DD MMM YYYY'),\r\n        ).replace('%2', moment(new Date(this.bookedByInfoData.to_date || this.defaultDaterange.to_date)).format('ddd, DD MMM YYYY'))}  `,\r\n        description: '',\r\n        position: 'top-right',\r\n      });\r\n    } else if (this.adultChildCount.adult === 0) {\r\n      this.animateIrSelect.emit('adult_child_select');\r\n      this.toast.emit({ type: 'error', title: locales.entries.Lcz_PlzSelectNumberOfGuests, description: '', position: 'top-right' });\r\n    } else {\r\n      this.buttonClicked.emit({ key: 'check' });\r\n    }\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  render() {\r\n    const showSourceNode = this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? false : true;\r\n    return (\r\n      <Host>\r\n        {this.isEventType('SPLIT_BOOKING') && this.getSplitBookingList()}\r\n        {showSourceNode && this.getSourceNode()}\r\n        <div class={`d-flex flex-column flex-lg-row align-items-lg-center ${showSourceNode ? 'mt-1' : ''}`}>\r\n          <fieldset class=\"mt-lg-0 mr-1 \">\r\n            <igl-date-range\r\n              data-testid=\"date_picker\"\r\n              variant=\"booking\"\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={this.isEventType('PLUS_BOOKING') ? moment().add(-1, 'months').startOf('month').format('YYYY-MM-DD') : this.minDate}\r\n              disabled={this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')}\r\n              defaultData={this.bookingDataDefaultDateRange}\r\n            ></igl-date-range>\r\n          </fieldset>\r\n          {!this.isEventType('EDIT_BOOKING') && this.getAdultChildConstraints()}\r\n        </div>\r\n        <p class=\"text-right mt-1 message-label\">{calendar_data.tax_statement}</p>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center !important;\r\n  font-size: 14px !important;\r\n}\r\n.date-range-input {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  user-select: none;\r\n  font-size: 14px !important;\r\n}\r\n.iglRangeNights {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.date-view {\r\n  position: absolute;\r\n  background: white;\r\n  pointer-events: none;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin-left: 14px;\r\n  margin-right: 14px;\r\n  font-size: 13.65px !important;\r\n  display: flex;\r\n  align-items: center;\r\n  inset: 0;\r\n}\r\n.date-view svg {\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  margin-right: 10px;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex !important;\r\n  position: relative !important;\r\n  text-align: left;\r\n  align-items: center !important;\r\n  padding: 0 !important;\r\n  margin: 0;\r\n  border: 1px solid var(--ir-date-range-border, #379ff2);\r\n  width: var(--ir-date-range-width, 245px);\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.calendarPickerContainer:focus-within {\r\n  border-color: #379ff2;\r\n}\r\n.calendarPickerContainer[data-state='disabled'] {\r\n  border: 0px;\r\n  width: 280px;\r\n}\r\n.date-view[data-state='disabled'],\r\n.date-range-input[data-state='disabled'] {\r\n  margin: 0;\r\n  cursor: default;\r\n}\r\n.date-range-container-cn {\r\n  position: relative;\r\n  width: fit-content;\r\n}\r\n.date-range-container-cn:focus-within .date-range-container {\r\n  border: 1px solid #379ff2;\r\n}\r\n.date-range-container {\r\n  position: relative;\r\n  gap: 1rem;\r\n  font-size: 0.975rem;\r\n  line-height: 1.45;\r\n  border-radius: 0.21rem;\r\n  border: 1px solid #cacfe7;\r\n  color: #3b4781;\r\n  padding: 0.75rem 1rem;\r\n  box-sizing: border-box !important;\r\n  font-weight: 400;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  height: 2rem;\r\n  pointer-events: none;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.date-range-container-cn .date-range-input {\r\n  position: absolute;\r\n  width: 100% !important;\r\n  inset: 0;\r\n  cursor: pointer;\r\n}\r\n.date-range-container.disabled {\r\n  border: none;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n.date-range-input[data-state='disabled'] {\r\n  cursor: default;\r\n}\r\n","import { Component, Host, h, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\nimport { IToast } from '@components/ui/ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-date-range',\r\n  styleUrl: 'igl-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ reflect: true }) disabled: boolean = false;\r\n  @Prop() minDate: string;\r\n  @Prop() dateLabel: string;\r\n  @Prop() maxDate: string;\r\n  @Prop() withDateDifference: boolean = true;\r\n  @Prop() variant: 'booking' | 'default' = 'default';\r\n\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() toast: EventEmitter<IToast>;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = 'from';\r\n  private toDateStr: string = 'to';\r\n\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n\r\n  @Watch('defaultData')\r\n  handleDataChange(newValue: any, oldValue: any) {\r\n    if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  private initializeDates() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      // this.handleDateSelectEvent('selectedDateRange', {\r\n      //   fromDate: this.fromDate.getTime(),\r\n      //   toDate: this.toDate.getTime(),\r\n      //   fromDateStr: this.fromDateStr,\r\n      //   toDateStr: this.toDateStr,\r\n      //   dateDifference: this.totalNights,\r\n      // });\r\n    }\r\n    return [this.fromDateStr, this.toDateStr];\r\n  }\r\n\r\n  private calculateTotalNights() {\r\n    this.totalNights = calculateDaysBetweenDates(moment(this.fromDate).format('YYYY-MM-DD'), moment(this.toDate).format('YYYY-MM-DD'));\r\n  }\r\n  private getFormattedDateString(dt) {\r\n    return dt.getDate() + ' ' + dt.toLocaleString('default', { month: 'short' }).toLowerCase() + ' ' + dt.getFullYear();\r\n  }\r\n\r\n  private handleDateSelectEvent(key, data: any = '') {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  private handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n\r\n    this.handleDateSelectEvent('selectedDateRange', {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format('DD MMM YYYY'),\r\n      toDateStr: end.format('DD MMM YYYY'),\r\n      dateDifference: this.totalNights,\r\n    });\r\n\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    if (this.variant === 'booking') {\r\n      return (\r\n        <div class={`p-0 m-0 date-range-container-cn`}>\r\n          <ir-date-range\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-range>\r\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\r\n            {this.totalNights && <span class=\"m-0 p-0\">{this.totalNights + (this.totalNights > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`)}</span>}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Host>\r\n        <div class={`p-0 m-0 date-range-container-cn`}>\r\n          <ir-date-range\r\n            maxDate={this.maxDate}\r\n            class={'date-range-input'}\r\n            disabled={this.disabled}\r\n            fromDate={this.fromDate}\r\n            toDate={this.toDate}\r\n            minDate={this.minDate}\r\n            autoApply\r\n            data-state={this.disabled ? 'disabled' : 'active'}\r\n            onDateChanged={evt => {\r\n              this.handleDateChange(evt);\r\n            }}\r\n          ></ir-date-range>\r\n          <div class={`d-flex align-items-center m-0  date-range-container ${this.disabled ? 'disabled' : ''}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 448 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.fromDate).format('MMM DD, YYYY')}</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"m-0 p-0\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n              />\r\n            </svg>\r\n            <span>{moment(this.toDate).format('MMM DD, YYYY')}</span>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 350px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n.row.sc-igl-booking-form {\r\n  padding: 0 !important;\r\n}\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n/* .controlContainer1 .textarea-container {\r\n  border: 1px solid #ced4da; \r\n  border-radius: 0.25rem; \r\n  height: 60px; \r\n  width: 100%;\r\n} */\r\n.controlContainer textarea {\r\n  height: 60px !important;\r\n}\r\n.margin3 {\r\n  margin-bottom: 5px !important;\r\n}\r\n@media (min-width: 768px) {\r\n  .bookedByEmailContainer {\r\n    margin-left: 37px;\r\n  }\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment, Listen } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { IEntries, ICountry } from '@/models/IBooking';\r\nimport { v4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { TPropertyButtonsTypes } from '@/components';\r\nimport { z } from 'zod';\r\nimport { validateEmail } from '@/utils/utils';\r\nimport booking_store, { BookingStore, modifyBookingStore } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countries: ICountry[] = [];\r\n  @Prop() propertyId: number;\r\n  @State() isButtonPressed: boolean = false;\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  private country;\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: '',\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n\r\n    const countryId = country['COUNTRY_ID'];\r\n    this.country = countryId;\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.bookedByData, ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n    this.bookedByData = { ...this.bookedByData, selectedArrivalTime: this.arrivalTimeList[0].CODE_NAME };\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n    console.log('initial bookedby data', this.bookedByData);\r\n  }\r\n\r\n  private handleDataChange(key, event) {\r\n    this.bookedByData[key] = key === 'emailGuest' ? event.target.checked : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n    // console.log(this.bookedByData);\r\n  }\r\n  private handleCountryChange(value) {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      isdCode: value,\r\n      countryId: value,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    // console.log(this.bookedByData);\r\n  }\r\n\r\n  private handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  // async handleEmailInput(key, event: InputEvent) {\r\n  //   const inputElement = event.target as HTMLInputElement;\r\n  //   const inputValue = inputElement.value;\r\n  //   if (z.string().email().safeParse(inputValue).success) {\r\n  //     this.handleDataChange(key, event);\r\n  //   }\r\n  // }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (z.string().email().safeParse(email).success) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile_without_prefix,\r\n            countryId: res.country_id,\r\n            isdCode: res?.country_phone_prefix ?? res.isdCode.toString(),\r\n          };\r\n          console.log(this.bookedByData);\r\n        } else {\r\n          let prevBookedByData = { ...this.bookedByData };\r\n          prevBookedByData = { ...prevBookedByData, email };\r\n          this.bookedByData = { ...prevBookedByData };\r\n        }\r\n      } else {\r\n        let prevBookedByData = { ...this.bookedByData };\r\n        prevBookedByData = { ...prevBookedByData, email: '' };\r\n        this.bookedByData = { ...prevBookedByData };\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: { ...this.bookedByData },\r\n      });\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  private updateGuest(props: Partial<BookingStore['checkout_guest']>) {\r\n    modifyBookingStore('checkout_guest', { ...(booking_store.checkout_guest ?? {}), ...props });\r\n  }\r\n  handleComboboxChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    console.log(key, data);\r\n    if (key === 'blur') {\r\n      if (z.string().email().safeParse(data).success) {\r\n        this.bookedByData.email = data;\r\n        this.checkUser();\r\n      } else if (this.bookedByData.email !== '' && data == '') {\r\n        this.bookedByData.email = '';\r\n      }\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n    if (key === 'select') {\r\n      this.bookedByData.email = data.email;\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        id: data.id,\r\n        firstName: data.first_name,\r\n        lastName: data.last_name,\r\n        contactNumber: data.mobile_without_prefix,\r\n        countryId: data.country_id,\r\n        isdCode: data['country_phone_prefix'] ?? data?.country_id,\r\n      };\r\n      this.dataUpdateEvent.emit({\r\n        key: 'bookedByInfoUpdated',\r\n        data: this.bookedByData,\r\n      });\r\n    }\r\n\r\n    // console.log('data', data, 'key', key);\r\n    // switch (key) {\r\n    //   case 'blur':\r\n    //     if (data !== '') {\r\n    //       this.bookedByData.email = data;\r\n    //       this.checkUser();\r\n    //     } else {\r\n    //       let prevBookedByData = { ...this.bookedByData };\r\n    //       prevBookedByData = { ...prevBookedByData, email: '' };\r\n    //       this.bookedByData = { ...prevBookedByData };\r\n    //       this.dataUpdateEvent.emit({\r\n    //         key: 'bookedByInfoUpdated',\r\n    //         data: { ...this.bookedByData },\r\n    //       });\r\n    //     }\r\n\r\n    //     break;\r\n    //   case 'select':\r\n    //     this.bookedByData.email = data.email;\r\n    //     this.bookedByData = {\r\n    //       ...this.bookedByData,\r\n    //       id: data.id,\r\n    //       firstName: data.first_name,\r\n    //       lastName: data.last_name,\r\n    //       contactNumber: data.mobile,\r\n    //       countryId: data.country_id,\r\n    //       isdCode: data.country_id.toString(),\r\n    //     };\r\n    //     this.dataUpdateEvent.emit({\r\n    //       key: 'bookedByInfoUpdated',\r\n    //       data: this.bookedByData,\r\n    //     });\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  }\r\n  clearEvent() {\r\n    this.bookedByData = {\r\n      ...this.bookedByData,\r\n      id: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      contactNumber: '',\r\n      isdCode: this.country.toString(),\r\n      countryId: this.country,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n  }\r\n  @Listen('buttonClicked', { target: 'body' })\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: TPropertyButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    switch (event.detail.key) {\r\n      case 'book':\r\n      case 'bookAndCheckIn':\r\n        this.isButtonPressed = true;\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center text-left \">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">{locales.entries.Lcz_BookedBy}</label>\r\n            <div class=\"bookedByEmailContainer mt-1 mt-md-0 d-flex align-items-center\">\r\n              {/* <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              /> */}\r\n              <ir-autocomplete\r\n                testId={'main_guest_email'}\r\n                onComboboxValue={this.handleComboboxChange.bind(this)}\r\n                propertyId={this.propertyId}\r\n                type=\"text\"\r\n                value={this.bookedByData.email}\r\n                required\r\n                class={'flex-fill'}\r\n                placeholder={locales.entries.Lcz_FindEmailAddress}\r\n                onInputCleared={() => this.clearEvent()}\r\n                danger_border={this.isButtonPressed && this.bookedByData.email !== '' && validateEmail(this.bookedByData.email)}\r\n              ></ir-autocomplete>\r\n              <ir-tooltip class={'ml-1'} message=\"Leave empty if email is unavailable\"></ir-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3 \">\r\n          <div class=\"d-flex flex-column flex-md-row  justify-content-md-between \">\r\n            <div class=\"p-0 flex-fill \">\r\n              <div class=\"form-group d-flex flex-column flex-md-row align-items-md-center p-0 flex-fill \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_FirstName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill  \">\r\n                  <input\r\n                    data-testid=\"main_guest_first_name\"\r\n                    class={`form-control flex-fill ${this.isButtonPressed && this.bookedByData.firstName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_FirstName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => {\r\n                      this.updateGuest({ first_name: (event.target as HTMLInputElement).value });\r\n                      this.handleDataChange('firstName', event);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_LastName}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <input\r\n                    data-testid=\"main_guest_last_name\"\r\n                    class={`form-control ${this.isButtonPressed && this.bookedByData.lastName === '' && 'border-danger'}`}\r\n                    type=\"text\"\r\n                    placeholder={locales.entries.Lcz_LastName}\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_Country}</label>\r\n                {/* <div class=\"p-0 m-0  controlContainer flex-fill\"> */}\r\n                <ir-country-picker\r\n                  testId=\"main_guest_country\"\r\n                  class=\"flex-grow-1 m-0\"\r\n                  onCountryChange={e => this.handleCountryChange(e.detail.id)}\r\n                  countries={this.countries}\r\n                  country={this.countries.find(c => c.id === this.bookedByData.countryId)}\r\n                ></ir-country-picker>\r\n                {/* <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      {locales.entries.Lcz_Select}\r\n                    </option>\r\n                    {this.countries.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select> */}\r\n                {/* </div> */}\r\n              </div>\r\n\r\n              {/* <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0  d-flex  controlContainer flex-fill\">\r\n                  <div class=\" p-0 m-0\">\r\n                    <select class={`form-control input-sm pr-0`} id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        {locales.entries.Lcz_Isd}\r\n                      </option>\r\n                      {this.countries.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"flex-fill p-0 m-0\">\r\n                    <input\r\n                      class={`form-control\r\n                     \r\n                      `}\r\n                      type=\"tel\"\r\n                      placeholder={locales.entries.Lcz_ContactNumber}\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n              <div class=\"form-group p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_MobilePhone}</label>\r\n                <div class=\"p-0 m-0 controlContainer flex-fill\">\r\n                  <ir-phone-input\r\n                    testId=\"main_guest_phone\"\r\n                    language={this.language}\r\n                    // label={locales.entries.Lcz_MobilePhone}\r\n                    value={this.bookedByData.contactNumber}\r\n                    phone_prefix={this.bookedByData.isdCode}\r\n                    default_country={this.bookedByData.countryId}\r\n                    onTextChange={e => {\r\n                      this.handleDataChange('isdCode', { target: { value: e.detail.phone_prefix } });\r\n                      this.handleDataChange('contactNumber', { target: { value: e.detail.mobile } });\r\n                    }}\r\n                  ></ir-phone-input>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_YourArrivalTime}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                  <select\r\n                    data-testid=\"arrival_time\"\r\n                    class={`form-control input-sm pr-0 ${this.isButtonPressed && this.bookedByData.selectedArrivalTime.code === '' && 'border-danger'}`}\r\n                    id={v4()}\r\n                    onChange={event => this.handleDataChange('selectedArrivalTime', event)}\r\n                  >\r\n                    {/* <option value=\"\" selected={this.bookedByData.selectedArrivalTime.code === ''}>\r\n                      -\r\n                    </option> */}\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime.code === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"p-0 flex-fill  ml-md-3\">\r\n              <div class=\"  p-0 d-flex flex-column flex-md-row align-items-md-center \">\r\n                <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_AnyMessageForUs}</label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill \">\r\n                  <textarea\r\n                    data-testid=\"note\"\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control \"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group mt-md-1  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardNumber}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_CardHolderName}</label>\r\n                    <div class=\"p-0 m-0  controlContainer flex-fill\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group  p-0 d-flex flex-column flex-md-row align-items-md-center\">\r\n                    <label class=\"p-0 m-0 margin3\">{locales.entries.Lcz_ExpiryDate}</label>\r\n                    <div class=\"p-0 m-0 row  controlContainer flex-fill\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div class=\"form-group mt-1 p-0 d-flex flex-row align-items-center\">\r\n                <label class=\"p-0 m-0\" htmlFor={'emailTheGuestId'}>\r\n                  {locales.entries.Lcz_EmailTheGuest}\r\n                </label>\r\n                <div class=\"p-0 m-0  controlContainer flex-fill checkBoxContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"checkbox\"\r\n                    checked={this.bookedByData.emailGuest}\r\n                    id={'emailTheGuestId'}\r\n                    onChange={event => this.handleDataChange('emailGuest', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n.currency {\r\n  display: block;\r\n  position: absolute;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: auto;\r\n  left: 10px;\r\n}\r\n.rate-input {\r\n  font-size: 14px;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  border-left: 0;\r\n}\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n}\r\n.new-currency {\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.975rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.input-group-prepend span[data-state='focus'] {\r\n  border-color: var(--blue);\r\n}\r\n.input-group-prepend span[data-disabled] {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n.non-ref-span {\r\n  font-size: 12px;\r\n  color: var(--green);\r\n}\r\n.rateplan-name-container {\r\n  margin-bottom: 0.5rem !important;\r\n}\r\n.rateplan-container {\r\n  margin-top: 0.5rem;\r\n}\r\n@media only screen and (min-width: 1200px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n    margin-top: 0;\r\n  }\r\n  .rateplan-container {\r\n    width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) {\r\n  .max-w-300 {\r\n    max-width: 200px;\r\n  }\r\n  .rate-input-container {\r\n    max-width: 50px;\r\n  }\r\n  .rateplan-name-container {\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n@media only screen and (min-width: 991px) and (max-width: 1300px) {\r\n  .rateplan-name-container {\r\n    width: 40%;\r\n  }\r\n  .price-amount {\r\n    max-width: 150px !important;\r\n  }\r\n}\r\n@media only screen and (max-width: 768px) {\r\n  .booking-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.total-nights-container {\r\n  width: max-content;\r\n}\r\n.nightBorder {\r\n  border-left-width: 0;\r\n  border-top-right-radius: 3px !important;\r\n  border-bottom-right-radius: 3px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Fragment } from '@stencil/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport locales from '@/stores/locales.store';\r\nimport { RatePlan, Variation } from '@/models/property';\r\nimport booking_store, { IRatePlanSelection, reserveRooms, resetReserved, updateRoomParams } from '@/stores/booking.store';\r\n\r\n@Component({\r\n  tag: 'igl-rate-plan',\r\n  styleUrl: 'igl-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglRatePlan {\r\n  // Used Props with type annotations\r\n  @Prop() ratePlan: RatePlan;\r\n  @Prop() roomTypeId: number;\r\n  @Prop() ratePricingMode: Array<{ CODE_NAME: string; CODE_VALUE_EN: string }> = [];\r\n  @Prop() currency!: { symbol: string };\r\n  @Prop() shouldBeDisabled!: boolean;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() isBookDisabled: boolean = false;\r\n  @Prop() visibleInventory!: IRatePlanSelection;\r\n\r\n  @Event() buttonClicked!: EventEmitter<{ [key: string]: any }>;\r\n\r\n  // Determine if the form inputs should be disabled\r\n  private disableForm(): boolean {\r\n    const { bookingType, shouldBeDisabled, ratePlan, visibleInventory } = this;\r\n    if (bookingType === 'EDIT_BOOKING' && shouldBeDisabled) {\r\n      return false;\r\n    }\r\n    return !ratePlan.is_available_to_book || visibleInventory?.visibleInventory === 0;\r\n  }\r\n\r\n  // Update the rate plan selection in the booking store\r\n  private updateRateplanSelection(props: Partial<IRatePlanSelection>): void {\r\n    const { roomTypeId, ratePlan } = this;\r\n    const currentSelections = booking_store.ratePlanSelections;\r\n\r\n    booking_store.ratePlanSelections = {\r\n      ...currentSelections,\r\n      [roomTypeId]: {\r\n        ...currentSelections[roomTypeId],\r\n        [ratePlan.id]: {\r\n          ...currentSelections[roomTypeId][ratePlan.id],\r\n          ...props,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // Handle changes to select inputs\r\n  private handleDataChange(key: 'adult_child_offering' | 'rate' | 'totalRooms', evt: Event): void {\r\n    const value = (evt.target as HTMLInputElement | HTMLSelectElement).value;\r\n    if (key === 'adult_child_offering') {\r\n      this.handleVariationChange(value);\r\n    } else if (key === 'rate') {\r\n      this.updateRateplanSelection({ view_mode: value as any });\r\n    } else if (key === 'totalRooms') {\r\n      reserveRooms({\r\n        roomTypeId: this.roomTypeId,\r\n        ratePlanId: this.ratePlan.id,\r\n        rooms: Number(value),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Navigate to the next page for booking\r\n  private bookProperty(): void {\r\n    if (this.bookingType === 'BAR_BOOKING') {\r\n      resetReserved();\r\n    }\r\n    this.reserveRoom();\r\n    this.buttonClicked.emit({ key: 'next' });\r\n  }\r\n\r\n  private reserveRoom() {\r\n    reserveRooms({\r\n      roomTypeId: this.roomTypeId,\r\n      ratePlanId: this.ratePlan.id,\r\n      rooms: 1,\r\n      guest: [\r\n        {\r\n          last_name: booking_store.guest?.last_name,\r\n          first_name: booking_store.guest?.first_name,\r\n          unit: this.roomTypeId === booking_store.guest?.roomtype_id ? booking_store.guest?.unit : null,\r\n          bed_preference: this.visibleInventory.roomtype.is_bed_configuration_enabled ? booking_store.guest?.bed_preference : null,\r\n          infant_nbr: this.visibleInventory.selected_variation?.child_nbr > 0 ? booking_store.guest?.infant_nbr : null,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n  // Render the rate amount\r\n  private renderRate(): string {\r\n    const { visibleInventory } = this;\r\n    if (!visibleInventory) return '';\r\n    if (visibleInventory.is_amount_modified) {\r\n      return visibleInventory.rp_amount.toString();\r\n    }\r\n    const { selected_variation, view_mode } = visibleInventory;\r\n    const amount = view_mode === '001' ? selected_variation?.discounted_amount : selected_variation?.amount_per_night_gross;\r\n    return amount?.toString() || '';\r\n  }\r\n\r\n  // Format variation for display\r\n  private formatVariation(variation: Variation): string {\r\n    if (!variation) return '';\r\n    const adults = `${variation.adult_nbr} ${variation.adult_nbr === 1 ? locales.entries['Lcz_Adult']?.toLowerCase() : locales.entries['Lcz_Adults']?.toLowerCase()}`;\r\n    const children =\r\n      variation.child_nbr > 0\r\n        ? `${variation.child_nbr} ${variation.child_nbr > 1 ? locales.entries['Lcz_Children']?.toLowerCase() : locales.entries['Lcz_Child']?.toLowerCase()}`\r\n        : '';\r\n    return children ? `${adults} ${children}` : adults;\r\n  }\r\n\r\n  // Get tooltip messages for the rate plan\r\n  private getTooltipMessages(): string | undefined {\r\n    const { ratePlan, visibleInventory } = this;\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    if (!selectedVariation) return;\r\n\r\n    const matchingVariation = ratePlan.variations?.find(variation => this.formatVariation(variation) === this.formatVariation(selectedVariation));\r\n\r\n    if (!matchingVariation) return;\r\n\r\n    const cancellationPolicy = matchingVariation.applicable_policies?.find(p => p.type === 'cancelation')?.combined_statement;\r\n    const guaranteePolicy = matchingVariation.applicable_policies?.find(p => p.type === 'guarantee')?.combined_statement;\r\n\r\n    let tooltip = '';\r\n    if (cancellationPolicy) {\r\n      tooltip += `<b><u>Cancellation:</u></b> ${cancellationPolicy}<br/>`;\r\n    }\r\n    if (guaranteePolicy) {\r\n      tooltip += `<b><u>Guarantee:</u></b> ${guaranteePolicy}`;\r\n    }\r\n    return tooltip || undefined;\r\n  }\r\n\r\n  // Handle variation change when a different option is selected\r\n  private async handleVariationChange(value: string): Promise<void> {\r\n    const { ratePlan, roomTypeId } = this;\r\n    const variations = ratePlan.variations || [];\r\n    const selectedVariation = variations.find(v => this.formatVariation(v) === value);\r\n\r\n    if (!selectedVariation) return;\r\n\r\n    updateRoomParams({\r\n      params: { selected_variation: selectedVariation },\r\n      ratePlanId: ratePlan.id,\r\n      roomTypeId,\r\n    });\r\n  }\r\n\r\n  // Reset reserved rooms in the booking store\r\n\r\n  render() {\r\n    const { ratePlan, bookingType, currency, ratePricingMode, visibleInventory } = this;\r\n    const isAvailableToBook = ratePlan.is_available_to_book;\r\n    const disableForm = this.disableForm();\r\n    const selectedVariation = visibleInventory?.selected_variation;\r\n    const formattedVariations = ratePlan.variations?.map(v => this.formatVariation(v));\r\n    // if (!this.visibleInventory) {\r\n    //   return null;\r\n    // }\r\n    return (\r\n      <Host data-testid={`rp-${this.ratePlan.id}`}>\r\n        <div\r\n          class={`d-flex mt-1  p-0 ${\r\n            isAvailableToBook ? 'flex-column flex-lg-row align-items-lg-center justify-content-lg-between' : 'align-items-center justify-content-between'\r\n          }`}\r\n        >\r\n          <div data-testid={'rp_name'} class=\"rateplan-name-container m-0 p-0  d-flex align-items-center\" style={{ gap: '0.5rem' }}>\r\n            {bookingType === 'BAR_BOOKING' ? (\r\n              <p class=\"m-0 p-0\">\r\n                {/* <span class=\"font-weight-bold\">{ratePlan.name.split('/')[0]}</span> */}\r\n                <span>\r\n                  {ratePlan.name.split('/')[1]} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n                </span>\r\n              </p>\r\n            ) : (\r\n              <span>\r\n                {ratePlan.short_name} {ratePlan.is_non_refundable && <span class=\"non-ref-span\">Non Refundable</span>}\r\n              </span>\r\n            )}\r\n            {isAvailableToBook && <ir-tooltip message={this.getTooltipMessages()}></ir-tooltip>}\r\n          </div>\r\n\r\n          {isAvailableToBook ? (\r\n            <div class=\"d-md-flex m-md-0  justify-content-md-end align-items-md-center flex-fill rateplan-container\">\r\n              <div class=\"flex-fill max-w-300 flex-grow-1\">\r\n                <fieldset class=\"position-relative flex-grow-1 w-100\">\r\n                  <select\r\n                    disabled={disableForm}\r\n                    data-testid=\"adult-child-offering\"\r\n                    class=\"form-control input-sm flex-grow-1 w-100\"\r\n                    id={uuidv4()}\r\n                    onChange={evt => this.handleDataChange('adult_child_offering', evt)}\r\n                  >\r\n                    {formattedVariations?.map(variation => (\r\n                      <option value={variation} selected={this.formatVariation(selectedVariation) === variation}>\r\n                        {variation}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n              <div class=\"m-0 p-0 mt-1 mt-md-0 d-flex justify-content-between align-items-md-center ml-md-1\">\r\n                <div class=\"d-flex m-0 p-0 rate-total-night-view mt-0 flex-grow-1\">\r\n                  <ir-price-input\r\n                    testId={'amount_input'}\r\n                    disabled={disableForm}\r\n                    onTextChange={e =>\r\n                      this.updateRateplanSelection({\r\n                        is_amount_modified: true,\r\n                        rp_amount: Number(e.detail),\r\n                      })\r\n                    }\r\n                    aria-label={`${this.visibleInventory?.roomtype?.name} ${this.ratePlan.short_name}'s rate`}\r\n                    aria-describedby={`${this.ratePlan.short_name}'s rate`}\r\n                    class=\"ir-br-input-none price-amount w-100 flex-grow-1\"\r\n                    currency={currency.symbol}\r\n                    value={this.renderRate()}\r\n                    placeholder={locales.entries.Lcz_Rate || 'Rate'}\r\n                  ></ir-price-input>\r\n                  <fieldset class=\"position-relative m-0 total-nights-container p-0\">\r\n                    <select\r\n                      data-testid={'nigh_stay_select'}\r\n                      disabled={disableForm}\r\n                      class=\"form-control input-sm m-0 nightBorder rounded-0 py-0\"\r\n                      id={uuidv4()}\r\n                      onChange={evt =>\r\n                        this.updateRateplanSelection({\r\n                          view_mode: (evt.target as HTMLSelectElement).value as any,\r\n                        })\r\n                      }\r\n                    >\r\n                      {ratePricingMode.map(data => (\r\n                        <option value={data.CODE_NAME} selected={visibleInventory?.view_mode === data.CODE_NAME}>\r\n                          {data.CODE_VALUE_EN}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </fieldset>\r\n                </div>\r\n                {(bookingType === 'PLUS_BOOKING' || bookingType === 'ADD_ROOM') && (\r\n                  <div class=\"flex-fill mt-0 ml-1 m-0 mt-md-0 p-0\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <select\r\n                        data-testid={'inventory_select'}\r\n                        disabled={visibleInventory.visibleInventory === 0}\r\n                        class=\"form-control input-sm\"\r\n                        id={uuidv4()}\r\n                        onChange={evt => this.handleDataChange('totalRooms', evt)}\r\n                      >\r\n                        {Array.from({ length: (visibleInventory.visibleInventory || 0) + 1 }, (_, i) => i).map(i => (\r\n                          <option value={i} selected={visibleInventory.reserved === i}>\r\n                            {i}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </fieldset>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {bookingType === 'EDIT_BOOKING' && (\r\n                <Fragment>\r\n                  <div class=\"m-0 p-0 ml-md-1 mt-md-0 d-none d-md-block\">\r\n                    <fieldset class=\"position-relative\">\r\n                      <input\r\n                        data-testid={'inventory_radio'}\r\n                        disabled={disableForm}\r\n                        type=\"radio\"\r\n                        name=\"ratePlanGroup\"\r\n                        value=\"1\"\r\n                        onChange={() => {\r\n                          resetReserved();\r\n                          this.reserveRoom();\r\n                        }}\r\n                        checked={visibleInventory.reserved === 1}\r\n                      />\r\n                    </fieldset>\r\n                  </div>\r\n                  <button\r\n                    data-testid=\"book_property\"\r\n                    disabled={disableForm}\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary booking-btn mt-lg-0 btn-sm ml-md-1 mt-1 d-md-none\"\r\n                    onClick={() => {\r\n                      resetReserved();\r\n                      this.reserveRoom();\r\n                      this.bookProperty();\r\n                    }}\r\n                  >\r\n                    {visibleInventory.reserved === 1 ? locales.entries.Lcz_Current : locales.entries.Lcz_Select}\r\n                  </button>\r\n                </Fragment>\r\n              )}\r\n\r\n              {(bookingType === 'BAR_BOOKING' || bookingType === 'SPLIT_BOOKING') && (\r\n                <button\r\n                  data-testid=\"book\"\r\n                  disabled={disableForm || (bookingType === 'SPLIT_BOOKING' && this.isBookDisabled)}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary booking-btn mt-md-0 btn-sm ml-md-1 mt-1\"\r\n                  onClick={() => this.bookProperty()}\r\n                >\r\n                  {locales.entries.Lcz_Book}\r\n                </button>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p class=\"text-danger m-0 p-0\">{locales.entries['Lcz_NotAvailable'] || 'Not available'}</p>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.margin-bottom-8 {\r\n  margin-bottom: 8px !important;\r\n}\r\n","import { RoomType } from '@/models/property';\r\nimport { getVisibleInventory } from '@/stores/booking.store';\r\nimport { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-room-type',\r\n  styleUrl: 'igl-room-type.css',\r\n  scoped: true,\r\n})\r\nexport class IglRoomType {\r\n  @Prop() roomType: RoomType;\r\n  @Prop() bookingType = 'PLUS_BOOKING';\r\n  @Prop() dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() roomInfoId: number | null = null;\r\n  @Prop() currency;\r\n  @Prop() initialRoomIds: any;\r\n  @Prop() isBookDisabled: boolean;\r\n\r\n  @State() selectedRooms: number[] = [];\r\n  @State() totalRooms: number;\r\n  @State() roomsDistributions: number[] = [];\r\n\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private validBookingTypes = ['PLUS_BOOKING', 'ADD_ROOM', 'EDIT_BOOKING', 'SPLIT_BOOKING'];\r\n\r\n  render() {\r\n    const isValidBookingType = this.validBookingTypes.includes(this.bookingType);\r\n\r\n    return (\r\n      <Host>\r\n        {isValidBookingType && this.roomType.rateplans?.length > 0 && <div class=\"font-weight-bold font-medium-1 margin-bottom-8 \">{this.roomType.name}</div>}\r\n        {this.roomType.rateplans?.map(ratePlan => {\r\n          if (!!ratePlan.variations) {\r\n            let shouldBeDisabled = this.roomInfoId && this.roomInfoId === this.roomType.id;\r\n            // let roomId = -1;\r\n            // if (shouldBeDisabled && this.initialRoomIds) {\r\n            //   roomId = this.initialRoomIds.roomId;\r\n            // }\r\n            const visibleInventory = getVisibleInventory(this.roomType.id, ratePlan.id);\r\n            return (\r\n              <igl-rate-plan\r\n                // is_bed_configuration_enabled={this.roomType.is_bed_configuration_enabled}\r\n                // index={index}\r\n                isBookDisabled={this.isBookDisabled}\r\n                visibleInventory={visibleInventory}\r\n                key={`rate-plan-${ratePlan.id}`}\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={isValidBookingType ? '' : ''}\r\n                currency={this.currency}\r\n                // dateDifference={this.dateDifference}\r\n                ratePlan={ratePlan}\r\n                roomTypeId={this.roomType.id}\r\n                // totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                shouldBeDisabled={shouldBeDisabled}\r\n                // physicalrooms={this.roomType.physicalrooms}\r\n                // defaultRoomId={roomId}\r\n              ></igl-rate-plan>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  position: relative;\r\n}\r\n.selected {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\ninput {\r\n  width: 100%;\r\n  position: relative;\r\n  border-top-left-radius: 0px !important;\r\n  border-left: 0 !important;\r\n  border-bottom-left-radius: 0px !important;\r\n}\r\nlabel {\r\n  margin: 0;\r\n  border-top-right-radius: 0px !important;\r\n  border-right: 0 !important;\r\n  border-bottom-right-radius: 0px !important;\r\n  width: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding-right: 3px !important;\r\n  justify-content: center;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\nlabel[data-state='focused'] {\r\n  border-color: var(--blue);\r\n}\r\n\r\n.combobox {\r\n  margin: 0;\r\n  top: 30px;\r\n  min-width: 100%;\r\n  width: max-content;\r\n  display: block;\r\n  z-index: 10000;\r\n  padding: 1px;\r\n  background: white;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  padding: 5px 0;\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n.dropdown-item {\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  all: unset;\r\n  right: 4px;\r\n}\r\n.combobox p,\r\nspan,\r\nloader-container {\r\n  padding: 5px 16px;\r\n  margin: 0px;\r\n  margin-top: 2px;\r\n  width: 100%;\r\n}\r\n.combobox p {\r\n  cursor: pointer;\r\n}\r\n.combobox p:hover {\r\n  background: #f4f5fa;\r\n}\r\n\r\n.combobox p[data-selected],\r\n.combobox p[data-selected]:hover {\r\n  color: #fff;\r\n  text-decoration: none;\r\n  background-color: #666ee8;\r\n}\r\n.loader {\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid #0f0f0f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Host, Prop, State, h, Event, EventEmitter, Listen, Element, Fragment } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IToast } from '../ir-toast/toast';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'ir-autocomplete',\r\n  styleUrl: 'ir-autocomplete.css',\r\n  scoped: true,\r\n})\r\nexport class IrAutocomplete {\r\n  @Prop() duration: number = 300;\r\n  @Prop() placeholder: string = '';\r\n  @Prop() propertyId: number;\r\n  @Prop() isSplitBooking: boolean = false;\r\n  @Prop() type: 'email' | 'text' | 'password' | 'number' | 'search' = 'text';\r\n  @Prop() name: string = '';\r\n  @Prop() inputId: string = v4();\r\n  @Prop() required: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: string;\r\n  @Prop() from_date: string = '';\r\n  @Prop() to_date: string = '';\r\n  @Prop() danger_border: boolean;\r\n  @Prop() testId: string;\r\n\r\n  @State() inputValue: string = '';\r\n  @State() data: any[] = [];\r\n  @State() selectedIndex: number = -1;\r\n  @State() isComboBoxVisible: boolean = false;\r\n  @State() isLoading: boolean = true;\r\n  @State() isItemSelected: boolean;\r\n  @State() inputFocused: boolean = false;\r\n\r\n  @Event({ bubbles: true, composed: true }) comboboxValue: EventEmitter<{ key: string; data: unknown }>;\r\n  @Event() inputCleared: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  @Element() el: HTMLElement;\r\n  private inputRef: HTMLInputElement;\r\n  private debounceTimer: any;\r\n  private bookingService = new BookingService();\r\n  private no_result_found = '';\r\n  componentWillLoad() {\r\n    this.no_result_found = locales.entries.Lcz_NoResultsFound;\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    const dataSize = this.data.length;\r\n    const itemHeight = this.getHeightOfPElement();\r\n    if (dataSize > 0) {\r\n      switch (event.key) {\r\n        case 'ArrowUp':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex - 1 + dataSize) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'ArrowDown':\r\n          event.preventDefault();\r\n          this.selectedIndex = (this.selectedIndex + 1) % dataSize;\r\n          this.adjustScrollPosition(itemHeight);\r\n          break;\r\n        case 'Enter':\r\n        case ' ':\r\n        case 'ArrowRight':\r\n          event.preventDefault();\r\n          this.selectItem(this.selectedIndex);\r\n          break;\r\n        case 'Escape':\r\n          this.inputRef?.blur();\r\n          this.isComboBoxVisible = false;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  getHeightOfPElement() {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const pItem = combobox.querySelector('p');\r\n      return pItem ? pItem.offsetHeight : 0;\r\n    }\r\n    return 0;\r\n  }\r\n  adjustScrollPosition(itemHeight, visibleHeight = 250) {\r\n    const combobox = this.el.querySelector('.combobox');\r\n    if (combobox) {\r\n      const margin = 2;\r\n      const itemTotalHeight = itemHeight + margin;\r\n      const selectedPosition = itemTotalHeight * this.selectedIndex;\r\n      let newScrollTop = selectedPosition - visibleHeight / 2 + itemHeight / 2;\r\n      newScrollTop = Math.max(0, Math.min(newScrollTop, combobox.scrollHeight - visibleHeight));\r\n      combobox.scrollTo({\r\n        top: newScrollTop,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n\r\n  selectItem(index) {\r\n    if (this.data[index]) {\r\n      this.isItemSelected = true;\r\n      this.comboboxValue.emit({ key: 'select', data: this.data[index] });\r\n      this.inputValue = '';\r\n      this.resetCombobox();\r\n    }\r\n  }\r\n\r\n  debounceFetchData() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.fetchData();\r\n    }, this.duration);\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      this.isLoading = true;\r\n      let data = [];\r\n      if (!this.isSplitBooking) {\r\n        data = await this.bookingService.fetchExposedGuest(this.inputValue, this.propertyId);\r\n      } else {\r\n        if (this.inputValue.split(' ').length === 1) {\r\n          data = await this.bookingService.fetchExposedBookings(this.inputValue, this.propertyId, this.from_date, this.to_date);\r\n        }\r\n      }\r\n      this.data = data;\r\n      if (!this.isComboBoxVisible) {\r\n        this.isComboBoxVisible = true;\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event) {\r\n    this.inputValue = (event.target as HTMLInputElement).value;\r\n    if (this.inputValue) {\r\n      this.debounceFetchData();\r\n    } else {\r\n      clearTimeout(this.debounceTimer);\r\n      this.resetCombobox(false);\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isComboBoxVisible = false;\r\n    }\r\n  }\r\n  handleBlur() {\r\n    this.inputFocused = false;\r\n    setTimeout(() => {\r\n      if (this.isDropdownItem(document.activeElement)) {\r\n        return;\r\n      }\r\n      if (this.isSplitBooking) {\r\n        if (!this.isItemSelected) {\r\n          if (this.data.length > 0) {\r\n            this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          } else {\r\n            if (this.inputValue !== '') {\r\n              this.toast.emit({\r\n                type: 'error',\r\n                description: '',\r\n                title: `The Booking #${this.inputValue} is not Available`,\r\n                position: 'top-right',\r\n              });\r\n              this.inputCleared.emit();\r\n            }\r\n          }\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      } else {\r\n        if (!this.isItemSelected) {\r\n          this.comboboxValue.emit({ key: 'blur', data: this.inputValue });\r\n          this.inputValue = '';\r\n          this.resetCombobox();\r\n        } else {\r\n          this.isItemSelected = false;\r\n        }\r\n      }\r\n    }, 200);\r\n  }\r\n  isDropdownItem(element) {\r\n    return element && element.closest('.combobox');\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    clearTimeout(this.debounceTimer);\r\n    this.inputRef?.removeEventListener('blur', this.handleBlur);\r\n    this.inputRef?.removeEventListener('click', this.selectItem);\r\n    this.inputRef?.removeEventListener('keydown', this.handleKeyDown);\r\n    this.inputRef?.removeEventListener('focus', this.handleFocus);\r\n  }\r\n  handleItemKeyDown(event: KeyboardEvent, index: number) {\r\n    if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowRight') {\r\n      this.selectItem(index);\r\n      event.preventDefault();\r\n    } else if (event.key === 'Escape') {\r\n      this.isComboBoxVisible = false;\r\n      this.inputRef?.blur();\r\n      event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  renderDropdown() {\r\n    if (this.inputValue !== '') {\r\n      return (\r\n        <div class={`position-absolute dropdown-menu  rounded combobox`}>\r\n          {this.data?.map((d, index) => (\r\n            <p\r\n              role=\"button\"\r\n              class=\"dropdown-item\"\r\n              onKeyDown={e => this.handleItemKeyDown(e, index)}\r\n              data-selected={this.selectedIndex === index}\r\n              tabIndex={0}\r\n              onClick={() => this.selectItem(index)}\r\n            >\r\n              {this.isSplitBooking ? (\r\n                <Fragment>{`${d.booking_nbr} ${d.guest.first_name} ${d.guest.last_name}`}</Fragment>\r\n              ) : (\r\n                <div class={'d-flex align-items-center flex-fill'}>\r\n                  <p class={'p-0 m-0'}>\r\n                    {`${d.email}`} <span class={'p-0 m-0'}>{` - ${d.first_name} ${d.last_name}`}</span>\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </p>\r\n          ))}\r\n          {this.isLoading && (\r\n            <div class=\"loader-container d-flex align-items-center justify-content-center\">\r\n              <div class=\"loader\"></div>\r\n            </div>\r\n          )}\r\n          {this.data.length === 0 && !this.isLoading && <span class={'text-center'}>{this.no_result_found}</span>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  handleFocus() {\r\n    this.isComboBoxVisible = true;\r\n    this.inputFocused = true;\r\n  }\r\n  clearInput() {\r\n    this.inputValue = '';\r\n    this.resetCombobox();\r\n    this.inputCleared.emit(null);\r\n  }\r\n  resetCombobox(withblur: boolean = true) {\r\n    if (withblur) {\r\n      this.inputRef?.blur();\r\n    }\r\n    this.data = [];\r\n    this.selectedIndex = -1;\r\n    this.isComboBoxVisible = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={'d-flex align-items-center '}>\r\n          <label data-state={this.inputFocused ? 'focused' : 'blured'} htmlFor={this.inputId} class={`form-control input-sm ${this.danger_border && 'border-danger'}`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"12\" width=\"12\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z\"\r\n              />\r\n            </svg>\r\n          </label>\r\n          <input\r\n            data-testid={this.testId}\r\n            required={this.required}\r\n            disabled={this.disabled}\r\n            id={this.inputId}\r\n            onKeyDown={this.handleKeyDown.bind(this)}\r\n            class={`form-control input-sm flex-full ${this.danger_border && 'border-danger'}`}\r\n            type={this.type}\r\n            name={this.name}\r\n            value={this.value || this.inputValue}\r\n            placeholder={this.placeholder}\r\n            onBlur={this.handleBlur.bind(this)}\r\n            autoComplete=\"none\"\r\n            onInput={this.handleInputChange.bind(this)}\r\n            onFocus={this.handleFocus.bind(this)}\r\n            ref={el => (this.inputRef = el)}\r\n          />\r\n          {this.inputValue && (\r\n            <button type=\"button\" class={'position-absolute d-flex align-items-center justify-content-center '} onClick={this.clearInput.bind(this)}>\r\n              <p class={'sr-only'}>clear input</p>\r\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                  fill=\"currentColor\"\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          )}\r\n        </div>\r\n        {this.isComboBoxVisible && this.renderDropdown()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n.combobox-menu {\r\n  max-height: 200px;\r\n  overflow: auto;\r\n}\r\n","import { ICountry } from '@/models/IBooking';\r\nimport { Component, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-country-picker',\r\n  styleUrl: 'ir-country-picker.css',\r\n  scoped: true,\r\n})\r\nexport class IrCountryPicker {\r\n  @Prop() countries: ICountry[] = [];\r\n  @Prop() country: ICountry;\r\n  @Prop({ mutable: true }) error: boolean;\r\n  @Prop() propertyCountry: ICountry;\r\n  @Prop() label: string;\r\n  @Prop() testId: string;\r\n  @Prop() autoValidate: boolean = false;\r\n\r\n  @State() inputValue: string;\r\n  @State() selectedCountry: ICountry;\r\n  @State() filteredCountries: ICountry[] = [];\r\n  @State() searching: boolean = false;\r\n\r\n  @Event() countryChange: EventEmitter<ICountry>;\r\n\r\n  private debounceTimeout: NodeJS.Timeout;\r\n\r\n  componentWillLoad() {\r\n    this.filteredCountries = [...this.countries];\r\n    if (this.country) {\r\n      this.inputValue = this.country.name;\r\n      this.selectedCountry = this.country;\r\n    }\r\n  }\r\n\r\n  @Watch('country')\r\n  handleCountryChange(newCountry: ICountry, oldCountry: ICountry) {\r\n    if (newCountry?.id !== oldCountry?.id) {\r\n      this.inputValue = this.country?.name;\r\n      this.selectedCountry = newCountry;\r\n    }\r\n  }\r\n\r\n  private filterCountries() {\r\n    if (this.inputValue === '' && this.country) {\r\n      this.selectCountry(null);\r\n    }\r\n    clearTimeout(this.debounceTimeout);\r\n    this.debounceTimeout = setTimeout(() => {\r\n      if (!this.inputValue) {\r\n        this.filteredCountries = [...this.countries];\r\n      } else {\r\n        this.filteredCountries = this.countries.filter(c => c.name.toLowerCase().includes(this.inputValue.toLowerCase()));\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  private selectCountry(c: ICountry | null) {\r\n    this.selectedCountry = c;\r\n    this.inputValue = c?.name;\r\n    this.filteredCountries = [...this.countries];\r\n    this.countryChange.emit(c);\r\n  }\r\n  private scrollToSelected() {\r\n    setTimeout(() => {\r\n      const dropdownItem = document.querySelector(`.dropdown-item.active`);\r\n      if (dropdownItem) {\r\n        dropdownItem.scrollIntoView({ behavior: 'instant', block: 'center' });\r\n      }\r\n    }, 100);\r\n  }\r\n  render() {\r\n    const shouldShowPropertyCountry = this.filteredCountries.length > 0 && this.propertyCountry && (!this.searching || (this.searching && this.inputValue === ''));\r\n    return (\r\n      <form class=\"dropdown m-0 p-0\">\r\n        <ir-input-text\r\n          onTextChange={e => {\r\n            if (!this.searching) {\r\n              this.searching = true;\r\n            }\r\n            this.inputValue = e.detail;\r\n            this.filterCountries();\r\n          }}\r\n          testId={this.testId}\r\n          autoValidate={this.autoValidate}\r\n          label={this.label}\r\n          error={this.error}\r\n          placeholder=\"\"\r\n          class=\"m-0 p-0\"\r\n          value={this.inputValue}\r\n          id=\"dropdownMenuCombobox\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n          onInputFocus={() => this.scrollToSelected()}\r\n          onInputBlur={() => {\r\n            this.searching = false;\r\n            if (this.filteredCountries.length > 0 && this.inputValue && this.inputValue.trim() !== '') {\r\n              this.selectCountry(this.filteredCountries[0]);\r\n            }\r\n          }}\r\n        ></ir-input-text>\r\n\r\n        <div class=\"dropdown-menu combobox-menu\" aria-labelledby=\"dropdownMenuCombobox\">\r\n          {shouldShowPropertyCountry && (\r\n            <Fragment>\r\n              <button\r\n                type=\"button\"\r\n                class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === this.propertyCountry.id ? 'active' : ''}`}\r\n                onClick={() => {\r\n                  this.selectCountry(this.propertyCountry);\r\n                }}\r\n              >\r\n                <img src={this.propertyCountry.flag} alt={this.propertyCountry.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\r\n                <p class=\"pl-1 m-0\">{this.propertyCountry.name}</p>\r\n              </button>\r\n              <div class=\"dropdown-divider\"></div>\r\n            </Fragment>\r\n          )}\r\n          {this.filteredCountries?.map(c => (\r\n            <button\r\n              key={c.id}\r\n              type=\"button\"\r\n              class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === c.id ? 'active' : ''}`}\r\n              onClick={() => {\r\n                this.selectCountry(c);\r\n              }}\r\n            >\r\n              <img src={c.flag} alt={c.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\r\n              <p class=\"pl-1 m-0\">{c.name}</p>\r\n            </button>\r\n          ))}\r\n          {this.filteredCountries?.length === 0 && <p class=\"dropdown-item-text\">Invalid Country</p>}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n.date-range-input {\r\n  width: 100%;\r\n}\r\n","import { Component, h, Element, Prop, Event, EventEmitter, Host, Watch, Method } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-range',\r\n  styleUrl: 'ir-date-range.css',\r\n  scoped: true,\r\n})\r\nexport class IrDateRange {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() fromDate: Date;\r\n  @Prop() toDate: Date;\r\n  @Prop() date: Date;\r\n\r\n  @Prop() opens: 'left' | 'right' | 'center';\r\n  @Prop() autoApply: boolean;\r\n  @Prop() firstDay: number = 1;\r\n  @Prop() monthNames: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  @Prop() daysOfWeek: string[] = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\n  @Prop() format: string = 'MMM DD, YYYY';\r\n  @Prop() separator: string = ' - ';\r\n  @Prop() applyLabel: string = 'Apply';\r\n  @Prop() cancelLabel: string = 'Cancel';\r\n  @Prop() fromLabel: string = 'Form';\r\n  @Prop() toLabel: string = 'To';\r\n  @Prop() customRangeLabel: string = 'Custom';\r\n  @Prop() weekLabel: string = 'W';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() singleDatePicker = false;\r\n  @Prop() minDate: string | Date;\r\n  @Prop() maxDate: string | Date;\r\n  @Prop() maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n\r\n  private openDatePickerTimeout: NodeJS.Timeout;\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n\r\n  @Watch('minDate')\r\n  handleMinDateChange() {\r\n    $(this.dateRangeInput).data('daterangepicker').remove();\r\n    this.initializeDateRangePicker();\r\n  }\r\n  @Watch('date')\r\n  datePropChanged() {\r\n    this.updateDateRangePickerDates();\r\n  }\r\n  @Method()\r\n  async openDatePicker() {\r\n    this.openDatePickerTimeout = setTimeout(() => {\r\n      this.dateRangeInput.click();\r\n    }, 20);\r\n  }\r\n  updateDateRangePickerDates() {\r\n    const picker = $(this.dateRangeInput).data('daterangepicker');\r\n    if (!picker) {\r\n      console.error('Date range picker not initialized.');\r\n      return;\r\n    }\r\n\r\n    // Adjust how dates are set based on whether it's a single date picker or range picker.\r\n    if (this.singleDatePicker) {\r\n      const newDate = this.date ? moment(this.date) : moment();\r\n      picker.setStartDate(newDate);\r\n      picker.setEndDate(newDate); // For single date picker, start and end date might be the same.\r\n    } else {\r\n      const newStartDate = this.fromDate ? moment(this.fromDate) : moment();\r\n      const newEndDate = this.toDate ? moment(this.toDate) : newStartDate.clone().add(1, 'days');\r\n      picker.setStartDate(newStartDate);\r\n      picker.setEndDate(newEndDate);\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    if (!document.getElementById('ir-daterangepicker-style')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'ir-daterangepicker-style';\r\n      style.textContent = `\r\n        .daterangepicker {\r\n          margin-top: 14px;\r\n        }\r\n      `;\r\n      document.head.appendChild(style);\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector('.date-range-input');\r\n    this.initializeDateRangePicker();\r\n    this.updateDateRangePickerDates();\r\n  }\r\n\r\n  initializeDateRangePicker() {\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        singleDatePicker: this.singleDatePicker,\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        minDate: moment(this.minDate || moment(new Date()).format('YYYY-MM-DD')),\r\n        maxDate: this.maxDate ? moment(this.maxDate) : undefined,\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      },\r\n    );\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.openDatePickerTimeout) {\r\n      clearTimeout(this.openDatePickerTimeout);\r\n    }\r\n    $(this.dateRangeInput).data('daterangepicker').remove();\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input class=\"date-range-input\" type=\"button\" disabled={this.disabled} />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  font-size: 13.65px !important;\r\n  width: 100%;\r\n}\r\n.mx-01 {\r\n  --m: 5px;\r\n  margin-right: var(--m) !important;\r\n  margin-left: var(--m) !important;\r\n}\r\n","import locales from '@/stores/locales.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-date-view',\r\n  styleUrl: 'ir-date-view.css',\r\n  scoped: true,\r\n})\r\nexport class IrDateView {\r\n  @Prop() from_date: string | Date | moment.Moment;\r\n  @Prop() to_date: string | Date | moment.Moment;\r\n  @Prop() showDateDifference: boolean = true;\r\n  @Prop() dateOption: string = 'YYYY-MM-DD';\r\n\r\n  @State() dates: { from_date: string; to_date: string; date_difference: number };\r\n\r\n  componentWillLoad() {\r\n    this.initializeDates();\r\n  }\r\n\r\n  @Watch('from_date')\r\n  handleFromDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  @Watch('to_date')\r\n  handleToDateChange(newVal: any, oldVal: any) {\r\n    if (newVal !== oldVal) {\r\n      this.initializeDates();\r\n    }\r\n  }\r\n\r\n  private initializeDates() {\r\n    this.convertDate('from_date', this.from_date);\r\n    this.convertDate('to_date', this.to_date);\r\n    const fromDate = moment(this.dates.from_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    const toDate = moment(this.dates.to_date, 'MMM DD, YYYY').format('YYYY-MM-DD');\r\n    this.dates.date_difference = calculateDaysBetweenDates(fromDate, toDate);\r\n  }\r\n\r\n  private convertDate(key: 'from_date' | 'to_date', date: string | Date | moment.Moment) {\r\n    this.dates = this.dates || {\r\n      from_date: '',\r\n      to_date: '',\r\n      date_difference: 0,\r\n    };\r\n    if (!date) {\r\n      return;\r\n    }\r\n    if (typeof date === 'string') {\r\n      this.dates[key] = moment(date, this.dateOption).format('MMM DD, YYYY');\r\n    } else if (date instanceof Date) {\r\n      this.dates[key] = moment(date).format('MMM DD, YYYY');\r\n    } else if (moment.isMoment(date)) {\r\n      this.dates[key] = date.format('MMM DD, YYYY');\r\n    } else {\r\n      console.error('Unsupported date type');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"d-flex align-items-center\">\r\n        <span>{this.dates.from_date}</span>{' '}\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mx-01\" height=\"14\" width=\"14\" viewBox=\"0 0 512 512\">\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\r\n          />\r\n        </svg>\r\n        <span>\r\n          {this.dates.to_date}{' '}\r\n          {this.showDateDifference && (\r\n            <span class=\"mx-01\">\r\n              {this.dates.date_difference}\r\n              {'   '}\r\n              {this.dates.date_difference > 1 ? ` ${locales.entries.Lcz_Nights}` : ` ${locales.entries.Lcz_Night}`}\r\n            </span>\r\n          )}\r\n        </span>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 !important;\r\n}\r\n.input-container:focus-within {\r\n  border-color: #1e9ff2;\r\n}\r\n.border-theme {\r\n  border-color: #cacfe7;\r\n}\r\n.input-container input {\r\n  flex: 1;\r\n  border: 0;\r\n}\r\n.input-container input:focus {\r\n  outline: none;\r\n}\r\n.dropdown-trigger {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  background: white;\r\n  border: 0;\r\n  border-right: 1px solid #cacfe7;\r\n}\r\n.ir-dropdown-container {\r\n  position: absolute;\r\n  z-index: 1000;\r\n  bottom: -30px;\r\n  width: 100%;\r\n  left: 0;\r\n  background: white;\r\n}\r\n.input-container label {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0 5px;\r\n}\r\n.flag {\r\n  height: 1rem;\r\n  aspect-ratio: 4/3;\r\n  border-radius: 3px;\r\n}\r\n.is-invalid {\r\n  border-color: #ff4961;\r\n}\r\n.phone_prefix_label {\r\n  padding: 0 0.5rem;\r\n  margin: 0;\r\n}\r\n","import { ICountry } from '@/components';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-phone-input',\r\n  styleUrl: 'ir-phone-input.css',\r\n  scoped: true,\r\n})\r\nexport class IrPhoneInput {\r\n  @Element() el: HTMLElement;\r\n  @Prop() label: string;\r\n  @Prop() value: string = '';\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() error: boolean = false;\r\n  @Prop() token: string;\r\n  @Prop() language: string;\r\n  @Prop() default_country: number = null;\r\n  @Prop() phone_prefix: string | null = null;\r\n  @Prop() placeholder: string;\r\n  @Prop({ mutable: true }) countries: ICountry[] = [];\r\n  @Prop() testId: string;\r\n\r\n  @Event() textChange: EventEmitter<{ phone_prefix: string; mobile: string }>;\r\n  @State() inputValue: string = '';\r\n  @State() isDropdownVisible: boolean = false;\r\n  @State() currentCountry: ICountry;\r\n\r\n  // private cmp_countries: ICountry[] = [];\r\n\r\n  private bookingService: BookingService = new BookingService();\r\n\r\n  async componentWillLoad() {\r\n    if (this.countries.length === 0) {\r\n      const countries = await this.bookingService.getCountries(this.language);\r\n      this.countries = countries;\r\n    }\r\n    if (this.phone_prefix) {\r\n      this.setCountryFromPhonePrefix();\r\n    } else {\r\n      if (this.default_country) {\r\n        this.setCurrentCountry(this.default_country);\r\n      }\r\n    }\r\n    this.inputValue = this.value;\r\n  }\r\n  @Watch('value')\r\n  handleValueChange(newValue, oldValue) {\r\n    if (newValue !== oldValue) {\r\n      this.inputValue = newValue;\r\n    }\r\n  }\r\n  @Watch('phone_prefix')\r\n  handlePhoneChange(newValue, oldValue) {\r\n    if (newValue !== oldValue) {\r\n      this.setCountryFromPhonePrefix();\r\n    }\r\n  }\r\n  @Listen('click', { target: 'document' })\r\n  handleDocumentClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    if (!this.el.contains(target)) {\r\n      this.isDropdownVisible = false;\r\n    }\r\n  }\r\n  handleInputChange(e: InputEvent) {\r\n    let inputElement = e.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    inputValue = inputValue.replace(/[^+\\d]+/g, '');\r\n    inputElement.value = inputValue;\r\n    this.inputValue = inputValue;\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.inputValue });\r\n  }\r\n  private setCountryFromPhonePrefix() {\r\n    let country = this.countries.find(country => country.phone_prefix === this.phone_prefix);\r\n    if (!country) {\r\n      country = this.countries.find(c => c.id.toString() === this.phone_prefix);\r\n      if (!country) {\r\n        return;\r\n      }\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  setCurrentCountry(id: number) {\r\n    const country = this.countries.find(country => country.id === id);\r\n    if (!country) {\r\n      throw new Error('Invalid country id');\r\n    }\r\n    this.currentCountry = { ...country };\r\n    this.textChange.emit({ phone_prefix: this.currentCountry?.phone_prefix, mobile: this.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"form-group mr-0\">\r\n          {/* <p class=\"mb-0\">Phone</p> */}\r\n          <div class=\"input-group row m-0 p-0 position-relative\">\r\n            {this.label && (\r\n              <div class={`input-group-prepend col-3 p-0 text-dark border-none`}>\r\n                <label class={`input-group-text  border-theme flex-grow-1 text-dark  `}>{this.label}</label>\r\n              </div>\r\n            )}\r\n            <div class={'form-control  input-container  flex-fill' + (this.error ? ' is-invalid' : '')}>\r\n              <button type=\"button\" onClick={() => (this.isDropdownVisible = !this.isDropdownVisible)} class=\"dropdown-trigger\">\r\n                {this.currentCountry ? <img src={this.currentCountry?.flag} class=\"flag\" /> : <p class=\"p-0 m-0 \">{locales.entries.Lcz_Select}</p>}\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"14\" width=\"12.25\" viewBox=\"0 0 448 512\">\r\n                  <path d=\"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\" />\r\n                </svg>\r\n              </button>\r\n\r\n              <p class={'phone_prefix_label'}>{this.currentCountry?.phone_prefix}</p>\r\n              <input\r\n                data-testid={this.testId}\r\n                maxLength={14}\r\n                type=\"text\"\r\n                placeholder={this.placeholder}\r\n                required\r\n                value={this.inputValue}\r\n                disabled={this.disabled}\r\n                onInput={e => this.handleInputChange(e)}\r\n              />\r\n            </div>\r\n            {this.isDropdownVisible && (\r\n              <div class=\"ir-dropdown-container\">\r\n                <ir-combobox\r\n                  onComboboxValueChange={e => {\r\n                    this.setCurrentCountry(+e.detail.data);\r\n                    this.isDropdownVisible = false;\r\n                  }}\r\n                  class=\"bg-white\"\r\n                  autoFocus\r\n                  placeholder=\"Search country\"\r\n                  data={this.countries.map(c => ({\r\n                    id: c.id.toString(),\r\n                    name: `${c.name} (${c.phone_prefix})`,\r\n                    image: c.flag,\r\n                  }))}\r\n                ></ir-combobox>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {/* {this.error && <div class=\"invalid-feedback\">Please enter a valid phone number.</div>} */}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  width: var(--ir-spinner-size, 1.25rem);\r\n  height: var(--ir-spinner-size, 1.25rem);\r\n  border: var(--ir-spinner-border-width, 2.5px) solid var(--ir-spinner-color, #3f3f3f);\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","import { Component, Element, Host, Prop, Watch, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-spinner',\r\n  styleUrl: 'ir-spinner.css',\r\n  shadow: true,\r\n})\r\nexport class IrSpinner {\r\n  @Element() el: HTMLIrSpinnerElement;\r\n\r\n  @Prop() size: number;\r\n  @Prop() borderWidth: number;\r\n  @Prop() unit: 'px' | 'rem' = 'rem';\r\n  @Prop() color: string;\r\n\r\n  componentWillLoad() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('size')\r\n  handleSpinnerSizeChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('borderWidth')\r\n  handleSpinnerBorderWidthChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('unit')\r\n  handleSpinnerUnitChange() {\r\n    this.initStyles();\r\n  }\r\n  @Watch('color')\r\n  handleSpinnerColorChange() {\r\n    this.initStyles();\r\n  }\r\n  private initStyles() {\r\n    if (this.size) {\r\n      this.applyCssElement(`${this.size}${this.unit}`, '--ir-spinner-size');\r\n    }\r\n    if (this.borderWidth) {\r\n      this.applyCssElement(`${this.borderWidth}${this.unit}`, '--ir-spinner-size');\r\n    }\r\n    if (this.color) {\r\n      this.applyCssElement(`${this.color}`, '--ir-spinner-color');\r\n    }\r\n  }\r\n  private applyCssElement(value: string, key: '--ir-spinner-color' | '--ir-spinner-border-width' | '--ir-spinner-size' | (string & {})) {\r\n    this.el.style.setProperty(key, value);\r\n  }\r\n  render() {\r\n    return <Host></Host>;\r\n  }\r\n}\r\n",":host {\r\n  position: relative;\r\n}\r\n.tooltip-icon {\r\n  margin: 0 5px;\r\n  padding: 0;\r\n}\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n.tooltip-inner-custom {\r\n  min-width: max-content !important;\r\n}\r\n","import { Component, Host, Prop, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tooltip',\r\n  styleUrl: 'ir-tooltip.css',\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @Prop() withHtml: boolean = true;\r\n  @Prop() customSlot: boolean = false;\r\n  @Prop() containerStyle: { [key: string]: string };\r\n\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"m-0 p-0\">\r\n        <span\r\n          style={this.containerStyle}\r\n          class={'m-0 p-0 d-flex align-items-center justify-content-center'}\r\n          onMouseEnter={() => this.toggleOpen(true)}\r\n          onMouseLeave={() => this.toggleOpen(false)}\r\n        >\r\n          {/* <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i> */}\r\n\r\n          {!this.customSlot ? (\r\n            // <svg data-toggle=\"tooltip\" data-placement=\"top\" xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" class=\"tooltip-icon\" viewBox=\"0 0 512 512\">\r\n            //   <path\r\n            //     fill=\"#6b6f82\"\r\n            //     d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n            //   />\r\n            // </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class={'m-0 p-0'} height=\"16\" width=\"16\" viewBox=\"0 0 512 512\">\r\n              <path\r\n                fill=\"#6b6f82\"\r\n                d=\"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336l24 0 0-64-24 0c-13.3 0-24-10.7-24-24s10.7-24 24-24l48 0c13.3 0 24 10.7 24 24l0 88 8 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-80 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <slot name=\"tooltip-trigger\"></slot>\r\n          )}\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class={`tooltip-inner fit ${this.customSlot && 'tooltip-inner-custom'}`}>\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}