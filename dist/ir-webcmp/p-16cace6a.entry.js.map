{"version":3,"names":["IglBookPropertyService","setBookingInfoFromAutoComplete","context","res","bookedByInfoData","id","guest","email","firstName","first_name","lastName","last_name","countryId","country_id","isdCode","_b","_a","country_phone_prefix","_c","toString","contactNumber","mobile","selectedArrivalTime","arrival","emailGuest","subscribe_to_news_letter","message","remark","cardNumber","cardHolderName","expiryMonth","expiryYear","bookingNumber","booking_nbr","rooms","from_date","to_date","resetRoomsInfoAndMessage","defaultData","roomsInfo","onDataRoomUpdate","event","selectedUnits","isEdit","isEditBooking","name","units","data","key","changedKey","detail","roomCategoryKey","roomCategoryId","ratePlanKey","ratePlanId","this","shouldClearData","Map","initializeRoomCategoryIfNeeded","has","get","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","set","selectedRatePlans","totalRooms","inventory","delete","Object","assign","Array","fill","size","clear","guestName","roomId","calculateAmount","is_amount_modified","selected_variation","view_mode","rp_amount","total_days","nights","length","generateDailyRates","rate_plan","i","variation","amount","infant_nbr","variationService","VariationService","getVariationBasedOnInfants","variations","ratePlan","baseVariation","infants","map","n","date","night","discounted_amount","cost","getBookedRooms","check_in","check_out","notes","identifier","override_unit","unit","auto_check_in","roomTypeId","booking_store","ratePlanSelections","roomtype","rateplanId","rateplan","reserved","push","prepayment_amount_gross","occupancy","adult_nbr","children_nbr","child_nbr","Math","max","bed_preference","moment","format","days","city","address","dob","cci","prepareBookUserServiceParams","sourceOption","dateRangeData","Error","fromDate","Date","toDate","generateNewRooms","isEventType","bookingData","PR_ID","modifyBookingDetails","pickup_info","extra_services","is_direct","is_in_loyalty_mode","promo_key","extras","rest","__rest","assign_units","is_pms","booking","newBooking","event_type","currentRoomType","filteredRooms","filter","r","console","log","newRooms","in_out","code","isAgent","type","agent","tag","property","propertyid","booked_on","hour","getHours","minute","getMinutes","source","currency","nbr","holder_name","expiry_month","expiry_year","error","getRoomCategoryByRoomId","find","roomCategory","RATE_TYPE","setEditingRoomInfo","category","room_id","RATE_PLAN_ID","adultCount","ADULTS_COUNT","rate","RATE","rateType","roomCategoryName","ratePlanName","RATE_PLAN","NAME","cancelation","guarantee","adult_child_offering","iglBookPropertyCss","IglBookPropertyStyle0","IglBookProperty","constructor","hostRef","showPaymentDetails","adultChildCount","adult","child","renderAgain","bookingHistory","initialRoomIds","showSplitBookingOption","sourceOptions","guestData","blockDatesData","ratePricingMode","bedPreferenceType","bookingService","BookingService","bookPropertyService","updatedBooking","MAX_HISTORY_LENGTH","componentWillLoad","roomTypes","modifyBookingStore","handleKeyDown","bind","initializeDefaultDateRange","defaultDateRange","initializeDefaultData","wasBlockedUnit","hasOwnProperty","fetchSetupEntriesAndInitialize","initializeEventData","componentDidLoad","document","addEventListener","handleBodyOverflow","disconnectedCallback","removeEventListener","clearBooking","e","stopImmediatePropagation","stopPropagation","renderPage","handleSpiltBookingSelected","getExposedBooking","language","handleAdultChildChange","updateBookingHistory","adults","Number","children","onDateRangeSelect","opt","dates","checkIn","checkOut","checkBookingAvailability","handleSourceDropDown","value","selectedSource","description","gotoSplitPageTwo","gotoPage","handleButtonClicked","bookUser","closeWindow","resetReserved","animateIrSelect","emit","calculateTotalRooms","animateIrButton","toast","locales","entries","Lcz_SelectRatePlan","title","partialData","lastEntry","newEntry","_d","_f","_e","_h","_g","shift","FROM_DATE","TO_DATE","setupEntries","fetchSetupEntries","setSourceOptions","allowedBookingSources","setOtherProperties","initializeEditBookingData","initializePage","CHILDREN_COUNT","roomName","GUEST","page","isGuestDataIncomplete","roomtypeId","isButtonDisabled","isValidProperty","comparedBy","undefined","bookingSource","SOURCE","arrivalTime","resetBookingStore","is_in_agent_mode","room_type_ids_to_update","room_type_ids","room","getBookingAvailability","agent_id","updateBooking","roomtype_id","reserveRooms","checkAndBlockDate","block_exposed_unit_props","isAvailable","every","rt","is_available_to_book","handleBlockDate","closeBookingWindow","didReservation","handleBlockDateUpdate","handleGuestInfoUpdate","guestRefKey","handleBookedByInfoUpdate","getPageBlockDatesView","h","Fragment","entryDate","ENTRY_DATE","onDataUpdateEvent","class","text","Lcz_Cancel","btn_color","onClick","Lcz_Blockdates","isLoading","isRequestPending","handlePageTwoDataUpdateEvent","auto_close","props","releaseData","getReleaseHoursString","RELEASE_AFTER_HOURS","dateToFormattedString","NOTES","OPTIONAL_REASON","pr_id","STAY_STATUS_CODE","OUT_OF_SERVICE","DESCRIPTION","blockUnit","setLoadingState","serviceParams","doReservation","resetBookingEvt","resetLoadingState","setTimeout","getCurrentPage","render","Host","BLOCK_DATES_TITLE","TITLE","onIconClickHandler","slot","xmlns","viewBox","height","width","d","defaultDaterange","eventType","selectedRooms","adultChildConstraints","propertyId","selectedGuestData","countries","defaultGuestData","isEditOrAddRoomEvent","iglBookingFormCss","IglBookingFormStyle0","IglBookingForm","initializeGuestData","selectedBookedByData","total","newSelectedUnits","getRate","totalNights","isRateModified","preference","forEach","dateDifference","TOTAL_PRICE","handleOnApplicationInfoDataUpdateEvent","index","categoryIdKey","updatedUnits","dataUpdateEvent","handleEventData","showBookAndCheckin","calendar_data","checkin_enabled","isSame","dateOption","Lcz_TotalPrice","formatAmount","symbol","values","val","rp","_","guestInfo","bookingType","rateplanSelection","roomIndex","baseData","icon","Lcz_Back","btn_styles","onClickHandler","buttonClicked","Lcz_Save","icon_name","style","icon_style","paddingBottom","Lcz_Book","Lcz_BookAndChekcIn","iglBookingOverviewPageCss","IglBookingOverviewPageStyle0","IglBookingOverviewPage","getSplitBookings","splitBookingEvents","setMinDate","today","isAfter","add","minDate","splitBookingId","bookingDataDefaultDateRange","splitBookings","roomType","isBookDisabled","keys","roomInfoId","evt","roomsDataUpdate","irBookingDetailsCss","IrBookingDetailsStyle0","IrBookingDetails","ticket","is_from_front_desk","hasPrint","hasReceipt","hasDelete","hasMenu","hasRoomEdit","hasRoomDelete","hasRoomAdd","hasCheckIn","hasCheckOut","hasCloseButton","bookingItem","statusData","calendarData","rerenderFlag","sidebarState","isUpdateClicked","isPMSLogLoading","modalState","roomService","RoomService","paymentService","PaymentService","token","Token","printingBaseUrl","setToken","initializeApp","ticketChanged","newValue","oldValue","handleSideBarEvents","sidebarPayload","payload","handleIconClick","target","closeSidebar","Lcz_EmailBookingto","replace","loading","modalRef","openModal","openPrintingScreen","window","location","href","ID","EMAIL","PHONE","REFERENCE_TYPE","ARRIVAL","Lcz_AddingUnitToBooking","fromDateStr","toDateStr","BOOKING_NUMBER","ADD_ROOM_TO_BOOKING","ROOMS","handleResetExposedCancellationDueAmount","paymentActions","GetExposedCancellationDueAmount","currency_id","handleEditInitiated","handleRoomGuestsUpdate","guests","currentRoomIndex","findIndex","currentRoom","updatedRoom","sharing_persons","handleResetBooking","resetBooking","handleEditExtraService","selectedService","setRoomsData","roomServiceResp","roomsData","My_Result","roomtypes","expanded","roomResponse","languageTexts","countriesList","bookingDetails","bedPreference","Promise","all","getExposedProperty","aname","p","fetchLanguage","getCountries","getSetupEntriesByTableName","property_id","then","direction","myResult","allowed_payment_methods","paymentMethods","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","some","method","includes","warn","mode","version","open","system_id","url","axios","post","ExceptionMsg","handleCloseBookingWindow","handleDeleteFinish","bookingChanged","handleModalConfirm","sendBookingConfirmationEmail","closeModal","renderSidebarContent","handleClose","isInSideBar","headerShown","onCloseSideBar","bookingDates","from","to","defaultPickupData","numberOfPersons","onCloseModal","service","totalGuests","sharedPersons","checkin","hasEmail","status","is_editable","variant","showCheckin","handleRoomCheckin","showCheckout","handleRoomCheckout","bedPreferences","isEditable","myRoomTypeFoodCat","mealCodeName","short_name","bookingIndex","onDeleteFinished","Lcz_ExtraServices","modalBody","leftBtnText","rightBtnText","Lcz_Confirm","autoClose","ref","el","onConfirmModal","onCancelModal","side","onIrSidebarToggle","showCloseButton","onCloseBookingWindow","is_automatic_check_in_out","isSameOrAfter","isBefore","irBookingExtraNoteCss","IrBookingExtraNoteStyle0","sheetCss","IrBookingExtraNoteStyle1","IrBookingExtraNote","note","setNote","getPrivateNote","savePrivateNote","prevExtras","newExtraObj","oldPrivateNoteIndex","Is_Non_Technical_Change","onSubmit","preventDefault","label","Lcz_PrivateNote","displayContext","placeholder","Lcz_PrivateNote_MaxChar","maxLength","onTextChange","btn_type","irBookingHeaderCss","IrBookingHeaderStyle0","IrBookingHeader","bookingStatus","confirmationBG","handleSelectChange","selectedValue","updateStatus","Lcz_SelectStatus","position","changeExposedBookingStatus","book_nbr","Lcz_StatusUpdatedSuccessfully","openDialog","currentDialogStatus","dialogRef","renderDialogBody","Lcz_Booking","channel_booking_nbr","gap","flexWrap","allowed_actions","selectContainerStyle","selectStyles","firstOption","Lcz_Select","b","textSize","btn_disabled","Lcz_EventsLog","is_pms_enabled","Lcz_pms","colorVariants","danger","onOpenChange","irDialogCss","IrDialogStyle0","IrDialog","isOpen","prepareFocusTrap","body","overflow","openChange","handleOpenChange","focusableElements","focusableContent","shadowRoot","querySelectorAll","firstFocusableElement","lastFocusableElement","focus","ev","isTabPressed","shiftKey","activeElement","tabIndex","role","irEventsLogCss","IrEventsLogStyle0","IrEventsLog","init","bookingEvents","getExposedBookingEvents","opacity","String","padStart","second","user","irExtraServiceCss","IrExtraServiceStyle0","IrExtraService","deleteService","doBookingExtraService","is_remove","price","currencySymbol","booking_system_id","secondary","editExtraService","irModalRef","start_date","end_date","showDateDifference","iconAvailable","Lcz_Delete","leftBtnColor","rightBtnColor","modalTitle","Lcz_Confirmation","Lcz_ThisService","Lcz_FromThisBooking","ZIdInfo","z","object","union","string","min","literal","optional","number","ZSharedPerson","coerce","nullable","refine","isValid","transform","isDDMMYYYY","id_info","ZSharedPersons","array","ExtraServiceSchema","irExtraServiceConfigCss","IrExtraServiceConfigStyle0","IrExtraServiceConfigStyle1","IrExtraServiceConfig","s_service","saveAmenity","parse","ZodError","updateService","params","prevService","validatePrice","priceSchema","pick","result","safeParse","success","async","Lcz_Description","onChange","Lcz_DatesOn","emitEmptyDate","maxDate","onDateChanged","start","_formatDate","borderLeftWidth","borderRightWidth","borderRadius","Lcz_TillAndIncluding","_j","_k","_m","_l","zod","Lcz_Price","wrapKey","autoValidate","parseFloat","Lcz_Cost","labelStyle","_p","_o","irExtraServicesCss","IrExtraServicesStyle0","IrExtraServices","irGuestInfoCss","IrGuestInfoStyle0","IrGuestInfoStyle1","GuestInfo","getToken","fetchedLocales","fetchGuest","resolve","mobile_without_prefix","handleInputChange","editGuest","editExposedGuest","closeSideBar","Lcz_GuestDetails","Lcz_FirstName","required","Lcz_LastName","Lcz_Email","Lcz_AlternativeEmail","alternative_email","country","c","Lcz_Country","onCountryChange","phone_prefix","Lcz_MobilePhone","checked","onInput","Lcz_Newsletter","irPaymentActionsCss","IrPaymentActionsStyle0","IrPaymentActions","paymentAction","pa","due_on","generatePayment","irPaymentDetailsCss","IrPaymentDetailsStyle0","IrPaymentDetails","newTableRow","collapsedPayment","collapsedGuarantee","flag","confirmModal","paymentDetailsUrl","paymentExceptionMessage","modal_mode","paymentBackground","handlePaymentGeneration","itemToBeAdded","initializeItemToBeAdded","designation","reference","_processPaymentSave","Lcz_EnterAmount","financial","due_amount","_handleSave","AddPayment","resetExposedCancelationDueAmount","handlePaymentInputChange","isNaN","inputElement","inputValue","cancelPayment","CancelPayment","toBeDeletedItem","newPaymentArray","payments","item","handleConfirmModal","modal","querySelector","handleCancelModal","handleBookingDetails","handleDateChange","end","_renderTableRow","rowMode","startOf","border","marginLeft","marginRight","inputStyle","rowSpan","colSpan","onKeyPress","formatCurrency","locale","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","bookingGuarantee","paymentMethod","getPaymentMethod","Lcz_BookingGuarantee","getPCICardInfoURL","_s","_r","_q","_u","_t","_x","_w","_v","_0","_z","_y","cvc","_3","_2","_1","src","frameborder","ota_guarante","content","_4","card_type","_5","is_virtual","labelText","Lcz_CardType","_6","cardholder_name","Lcz_CardHolderName","_7","card_number","Lcz_CardNumber","toFloat","_9","_8","meta","virtual_card_current_balance","_11","_10","virtual_card_decimal_places","_13","_12","virtual_card_currency_code","Lcz_CardBalance","checkPaymentCode","pm","payment_code","Lcz_OnCredit","_renderDueDate","gross_cost","Lcz_TotalCost","Lcz_Balance","Lcz_Collected","reduce","prev","curr","Lcz_Payments","backgroundColor","Lcz_Dates","Lcz_Amount","Lcz_Designation","Lcz_IfDeletedPermantlyLost","Lcz_EnteringAmountGreaterThanDue","PickupService","savePickup","splitTime","arrival_time","split","arrival_date","details","flight_details","nbr_of_units","number_of_vehicles","selected_option","due_upon_booking","transformDefaultPickupData","renderTime","toFixed","vehicle_type_code","vehicle","getAvailableLocations","locations","pickup_service","allowed_options","option","createPickupSchema","regex","dateStr","isBetween","time","hours","minutes","nonempty","validateForm","schema","err","issues","path","getNumberOfVehicles","capacity","total_number_of_vehicles","ceil","startNumber","bonus_number","getPickUpPersonStatus","getCodeDescription","allowed_pricing_models","model","updateDue","irPickupCss","IrPickupStyle0","IrPickupStyle1","IrPickup","allowedOptionsByLocation","pickupData","vehicleCapacity","cause","pickupService","arrival_time_mask","mask","blocks","HH","MaskedRange","placeholderChar","mm","lazy","transformedData","pickupSchema","handleLocationChange","updatePickupData","locationChoice","pricing_model","handleVehicleQuantityChange","handleVehicleTypeChange","errors","Lcz_Pickup","testId","onSelectChange","Lcz_Pickup_NoThankYou","LabelAvailable","Lcz_Pickup_YesFrom","Lcz_ArrivalDate","borderTopLeftRadius","borderBottomLeftRadius","Lcz_Time","inputStyles","Lcz_FlightDetails","showFirstOption","labelBorder","labelWidth","Lcz_NbrOfVehicles","readonly","Lcz_DueUponBooking","irPickupViewCss","IrPickupViewStyle0","IrPickupView","is_enabled","Lcz_Date","_formatTime","pickup_instruction","pickup_cancelation_prepayment","irPmsLogsCss","IrPmsLogsStyle0","IrPmsLogs","pmsLogs","fetchPMSLogs","Lcz_PMS_Logs","Lcz_SentAt","sent_date","sent_hour","sent_minute","is_acknowledged","Lcz_YES","Lcz_NO","Lcz_Acknowledged","irReservationInformationCss","IrReservationInformationStyle0","IrReservationInformation","userCountry","guestCountryId","handleEditClick","openSidebar","renderPhoneNumber","selectedCountry","privateNote","Lcz_Source","origin","Label","image","Icon","alt","renderContentAsHtml","Lcz_BookedOn","Lcz_BookedBy","nbr_confirmed_bookings","Lcz_BookingsNbr","customSlot","color","Lcz_Phone","Lcz_Address","isCountryImage","display","Lcz_GuestPrivateNote","Lcz_ArrivalTime","Lcz_Coupon","Lcz_LoyaltyDiscountApplied","Lcz_GuestRemark","Lcz_ChannelNotes","remarks","ota_notes","maxVisibleItems","Lcz_BookingPrivateNote","Lcz_VisibleToHotelOnly","irRoomCss","IrRoomStyle0","IrRoom","collapsed","modalReason","isModelOpen","mainGuest","getMainGuest","handleClick","pressCheckIn","pressCheckOut","handleRoomDataChange","getDateStr","getDate","toLocaleString","month","getFullYear","editInitiated","formatName","Lcz_EditBookingFor","ARRIVAL_TIME","COUNTRY","FROM_DATE_STR","IDENTIFIER","IS_EDITABLE","NO_OF_DAYS","POOL","SPLIT_BOOKING","STATUS","TO_DATE_STR","PICKUP_INFO","reason","handleModalConfirmation","deleteRoom","handleExposedRoomInOut","room_identifier","resetbooking","oldRooms","deleteFinished","formatVariation","childCount","infantCount","adultLabel","Lcz_Adults","toLowerCase","Lcz_Adult","childLabel","Lcz_Children","Lcz_Child","infantLabel","Lcz_Infants","Lcz_Infant","parts","join","getSmokingLabel","smoking_option","currRT","allowed_smoking_options","s","ota_meta","smoking_preferences","getBedName","bed","CODE_NAME","CODE_VALUE_EN","bed_preferences","renderModalMessage","handleCheckIn","showGuestModal","is_main","fontWeight","is_non_refundable","Lcz_NonRefundable","isSingleUnit","is_frontdesk_enabled","Lcz_CheckIn","Lcz_CheckOut","btnStyle","margin","padding","fontSize","textAlign","lineHeight","innerHTML","Lcz_Breakdown","_getDay","Lcz_SubTotal","filtered_data","taxes","tx","pct","is_exlusive","Lcz_Excluding","Lcz_Including","ota_taxes","Lcz_SmokingOptions","Lcz_Cancellation","Lcz_Guarantee","Lcz_MealPlan","meal_plan","Lcz_Policies","policies","defaultGuest","full_name","password","dateMask","pattern","str","autofix","YYYY","MM","DD","irRoomGuestsCss","IrRoomGuestsStyle0","IrRoomGuests","idTypes","initializeGuests","getUserDefaultCountry","propertyCountry","COUNTRY_ID","defaultGuestsCount","g","updateGuestInfo","tempGuests","tempGuest","saveGuests","handleExposedRoomGuests","updateRoomGuests","minWidth","Lcz_MainGuest","Lcz_DOB","Lcz_Nationality","Lcz_Documents","idx","Lcz_PersonsSharingRoom","selectForcedStyles","borderTopRightRadius","borderBottomRightRadius","borderRight","t","toUpperCase","inputForcedStyle","otaLabelCss","OtaLabelStyle0","OtaLabel","showAll","toggleShowAll","displayedRemarks","slice","v4","statement","Lcz_ShowLess","Lcz_ShowMore"],"sources":["src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.css?tag=igl-booking-form&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-form/igl-booking-form.tsx","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.css?tag=igl-booking-overview-page&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-booking-overview-page/igl-booking-overview-page.tsx","src/components/ir-booking-details/ir-booking-details.css?tag=ir-booking-details&encapsulation=scoped","src/components/ir-booking-details/ir-booking-details.tsx","src/components/ir-booking-details/ir-booking-extra-note/ir-booking-extra-note.css?tag=ir-booking-extra-note&encapsulation=scoped","src/common/sheet.css?tag=ir-booking-extra-note&encapsulation=scoped","src/components/ir-booking-details/ir-booking-extra-note/ir-booking-extra-note.tsx","src/components/ir-booking-details/ir-booking-header/ir-booking-header.css?tag=ir-booking-header&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/ir-booking-header.tsx","src/components/ui/ir-dialog/ir-dialog.css?tag=ir-dialog&encapsulation=shadow","src/components/ui/ir-dialog/ir-dialog.tsx","src/components/ir-booking-details/ir-booking-header/events-log/ir-events-log.css?tag=ir-events-log&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/events-log/ir-events-log.tsx","src/components/ir-booking-details/ir-extra-services/ir-extra-service/ir-extra-service.css?tag=ir-extra-service&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-service/ir-extra-service.tsx","src/models/booking.dto.ts","src/components/ir-booking-details/ir-extra-services/ir-extra-service-config/ir-extra-service-config.css?tag=ir-extra-service-config&encapsulation=scoped","src/common/sheet.css?tag=ir-extra-service-config&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-service-config/ir-extra-service-config.tsx","src/components/ir-booking-details/ir-extra-services/ir-extra-services.css?tag=ir-extra-services&encapsulation=scoped","src/components/ir-booking-details/ir-extra-services/ir-extra-services.tsx","src/components/ir-guest-info/ir-guest-info.css?tag=ir-guest-info&encapsulation=scoped","src/common/sheet.css?tag=ir-guest-info&encapsulation=scoped","src/components/ir-guest-info/ir-guest-info.tsx","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-actions.css?tag=ir-payment-actions&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-actions.tsx","src/components/ir-booking-details/ir-payment-details/ir-payment-details.css?tag=ir-payment-details&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-details.tsx","src/components/ir-booking-details/ir-pickup/pickup.service.ts","src/components/ir-booking-details/ir-pickup/ir-pickup.css?tag=ir-pickup&encapsulation=scoped","src/common/sheet.css?tag=ir-pickup&encapsulation=scoped","src/components/ir-booking-details/ir-pickup/ir-pickup.tsx","src/components/ir-booking-details/ir-pickup-view/ir-pickup-view.css?tag=ir-pickup-view&encapsulation=scoped","src/components/ir-booking-details/ir-pickup-view/ir-pickup-view.tsx","src/components/ir-booking-details/ir-booking-header/ir-pms-logs/ir-pms-logs.css?tag=ir-pms-logs&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/ir-pms-logs/ir-pms-logs.tsx","src/components/ir-booking-details/ir-reservation-information/ir-reservation-information.css?tag=ir-reservation-information&encapsulation=scoped","src/components/ir-booking-details/ir-reservation-information/ir-reservation-information.tsx","src/components/ir-booking-details/ir-room/ir-room.css?tag=ir-room&encapsulation=scoped","src/components/ir-booking-details/ir-room/ir-room.tsx","src/components/ir-booking-details/ir-room-guests/data.ts","src/components/ir-booking-details/ir-room-guests/ir-room-guests.css?tag=ir-room-guests&encapsulation=scoped","src/components/ir-booking-details/ir-room-guests/ir-room-guests.tsx","src/components/ui/ota-label/ota-label.css?tag=ota-label&encapsulation=scoped","src/components/ui/ota-label/ota-label.tsx"],"sourcesContent":["import { Booking, Room } from '@/models/booking.dto';\nimport { TSourceOption } from '@/models/igl-book-property';\nimport VariationService from '@/services/variation.service';\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\nimport { extras } from '@/utils/utils';\nimport moment from 'moment';\n\nexport class IglBookPropertyService {\n  private variationService: VariationService;\n  public setBookingInfoFromAutoComplete(context, res) {\n    context.bookedByInfoData = {\n      id: res.guest.id,\n      email: res.guest.email,\n      firstName: res.guest.first_name,\n      lastName: res.guest.last_name,\n      countryId: res.guest.country_id,\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\n      contactNumber: res.guest.mobile,\n      selectedArrivalTime: res.arrival,\n      emailGuest: res.guest.subscribe_to_news_letter,\n      message: res.remark,\n      cardNumber: '',\n      cardHolderName: '',\n      expiryMonth: '',\n      expiryYear: '',\n      bookingNumber: res.booking_nbr,\n      rooms: res.rooms,\n      from_date: res.from_date,\n      to_date: res.to_date,\n    };\n  }\n\n  public resetRoomsInfoAndMessage(context) {\n    context.defaultData.roomsInfo = [];\n    context.message = '';\n  }\n\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\n    let units = selectedUnits;\n    const { data, key, changedKey } = event.detail;\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\n    const ratePlanKey = `p_${data.ratePlanId}`;\n\n    if (this.shouldClearData(key)) {\n      units = new Map();\n    }\n\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\n\n    if (isEditBooking) {\n      if (changedKey === 'rate') {\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n        }\n      } else {\n        if (changedKey !== 'rateType') {\n          if (changedKey === 'adult_child_offering') {\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n            }\n          } else {\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\n          }\n        }\n      }\n    } else {\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\n    }\n    this.cleanupEmptyData(roomCategoryKey, units);\n    return units;\n  }\n\n  private shouldClearData(key: string | undefined): boolean {\n    return key === 'clearData' || key === 'EDIT_BOOKING';\n  }\n\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\n    if (!selectedUnits.has(roomCategoryKey)) {\n      selectedUnits.set(roomCategoryKey, new Map());\n    }\n  }\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\n    if (data.totalRooms === 0 || data.inventory === 0) {\n      selectedRatePlans.delete(ratePlanKey);\n    } else {\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\n    }\n  }\n\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\n    if (selectedUnits.has(roomCategoryKey)) {\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\n      if (selectedRatePlans.size === 0) {\n        selectedUnits.delete(roomCategoryKey);\n      }\n    }\n  }\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\n    selectedUnits.clear();\n    let res = {};\n    if (isEdit) {\n      res = { ...data, guestName: name || '', roomId: '' };\n    } else {\n      res = { ...data };\n    }\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\n  }\n\n  private calculateAmount({ is_amount_modified, selected_variation, view_mode, rp_amount }: IRatePlanSelection) {\n    const total_days = selected_variation.nights.length;\n    if (is_amount_modified) {\n      return view_mode === '002' ? rp_amount : rp_amount / total_days;\n    }\n  }\n\n  private generateDailyRates(rate_plan: IRatePlanSelection, i: number) {\n    let variation = rate_plan.selected_variation;\n    const amount = rate_plan.is_amount_modified ? this.calculateAmount(rate_plan) : null;\n    if (rate_plan.guest[i].infant_nbr > 0 && !rate_plan.is_amount_modified) {\n      if (!this.variationService) {\n        this.variationService = new VariationService();\n      }\n      variation = this.variationService.getVariationBasedOnInfants({\n        variations: rate_plan.ratePlan.variations,\n        baseVariation: rate_plan.selected_variation,\n        infants: rate_plan.guest[i].infant_nbr,\n      });\n    }\n    return variation.nights.map(n => ({\n      date: n.night,\n      amount: amount ?? n.discounted_amount,\n      cost: null,\n    }));\n  }\n\n  // private extractFirstNameAndLastName(name: string) {\n  //   const names = name.split(' ');\n  //   return { first_name: names[0] || null, last_name: names[1] || null };\n  // }\n\n  private getBookedRooms({\n    check_in,\n    check_out,\n    notes,\n    identifier,\n    override_unit,\n    unit,\n    auto_check_in,\n  }: {\n    identifier: string | null;\n    check_in: Date;\n    check_out: Date;\n    override_unit: boolean;\n    unit: string;\n    notes: string | null;\n    auto_check_in: boolean;\n  }) {\n    const rooms = [];\n\n    for (const roomTypeId in booking_store.ratePlanSelections) {\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\n      for (const rateplanId in roomtype) {\n        const rateplan = roomtype[rateplanId];\n        if (rateplan.reserved > 0) {\n          for (let i = 0; i < rateplan.reserved; i++) {\n            const { first_name, last_name } = rateplan.guest[i];\n            rooms.push({\n              identifier,\n              roomtype: rateplan.roomtype,\n              rateplan: rateplan.ratePlan,\n              prepayment_amount_gross: 0,\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\n              occupancy: {\n                adult_nbr: rateplan.selected_variation.adult_nbr,\n                children_nbr: rateplan.selected_variation.child_nbr - Math.max(rateplan.guest[i].infant_nbr, 0),\n                infant_nbr: rateplan.guest[i].infant_nbr,\n              },\n              bed_preference: rateplan.guest[i].bed_preference,\n              from_date: moment(check_in).format('YYYY-MM-DD'),\n              to_date: moment(check_out).format('YYYY-MM-DD'),\n              notes,\n              check_in: auto_check_in,\n              days: this.generateDailyRates(rateplan, i),\n              guest: {\n                email: null,\n                first_name,\n                last_name,\n                country_id: null,\n                city: null,\n                mobile: null,\n                address: null,\n                dob: null,\n                subscribe_to_news_letter: null,\n                cci: null,\n              },\n            });\n          }\n        }\n      }\n    }\n    return rooms;\n  }\n\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\n    try {\n      // Validate context structure\n      if (!context || !context.dateRangeData) {\n        throw new Error('Invalid context: Missing date range data.');\n      }\n\n      const fromDate = new Date(context.dateRangeData.fromDate);\n      const toDate = new Date(context.dateRangeData.toDate);\n\n      const generateNewRooms = (identifier = null, check_in: boolean = false) => {\n        return this.getBookedRooms({\n          check_in: fromDate,\n          check_out: toDate,\n          identifier,\n          notes: '',\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\n          auto_check_in: check_in,\n        });\n      };\n\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\n        return {\n          assign_units: true,\n          is_pms: true,\n          is_direct,\n          is_in_loyalty_mode,\n          promo_key,\n          extras,\n          booking: {\n            ...rest,\n            rooms,\n          },\n          extra_services,\n          pickup_info,\n        };\n      };\n\n      let newBooking = null;\n\n      switch (context.defaultData.event_type) {\n        case 'EDIT_BOOKING': {\n          const { booking, currentRoomType } = context.defaultData;\n\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\n          console.log('currentRoomType', currentRoomType);\n          const newRooms = generateNewRooms(currentRoomType.identifier, currentRoomType.in_out?.code === '001');\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\n          break;\n        }\n        case 'ADD_ROOM':\n        case 'SPLIT_BOOKING': {\n          const { booking } = context.defaultData;\n          if (!booking) {\n            throw new Error('Missing booking');\n          }\n          console.log(booking);\n          const newRooms = generateNewRooms();\n          newBooking = modifyBookingDetails(booking, [...booking?.rooms, ...newRooms]);\n          break;\n        }\n        default: {\n          const newRooms = generateNewRooms(null, check_in);\n          const { bookedByInfoData } = context;\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\n          newBooking = {\n            assign_units: true,\n            is_pms: true,\n            is_direct: true,\n            is_in_loyalty_mode: false,\n            promo_key: null,\n            extras,\n            agent: isAgent ? { id: sourceOption.tag } : null,\n            booking: {\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\n              to_date: moment(toDate).format('YYYY-MM-DD'),\n              remark: bookedByInfoData.message || null,\n              booking_nbr: '',\n              property: {\n                id: context.propertyid,\n              },\n              booked_on: {\n                date: moment().format('YYYY-MM-DD'),\n                hour: new Date().getHours(),\n                minute: new Date().getMinutes(),\n              },\n              source: isAgent ? '' : sourceOption,\n              rooms: newRooms,\n              currency: context.currency,\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\n              guest: {\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\n                first_name: bookedByInfoData.firstName,\n                last_name: bookedByInfoData.lastName,\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\n                city: null,\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\n                address: '',\n                dob: null,\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\n                cci: bookedByInfoData.cardNumber\n                  ? {\n                      nbr: bookedByInfoData.cardNumber,\n                      holder_name: bookedByInfoData.cardHolderName,\n                      expiry_month: bookedByInfoData.expiryMonth,\n                      expiry_year: bookedByInfoData.expiryYear,\n                    }\n                  : null,\n              },\n            },\n            pickup_info: null,\n          };\n          break;\n        }\n      }\n      return newBooking;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  private getRoomCategoryByRoomId(bookingData) {\n    return bookingData.roomsInfo?.find(roomCategory => {\n      return roomCategory.id === bookingData.RATE_TYPE;\n    });\n  }\n  public setEditingRoomInfo(bookingData, selectedUnits) {\n    const category = this.getRoomCategoryByRoomId(bookingData);\n    const room_id = !category ? '' : `c_${category?.id}`;\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\n    const data = {\n      adultCount: bookingData.ADULTS_COUNT,\n      rate: bookingData.RATE,\n      rateType: bookingData.RATE_TYPE,\n      ratePlanId: bookingData.RATE_PLAN_ID,\n      roomCategoryId: category ? category.id : '',\n      roomCategoryName: category ? category.name : '',\n      totalRooms: 1,\n      ratePlanName: bookingData.RATE_PLAN,\n      roomId: bookingData.PR_ID,\n      guestName: bookingData.NAME,\n      cancelation: bookingData.cancelation,\n      guarantee: bookingData.guarantee,\n      adult_child_offering: bookingData.adult_child_offering,\n    };\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\n  }\n}\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n/* .row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n} */\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\nimport { BookingService } from '@/services/booking.service';\nimport { dateToFormattedString, getReleaseHoursString, handleBodyOverflow } from '@/utils/utils';\nimport { ICountry, IEntries, RoomBlockDetails } from '@/models/IBooking';\nimport { IPageTwoDataUpdateProps } from '@/models/models';\nimport { IglBookPropertyService } from './igl-book-property.service';\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { ICurrency } from '@/models/calendarData';\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore, resetReserved } from '@/stores/booking.store';\nimport moment from 'moment';\nexport type IHistoryEntry = {\n  dates: { checkIn: Date; checkOut: Date };\n  adults: number;\n  children: number;\n};\n@Component({\n  tag: 'igl-book-property',\n  styleUrls: ['igl-book-property.css'],\n  scoped: true,\n})\nexport class IglBookProperty {\n  @Prop() propertyid: number;\n  @Prop() allowedBookingSources: any;\n  @Prop() language: string;\n  @Prop() countries: ICountry[];\n  @Prop() showPaymentDetails: boolean = false;\n  @Prop() currency: ICurrency;\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\n  @Prop() adultChildConstraints: TAdultChildConstraints;\n\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\n  @State() renderAgain: boolean = false;\n  @State() dateRangeData: { [key: string]: any };\n  @State() defaultData: any;\n  @State() isLoading: string;\n  @State() bookingHistory: Array<{\n    dates: { checkIn: Date; checkOut: Date };\n    adults: number;\n    children: number;\n  }> = [];\n\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\n\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\n  private sourceOption: TSourceOption;\n  private page: string;\n  private showSplitBookingOption: boolean = false;\n  private sourceOptions: TSourceOptions[] = [];\n  private guestData: { [key: string]: any }[] = [];\n  private bookedByInfoData: { [key: string]: any } = {};\n  private blockDatesData: { [key: string]: any } = {};\n  private ratePricingMode: IEntries[] = [];\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\n  private bedPreferenceType: IEntries[] = [];\n  private bookingService: BookingService = new BookingService();\n  private bookPropertyService = new IglBookPropertyService();\n  private defaultDateRange: { from_date: string; to_date: string };\n  private updatedBooking: boolean = false;\n  private MAX_HISTORY_LENGTH: number = 2;\n  private didReservation: boolean;\n  private wasBlockedUnit: boolean;\n\n  async componentWillLoad() {\n    console.log('<==>roomtypes<==>', booking_store?.roomTypes);\n    if (booking_store.roomTypes) {\n      modifyBookingStore('roomTypes', []);\n      modifyBookingStore('ratePlanSelections', {});\n    }\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.initializeDefaultDateRange();\n\n    if (!this.bookingData.defaultDateRange) {\n      return;\n    }\n    // console.log(this.bookingData);\n    this.initializeDefaultData();\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\n    await this.fetchSetupEntriesAndInitialize();\n    this.initializeEventData();\n  }\n\n  componentDidLoad() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    handleBodyOverflow(true);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  @Listen('inputCleared')\n  clearBooking(e: CustomEvent) {\n    if (this.isEventType('SPLIT_BOOKING')) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.bookedByInfoData = {};\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n      this.renderPage();\n    }\n  }\n\n  @Listen('spiltBookingSelected')\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { key, data } = e.detail;\n    if (key === 'select' || (key === 'blur' && data !== '')) {\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\n      this.defaultData = { ...this.defaultData, booking: res };\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\n      this.sourceOption = res.source;\n      this.renderPage();\n    }\n  }\n\n  // @Listen('adultChild')\n  // handleAdultChildChange(event: CustomEvent) {\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\n  //   }\n  //   const { adult, child } = event.detail;\n  //   this.adultChildCount = { ...event.detail };\n  //   this.updateBookingHistory({ adults: adult, children: child });\n  // }\n  @Listen('adultChild')\n  handleAdultChildChange(event: CustomEvent) {\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n    }\n    const { adult, child } = event.detail;\n    this.adultChildCount = { ...event.detail };\n\n    // Update the booking history\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\n  }\n\n  @Listen('dateSelectEvent')\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.updateBookingHistory({\n      dates: {\n        checkIn: new Date(this.dateRangeData.fromDate),\n        checkOut: new Date(new Date(opt.data.toDate)),\n      },\n    });\n    console.log('date changed', opt);\n    if (opt.key === 'selectedDateRange') {\n      this.dateRangeData = opt.data;\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\n        this.defaultData.roomsInfo = [];\n      } else if (this.adultChildCount.adult !== 0) {\n        this.checkBookingAvailability();\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\n      }\n    }\n  }\n  @Listen('sourceDropDownChange')\n  handleSourceDropDown(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const value = event.detail;\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\n    this.sourceOption = {\n      code: value,\n      description: selectedSource.value || '',\n      tag: selectedSource.tag,\n      id: selectedSource.id,\n      type: selectedSource.type,\n    };\n  }\n\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\n  gotoSplitPageTwo() {\n    this.gotoPage('page_two');\n  }\n\n  @Listen('buttonClicked')\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\n    switch (event.detail.key) {\n      case 'save':\n        this.bookUser(false);\n        break;\n      case 'cancel':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        this.closeWindow();\n        break;\n      case 'back':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        if (this.isEventType('BAR_BOOKING')) {\n          resetReserved();\n        }\n        this.gotoPage('page_one');\n        break;\n      case 'book':\n        this.bookUser(false);\n        break;\n      case 'bookAndCheckIn':\n        this.bookUser(true);\n        break;\n      case 'next':\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        if (!this.adultChildCount?.adult) {\n          this.animateIrSelect.emit('adult_child_select');\n          break;\n        }\n        if (calculateTotalRooms() > 0) {\n          this.gotoPage('page_two');\n          break;\n        } else if (this.defaultData?.roomsInfo.length === 0) {\n          this.animateIrButton.emit('check_availability');\n          break;\n        }\n        this.toast.emit({\n          type: 'error',\n          description: locales.entries.Lcz_SelectRatePlan,\n          title: locales.entries.Lcz_SelectRatePlan,\n        });\n        break;\n      case 'check':\n        this.checkBookingAvailability();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\n\n    const newEntry: IHistoryEntry = {\n      dates: {\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\n      },\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\n    };\n\n    // Update the booking history\n    this.bookingHistory.push(newEntry);\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\n      this.bookingHistory.shift();\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent) {\n    if (e.key === 'Escape') {\n      this.closeWindow();\n    }\n  }\n\n  private initializeDefaultDateRange() {\n    this.defaultDateRange = {\n      from_date: this.bookingData.FROM_DATE,\n      to_date: this.bookingData.TO_DATE,\n    };\n  }\n\n  private initializeDefaultData() {\n    this.defaultData = this.bookingData;\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\n  }\n\n  private async fetchSetupEntriesAndInitialize() {\n    try {\n      const setupEntries = await this.fetchSetupEntries();\n      this.setSourceOptions(this.allowedBookingSources);\n      this.setOtherProperties(setupEntries);\n    } catch (error) {\n      console.error('Error fetching setup entries:', error);\n    }\n  }\n\n  private initializeEventData() {\n    if (this.isEventType('EDIT_BOOKING')) {\n      this.initializeEditBookingData();\n    }\n\n    if (!this.isEventType('BAR_BOOKING')) {\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\n    }\n\n    this.initializePage();\n  }\n\n  private initializeEditBookingData() {\n    this.adultChildCount = {\n      adult: this.defaultData.ADULTS_COUNT,\n      child: this.defaultData.CHILDREN_COUNT,\n    };\n\n    this.initialRoomIds = {\n      roomName: this.defaultData.roomName,\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\n      roomId: this.defaultData.PR_ID,\n      roomTypeId: this.defaultData.RATE_TYPE,\n    };\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\n    console.log(GUEST);\n    modifyBookingStore('guest', {\n      bed_preference: currentRoomType.bed_preference?.toString(),\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\n      first_name: GUEST.first_name ?? '',\n      last_name: GUEST.last_name ?? '',\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\n      unit: (currentRoomType.unit as any)?.id?.toString(),\n    });\n    this.checkBookingAvailability();\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\n  }\n\n  private initializePage() {\n    switch (this.defaultData.event_type) {\n      case 'SPLIT_BOOKING':\n        this.showSplitBookingOption = true;\n        this.page = 'page_one';\n        break;\n      case 'BLOCK_DATES':\n        this.page = 'page_block_date';\n        break;\n      default:\n        this.page = 'page_one';\n        break;\n    }\n  }\n\n  async fetchSetupEntries() {\n    return await this.bookingService.fetchSetupEntries();\n  }\n\n  private isGuestDataIncomplete() {\n    for (const roomtypeId in booking_store.ratePlanSelections) {\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\n      for (const rateplanId in roomtype) {\n        const rateplan = roomtype[rateplanId];\n        if (rateplan.reserved > 0) {\n          for (const guest of rateplan.guest) {\n            if (guest.first_name === '' || guest.last_name === '') {\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  private isButtonDisabled() {\n    const isValidProperty = (property, key, comparedBy) => {\n      if (!property) {\n        return true;\n      }\n      if (property === this.guestData) {\n        return this.isGuestDataIncomplete();\n      }\n      if (key === 'selectedArrivalTime') {\n        if (property[key] !== undefined) {\n          return property[key].code === '';\n        } else {\n          return true;\n        }\n      }\n      return property[key] === comparedBy || property[key] === undefined;\n    };\n    return (\n      isValidProperty(this.guestData, 'guestName', '') ||\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\n    );\n  }\n\n  private setSourceOptions(bookingSource: any[]) {\n    this.sourceOptions = bookingSource.map(source => ({\n      id: source.id,\n      value: source.description,\n      tag: source.tag,\n      type: source.type,\n    }));\n    if (this.isEventType('EDIT_BOOKING')) {\n      this.sourceOption = { ...this.defaultData.SOURCE };\n    } else {\n      this.sourceOption = {\n        code: bookingSource[0].code,\n        description: bookingSource[0].description,\n        tag: bookingSource[0].tag,\n        type: bookingSource[0].type,\n        id: bookingSource[0].id,\n      };\n    }\n  }\n\n  private setOtherProperties(res: any) {\n    this.ratePricingMode = res?.ratePricingMode;\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\n    this.bedPreferenceType = res.bedPreferenceType;\n  }\n\n  private async checkBookingAvailability() {\n    resetBookingStore();\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\n    try {\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\n      const data = await this.bookingService.getBookingAvailability({\n        from_date,\n        to_date,\n        propertyid: this.propertyid,\n        adultChildCount: this.adultChildCount,\n        language: this.language,\n        room_type_ids,\n        currency: this.currency,\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\n        is_in_agent_mode,\n        room_type_ids_to_update,\n      });\n      if (!this.isEventType('EDIT_BOOKING')) {\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\n      }\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\n        this.updateBooking();\n      }\n    } catch (error) {\n      console.error('Error initializing booking availability:', error);\n    }\n  }\n\n  private updateBooking() {\n    try {\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\n      const roomtypeId = currentRoomType.roomtype.id;\n      const rateplanId = currentRoomType.rateplan.id;\n      console.log({ GUEST });\n      const guest = {\n        bed_preference: currentRoomType.bed_preference?.toString(),\n        infant_nbr: currentRoomType.occupancy.infant_nbr,\n        last_name: GUEST.last_name,\n        first_name: GUEST.first_name,\n        unit: (currentRoomType.unit as any)?.id?.toString(),\n        roomtype_id: currentRoomType.roomtype.id,\n      };\n      modifyBookingStore('guest', guest);\n      reserveRooms({\n        roomTypeId: roomtypeId,\n        ratePlanId: rateplanId,\n        rooms: 1,\n        guest: [guest],\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  private async checkAndBlockDate() {\n    try {\n      const { block_exposed_unit_props } = this.defaultData;\n      await this.bookingService.getBookingAvailability({\n        from_date: block_exposed_unit_props.from_date,\n        to_date: block_exposed_unit_props.to_date,\n        propertyid: this.propertyid,\n        adultChildCount: {\n          adult: 2,\n          child: 0,\n        },\n        language: this.language,\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\n        currency: this.currency,\n      });\n      const isAvailable = booking_store.roomTypes.every(rt => {\n        if (rt.is_available_to_book) {\n          return true;\n        }\n        return rt.inventory > 0 && rt['not_available_reason'] === 'ALL-RATES-PLAN-NOT-BOOKABLE';\n      });\n      if (isAvailable) {\n        await this.handleBlockDate(false);\n      } else {\n        console.log('Blocked date is unavailable. Continuing...');\n      }\n    } catch (error) {\n      console.error('Error checking and blocking date:', error);\n    }\n  }\n  private async closeWindow() {\n    resetBookingStore();\n    handleBodyOverflow(false);\n    this.closeBookingWindow.emit();\n\n    if (this.wasBlockedUnit && !this.didReservation) {\n      await this.checkAndBlockDate();\n    }\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  private isEventType(key: TEventType) {\n    return this.defaultData.event_type === key;\n  }\n\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.blockDatesData = opt.data;\n  }\n\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt = event.detail;\n    if (opt.guestRefKey) {\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\n        this.guestData[opt.guestRefKey] = {\n          ...opt.data,\n          roomId: this.defaultData.PR_ID,\n        };\n      } else this.guestData[opt.guestRefKey] = opt.data;\n    }\n  }\n\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const opt: { [key: string]: any } = event.detail;\n    this.bookedByInfoData = opt.value.data;\n  }\n\n  private renderPage() {\n    this.renderAgain = !this.renderAgain;\n  }\n\n  private gotoPage(gotoPage: string) {\n    this.page = gotoPage;\n    this.renderPage();\n  }\n\n  private getPageBlockDatesView() {\n    return (\n      <Fragment>\n        <igl-block-dates-view\n          fromDate={this.defaultData.FROM_DATE}\n          toDate={this.defaultData.TO_DATE}\n          entryDate={this.defaultData.ENTRY_DATE}\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\n        ></igl-block-dates-view>\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    if (event.detail.key === 'propertyBookedBy') {\n      this.handleBookedByInfoUpdate(event);\n    } else {\n      this.handleGuestInfoUpdate(event);\n    }\n  }\n\n  private async handleBlockDate(auto_close = true) {\n    const props = this.wasBlockedUnit\n      ? this.defaultData.block_exposed_unit_props\n      : (() => {\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\n          return {\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\n            pr_id: this.defaultData.PR_ID.toString(),\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\n            ...releaseData,\n          };\n        })();\n    await this.bookingService.blockUnit(props);\n    // const blockedUnit = await transformNewBLockedRooms(result);\n    // this.blockedCreated.emit(blockedUnit);\n    if (auto_close) this.closeWindow();\n  }\n\n  private async bookUser(check_in: boolean) {\n    this.setLoadingState(check_in);\n\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n      if (this.isGuestDataIncomplete()) {\n        this.isLoading = '';\n        return;\n      }\n    } else if (this.isButtonDisabled()) {\n      this.isLoading = '';\n      return;\n    }\n\n    try {\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n        this.bookedByInfoData.message = this.defaultData.NOTES;\n      }\n      this.didReservation = true;\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\n        context: this,\n        sourceOption: this.sourceOption,\n        check_in,\n      });\n      await this.bookingService.doReservation(serviceParams);\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.error('Error booking user:', error);\n    } finally {\n      // this.isLoading = null;\n      this.resetLoadingState();\n    }\n  }\n\n  private setLoadingState(assign_units: boolean) {\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\n      this.isLoading = 'save';\n    } else {\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\n    }\n  }\n\n  private resetLoadingState() {\n    this.isLoading = '';\n    setTimeout(() => {\n      this.closeWindow();\n    }, 100);\n  }\n\n  private getCurrentPage(name: string) {\n    return this.page === name;\n  }\n\n  render() {\n    return (\n      <Host data-testid=\"book_property_sheet\">\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\n            <div class=\"card-header-container mb-2\">\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\n              <ir-icon\n                class={'px-2'}\n                onIconClickHandler={() => {\n                  this.closeWindow();\n                }}\n              >\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n                  />\n                </svg>\n              </ir-icon>\n            </div>\n          </div>\n          <div class=\"px-2 px-md-3\">\n            {this.getCurrentPage('page_one') && (\n              <igl-booking-overview-page\n                initialRoomIds={this.initialRoomIds}\n                defaultDaterange={this.defaultDateRange}\n                class={'p-0 mb-1'}\n                eventType={this.defaultData.event_type}\n                selectedRooms={this.selectedUnits}\n                currency={this.currency}\n                showSplitBookingOption={this.showSplitBookingOption}\n                ratePricingMode={this.ratePricingMode}\n                dateRangeData={this.dateRangeData}\n                bookingData={this.defaultData}\n                adultChildCount={this.adultChildCount}\n                bookedByInfoData={this.bookedByInfoData}\n                adultChildConstraints={this.adultChildConstraints}\n                sourceOptions={this.sourceOptions}\n                propertyId={this.propertyid}\n              ></igl-booking-overview-page>\n            )}\n\n            {this.getCurrentPage('page_two') && (\n              <igl-booking-form\n                currency={this.currency}\n                propertyId={this.propertyid}\n                showPaymentDetails={this.showPaymentDetails}\n                selectedGuestData={this.guestData}\n                countries={this.countries}\n                isLoading={this.isLoading}\n                selectedRooms={this.selectedUnits}\n                bedPreferenceType={this.bedPreferenceType}\n                dateRangeData={this.dateRangeData}\n                bookingData={this.defaultData}\n                showSplitBookingOption={this.showSplitBookingOption}\n                language={this.language}\n                bookedByInfoData={this.bookedByInfoData}\n                defaultGuestData={this.defaultData}\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\n              ></igl-booking-form>\n            )}\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\nimport { IPageTwoDataUpdateProps } from '@/models/models';\nimport { IglBookPropertyPayloadEditBooking, TPropertyButtonsTypes } from '../../../../models/igl-book-property';\nimport { formatAmount } from '@/utils/utils';\nimport locales from '@/stores/locales.store';\nimport { ICurrency } from '@/models/calendarData';\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\nimport calendar_data from '@/stores/calendar-data';\nimport moment from 'moment';\nimport { ICountry } from '@/models/IBooking';\n@Component({\n  tag: 'igl-booking-form',\n  styleUrl: 'igl-booking-form.css',\n  scoped: true,\n})\nexport class IglBookingForm {\n  @Prop() showPaymentDetails: boolean;\n  @Prop() currency: ICurrency;\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\n  @Prop() dateRangeData: { [key: string]: any };\n  @Prop() bookingData: { [key: string]: any };\n  @Prop() showSplitBookingOption: boolean;\n  @Prop() language: string;\n  @Prop() bookedByInfoData: { [key: string]: any };\n  @Prop() propertyId: number;\n  @Prop() bedPreferenceType: any;\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\n  @Prop({ reflect: true }) isLoading: string;\n  @Prop() countries: ICountry[];\n  @Prop() selectedGuestData;\n  @Prop() defaultGuestData: IglBookPropertyPayloadEditBooking;\n\n  @State() selectedBookedByData;\n  @State() guestData: any;\n  @State() selectedUnits: { [key: string]: any } = {};\n\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\n  @Event() buttonClicked: EventEmitter<{\n    key: TPropertyButtonsTypes;\n    data?: CustomEvent;\n  }>;\n\n  componentWillLoad() {\n    this.initializeGuestData();\n    this.selectedBookedByData = this.bookedByInfoData;\n  }\n\n  initializeGuestData() {\n    let total = 0;\n    const newSelectedUnits = { ...this.selectedUnits };\n    const getRate = (rate: number, totalNights: number, isRateModified: boolean, preference: number) => {\n      if (isRateModified && preference === 2) {\n        return rate * totalNights;\n      }\n      return rate;\n    };\n    this.selectedUnits = newSelectedUnits;\n    this.guestData = [];\n    this.selectedRooms.forEach((room, key) => {\n      room.forEach(rate_plan => {\n        newSelectedUnits[key] = rate_plan.selectedUnits;\n        total += rate_plan.totalRooms * getRate(rate_plan.rate, this.dateRangeData.dateDifference, rate_plan.isRateModified, rate_plan.rateType);\n        for (let i = 1; i <= rate_plan.totalRooms; i++) {\n          this.guestData.push({\n            guestName: '',\n            roomId: '',\n            preference: '',\n            ...rate_plan,\n          });\n        }\n      });\n    });\n    this.bookingData.TOTAL_PRICE = total;\n  }\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\n    const opt = event.detail;\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\n    updatedUnits[index] = opt.data.roomId;\n    this.selectedUnits = {\n      ...this.selectedUnits,\n      [categoryIdKey]: updatedUnits,\n    };\n    this.dataUpdateEvent.emit({\n      key: 'applicationInfoUpdateEvent',\n      value: event.detail,\n    });\n  }\n\n  handleEventData(event: any, key: string, index: number) {\n    if (key === 'application-info') {\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\n    } else {\n      this.selectedBookedByData = event.detail.data;\n      this.dataUpdateEvent.emit({\n        key: 'propertyBookedBy',\n        value: event.detail,\n      });\n    }\n  }\n  isGuestDataIncomplete() {\n    if (this.selectedGuestData.length !== this.guestData.length) {\n      return true;\n    }\n    for (const data of this.selectedGuestData) {\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\n        return true;\n      }\n    }\n    return false;\n  }\n  isButtonDisabled(key: string) {\n    const isValidProperty = (property, key, comparedBy) => {\n      if (!property) {\n        return true;\n      }\n      if (property === this.selectedGuestData) {\n        return this.isGuestDataIncomplete();\n      }\n      if (key === 'selectedArrivalTime') {\n        if (property[key] !== undefined) {\n          return property[key].code === '';\n        } else {\n          return true;\n        }\n      }\n      return property[key] === comparedBy || property[key] === undefined;\n    };\n    return (\n      this.isLoading === key ||\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\n      isValidProperty(this.selectedBookedByData, 'email', '')\n    );\n  }\n\n  render() {\n    const showBookAndCheckin = calendar_data.checkin_enabled && moment(new Date(this.dateRangeData?.fromDate)).isSame(new Date(), 'day');\n    return (\n      <Host>\n        <div class=\"d-flex flex-wrap\">\n          <ir-date-view\n            class=\"mr-1 flex-fill font-weight-bold font-medium-1\"\n            from_date={new Date(this.dateRangeData.fromDate)}\n            to_date={new Date(this.dateRangeData.toDate)}\n            dateOption=\"DD MMM YYYY\"\n          ></ir-date-view>\n          {this.guestData.length > 1 && (\n            <div class=\"mt-1 mt-md-0 text-right\">\n              {locales.entries.Lcz_TotalPrice} <span class=\"font-weight-bold font-medium-1\">{formatAmount(this.currency.symbol, this.bookingData.TOTAL_PRICE || '0')}</span>\n            </div>\n          )}\n        </div>\n        {Object.values(booking_store.ratePlanSelections).map(val =>\n          Object.values(val).map(ratePlan => {\n            const rp = ratePlan as IRatePlanSelection;\n            if (rp.reserved === 0) {\n              return null;\n            }\n\n            return [...new Array(rp.reserved)].map((_, i) => (\n              <igl-application-info\n                totalNights={Number(this.dateRangeData.dateDifference)}\n                bedPreferenceType={this.bedPreferenceType}\n                currency={this.currency}\n                guestInfo={rp.guest ? rp.guest[i] : null}\n                bookingType={this.bookingData.event_type}\n                rateplanSelection={rp}\n                key={`${rp.ratePlan.id}_${i}`}\n                roomIndex={i}\n                baseData={\n                  this.bookingData.event_type === 'EDIT_BOOKING'\n                    ? {\n                        roomtypeId: this.bookingData.currentRoomType.roomtype.id,\n                        unit: this.bookingData.currentRoomType.unit,\n                      }\n                    : undefined\n                }\n              ></igl-application-info>\n            ));\n          }),\n        )}\n\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\n          <igl-property-booked-by\n            propertyId={this.propertyId}\n            countries={this.countries}\n            language={this.language}\n            showPaymentDetails={this.showPaymentDetails}\n            defaultData={this.bookedByInfoData}\n            onDataUpdateEvent={event => {\n              this.handleEventData(event, 'propertyBookedBy', 0);\n            }}\n          ></igl-property-booked-by>\n        )}\n\n        {this.isEditOrAddRoomEvent ? (\n          <div class=\"d-flex p-0 mb-1 mt-2\">\n            <div class=\"flex-fill mr-2\">\n              <ir-button\n                icon=\"\"\n                text={locales.entries.Lcz_Back}\n                class=\"full-width\"\n                btn_color=\"secondary\"\n                btn_styles=\"justify-content-center\"\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\n              ></ir-button>\n            </div>\n            <div class=\"flex-fill\">\n              <ir-button\n                isLoading={this.isLoading === 'save'}\n                onClickHandler={() => this.buttonClicked.emit({ key: 'save' })}\n                btn_styles=\"full-width align-items-center justify-content-center\"\n                text={locales.entries.Lcz_Save}\n              ></ir-button>\n            </div>\n          </div>\n        ) : (\n          <div class=\"d-flex flex-column flex-md-row p-0 mb-1 mt-2 justify-content-md-between align-items-md-center\">\n            <div class=\"flex-fill mr-md-1\">\n              <ir-button\n                icon_name=\"angles_left\"\n                btn_color=\"secondary\"\n                btn_styles=\"full-width align-items-center justify-content-center\"\n                onClickHandler={() => this.buttonClicked.emit({ key: 'back' })}\n                text={locales.entries.Lcz_Back}\n                style={{ '--icon-size': '1rem' }}\n                icon_style={{ paddingBottom: '1.9px' }}\n              ></ir-button>\n            </div>\n            <div class={`mt-1 mt-md-0 flex-fill ${showBookAndCheckin ? 'mr-md-1' : ''}`}>\n              <ir-button\n                isLoading={this.isLoading === 'book'}\n                btn_styles=\"full-width align-items-center justify-content-center\"\n                onClickHandler={() => this.buttonClicked.emit({ key: 'book' })}\n                text={locales.entries.Lcz_Book}\n              ></ir-button>\n            </div>\n            {showBookAndCheckin && (\n              <div class=\"mt-1 mt-md-0 flex-fill\">\n                <ir-button\n                  isLoading={this.isLoading === 'bookAndCheckIn'}\n                  btn_styles=\"full-width align-items-center justify-content-center\"\n                  onClickHandler={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\n                  text={locales.entries.Lcz_BookAndChekcIn}\n                ></ir-button>\n              </div>\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n:host > * {\r\n  margin: 0;\r\n  padding: auto;\r\n}\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: white;\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 100;\r\n}\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n","import { Component, Event, EventEmitter, Fragment, Host, Prop, h } from '@stencil/core';\nimport { TAdultChildConstraints, TSourceOptions } from '../../../../models/igl-book-property';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport moment from 'moment';\nimport booking_store from '@/stores/booking.store';\n@Component({\n  tag: 'igl-booking-overview-page',\n  styleUrl: 'igl-booking-overview-page.css',\n  scoped: true,\n})\nexport class IglBookingOverviewPage {\n  @Prop() bookingData: any;\n  @Prop() propertyId: number;\n  @Prop() message: string;\n  @Prop() showSplitBookingOption: boolean;\n  @Prop() eventType: string;\n  @Prop() currency: any;\n  @Prop() adultChildConstraints: TAdultChildConstraints;\n  @Prop() ratePricingMode: any;\n  @Prop() dateRangeData: any;\n  @Prop() defaultDaterange: { from_date: string; to_date: string };\n  @Prop() selectedRooms: Map<string, Map<string, any>>;\n  @Prop() adultChildCount: { adult: number; child: number };\n  @Prop() sourceOptions: TSourceOptions[];\n  @Prop() bookedByInfoData: any;\n  @Prop() initialRoomIds: any;\n\n  @Event() roomsDataUpdate: EventEmitter;\n\n  getSplitBookings() {\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\n  }\n  isEventType(event: string) {\n    return event === this.eventType;\n  }\n  setMinDate() {\n    if (!this.isEventType('EDIT_BOOKING')) {\n      return;\n    }\n    const from_date = moment(this.bookingData.FROM_DATE, 'YYYY-MM-DD');\n    const today = moment();\n    if (from_date.isAfter(today)) {\n      return today.add(-2, 'weeks').format('YYYY-MM-DD');\n    }\n    return from_date.add(-2, 'weeks').format('YYYY-MM-DD');\n  }\n  render() {\n    return (\n      <Host>\n        <igl-book-property-header\n          bookedByInfoData={this.bookedByInfoData}\n          defaultDaterange={this.defaultDaterange}\n          dateRangeData={this.dateRangeData}\n          minDate={this.setMinDate()}\n          // minDate={this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING') ? this.bookedByInfoData.from_date || this.bookingData.FROM_DATE : undefined}\n          adultChildCount={this.adultChildCount}\n          splitBookingId={this.showSplitBookingOption}\n          bookingData={this.bookingData}\n          sourceOptions={this.sourceOptions}\n          message={this.message}\n          bookingDataDefaultDateRange={this.bookingData.defaultDateRange}\n          showSplitBookingOption={this.showSplitBookingOption}\n          adultChildConstraints={this.adultChildConstraints}\n          splitBookings={this.getSplitBookings()}\n          propertyId={this.propertyId}\n        ></igl-book-property-header>\n        {/* {this.adultChildCount.adult === 0 && <p class={'col text-left'}>Please select the number of guests</p>} */}\n        <div class=\" text-left\">\n          {isRequestPending('/Check_Availability') && this.isEventType('EDIT_BOOKING') ? (\n            <div class=\"loading-container\">\n              <div class=\"loader\"></div>\n            </div>\n          ) : (\n            <Fragment>\n              {booking_store.roomTypes?.map(roomType => (\n                <igl-room-type\n                  initialRoomIds={this.initialRoomIds}\n                  isBookDisabled={Object.keys(this.bookedByInfoData).length <= 1}\n                  key={`room-type-${roomType.id}`}\n                  currency={this.currency}\n                  ratePricingMode={this.ratePricingMode}\n                  dateDifference={this.dateRangeData.dateDifference}\n                  bookingType={this.bookingData.event_type}\n                  roomType={roomType}\n                  class=\"mt-2 mb-1 p-0\"\n                  data-testid={`room_type_${roomType.id}`}\n                  id={roomType.id.toString()}\n                  roomInfoId={this.selectedRooms.has(`c_${roomType.id}`) ? roomType.id : null}\n                  onDataUpdateEvent={evt => this.roomsDataUpdate.emit(evt.detail)}\n                ></igl-room-type>\n              ))}\n            </Fragment>\n          )}\n        </div>\n\n        <igl-book-property-footer class={'p-0 mb-1 mt-3'} eventType={this.bookingData.event_type}></igl-book-property-footer>\n      </Host>\n    );\n  }\n}\n",":host {\n  overflow-x: hidden;\n  --ir-dialog-max-width: 20rem;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n:host * {\n  font-family: inherit !important;\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n\n.font-medium {\n  font-weight: 600;\n}\n\n:host th {\n  font-weight: 600;\n}\n.h-28 {\n  height: 2rem;\n}\n.mx-01 {\n  --m: 5px;\n  margin-right: var(--m) !important;\n  margin-left: var(--m) !important;\n}\n\n.date-margin {\n  margin-right: 5px;\n}\n.pickup-margin {\n  margin-bottom: 7px !important;\n}\n.header-date {\n  padding-left: 5px !important;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n:root {\n  --sidebar-width: 50rem;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n.sm-padding-right {\n  padding-right: 0.2rem;\n}\n.sm-padding-left {\n  padding-left: 0.2rem;\n}\n.sm-padding-top {\n  padding-top: 0.2rem;\n}\n.sm-padding-bottom {\n  padding-bottom: 0.2rem;\n}\n\n.info-notes {\n  list-style: none;\n  padding-left: 0;\n}\n.light-blue-bg {\n  background-color: #acecff;\n  padding: 0.2rem 0.3rem;\n}\n.iframeHeight {\n  height: 17.5rem;\n}\n\n.dialog-title {\n  width: fit-content;\n}\n","import { Component, Listen, h, Prop, Watch, State, Event, EventEmitter, Element, Fragment } from '@stencil/core';\nimport { Booking, ExtraService, Guest, IPmsLog, Room, SharedPerson } from '@/models/booking.dto';\nimport axios from 'axios';\nimport { BookingService } from '@/services/booking.service';\nimport { IglBookPropertyPayloadAddRoom, TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport { ICountry, IEntries } from '@/models/IBooking';\nimport { IPaymentAction, PaymentService } from '@/services/payment.service';\nimport Token from '@/models/Token';\nimport { BookingDetailsSidebarEvents, OpenSidebarEvent } from './types';\nimport calendar_data from '@/stores/calendar-data';\nimport moment from 'moment';\nimport { IrModalCustomEvent } from '@/components';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n\n@Component({\n  tag: 'ir-booking-details',\n  styleUrl: 'ir-booking-details.css',\n  scoped: true,\n})\nexport class IrBookingDetails {\n  @Element() element: HTMLElement;\n  // Setup Data\n  @Prop() language: string = 'en';\n  @Prop() ticket: string = '';\n  @Prop() bookingNumber: string = '';\n  @Prop() propertyid: number;\n  @Prop() is_from_front_desk = false;\n  @Prop() p: string;\n  // Booleans Conditions\n  @Prop() hasPrint: boolean = false;\n  @Prop() hasReceipt: boolean = false;\n  @Prop() hasDelete: boolean = false;\n  @Prop() hasMenu: boolean = false;\n\n  // Room Booleans\n  @Prop() hasRoomEdit: boolean = false;\n  @Prop() hasRoomDelete: boolean = false;\n  @Prop() hasRoomAdd: boolean = false;\n  @Prop() hasCheckIn: boolean = false;\n  @Prop() hasCheckOut: boolean = false;\n  @Prop() hasCloseButton = false;\n\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\n  @State() statusData = [];\n\n  @State() showPaymentDetails: any;\n  @State() booking: Booking;\n  @State() countries: ICountry[];\n  @State() calendarData: any = {};\n  // Guest Data\n  @State() guestData: Guest = null;\n  // Rerender Flag\n  @State() rerenderFlag = false;\n  @State() sidebarState: BookingDetailsSidebarEvents | null = null;\n  @State() sidebarPayload: any;\n  @State() isUpdateClicked = false;\n\n  @State() pms_status: IPmsLog;\n  @State() isPMSLogLoading: boolean = false;\n  @State() paymentActions: IPaymentAction[];\n  @State() property_id: number;\n  @State() selectedService: ExtraService;\n  @State() bedPreference: IEntries[];\n  @State() roomGuest: any;\n  @State() modalState: { type: 'email' | (string & {}); message: string; loading: boolean } = null;\n  // Payment Event\n  @Event() toast: EventEmitter<IToast>;\n  @Event() bookingChanged: EventEmitter<Booking>;\n  @Event() closeSidebar: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private paymentService = new PaymentService();\n  private token = new Token();\n\n  private printingBaseUrl = 'https://gateway.igloorooms.com/PrintBooking/%1/printing?id=%2';\n  modalRef: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('openSidebar')\n  handleSideBarEvents(e: CustomEvent<OpenSidebarEvent<unknown>>) {\n    this.sidebarState = e.detail.type;\n    this.sidebarPayload = e.detail.payload;\n  }\n\n  @Listen('clickHandler')\n  handleIconClick(e: CustomEvent) {\n    const target = e.target as HTMLIrButtonElement;\n    switch (target.id) {\n      case 'pickup':\n        this.sidebarState = 'pickup';\n        return;\n      case 'close':\n        this.closeSidebar.emit(null);\n        return;\n      case 'email':\n        this.modalState = {\n          type: 'email',\n          message: locales.entries.Lcz_EmailBookingto.replace('%1', this.booking.guest.email),\n          loading: isRequestPending('/Send_Booking_Confirmation_Email'),\n        };\n        this.modalRef.openModal();\n        return;\n      case 'print':\n        this.openPrintingScreen();\n        return;\n      case 'receipt':\n        this.openPrintingScreen('invoice');\n        return;\n      case 'book-delete':\n        return;\n      case 'menu':\n        window.location.href = 'https://x.igloorooms.com/manage/acbookinglist.aspx';\n        return;\n      case 'room-add':\n        (this.bookingItem as IglBookPropertyPayloadAddRoom) = {\n          ID: '',\n          NAME: this.booking.guest.last_name,\n          EMAIL: this.booking.guest.email,\n          PHONE: this.booking.guest.mobile,\n          REFERENCE_TYPE: '',\n          FROM_DATE: this.booking.from_date,\n          ARRIVAL: this.booking.arrival,\n          TO_DATE: this.booking.to_date,\n          TITLE: `${locales.entries.Lcz_AddingUnitToBooking}# ${this.booking.booking_nbr}`,\n          defaultDateRange: {\n            fromDate: new Date(this.booking.from_date),\n            fromDateStr: '',\n            toDate: new Date(this.booking.to_date),\n            toDateStr: '',\n            dateDifference: 0,\n            message: '',\n          },\n          event_type: 'ADD_ROOM',\n          booking: this.booking,\n          BOOKING_NUMBER: this.booking.booking_nbr,\n          ADD_ROOM_TO_BOOKING: this.booking.booking_nbr,\n          GUEST: this.booking.guest,\n          message: this.booking.remark,\n          SOURCE: this.booking.source,\n          ROOMS: this.booking.rooms,\n        };\n        return;\n      case 'extra_service_btn':\n        this.sidebarState = 'extra_service';\n        return;\n      case 'add-payment':\n        return;\n    }\n  }\n\n  @Listen('resetExposedCancelationDueAmount')\n  async handleResetExposedCancellationDueAmount(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    //TODO: Payment action\n    const paymentActions = await this.paymentService.GetExposedCancellationDueAmount({ booking_nbr: this.booking.booking_nbr, currency_id: this.booking.currency.id });\n    this.paymentActions = [...paymentActions];\n  }\n  @Listen('editInitiated')\n  handleEditInitiated(e: CustomEvent<TIglBookPropertyPayload>) {\n    this.bookingItem = e.detail;\n  }\n  @Listen('updateRoomGuests')\n  handleRoomGuestsUpdate(e: CustomEvent<{ identifier: string; guests: SharedPerson[] }>) {\n    const { identifier, guests } = e.detail;\n    const rooms = [...this.booking.rooms];\n    let currentRoomIndex = rooms.findIndex(r => r.identifier === identifier);\n    if (currentRoomIndex === -1) {\n      return;\n    }\n    const currentRoom = rooms[currentRoomIndex];\n    const updatedRoom = { ...currentRoom, sharing_persons: guests };\n    rooms[currentRoomIndex] = updatedRoom;\n    this.booking = { ...this.booking, rooms: [...rooms] };\n  }\n\n  @Listen('resetBookingEvt')\n  async handleResetBooking(e: CustomEvent<Booking | null>) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (e.detail) {\n      return (this.booking = e.detail);\n    }\n    await this.resetBooking();\n  }\n  @Listen('editExtraService')\n  handleEditExtraService(e: CustomEvent) {\n    this.selectedService = e.detail;\n    this.sidebarState = 'extra_service';\n  }\n\n  private setRoomsData(roomServiceResp) {\n    let roomsData: { [key: string]: any }[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    this.calendarData.roomsInfo = roomsData;\n  }\n  private async initializeApp() {\n    try {\n      const [roomResponse, languageTexts, countriesList, bookingDetails, bedPreference] = await Promise.all([\n        this.roomService.getExposedProperty({ id: this.propertyid || 0, language: this.language, aname: this.p }),\n        this.roomService.fetchLanguage(this.language),\n        this.bookingService.getCountries(this.language),\n        this.bookingService.getExposedBooking(this.bookingNumber, this.language),\n        this.bookingService.getSetupEntriesByTableName('_BED_PREFERENCE_TYPE'),\n      ]);\n      this.property_id = roomResponse?.My_Result?.id;\n      this.bedPreference = bedPreference;\n      if (bookingDetails?.booking_nbr && bookingDetails?.currency?.id && bookingDetails.is_direct) {\n        this.paymentService\n          .GetExposedCancellationDueAmount({\n            booking_nbr: bookingDetails.booking_nbr,\n            currency_id: bookingDetails.currency.id,\n          })\n          .then(res => {\n            this.paymentActions = res;\n          });\n      }\n      if (!locales?.entries) {\n        locales.entries = languageTexts.entries;\n        locales.direction = languageTexts.direction;\n      }\n      this.countries = countriesList;\n      const myResult = roomResponse?.My_Result;\n      if (myResult) {\n        const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends, aname } = myResult;\n        this.printingBaseUrl = this.printingBaseUrl.replace('%1', aname).replace('%2', this.bookingNumber);\n        this.calendarData = {\n          currency,\n          allowed_booking_sources,\n          adult_child_constraints,\n          legendData: calendar_legends,\n        };\n        this.setRoomsData(roomResponse);\n        const paymentCodesToShow = ['001', '004'];\n        this.showPaymentDetails = paymentMethods?.some(method => paymentCodesToShow.includes(method.code));\n      } else {\n        console.warn(\"Room response is missing 'My_Result'.\");\n      }\n\n      // Set guest and booking data\n      this.guestData = bookingDetails.guest;\n      this.booking = bookingDetails;\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    }\n  }\n\n  private async openPrintingScreen(mode: 'invoice' | 'print' = 'print', version: 'old' | 'new' = 'new') {\n    if (version === 'old') {\n      if (mode === 'invoice') {\n        return window.open(`https://x.igloorooms.com/manage/AcBookingEdit.aspx?IRID=${this.booking.system_id}&&PM=I&TK=${this.ticket}`);\n      }\n      return window.open(`https://x.igloorooms.com/manage/AcBookingEdit.aspx?IRID=${this.booking.system_id}&&PM=B&TK=${this.ticket}`);\n    }\n    let url = this.printingBaseUrl;\n    if (mode === 'invoice') {\n      url = url + '&mode=invoice';\n    }\n    const { data } = await axios.post(`Get_ShortLiving_Token`);\n    if (!data.ExceptionMsg) {\n      url = url + `&token=${data.My_Result}`;\n    }\n    window.open(url);\n  }\n\n  private handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n\n  private handleDeleteFinish(e: CustomEvent) {\n    this.booking = { ...this.booking, rooms: this.booking.rooms.filter(room => room.identifier !== e.detail) };\n  }\n\n  private async resetBooking() {\n    try {\n      const booking = await this.bookingService.getExposedBooking(this.bookingNumber, this.language);\n      this.booking = { ...booking };\n      this.bookingChanged.emit(this.booking);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async handleModalConfirm(e: IrModalCustomEvent<any>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    switch (this.modalState.type) {\n      case 'email':\n        await this.bookingService.sendBookingConfirmationEmail(this.booking.booking_nbr, this.language);\n        break;\n    }\n    this.modalState = null;\n    this.modalRef.closeModal();\n  }\n  private renderSidebarContent() {\n    const handleClose = () => {\n      this.sidebarState = null;\n    };\n    switch (this.sidebarState) {\n      case 'guest':\n        return (\n          <ir-guest-info\n            isInSideBar\n            headerShown\n            slot=\"sidebar-body\"\n            booking_nbr={this.bookingNumber}\n            email={this.booking?.guest.email}\n            language={this.language}\n            onCloseSideBar={handleClose}\n          ></ir-guest-info>\n        );\n      case 'pickup':\n        return (\n          <ir-pickup\n            bookingDates={{ from: this.booking.from_date, to: this.booking.to_date }}\n            slot=\"sidebar-body\"\n            defaultPickupData={this.booking.pickup_info}\n            bookingNumber={this.booking.booking_nbr}\n            numberOfPersons={this.booking.occupancy.adult_nbr + this.booking.occupancy.children_nbr}\n            onCloseModal={handleClose}\n          ></ir-pickup>\n        );\n      case 'extra_note':\n        return <ir-booking-extra-note slot=\"sidebar-body\" booking={this.booking} onCloseModal={() => (this.sidebarState = null)}></ir-booking-extra-note>;\n      case 'extra_service':\n        return (\n          <ir-extra-service-config\n            service={this.selectedService}\n            booking={{ from_date: this.booking.from_date, to_date: this.booking.to_date, booking_nbr: this.booking.booking_nbr, currency: this.booking.currency }}\n            slot=\"sidebar-body\"\n            onCloseModal={() => {\n              handleClose();\n              if (this.selectedService) {\n                this.selectedService = null;\n              }\n            }}\n          ></ir-extra-service-config>\n        );\n      case 'room-guest':\n        return (\n          <ir-room-guests\n            countries={this.countries}\n            language={this.language}\n            identifier={this.sidebarPayload?.identifier}\n            bookingNumber={this.booking.booking_nbr}\n            roomName={this.sidebarPayload?.roomName}\n            totalGuests={this.sidebarPayload?.totalGuests}\n            sharedPersons={this.sidebarPayload?.sharing_persons}\n            slot=\"sidebar-body\"\n            checkIn={this.sidebarPayload?.checkin}\n            onCloseModal={handleClose}\n          ></ir-room-guests>\n        );\n      default:\n        return null;\n    }\n  }\n  render() {\n    if (!this.booking) {\n      return (\n        <div class={'loading-container'}>\n          <ir-spinner></ir-spinner>\n        </div>\n      );\n    }\n    return [\n      <Fragment>\n        {!this.is_from_front_desk && (\n          <Fragment>\n            <ir-toast></ir-toast>\n            <ir-interceptor></ir-interceptor>\n          </Fragment>\n        )}\n      </Fragment>,\n      <ir-booking-header\n        booking={this.booking}\n        hasCloseButton={this.hasCloseButton}\n        hasDelete={this.hasDelete}\n        hasMenu={this.hasMenu}\n        hasPrint={this.hasPrint}\n        hasReceipt={this.hasReceipt}\n        hasEmail={['001', '002'].includes(this.booking?.status?.code)}\n      ></ir-booking-header>,\n      <div class=\"fluid-container p-1 text-left mx-0\">\n        <div class=\"row m-0\">\n          <div class=\"col-12 p-0 mx-0 pr-lg-1 col-lg-6\">\n            <ir-reservation-information countries={this.countries} booking={this.booking}></ir-reservation-information>\n            <div class=\"font-size-large d-flex justify-content-between align-items-center mb-1\">\n              <ir-date-view from_date={this.booking.from_date} to_date={this.booking.to_date}></ir-date-view>\n              {this.hasRoomAdd && this.booking.is_direct && this.booking.is_editable && (\n                <ir-button id=\"room-add\" icon_name=\"square_plus\" variant=\"icon\" style={{ '--icon-size': '1.5rem' }}></ir-button>\n              )}\n            </div>\n            <div class=\"card p-0 mx-0\">\n              {this.booking.rooms.map((room: Room, index: number) => {\n                const showCheckin = this.handleRoomCheckin(room);\n                const showCheckout = this.handleRoomCheckout(room);\n                return [\n                  <ir-room\n                    room={room}\n                    language={this.language}\n                    bedPreferences={this.bedPreference}\n                    isEditable={this.booking.is_editable}\n                    legendData={this.calendarData.legendData}\n                    roomsInfo={this.calendarData.roomsInfo}\n                    myRoomTypeFoodCat={room.roomtype.name}\n                    mealCodeName={room.rateplan.short_name}\n                    currency={this.booking.currency.symbol}\n                    hasRoomEdit={this.hasRoomEdit && this.booking.status.code !== '003' && this.booking.is_direct}\n                    hasRoomDelete={this.hasRoomDelete && this.booking.status.code !== '003' && this.booking.is_direct}\n                    hasCheckIn={showCheckin}\n                    hasCheckOut={showCheckout}\n                    booking={this.booking}\n                    bookingIndex={index}\n                    onDeleteFinished={this.handleDeleteFinish.bind(this)}\n                  />,\n                  index !== this.booking.rooms.length - 1 && <hr class=\"mr-2 ml-2 my-0 p-0\" />,\n                ];\n              })}\n            </div>\n            {/* <ir-ota-services services={this.booking.ota_services}></ir-ota-services> */}\n            <ir-pickup-view booking={this.booking}></ir-pickup-view>\n            <section>\n              <div class=\"font-size-large d-flex justify-content-between align-items-center mb-1\">\n                <p class={'font-size-large p-0 m-0 '}>{locales.entries.Lcz_ExtraServices}</p>\n                <ir-button id=\"extra_service_btn\" icon_name=\"square_plus\" variant=\"icon\" style={{ '--icon-size': '1.5rem' }}></ir-button>\n              </div>\n              <ir-extra-services\n                booking={{ booking_nbr: this.booking.booking_nbr, currency: this.booking.currency, extra_services: this.booking.extra_services }}\n              ></ir-extra-services>\n            </section>\n          </div>\n          <div class=\"col-12 p-0 m-0 pl-lg-1 col-lg-6\">\n            <ir-payment-details paymentActions={this.paymentActions} bookingDetails={this.booking}></ir-payment-details>\n          </div>\n        </div>\n      </div>,\n      <ir-modal\n        modalBody={this.modalState?.message}\n        leftBtnText={locales.entries.Lcz_Cancel}\n        rightBtnText={locales.entries.Lcz_Confirm}\n        autoClose={false}\n        isLoading={isRequestPending('/Send_Booking_Confirmation_Email')}\n        ref={el => (this.modalRef = el)}\n        onConfirmModal={e => {\n          this.handleModalConfirm(e);\n        }}\n        onCancelModal={() => {\n          this.modalRef.closeModal();\n        }}\n      ></ir-modal>,\n      <ir-sidebar\n        open={this.sidebarState !== null}\n        side={'right'}\n        id=\"editGuestInfo\"\n        style={{ '--sidebar-width': this.sidebarState === 'room-guest' ? '60rem' : undefined }}\n        onIrSidebarToggle={e => {\n          e.stopImmediatePropagation();\n          e.stopPropagation();\n          this.sidebarState = null;\n        }}\n        showCloseButton={false}\n      >\n        {this.renderSidebarContent()}\n      </ir-sidebar>,\n      <Fragment>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\n            adultChildConstraints={this.calendarData.adult_child_constraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.property_id}\n            bookingData={this.bookingItem}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n      </Fragment>,\n    ];\n  }\n  private handleRoomCheckout(room: Room): boolean {\n    if (!calendar_data.checkin_enabled || calendar_data.is_automatic_check_in_out) {\n      return false;\n    }\n    return room.in_out.code === '001';\n  }\n  private handleRoomCheckin(room: Room): boolean {\n    if (!calendar_data.checkin_enabled || calendar_data.is_automatic_check_in_out) {\n      return false;\n    }\n    if (!room.unit) {\n      return false;\n    }\n    if (room.in_out && room.in_out.code !== '000') {\n      return false;\n    }\n    if (moment(new Date()).isSameOrAfter(new Date(room.from_date), 'days') && moment(new Date()).isBefore(new Date(room.to_date), 'days')) {\n      return true;\n    }\n    return false;\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  height: 100%;\n  gap: 1rem;\n}\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1;\n}\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import locales from '@/stores/locales.store';\r\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { getPrivateNote } from '@/utils/booking';\r\n@Component({\r\n  tag: 'ir-booking-extra-note',\r\n  styleUrls: ['ir-booking-extra-note.css', '../../../common/sheet.css'],\r\n  scoped: true,\r\n})\r\nexport class IrBookingExtraNote {\r\n  @Prop() booking: Booking;\r\n\r\n  @State() isLoading = false;\r\n  @State() note = '';\r\n\r\n  @Event() closeModal: EventEmitter<null>;\r\n  @Event() resetBookingEvt: EventEmitter<Booking | null>;\r\n\r\n  private bookingService = new BookingService();\r\n  componentWillLoad() {\r\n    if (this.booking.extras) {\r\n      this.setNote(getPrivateNote(this.booking.extras));\r\n    }\r\n  }\r\n\r\n  private setNote(value: string) {\r\n    this.note = value;\r\n  }\r\n  private async savePrivateNote() {\r\n    try {\r\n      this.isLoading = true;\r\n      let prevExtras = this.booking.extras || [];\r\n      const newExtraObj = { key: 'private_note', value: this.note };\r\n      if (prevExtras.length === 0) {\r\n        prevExtras.push(newExtraObj);\r\n      } else {\r\n        const oldPrivateNoteIndex = prevExtras.findIndex(e => e.key === 'private_note');\r\n        if (oldPrivateNoteIndex === -1) {\r\n          prevExtras.push(newExtraObj);\r\n        } else {\r\n          prevExtras[oldPrivateNoteIndex] = newExtraObj;\r\n        }\r\n      }\r\n      const res = await this.bookingService.doReservation({\r\n        assign_units: true,\r\n        is_pms: true,\r\n        is_direct: true,\r\n        is_in_loyalty_mode: false,\r\n        promo_key: null,\r\n        booking: this.booking,\r\n        Is_Non_Technical_Change: true,\r\n        extras: prevExtras,\r\n      });\r\n      this.resetBookingEvt.emit(res);\r\n      this.closeModal.emit(null);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        class={'sheet-container h-100'}\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          this.savePrivateNote();\r\n        }}\r\n      >\r\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_PrivateNote} displayContext=\"sidebar\"></ir-title>\r\n        <div class=\"sheet-body px-1\">\r\n          <ir-textarea placeholder={locales.entries.Lcz_PrivateNote_MaxChar} label=\"\" value={this.note} maxLength={150} onTextChange={e => this.setNote(e.detail)}></ir-textarea>\r\n        </div>\r\n        <div class={'sheet-footer'}>\r\n          <ir-button\r\n            onClickHandler={() => this.closeModal.emit(null)}\r\n            btn_styles=\"justify-content-center\"\r\n            class={`mb-1 mb-sm-0 flex-fill  mr-sm-1'}`}\r\n            icon=\"\"\r\n            text={locales.entries.Lcz_Cancel}\r\n            btn_color=\"secondary\"\r\n          ></ir-button>\r\n\r\n          <ir-button\r\n            btn_styles=\"justify-content-center align-items-center\"\r\n            class={'m-0 flex-fill text-center ml-sm-1'}\r\n            icon=\"\"\r\n            isLoading={this.isLoading}\r\n            text={locales.entries.Lcz_Save}\r\n            btn_color=\"primary\"\r\n            btn_type=\"submit\"\r\n          ></ir-button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.confirmed {\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.bg-ir-green {\r\n  background: #629a4c;\r\n  padding: 0.2rem 0.3rem;\r\n  /* height: 28px; */\r\n  /* padding-top: 0 !important;\r\n  padding-bottom: 0 !important ; */\r\n}\r\n.bg-ir-red {\r\n  background: #ff4961;\r\n  padding: 0.2rem 0.3rem;\r\n  /* height: 28px; */\r\n  /* padding-top: 0 !important;\r\n  padding-bottom: 0 !important ; */\r\n}\r\n.bg-ir-orange {\r\n  background: #ff9149;\r\n  padding: 0.2rem 0.3rem;\r\n  /* height: 28px; */\r\n  /* padding-top: 0 !important;\r\n  padding-bottom: 0 !important ; */\r\n}\r\n","import { IToast } from '@/components/ui/ir-toast/toast';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\nimport calendar_data from '@/stores/calendar-data';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, h, Listen, Prop, State } from '@stencil/core';\nimport { BookingDetailsDialogEvents, OpenDialogEvent, OpenSidebarEvent } from '../types';\nimport { BookingService } from '@/services/booking.service';\n\n@Component({\n  tag: 'ir-booking-header',\n  styleUrl: 'ir-booking-header.css',\n  scoped: true,\n})\nexport class IrBookingHeader {\n  @Prop() booking: Booking;\n  @Prop() hasReceipt: boolean;\n  @Prop() hasPrint: boolean;\n  @Prop() hasDelete: boolean;\n  @Prop() hasMenu: boolean;\n  @Prop() hasCloseButton: boolean;\n  @Prop() hasEmail: boolean = true;\n\n  @State() bookingStatus: string | null = null;\n  @State() currentDialogStatus: BookingDetailsDialogEvents;\n\n  @Event() toast: EventEmitter<IToast>;\n  @Event() closeSidebar: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<any>>;\n\n  private confirmationBG = {\n    '001': 'bg-ir-orange',\n    '002': 'bg-ir-green',\n    '003': 'bg-ir-red',\n    '004': 'bg-ir-red',\n  };\n  private dialogRef: HTMLIrDialogElement;\n\n  private bookingService = new BookingService();\n\n  @Listen('selectChange')\n  handleSelectChange(e: CustomEvent<any>) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    const target = e.target;\n    this.bookingStatus = (target as any).selectedValue;\n  }\n  private async updateStatus() {\n    if (!this.bookingStatus || this.bookingStatus === '-1') {\n      this.toast.emit({\n        type: 'error',\n        description: '',\n        title: locales.entries.Lcz_SelectStatus,\n        position: 'top-right',\n      });\n      return;\n    }\n    try {\n      await this.bookingService.changeExposedBookingStatus({\n        book_nbr: this.booking.booking_nbr,\n        status: this.bookingStatus,\n      });\n      this.toast.emit({\n        type: 'success',\n        description: '',\n        title: locales.entries.Lcz_StatusUpdatedSuccessfully,\n        position: 'top-right',\n      });\n      this.bookingStatus = null;\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private openDialog(e: OpenDialogEvent) {\n    const { type } = e;\n    this.currentDialogStatus = type;\n    this.dialogRef.openModal();\n  }\n  private renderDialogBody() {\n    switch (this.currentDialogStatus) {\n      case 'pms':\n        return <ir-pms-logs slot=\"modal-body\" bookingNumber={this.booking.booking_nbr}></ir-pms-logs>;\n      case 'events-log':\n        return <ir-events-log slot=\"modal-body\" bookingNumber={this.booking.booking_nbr}></ir-events-log>;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"fluid-container px-1\">\n        <div class=\"d-flex flex-column p-0 mx-0 flex-lg-row align-items-md-center justify-content-between mt-1\">\n          <div class=\"m-0 p-0 mb-1 mb-lg-0 mt-md-0\">\n            <p class=\"font-size-large m-0 p-0\">{`${locales.entries.Lcz_Booking}#${this.booking.booking_nbr}`}</p>\n            <p class=\"m-0 p-0\">{!this.booking.is_direct && <span class=\"mr-1 m-0\">{this.booking.channel_booking_nbr}</span>}</p>\n          </div>\n\n          <div class=\"d-flex justify-content-end align-items-center\" style={{ gap: '1rem', flexWrap: 'wrap' }}>\n            <span class={`confirmed btn-sm m-0  ${this.confirmationBG[this.booking.status.code]}`}>{this.booking.status.description}</span>\n            {this.booking.allowed_actions.length > 0 && this.booking.is_editable && (\n              <div class=\"m-0 p-0 d-flex align-items-center\" style={{ gap: '0.25rem' }}>\n                <ir-select\n                  selectContainerStyle=\"h-28\"\n                  selectStyles=\"d-flex status-select align-items-center h-28\"\n                  firstOption={locales.entries.Lcz_Select}\n                  id=\"update-status\"\n                  size=\"sm\"\n                  label-available=\"false\"\n                  data={this.booking.allowed_actions.map(b => ({ text: b.description, value: b.code }))}\n                  textSize=\"sm\"\n                  class=\"sm-padding-right m-0 \"\n                  selectedValue={this.bookingStatus}\n                ></ir-select>\n                <ir-button\n                  onClickHandler={this.updateStatus.bind(this)}\n                  btn_styles=\"h-28\"\n                  isLoading={isRequestPending('/Change_Exposed_Booking_Status')}\n                  btn_disabled={isRequestPending('/Change_Exposed_Booking_Status')}\n                  id=\"update-status-btn\"\n                  size=\"sm\"\n                  text=\"Update\"\n                ></ir-button>\n              </div>\n            )}\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              text={locales.entries.Lcz_EventsLog}\n              onClickHandler={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.openDialog({ type: 'events-log' });\n              }}\n            ></ir-button>\n            {calendar_data.is_pms_enabled && (\n              <ir-button\n                size=\"sm\"\n                btn_color=\"outline\"\n                text={locales.entries.Lcz_pms}\n                onClick={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.openDialog({ type: 'pms' });\n                }}\n              ></ir-button>\n            )}\n            {this.hasReceipt && <ir-button variant=\"icon\" id=\"receipt\" icon_name=\"reciept\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasPrint && <ir-button variant=\"icon\" id=\"print\" icon_name=\"print\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasEmail && <ir-button variant=\"icon\" id=\"email\" title=\"Email this booking\" icon_name=\"email\" class=\"\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasDelete && <ir-button variant=\"icon\" id=\"book-delete\" icon_name=\"trash\" class=\"\" style={{ ...colorVariants.danger, '--icon-size': '1.65rem' }}></ir-button>}\n            {this.hasMenu && <ir-button variant=\"icon\" class=\"mr-1\" id=\"menu\" icon_name=\"menu_list\" style={{ '--icon-size': '1.65rem' }}></ir-button>}\n\n            {this.hasCloseButton && (\n              <ir-button\n                id=\"close\"\n                variant=\"icon\"\n                style={{ '--icon-size': '1.65rem' }}\n                icon_name=\"xmark\"\n                class=\"ml-2\"\n                onClickHandler={e => {\n                  e.stopPropagation();\n                  e.stopImmediatePropagation();\n                  this.closeSidebar.emit(null);\n                }}\n              ></ir-button>\n            )}\n          </div>\n        </div>\n        <ir-dialog\n          onOpenChange={e => {\n            if (!e.detail) {\n              this.currentDialogStatus = null;\n            }\n          }}\n          style={this.currentDialogStatus === 'events-log' && { '--ir-dialog-max-width': '400px' }}\n          ref={el => (this.dialogRef = el)}\n        >\n          {this.renderDialogBody()}\n        </ir-dialog>\n      </div>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n.backdrop {\r\n  opacity: 0;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  position: fixed;\r\n  inset: 0;\r\n  z-index: 99999998;\r\n}\r\n.backdrop[data-state='opened'] {\r\n  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.backdrop[data-state='closed'] {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.modal-container {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  position: fixed;\r\n  z-index: 99999999;\r\n  overflow-y: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  background: white;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  min-height: fit-content;\r\n  height: fit-content;\r\n  max-width: var(--ir-dialog-max-width, 40rem);\r\n  max-height: 85vh;\r\n  border-radius: 8px;\r\n  padding: 0;\r\n  animation: contentShow 300ms cubic-bezier(0.16, 1, 0.3, 1);\r\n}\r\n\r\n.modal-footer ::slotted(*) {\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: end;\r\n  gap: 8px;\r\n  --ir-btn-width: inherit;\r\n}\r\n.modal-footer {\r\n  --ir-btn-width: 100%;\r\n}\r\n.modal-title ::slotted(*) {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #101828;\r\n  margin-bottom: 8px;\r\n}\r\n.modal-body ::slotted(*) {\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #475467;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n@keyframes overlayShow {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes contentShow {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate(-50%, -48%) scale(0.96);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n}\r\n.dialog-close-button {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n}\r\n/* md */\r\n","import { Component, Host, h, Element, Method, Listen, State, Event, EventEmitter, Prop, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-dialog',\r\n  styleUrl: 'ir-dialog.css',\r\n  shadow: true,\r\n})\r\nexport class IrDialog {\r\n  @Prop() open: boolean = false;\r\n  @Element() el: HTMLElement;\r\n  private firstFocusableElement: HTMLElement;\r\n  private lastFocusableElement: HTMLElement;\r\n\r\n  @State() isOpen = false;\r\n  @Event() openChange: EventEmitter<boolean>;\r\n  componentWillLoad() {\r\n    if (this.open) {\r\n      this.openModal();\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    this.prepareFocusTrap();\r\n  }\r\n\r\n  @Method()\r\n  async openModal() {\r\n    this.isOpen = true;\r\n    document.body.style.overflow = 'hidden';\r\n    setTimeout(() => {\r\n      this.prepareFocusTrap();\r\n    }, 10);\r\n    this.openChange.emit(this.isOpen);\r\n  }\r\n\r\n  @Method()\r\n  async closeModal() {\r\n    console.log('close');\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n    document.body.style.overflow = 'visible';\r\n    this.isOpen = false;\r\n    this.openChange.emit(this.isOpen);\r\n  }\r\n\r\n  @Watch('open')\r\n  handleOpenChange() {\r\n    if (this.open) {\r\n      this.openModal();\r\n    } else {\r\n      this.closeModal();\r\n    }\r\n  }\r\n\r\n  prepareFocusTrap() {\r\n    const focusableElements = 'button,ir-dropdown ,[href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\r\n    const focusableContent: NodeListOf<HTMLElement> = this.el.shadowRoot.querySelectorAll(focusableElements);\r\n    // console.log(focusableContent);\r\n    if (focusableContent.length === 0) return;\r\n    this.firstFocusableElement = focusableContent[0];\r\n    this.lastFocusableElement = focusableContent[focusableContent.length - 1];\r\n    this.firstFocusableElement.focus();\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  handleKeyDown(ev: KeyboardEvent) {\r\n    if (!this.isOpen) {\r\n      return;\r\n    }\r\n\r\n    let isTabPressed = ev.key === 'Tab';\r\n    if (ev.key === 'Escape' && this.isOpen) {\r\n      this.closeModal();\r\n    }\r\n    if (!isTabPressed) {\r\n      return;\r\n    }\r\n\r\n    // If focus is about to leave the last focusable element, redirect it to the first.\r\n    if (!ev.shiftKey && document.activeElement === this.lastFocusableElement) {\r\n      this.firstFocusableElement.focus();\r\n      ev.preventDefault();\r\n    }\r\n\r\n    // If focus is about to leave the first focusable element, redirect it to the last.\r\n    if (ev.shiftKey && document.activeElement === this.firstFocusableElement) {\r\n      this.lastFocusableElement.focus();\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.body.style.overflow = 'visible';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"backdrop\" data-state={this.isOpen ? 'opened' : 'closed'} onClick={() => this.closeModal()}></div>\r\n        {this.isOpen && (\r\n          <div class=\"modal-container\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"dialog1Title\" aria-describedby=\"dialog1Desc\">\r\n            <ir-icon id=\"close\" class=\"dialog-close-button\" onIconClickHandler={() => this.closeModal()}>\r\n              <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={18} width={18}>\r\n                <path\r\n                  fill=\"#104064\"\r\n                  class=\"currentColor\"\r\n                  d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                />\r\n              </svg>\r\n            </ir-icon>\r\n            <div class={'modal-title'} id=\"dialog1Title\">\r\n              <slot name=\"modal-title\"></slot>\r\n            </div>\r\n            <div class=\"modal-body\" id=\"dialog1Desc\">\r\n              <slot name=\"modal-body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <slot name=\"modal-footer\"></slot>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n\r\n.beta {\r\n  background: var(--red);\r\n  color: white;\r\n  padding: 0.2rem 0.3rem;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  margin: 0;\r\n}\r\n.event-row {\r\n  padding-bottom: 0.5rem;\r\n}\r\n.list-title {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  width: fit-content;\r\n}\r\n.list-item {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  width: fit-content;\r\n}\r\n.list-item.green {\r\n  color: #629a4c;\r\n  font-weight: 600;\r\n}\r\n.list-item.red {\r\n  color: #ff4961;\r\n  font-weight: 600;\r\n}\r\n.dates-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.875rem;\r\n}\r\n","import { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { Component, Fragment, Prop, State, h } from '@stencil/core';\r\nimport { BookingService, ExposedBookingEvent } from '@/services/booking.service';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'ir-events-log',\r\n  styleUrl: 'ir-events-log.css',\r\n  scoped: true,\r\n})\r\nexport class IrEventsLog {\r\n  @Prop() bookingNumber: string;\r\n\r\n  @State() bookingEvents: ExposedBookingEvent[];\r\n\r\n  private bookingService = new BookingService();\r\n\r\n  componentWillLoad() {\r\n    this.init();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.bookingEvents = await this.bookingService.getExposedBookingEvents(this.bookingNumber);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"p-1\">\r\n        <div class=\"d-flex  align-items-center\" style={{ gap: '0.5rem' }}>\r\n          <h3 class=\" text-left p-0 m-0  dialog-title \">{locales.entries.Lcz_EventsLog}</h3>\r\n          {/* <span class=\"m-0 beta\">Beta</span> */}\r\n        </div>\r\n\r\n        {isRequestPending('/Get_Exposed_Booking_Events') ? (\r\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\r\n            <ir-spinner></ir-spinner>\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n            <table class=\" dialog-container-height\">\r\n              <thead style={{ opacity: '0' }}>\r\n                <tr>\r\n                  <th>date</th>\r\n                  <th>user</th>\r\n                  <th>status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.bookingEvents?.map(e => (\r\n                  <tr key={e.id} class=\"pb-1\">\r\n                    <td class=\"event-row dates-row\">\r\n                      <span>{e.date}</span>\r\n                      <span>\r\n                        {String(e.hour).padStart(2, '0')}:{String(e.minute).padStart(2, '0')}:{String(e.second).padStart(2, '0')}\r\n                      </span>\r\n                    </td>\r\n                    <td class=\"pl-3 event-row \">{e.type}</td>\r\n                    <td class=\"pl-1 event-row \">{e.user}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n.extra-service-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 0.5rem;\r\n}\r\n.extra-service-container * {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n.extra-service-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.extra-service-conditional-date {\r\n  margin-top: 0.5rem;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\nimport { ExtraService } from '@/models/booking.dto';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\r\nimport locales from '@/stores/locales.store';\r\nimport moment from 'moment';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\n\r\n@Component({\r\n  tag: 'ir-extra-service',\r\n  styleUrl: 'ir-extra-service.css',\r\n  scoped: true,\r\n})\r\nexport class IrExtraService {\r\n  @Prop() service: ExtraService;\r\n  @Prop() bookingNumber: string;\r\n  @Prop() currencySymbol: string;\r\n\r\n  @Event() editExtraService: EventEmitter<ExtraService>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n\r\n  private irModalRef: HTMLIrModalElement;\r\n  private bookingService = new BookingService();\r\n\r\n  private async deleteService() {\r\n    try {\r\n      await this.bookingService.doBookingExtraService({\r\n        service: this.service,\r\n        is_remove: true,\r\n        booking_nbr: this.bookingNumber,\r\n      });\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"p-1\">\r\n          <div class={'extra-service-container'}>\r\n            <p class=\"extra-service-description\">{this.service.description}</p>\r\n            <div class=\"extra-service-actions\">\r\n              {this.service.price && <p class=\"extra-service-price p-0 m-0 font-weight-bold\">{formatAmount(this.currencySymbol, this.service.price)}</p>}\r\n              <ir-button\r\n                id={`serviceEdit-${this.service.booking_system_id}`}\r\n                class=\"extra-service-edit-btn m-0 p-0\"\r\n                variant=\"icon\"\r\n                icon_name=\"edit\"\r\n                style={colorVariants.secondary}\r\n                onClickHandler={() => this.editExtraService.emit(this.service)}\r\n              ></ir-button>\r\n              <ir-button\r\n                class=\"extra-service-delete-btn m-0 p-0\"\r\n                variant=\"icon\"\r\n                onClickHandler={() => this.irModalRef.openModal()}\r\n                id={`roomDelete-${this.service.booking_system_id}`}\r\n                icon_name=\"trash\"\r\n                style={colorVariants.danger}\r\n              ></ir-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"extra-service-conditional-date\">\r\n            {this.service.start_date && this.service.end_date ? (\r\n              <ir-date-view class=\"extra-service-date-view mr-1\" from_date={this.service.start_date} to_date={this.service.end_date} showDateDifference={false}></ir-date-view>\r\n            ) : (\r\n              this.service.start_date && <p class=\"extra-service-date-view\">{moment(new Date(this.service.start_date)).format('MMM DD, YYYY')}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <ir-modal\r\n          autoClose={false}\r\n          ref={el => (this.irModalRef = el)}\r\n          isLoading={isRequestPending('/Do_Booking_Extra_Service')}\r\n          onConfirmModal={this.deleteService.bind(this)}\r\n          iconAvailable={true}\r\n          icon=\"ft-alert-triangle danger h1\"\r\n          leftBtnText={locales.entries.Lcz_Cancel}\r\n          rightBtnText={locales.entries.Lcz_Delete}\r\n          leftBtnColor=\"secondary\"\r\n          rightBtnColor=\"danger\"\r\n          modalTitle={locales.entries.Lcz_Confirmation}\r\n          modalBody={`${locales.entries['Lcz_AreYouSureDoYouWantToRemove ']} ${locales.entries.Lcz_ThisService} ${locales.entries.Lcz_FromThisBooking}`}\r\n        ></ir-modal>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { z } from 'zod';\nimport { IAllowedOptions, ICurrency, IPickupCurrency } from './calendarData';\nimport { TSourceOption } from './igl-book-property';\nimport { ICountry } from './IBooking';\nimport moment from 'moment';\nimport { IHouseKeepers } from './housekeeping';\n\ninterface IDType {\n  code: string;\n  description: string;\n}\n\ninterface IDInfo {\n  type: IDType;\n  number: string;\n}\n\nexport interface SharedPerson {\n  address: null;\n  alternative_email: null;\n  cci: null;\n  city: null;\n  country: ICountry;\n  country_id: string;\n  country_phone_prefix: null;\n  dob: string;\n  email: null;\n  first_name: string;\n  full_name: string;\n  id: number;\n  id_info: IDInfo;\n  is_main?: boolean;\n  last_name: string;\n  mobile: null;\n  nbr_confirmed_bookings: number;\n  notes: null;\n  password: null;\n  subscribe_to_news_letter: null;\n}\n// export const ZIdInfo = z.object({\n//   type: z.object({\n//     code: z.string().min(3),\n//     description: z.string(),\n//   }),\n//   number: z.string().min(2),\n// });\n// export const ZSharedPerson = z.object({\n//   id: z.number(),\n//   full_name: z.string().min(2),\n//   country_id: z.coerce.number().min(0),\n//   dob: z.coerce.date().transform(date => moment(date).format('YYYY-MM-DD')),\n//   id_info: ZIdInfo,\n// });\n\n/**\n * ZIdInfo schema:\n * - `type.code`: Validates a non-empty string must be at least 3 chars.\n *   If empty string or not provided, validation is skipped.\n * - `type.description`: Same pattern for description (but no min length).\n * - `number`: Validates if non-empty string it should be at least 2 chars.\n */\nexport const ZIdInfo = z.object({\n  type: z.object({\n    code: z\n      .union([\n        // If provided and non-empty, must have at least 3 chars\n        z.string().min(3),\n        // or it can be an empty string\n        z.literal(''),\n      ])\n      .optional(), // or undefined\n    description: z\n      .union([\n        // If provided and non-empty, no special min\n        z.string(),\n        // or it can be empty string\n        z.literal(''),\n      ])\n      .optional(),\n  }),\n  number: z\n    .union([\n      // If provided and non-empty, must have at least 2 chars\n      z.string().min(2),\n      // or it can be empty string\n      z.literal(''),\n    ])\n    .optional(),\n});\n\n/**\n * ZSharedPerson schema:\n * - `id`: Optional numeric field.\n * - `full_name`: If provided and non-empty, must be at least 2 chars.\n * - `country_id`: If provided, coerced to number, must be >= 0.\n * - `dob`: If provided, coerced to Date and formatted. Otherwise skipped.\n * - `id_info`: The nested object above; can also be omitted entirely.\n */\nexport const ZSharedPerson = z.object({\n  id: z.number().optional(),\n  // full_name: z\n  //   .union([\n  //     z.string().min(2), // if provided and non-empty, must have min length 2\n  //     z.literal(''), // or it can be empty string\n  //   ])\n  //   .optional(),\n  first_name: z\n    .union([\n      z.string().min(2), // if provided and non-empty, must have min length 2\n      z.literal(''), // or it can be empty string\n    ])\n    .optional(),\n  last_name: z\n    .union([\n      z.string().min(2), // if provided and non-empty, must have min length 2\n      z.literal(''), // or it can be empty string\n    ])\n    .optional(),\n  country_id: z.coerce\n    .number()\n    .min(0) // if provided, must be >= 0\n    .optional(),\n  dob: z\n    .string()\n    .nullable()\n    .optional()\n    .refine(value => value === undefined || moment(value, 'DD/MM/YYYY', true).isValid() || value === '' || value === null, 'Invalid date format')\n    .transform(value => {\n      if (value === undefined || value === '' || value === null) return null;\n      const isDDMMYYYY = moment(value, 'DD/MM/YYYY', true).isValid();\n      return isDDMMYYYY ? null : moment(value, 'DD/MM/YYYY').format('YYYY-MM-DD');\n    }),\n  id_info: ZIdInfo.optional(),\n});\n\nexport const ZSharedPersons = z.array(ZSharedPerson);\n\nexport interface HandleExposedRoomGuestsRequest {\n  booking_nbr: string;\n  identifier: string;\n  guests: SharedPerson[];\n}\nexport interface OtaGuarantee {\n  card_number: string;\n  card_type: string;\n  cardholder_name: string;\n  cvv: string;\n  expiration_date: string;\n  is_virtual: boolean;\n  meta: Meta;\n  token: string;\n}\n\ninterface Meta {\n  virtual_card_currency_code: string;\n  virtual_card_current_balance: string;\n  virtual_card_decimal_places: string;\n  virtual_card_effective_date: string;\n  virtual_card_expiration_date: string;\n}\nexport interface OtaService {\n  name: string;\n  nights: number;\n  persons: number;\n  price_mode: string;\n  price_per_unit: number;\n  total_price: number;\n}\nexport interface Booking {\n  agent: {\n    code: string;\n    id: number;\n    name: string;\n    verification_mode: null;\n  } | null;\n  ota_services: OtaService[];\n  arrival: Arrival;\n  allowed_actions: IAllowedActions[];\n  system_id: number;\n  booked_on: DateTime;\n  booking_nbr: string;\n  currency: Currency;\n  extra_services: ExtraService[] | null;\n  from_date: string;\n  guest: Guest;\n  extras: Extras[] | null;\n  occupancy: Occupancy;\n  origin: Origin;\n  ota_guarante: OtaGuarantee;\n  property: Property;\n  remark: string;\n  ota_notes: IOtaNotes[];\n  rooms: Room[];\n  source: Source;\n  status: Status;\n  to_date: string;\n  total: number;\n  is_editable: boolean;\n  format: IFormat;\n  channel_booking_nbr: string | null;\n  is_direct: boolean;\n  financial: IFinancials;\n  pickup_info: IBookingPickupInfo | null;\n  cost: number | null;\n  is_pms_enabled: boolean;\n  promo_key: string | null;\n  is_in_loyalty_mode: boolean;\n}\n\nexport const ExtraServiceSchema = z.object({\n  booking_system_id: z.number().optional(),\n  cost: z.coerce.number().nullable(),\n  currency_id: z.number().min(1),\n  description: z.string().min(1),\n  end_date: z.string().nullable(),\n  price: z.coerce.number(),\n  start_date: z.string().nullable(),\n  system_id: z.number().optional(),\n});\n\nexport type ExtraService = z.infer<typeof ExtraServiceSchema>;\nexport interface Extras {\n  key: string;\n  value: any;\n}\nexport interface IOtaNotes {\n  statement: string;\n}\nexport interface IBookingPickupInfo {\n  currency: IPickupCurrency;\n  date: string;\n  details: string;\n  hour: number;\n  minute: number;\n  nbr_of_units: number;\n  selected_option: IAllowedOptions;\n  total: number;\n}\nexport interface IAllowedActions {\n  code: string;\n  description: string;\n}\nexport interface IFinancials {\n  due_amount: number;\n  due_dates: IDueDate[];\n  payments: IPayment[] | null;\n  total_amount: number;\n  gross_total: number;\n  gross_cost: number;\n  invoice_nbr: string;\n}\nexport interface IPayment {\n  id: number | null;\n  date: string;\n  amount: number;\n  currency: ICurrency;\n  designation: string;\n  reference: string;\n}\nexport interface IDueDate {\n  amount: number;\n  currencysymbol: string;\n  date: string;\n  description: string;\n  room: string;\n}\nexport interface IFormat {\n  from_date: string;\n  to_date: string;\n}\nexport interface Arrival {\n  code: string;\n  description: string;\n}\n\nexport interface DateTime {\n  date: string;\n  hour: number;\n  minute: number;\n}\n\nexport interface Currency {\n  code: string;\n  id: number;\n  symbol: string;\n}\n\nexport interface Guest {\n  address: string | null;\n  city: string | null;\n  country_id: number | null;\n  dob: string | null;\n  email: string | null;\n  first_name: string;\n  id: number;\n  last_name: string | null;\n  mobile: string | null;\n  country_phone_prefix: string | null;\n  subscribe_to_news_letter: boolean | null;\n  cci?: ICCI | null;\n  alternative_email?: string;\n  nbr_confirmed_bookings: number;\n  notes: string;\n  mobile_without_prefix: string;\n}\nexport interface ICCI {\n  nbr: string | number;\n  holder_name: string | number;\n  expiry_month: string | number;\n  expiry_year: string | number;\n  cvc?: string | null;\n}\nexport interface Occupancy {\n  adult_nbr: number;\n  children_nbr: number;\n  infant_nbr: number | null;\n}\nexport interface DoReservationProps {\n  assign_units: boolean;\n  check_in: boolean;\n  is_pms: boolean;\n  is_direct: boolean;\n  is_in_loyalty_mode: boolean;\n  promo_key: string | null;\n  extras: any; // Assuming extras can have any structure, replace with a specific type if known\n  booking: {\n    from_date: string; // Format 'YYYY-MM-DD'\n    to_date: string; // Format 'YYYY-MM-DD'\n    remark: string | null;\n    booking_nbr: string;\n    property: {\n      id: string | number;\n    };\n    booked_on: {\n      date: string; // Format 'YYYY-MM-DD'\n      hour: number;\n      minute: number;\n    };\n    source: TSourceOption;\n    rooms: Room[]; // Assuming rooms are defined in the imported `Room` type\n    currency: string;\n    arrival: {\n      code: string;\n    };\n    guest: {\n      email: string | null;\n      first_name: string;\n      last_name: string;\n      country_id: string | number | null;\n      city: string | null;\n      mobile: string;\n      phone_prefix: string | null;\n      address: string;\n      dob: string | null;\n      subscribe_to_news_letter: boolean;\n      cci: {\n        nbr: string;\n        holder_name: string;\n        expiry_month: string;\n        expiry_year: string;\n      } | null;\n    };\n  };\n  pickup_info: any | null; // Assuming it can be any structure, replace if specific type is available\n}\nexport interface Origin {\n  Icon: string;\n  Label: string;\n}\n\nexport interface Property {\n  calendar_legends: null;\n  currency: null;\n  id: number;\n  name: string;\n  roomtypes: null;\n}\nexport type RoomInOut = { code: '001' | '002' | '000'; description: string };\nexport interface Room {\n  days: Day[];\n  from_date: string;\n  guest: Guest;\n  occupancy_default: number;\n  notes: string | null;\n  occupancy: Occupancy;\n  physicalroom: null;\n  in_out: RoomInOut | null;\n  sharing_persons: SharedPerson[] | null;\n  bed_preference: number | null;\n  rateplan: RatePlan;\n  roomtype: RoomType;\n  to_date: string;\n  total: number;\n  smoking_option: string;\n  identifier: string;\n  unit: string | number | IUnit | null;\n  ota_taxes: IOtaTax[];\n  ota_meta: OtaMeta;\n  cost: number | null;\n  gross_cost: number;\n  gross_total: number;\n  guarantee: number;\n  gross_guarantee: number;\n}\ninterface OtaMeta {\n  bed_preferences: string | null;\n  meal_plan: string | null;\n  parent_rate_plan_id: string | null;\n  policies: string | null;\n  smoking_preferences: string | null;\n}\nexport interface IOtaTax {\n  amount: number;\n  currency: IOtaTaxCurrency;\n  is_exlusive: boolean;\n  name: string;\n}\nexport interface IOtaTaxCurrency {\n  code: string;\n  id: number;\n  symbol: string;\n}\nexport interface IUnit {\n  calendar_cell: null;\n  id: 2;\n  name: '402';\n}\nexport interface Day {\n  amount: number;\n  date: string;\n  cost: number | null;\n}\n\nexport interface RatePlan {\n  cancelation: string | null;\n  guarantee: null;\n  id: number;\n  name: string;\n  rate_restrictions: null;\n  variations: null;\n  selected_variation: IVariations;\n  is_non_refundable: boolean;\n  custom_text: string | null;\n  is_active: boolean;\n  short_name: string;\n}\nexport interface IVariations {\n  adult_child_offering: string;\n  adult_nbr: number;\n  amount: number | null;\n  child_nbr: number;\n}\nexport interface RoomType {\n  availabilities: null;\n  id: number;\n  inventory: number;\n  name: string;\n  physicalrooms: PhysicalRoom[];\n  rate: number;\n  rateplans: null;\n  is_active: boolean;\n}\nexport type RoomHkStatus = '001' | '002' | '003';\nexport interface PhysicalRoom {\n  calendar_cell: null;\n  housekeeper: IHouseKeepers;\n  id: number;\n  is_active: boolean;\n  name: string;\n  hk_status: RoomHkStatus;\n}\n\nexport interface Source {\n  code: string | null;\n  description: string;\n  tag: string | null;\n}\n\nexport interface Status {\n  code: string;\n  description: string;\n}\n\nexport interface IPmsLog {\n  is_acknowledged: boolean;\n  is_sent: boolean;\n  sent_date: string;\n  sent_hour: number;\n  sent_minute: number;\n}\n",":host {\n  display: block;\n  --ir-input-border-color: #cacfe7;\n}\n\n:host .input-group-text {\n  border-color: var(--ir-input-border-color);\n}\n/* .hidden-date-picker.hidden-dates .date-range-input {\n  opacity: 0;\n} */\n.currency-ph {\n  padding: 0;\n  margin: 0;\n  color: #3b4781;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 0 0 0.25rem;\n  border-top: 1px solid var(--ir-input-border-color);\n  border-bottom: 1px solid var(--ir-input-border-color);\n  border-left: 1px solid transparent;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\n}\n\n.service-description-input {\n  height: 70px !important;\n}\n\n.service-description .input-group-prepend {\n  background-color: #f4f5fa;\n  border: 1px solid var(--ir-input-border-color);\n  border-top-left-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem;\n}\n.service-date-container {\n  padding: 0;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  justify-content: center;\n}\n.service-date-container .btn-container {\n  position: absolute;\n  right: 5px;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n.service-description .input-group-text {\n  height: fit-content;\n  border: 0;\n  padding-top: 0.75rem !important;\n}\n\n.price-input-group:focus-within .currency-ph,\n.cost-input-group:focus-within .currency-ph {\n  border-top: 1px solid #1e9ff2;\n  border-bottom: 1px solid #1e9ff2;\n  border-left: 1px solid #1e9ff2;\n}\n.currency-ph[data-state='error'] {\n  border-color: var(--red, #ff4961);\n}\n.price-input:focus {\n  border-right-width: 1px !important;\n}\n\n.is-invalid {\n  background-image: none !important;\n}\n.price-input,\n.cost-input {\n  border-left: 0;\n}\n\n.row-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n@media (min-width: 640px) {\n  .row-group {\n    flex-direction: row;\n    align-items: center;\n    gap: 0;\n  }\n  .cost-label {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    border-left: 0;\n  }\n  .until-prepend,\n  .cost-input-placeholder {\n    border-top-left-radius: 0 !important;\n    border-bottom-left-radius: 0 !important;\n  }\n  .date-from,\n  .price-input {\n    border-right-width: 0 !important;\n    border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 0 !important;\n  }\n}\n\n.date-focused {\n  border-color: #1e9ff2;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  height: 100%;\n  gap: 1rem;\n}\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1;\n}\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Booking, ExtraService, ExtraServiceSchema } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { ZodError } from 'zod';\nimport { _formatDate } from '../../functions';\n\n@Component({\n  tag: 'ir-extra-service-config',\n  styleUrls: ['ir-extra-service-config.css', '../../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrExtraServiceConfig {\n  @Prop() booking: Pick<Booking, 'from_date' | 'to_date' | 'currency' | 'booking_nbr'>;\n  @Prop() service: ExtraService;\n\n  @State() s_service: ExtraService;\n  @State() error: boolean;\n  @State() fromDateClicked: boolean;\n  @State() toDateClicked: boolean;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  // private d1: HTMLDivElement;\n  // private d1_0: HTMLDivElement;\n  // private d2_0: HTMLDivElement;\n  // private d2: HTMLInputElement;\n\n  componentWillLoad() {\n    if (this.service) {\n      this.s_service = { ...this.service };\n    }\n  }\n\n  private async saveAmenity() {\n    try {\n      ExtraServiceSchema.parse(this.s_service);\n      await this.bookingService.doBookingExtraService({\n        service: this.s_service,\n        booking_nbr: this.booking.booking_nbr,\n        is_remove: false,\n      });\n      this.resetBookingEvt.emit(null);\n      this.closeModal.emit(null);\n    } catch (error) {\n      if (error instanceof ZodError) {\n        this.error = true;\n      }\n      console.error(error);\n    }\n  }\n  private updateService(params: Partial<ExtraService>) {\n    let prevService: ExtraService = this.s_service;\n    if (!prevService) {\n      prevService = {\n        cost: null,\n        description: null,\n        end_date: null,\n        start_date: null,\n        price: null,\n        currency_id: this.booking.currency.id,\n      };\n    }\n    this.s_service = { ...prevService, ...params };\n  }\n  private validatePrice(): boolean {\n    if (this.s_service?.price === undefined || this.s_service?.price?.toString() === '') {\n      return false;\n    }\n    const priceSchema = ExtraServiceSchema.pick({ price: true });\n    const result = priceSchema.safeParse({ price: this.s_service?.price });\n    return result.success;\n  }\n  render() {\n    return (\n      <form\n        class={'sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.saveAmenity();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_ExtraServices} displayContext=\"sidebar\"></ir-title>\n        <section class={'px-1 sheet-body'}>\n          {/* Description */}\n          <fieldset class=\"input-group mb-1 service-description\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">{locales.entries.Lcz_Description}</span>\n            </div>\n            <textarea\n              value={this.s_service?.description}\n              class={`form-control service-description-input ${this.error && !this.s_service?.description ? 'is-invalid' : ''}`}\n              style={{ height: '7rem' }}\n              maxLength={250}\n              onChange={e => this.updateService({ description: (e.target as HTMLTextAreaElement).value })}\n              aria-label=\"Amenity description\"\n            ></textarea>\n          </fieldset>\n          {/* Dates */}\n          <div class={'row-group mb-1'}>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">\n                  {locales.entries.Lcz_DatesOn}\n                </span>\n              </div>\n              <div\n                // ref={el => (this.d1_0 = el)}\n                class=\"form-control p-0 m-0 d-flex align-items-center justify-content-center date-from\"\n              >\n                <div class=\"service-date-container\">\n                  <ir-date-picker\n                    // onDatePickerFocus={() => {\n                    //   this.d1?.classList.add('date-focused');\n                    //   this.d1_0?.classList.add('date-focused');\n                    // }}\n                    // onDatePickerBlur={() => {\n                    //   this.d1?.classList.remove('date-focused');\n                    //   this.d1_0?.classList.remove('date-focused');\n                    // }}\n                    // customPicker\n                    emitEmptyDate\n                    date={this.s_service?.start_date}\n                    minDate={this.booking.from_date}\n                    maxDate={this.booking.to_date}\n                    onDateChanged={e => this.updateService({ start_date: e.detail.start?.format('YYYY-MM-DD') })}\n                  >\n                    <input\n                      // ref={el => (this.d1 = el)}\n                      type=\"text\"\n                      slot=\"trigger\"\n                      value={this.s_service?.start_date ? _formatDate(this.s_service.start_date) : null}\n                      style={{ borderLeftWidth: '0', borderRightWidth: '0', width: '100%', borderRadius: '0' }}\n                      class=\"text-center w-100 form-control input-sm\"\n                    ></input>\n                  </ir-date-picker>\n                  {this.s_service?.start_date && (\n                    <div class=\"btn-container\">\n                      <ir-button\n                        title=\"clear\"\n                        id=\"close\"\n                        variant=\"icon\"\n                        style={{ '--icon-size': '0.875rem' }}\n                        icon_name=\"xmark-fill\"\n                        class=\"ml-2\"\n                        onClickHandler={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          this.updateService({ start_date: null });\n                        }}\n                      ></ir-button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div class=\"input-group\">\n              <div class=\"input-group-prepend \">\n                <span class=\"input-group-text until-prepend\" id=\"basic-addon1\">\n                  {locales.entries.Lcz_TillAndIncluding}\n                </span>\n              </div>\n              <div\n                // ref={el => (this.d2_0 = el)}\n                class=\"form-control p-0 m-0 d-flex align-items-center justify-content-center\"\n              >\n                <div class=\"service-date-container\">\n                  <ir-date-picker\n                    // onDatePickerFocus={() => {\n                    //   this.d2?.classList.add('date-focused');\n                    //   this.d2_0?.classList.add('date-focused');\n                    // }}\n                    // onDatePickerBlur={() => {\n                    //   this.d2?.classList.remove('date-focused');\n                    //   this.d2_0?.classList.remove('date-focused');\n                    // }}\n                    emitEmptyDate\n                    date={this.s_service?.end_date}\n                    minDate={this.s_service?.start_date ?? this.booking.from_date}\n                    maxDate={this.booking.to_date}\n                    onDateChanged={e => {\n                      e.stopImmediatePropagation();\n                      e.stopPropagation();\n                      this.updateService({ end_date: e.detail.start?.format('YYYY-MM-DD') });\n                    }}\n                  >\n                    <input\n                      // ref={el => (this.d2 = el)}\n                      slot=\"trigger\"\n                      value={this.s_service?.end_date ? _formatDate(this.s_service.end_date) : null}\n                      style={{ borderLeftWidth: '0', borderRightWidth: '0', width: '100%' }}\n                      class=\"text-center form-control input-sm\"\n                    ></input>\n                  </ir-date-picker>\n\n                  {this.s_service?.end_date && (\n                    <div class=\"btn-container\">\n                      <ir-button\n                        title=\"clear\"\n                        id=\"close\"\n                        variant=\"icon\"\n                        style={{ '--icon-size': '0.875rem' }}\n                        icon_name=\"xmark-fill\"\n                        class=\"ml-2\"\n                        onClickHandler={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          this.updateService({ end_date: null });\n                        }}\n                      ></ir-button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Prices and cost */}\n          <div class={'row-group'}>\n            <ir-price-input\n              label=\"Price\"\n              currency={this.booking.currency.symbol}\n              class=\"ir-br-input-none\"\n              value={this.s_service?.price?.toString()}\n              zod={ExtraServiceSchema.pick({ price: true })}\n              aria-label={locales.entries.Lcz_Price}\n              wrapKey=\"price\"\n              aria-describedby=\"service price\"\n              autoValidate={false}\n              data-state={this.error && !this.validatePrice() ? 'error' : ''}\n              onTextChange={e => this.updateService({ price: parseFloat(e.detail) })}\n            ></ir-price-input>\n            <ir-price-input\n              autoValidate={false}\n              label={locales.entries.Lcz_Cost}\n              labelStyle=\"cost-label\"\n              currency={this.booking.currency.symbol}\n              // class=\"ir-bl-lbl-none ir-bl-none\"\n              value={this.s_service?.cost?.toString()}\n              zod={ExtraServiceSchema.pick({ cost: true })}\n              onTextChange={e => this.updateService({ cost: parseFloat(e.detail) })}\n              wrapKey=\"cost\"\n              aria-label=\"Cost\"\n              aria-describedby=\"service cost\"\n            ></ir-price-input>\n          </div>\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button\n            onClick={() => this.closeModal.emit(null)}\n            btn_styles=\"justify-content-center\"\n            class={`flex-fill`}\n            icon=\"\"\n            text={locales.entries.Lcz_Cancel}\n            btn_color=\"secondary\"\n          ></ir-button>\n\n          <ir-button\n            btn_styles=\"justify-content-center align-items-center\"\n            class={'flex-fill'}\n            icon=\"\"\n            btn_type=\"submit\"\n            isLoading={isRequestPending('/Do_Booking_Extra_Service')}\n            text={locales.entries.Lcz_Save}\n            btn_color=\"primary\"\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Fragment, Host, Prop, h } from '@stencil/core';\r\nimport { Booking } from '@/models/booking.dto';\r\n@Component({\r\n  tag: 'ir-extra-services',\r\n  styleUrl: 'ir-extra-services.css',\r\n  scoped: true,\r\n})\r\nexport class IrExtraServices {\r\n  @Prop() booking: Pick<Booking, 'currency' | 'extra_services' | 'booking_nbr'>;\r\n\r\n  render() {\r\n    return (\r\n      <Host class={'card p-0 '}>\r\n        {this.booking.extra_services?.map((service, index) => (\r\n          <Fragment>\r\n            <ir-extra-service\r\n              bookingNumber={this.booking.booking_nbr}\r\n              currencySymbol={this.booking.currency.symbol}\r\n              key={service.booking_system_id}\r\n              service={service}\r\n            ></ir-extra-service>\r\n            {index !== this.booking.extra_services.length - 1 && <hr class=\"mr-2 ml-2 my-0 p-0\" />}\r\n          </Fragment>\r\n        ))}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",".input-group-text {\n  min-width: 10rem;\n  text-align: left;\n}\n.mobilePrefixSelect {\n  border-right-width: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.mobilePrefixInput {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n/* custome checkbox */\n.check-container {\n  position: relative;\n  /* padding-left: 30px; */\n  cursor: pointer;\n  font-size: 14px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  display: flex;\n  align-items: center;\n}\n.check-container input {\n  position: relative;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n.check-container .checkmark {\n  position: relative;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  border: 1px solid #cacfe7;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n}\n.check-container input:checked ~ .checkmark {\n  background-color: #1e9ff2;\n  border-color: #1e9ff2;\n}\n.checkmark:after {\n  content: '';\n  position: absolute;\n  display: none;\n}\n.check-container input:checked ~ .checkmark:after {\n  display: block;\n}\n.check-label {\n  margin-left: 10px !important;\n}\n.check-container .checkmark:after {\n  left: 6px;\n  top: 3px;\n  width: 6px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n.ir-card-header {\n  width: 100%;\n  border-bottom: 1px solid #e4e5ec;\n}\n.close-icon {\n  margin: 0;\n}\n.border-theme {\n  border: 1px solid #cacfe7;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  height: 100%;\n  gap: 1rem;\n}\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1;\n}\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { Component, State, h, Prop, EventEmitter, Event, Watch } from '@stencil/core';\nimport { Guest } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/components';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport Token from '@/models/Token';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n\n@Component({\n  tag: 'ir-guest-info',\n  styleUrls: ['ir-guest-info.css', '../../common/sheet.css'],\n  scoped: true,\n})\nexport class GuestInfo {\n  @Prop() language: string;\n  @Prop() headerShown: boolean;\n  @Prop() email: string;\n  @Prop() booking_nbr: string;\n  @Prop() ticket: string;\n  @Prop() isInSideBar: boolean;\n\n  @State() countries: ICountry[];\n  // @State() submit: boolean = false;\n  @State() guest: Guest | null = null;\n  @State() isLoading: boolean = false;\n  @State() autoValidate = false;\n\n  @Event() closeSideBar: EventEmitter<null>;\n  @Event({ bubbles: true }) resetBookingEvt: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token: Token = new Token();\n\n  async componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n    if (!!this.token.getToken()) this.init();\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  async init() {\n    try {\n      console.log('first');\n      this.isLoading = true;\n      const [guest, countries, fetchedLocales] = await Promise.all([\n        this.bookingService.fetchGuest(this.email),\n        this.bookingService.getCountries(this.language),\n        !locales || !locales.entries || Object.keys(locales.entries).length === 0 ? this.roomService.fetchLanguage(this.language) : Promise.resolve(null), // Skip fetching if locales are already set\n      ]);\n\n      // Set the fetched locales if they were fetched\n      if (fetchedLocales) {\n        locales.entries = fetchedLocales.entries;\n        locales.direction = fetchedLocales.direction;\n      }\n\n      // Assign the fetched guest and countries\n      this.countries = countries;\n      this.guest = { ...guest, mobile: guest.mobile_without_prefix };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private handleInputChange(params: Partial<Guest>) {\n    this.guest = { ...this.guest, ...params };\n  }\n\n  private async editGuest() {\n    try {\n      this.autoValidate = true;\n\n      await this.bookingService.editExposedGuest(this.guest, this.booking_nbr ?? null);\n      this.closeSideBar.emit(null);\n      this.resetBookingEvt.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading && this.isInSideBar) {\n      <div class={'loading-container'}>\n        <ir-spinner></ir-spinner>\n      </div>;\n    }\n    if (this.isLoading) {\n      return null;\n    }\n    return (\n      <form\n        class={'p-0 sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.editGuest();\n        }}\n      >\n        {this.headerShown && <ir-title class=\"px-1 sheet-header\" displayContext=\"sidebar\" label={locales.entries.Lcz_GuestDetails}></ir-title>}\n        <div class={this.isInSideBar ? 'sheet-body' : 'card-content collapse show '}>\n          <div class={this.headerShown ? 'card-body px-1 pt-0' : 'pt-0'}>\n            <ir-input-text\n              autoValidate={this.autoValidate}\n              label={locales.entries.Lcz_FirstName}\n              name=\"firstName\"\n              // submitted={this.submit}\n              value={this.guest?.first_name}\n              required\n              onTextChange={e => this.handleInputChange({ first_name: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              autoValidate={this.autoValidate}\n              label={locales.entries.Lcz_LastName}\n              name=\"lastName\"\n              // submitted={this.submit}\n              value={this.guest?.last_name}\n              required\n              onTextChange={e => this.handleInputChange({ last_name: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              label={locales.entries.Lcz_Email}\n              name=\"email\"\n              // submitted={this.submit}\n              value={this.guest?.email}\n              required\n              onTextChange={e => this.handleInputChange({ email: e.detail })}\n            ></ir-input-text>\n            <ir-input-text\n              label={locales.entries.Lcz_AlternativeEmail}\n              name=\"altEmail\"\n              value={this.guest?.alternative_email}\n              onTextChange={e => this.handleInputChange({ alternative_email: e.detail })}\n            ></ir-input-text>\n            {/* <ir-input-text label=\"Password\" placeholder=\"\" name=\"password\" submited={this.submit} type=\"password\" value={this.Model.password} required></ir-input-text> */}\n            {/* <ir-select\n              selectContainerStyle=\"mb-1\"\n              required\n              name=\"country\"\n              submited={this.submit}\n              label={locales.entries.Lcz_Country}\n              selectedValue={this.guest?.country_id?.toString() ?? ''}\n              data={this.countries?.map(item => {\n                return {\n                  value: item.id.toString(),\n                  text: item.name,\n                };\n              })}\n              firstOption={'...'}\n              onSelectChange={e => this.handleInputChange({ country_id: e.detail })}\n            ></ir-select> */}\n            <ir-country-picker\n              // error={this.submit && !this.guest.country_id}\n              country={this.countries.find(c => c.id === this.guest.country_id)}\n              label={locales.entries.Lcz_Country}\n              onCountryChange={e => this.handleInputChange({ country_id: e.detail.id })}\n              countries={this.countries}\n            ></ir-country-picker>\n            <ir-phone-input\n              onTextChange={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                const { mobile, phone_prefix } = e.detail;\n                if (mobile !== this.guest.mobile) {\n                  this.handleInputChange({ mobile });\n                }\n                if (phone_prefix !== this.guest.country_phone_prefix) this.handleInputChange({ country_phone_prefix: phone_prefix });\n              }}\n              phone_prefix={this.guest.country_phone_prefix}\n              value={this.guest.mobile}\n              language={this.language}\n              label={locales.entries.Lcz_MobilePhone}\n              countries={this.countries}\n            />\n            <div class=\"mb-2\">\n              <ir-textarea\n                variant=\"prepend\"\n                onTextChange={e => this.handleInputChange({ notes: e.detail })}\n                value={this.guest?.notes}\n                label={locales.entries.Lcz_PrivateNote}\n              ></ir-textarea>\n            </div>\n            <div class={'p-0 m-0'}>\n              <label class={`check-container m-0 p-0`}>\n                <input\n                  class={'m-0 p-0'}\n                  type=\"checkbox\"\n                  name=\"newsletter\"\n                  checked={this.guest.subscribe_to_news_letter}\n                  onInput={e => this.handleInputChange({ subscribe_to_news_letter: (e.target as HTMLInputElement).checked })}\n                />\n                <span class=\"checkmark m-0 p-0\"></span>\n                <span class={'m-0 p-0  check-label'}>{locales.entries.Lcz_Newsletter}</span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div class=\"sheet-footer\">\n          <ir-button\n            data-testid=\"cancel\"\n            onClickHandler={() => this.closeSideBar.emit(null)}\n            class=\"flex-fill m-0 p-0\"\n            btn_styles=\"w-100 m-0  justify-content-center align-items-center\"\n            btn_color=\"secondary\"\n            text={locales.entries.Lcz_Cancel}\n          ></ir-button>\n          <ir-button\n            data-testid=\"save\"\n            isLoading={isRequestPending('/Edit_Exposed_Guest')}\n            btn_disabled={this.isLoading}\n            class=\"flex-fill m-0\"\n            btn_type=\"submit\"\n            btn_styles=\"w-100 m-0  justify-content-center align-items-center\"\n            text={locales.entries.Lcz_Save}\n          ></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n:host p,\r\n:host div,\r\n:host span,\r\n:host ir-icons {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.action-container td {\r\n  padding: 0px 0.5rem;\r\n  padding-bottom: 0.5rem;\r\n}\r\n.action-container .amount_action {\r\n  padding-inline-start: 0;\r\n}\r\n.overdue_action {\r\n  color: #ff4961;\r\n  border-radius: 0.25rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.future_action {\r\n  border-radius: 0.25rem;\r\n  color: #1e9ff2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: start;\r\n  gap: 0.5rem;\r\n}\r\n.date_action {\r\n  font-weight: 500;\r\n}\r\n.amount_action {\r\n  /* color: green; */\r\n  font-weight: 600;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\nimport { IPaymentAction } from '@/services/payment.service';\r\nimport { Booking } from '@/models/booking.dto';\r\nimport { formatAmount } from '@/utils/utils';\r\nimport moment from 'moment';\r\n@Component({\r\n  tag: 'ir-payment-actions',\r\n  styleUrl: 'ir-payment-actions.css',\r\n  scoped: true,\r\n})\r\nexport class IrPaymentActions {\r\n  @Prop() booking: Booking;\r\n  @Prop() paymentAction: IPaymentAction[];\r\n\r\n  @Event() generatePayment: EventEmitter<IPaymentAction>;\r\n\r\n  render() {\r\n    if (this.paymentAction?.filter(pa => pa.amount !== 0).length == 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Host>\r\n        <div class={'my-1'}>\r\n          <span class={'font-medium'}>Payment actions</span>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <th>\r\n              <p class=\"sr-only\">Amount</p>\r\n            </th>\r\n            <th>\r\n              <p class={'sr-only'}>Due date</p>\r\n            </th>\r\n            <th>\r\n              <p class={'sr-only'}>Pay</p>\r\n            </th>\r\n            <th>\r\n              <p class={'sr-only'}>Status</p>\r\n            </th>\r\n          </thead>\r\n          <tbody>\r\n            {this.paymentAction?.map(pa => {\r\n              if (!pa.due_on) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr class={'action-container'}>\r\n                  <td class={'amount_action'}>{formatAmount(pa.currency.symbol, pa.amount)}</td>\r\n                  <td class={'date_action'}>{moment(new Date(pa.due_on)).format('ddd, DD MMM YYYY')}</td>\r\n                  {pa.amount > 0 && (\r\n                    <td>\r\n                      <ir-button btn_color=\"outline\" text={'Pay'} size=\"sm\" onClickHandler={() => this.generatePayment.emit(pa)}></ir-button>\r\n                    </td>\r\n                  )}\r\n                  {pa.type === 'overdue' && pa.amount > 0 && (\r\n                    <td>\r\n                      <div class={'overdue_action'}>\r\n                        <svg height={16} width={16} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                          <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"\r\n                          />\r\n                        </svg>\r\n                        <span>Overdue</span>\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                  {pa.type === 'future' && pa.amount > 0 && (\r\n                    <td>\r\n                      <div class={'future_action '}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height={16} width={16} viewBox=\"0 0 512 512\">\r\n                          <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"\r\n                          />\r\n                        </svg>\r\n                        <span>{moment(new Date(pa.due_on)).isSame(new Date()) ? 'Today' : 'Future'}</span>\r\n                      </div>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n:host * {\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\n}\n\n.sm-margin-right {\n  margin-right: 5px !important;\n  background: #000;\n}\n.action_icons {\n  width: 60px;\n}\n.w-60 {\n  width: 100px;\n  padding: 0 5px;\n}\n.payments-height {\n  height: 30px;\n}\n.payment_date {\n  width: 100px;\n}\n.iframeHeight {\n  height: max-content;\n  height: 22.5rem;\n}\n.designation {\n  width: 120px;\n}\n.total-cost-container {\n  background: #7cbebe;\n  color: white;\n  padding: 0.5rem;\n  border-radius: 5px;\n}\n.payment-actions {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  gap: 0.5rem;\n}\n.payment_action_beta_container {\n  border: 1px solid var(--red);\n  position: relative;\n  padding: 4px;\n  box-sizing: border-box;\n  border-radius: 4px;\n}\n.beta {\n  position: absolute;\n  top: 4px;\n  background: var(--red);\n  color: white;\n  padding: 0.2rem 0.3rem;\n  font-size: 12px;\n  border-radius: 4px;\n  right: 4px;\n  margin: 0;\n}\n","import { Component, h, Prop, State, Event, EventEmitter, Fragment, Watch, Listen } from '@stencil/core';\nimport { _formatDate } from '../functions';\nimport { Booking, IDueDate, IPayment } from '@/models/booking.dto';\nimport { BookingService } from '@/services/booking.service';\nimport moment from 'moment';\nimport { PaymentService, IPaymentAction } from '@/services/payment.service';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { formatAmount, toFloat } from '@/utils/utils';\nimport locales from '@/stores/locales.store';\nimport { IToast } from '@/components/ui/ir-toast/toast';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  styleUrl: 'ir-payment-details.css',\n  tag: 'ir-payment-details',\n  scoped: true,\n})\nexport class IrPaymentDetails {\n  @Prop({ mutable: true }) bookingDetails: Booking;\n  @Prop() paymentActions: IPaymentAction[];\n\n  @State() newTableRow: boolean = false;\n\n  @State() collapsedPayment: boolean = false;\n  @State() collapsedGuarantee: boolean = false;\n\n  @State() flag: boolean = false;\n\n  @State() confirmModal: boolean = false;\n  @State() toBeDeletedItem: IPayment;\n\n  @State() paymentDetailsUrl: string = '';\n  @State() paymentExceptionMessage: string = '';\n  @State() modal_mode: 'delete' | 'save' | null = null;\n  @State() itemToBeAdded: IPayment;\n\n  @Event({ bubbles: true }) resetBookingEvt: EventEmitter<null>;\n  @Event({ bubbles: true }) resetExposedCancelationDueAmount: EventEmitter<null>;\n  @Event({ bubbles: true }) toast: EventEmitter<IToast>;\n\n  private paymentService = new PaymentService();\n  private bookingService = new BookingService();\n  private paymentBackground = 'white';\n\n  @Listen('generatePayment')\n  handlePaymentGeneration(e: CustomEvent) {\n    const value = e.detail;\n    this.newTableRow = true;\n    this.itemToBeAdded = { ...this.itemToBeAdded, amount: value.amount, date: value.due_on };\n    this.paymentBackground = 'rgba(250, 253, 174)';\n  }\n  async componentWillLoad() {\n    try {\n      this.initializeItemToBeAdded();\n    } catch (error) {\n      if (this.bookingDetails.guest.cci) {\n        return;\n      }\n      if (!this.bookingDetails.is_direct && this.bookingDetails.channel_booking_nbr) {\n        this.paymentExceptionMessage = error;\n      }\n    }\n  }\n  initializeItemToBeAdded() {\n    this.itemToBeAdded = {\n      id: -1,\n      date: moment().format('YYYY-MM-DD'),\n      amount: null,\n      currency: this.bookingDetails.currency,\n      designation: '',\n      reference: '',\n    };\n    this.paymentBackground = 'white';\n  }\n\n  async _processPaymentSave() {\n    if (this.itemToBeAdded.amount === null) {\n      this.toast.emit({\n        type: 'error',\n        title: locales.entries.Lcz_EnterAmount,\n        description: '',\n        position: 'top-right',\n      });\n      return;\n    }\n    if (Number(this.itemToBeAdded.amount) > Number(this.bookingDetails.financial.due_amount)) {\n      this.modal_mode = 'save';\n      this.openModal();\n      return;\n    }\n    this._handleSave();\n  }\n\n  async _handleSave() {\n    this.paymentBackground = 'white';\n    try {\n      await this.paymentService.AddPayment(this.itemToBeAdded, this.bookingDetails.booking_nbr);\n      this.initializeItemToBeAdded();\n      this.resetBookingEvt.emit(null);\n      this.resetExposedCancelationDueAmount.emit(null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  handlePaymentInputChange(key: keyof IPayment, value: any, event?: CustomEvent) {\n    this.paymentBackground = 'white';\n    if (key === 'amount') {\n      if (!isNaN(value) || value === '') {\n        if (value === '') {\n          this.itemToBeAdded = { ...this.itemToBeAdded, [key]: null };\n        } else {\n          this.itemToBeAdded = { ...this.itemToBeAdded, [key]: parseFloat(value) };\n        }\n      } else if (event && event.target) {\n        let inputElement = event.target as HTMLInputElement;\n        let inputValue = inputElement.value;\n        inputValue = inputValue.replace(/[^\\d-]|(?<!^)-/g, '');\n        inputElement.value = inputValue;\n      }\n    } else {\n      this.itemToBeAdded = { ...this.itemToBeAdded, [key]: value };\n    }\n  }\n  async cancelPayment() {\n    try {\n      await this.paymentService.CancelPayment(this.toBeDeletedItem.id);\n      const newPaymentArray = this.bookingDetails.financial.payments.filter((item: IPayment) => item.id !== this.toBeDeletedItem.id);\n      this.bookingDetails = { ...this.bookingDetails, financial: { ...this.bookingDetails.financial, payments: newPaymentArray } };\n      this.confirmModal = !this.confirmModal;\n      this.resetBookingEvt.emit(null);\n      this.resetExposedCancelationDueAmount.emit(null);\n      this.toBeDeletedItem = null;\n      this.modal_mode = null;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async handleConfirmModal(e: CustomEvent) {\n    this.paymentBackground = 'white';\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    if (this.modal_mode === 'delete') {\n      await this.cancelPayment();\n    } else {\n      await this._handleSave();\n    }\n  }\n  openModal() {\n    const modal: any = document.querySelector('.delete-record-modal');\n    modal.openModal();\n  }\n  async handleCancelModal(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      this.paymentBackground = 'white';\n      if (this.modal_mode === 'save') {\n        this.initializeItemToBeAdded();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  @Watch('bookingDetails')\n  handleBookingDetails() {\n    if (this.newTableRow) {\n      this.newTableRow = false;\n    }\n  }\n  handleDateChange(\n    e: CustomEvent<{\n      start: moment.Moment;\n      end: moment.Moment;\n    }>,\n  ) {\n    this.handlePaymentInputChange('date', e.detail.end.format('YYYY-MM-DD'));\n  }\n  _renderTableRow(item: IPayment, rowMode: 'add' | 'normal' = 'normal') {\n    return (\n      <Fragment>\n        <tr>\n          <td class={'border payments-height border-light border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left\">{_formatDate(item.date)}</span>\n            ) : (\n              <ir-date-picker\n                date={this.itemToBeAdded?.date ? new Date(this.itemToBeAdded.date) : new Date()}\n                minDate={moment().add(-2, 'months').startOf('month').format('YYYY-MM-DD')}\n                // singleDatePicker\n                // autoApply\n                class=\"d-flex justify-content-center\"\n                onDateChanged={this.handleDateChange.bind(this)}\n              >\n                <input\n                  type=\"text\"\n                  slot=\"trigger\"\n                  value={_formatDate(this.itemToBeAdded?.date)}\n                  class=\"text-center  form-control flex-grow-1 w-100\"\n                  style={{ border: '0', marginLeft: 'auto', marginRight: 'auto', width: '100%' }}\n                ></input>\n              </ir-date-picker>\n            )}\n          </td>\n          <td class={'border payments-height border-light border-bottom-0 text-center '}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-right\">{formatAmount(this.bookingDetails.currency.symbol, item.amount)}</span>\n            ) : (\n              // <input\n              //   type=\"text\"\n              //   class=\"border-0 text-center form-control py-0 m-0 w-100\"\n              //   value={this.itemToBeAdded.amount}\n              //   onBlur={e => {\n              //     (e.target as HTMLInputElement).value = Number(this.itemToBeAdded.amount).toFixed(2);\n              //   }}\n              //   onInput={event => this.handlePaymentInputChange('amount', +(event.target as HTMLInputElement).value, event)}\n              // ></input>\n              <ir-price-input\n                value={this.itemToBeAdded.amount?.toString()}\n                onTextChange={e => this.handlePaymentInputChange('amount', Number(e.detail), e)}\n                inputStyle=\"border-0 rounded-0 text-center py-0 m-0 w-100\"\n              ></ir-price-input>\n            )}\n          </td>\n          <td class={'border payments-height border-light border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left\">{item.designation}</span>\n            ) : (\n              <input\n                class=\"border-0 w-100 form-control py-0 m-0\"\n                onInput={event => this.handlePaymentInputChange('designation', (event.target as HTMLInputElement).value)}\n                type=\"text\"\n              ></input>\n            )}\n          </td>\n          <td rowSpan={2} class={'border payments-height border-light border-bottom-0 text-center'}>\n            <div class={'payment-actions'}>\n              {rowMode === 'add' && (\n                <ir-button\n                  variant=\"icon\"\n                  icon_name=\"save\"\n                  style={colorVariants.secondary}\n                  isLoading={rowMode === 'add' && isRequestPending('/Do_Payment')}\n                  class={'m-0'}\n                  onClickHandler={() => {\n                    this._processPaymentSave();\n                  }}\n                ></ir-button>\n              )}\n              <ir-button\n                variant=\"icon\"\n                icon_name=\"trash\"\n                style={colorVariants.danger}\n                isLoading={this.toBeDeletedItem?.id === item?.id && isRequestPending('/Cancel_Payment')}\n                onClickHandler={\n                  rowMode === 'add'\n                    ? () => {\n                        this.newTableRow = false;\n                        this.initializeItemToBeAdded();\n                      }\n                    : () => {\n                        this.modal_mode = 'delete';\n                        this.toBeDeletedItem = item;\n                        this.openModal();\n                      }\n                }\n              ></ir-button>\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan={3} class={'border border-light payments-height border-bottom-0 text-center'}>\n            {rowMode === 'normal' ? (\n              <span class=\"sm-padding-left \">{item.reference}</span>\n            ) : (\n              <input\n                class=\"border-0 w-100  form-control py-0 m-0\"\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    this.newTableRow = false;\n                    this._handleSave();\n                  }\n                }}\n                onInput={event => this.handlePaymentInputChange('reference', (event.target as HTMLInputElement).value)}\n                type=\"text\"\n              ></input>\n            )}\n          </td>\n        </tr>\n      </Fragment>\n    );\n  }\n  private formatCurrency(amount: number, currency: string, locale: string = 'en-US'): string {\n    if (!currency) {\n      return;\n    }\n    if (amount >= 0) {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }).format(amount);\n    }\n    return;\n  }\n  private bookingGuarantee() {\n    const paymentMethod = this.bookingDetails.is_direct ? this.getPaymentMethod() : null;\n    if (this.bookingDetails.is_direct && !paymentMethod && !this.bookingDetails.guest.cci) {\n      return null;\n    }\n    return (\n      <div class=\"mb-1\">\n        <div class=\"d-flex align-items-center\">\n          <span class=\"mr-1 font-medium\">\n            {locales.entries.Lcz_BookingGuarantee}\n            {!!paymentMethod && <span>: {paymentMethod}</span>}\n          </span>\n          {(!this.bookingDetails.is_direct || (this.bookingDetails.is_direct && this.bookingDetails.guest.cci)) && (\n            <ir-button\n              id=\"drawer-icon\"\n              data-toggle=\"collapse\"\n              data-target={`.guarrantee`}\n              aria-expanded={this.collapsedGuarantee ? 'true' : 'false'}\n              aria-controls=\"myCollapse\"\n              class=\"sm-padding-right pointer\"\n              variant=\"icon\"\n              icon_name=\"credit_card\"\n              onClickHandler={async () => {\n                if (!this.bookingDetails.is_direct && this.bookingDetails.channel_booking_nbr && !this.bookingDetails.guest.cci && !this.collapsedGuarantee) {\n                  this.paymentDetailsUrl = await this.bookingService.getPCICardInfoURL(this.bookingDetails.booking_nbr);\n                }\n                this.collapsedGuarantee = !this.collapsedGuarantee;\n              }}\n            ></ir-button>\n          )}\n        </div>\n        <div class=\"collapse guarrantee \">\n          {this.bookingDetails.guest.cci ? (\n            [\n              <div>\n                {this.bookingDetails?.guest?.cci && 'Card:'} <span>{this.bookingDetails?.guest?.cci?.nbr || ''}</span> {this.bookingDetails?.guest?.cci?.expiry_month && 'Expiry: '}\n                <span>\n                  {' '}\n                  {this.bookingDetails?.guest?.cci?.expiry_month || ''} {this.bookingDetails?.guest?.cci?.expiry_year && '/' + this.bookingDetails?.guest?.cci?.expiry_year}\n                </span>\n              </div>,\n              <div>\n                {this.bookingDetails?.guest?.cci.holder_name && 'Name:'} <span>{this.bookingDetails?.guest?.cci?.holder_name || ''}</span>{' '}\n                {this.bookingDetails?.guest?.cci?.cvc && '- CVC:'} <span> {this.bookingDetails?.guest?.cci?.cvc || ''}</span>\n              </div>,\n            ]\n          ) : this.paymentDetailsUrl ? (\n            <iframe src={this.paymentDetailsUrl} width=\"100%\" class=\"iframeHeight\" frameborder=\"0\" name=\"payment\"></iframe>\n          ) : (\n            <div class=\"text-center\">{this.paymentExceptionMessage}</div>\n          )}\n        </div>\n        {!this.bookingDetails.is_direct && this.bookingDetails.ota_guarante && (\n          <div>\n            <ir-label\n              content={this.bookingDetails.ota_guarante?.card_type + `${this.bookingDetails.ota_guarante?.is_virtual ? ' (virtual)' : ''}`}\n              labelText={`${locales.entries.Lcz_CardType}:`}\n            ></ir-label>\n            <ir-label content={this.bookingDetails.ota_guarante?.cardholder_name} labelText={`${locales.entries.Lcz_CardHolderName}:`}></ir-label>\n            <ir-label content={this.bookingDetails.ota_guarante?.card_number} labelText={`${locales.entries.Lcz_CardNumber}:`}></ir-label>\n            {/* <ir-label content={this.bookingDetails.ota_guarante?.cvv} labelText=\"Cvv:\"></ir-label> */}\n            {/* <ir-label content={JSON.stringify(this.bookingDetails?.ota_guarante.is_virtual)} labelText=\"Is card virtual:\"></ir-label> */}\n            {/* <ir-label content={this.bookingDetails.ota_guarante?.expiration_date} labelText=\"Expiration date:\"></ir-label> */}\n            <ir-label\n              content={this.formatCurrency(\n                toFloat(Number(this.bookingDetails.ota_guarante?.meta?.virtual_card_current_balance), Number(this.bookingDetails.ota_guarante?.meta?.virtual_card_decimal_places)),\n                this.bookingDetails.ota_guarante?.meta?.virtual_card_currency_code,\n              )}\n              labelText={`${locales.entries.Lcz_CardBalance}:`}\n            ></ir-label>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private checkPaymentCode(value: string) {\n    console.log(calendar_data.allowed_payment_methods);\n    return calendar_data.allowed_payment_methods?.find(pm => pm.code === value)?.description ?? null;\n  }\n\n  private getPaymentMethod() {\n    let paymentMethod = null;\n    const payment_code = this.bookingDetails?.extras?.find(e => e.key === 'payment_code');\n    if (this.bookingDetails.agent) {\n      const code = this.bookingDetails?.extras?.find(e => e.key === 'agent_payment_mode');\n      if (code) {\n        paymentMethod = code.value === '001' ? locales.entries.Lcz_OnCredit : payment_code ? this.checkPaymentCode(payment_code.value) : null;\n      }\n    } else {\n      if (payment_code) {\n        paymentMethod = this.checkPaymentCode(payment_code.value);\n      }\n    }\n    return paymentMethod;\n  }\n\n  _renderDueDate(item: IDueDate) {\n    return (\n      <tr>\n        <td class={'pr-1'}>{_formatDate(item.date)}</td>\n        <td class={'pr-1'}>{formatAmount(this.bookingDetails.currency.symbol, item.amount)}</td>\n        <td class={'pr-1'}>{item.description}</td>\n        <td class=\"collapse font-size-small roomName\">{item.room}</td>\n      </tr>\n    );\n  }\n\n  render() {\n    if (!this.bookingDetails.financial) {\n      return null;\n    }\n    return [\n      <div class=\"card m-0\">\n        <div class=\"p-1\">\n          {this.bookingDetails.financial.gross_cost > 0 && this.bookingDetails.financial.gross_cost !== null && (\n            <div class=\"mb-2 h4 total-cost-container\">\n              {locales.entries.Lcz_TotalCost}: <span>{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.gross_cost)}</span>\n            </div>\n          )}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          <div class=\" h4\">\n            {locales.entries.Lcz_Balance}:{' '}\n            <span class=\"danger font-weight-bold\">{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.due_amount)}</span>\n          </div>\n          {/* <div class=\" h4\">\n            {locales.entries.Lcz_DueBalance}:{' '}\n            <span class=\"danger font-weight-bold\">{formatAmount(this.bookingDetails.currency.symbol, this.bookingDetails.financial.due_amount)}</span>\n          </div> */}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          <div class=\"mb-2 h4\">\n            {locales.entries.Lcz_Collected}:{' '}\n            <span class=\"\">\n              {formatAmount(\n                this.bookingDetails.currency.symbol,\n                this.bookingDetails.financial.payments ? this.bookingDetails.financial.payments.reduce((prev, curr) => prev + curr.amount, 0) : 0,\n              )}\n            </span>\n          </div>\n\n          {this.bookingGuarantee()}\n          {/* <div class=\"mt-2\">\n            <div>\n              {this.bookingDetails.financial?.due_dates?.length > 0 && (\n                <Fragment>\n                  <div class=\"d-flex align-items-center\">\n                    <strong class=\"mr-1\">{locales.entries.Lcz_PaymentDueDates}</strong>\n                    <ir-button\n                      id=\"drawer-icon\"\n                      data-toggle=\"collapse\"\n                      data-target={`.roomName`}\n                      aria-expanded={this.collapsedPayment ? 'true' : 'false'}\n                      aria-controls=\"myCollapse\"\n                      variant=\"icon\"\n                      icon_name={this.collapsedPayment ? 'closed_eye' : 'open_eye'}\n                      onClickHandler={() => {\n                        this.collapsedPayment = !this.collapsedPayment;\n                      }}\n                      style={{ '--icon-size': '1.5rem' }}\n                    ></ir-button>\n                  </div>\n\n                  <table>{this.bookingDetails.financial.due_dates?.map(item => this._renderDueDate(item))}</table>\n                </Fragment>\n              )}\n            </div>\n          </div> */}\n          {/* TODO:IMPLEMENT THIS ON BOOKING ACTIONS */}\n          {this.paymentActions?.filter(pa => pa.amount !== 0).length > 0 && this.bookingDetails.is_direct && (\n            <div class=\"payment_action_beta_container\">\n              <p class=\"beta\">Beta</p>\n              <ir-payment-actions paymentAction={this.paymentActions} booking={this.bookingDetails}></ir-payment-actions>\n            </div>\n          )}\n          <div class=\"mt-2 d-flex  flex-column rounded payment-container\">\n            <div class=\"d-flex align-items-center justify-content-between\">\n              <span class={'font-medium'}>{locales.entries.Lcz_Payments} history</span>\n              <ir-button\n                id=\"add-payment\"\n                variant=\"icon\"\n                icon_name=\"square_plus\"\n                style={{ '--icon-size': '1.5rem' }}\n                onClickHandler={() => {\n                  this.newTableRow = true;\n                }}\n              ></ir-button>\n            </div>\n            <table class=\"mt-1\" style={{ backgroundColor: this.paymentBackground }}>\n              <thead>\n                <tr>\n                  <th class={'border border-light border-bottom-0 text-center payment_date'}>{locales.entries.Lcz_Dates}</th>\n                  <th class={'border border-light border-bottom-0 text-center w-60'}>{locales.entries.Lcz_Amount}</th>\n                  <th class={'border border-light border-bottom-0 text-center designation'}>{locales.entries.Lcz_Designation}</th>\n                  <th class={'border border-light border-bottom-0 text-center action_icons'}>\n                    <span class={'sr-only'}>payment actions</span>\n                    {/* <ir-button\n                      id=\"add-payment\"\n                      variant=\"icon\"\n                      icon_name=\"square_plus\"\n                      onClickHandler={() => {\n                        this.newTableRow = true;\n                      }}\n                    ></ir-button> */}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.bookingDetails.financial.payments?.map((item: any) => this._renderTableRow(item))}\n                {this.newTableRow ? this._renderTableRow(null, 'add') : null}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>,\n\n      <ir-modal\n        item={this.toBeDeletedItem}\n        class={'delete-record-modal'}\n        modalTitle={locales.entries.Lcz_Confirmation}\n        modalBody={this.modal_mode === 'delete' ? locales.entries.Lcz_IfDeletedPermantlyLost : locales.entries.Lcz_EnteringAmountGreaterThanDue}\n        iconAvailable={true}\n        icon=\"ft-alert-triangle danger h1\"\n        leftBtnText={locales.entries.Lcz_Cancel}\n        rightBtnText={this.modal_mode === 'delete' ? locales.entries.Lcz_Delete : locales.entries.Lcz_Confirm}\n        leftBtnColor=\"secondary\"\n        rightBtnColor={this.modal_mode === 'delete' ? 'danger' : 'primary'}\n        onConfirmModal={this.handleConfirmModal.bind(this)}\n        onCancelModal={this.handleCancelModal.bind(this)}\n      ></ir-modal>,\n    ];\n  }\n}\n","import axios from 'axios';\nimport { TDueParams, TPickupData } from './types';\nimport calendar_data from '@/stores/calendar-data';\nimport { IBookingPickupInfo } from '@/components';\nimport { z, ZodError } from 'zod';\nimport { renderTime } from '@/utils/utils';\nimport moment from 'moment';\n\nexport class PickupService {\n  public async savePickup(params: TPickupData, booking_nbr: string, is_remove: boolean) {\n    try {\n      const splitTime = params.arrival_time.split(':');\n      await axios.post(`/Do_Pickup`, {\n        booking_nbr,\n        is_remove,\n        currency: params.currency,\n        date: params.arrival_date,\n        details: params.flight_details,\n        hour: splitTime[0],\n        minute: splitTime[1],\n        nbr_of_units: params.number_of_vehicles,\n        selected_option: params.selected_option,\n        total: +params.due_upon_booking,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public transformDefaultPickupData(data: IBookingPickupInfo): TPickupData {\n    const arrival_time = data.hour && data.minute ? renderTime(data.hour) + ':' + renderTime(data.minute) : '';\n    return {\n      arrival_date: data.date,\n      arrival_time,\n      currency: data.currency,\n      due_upon_booking: data.total.toFixed(2),\n      flight_details: data.details,\n      location: data.selected_option.location.id,\n      number_of_vehicles: data.nbr_of_units,\n      selected_option: data.selected_option,\n      vehicle_type_code: data.selected_option.vehicle.code,\n    };\n  }\n  public getAvailableLocations(message: string) {\n    let locations: { value: number; text: string }[] = [];\n    calendar_data.pickup_service.allowed_options.forEach(option => {\n      if (locations.filter(location => location.value === option.location.id).length === 0) {\n        locations.push({\n          text: message + ' ' + option.location.description,\n          value: option.location.id,\n        });\n      }\n    });\n    return locations;\n  }\n  public createPickupSchema(minDate: string, maxDate: string) {\n    return z.object({\n      arrival_date: z\n        .string()\n        .regex(/^\\d{4}-\\d{2}-\\d{2}$/, { message: 'Invalid date format, expected YYYY-MM-DD' })\n        .refine(\n          dateStr => {\n            const date = moment(dateStr, 'YYYY-MM-DD', true);\n            const min = moment(minDate, 'YYYY-MM-DD', true);\n            const max = moment(maxDate, 'YYYY-MM-DD', true);\n            return date.isValid() && min.isValid() && max.isValid() && date.isBetween(min, max, undefined, '[]');\n          },\n          { message: `arrival_date must be between ${minDate} and ${maxDate}` },\n        ),\n\n      arrival_time: z\n        .string()\n        .regex(/^\\d{2}:\\d{2}$/, { message: 'Invalid time format. Expected HH:MM' })\n        .refine(\n          time => {\n            const [hours, minutes] = time.split(':').map(Number);\n            return hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59;\n          },\n          { message: 'Time values are out of range' },\n        ),\n      flight_details: z.string().nonempty({ message: 'Flight details cannot be empty' }),\n      vehicle_type_code: z.string().nonempty({ message: 'Vehicle type code cannot be empty' }),\n      number_of_vehicles: z.coerce.number().min(1, { message: 'At least one vehicle is required' }),\n    });\n  }\n  public validateForm(\n    params: TPickupData,\n    schema: any, // : { error: boolean; cause?: keyof TPickupData }\n  ) {\n    try {\n      schema.parse(params);\n      return null;\n    } catch (error) {\n      console.log(error);\n      const err = {};\n      if (error instanceof ZodError) {\n        error.issues.forEach(e => {\n          err[e.path[0]] = true;\n        });\n        return err;\n      }\n    }\n    // if (params.arrival_time.split(':').length !== 2) {\n    //   return {\n    //     error: true,\n    //     cause: 'arrival_time',\n    //   };\n    // }\n    // if (params.flight_details === '') {\n    //   return {\n    //     error: true,\n    //     cause: 'flight_details',\n    //   };\n    // }\n    // if (params.vehicle_type_code === '') {\n    //   return {\n    //     error: true,\n    //     cause: 'vehicle_type_code',\n    //   };\n    // }\n    // if (params.number_of_vehicles === 0) {\n    //   return {\n    //     error: true,\n    //     cause: 'number_of_vehicles',\n    //   };\n    // }\n    // return { error: false };\n  }\n  public getNumberOfVehicles(capacity: number, numberOfPersons: number) {\n    let total_number_of_vehicles = Math.ceil(numberOfPersons / capacity);\n    let startNumber = total_number_of_vehicles > 1 ? total_number_of_vehicles : 1;\n    let bonus_number = total_number_of_vehicles > 1 ? 2 : 3;\n    return Array.from({ length: total_number_of_vehicles + bonus_number }, (_, i) => startNumber + i);\n  }\n  private getPickUpPersonStatus(code: string) {\n    const getCodeDescription = calendar_data.pickup_service.allowed_pricing_models.find(model => model.code === code);\n    if (!getCodeDescription) {\n      return null;\n    }\n    return getCodeDescription.description;\n  }\n  public updateDue(params: TDueParams) {\n    const getCodeDescription = this.getPickUpPersonStatus(params.code);\n    if (!getCodeDescription) {\n      return;\n    }\n    if (getCodeDescription === 'Person') {\n      return params.amount * params.numberOfPersons;\n    } else {\n      return params.amount * params.number_of_vehicles;\n    }\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n.custom-card-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n.card-title {\r\n  flex: 1;\r\n}\r\n.border-theme {\r\n  border: 1px solid #cacfe7;\r\n}\r\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex;\n  flex-direction: column;\n  background: white;\n  height: 100%;\n  gap: 1rem;\n}\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1;\n}\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import calendar_data from '@/stores/calendar-data';\nimport locales from '@/stores/locales.store';\nimport { Component, Element, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { TPickupData } from './types';\nimport moment from 'moment';\nimport { IAllowedOptions } from '@/models/calendarData';\nimport { PickupService } from './pickup.service';\nimport { IBookingPickupInfo } from '@/models/booking.dto';\nimport { MaskedRange } from 'imask';\n\n@Component({\n  tag: 'ir-pickup',\n  styleUrls: ['ir-pickup.css', '../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IrPickup {\n  @Element() el: HTMLElement;\n\n  @Prop() defaultPickupData: IBookingPickupInfo | null;\n  @Prop() numberOfPersons: number = 0;\n  @Prop() bookingNumber: string;\n  @Prop() bookingDates: { from: string; to: string };\n\n  @State() isLoading = false;\n  @State() allowedOptionsByLocation: IAllowedOptions[] = [];\n  @State() pickupData: TPickupData = {\n    location: -1,\n    flight_details: '',\n    due_upon_booking: '',\n    number_of_vehicles: 1,\n    vehicle_type_code: '',\n    currency: undefined,\n    arrival_time: '',\n    arrival_date: null,\n    selected_option: undefined,\n  };\n  @State() vehicleCapacity: number[] = [];\n  @State() cause: keyof TPickupData | null = null;\n  @State() errors: Record<string, boolean>;\n  @State() autoValidate = false;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n\n  private pickupService = new PickupService();\n  private pickupSchema;\n\n  private arrival_time_mask = {\n    mask: 'HH:mm',\n    blocks: {\n      HH: {\n        mask: MaskedRange,\n        from: 0,\n        to: 23,\n        placeholderChar: 'H',\n      },\n      mm: {\n        mask: MaskedRange,\n        from: 0,\n        to: 59,\n        placeholderChar: 'm',\n      },\n    },\n    lazy: false,\n    placeholderChar: '_',\n  };\n\n  componentWillLoad() {\n    if (this.defaultPickupData) {\n      const transformedData = this.pickupService.transformDefaultPickupData(this.defaultPickupData);\n      this.vehicleCapacity = this.pickupService.getNumberOfVehicles(transformedData.selected_option.vehicle.capacity, this.numberOfPersons);\n      this.allowedOptionsByLocation = calendar_data.pickup_service.allowed_options.filter(option => option.location.id === transformedData.location);\n      this.pickupData = { ...transformedData };\n    }\n    this.pickupSchema = this.pickupService.createPickupSchema(this.bookingDates.from, this.bookingDates.to);\n  }\n  private handleLocationChange(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    const value = event.detail;\n    if (value === '') {\n      this.updatePickupData('location', -1);\n    }\n    if (value !== '') {\n      this.allowedOptionsByLocation = calendar_data.pickup_service.allowed_options.filter(option => option.location.id.toString() === value);\n      let locationChoice = this.allowedOptionsByLocation[0];\n      if (!locationChoice) {\n        return;\n      }\n      locationChoice.currency;\n      this.vehicleCapacity = this.pickupService.getNumberOfVehicles(locationChoice.vehicle.capacity, this.numberOfPersons);\n      this.pickupData = {\n        ...this.pickupData,\n        location: value,\n        selected_option: locationChoice,\n        number_of_vehicles: this.vehicleCapacity[0],\n        due_upon_booking: this.pickupService\n          .updateDue({\n            amount: locationChoice.amount,\n            code: locationChoice.pricing_model.code,\n            numberOfPersons: this.numberOfPersons,\n            number_of_vehicles: this.vehicleCapacity[0],\n          })\n          .toFixed(2),\n        vehicle_type_code: locationChoice.vehicle.code,\n        currency: locationChoice.currency,\n        // number_of_vehicles:this.pickupService\n      };\n    }\n  }\n\n  private handleVehicleQuantityChange(e: CustomEvent) {\n    if (e.detail === '') {\n      return;\n    }\n    const value = +e.detail;\n    this.pickupData = {\n      ...this.pickupData,\n      number_of_vehicles: value,\n      due_upon_booking: this.pickupService\n        .updateDue({\n          amount: this.pickupData.selected_option.amount,\n          code: this.pickupData.selected_option.pricing_model.code,\n          numberOfPersons: this.numberOfPersons,\n          number_of_vehicles: value,\n        })\n        .toFixed(2),\n    };\n  }\n\n  private handleVehicleTypeChange(e: CustomEvent) {\n    if (e.detail === '') {\n      this.pickupData = {\n        ...this.pickupData,\n        due_upon_booking: '',\n        vehicle_type_code: '',\n      };\n      return;\n    }\n    let locationChoice = calendar_data.pickup_service.allowed_options.find(option => option.location.id === +this.pickupData.location && option.vehicle.code === e.detail);\n    if (!locationChoice) {\n      return;\n    }\n    this.vehicleCapacity = [...this.pickupService.getNumberOfVehicles(locationChoice.vehicle.capacity, this.numberOfPersons)];\n    this.pickupData = {\n      ...this.pickupData,\n      selected_option: locationChoice,\n      number_of_vehicles: this.vehicleCapacity[0],\n      due_upon_booking: this.pickupService\n        .updateDue({\n          amount: locationChoice.amount,\n          code: locationChoice.pricing_model.code,\n          numberOfPersons: this.numberOfPersons,\n          number_of_vehicles: this.vehicleCapacity[0],\n        })\n        .toFixed(2),\n      vehicle_type_code: locationChoice.vehicle.code,\n    };\n  }\n\n  private updatePickupData(key: keyof TPickupData, value: any) {\n    this.pickupData = { ...this.pickupData, [key]: value };\n  }\n  private async savePickup() {\n    try {\n      this.isLoading = true;\n      this.autoValidate = true;\n      if (this.errors) {\n        this.errors = null;\n      }\n      this.errors = this.pickupService.validateForm(this.pickupData, this.pickupSchema);\n      if (this.errors) {\n        return;\n      }\n      await this.pickupService.savePickup(this.pickupData, this.bookingNumber, this.defaultPickupData !== null && this.pickupData.location === -1);\n      this.resetBookingEvt.emit(null);\n      this.closeModal.emit(null);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  render() {\n    return (\n      <form\n        class={'sheet-container'}\n        onSubmit={async e => {\n          e.preventDefault();\n          await this.savePickup();\n        }}\n      >\n        <ir-title class=\"px-1 sheet-header\" onCloseSideBar={() => this.closeModal.emit(null)} label={locales.entries.Lcz_Pickup} displayContext=\"sidebar\"></ir-title>\n        <section class={'px-1 sheet-body'}>\n          <ir-select\n            testId=\"pickup_location\"\n            selectedValue={this.pickupData.location}\n            selectContainerStyle=\"mb-1\"\n            onSelectChange={this.handleLocationChange.bind(this)}\n            firstOption={locales.entries.Lcz_Pickup_NoThankYou}\n            class={'m-0 mb-1'}\n            LabelAvailable={false}\n            data={this.pickupService.getAvailableLocations(locales.entries.Lcz_Pickup_YesFrom) as any}\n          ></ir-select>\n          {this.pickupData.location > 0 && (\n            <div class=\"m-0 p-0\" data-testid=\"pickup_body\">\n              {/*Date and Time Picker container */}\n              <div class={'d-flex'}>\n                {/*Date Picker */}\n                <div class=\"form-group  mr-1\">\n                  <div class=\"input-group row m-0\">\n                    <div class={`input-group-prepend col-5 p-0 text-dark border-0`}>\n                      <label class={`input-group-text  flex-grow-1 text-dark border-theme `}>{locales.entries.Lcz_ArrivalDate}</label>\n                    </div>\n                    <div class=\"form-control  form-control-md col-7 d-flex align-items-center px-0 mx-0\" style={{ border: '0' }}>\n                      <ir-date-picker\n                        data-testid=\"pickup_arrival_date\"\n                        date={this.pickupData.arrival_date}\n                        minDate={this.bookingDates.from}\n                        maxDate={this.bookingDates?.to}\n                        emitEmptyDate={true}\n                        aria-invalid={this.errors?.arrival_date && !this.pickupData.arrival_date ? 'true' : 'false'}\n                        onDateChanged={evt => {\n                          this.updatePickupData('arrival_date', evt.detail.start?.format('YYYY-MM-DD'));\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={this.pickupData.arrival_date ? moment(this.pickupData.arrival_date).format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors?.arrival_date && !this.pickupData.arrival_date ? 'border-danger' : ''} text-center`}\n                          style={{ borderTopLeftRadius: '0', borderBottomLeftRadius: '0', width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </div>\n                  </div>\n                </div>\n                {/*Time Picker */}\n                <ir-input-text\n                  autoValidate={this.autoValidate}\n                  wrapKey=\"arrival_time\"\n                  testId=\"pickup_arrival_time\"\n                  error={this.errors?.arrival_time}\n                  value={this.pickupData.arrival_time}\n                  zod={this.pickupSchema.pick({ arrival_time: true })}\n                  label={locales.entries.Lcz_Time}\n                  inputStyles=\"col-sm-4\"\n                  data-state={this.cause === 'arrival_time' ? 'error' : ''}\n                  mask={this.arrival_time_mask}\n                  onTextChange={e => this.updatePickupData('arrival_time', e.detail)}\n                ></ir-input-text>\n              </div>\n              <ir-input-text\n                wrapKey=\"flight_details\"\n                zod={this.pickupSchema.pick({ flight_details: true })}\n                autoValidate={this.autoValidate}\n                testId=\"pickup_flight_details\"\n                value={this.pickupData.flight_details}\n                label={locales.entries.Lcz_FlightDetails}\n                onTextChange={e => this.updatePickupData('flight_details', e.detail)}\n                placeholder=\"\"\n                error={this.errors?.flight_details}\n              ></ir-input-text>\n              <ir-select\n                testId=\"pickup_vehicle_type_code\"\n                selectContainerStyle=\"mb-1\"\n                error={this.cause === 'vehicle_type_code'}\n                onSelectChange={this.handleVehicleTypeChange.bind(this)}\n                firstOption={locales.entries.Lcz_Select}\n                selectedValue={this.pickupData.vehicle_type_code}\n                class={'m-0'}\n                LabelAvailable={false}\n                data={\n                  this.allowedOptionsByLocation.map(option => ({\n                    text: option.vehicle.description,\n                    value: option.vehicle.code,\n                  })) as any\n                }\n              ></ir-select>\n              <div class={'d-flex flex-column flex-md-row'}>\n                <ir-select\n                  showFirstOption={false}\n                  testId=\"pickup_number_of_vehicles\"\n                  labelBorder=\"theme\"\n                  selectContainerStyle=\"mb-1\"\n                  onSelectChange={this.handleVehicleQuantityChange.bind(this)}\n                  selectedValue={this.pickupData.number_of_vehicles}\n                  error={this.cause === 'number_of_vehicles'}\n                  labelWidth={7}\n                  class={'m-0  mb-md-0 mr-md-1 flex-fill'}\n                  label={locales.entries.Lcz_NbrOfVehicles}\n                  data={\n                    this.vehicleCapacity.map(i => ({\n                      text: i,\n                      value: i,\n                    })) as any\n                  }\n                ></ir-select>\n                <ir-input-text\n                  labelBorder=\"theme\"\n                  readonly\n                  value={this.pickupData.due_upon_booking}\n                  labelWidth={7}\n                  label={`${locales.entries.Lcz_DueUponBooking}  ${this.pickupData.currency.symbol}`}\n                  placeholder=\"\"\n                  class=\"\"\n                ></ir-input-text>\n              </div>\n            </div>\n          )}\n        </section>\n        <div class={'sheet-footer'}>\n          <ir-button\n            onClick={() => this.closeModal.emit(null)}\n            btn_styles=\"justify-content-center\"\n            class={`flex-fill`}\n            icon=\"\"\n            text={locales.entries.Lcz_Cancel}\n            btn_color=\"secondary\"\n          ></ir-button>\n          {(this.defaultPickupData || this.pickupData.location !== -1) && (\n            <ir-button\n              btn_styles=\"justify-content-center align-items-center\"\n              class={'flex-fill'}\n              icon=\"\"\n              isLoading={this.isLoading}\n              text={locales.entries.Lcz_Save}\n              btn_color=\"primary\"\n              btn_type=\"submit\"\n            ></ir-button>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n","import calendar_data from '@/stores/calendar-data';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, h } from '@stencil/core';\nimport { _formatTime } from '../functions';\nimport moment from 'moment';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\n@Component({\n  tag: 'ir-pickup-view',\n  styleUrl: 'ir-pickup-view.css',\n  scoped: true,\n})\nexport class IrPickupView {\n  @Prop() booking: Booking;\n  render() {\n    if (!calendar_data.pickup_service.is_enabled || !this.booking.is_editable) {\n      return null;\n    }\n    return (\n      <Host>\n        <div class=\"mb-1\">\n          <div class={'d-flex w-100 mb-1 align-items-center justify-content-between'}>\n            <p class={'font-size-large p-0 m-0 '}>{locales.entries.Lcz_Pickup}</p>\n            <ir-button id=\"pickup\" data-testid=\"new_pickup_btn\" variant=\"icon\" icon_name=\"edit\" style={{ ...colorVariants.secondary, '--icon-size': '1.5rem' }}></ir-button>\n          </div>\n          {this.booking.pickup_info && (\n            <div class={'card'}>\n              <div class={'p-1'}>\n                <div class={'d-flex align-items-center py-0 my-0 pickup-margin'}>\n                  <p class={'font-weight-bold mr-1 py-0 my-0'}>\n                    {locales.entries.Lcz_Date}: <span class={'font-weight-normal'}>{moment(this.booking.pickup_info.date, 'YYYY-MM-DD').format('MMM DD, YYYY')}</span>\n                  </p>\n                  {this.booking.pickup_info.hour && this.booking.pickup_info.minute && (\n                    <p class={'font-weight-bold flex-fill py-0 my-0'}>\n                      {locales.entries.Lcz_Time}:\n                      <span class={'font-weight-normal'}> {_formatTime(this.booking.pickup_info.hour.toString(), this.booking.pickup_info.minute.toString())}</span>\n                    </p>\n                  )}\n                  <p class={'font-weight-bold py-0 my-0'}>\n                    {locales.entries.Lcz_DueUponBooking}:{' '}\n                    <span class={'font-weight-normal'}>\n                      {this.booking.pickup_info.currency.symbol}\n                      {this.booking.pickup_info.total}\n                    </span>\n                  </p>\n                </div>\n                <p class={'font-weight-bold py-0 my-0'}>\n                  {locales.entries.Lcz_FlightDetails}:<span class={'font-weight-normal'}> {`${this.booking.pickup_info.details}`}</span>\n                </p>\n                <p class={'py-0 my-0 pickup-margin'}>{`${this.booking.pickup_info.selected_option.vehicle.description}`}</p>\n                <p class={'font-weight-bold py-0 my-0 pickup-margin'}>\n                  {locales.entries.Lcz_NbrOfVehicles}:<span class={'font-weight-normal'}> {`${this.booking.pickup_info.nbr_of_units}`}</span>\n                </p>\n                <p class={'small py-0 my-0 pickup-margin'}>\n                  {calendar_data.pickup_service.pickup_instruction.description}\n                  {calendar_data.pickup_service.pickup_cancelation_prepayment.description}\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\r\n  display: block;\r\n}\r\n.dialog-container-height {\r\n  height: 4rem;\r\n}\r\n.list-title {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  width: fit-content;\r\n}\r\n.list-item {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  margin-left: 5px;\r\n  width: fit-content;\r\n}\r\n.list-item.green {\r\n  color: #629a4c;\r\n  font-weight: 600;\r\n}\r\n.list-item.red {\r\n  color: #ff4961;\r\n  font-weight: 600;\r\n}\r\n","import { Component, h, Prop, State } from '@stencil/core';\r\nimport { _formatTime } from '../../functions';\r\nimport locales from '@/stores/locales.store';\r\nimport { IPmsLog } from '@/models/booking.dto';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { BookingService } from '@/services/booking.service';\r\n\r\n@Component({\r\n  tag: 'ir-pms-logs',\r\n  styleUrl: 'ir-pms-logs.css',\r\n  scoped: true,\r\n})\r\nexport class IrPmsLogs {\r\n  @Prop() bookingNumber: string;\r\n\r\n  @State() pmsLogs: IPmsLog;\r\n\r\n  private bookingService = new BookingService();\r\n\r\n  componentWillLoad() {\r\n    this.init();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.pmsLogs = await this.bookingService.fetchPMSLogs(this.bookingNumber);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"p-1\">\r\n        <h3 class=\" text-left mb-1 dialog-title \">{locales.entries.Lcz_PMS_Logs}</h3>\r\n\r\n        {isRequestPending('/Get_Exposed_PMS_Logs') ? (\r\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\r\n            <ir-spinner></ir-spinner>\r\n          </div>\r\n        ) : (\r\n          <div class={'dialog-container-height'}>\r\n            <div class=\"d-flex align-items-center \" style={{ paddingBottom: '0.5rem' }}>\r\n              <p class=\"list-title p-0 m-0\">{locales.entries.Lcz_SentAt}</p>\r\n              {this.pmsLogs?.sent_date ? (\r\n                <p class=\"list-item\">\r\n                  {this.pmsLogs?.sent_date} {_formatTime(this.pmsLogs?.sent_hour.toString(), this.pmsLogs?.sent_minute.toString())}\r\n                </p>\r\n              ) : (\r\n                <p class={`list-item ${this.pmsLogs?.sent_date ? 'green' : 'red'}`}>{this.pmsLogs?.is_acknowledged ? locales.entries.Lcz_YES : locales.entries.Lcz_NO}</p>\r\n              )}\r\n            </div>\r\n            <div class=\"d-flex align-items-center p-0 m-0\">\r\n              <h4 class=\"list-title p-0 m-0\">{locales.entries.Lcz_Acknowledged}</h4>\r\n              <p class={`list-item  ${this.pmsLogs?.is_acknowledged ? 'green' : 'red'}`}>{this.pmsLogs?.is_acknowledged ? locales.entries.Lcz_YES : locales.entries.Lcz_NO}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { Booking } from '@/models/booking.dto';\nimport locales from '@/stores/locales.store';\nimport { getPrivateNote } from '@/utils/booking';\nimport { Component, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { ICountry } from '@/models/IBooking';\nimport { _formatDate, _formatTime } from '../functions';\nimport { BookingDetailsSidebarEvents, OpenSidebarEvent } from '../types';\n\n@Component({\n  tag: 'ir-reservation-information',\n  styleUrl: 'ir-reservation-information.css',\n  scoped: true,\n})\nexport class IrReservationInformation {\n  @Prop() booking: Booking;\n  @Prop() countries: ICountry[];\n\n  @State() userCountry: ICountry | null = null;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<any>>;\n  componentWillLoad() {\n    const guestCountryId = this.booking?.guest?.country_id;\n    this.userCountry = guestCountryId ? this.countries?.find(country => country.id === guestCountryId) || null : null;\n  }\n  private handleEditClick(e: CustomEvent, type: BookingDetailsSidebarEvents) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.openSidebar.emit({ type });\n  }\n\n  private renderPhoneNumber() {\n    const { mobile_without_prefix, country_phone_prefix, country_id } = this.booking.guest;\n    if (!mobile_without_prefix) {\n      return null;\n    }\n    if (country_phone_prefix) {\n      return country_phone_prefix + ' ' + mobile_without_prefix;\n    }\n    if (country_id) {\n      const selectedCountry = this.countries.find(c => c.id === country_id);\n      if (!selectedCountry) {\n        throw new Error('Invalid country id');\n      }\n      return selectedCountry.phone_prefix + ' ' + mobile_without_prefix;\n    }\n    return mobile_without_prefix;\n    // const { mobile, country_phone_prefix, country_id } = this.booking.guest;\n    // if (!mobile) {\n    //   return null;\n    // }\n    // if (this.booking.is_direct) {\n    //   if (country_phone_prefix) {\n    //     return country_phone_prefix + ' ' + mobile;\n    //   }\n    //   if (country_id) {\n    //     const selectedCountry = this.countries.find(c => c.id === country_id);\n    //     if (!selectedCountry) {\n    //       throw new Error('Invalid country id');\n    //     }\n    //     return selectedCountry.phone_prefix + ' ' + mobile;\n    //   }\n    // }\n    // return mobile;\n  }\n  render() {\n    const privateNote = getPrivateNote(this.booking.extras);\n    return (\n      <div class=\"card\">\n        <div class=\"p-1\">\n          <p>{this.booking.property.name || ''}</p>\n          <ir-label\n            labelText={`${locales.entries.Lcz_Source}:`}\n            content={this.booking.origin.Label}\n            image={{ src: this.booking.origin.Icon, alt: this.booking.origin.Label }}\n          ></ir-label>\n          <ir-label\n            renderContentAsHtml\n            labelText={`${locales.entries.Lcz_BookedOn}:`}\n            content={`${_formatDate(this.booking.booked_on.date)}&nbsp&nbsp&nbsp&nbsp${_formatTime(\n              this.booking.booked_on.hour.toString(),\n              this.booking.booked_on.minute.toString(),\n            )}`}\n          ></ir-label>\n          <ir-label labelText={`${locales.entries.Lcz_BookedBy}:`} content={`${this.booking.guest.first_name} ${this.booking.guest.last_name}`}>\n            {this.booking.guest?.nbr_confirmed_bookings > 1 && !this.booking.agent && (\n              <div class={'m-0 p-0'} slot=\"prefix\">\n                <ir-tooltip message={`${locales.entries.Lcz_BookingsNbr}`.replace('%1', this.booking.guest.nbr_confirmed_bookings.toString())} customSlot>\n                  <div class=\"d-flex align-items-center m-0 p-0\" slot=\"tooltip-trigger\" style={{ gap: '0.25rem' }}>\n                    <p class={'p-0 m-0'} style={{ color: '#FB0AAD' }}>\n                      {this.booking.guest.nbr_confirmed_bookings}\n                    </p>\n                    <ir-icons style={{ '--icon-size': '1rem' }} color=\"#FB0AAD\" name=\"heart-fill\"></ir-icons>\n                  </div>\n                </ir-tooltip>\n              </div>\n            )}\n            <ir-button\n              slot=\"suffix\"\n              variant=\"icon\"\n              icon_name={'edit'}\n              style={{ ...colorVariants.secondary, '--icon-size': '1.1rem' }}\n              onClickHandler={e => this.handleEditClick(e, 'guest')}\n            ></ir-button>\n          </ir-label>\n          {this.booking.guest.mobile && <ir-label labelText={`${locales.entries.Lcz_Phone}:`} content={this.renderPhoneNumber()}></ir-label>}\n          {!this.booking.agent && <ir-label labelText={`${locales.entries.Lcz_Email}:`} content={this.booking.guest.email}></ir-label>}\n          {this.booking.guest.alternative_email && <ir-label labelText={`${locales.entries.Lcz_AlternativeEmail}:`} content={this.booking.guest.alternative_email}></ir-label>}\n          {this.booking?.guest?.address && <ir-label labelText={`${locales.entries.Lcz_Address}:`} content={this.booking.guest.address}></ir-label>}\n          {this.userCountry && (\n            <ir-label\n              labelText={`${locales.entries.Lcz_Country}:`}\n              isCountryImage\n              content={this.userCountry.name}\n              image={{ src: this.userCountry.flag, alt: this.userCountry.name }}\n            ></ir-label>\n          )}\n          {this.booking.guest?.notes && <ir-label display=\"inline\" labelText={`${locales.entries.Lcz_GuestPrivateNote}:`} content={this.booking.guest?.notes}></ir-label>}\n          {this.booking.is_direct && <ir-label labelText={`${locales.entries.Lcz_ArrivalTime}:`} content={this.booking.arrival.description}></ir-label>}\n          {this.booking.promo_key && <ir-label labelText={`${locales.entries.Lcz_Coupon}:`} content={this.booking.promo_key}></ir-label>}\n          {/* {this.booking.agent && <ir-label labelText={`${locales.entries.Lcz_AgentCode?.split(':')[0]}:`} content={this.booking.agent.name}></ir-label>} */}\n          {this.booking.is_in_loyalty_mode && !this.booking.promo_key && (\n            <div class=\"d-flex align-items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n                <path\n                  fill=\"#fc6c85\"\n                  d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"\n                />\n              </svg>\n              <p class=\"m-0 p-0 ml-1\">{locales.entries.Lcz_LoyaltyDiscountApplied}</p>\n            </div>\n          )}\n          {this.booking.is_direct ? (\n            <ir-label labelText={`${locales.entries.Lcz_GuestRemark}:`} display=\"inline\" content={this.booking.remark}></ir-label>\n          ) : (\n            <ota-label\n              class={'m-0 p-0'}\n              label={`${locales.entries.Lcz_ChannelNotes || 'Channel notes'}:`}\n              remarks={this.booking.ota_notes}\n              maxVisibleItems={this.booking.ota_notes?.length}\n            ></ota-label>\n          )}\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <ir-label\n              labelText={`${locales.entries.Lcz_BookingPrivateNote}:`}\n              placeholder={locales.entries.Lcz_VisibleToHotelOnly}\n              content={privateNote}\n              display={privateNote ? 'inline' : 'flex'}\n              // ignore_content\n            ></ir-label>\n            <ir-button variant=\"icon\" icon_name=\"edit\" style={colorVariants.secondary} onClickHandler={e => this.handleEditClick(e, 'extra_note')}></ir-button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",".light-blue-bg {\n  background: #acecff;\n  padding: 0.1rem 0.3rem;\n  border-radius: 5px;\n  display: block;\n  max-width: 100px;\n  box-sizing: border-box;\n  display: inline-block;\n  overflow: hidden;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: default;\n}\n\n.room_statements {\n  display: block;\n  width: 100%; /* Ensure the container uses the full width */\n}\n.room_statements {\n  display: block;\n  width: 100%;\n}\n.room_statements span {\n  display: inline;\n  white-space: normal;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.room_statements b {\n  display: inline;\n  margin-right: 5px;\n}\n.payment-container {\n  position: absolute;\n  right: 1rem;\n  height: fit-content;\n}\n:host {\n  position: relative;\n}\n.sm-mr {\n  margin-right: 3px;\n}\n.subtotal_row {\n  padding-top: 8px;\n  font-weight: 600;\n}\n.room_actions_btns {\n  gap: 0.5rem;\n}\n.night-cost {\n  color: #7cbebe;\n}\n/* .cancelation {\n  max-width: 30%;\n} */\n.mx-0-5 {\n  margin-left: 2px !important;\n  margin-right: 2px !important;\n}\n.tax-width {\n  font-size: 10px;\n  /* flex-wrap: wrap; */\n}\n.sm-mb-1 {\n  margin-bottom: 5px !important;\n}\n.sm-mt-1 {\n  margin-top: 5px !important;\n}\n.mx-01 {\n  --m: 5px;\n  margin-right: var(--m) !important;\n  margin-left: var(--m) !important;\n}\n","import { Component, h, Prop, EventEmitter, Event, Listen, State, Element, Host, Fragment, Watch } from '@stencil/core';\nimport { _getDay } from '../functions';\nimport { Booking, IUnit, IVariations, Occupancy, Room, SharedPerson } from '@/models/booking.dto';\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport { formatName } from '@/utils/booking';\nimport locales from '@/stores/locales.store';\nimport calendar_data, { isSingleUnit } from '@/stores/calendar-data';\nimport { colorVariants } from '@/components/ui/ir-icons/icons';\nimport { formatAmount } from '@/utils/utils';\nimport { IEntries } from '@/models/IBooking';\nimport { BookingService } from '@/services/booking.service';\nimport { OpenSidebarEvent, RoomGuestsPayload } from '../types';\nexport type RoomModalReason = 'delete' | 'checkin' | 'checkout' | null;\n@Component({\n  tag: 'ir-room',\n  styleUrl: 'ir-room.css',\n  scoped: true,\n})\nexport class IrRoom {\n  @Element() element: HTMLIrRoomElement;\n  // Room Data\n  @Prop() booking: Booking;\n  @Prop() bookingIndex: number;\n  @Prop() isEditable: boolean;\n  @Prop() room: Room;\n  // Meal Code names\n  @Prop() mealCodeName: string;\n  @Prop() myRoomTypeFoodCat: string;\n  // Currency\n  @Prop() currency: string = 'USD';\n  @Prop() language: string = 'en';\n  @Prop() legendData;\n  @Prop() roomsInfo;\n  @Prop() bedPreferences: IEntries[];\n  // Booleans Conditions\n  @Prop() hasRoomEdit: boolean = false;\n  @Prop() hasRoomDelete: boolean = false;\n  @Prop() hasRoomAdd: boolean = false;\n  @Prop() hasCheckIn: boolean = false;\n  @Prop() hasCheckOut: boolean = false;\n\n  @State() collapsed: boolean = false;\n  @State() isLoading: boolean = false;\n  @State() modalReason: RoomModalReason = null;\n  @State() mainGuest: SharedPerson;\n  @State() isModelOpen: boolean = false;\n\n  // Event Emitters\n  @Event({ bubbles: true, composed: true }) deleteFinished: EventEmitter<string>;\n  @Event({ bubbles: true, composed: true }) pressCheckIn: EventEmitter;\n  @Event({ bubbles: true, composed: true }) pressCheckOut: EventEmitter;\n  @Event({ bubbles: true, composed: true }) editInitiated: EventEmitter<TIglBookPropertyPayload>;\n  @Event() resetbooking: EventEmitter<null>;\n  @Event() openSidebar: EventEmitter<OpenSidebarEvent<RoomGuestsPayload>>;\n\n  private modal: HTMLIrModalElement;\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.mainGuest = this.getMainGuest();\n  }\n  @Listen('clickHandler')\n  handleClick(e) {\n    let target = e.target;\n    if (target.id == 'checkin') {\n      this.pressCheckIn.emit(this.room);\n    } else if (target.id == 'checkout') {\n      this.pressCheckOut.emit(this.room);\n    }\n  }\n  @Watch('room')\n  handleRoomDataChange() {\n    this.mainGuest = this.getMainGuest();\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n  private handleEditClick() {\n    this.editInitiated.emit({\n      event_type: 'EDIT_BOOKING',\n      ID: this.room['assigned_units_pool'],\n      NAME: formatName(this.mainGuest?.first_name, this.mainGuest?.last_name),\n      EMAIL: this.booking.guest.email,\n      PHONE: this.booking.guest.mobile,\n      REFERENCE_TYPE: '',\n      FROM_DATE: this.booking.from_date,\n      TO_DATE: this.booking.to_date,\n      TITLE: `${locales.entries.Lcz_EditBookingFor} ${this.room?.roomtype?.name} ${(this.room?.unit as IUnit)?.name || ''}`,\n      defaultDateRange: {\n        dateDifference: this.room.days.length,\n        fromDate: new Date(this.room.from_date + 'T00:00:00'),\n        fromDateStr: this.getDateStr(new Date(this.room.from_date + 'T00:00:00')),\n        toDate: new Date(this.room.to_date + 'T00:00:00'),\n        toDateStr: this.getDateStr(new Date(this.room.to_date + 'T00:00:00')),\n        message: '',\n      },\n      bed_preference: this.room.bed_preference,\n      adult_child_offering: this.room.rateplan.selected_variation.adult_child_offering,\n      ADULTS_COUNT: this.room.rateplan.selected_variation.adult_nbr,\n      ARRIVAL: this.booking.arrival,\n      ARRIVAL_TIME: this.booking.arrival.description,\n      BOOKING_NUMBER: this.booking.booking_nbr,\n      cancelation: this.room.rateplan.cancelation,\n      channel_booking_nbr: this.booking.channel_booking_nbr,\n      CHILDREN_COUNT: this.room.rateplan.selected_variation.child_nbr,\n      COUNTRY: this.booking.guest.country_id,\n      ENTRY_DATE: this.booking.from_date,\n      FROM_DATE_STR: this.booking.format.from_date,\n      guarantee: this.room.rateplan.guarantee,\n      GUEST: this.mainGuest,\n      IDENTIFIER: this.room.identifier,\n      is_direct: this.booking.is_direct,\n      IS_EDITABLE: this.booking.is_editable,\n      NO_OF_DAYS: this.room.days.length,\n      NOTES: this.booking.remark,\n      origin: this.booking.origin,\n      POOL: this.room['assigned_units_pool'],\n      PR_ID: (this.room.unit as IUnit)?.id,\n      RATE: this.room.total,\n      RATE_PLAN: this.room.rateplan.name,\n      RATE_PLAN_ID: this.room.rateplan.id,\n      RATE_TYPE: this.room.roomtype.id,\n      ROOMS: this.booking.rooms,\n      SOURCE: this.booking.source,\n      SPLIT_BOOKING: false,\n      STATUS: 'IN-HOUSE',\n      TO_DATE_STR: this.booking.format.to_date,\n      TOTAL_PRICE: this.booking.total,\n      legendData: this.legendData,\n      roomsInfo: this.roomsInfo,\n      roomName: (this.room.unit as IUnit)?.name || '',\n      PICKUP_INFO: this.booking.pickup_info,\n      booking: this.booking,\n      currentRoomType: this.room,\n    });\n  }\n  private openModal(reason: RoomModalReason) {\n    if (!reason) {\n      return;\n    }\n    this.modalReason = reason;\n    this.modal.openModal();\n  }\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (!this.modalReason) {\n        return;\n      }\n      this.isLoading = true;\n      switch (this.modalReason) {\n        case 'delete':\n          await this.deleteRoom();\n          break;\n        case 'checkin':\n        case 'checkout':\n          await this.bookingService.handleExposedRoomInOut({\n            booking_nbr: this.booking.booking_nbr,\n            room_identifier: this.room.identifier,\n            status: this.modalReason === 'checkin' ? '001' : '002',\n          });\n          this.resetbooking.emit(null);\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      this.modalReason = null;\n      this.modal.closeModal();\n    }\n  }\n  private async deleteRoom() {\n    let oldRooms = [...this.booking.rooms];\n    oldRooms = oldRooms.filter(room => room.identifier !== this.room.identifier);\n\n    const body = {\n      assign_units: true,\n      check_in: true,\n      is_pms: true,\n      is_direct: true,\n      booking: {\n        booking_nbr: this.booking.booking_nbr,\n        from_date: this.booking.from_date,\n        to_date: this.booking.to_date,\n        remark: this.booking.remark,\n        property: this.booking.property,\n        source: this.booking.source,\n        currency: this.booking.currency,\n        arrival: this.booking.arrival,\n        guest: this.booking.guest,\n        rooms: oldRooms,\n      },\n      extras: this.booking.extras,\n      pickup_info: this.booking.pickup_info,\n    };\n    await this.bookingService.doReservation(body);\n    this.deleteFinished.emit(this.room.identifier);\n  }\n\n  private formatVariation({ adult_nbr, child_nbr }: IVariations, { infant_nbr }: Occupancy) {\n    const adultCount = adult_nbr > 0 ? adult_nbr : 0;\n    const childCount = child_nbr > 0 ? child_nbr : 0;\n    const infantCount = infant_nbr > 0 ? infant_nbr : 0;\n\n    const adultLabel = adultCount > 1 ? locales.entries.Lcz_Adults.toLowerCase() : locales.entries.Lcz_Adult.toLowerCase();\n    const childLabel = childCount > 1 ? locales.entries.Lcz_Children.toLowerCase() : locales.entries.Lcz_Child.toLowerCase();\n    const infantLabel = infantCount > 1 ? locales.entries.Lcz_Infants.toLowerCase() : locales.entries.Lcz_Infant.toLowerCase();\n\n    const parts = [];\n    if (adultCount > 0) {\n      parts.push(`${adultCount} ${adultLabel}`);\n    }\n    if (childCount > 0) {\n      parts.push(`${childCount} ${childLabel}`);\n    }\n    if (infantCount > 0) {\n      parts.push(`${infantCount} ${infantLabel}`);\n    }\n\n    return parts.join('&nbsp&nbsp&nbsp&nbsp');\n  }\n  private getSmokingLabel() {\n    if (this.booking.is_direct) {\n      if (!this.room.smoking_option) {\n        return null;\n      }\n      const currRT = calendar_data.roomsInfo.find(rt => rt.id === this.room.roomtype.id);\n      if (currRT) {\n        const smoking_option = currRT['smoking_option']?.allowed_smoking_options;\n        if (smoking_option) {\n          return smoking_option.find(s => s.code === this.room.smoking_option)?.description;\n        }\n        return null;\n      }\n      return null;\n    }\n    return this.room.ota_meta?.smoking_preferences;\n  }\n\n  private getBedName() {\n    if (this.booking.is_direct) {\n      const bed = this.bedPreferences.find(p => p.CODE_NAME === this.room?.bed_preference?.toString());\n      if (!bed) {\n        return;\n      }\n      return bed[`CODE_VALUE_${this.language}`] ?? bed.CODE_VALUE_EN;\n    }\n    return this.room.ota_meta?.bed_preferences;\n  }\n  private renderModalMessage() {\n    switch (this.modalReason) {\n      case 'delete':\n        return `${locales.entries['Lcz_AreYouSureDoYouWantToRemove ']} ${this.room.roomtype.name} ${this.room.unit ? (this.room.unit as IUnit).name : ''} ${\n          locales.entries.Lcz_FromThisBooking\n        }`;\n      case 'checkin':\n        return `Are you sure you want to Check In this unit?\n`;\n      case 'checkout':\n        return `Are you sure you want to Check Out this unit?`;\n      default:\n        return '';\n    }\n  }\n  private handleCheckIn() {\n    const { adult_nbr, children_nbr, infant_nbr } = this.room.occupancy;\n    if (this.room.sharing_persons.length < adult_nbr + children_nbr + infant_nbr) {\n      return this.showGuestModal();\n    }\n    return this.renderModalMessage();\n  }\n  private getMainGuest() {\n    return this.room.sharing_persons?.find(p => p.is_main);\n  }\n  render() {\n    const bed = this.getBedName();\n    return (\n      <Host class=\"p-1 d-flex m-0\">\n        <ir-button\n          variant=\"icon\"\n          id=\"drawer-icon\"\n          data-toggle=\"collapse\"\n          data-target={`#roomCollapse-${this.room.identifier?.split(' ').join('')}`}\n          aria-expanded={this.collapsed ? 'true' : 'false'}\n          aria-controls=\"myCollapse\"\n          class=\"mr-1\"\n          icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\n          onClickHandler={() => {\n            this.collapsed = !this.collapsed;\n          }}\n          style={{ '--icon-size': '1.6rem' }}\n        ></ir-button>\n\n        <div class=\"flex-fill m-0 \">\n          <div class=\"d-flex align-items-start justify-content-between sm-mb-1\">\n            <p class=\"m-0 p-0\">\n              <span class=\"m-0 p-0\" style={{ fontWeight: '600' }}>\n                {this.myRoomTypeFoodCat || ''}{' '}\n              </span>{' '}\n              {this.mealCodeName} {this.room.rateplan.is_non_refundable && ` - ${locales.entries.Lcz_NonRefundable}`}{' '}\n            </p>\n            {/*this.room.My_Room_type.My_Room_type_desc[0].CUSTOM_TXT || ''*/}\n            <div class=\"d-flex m-0 p-0 align-items-center room_actions_btns\">\n              <span class=\"p-0 m-0 font-weight-bold\">{formatAmount(this.currency, this.room['gross_total'])}</span>\n              {this.hasRoomEdit && this.isEditable && (\n                <ir-button\n                  id={`roomEdit-${this.room.identifier}`}\n                  variant=\"icon\"\n                  icon_name=\"edit\"\n                  // class=\"mx-1\"\n                  style={colorVariants.secondary}\n                  onClickHandler={this.handleEditClick.bind(this)}\n                ></ir-button>\n              )}\n              {this.hasRoomDelete && this.isEditable && (\n                <ir-button\n                  variant=\"icon\"\n                  onClickHandler={this.openModal.bind(this, 'delete')}\n                  id={`roomDelete-${this.room.identifier}`}\n                  icon_name=\"trash\"\n                  style={colorVariants.danger}\n                ></ir-button>\n              )}\n            </div>\n          </div>\n          <div class=\"d-flex align-items-center sm-mb-1\">\n            <ir-date-view\n              class=\"mr-1  flex-grow-1\"\n              style={{ width: 'fit-content' }}\n              from_date={this.room.from_date}\n              to_date={this.room.to_date}\n              showDateDifference={false}\n            ></ir-date-view>\n            {!isSingleUnit(this.room.roomtype.id) && calendar_data.is_frontdesk_enabled && this.room.unit && (\n              <div class={'d-flex justify-content-center align-items-center'}>\n                <ir-tooltip message={(this.room.unit as IUnit).name} customSlot>\n                  <span slot=\"tooltip-trigger\" class={`light-blue-bg  ${this.hasCheckIn || this.hasCheckOut ? 'mr-2' : ''} `}>\n                    {(this.room.unit as IUnit).name}\n                  </span>\n                </ir-tooltip>\n              </div>\n            )}\n            {this.hasCheckIn && (\n              <ir-button onClickHandler={this.handleCheckIn.bind(this)} id=\"checkin\" btn_color=\"outline\" size=\"sm\" text={locales.entries.Lcz_CheckIn}></ir-button>\n            )}\n            {this.hasCheckOut && (\n              <ir-button onClickHandler={this.openModal.bind(this, 'checkout')} id=\"checkout\" btn_color=\"outline\" size=\"sm\" text={locales.entries.Lcz_CheckOut}></ir-button>\n            )}\n          </div>\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n            <p class=\"m-0 p-0\">{`${this.mainGuest.first_name || ''} ${this.mainGuest.last_name || ''}`}</p>\n            {this.room.rateplan.selected_variation.adult_nbr > 0 &&\n              (this.room.unit ? (\n                <ir-tooltip message={'View guests'} class=\"m-0 p-0\" customSlot>\n                  <ir-button\n                    class=\"m-0 p-0\"\n                    slot=\"tooltip-trigger\"\n                    btn_color=\"link\"\n                    renderContentAsHtml\n                    onClickHandler={() => this.showGuestModal()}\n                    size=\"sm\"\n                    btnStyle={{ width: 'fit-content', margin: '0', padding: '0', fontSize: 'inherit', textAlign: 'center', lineHeight: '1.2' }}\n                    text={this.formatVariation(this.room.rateplan.selected_variation, this.room.occupancy)}\n                  ></ir-button>\n                </ir-tooltip>\n              ) : (\n                <span innerHTML={this.formatVariation(this.room.rateplan.selected_variation, this.room.occupancy)}></span>\n              ))}\n            {bed && <p class=\"m-0 p-0\">({bed})</p>}\n          </div>\n          <div class=\"collapse\" id={`roomCollapse-${this.room.identifier?.split(' ').join('')}`}>\n            <div class=\"d-flex sm-mb-1 sm-mt-1\">\n              <div class=\" sm-padding-top\">\n                <p class=\"sm-padding-right\" style={{ fontWeight: '600' }}>{`${locales.entries.Lcz_Breakdown}:`}</p>\n              </div>\n              <div class={'flex-fill'}>\n                <table>\n                  {this.room.days.length > 0 &&\n                    this.room.days.map(room => {\n                      return (\n                        <tr>\n                          <td class={'pr-2 text-right'}>{_getDay(room.date)}</td>\n                          <td class=\"text-right\">{formatAmount(this.currency, room.amount)}</td>\n                          {room.cost > 0 && room.cost !== null && <td class=\"pl-2 text-left night-cost\">{formatAmount(this.currency, room.cost)}</td>}\n                        </tr>\n                      );\n                    })}\n                  <tr class={''}>\n                    <th class=\"text-right pr-2 subtotal_row\">{locales.entries.Lcz_SubTotal}</th>\n                    <th class=\"text-right subtotal_row\">{formatAmount(this.currency, this.room.total)}</th>\n                    {this.room.gross_cost > 0 && this.room.gross_cost !== null && <th class=\"pl-2 text-right night-cost\">{formatAmount(this.currency, this.room.cost)}</th>}\n                  </tr>\n                  {this.booking.is_direct ? (\n                    <Fragment>\n                      {(() => {\n                        const filtered_data = calendar_data.taxes.filter(tx => tx.pct > 0);\n                        return filtered_data.map(d => {\n                          return (\n                            <tr>\n                              <td class=\"text-right pr-2\">\n                                {d.is_exlusive ? locales.entries.Lcz_Excluding : locales.entries.Lcz_Including} {d.name} ({d.pct}%)\n                              </td>\n                              <td class=\"text-right\">{formatAmount(this.currency, (this.room.total * d.pct) / 100)}</td>\n                              {this.room.gross_cost > 0 && this.room.gross_cost !== null && (\n                                <td class=\"pl-2 text-right night-cost\">{formatAmount(this.currency, (this.room.cost * d.pct) / 100)}</td>\n                              )}\n                            </tr>\n                          );\n                        });\n                      })()}\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      {(() => {\n                        const filtered_data = this.room.ota_taxes.filter(tx => tx.amount > 0);\n                        return filtered_data.map(d => {\n                          return (\n                            <tr>\n                              <td class=\"text-right pr-2\">\n                                {d.is_exlusive ? locales.entries.Lcz_Excluding : locales.entries.Lcz_Including} {d.name}\n                              </td>\n                              <td class=\"text-right\">\n                                {d.currency.symbol}\n                                {d.amount}\n                              </td>\n                            </tr>\n                          );\n                        });\n                      })()}\n                    </Fragment>\n                  )}\n                </table>\n              </div>\n            </div>\n            <ir-label labelText={`${locales.entries.Lcz_SmokingOptions}:`} display=\"inline\" content={this.getSmokingLabel()}></ir-label>\n            {this.booking.is_direct && (\n              <Fragment>\n                {this.room.rateplan.cancelation && (\n                  <ir-label labelText={`${locales.entries.Lcz_Cancellation}:`} display=\"inline\" content={this.room.rateplan.cancelation || ''} renderContentAsHtml></ir-label>\n                )}\n                {this.room.rateplan.guarantee && (\n                  <ir-label labelText={`${locales.entries.Lcz_Guarantee}:`} display=\"inline\" content={this.room.rateplan.guarantee || ''} renderContentAsHtml></ir-label>\n                )}\n              </Fragment>\n            )}\n            {this.room.ota_meta && (\n              <div>\n                <ir-label labelText={`${locales.entries.Lcz_MealPlan}:`} display=\"inline\" content={this.room.ota_meta.meal_plan}></ir-label>\n                <ir-label labelText={`${locales.entries.Lcz_Policies}:`} display=\"inline\" content={this.room.ota_meta.policies}></ir-label>\n              </div>\n            )}\n            {/* {this.bookingEvent.is_direct && <ir-label labelText={`${locales.entries.Lcz_MealPlan}:`} content={this.mealCodeName}></ir-label>} */}\n          </div>\n        </div>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={this.modalReason === 'delete' ? locales.entries.Lcz_Delete : locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={this.modalReason === 'delete' ? 'danger' : 'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={this.renderModalMessage()}\n        ></ir-modal>\n      </Host>\n    );\n  }\n  private showGuestModal(): void {\n    const { adult_nbr, children_nbr, infant_nbr } = this.room.occupancy;\n    this.openSidebar.emit({\n      type: 'room-guest',\n      payload: {\n        roomName: (this.room.unit as IUnit)?.name,\n        sharing_persons: this.room.sharing_persons,\n        totalGuests: adult_nbr + children_nbr + infant_nbr,\n        checkin: this.hasCheckIn,\n        identifier: this.room.identifier,\n      },\n    });\n  }\n}\n","import { SharedPerson } from '@/models/booking.dto';\nimport moment from 'moment';\nimport { FactoryArg, MaskedRange } from 'imask';\n\nexport const defaultGuest: SharedPerson = {\n  id: -1,\n  full_name: '',\n  country_id: null,\n  dob: '',\n  id_info: {\n    type: {\n      code: null,\n      description: null,\n    },\n    number: '',\n  },\n  address: null,\n  alternative_email: null,\n  cci: null,\n  city: null,\n  country: undefined,\n  country_phone_prefix: null,\n  email: null,\n  first_name: '',\n  last_name: '',\n  mobile: null,\n  nbr_confirmed_bookings: 0,\n  notes: null,\n  password: null,\n  subscribe_to_news_letter: null,\n};\n/**Date of birth mask for room guests  with min */\nexport const dateMask: FactoryArg = {\n  mask: Date,\n  pattern: 'DD/MM/YYYY',\n  lazy: false,\n  min: new Date(1900, 0, 1),\n  max: new Date(),\n  format: date => moment(date).format('DD/MM/YYYY'),\n  parse: str => moment(str, 'DD/MM/YYYY').toDate(),\n  autofix: true,\n  placeholderChar: '_',\n  blocks: {\n    YYYY: {\n      mask: MaskedRange,\n      from: 1970,\n      to: new Date().getFullYear(),\n      placeholderChar: 'Y',\n    },\n    MM: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      placeholderChar: 'M',\n    },\n    DD: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      placeholderChar: 'D',\n    },\n  },\n};\n",":host {\n  display: block;\n  height: 100%;\n  position: relative;\n  text-align: start !important;\n}\n.id-select {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right-width: 0;\n}\n:host {\n  display: block;\n  width: 100%;\n}\n\n.guest-grid > * {\n  height: 100%;\n}\n\n.guests-labels {\n  display: none;\n}\n.guest_label {\n  width: 100px;\n  color: #6b6f82;\n}\n.sharing_persons_label {\n  display: none;\n}\n.loading-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n.guest_document input {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.guests-labels *,\n.sharing_persons_label {\n  margin-bottom: 0.5rem;\n  padding-bottom: 0;\n}\n\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n  .sharing_persons_label {\n    display: block;\n  }\n  .guest_country_picker {\n    margin-bottom: 3px;\n  }\n  .guest-grid {\n    display: grid;\n    grid-template-columns: 2fr 2fr 2fr 2fr 5fr;\n    gap: 0.5rem;\n    align-items: flex-start;\n  }\n\n  .guest_label,\n  .sharing_persons_heading,\n  .main_guest_heading {\n    display: none;\n  }\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { SharedPerson, ZIdInfo, ZSharedPerson, ZSharedPersons } from '@/models/booking.dto';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, h } from '@stencil/core';\nimport moment from 'moment';\nimport { dateMask, defaultGuest } from './data';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry, IEntries } from '@/models/IBooking';\nimport { ZodError } from 'zod';\n@Component({\n  tag: 'ir-room-guests',\n  styleUrl: 'ir-room-guests.css',\n  scoped: true,\n})\nexport class IrRoomGuests {\n  /**\n   * The name of the room currently being displayed.\n   * Used to label the room in the user interface for clarity.\n   */\n  @Prop() roomName: string;\n\n  /**\n   * A unique identifier for the room.\n   * This is used to distinguish between rooms, especially when performing operations like saving or checking in guests.\n   */\n  @Prop() identifier: string;\n\n  /**\n   * An array of people sharing the room.\n   * Contains information about the {locales.entries.Lcz_MainGuest} and additional guests, such as their name, date of birth, {locales.entries.Lcz_Nationality}, and ID details.\n   */\n  @Prop() sharedPersons: SharedPerson[] = [];\n\n  /**\n   * The total number of guests for the room.\n   * Determines how many guest input forms to display in the UI.\n   */\n  @Prop() totalGuests: number = 0;\n\n  /**\n   * A list of available countries.\n   * Used to populate dropdowns for selecting the {locales.entries.Lcz_Nationality} of guests.\n   */\n  @Prop() countries: ICountry[];\n\n  /**\n   * A boolean indicating whether the room is in the process of being checked in.\n   * If true, additional actions like saving the room state as \"checked in\" are performed.\n   */\n  @Prop() checkIn: boolean;\n\n  /**\n   * The language used for displaying text content in the component.\n   * Defaults to English ('en'), but can be set to other supported languages.\n   */\n  @Prop() language: string = 'en';\n\n  /**\n   * A unique booking number associated with the room.\n   * This is used for backend operations like saving guest information or checking in the room.\n   */\n  @Prop() bookingNumber: string;\n\n  @State() guests: SharedPerson[] = [];\n  @State() idTypes: IEntries[] = [];\n  @State() error: Record<string, boolean> = {};\n  @State() isLoading: boolean;\n  @State() propertyCountry: ICountry;\n  @State() autoValidate = false;\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() resetBookingEvt: EventEmitter<null>;\n  @Event() updateRoomGuests: EventEmitter<{ identifier: string; guests: SharedPerson[] }>;\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n    this.initializeGuests();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      const [country, idTypes] = await Promise.all([this.bookingService.getUserDefaultCountry(), this.bookingService.getSetupEntriesByTableName('_ID_TYPE')]);\n      this.idTypes = idTypes;\n      if (country) {\n        this.propertyCountry = this.countries.find(c => c.id === country.COUNTRY_ID);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private initializeGuests(): void {\n    let guests = [];\n    if (this.totalGuests > this.sharedPersons.length) {\n      const defaultGuestsCount = this.totalGuests - this.sharedPersons.length;\n      guests = [\n        ...this.sharedPersons,\n        ...Array(defaultGuestsCount).fill({\n          ...defaultGuest,\n          id_info: {\n            ...defaultGuest.id_info,\n            type: {\n              code: this.idTypes[0]?.CODE_NAME || '001',\n              description: this.idTypes[0]?.CODE_VALUE_EN || '',\n            },\n            number: '',\n          },\n        }),\n      ];\n    } else {\n      guests = [...this.sharedPersons];\n    }\n    guests = guests.map(g => ({ ...g, dob: new Date(g.dob).getFullYear() === 1900 ? null : g.dob }));\n    this.guests = guests.map(g => ({ ...g, dob: g.dob ? moment(new Date(g.dob)).format('DD/MM/YYYY') : '', country_id: g.country ? g.country.id : null }));\n  }\n\n  private updateGuestInfo(index: number, params: Partial<SharedPerson>) {\n    const tempGuests = [...this.guests];\n    let tempGuest = tempGuests[index];\n    tempGuest = { ...tempGuest, ...params };\n    tempGuests[index] = tempGuest;\n    this.guests = [...tempGuests];\n  }\n\n  private async saveGuests() {\n    try {\n      this.error = {};\n      this.autoValidate = true;\n      ZSharedPersons.parse(this.guests);\n      await this.bookingService.handleExposedRoomGuests({\n        booking_nbr: this.bookingNumber,\n        identifier: this.identifier,\n        guests: this.guests.map(g => ({ ...g, dob: g.dob ? moment(g.dob, 'DD/MM/YYYY').format('YYYY-MM-DD') : null })),\n      });\n      if (this.checkIn) {\n        await this.bookingService.handleExposedRoomInOut({\n          booking_nbr: this.bookingNumber,\n          room_identifier: this.identifier,\n          status: '001',\n        });\n      }\n      this.closeModal.emit(null);\n      this.updateRoomGuests.emit({ identifier: this.identifier, guests: this.guests });\n      this.resetBookingEvt.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        let errors = {};\n        error.issues.forEach(e => {\n          errors[e.path[1]] = true;\n        });\n        this.error = { ...errors };\n      }\n    }\n  }\n\n  render() {\n    if (this.isLoading) {\n      return (\n        <div class={'loading-container'}>\n          <ir-spinner></ir-spinner>\n        </div>\n      );\n    }\n    return (\n      <div class=\"h-100 d-flex flex-column\" style={{ minWidth: '300px' }}>\n        <ir-title class=\"px-1\" onCloseSideBar={() => this.closeModal.emit(null)} label={`Room ${this.roomName}`} displayContext=\"sidebar\"></ir-title>\n        <section class={'d-flex flex-column px-1 h-100 '}>\n          <div class=\"\">\n            <div class=\"guest-grid guests-labels\">\n              <p class=\"\">{locales.entries.Lcz_MainGuest}</p>\n              <p class=\"\"></p>\n              <p class=\" \">{locales.entries.Lcz_DOB}</p>\n              <p class=\"\">{locales.entries.Lcz_Nationality}</p>\n              <p class=\" \">{locales.entries.Lcz_Documents}</p>\n            </div>\n            <h5 class=\"main_guest_heading\">{locales.entries.Lcz_MainGuest}</h5>\n            {this.guests.map((guest, idx) => (\n              <Fragment>\n                {idx === 1 && (\n                  <div class=\"d-flex mx-0 px-0\">\n                    <h5 class=\"mx-0 px-0 sharing_persons_heading\">{locales.entries.Lcz_PersonsSharingRoom}</h5>\n                    <p class=\"mx-0 px-0 sharing_persons_label\">{locales.entries.Lcz_PersonsSharingRoom}</p>\n                  </div>\n                )}\n                <div key={idx} class=\"guest-grid\">\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                    <p class=\"guest_label\">First name</p>\n                    <ir-input-text\n                      class=\"flex-grow-1 h-100\"\n                      id={`first_name_${idx}`}\n                      zod={ZSharedPerson.pick({ first_name: true })}\n                      error={!!this.error['first_name']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"first_name\"\n                      placeholder=\"First name\"\n                      onTextChange={e => this.updateGuestInfo(idx, { first_name: e.detail })}\n                      value={guest.first_name}\n                      maxLength={40}\n                    ></ir-input-text>\n                  </div>\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\n                    <p class=\"guest_label\">Last name</p>\n                    <ir-input-text\n                      maxLength={40}\n                      class=\"flex-grow-1 h-100\"\n                      id={`last_name_${idx}`}\n                      zod={ZSharedPerson.pick({ last_name: true })}\n                      error={!!this.error['last_name']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"last_name\"\n                      placeholder=\"Last name\"\n                      onTextChange={e => this.updateGuestInfo(idx, { last_name: e.detail })}\n                      value={guest.last_name}\n                    ></ir-input-text>\n                  </div>\n                  <div class=\"flex-grow-0 m-0 p-0 h-100 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_DOB}</p>\n                    <ir-input-text\n                      class=\"flex-grow-1 h-100\"\n                      id={`dob_${idx}`}\n                      zod={ZSharedPerson.pick({ dob: true })}\n                      error={!!this.error['dob']}\n                      autoValidate={this.autoValidate}\n                      wrapKey=\"dob\"\n                      mask={dateMask}\n                      placeholder=\"\"\n                      onTextChange={e => {\n                        this.updateGuestInfo(idx, { dob: e.detail });\n                      }}\n                      value={guest.dob}\n                    ></ir-input-text>\n                  </div>\n                  <div class=\" m-0 p-0 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_Nationality}</p>\n                    <div class=\"mx-0 flex-grow-1  h-100\">\n                      <ir-country-picker\n                        class=\"h-100\"\n                        propertyCountry={this.propertyCountry}\n                        id={`{locales.entries.Lcz_Nationality}_${idx}`}\n                        error={!!this.error['country_id'] && !guest.country_id}\n                        country={this.countries?.find(c => c.id?.toString() === guest.country?.id?.toString())}\n                        onCountryChange={e => this.updateGuestInfo(idx, { country_id: e.detail?.id?.toString() ?? null, country: e.detail })}\n                        countries={this.countries}\n                      ></ir-country-picker>\n                    </div>\n                  </div>\n                  <div class=\"flex-grow-1 m-0 p-0 d-flex align-items-center\">\n                    <p class=\"guest_label\">{locales.entries.Lcz_Documents}</p>\n                    <div class={' d-flex m-0 flex-grow-1 h-100'}>\n                      <ir-select\n                        selectForcedStyles={{\n                          borderTopRightRadius: '0px',\n                          borderBottomRightRadius: '0px',\n                          borderRight: '0',\n                        }}\n                        selectStyles={'rounded-top-0 rounded-bottom-0'}\n                        onSelectChange={e => {\n                          this.updateGuestInfo(idx, {\n                            id_info: {\n                              ...this.guests[idx].id_info,\n                              type: {\n                                code: e.detail,\n                                description: '',\n                              },\n                            },\n                          });\n                        }}\n                        selectedValue={guest.id_info.type.code}\n                        LabelAvailable={false}\n                        showFirstOption={false}\n                        data={this.idTypes?.map(t => ({ text: t[`CODE_VALUE_${this.language.toUpperCase()}`] ?? t[`CODE_VALUE_EN`], value: t.CODE_NAME }))}\n                      ></ir-select>\n                      <ir-input-text\n                        autoValidate={this.autoValidate}\n                        maxLength={18}\n                        placeholder=\"12345\"\n                        class=\"flex-grow-1 guest_document\"\n                        type=\"text\"\n                        inputForcedStyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}\n                        value={guest.id_info.number}\n                        zod={ZIdInfo.pick({ number: true })}\n                        error={!!this.error['number']}\n                        wrapKey=\"number\"\n                        inputStyles=\"form-control\"\n                        onTextChange={e =>\n                          this.updateGuestInfo(idx, {\n                            id_info: {\n                              ...this.guests[idx].id_info,\n                              number: e.detail,\n                            },\n                          })\n                        }\n                      ></ir-input-text>\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            ))}\n          </div>\n          <div class={'d-flex flex-column flex-sm-row mt-3 action-buttons '}>\n            <ir-button\n              onClick={() => this.closeModal.emit(null)}\n              btn_styles=\"justify-content-center\"\n              class={`mb-1 mb-sm-0 flex-fill mr-sm-1`}\n              icon=\"\"\n              text={locales.entries.Lcz_Cancel}\n              btn_color=\"secondary\"\n            ></ir-button>\n\n            <ir-button\n              btn_styles=\"justify-content-center align-items-center\"\n              class={'m-0 flex-fill text-center'}\n              icon=\"\"\n              isLoading={isRequestPending('/Handle_Exposed_Room_Guests')}\n              text={this.checkIn ? locales.entries.Lcz_CheckIn : locales.entries.Lcz_Save}\n              btn_color=\"primary\"\n              onClickHandler={this.saveGuests.bind(this)}\n            ></ir-button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","* {\n  margin: 0;\n  padding: 0;\n}\n:host {\n  display: flex;\n  margin-bottom: 5px;\n  gap: 5px;\n}\n.label_title {\n  min-width: max-content;\n  padding: 0;\n  margin: 0;\n  font-weight: 600;\n}\n.ota-message-list {\n  margin: 0 3px;\n  padding: 0;\n  overflow: hidden;\n  width: 100%;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  list-style: circle !important;\n}\n.ota-message-item {\n  width: 100%;\n  line-height: 1.5;\n  margin: 0;\n  padding: 0;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n}\n.ota-message-item::before {\n  content: '- ';\n  margin-right: 0.25rem;\n}\n\n.ota-visibility-toggle {\n  background: white;\n  color: var(--blue);\n  padding: 0;\n  margin: 0;\n  margin-left: 3px;\n  font-size: 12px;\n  border: 0;\n}\n.ota-visibility-toggle:hover {\n  color: #355270;\n}\n.ota-message-list {\n  margin: 0 3px;\n  padding: 0;\n  overflow: hidden;\n  width: 100%;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  white-space: normal;\n  list-style: none;\n}\n.ota-message-item {\n  width: 100%;\n  line-height: 1.5;\n  margin: 0 0 0 1.2em; /* indent for dash */\n  padding: 0;\n  word-wrap: break-word !important;\n  overflow-wrap: break-word !important;\n  white-space: normal;\n  position: relative;\n}\n/* .ota-message-item::before {\n  content: '-';\n  position: absolute;\n  left: 0;\n} */\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { IOtaNotes } from '@/models/booking.dto';\nimport locales from '@/stores/locales.store';\n@Component({\n  tag: 'ota-label',\n  styleUrl: 'ota-label.css',\n  scoped: true,\n})\nexport class OtaLabel {\n  @Prop() label: string;\n  @Prop() remarks: IOtaNotes[];\n  @Prop() maxVisibleItems: number = 3;\n\n  @State() showAll: boolean = false;\n\n  toggleShowAll = () => {\n    this.showAll = !this.showAll;\n  };\n\n  render() {\n    if (!this.remarks) {\n      return null;\n    }\n\n    const displayedRemarks = this.showAll ? this.remarks : this.remarks.slice(0, this.maxVisibleItems);\n\n    return (\n      <Host>\n        <p class={'label_title'}>{this.label}</p>\n        <ul class=\"ota-message-list\">\n          {displayedRemarks.map((remark, index) => (\n            <li key={v4()} class=\"ota-message-item\">\n              {remark.statement}{' '}\n              {this.remarks.length > this.maxVisibleItems && index === displayedRemarks.length - 1 && (\n                <button class=\"ota-visibility-toggle\" onClick={this.toggleShowAll}>\n                  {this.showAll ? locales.entries.Lcz_ShowLess : locales.entries.Lcz_ShowMore}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n        {/* Show toggle button if there are more remarks than `maxVisibleItems` */}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}