{"version":3,"names":["irPriceInputCss","IrPriceInputStyle0","IrPriceInput","constructor","hostRef","this","autoValidate","placeholder","value","required","handleInputChange","event","target","textChange","emit","handleBlur","validateInput","parseFloat","toFixed","inputBlur","handleFocus","inputFocus","componentWillLoad","el","id","v4","hasSpecialClass","className","classList","contains","zod","parse","wrapKey","error","console","log","render","h","key","class","label","labelStyle","htmlFor","currency","disabled","inputStyle","onInput","onBlur","onFocus","type","step","_a","ariaLabel","_b","ariaDescription"],"sources":["src/components/ui/ir-price-input/ir-price-input.css?tag=ir-price-input&encapsulation=scoped","src/components/ui/ir-price-input/ir-price-input.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  --ir-input-border-color: #cacfe7;\r\n  flex: 1 1 0%;\r\n}\r\n\r\n:host .input-group-text {\r\n  border-color: var(--ir-input-border-color);\r\n}\r\n:host .form-control,\r\n.currency-label {\r\n  font-size: 14px !important;\r\n}\r\n\r\n.ir-bl-lbl-none,\r\n.ir-bl-input-none {\r\n  border-top-left-radius: 0 !important;\r\n  border-bottom-left-radius: 0 !important;\r\n}\r\n.ir-br-lbl-none,\r\n.ir-br-input-none {\r\n  border-top-right-radius: 0 !important;\r\n  border-bottom-right-radius: 0 !important;\r\n}\r\n.ir-br-none {\r\n  border-right: none;\r\n}\r\n.ir-bl-none {\r\n  border-left: none;\r\n}\r\n\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n  padding: 0 !important;\r\n}\r\n:host([class='special-style']) .rate-input {\r\n  background: black !important;\r\n}\r\n.rate-input {\r\n  font-size: 0.875rem;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  box-sizing: border-box;\r\n  border-left: 0;\r\n  padding-left: 0px !important;\r\n  border-top-left-radius: 0 !important;\r\n  border-bottom-left-radius: 0 !important;\r\n}\r\n\r\n.currency-label.with-label {\r\n  border-radius: 0;\r\n}\r\n\r\n.currency-label {\r\n  box-sizing: border-box;\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.875rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  pointer-events: none;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.currency-label.disabled,\r\n.rate-input:disabled {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n\r\n.price-input-group:focus-within .currency-label {\r\n  border-top: 1px solid #1e9ff2;\r\n  border-bottom: 1px solid #1e9ff2;\r\n  border-left: 1px solid #1e9ff2;\r\n}\r\n:host([data-state='error']) .currency-label,\r\n:host([data-state='error']) .rate-input,\r\n.error {\r\n  border-color: var(--red, #ff4961) !important;\r\n}\r\n.price-input:focus {\r\n  border-right-width: 1px !important;\r\n}\r\n\r\n.is-invalid {\r\n  background-image: none !important;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Prop, State, h } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { ZodType } from 'zod';\r\n\r\n@Component({\r\n  tag: 'ir-price-input',\r\n  styleUrl: 'ir-price-input.css',\r\n  scoped: true,\r\n})\r\nexport class IrPriceInput {\r\n  @Element() el: HTMLIrPriceInputElement;\r\n\r\n  /** The label for the input, optional */\r\n  @Prop() label?: string;\r\n\r\n  /** Extra classnames for the input, optional */\r\n  @Prop() inputStyle?: string;\r\n\r\n  /** Extra classnames for the label, optional */\r\n  @Prop() labelStyle?: string;\r\n\r\n  /** The disabled for the input, optional */\r\n  @Prop() disabled?: boolean;\r\n\r\n  /** The Currency for the input, optional */\r\n  @Prop() currency?: string;\r\n\r\n  /** The AutoValidate for the input, optional */\r\n  @Prop() autoValidate?: boolean = true;\r\n\r\n  /** Indicates the key to wrap the value (e.g., 'price' or 'cost') */\r\n  @Prop() wrapKey?: string;\r\n\r\n  /**\r\n   * A Zod schema for validating the input\r\n   * Example: z.coerce.number()\r\n   */\r\n  @Prop() zod?: ZodType<any, any>;\r\n\r\n  /** Placeholder text for the input */\r\n  @Prop() placeholder: string = '';\r\n\r\n  /** Initial value for the input */\r\n  @Prop({ mutable: true }) value: string = '';\r\n\r\n  /** Whether the input is required */\r\n  @Prop() required: boolean = false;\r\n\r\n  /** Minimum value for the price */\r\n  @Prop() minValue?: number;\r\n\r\n  /** Maximum value for the price */\r\n  @Prop() maxValue?: number;\r\n\r\n  /** Error*/\r\n  @State() error: boolean;\r\n\r\n  /** Emits the current value on change */\r\n  @Event() textChange: EventEmitter<string>;\r\n\r\n  /** Emits the current value on blur */\r\n  @Event() inputBlur: EventEmitter<string>;\r\n\r\n  /** Emits the current value on focus */\r\n  @Event() inputFocus: EventEmitter<void>;\r\n\r\n  private id: string;\r\n\r\n  componentWillLoad() {\r\n    if (this.el.id) {\r\n      this.id = this.el.id;\r\n    } else {\r\n      this.id = v4();\r\n    }\r\n  }\r\n\r\n  private hasSpecialClass(className: string): boolean {\r\n    return this.el.classList.contains(className);\r\n  }\r\n\r\n  private validateInput(value: string): void {\r\n    if (!this.autoValidate) {\r\n      return;\r\n    }\r\n    if (this.zod) {\r\n      try {\r\n        this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value); // Validate the value using the Zod schema\r\n        this.error = false; // Clear the error if valid\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.error = true; // Set the error message\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleInputChange = (event: Event): void => {\r\n    const target = event.target as HTMLInputElement;\r\n    this.value = target.value;\r\n    // Emit the change event\r\n    this.textChange.emit(this.value);\r\n  };\r\n\r\n  private handleBlur = (): void => {\r\n    this.validateInput(this.value);\r\n    // Emit the blur event\r\n    if (this.value) {\r\n      this.value = parseFloat(this.value).toFixed(2);\r\n    }\r\n    this.inputBlur.emit(this.value);\r\n  };\r\n\r\n  private handleFocus = (): void => {\r\n    // Emit the focus event\r\n    this.inputFocus.emit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <fieldset class=\"input-group price-input-group m-0 p-0\">\r\n        {this.label && (\r\n          <div class=\"input-group-prepend\">\r\n            <span\r\n              class={`input-group-text \r\n                ${this.labelStyle}\r\n              ${this.hasSpecialClass('ir-bl-lbl-none') ? 'ir-bl-lbl-none' : ''}\r\n              ${this.hasSpecialClass('ir-br-lbl-none') ? 'ir-br-lbl-none' : ''}\r\n              ${this.hasSpecialClass('ir-br-none') ? 'ir-br-none' : ''} \r\n              ${this.hasSpecialClass('ir-bl-none') ? 'ir-bl-none' : ''} \r\n              `}\r\n            >\r\n              <label class={'p-0 m-0 '} htmlFor={this.id}>\r\n                {this.label}\r\n              </label>\r\n            </span>\r\n          </div>\r\n        )}\r\n        <div class=\"position-relative has-icon-left rate-input-container\">\r\n          {this.currency && (\r\n            <div class={`input-group-prepend`}>\r\n              <span class={`input-group-text ${this.disabled ? 'disabled' : ''} currency-label ${this.error ? 'error' : ''} ${this.label ? 'with-label' : ''}`}>\r\n                {this.currency}\r\n              </span>\r\n            </div>\r\n          )}\r\n          <input\r\n            disabled={this.disabled}\r\n            id={this.id}\r\n            class={`form-control input-sm rate-input \r\n              ${this.inputStyle}\r\n              ${this.hasSpecialClass('ir-br-input-none') ? 'ir-br-input-none' : ''} \r\n              ${this.hasSpecialClass('ir-bl-input-none') ? 'ir-bl-input-none' : ''} \r\n              ${this.error ? 'error' : ''} py-0 m-0 ${this.currency ? 'ir-bl-none' : ''}`}\r\n            onInput={this.handleInputChange}\r\n            onBlur={this.handleBlur}\r\n            onFocus={this.handleFocus}\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            aria-label={this.el.ariaLabel ?? 'price-input'}\r\n            aria-describedby={this.el.ariaDescription ?? 'price-input'}\r\n            value={this.value}\r\n          />\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"6FAAA,MAAMA,EAAkB,opEACxB,MAAAC,EAAeD,E,MCQFE,EAAY,MALzB,WAAAC,CAAAC,G,6HAwBUC,KAAAC,aAAyB,KAYzBD,KAAAE,YAAsB,GAGLF,KAAAG,MAAgB,GAGjCH,KAAAI,SAAoB,MAiDpBJ,KAAAK,kBAAqBC,IAC3B,MAAMC,EAASD,EAAMC,OACrBP,KAAKG,MAAQI,EAAOJ,MAEpBH,KAAKQ,WAAWC,KAAKT,KAAKG,MAAM,EAG1BH,KAAAU,WAAa,KACnBV,KAAKW,cAAcX,KAAKG,OAExB,GAAIH,KAAKG,MAAO,CACdH,KAAKG,MAAQS,WAAWZ,KAAKG,OAAOU,QAAQ,E,CAE9Cb,KAAKc,UAAUL,KAAKT,KAAKG,MAAM,EAGzBH,KAAAe,YAAc,KAEpBf,KAAKgB,WAAWP,MAAM,C,CA7CxB,iBAAAQ,GACE,GAAIjB,KAAKkB,GAAGC,GAAI,CACdnB,KAAKmB,GAAKnB,KAAKkB,GAAGC,E,KACb,CACLnB,KAAKmB,GAAKC,G,EAIN,eAAAC,CAAgBC,GACtB,OAAOtB,KAAKkB,GAAGK,UAAUC,SAASF,E,CAG5B,aAAAX,CAAcR,GACpB,IAAKH,KAAKC,aAAc,CACtB,M,CAEF,GAAID,KAAKyB,IAAK,CACZ,IACEzB,KAAKyB,IAAIC,MAAM1B,KAAK2B,QAAU,CAAE,CAAC3B,KAAK2B,SAAUxB,GAAUA,GAC1DH,KAAK4B,MAAQ,K,CACb,MAAOA,GACPC,QAAQC,IAAIF,GACZ5B,KAAK4B,MAAQ,I,GA0BnB,MAAAG,G,QACE,OACEC,EAAA,YAAAC,IAAA,2CAAUC,MAAM,yCACblC,KAAKmC,OACJH,EAAA,OAAAC,IAAA,2CAAKC,MAAM,uBACTF,EAAA,QAAAC,IAAA,2CACEC,MAAO,sCACHlC,KAAKoC,6BACPpC,KAAKqB,gBAAgB,kBAAoB,iBAAmB,qBAC5DrB,KAAKqB,gBAAgB,kBAAoB,iBAAmB,qBAC5DrB,KAAKqB,gBAAgB,cAAgB,aAAe,sBACpDrB,KAAKqB,gBAAgB,cAAgB,aAAe,uBAGtDW,EAAA,SAAAC,IAAA,2CAAOC,MAAO,WAAYG,QAASrC,KAAKmB,IACrCnB,KAAKmC,SAKdH,EAAA,OAAAC,IAAA,2CAAKC,MAAM,wDACRlC,KAAKsC,UACJN,EAAA,OAAAC,IAAA,2CAAKC,MAAO,uBACVF,EAAA,QAAAC,IAAA,2CAAMC,MAAO,oBAAoBlC,KAAKuC,SAAW,WAAa,qBAAqBvC,KAAK4B,MAAQ,QAAU,MAAM5B,KAAKmC,MAAQ,aAAe,MACzInC,KAAKsC,WAIZN,EAAA,SAAAC,IAAA,2CACEM,SAAUvC,KAAKuC,SACfpB,GAAInB,KAAKmB,GACTe,MAAO,oDACHlC,KAAKwC,6BACLxC,KAAKqB,gBAAgB,oBAAsB,mBAAqB,sBAChErB,KAAKqB,gBAAgB,oBAAsB,mBAAqB,sBAChErB,KAAK4B,MAAQ,QAAU,eAAe5B,KAAKsC,SAAW,aAAe,KACzEG,QAASzC,KAAKK,kBACdqC,OAAQ1C,KAAKU,WACbiC,QAAS3C,KAAKe,YACd6B,KAAK,SACLC,KAAK,OAAM,cACCC,EAAA9C,KAAKkB,GAAG6B,aAAS,MAAAD,SAAA,EAAAA,EAAI,cAAa,oBAC5BE,EAAAhD,KAAKkB,GAAG+B,mBAAe,MAAAD,SAAA,EAAAA,EAAI,cAC7C7C,MAAOH,KAAKG,S","ignoreList":[]}