{"version":3,"names":["irBookingEmailLogsCss","IrBookingEmailLogsStyle0","IrBookingEmailLogs","constructor","hostRef","this","token","Token","componentWillLoad","ticket","setToken","handleTicketChange","render","h","Host","key","class","handledEndpoints","style","gap","inputContainerStyle","margin","value","bookingNumber","onTextChange","e","detail","placeholder","size","text","onClickHandler","async","data","axios","post","BOOK_NBR","ExceptionMsg","My_Result","JSON","stringify","getAllParams","params","URLSearchParams","window","location","search","out","entries","irBookingListingCss","IrBookingListingStyle0","IrBookingListing","language","rowCount","isLoading","currentPage","totalPages","oldStartValue","editBookingItem","showCost","bookingListingService","BookingListingService","bookingService","BookingService","roomService","RoomService","statusColors","baseUrl","setBaseUrl","updateUserSelection","booking_listing","initializeApp","onBookingListingChange","newValue","newTotal","total_count","Math","ceil","some","booking","financial","gross_cost","ticketChanged","oldValue","propertyid","p","Error","propertyId","propertyData","getExposedProperty","id","aname","is_backend","requests","getSetupEntriesByTableNameMulti","getExposedBookingsCriteria","fetchLanguage","push","setupEntries","Promise","all","pay_type","pay_type_group","pay_method","groupEntryTablesResult","paymentEntries","groups","methods","types","getExposedBookings","Object","assign","userSelection","is_to_export","error","console","handleSideBarToggle","geSearchFiltersFromParams","log","obj","Number","s","status","filter","from","to","updateUserSelections","getPaginationBounds","totalCount","startItem","endItem","openModal","listingModalTimeout","setTimeout","listingModal","el","querySelector","editBooking","disconnectedCallback","clearTimeout","handleResetData","stopImmediatePropagation","stopPropagation","handleResetStoreData","handleBookingChanged","bookings","map","b","booking_nbr","renderItemRange","locales","Lcz_View","Lcz_Of","updateData","start_row","end_row","calculateTotalPersons","sumOfOccupancy","adult_nbr","children_nbr","infant_nbr","rooms","reduce","prev","cur","occupancy","scope","_a","Lcz_Booking","_b","Lcz_BookedOn","_c","Lcz_GuestSource","_d","Lcz_Services","_e","Lcz_Dates","_f","Lcz_Amount","customSlot","message","_g","Lcz_BookingBalance","_h","Lcz_ClickToSettle","slot","_j","Lcz_Balance","_k","Lcz_Cost","_l","Lcz_Status","length","colSpan","_m","Lcz_NoDataAvailable","_o","confirmationBG","is_requested_to_cancel","code","lastManipulation","ota_manipulations","totalPersons","btn_color","btnStyle","padding","cause","channel_booking_nbr","moment","booked_on","date","format","_formatTime","hour","toString","minute","width","src","origin","Icon","alt","Label","guest","first_name","last_name","labelStyle","nbr_confirmed_bookings","agent","Lcz_BookingsNbr","replace","color","name","Lcz_P","getPrivateNote","extras","is_in_loyalty_mode","promo_key","xmlns","viewBox","height","Lcz_LoyaltyDiscountApplied","fill","d","stroke","Lcz_Coupon","room","roomtype","unit","isSingleUnit","substring","extra_services","Lcz_ExtraServices","from_date","to_date","whiteSpace","formatAmount","currency","symbol","gross_total","due_amount","onClick","cancelation_penality_as_if_today","Fragment","abs","Lcz_CancellationRequested","description","events","type","toLowerCase","marginTop","marginBottom","trigger","content","user","title","variant","icon_name","btn_disabled","selectedValue","showFirstOption","onSelectChange","Array","_","i","onModalClosed","onIrSidebarToggle","bind","open","includes","showCloseButton","sidebarStyles","_p","background","_q","hasPrint","hasReceipt","is_from_front_desk","hasRoomEdit","hasRoomDelete","hasCloseButton","onCloseSidebar","hasRoomAdd","_r","isInSideBar","headerShown","_t","_s","email","_v","_u","onCloseSideBar","PropertyService","results","calendar_data","adultChildConstraints","adult_child_constraints","allowedBookingSources","allowed_booking_sources","allowed_payment_methods","is_vacation_rental","pickup_service","max_nights","roomsInfo","roomtypes","taxes","country","is_automatic_check_in_out","tax_statement","is_frontdesk_enabled","is_pms_enabled","spitTime","time_constraints","check_out_till","split","checkin_checkout_hours","offset","city","gmt_offset","getCountrySales","is_export_to_excel","downloadFile","My_Params_Get_Country_Sales","Link_excel","getDailyRevenueReport","My_Params_Get_Daily_Revenue_Report","setExposedCleaningFrequency","getMonthlyStats","My_Params_Get_Monthly_Stats","irDailyRevenueCss","IrDailyRevenueStyle0","IrDailyRevenue","filters","users","tokenService","propertyService","handleSidebarClose","sideBarEvent","handleOpenSidebar","handleFetchNewReports","getPaymentReports","handleResetBooking","renderSidebarBody","property_id","payload","isPageLoading","include_units_hk_status","groupPaymentsByName","payments","groupedPayment","Map","payment","payTypeCode","payMethodCode","get","set","sort","a","aNum","bNum","isNaN","localeCompare","isExportToExcel","excludeYesterday","getReportObj","report","method","METHOD","PAY_TYPE_CODE","PAY_METHOD_CODE","amount","AMOUNT","DATE","HOUR","MINUTE","USER","CURRENCY","bookingNbr","BOOKING_NBR","v4","add","previousDateGroupedPayments","Lcz_Export","iconPosition","icon_style","groupedPayments","Boolean","irHkTasksCss","IrHkTasksStyle0","IrHkTasks","isCleaningLoading","selectedDuration","selectedHouseKeeper","selectedRoom","archiveOpened","hkNameCache","houseKeepingService","HouseKeepingService","table_sorting","init","handleCloseSidebar","isSidebarOpen","handleSortingChanged","field","direction","handleSkipSelectedTask","modalCauses","task","modal","setLoading","getExposedHKSetup","tasksResult","getHkTasks","housekeepers","cleaning_frequency","housekeeping_store","hk_criteria","cleaning_frequencies","dusty_window","dusty_periods","highlight_window","highlight_checkin_options","tasks","updateTasks","buildHousekeeperNameCache","forEach","hk","updateTasksStore","t","housekeeper","hkm_id","hkName","find","handleHeaderButtonPress","sortingArray","url","fetchTasksWithFilters","handleSelectedTaskCleaningEvent","handleModalConfirmation","hkTasksStore","selectedTasks","editHkSkip","COMMENT","HK_SKIP_ID","HK_SKIP_REASON_CODE","PR_ID","executeHKAction","actions","unit_id","clearSelectedTasks","closeModal","applyFilters","isApplyFiltersLoading","export_to_excel","cleaning_periods","dusty_units","highlight_check_ins","onApplyFilters","onRowSelectChange","updateSelectedTasks","autoClose","ref","onConfirmModal","onCancelModal","iconAvailable","icon","leftBtnText","Lcz_Cancel","rightBtnText","Lcz_Confirm","leftBtnColor","rightBtnColor","modalTitle","Lcz_Confirmation","modalBody","getToken","irHousekeepingCss","IrHousekeepingStyle0","IrHousekeeping","include_sales_rate_plans","updateHKStore","housekeeping_enabled","selectedCleaningFrequency","saveAutomaticCheckInCheckout","SetAutomaticCheckInOut","default_properties","flag","toast","emit","position","saveCleaningFrequency","Lcz_HouseKeepingAndCheckInSetup","borderShown","label","Lcz_CheckInOutGuestsAutomatically","Lcz_YesAsPerPropertyPolicy","Lcz_NoIWillDoItManually","Lcz_CleaningFrequency","v","isRequestPending","irMonthlyBookingsReportCss","IrMonthlyBookingsReportStyle0","IrMonthlyBookingsReport","reports","baseFilters","firstOfMonth","startOf","lastOfMonth","endOf","include_previous_year","handleApplyFiltersChange","getReports","day","Date","units_booked","Units_booked","occupancy_percent","Occupancy","adr","ADR","rooms_revenue","Rooms_Revenue","total_guests","Total_Guests","currentReports","enrichedReports","DailyStats","rest","__rest$1","stats","previousYearReports","formattedReports","current","previous","last_year","alignItems","Occupancy_Difference_From_Previous_Month","cardTitle","AverageOccupancy","toFixed","subtitle","TotalUnitsBooked","PeakDays","pd","concat","join","max","OccupancyPercent","irSalesByCountryCss","IrSalesByCountryStyle0","IrSalesByCountry","countries","FROM_DATE","TO_DATE","BOOK_CASE","WINDOW","salesFilters","getCountries","mappedCountries","formatSalesData","COUNTRY","country_id","COUNTRY_ID","nights","NIGHTS","percentage","PCT","revenue","REVENUE","number_of_guests","filterParams","__rest","currentSales","AC_ID","shouldFetchPreviousYear","enrichedSales","previousYearSales","subtract","record","salesData","salesReports","records","irUserManagementCss","IrUserManagementStyle0","IrUserManagement","isSuperAdmin","allowedUsersTypes","userService","UserService","userTypes","superAdminId","fetchUsers","fetchUserTypes","socket","io","on","msg","handleSocketMessage","msgAsObject","parse","REASON","KEY","PAYLOAD","result","reasonHandlers","EMAIL_VERIFIED","updateUserVerificationStatus","handler","call","warn","idx","findIndex","u","is_email_verified","getExposedPropertyUsers","u1","u2","priority","p1","p2","username","res","getSetupEntriesByTableName","getLov","allowedUsers","allowed_user_types","toUpperCase","f","CODE_NAME","disconnect","suppressToastEndpoints","Lcz_ExtranetUsers","baseUserTypeCode","userTypeCode","haveAdminPrivileges"],"sources":["src/components/ir-booking-email-logs/ir-booking-email-logs.css?tag=ir-booking-email-logs&encapsulation=scoped","src/components/ir-booking-email-logs/ir-booking-email-logs.tsx","src/utils/browserHistory.ts","src/components/ir-booking-listing/ir-booking-listing.css?tag=ir-booking-listing&encapsulation=scoped","src/components/ir-booking-listing/ir-booking-listing.tsx","src/services/property.service.ts","src/components/ir-daily-revenue/ir-daily-revenue.css?tag=ir-daily-revenue&encapsulation=scoped","src/components/ir-daily-revenue/ir-daily-revenue.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx","src/components/ir-housekeeping/ir-housekeeping.css?tag=ir-housekeeping&encapsulation=scoped","src/components/ir-housekeeping/ir-housekeeping.tsx","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.css?tag=ir-monthly-bookings-report&encapsulation=scoped","src/components/ir-monthly-bookings-report/ir-monthly-bookings-report.tsx","src/components/ir-sales-by-country/ir-sales-by-country.css?tag=ir-sales-by-country&encapsulation=scoped","src/components/ir-sales-by-country/ir-sales-by-country.tsx","src/components/ir-user-management/ir-user-management.css?tag=ir-user-management&encapsulation=scoped","src/components/ir-user-management/ir-user-management.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport axios from 'axios';\n\n@Component({\n  tag: 'ir-booking-email-logs',\n  styleUrl: 'ir-booking-email-logs.css',\n  scoped: true,\n})\nexport class IrBookingEmailLogs {\n  @Prop() ticket: string;\n\n  @State() data: any[];\n  @State() bookingNumber: string;\n\n  private token = new Token();\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  @Watch('ticket')\n  handleTicketChange() {\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"p-1\">\n        <ir-interceptor handledEndpoints={['/Get_Email_log_By_BOOK_NBR']}></ir-interceptor>\n        <ir-toast></ir-toast>\n        <div class=\"d-flex align-items-center mb-1\" style={{ gap: '0.5rem' }}>\n          <ir-input-text\n            class=\"m-0\"\n            inputContainerStyle={{ margin: '0' }}\n            value={this.bookingNumber}\n            onTextChange={e => (this.bookingNumber = e.detail)}\n            placeholder=\"booking number\"\n          ></ir-input-text>\n          <ir-button\n            size=\"sm\"\n            text=\"search\"\n            onClickHandler={async () => {\n              const { data } = await axios.post('/Get_Email_log_By_BOOK_NBR', {\n                BOOK_NBR: this.bookingNumber,\n              });\n              if (data.ExceptionMsg) {\n                return;\n              }\n              this.data = data.My_Result;\n            }}\n          ></ir-button>\n        </div>\n        <p>{JSON.stringify(this.data, null, 2)}</p>\n      </Host>\n    );\n  }\n}\n","// src/utils/browserHistory.ts\n\n/**\n * A small utility for reading and writing browser history\n * and manipulating URL search params in a type-safe way.\n */\n\ntype Parser<T> = (value: string | null) => T;\n\n// Common parsers/serializers\nexport const ParamTypes = {\n  string: {\n    parse: (v: string | null): string => v ?? '',\n    serialize: (v: string): string => v,\n  },\n  number: {\n    parse: (v: string | null): number => {\n      if (v == null || v === '') return NaN;\n      const n = Number(v);\n      return isNaN(n) ? NaN : n;\n    },\n    serialize: (v: number): string => String(v),\n  },\n  boolean: {\n    parse: (v: string | null): boolean => v === 'true',\n    serialize: (v: boolean): string => (v ? 'true' : 'false'),\n  },\n} as const;\n\n/**\n * Read a single search‑param, parse it, and return a typed value.\n * Falls back to defaultValue if missing or parse fails.\n */\nexport function getParam<T>(key: string, { parse }: { parse: Parser<T> }, defaultValue: T): T {\n  const params = new URLSearchParams(window.location.search);\n  const raw = params.get(key);\n  try {\n    if (raw == null) return defaultValue;\n    return parse(raw);\n  } catch {\n    return defaultValue;\n  }\n}\n\n/** Helpers for the three built‑in types */\nexport function getStringParam(key: string, defaultValue = ''): string {\n  return getParam(key, ParamTypes.string, defaultValue);\n}\n\nexport function getNumberParam(key: string, defaultValue = NaN): number {\n  return getParam(key, ParamTypes.number, defaultValue);\n}\n\nexport function getBooleanParam(key: string, defaultValue = false): boolean {\n  return getParam(key, ParamTypes.boolean, defaultValue);\n}\n\n/**\n * Read all current search params into a Record<string, string>\n */\nexport function getAllParams(): Record<string, string> {\n  const params = new URLSearchParams(window.location.search);\n  const out: Record<string, string> = {};\n  for (const [key, value] of params.entries()) {\n    out[key] = value;\n  }\n  return out;\n}\n\ninterface SetParamsOptions {\n  /** if true, uses replaceState instead of pushState */\n  replace?: boolean;\n}\n\n/**\n * Update one or more search params.\n * Pass null to delete a param.\n * By default uses history.pushState; set replace: true to call replaceState.\n */\nexport function setParams(updates: Record<string, string | number | boolean | null>, options: SetParamsOptions = {}): void {\n  const params = new URLSearchParams(window.location.search);\n\n  for (const [key, value] of Object.entries(updates)) {\n    if (!value) {\n      params.delete(key);\n    } else {\n      params.set(key, String(value));\n    }\n  }\n\n  const newSearch = params.toString();\n  const newUrl = window.location.pathname + (newSearch ? `?${newSearch}` : '') + window.location.hash;\n\n  if (options.replace) {\n    window.history.replaceState(window.history.state, '', newUrl);\n  } else {\n    window.history.pushState(window.history.state, '', newUrl);\n  }\n}\n\n/**\n * Push a new history entry.\n * `path` may include search or hash.\n * `state` is the history state object.\n */\nexport function pushHistory(path: string, state: any = {}): void {\n  window.history.pushState(state, '', path);\n}\n\n/**\n * Replace the current history entry.\n * `path` may include search or hash.\n * `state` is the history state object.\n */\nexport function replaceHistory(path: string, state: any = {}): void {\n  window.history.replaceState(state, '', path);\n}\n",":host {\n  display: block;\n  height: 100%;\n}\n.logo {\n  height: 2rem;\n  width: 2rem;\n}\n.card {\n  overflow-x: auto;\n}\n.secondary-p {\n  font-size: 12px !important;\n}\n.room-service {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 0.5rem;\n  width: 100%;\n  padding: 0.25rem 0;\n}\n.room-name-container {\n  background: #acecff;\n  padding: 0.1rem 0.3rem;\n  border-radius: 5px;\n  /* cursor: pointer; */\n\n  /* max-width: max-content; */\n}\n.h-screen {\n  height: 100%;\n}\n.price-span {\n  margin: 0;\n  margin-right: 5px;\n}\n.main-container {\n  height: 100%;\n  overflow-y: auto;\n}\n.badge.ct_ir_badge {\n  padding: 0.2rem 0.3rem;\n}\n.yellow_dot {\n  height: 0.5rem;\n  width: 0.5rem;\n  height: 0.5rem;\n  width: 0.8rem;\n  border-radius: 50%;\n  background: rgb(244, 213, 82);\n  margin-left: 0.5rem;\n  display: inline-flex;\n  padding: 0;\n  margin: 0;\n}\n.booking_name {\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n}\n.bg-ir-red {\n  background: #ff4961;\n  padding: 0.2rem 0.3rem;\n}\n.due-btn {\n  border: 1px solid #ff4961;\n  color: #ff4961;\n  cursor: pointer;\n  padding: 1px 0.25rem !important;\n  font-size: 12px !important;\n}\n.due-btn:hover {\n  background: #ff4961;\n  color: white;\n}\n.booking_number {\n  all: unset;\n  cursor: pointer;\n}\n.booking_number:hover {\n  color: #1e9ff2;\n}\n.in-out {\n  width: 150px !important;\n}\n.booking_guest_name {\n  width: fit-content;\n  padding: 0 !important;\n  margin: 0;\n}\n.booking_guest_name .button-text {\n  padding: 0 !important;\n}\n.buttons-container {\n  gap: 10px;\n}\ntd ul {\n  width: max-content !important;\n}\ntd {\n  width: max-content !important ;\n}\n.date-p {\n  width: max-content !important;\n  min-width: 100%;\n  text-align: center !important;\n}\n.booking-label-gap {\n  gap: 5px;\n}\n@media (min-width: 1024px) {\n  .yellow_dot {\n    height: 0.5rem;\n    width: 0.5rem;\n  }\n}\n","import { Booking, IUnit, Occupancy } from '@/models/booking.dto';\nimport { BookingListingService } from '@/services/booking_listing.service';\nimport { RoomService } from '@/services/room.service';\nimport booking_listing, { updateUserSelection, onBookingListingChange, IUserListingSelection, updateUserSelections } from '@/stores/booking_listing.store';\nimport locales from '@/stores/locales.store';\nimport { formatAmount } from '@/utils/utils';\nimport { Component, Host, Prop, State, Watch, h, Element, Listen, Fragment } from '@stencil/core';\nimport moment from 'moment';\nimport { _formatTime } from '../ir-booking-details/functions';\nimport { getPrivateNote } from '@/utils/booking';\nimport Token from '@/models/Token';\nimport { isSingleUnit } from '@/stores/calendar-data';\nimport { getAllParams } from '@/utils/browserHistory';\nimport { BookingService } from '@/services/booking.service';\nimport { PaymentEntries } from '../ir-booking-details/types';\n\n@Component({\n  tag: 'ir-booking-listing',\n  styleUrl: 'ir-booking-listing.css',\n  scoped: true,\n})\nexport class IrBookingListing {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() rowCount: number = 10;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() currentPage = 1;\n  @State() totalPages = 1;\n  @State() oldStartValue = 0;\n  @State() editBookingItem: { booking: Booking; cause: 'edit' | 'payment' | 'delete' | 'guest' } | null = null;\n  @State() showCost = false;\n  @State() paymentEntries: PaymentEntries;\n\n  private bookingListingService = new BookingListingService();\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n  private token = new Token();\n\n  private listingModal: HTMLIrListingModalElement;\n  private listingModalTimeout: NodeJS.Timeout;\n  private statusColors = {\n    '001': 'badge-warning',\n    '002': 'badge-success',\n    '003': 'badge-danger',\n    '004': 'badge-danger',\n  };\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    updateUserSelection('end_row', this.rowCount);\n    booking_listing.rowCount = this.rowCount;\n    if (this.ticket !== '') {\n      booking_listing.token = this.ticket;\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n    onBookingListingChange('userSelection', async newValue => {\n      const newTotal = newValue.total_count;\n      this.totalPages = Math.ceil(newTotal / this.rowCount);\n    });\n    onBookingListingChange('bookings', async newValue => {\n      this.showCost = newValue.some(booking => booking.financial.gross_cost !== null && booking.financial.gross_cost > 0);\n    });\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    booking_listing.token = this.ticket;\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      const requests = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP', '_PAY_METHOD']),\n        this.bookingListingService.getExposedBookingsCriteria(propertyId),\n        this.roomService.fetchLanguage(this.language, ['_BOOKING_LIST_FRONT']),\n      ];\n\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group, pay_method } = this.bookingService.groupEntryTablesResult(setupEntries as any);\n      this.paymentEntries = {\n        groups: pay_type_group,\n        methods: pay_method,\n        types: pay_type,\n      };\n      updateUserSelection('property_id', propertyId);\n      // this.geSearchFiltersFromParams();\n      await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  handleSideBarToggle(e: CustomEvent<boolean>) {\n    if (e.detail) {\n      this.editBookingItem = null;\n    }\n  }\n  geSearchFiltersFromParams() {\n    //e=10&status=002&from=2025-04-15&to=2025-04-22&filter=2&c=Alitalia+Cabin+Crew\n    const params = getAllParams();\n    if (params) {\n      console.log('update params');\n      let obj: Partial<IUserListingSelection> = {};\n      if (params.e) {\n        obj['end_row'] = Number(params.e);\n      }\n      if (params.s) {\n        obj['start_row'] = Number(params.s);\n      }\n      if (params.status) {\n        obj['booking_status'] = params.status;\n      }\n      if (params.filter) {\n        obj['filter_type'] = params.filter;\n      }\n      if (params.from) {\n        obj['from'] = params.from;\n      }\n      if (params.to) {\n        obj['to'] = params.to;\n      }\n      updateUserSelections(obj);\n    }\n    console.log('params=>', params);\n  }\n  getPaginationBounds() {\n    const totalCount = booking_listing.userSelection.total_count;\n    const startItem = (this.currentPage - 1) * this.rowCount;\n    let endItem = this.currentPage * this.rowCount;\n    endItem = endItem > totalCount ? totalCount : endItem;\n    return { startItem, endItem, totalCount };\n  }\n\n  openModal() {\n    this.listingModalTimeout = setTimeout(() => {\n      this.listingModal = this.el.querySelector('ir-listing-modal');\n      this.listingModal.editBooking = this.editBookingItem;\n      this.listingModal.openModal();\n    }, 100);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.listingModalTimeout);\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n  }\n\n  @Listen('resetBookingData')\n  async handleResetStoreData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.bookingListingService.getExposedBookings({ ...booking_listing.userSelection, is_to_export: false });\n  }\n  @Listen('bookingChanged')\n  handleBookingChanged(e: CustomEvent<Booking>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    booking_listing.bookings = [\n      ...booking_listing.bookings.map(b => {\n        if (b.booking_nbr === e.detail.booking_nbr) {\n          return e.detail;\n        }\n        return b;\n      }),\n    ];\n  }\n\n  renderItemRange() {\n    const { endItem, startItem, totalCount } = this.getPaginationBounds();\n    return `${locales.entries.Lcz_View} ${startItem + 1} - ${endItem} ${locales.entries.Lcz_Of} ${totalCount}`;\n  }\n\n  async updateData() {\n    const { endItem, startItem } = this.getPaginationBounds();\n    // setParams({\n    //   s: startItem,\n    //   e: endItem,\n    // });\n    await this.bookingListingService.getExposedBookings({\n      ...booking_listing.userSelection,\n      is_to_export: false,\n      start_row: startItem,\n      end_row: endItem,\n    });\n  }\n  private calculateTotalPersons(booking: Booking) {\n    const sumOfOccupancy = ({ adult_nbr, children_nbr, infant_nbr }: Occupancy) => {\n      return (adult_nbr ?? 0) + (children_nbr ?? 0) + (infant_nbr ?? 0);\n    };\n    return booking.rooms.reduce((prev, cur) => {\n      return sumOfOccupancy(cur.occupancy) + prev;\n    }, 0);\n  }\n  render() {\n    if (this.isLoading || this.ticket === '') {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <div class=\"p-1 main-container\">\n          <ir-listing-header propertyId={this.propertyid} p={this.p} language={this.language}></ir-listing-header>\n          <section>\n            <div class=\"card p-1 flex-fill m-0 mt-2\">\n              <table class=\"table table-striped table-bordered no-footer dataTable\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"text-center\">\n                      {locales.entries?.Lcz_Booking}#\n                    </th>\n                    <th scope=\"col\">{locales.entries?.Lcz_BookedOn}</th>\n                    <th scope=\"col\">{locales.entries?.Lcz_GuestSource}</th>\n                    <th scope=\"col\" class=\"text-left services-cell\">\n                      {locales.entries?.Lcz_Services}\n                    </th>\n                    <th scope=\"col\" class=\"in-out\">\n                      {locales.entries?.Lcz_Dates}\n                    </th>\n                    <th scope=\"col\">\n                      <span class=\"price-span\">{locales.entries?.Lcz_Amount}</span>\n\n                      <ir-tooltip\n                        customSlot\n                        message={`<span style=\"width:100%;display:block;\">${locales.entries?.Lcz_BookingBalance}</span><span>${locales.entries?.Lcz_ClickToSettle}</span>`}\n                      >\n                        <span slot=\"tooltip-trigger\" class={'m-0 btn due-btn'}>\n                          {locales.entries?.Lcz_Balance}\n                        </span>\n                      </ir-tooltip>\n                    </th>\n                    {this.showCost && (\n                      <th scope=\"col\" class=\"services-cell\">\n                        {locales.entries?.Lcz_Cost}\n                      </th>\n                    )}\n                    <th scope=\"col\">{locales.entries?.Lcz_Status}</th>\n                    <th scope=\"col\">\n                      <p class=\"sr-only\">actions</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody class=\"\">\n                  {booking_listing.bookings.length === 0 && (\n                    <tr>\n                      <td colSpan={8}>{locales.entries?.Lcz_NoDataAvailable}</td>\n                    </tr>\n                  )}\n                  {booking_listing.bookings?.map(booking => {\n                    let confirmationBG: string = this.statusColors[booking.is_requested_to_cancel ? '003' : booking.status.code];\n                    const lastManipulation = booking.ota_manipulations ? booking.ota_manipulations[booking.ota_manipulations.length - 1] : null;\n                    const totalPersons = this.calculateTotalPersons(booking);\n                    return (\n                      <tr key={booking.booking_nbr}>\n                        <td class=\"text-left\">\n                          <ir-button\n                            btn_color=\"link\"\n                            btnStyle={{ padding: '0', margin: '0' }}\n                            onClickHandler={() => (this.editBookingItem = { booking, cause: 'edit' })}\n                            text={booking.booking_nbr}\n                          ></ir-button>\n                          {booking.channel_booking_nbr && <p class=\"p-0 m-0 text-center secondary-p\">{booking.channel_booking_nbr}</p>}\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.booked_on.date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                          <p class=\"p-0 m-0 secondary-p\">{_formatTime(booking.booked_on.hour.toString(), booking.booked_on.minute.toString())}</p>\n                        </td>\n                        <td>\n                          <div class=\"h-100 d-flex align-items-center \" style={{ width: 'max-content' }}>\n                            <img class=\"mr-2 logo\" src={booking.origin.Icon} alt={booking.origin.Label} />\n                            <div class=\"text-left\">\n                              <div class=\"d-flex align-items-center\">\n                                <div class=\"booking_name m-0 p-0\">\n                                  <ir-button\n                                    btn_color=\"link\"\n                                    onClickHandler={() => (this.editBookingItem = { booking, cause: 'guest' })}\n                                    text={`${booking.guest.first_name} ${booking.guest.last_name ?? ''}`}\n                                    btnStyle={{\n                                      width: 'fit-content',\n                                      padding: '0',\n                                      margin: '0',\n                                    }}\n                                    labelStyle={{\n                                      padding: '0',\n                                    }}\n                                  ></ir-button>\n                                  {booking.guest.nbr_confirmed_bookings > 1 && !booking.agent && (\n                                    <div class=\"m-0 p-0\">\n                                      <ir-tooltip message={`${locales.entries.Lcz_BookingsNbr}`.replace('%1', booking.guest.nbr_confirmed_bookings.toString())} customSlot>\n                                        <div class=\"d-flex align-items-center my-0 p-0\" slot=\"tooltip-trigger\">\n                                          <ir-icons style={{ '--icon-size': '0.875rem' }} color=\"#FB0AAD\" name=\"heart-fill\"></ir-icons>\n                                        </div>\n                                      </ir-tooltip>\n                                    </div>\n                                  )}\n                                  {/* <button\n                                    class=\"booking_number p-0 m-0 \"\n                                    onClick={() => {\n                                      this.editBookingItem = { booking, cause: 'guest' };\n                                    }}\n                                  ></button> */}\n                                  <span class={'p-0 m-0'}>\n                                    {/* {booking.occupancy.adult_nbr} */}\n                                    {totalPersons}\n                                    {locales.entries.Lcz_P}\n                                  </span>\n                                  {getPrivateNote(booking.extras) && <span class=\"yellow_dot\"></span>}\n                                </div>\n                              </div>\n                              <div class={'d-flex align-items-center booking-label-gap'}>\n                                <p class=\"p-0 m-0 secondary-p\">{booking.origin.Label}</p>\n                                {booking.is_in_loyalty_mode && !booking.promo_key && (\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\n                                    <title>{locales.entries.Lcz_LoyaltyDiscountApplied}</title>\n                                    <path\n                                      fill=\"#fc6c85\"\n                                      d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"\n                                    />\n                                  </svg>\n                                )}\n                                {booking.promo_key && (\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" height={18} width={18}>\n                                    <title>{locales.entries.Lcz_Coupon + ':' + booking.promo_key}</title>\n                                    <path\n                                      stroke-linecap=\"round\"\n                                      stroke-linejoin=\"round\"\n                                      d=\"M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h3M3.375 5.25c-.621 0-1.125.504-1.125 1.125v3.026a2.999 2.999 0 0 1 0 5.198v3.026c0 .621.504 1.125 1.125 1.125h17.25c.621 0 1.125-.504 1.125-1.125v-3.026a2.999 2.999 0 0 1 0-5.198V6.375c0-.621-.504-1.125-1.125-1.125H3.375Z\"\n                                    />\n                                  </svg>\n                                )}\n                              </div>\n                              {/* {booking.agent && <p class=\"m-0 secondary-p\">{locales.entries.Lcz_AgentCode.replace('%1', booking.agent.name)}</p>} */}\n                            </div>\n                          </div>\n                        </td>\n\n                        <td>\n                          <ul>\n                            {booking.rooms.map(room => (\n                              <li>\n                                <div class={'room-service'}>\n                                  <p class={'m-0 p-0'}>{room.roomtype.name}</p>\n                                  {room.unit &&\n                                    !isSingleUnit(room.roomtype.id) &&\n                                    ((room.unit as IUnit)?.name?.length > 4 ? (\n                                      <ir-tooltip customSlot message={(room.unit as IUnit)?.name}>\n                                        <p class={'room-name-container cursor-pointer m-0'} slot=\"tooltip-trigger\">\n                                          {(room.unit as IUnit)?.name?.substring(0, 4)}\n                                        </p>\n                                      </ir-tooltip>\n                                    ) : (\n                                      <p class={'room-name-container  m-0'}>{(room.unit as IUnit)?.name?.substring(0, 4)}</p>\n                                    ))}\n                                </div>\n                              </li>\n                            ))}\n                            {booking.extra_services && <li>{locales.entries.Lcz_ExtraServices}</li>}\n                          </ul>\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.from_date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                          <p class=\"p-0 m-0 date-p\">{moment(booking.to_date, 'YYYY-MM-DD').format('DD-MMM-YYYY')}</p>\n                        </td>\n                        <td>\n                          <p class=\"p-0 m-0\" style={{ whiteSpace: 'nowrap' }}>\n                            {formatAmount(booking.currency.symbol, booking.financial?.gross_total ?? 0)}\n                          </p>\n                          {booking.financial.due_amount !== 0 && (\n                            <button\n                              onClick={() => {\n                                this.editBookingItem = { booking, cause: 'payment' };\n                                this.openModal();\n                              }}\n                              style={{ whiteSpace: 'nowrap' }}\n                              class=\"btn p-0 m-0 due-btn\"\n                            >\n                              {booking.status.code === '003'\n                                ? booking.financial.cancelation_penality_as_if_today !== 0 && (\n                                    <Fragment>\n                                      <span>{booking.financial.cancelation_penality_as_if_today < 0 ? 'Refund' : 'Charge'} </span>\n                                      {formatAmount(booking.currency.symbol, Math.abs(booking.financial.cancelation_penality_as_if_today))}\n                                    </Fragment>\n                                  )\n                                : formatAmount(booking.currency.symbol, booking.financial.due_amount)}\n                            </button>\n                          )}\n                        </td>\n                        {this.showCost && (\n                          <td>\n                            {booking.financial.gross_cost !== null && booking.financial.gross_cost === 0\n                              ? '_'\n                              : formatAmount(booking.currency.symbol, booking.financial.gross_cost)}\n                          </td>\n                        )}\n\n                        <td>\n                          <p class={`m-0 badge ${confirmationBG} ct_ir_badge`}>\n                            {booking.is_requested_to_cancel ? locales?.entries?.Lcz_CancellationRequested : booking.status.description}\n                          </p>\n                          {!lastManipulation && booking.events?.length > 0 && booking.events[0].type.toLowerCase() === 'modified' && (\n                            <p class=\"mx-0 p-0 small\" style={{ marginTop: '0.25rem', marginBottom: '0' }}>\n                              Modified\n                            </p>\n                          )}\n                          {lastManipulation && (\n                            <ir-popover\n                              trigger=\"hover\"\n                              content={`Modified by ${lastManipulation.user} at ${lastManipulation.date} ${lastManipulation.hour}:${lastManipulation.minute}`}\n                            >\n                              <p class=\"mx-0 p-0 small text-danger\" style={{ marginTop: '0.25rem', marginBottom: '0' }}>\n                                <b>Modified</b>\n                              </p>\n                            </ir-popover>\n                          )}\n                        </td>\n                        <td>\n                          <div class=\"d-flex justify-content-center align-items-center\" style={{ gap: '8px' }}>\n                            <ir-button title=\"Edit booking\" variant=\"icon\" icon_name=\"edit\" onClickHandler={() => (this.editBookingItem = { booking, cause: 'edit' })}></ir-button>\n                            <ir-button\n                              title=\"Delete booking\"\n                              style={{ '--icon-button-color': '#ff4961', '--icon-button-hover-color': '#FF1635' }}\n                              variant=\"icon\"\n                              icon_name=\"trash\"\n                              onClickHandler={() => {\n                                this.editBookingItem = { booking, cause: 'delete' };\n                                this.openModal();\n                              }}\n                            ></ir-button>\n                          </div>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              {this.totalPages > 1 && (\n                <section class={'d-flex flex-column flex-md-row align-items-center justify-content-between pagination-container'}>\n                  <p class=\"m-0 mb-1 mb-md-0\">{this.renderItemRange()}</p>\n                  <div class={'d-flex align-items-center buttons-container'}>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === 1}\n                      onClickHandler={async () => {\n                        this.currentPage = 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angles_left\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === 1}\n                      onClickHandler={async () => {\n                        this.currentPage = this.currentPage - 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angle_left\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-select\n                      selectedValue={this.currentPage.toString()}\n                      showFirstOption={false}\n                      onSelectChange={async e => {\n                        this.currentPage = +e.detail;\n                        await this.updateData();\n                      }}\n                      data={Array.from(Array(this.totalPages), (_, i) => i + 1).map(i => ({\n                        text: i.toString(),\n                        value: i.toString(),\n                      }))}\n                    ></ir-select>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === this.totalPages}\n                      onClickHandler={async () => {\n                        this.currentPage = this.currentPage + 1;\n                        await this.updateData();\n                      }}\n                      icon_name=\"angle_right\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                    <ir-button\n                      size=\"sm\"\n                      btn_disabled={this.currentPage === this.totalPages}\n                      onClickHandler={async () => {\n                        this.currentPage = this.totalPages;\n                        console.log(this.currentPage);\n                        await this.updateData();\n                      }}\n                      icon_name=\"angles_right\"\n                      style={{ '--icon-size': '0.875rem' }}\n                    ></ir-button>\n                  </div>\n                </section>\n              )}\n            </div>\n          </section>\n        </div>\n        {this.editBookingItem && <ir-listing-modal paymentEntries={this.paymentEntries} onModalClosed={() => (this.editBookingItem = null)}></ir-listing-modal>}\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={this.editBookingItem !== null && ['edit', 'guest'].includes(this.editBookingItem.cause)}\n          showCloseButton={false}\n          sidebarStyles={\n            this.editBookingItem?.cause === 'guest' ? { background: 'white' } : { width: this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)', background: '#F2F3F8' }\n          }\n        >\n          {this.editBookingItem?.cause === 'edit' && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              p={this.p}\n              hasPrint\n              hasReceipt\n              is_from_front_desk\n              propertyid={this.propertyid}\n              hasRoomEdit\n              hasRoomDelete\n              hasCloseButton\n              onCloseSidebar={() => (this.editBookingItem = null)}\n              bookingNumber={this.editBookingItem.booking.booking_nbr}\n              ticket={this.ticket}\n              language={this.language}\n              hasRoomAdd\n            ></ir-booking-details>\n          )}\n          {this.editBookingItem?.cause === 'guest' && (\n            <ir-guest-info\n              slot=\"sidebar-body\"\n              isInSideBar={true}\n              headerShown\n              booking_nbr={this.editBookingItem?.booking?.booking_nbr}\n              email={this.editBookingItem?.booking?.guest.email}\n              language={this.language}\n              onCloseSideBar={() => (this.editBookingItem = null)}\n            ></ir-guest-info>\n          )}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n","import calendar_data from '@/stores/calendar-data';\nimport { downloadFile } from '@/utils/utils';\nimport axios from 'axios';\nexport type CountrySalesParams = {\n  AC_ID: number;\n  WINDOW: number;\n  FROM_DATE: string;\n  TO_DATE: string;\n  BOOK_CASE: string;\n  is_export_to_excel: boolean;\n};\nexport type DailyRevenueReportParams = {\n  date: string;\n  property_id: string;\n  is_export_to_excel: boolean;\n};\nexport type MonthlyStatsParams = {\n  property_id: number;\n  from_date: string;\n  to_date: string;\n  is_export_to_excel?: boolean;\n};\nexport interface MonthlyStatsResults {\n  AverageOccupancy: number;\n  DailyStats: DailyStat[];\n  ExcelLink: null;\n  PeakDays: PeakDay[];\n  Occupancy_Difference_From_Previous_Month: number;\n  TotalUnitsBooked: number;\n  Total_Guests: number;\n}\n\nexport interface PeakDay {\n  Date: string;\n  OccupancyPercent: number;\n}\n\nexport interface DailyStat {\n  Date: string;\n  Occupancy: number;\n  Units_booked: number;\n  Rooms_Revenue: number;\n  ADR: number;\n  Total_Guests: number | undefined;\n}\nexport class PropertyService {\n  public async getExposedProperty(params: {\n    id: number | null;\n    language: string;\n    is_backend?: boolean;\n    aname?: string;\n    include_units_hk_status?: boolean;\n    include_sales_rate_plans?: boolean;\n  }) {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Property`, params);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = data.My_Result;\n      calendar_data.adultChildConstraints = results.adult_child_constraints;\n      calendar_data.allowedBookingSources = results.allowed_booking_sources;\n      calendar_data.allowed_payment_methods = results.allowed_payment_methods;\n      calendar_data.currency = results.currency;\n      calendar_data.is_vacation_rental = results.is_vacation_rental;\n      calendar_data.pickup_service = results.pickup_service;\n      calendar_data.max_nights = results.max_nights;\n      calendar_data.roomsInfo = results.roomtypes;\n      calendar_data.taxes = results.taxes;\n      calendar_data.id = results.id;\n      calendar_data.country = results.country;\n      calendar_data.name = results.name;\n      calendar_data.is_automatic_check_in_out = results.is_automatic_check_in_out;\n      calendar_data.tax_statement = results.tax_statement;\n      calendar_data.is_frontdesk_enabled = results.is_frontdesk_enabled;\n      calendar_data.is_pms_enabled = results.is_pms_enabled;\n      const spitTime = results?.time_constraints?.check_out_till?.split(':');\n      calendar_data.checkin_checkout_hours = {\n        offset: results.city.gmt_offset,\n        hour: Number(spitTime[0] || 0),\n        minute: Number(spitTime[1] || 0),\n      };\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getCountrySales(params: CountrySalesParams) {\n    const { data } = await axios.post('/Get_Country_Sales', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Country_Sales.Link_excel);\n    }\n    return data.My_Result;\n  }\n  public async getDailyRevenueReport(params: DailyRevenueReportParams) {\n    const { data } = await axios.post('/Get_Daily_Revenue_Report', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Daily_Revenue_Report.Link_excel);\n    }\n    return data.My_Result;\n  }\n  public async setExposedCleaningFrequency(params: { property_id: number; code: string }) {\n    const { data } = await axios.post('/Set_Exposed_Cleaning_Frequency', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data.My_Result;\n  }\n  public async getMonthlyStats(params: MonthlyStatsParams): Promise<MonthlyStatsResults> {\n    const { data } = await axios.post('/Get_Monthly_Stats', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Monthly_Stats.Link_excel);\n    }\n    return data.My_Result;\n  }\n}\n",":host {\n  display: block;\n}\n.daily-revenue__meta {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n.daily-revenue__table {\n  flex: 1 1 0%;\n}\n\n/*sm*/\n@media (min-width: 768px) {\n  .daily-revenue__meta {\n    flex-direction: row;\n  }\n}\n","import Token from '@/models/Token';\nimport { BookingService } from '@/services/booking.service';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyPaymentFilter, FolioPayment, GroupedFolioPayment, SidebarOpenEvent } from './types';\nimport { v4 } from 'uuid';\nimport moment from 'moment';\nimport { PaymentEntries } from '../ir-booking-details/types';\n\n@Component({\n  tag: 'ir-daily-revenue',\n  styleUrl: 'ir-daily-revenue.css',\n  scoped: true,\n})\nexport class IrDailyRevenue {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading: boolean;\n  @State() property_id: number;\n  @State() groupedPayment: GroupedFolioPayment;\n  @State() previousDateGroupedPayments: GroupedFolioPayment;\n  @State() isLoading: string;\n  @State() filters: DailyPaymentFilter = { date: moment().format('YYYY-MM-DD'), users: null };\n  @State() sideBarEvent: SidebarOpenEvent | null;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n  private paymentEntries: PaymentEntries;\n\n  @Event() preventPageLoad: EventEmitter<null>;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.tokenService.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('revenueOpenSidebar')\n  handleOpenSidebar(e: CustomEvent<SidebarOpenEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = e.detail;\n  }\n  @Listen('fetchNewReports')\n  handleFetchNewReports(e: CustomEvent<DailyPaymentFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = { ...e.detail };\n    this.getPaymentReports();\n  }\n  @Listen('resetBookingEvt')\n  async handleResetBooking(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    this.getPaymentReports(false, true);\n  }\n\n  private handleSidebarClose = (e: CustomEvent) => {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.sideBarEvent = null;\n  };\n\n  private renderSidebarBody() {\n    if (!this.sideBarEvent) {\n      return;\n    }\n    switch (this.sideBarEvent.type) {\n      case 'booking':\n        return (\n          <ir-booking-details\n            slot=\"sidebar-body\"\n            hasPrint\n            hasReceipt\n            hasCloseButton\n            onCloseSidebar={this.handleSidebarClose}\n            is_from_front_desk\n            propertyid={this.property_id}\n            hasRoomEdit\n            hasRoomDelete\n            bookingNumber={this.sideBarEvent.payload.bookingNumber.toString()}\n            ticket={this.ticket}\n            language={this.language}\n            hasRoomAdd\n          ></ir-booking-details>\n        );\n      default:\n        return null;\n    }\n  }\n\n  private async initializeApp() {\n    this.isPageLoading = true;\n\n    try {\n      let propertyId = this.propertyid;\n      if (!propertyId && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n\n      this.property_id = propertyId;\n\n      const requests: Promise<any>[] = [\n        this.bookingService.getSetupEntriesByTableNameMulti(['_PAY_TYPE', '_PAY_TYPE_GROUP', '_PAY_METHOD']),\n        this.getPaymentReports(),\n        this.roomService.fetchLanguage(this.language),\n      ];\n      if (propertyId) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [setupEntries] = await Promise.all(requests);\n      const { pay_type, pay_type_group, pay_method } = this.bookingService.groupEntryTablesResult(setupEntries);\n      this.paymentEntries = {\n        groups: pay_type_group,\n        methods: pay_method,\n        types: pay_type,\n      };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n  private groupPaymentsByName(payments: FolioPayment[]): GroupedFolioPayment {\n    const groupedPayment: GroupedFolioPayment = new Map();\n\n    for (const payment of payments) {\n      const key = `${payment.payTypeCode}_${payment.payMethodCode}`;\n      const p = groupedPayment.get(key) ?? [];\n      groupedPayment.set(key, [...p, payment]);\n    }\n    return new Map(\n      [...groupedPayment.entries()].sort(([a], [b]) => {\n        const aNum = Number(a);\n        const bNum = Number(b);\n        if (!isNaN(aNum) && !isNaN(bNum)) {\n          return aNum - bNum;\n        }\n        return a.localeCompare(b);\n      }),\n    );\n  }\n\n  private async getPaymentReports(isExportToExcel = false, excludeYesterday = false) {\n    try {\n      const getReportObj = (report): FolioPayment => {\n        return {\n          method: report.METHOD,\n          payTypeCode: report.PAY_TYPE_CODE,\n          payMethodCode: report.PAY_METHOD_CODE,\n          amount: report.AMOUNT,\n          date: report.DATE,\n          hour: report.HOUR,\n          minute: report.MINUTE,\n          user: report.USER,\n          currency: report.CURRENCY,\n          bookingNbr: report.BOOKING_NBR,\n          id: v4(),\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const requests = [\n        this.propertyService.getDailyRevenueReport({\n          date: this.filters.date,\n          property_id: this.property_id?.toString(),\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n      if (!isExportToExcel && !excludeYesterday) {\n        requests.push(\n          this.propertyService.getDailyRevenueReport({\n            date: moment(this.filters.date, 'YYYY-MM-DD').add(-1, 'days').format('YYYY-MM-DD'),\n            property_id: this.property_id?.toString(),\n            is_export_to_excel: isExportToExcel,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      if (!isExportToExcel) {\n        if (results[0]) {\n          this.groupedPayment = this.groupPaymentsByName(results[0]?.map(getReportObj));\n        } else {\n          this.groupedPayment = new Map();\n        }\n        if (results[1]) this.previousDateGroupedPayments = this.groupPaymentsByName(results[1]?.map(getReportObj));\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Revenue</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getPaymentReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-revenue-summary\n            previousDateGroupedPayments={this.previousDateGroupedPayments}\n            groupedPayments={this.groupedPayment}\n            paymentEntries={this.paymentEntries}\n          ></ir-revenue-summary>\n          <div class=\"daily-revenue__meta\">\n            <ir-daily-revenue-filters isLoading={this.isLoading === 'filter'} payments={this.groupedPayment}></ir-daily-revenue-filters>\n            <ir-revenue-table filters={this.filters} class={'daily-revenue__table'} paymentEntries={this.paymentEntries} payments={this.groupedPayment}></ir-revenue-table>\n          </div>\n        </section>\n        <ir-sidebar\n          sidebarStyles={{\n            width: this.sideBarEvent?.type === 'booking' ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.sideBarEvent?.type === 'booking' ? '#F2F3F8' : 'white',\n          }}\n          open={Boolean(this.sideBarEvent)}\n          showCloseButton={false}\n          onIrSidebarToggle={this.handleSidebarClose}\n        >\n          {this.renderSidebarBody()}\n        </ir-sidebar>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  box-sizing: border-box;\n}\n:host * {\n  box-sizing: border-box;\n}\n\n@media only screen and (min-width: 900px) {\n  /* td {\n    min-width: 140px !important;\n    width: max-content !important;\n  } */\n}\n@media only screen and (max-width: 900px) {\n  /* td {\n    min-width: 100px !important;\n  } */\n  /* .table-container {\n    width: max-content !important;\n  } */\n}\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n.tasks-view {\n  display: flex;\n  flex-direction: column;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .tasks-view {\n    flex-direction: row;\n  }\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { CleanTaskEvent, IPendingActions } from '@/models/housekeeping';\nimport Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { TaskFilters } from './types';\nimport { downloadFile } from '@/utils/utils';\nimport { updateTasks as updateTasksStore, updateSelectedTasks, clearSelectedTasks, hkTasksStore, setLoading } from '@/stores/hk-tasks.store';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  tag: 'ir-hk-tasks',\n  styleUrl: 'ir-hk-tasks.css',\n  scoped: true,\n})\nexport class IrHkTasks {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() isCleaningLoading = false;\n  @State() selectedDuration = '';\n  @State() selectedHouseKeeper = '0';\n  @State() selectedRoom: IPendingActions | null = null;\n  @State() archiveOpened = false;\n  @State() property_id: number;\n  @State() isSidebarOpen: boolean;\n  @State() isApplyFiltersLoading: boolean;\n  @State() filters: TaskFilters;\n  @State() modalCauses: CleanTaskEvent & { cause: 'skip' | 'clean' };\n\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\n\n  private hkNameCache: Record<number, string> = {};\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private token = new Token();\n  private table_sorting: Map<string, 'ASC' | 'DESC'> = new Map();\n  private modal: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  @Listen('closeSideBar')\n  handleCloseSidebar(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.isSidebarOpen = false;\n  }\n  @Listen('sortingChanged')\n  handleSortingChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { field, direction } = e.detail;\n    console.log(e.detail);\n    if (field === 'date') {\n      return;\n    }\n    this.table_sorting.set(field, direction);\n  }\n  @Listen('skipSelectedTask')\n  handleSkipSelectedTask(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { task: e.detail, cause: 'skip' };\n    this.modal?.openModal();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      setLoading(true);\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.houseKeepingService.getExposedHKSetup(this.property_id), this.roomService.fetchLanguage(this.language)];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      const tasksResult = await this.houseKeepingService.getHkTasks({\n        property_id: this.property_id,\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: moment().format('YYYY-MM-DD'),\n        housekeepers: [],\n        cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n        dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n        highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n      });\n\n      // updateTaskList();\n      if (tasksResult?.tasks) {\n        this.updateTasks(tasksResult.tasks);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      setLoading(false);\n    }\n  }\n\n  private buildHousekeeperNameCache() {\n    this.hkNameCache = {};\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\n      if (hk.id != null && hk.name != null) {\n        this.hkNameCache[hk.id] = hk.name;\n      }\n    });\n  }\n\n  private updateTasks(tasks: any[]) {\n    this.buildHousekeeperNameCache();\n    updateTasksStore(\n      tasks.map(t => ({\n        ...t,\n        id: v4(),\n        housekeeper: (() => {\n          const name = this.hkNameCache[t.hkm_id];\n          if (name) {\n            return name;\n          }\n          const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\n          this.hkNameCache[t.hkm_id] = hkName;\n          return hkName;\n        })(),\n      })),\n    );\n  }\n  @Listen('headerButtonPress')\n  async handleHeaderButtonPress(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { name } = e.detail;\n    switch (name) {\n      case 'cleaned':\n      case 'clean-inspect':\n        this.modal?.openModal();\n        this.modalCauses = {\n          task: null,\n          cause: 'clean',\n          status: name === 'clean-inspect' ? '004' : '001',\n        };\n        break;\n      case 'export':\n        const sortingArray: { key: string; value: string }[] = Array.from(this.table_sorting.entries()).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        console.log(sortingArray);\n        const { url } = await this.fetchTasksWithFilters(true);\n        downloadFile(url);\n        break;\n      case 'archive':\n        this.isSidebarOpen = true;\n        break;\n    }\n  }\n  @Listen('cleanSelectedTask')\n  handleSelectedTaskCleaningEvent(e: CustomEvent<CleanTaskEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { ...e.detail, cause: 'clean' };\n    this.modal?.openModal();\n  }\n\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (hkTasksStore.selectedTasks.length === 0) {\n        return;\n      }\n      this.isCleaningLoading = true;\n      if (this.modalCauses?.cause === 'skip') {\n        const { booking_nbr, date, unit } = this.modalCauses.task;\n        await this.houseKeepingService.editHkSkip({\n          BOOK_NBR: booking_nbr,\n          DATE: date,\n          COMMENT: '',\n          HK_SKIP_ID: -1,\n          HK_SKIP_REASON_CODE: '001',\n          PR_ID: unit.id,\n        });\n      } else {\n        await this.houseKeepingService.executeHKAction({\n          actions: hkTasksStore.selectedTasks.map(t => ({\n            description: 'Cleaned',\n            hkm_id: t.hkm_id === 0 ? null : t.hkm_id,\n            unit_id: t.unit.id,\n            booking_nbr: t.booking_nbr,\n            status: this.modalCauses?.status ?? '001',\n          })),\n        });\n      }\n      await this.fetchTasksWithFilters();\n    } finally {\n      clearSelectedTasks();\n      if (this.modalCauses) {\n        this.modalCauses = null;\n      }\n      this.isCleaningLoading = false;\n      // this.clearSelectedTasks.emit();\n      this.modal.closeModal();\n    }\n  }\n\n  private async applyFilters(e: CustomEvent) {\n    try {\n      this.isApplyFiltersLoading = true;\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.filters = { ...e.detail };\n      await this.fetchTasksWithFilters();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isApplyFiltersLoading = false;\n    }\n  }\n\n  private async fetchTasksWithFilters(export_to_excel: boolean = false) {\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\n\n    const { tasks, url } = await this.houseKeepingService.getHkTasks({\n      housekeepers,\n      cleaning_frequency: cleaning_frequencies?.code,\n      dusty_window: dusty_units?.code,\n      highlight_window: highlight_check_ins?.code,\n      property_id: this.property_id,\n      from_date: moment().format('YYYY-MM-DD'),\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\n      is_export_to_excel: export_to_excel,\n    });\n    console.log(tasks);\n    if (tasks) {\n      this.updateTasks(tasks);\n    }\n    return { tasks, url };\n  }\n\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host data-testid=\"hk_tasks_base\">\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-1 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <h3>Housekeeping Tasks</h3>\n          <div class=\"tasks-view \" style={{ gap: '1rem' }}>\n            <ir-tasks-filters\n              isLoading={this.isApplyFiltersLoading}\n              onApplyFilters={e => {\n                this.applyFilters(e);\n              }}\n            ></ir-tasks-filters>\n            <div class=\"d-flex w-100 flex-column\" style={{ gap: '1rem' }}>\n              <ir-tasks-table\n                onRowSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  updateSelectedTasks(e.detail);\n                }}\n                class=\"flex-grow-1 w-100\"\n              ></ir-tasks-table>\n              {/* <ir-tasks-table-pagination></ir-tasks-table-pagination> */}\n            </div>\n          </div>\n        </section>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isCleaningLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          onCancelModal={() => {\n            if (this.modalCauses) {\n              clearSelectedTasks();\n              this.modalCauses = null;\n            }\n          }}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={\n            this.modalCauses\n              ? this.modalCauses?.cause === 'clean'\n                ? this.modalCauses.task\n                  ? `Update ${this.modalCauses?.task?.unit?.name} to Clean`\n                  : 'Update selected unit(s) to Clean'\n                : 'Skip cleaning and reschedule for tomorrow.'\n              : 'Update selected unit(s) to Clean'\n          }\n        ></ir-modal>\n        <ir-sidebar\n          open={this.isSidebarOpen}\n          id=\"editGuestInfo\"\n          onIrSidebarToggle={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.isSidebarOpen = false;\n          }}\n          // sidebarStyles={{\n          //   width: '80vw',\n          // }}\n          showCloseButton={false}\n        >\n          {this.isSidebarOpen && <ir-hk-archive ticket={this.token.getToken()} propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\n        </ir-sidebar>\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\n          </ir-title> */}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport calendar_data from '@/stores/calendar-data';\nimport housekeeping_store, { updateHKStore } from '@/stores/housekeeping.store';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport locales from '@/stores/locales.store';\nimport { PropertyService } from '@/services/property.service';\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\n@Component({\n  tag: 'ir-housekeeping',\n  styleUrl: 'ir-housekeeping.css',\n  scoped: true,\n})\nexport class IrHousekeeping {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n\n  @Event() toast: EventEmitter<IToast>;\n\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private propertyService = new PropertyService();\n  private token = new Token();\n  modal: HTMLIrModalElement;\n  selectedCleaningFrequency: any;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.houseKeepingService.getExposedHKSetup(this.propertyid);\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  async initializeApp() {\n    try {\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!propertyId) {\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_sales_rate_plans: true,\n        });\n        propertyId = propertyData.My_Result.id;\n      }\n      updateHKStore('default_properties', { token: this.ticket, property_id: propertyId, language: this.language });\n      const requests: Array<Promise<any>> = [];\n      if (calendar_data.housekeeping_enabled) {\n        requests.push(this.houseKeepingService.getExposedHKSetup(propertyId));\n      }\n      requests.push(this.roomService.fetchLanguage(this.language, ['_HK_FRONT', '_PMS_FRONT']));\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: propertyId,\n            language: this.language,\n            is_backend: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n  private async saveAutomaticCheckInCheckout(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.roomService.SetAutomaticCheckInOut({\n        property_id: housekeeping_store.default_properties.property_id,\n        flag: e.detail === 'auto',\n      });\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private async saveCleaningFrequency(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    try {\n      await this.propertyService.setExposedCleaningFrequency({\n        property_id: housekeeping_store.default_properties.property_id,\n        code: this.selectedCleaningFrequency,\n      });\n      calendar_data.cleaning_frequency = { code: this.selectedCleaningFrequency, description: '' };\n      this.toast.emit({\n        position: 'top-right',\n        title: 'Saved Successfully',\n        description: '',\n        type: 'success',\n      });\n      this.modal.closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    console.log(calendar_data.cleaning_frequency);\n    return (\n      <Host>\n        <ir-interceptor></ir-interceptor>\n        <ir-toast></ir-toast>\n        <section class=\"p-1\">\n          <h3 class=\"mb-2\">{locales.entries.Lcz_HouseKeepingAndCheckInSetup}</h3>\n          <div class=\"card p-1\">\n            <ir-title borderShown label=\"Operations Settings\"></ir-title>\n            <div class={'d-flex align-items-center mb-1'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CheckInOutGuestsAutomatically}</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={calendar_data.is_automatic_check_in_out ? 'auto' : 'manual'}\n                onSelectChange={e => this.saveAutomaticCheckInCheckout(e)}\n                data={[\n                  { text: locales.entries.Lcz_YesAsPerPropertyPolicy, value: 'auto' },\n                  { text: locales.entries.Lcz_NoIWillDoItManually, value: 'manual' },\n                ]}\n              ></ir-select>\n            </div>\n            <div class={'d-flex align-items-center'}>\n              <p class=\"my-0 py-0 mr-1\">{locales.entries.Lcz_CleaningFrequency}:</p>\n              <ir-select\n                showFirstOption={false}\n                selectedValue={this.selectedCleaningFrequency}\n                onSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  this.selectedCleaningFrequency = e.detail;\n                  this.modal.openModal();\n                }}\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\n                  text: v.description,\n                  value: v.code,\n                }))}\n              ></ir-select>\n            </div>\n          </div>\n          {/*<ir-unit-status class=\"mb-1\"></ir-unit-status>*/}\n          {calendar_data.housekeeping_enabled && <ir-hk-team class=\"mb-1\"></ir-hk-team>}\n          <ir-modal\n            autoClose={false}\n            ref={el => (this.modal = el)}\n            isLoading={isRequestPending('/Set_Exposed_Cleaning_Frequency')}\n            onConfirmModal={this.saveCleaningFrequency.bind(this)}\n            iconAvailable={true}\n            onCancelModal={() => {\n              this.selectedCleaningFrequency = calendar_data.cleaning_frequency?.code;\n            }}\n            icon=\"ft-alert-triangle danger h1\"\n            leftBtnText={locales.entries.Lcz_Cancel}\n            rightBtnText={locales.entries.Lcz_Confirm}\n            leftBtnColor=\"secondary\"\n            rightBtnColor={'primary'}\n            modalTitle={locales.entries.Lcz_Confirmation}\n            modalBody={'This action will reschedule all cleaning tasks. Do you want to continue?'}\n          ></ir-modal>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { DailyReport, DailyReportFilter } from './types';\nimport moment from 'moment';\nimport locales from '@/stores/locales.store';\nimport { RoomService } from '@/services/room.service';\nimport { DailyStat, MonthlyStatsResults, PropertyService } from '@/services/property.service';\n\n@Component({\n  tag: 'ir-monthly-bookings-report',\n  styleUrl: 'ir-monthly-bookings-report.css',\n  scoped: true,\n})\nexport class IrMonthlyBookingsReport {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isPageLoading = true;\n  @State() isLoading: 'export' | 'filter' | null = null;\n\n  @State() reports: DailyReport[] = [];\n  @State() filters: DailyReportFilter;\n  @State() property_id: number;\n  @State() stats: Omit<MonthlyStatsResults, 'DailyStats'>;\n\n  private baseFilters: DailyReportFilter;\n\n  private tokenService = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n\n  componentWillLoad() {\n    this.baseFilters = {\n      date: {\n        description: moment().format('MMMM YYYY'),\n        firstOfMonth: moment().startOf('month').format('YYYY-MM-DD'),\n        lastOfMonth: moment().endOf('month').format('YYYY-MM-DD'),\n      },\n      include_previous_year: false,\n    };\n    this.filters = this.baseFilters;\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(this.ticket);\n      this.init();\n    }\n  }\n  @Listen('applyFilters')\n  handleApplyFiltersChange(e: CustomEvent<DailyReportFilter>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.filters = e.detail;\n    this.getReports();\n  }\n\n  private async init() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.roomService.fetchLanguage(this.language), this.getReports()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getReports(isExportToExcel = false) {\n    try {\n      const getReportObj = (report: DailyStat): DailyReport => {\n        return {\n          day: report.Date,\n          units_booked: report.Units_booked,\n          occupancy_percent: report.Occupancy,\n          adr: report.ADR,\n          rooms_revenue: report.Rooms_Revenue,\n          total_guests: report?.Total_Guests,\n        };\n      };\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n      const { date, include_previous_year } = this.filters;\n\n      const requests = [\n        this.propertyService.getMonthlyStats({\n          from_date: date.firstOfMonth,\n          to_date: date.lastOfMonth,\n          property_id: this.property_id,\n          is_export_to_excel: isExportToExcel,\n        }),\n      ];\n\n      if (include_previous_year) {\n        requests.push(\n          this.propertyService.getMonthlyStats({\n            from_date: moment(date.firstOfMonth, 'YYYY-MM-DD').add(-1, 'year').format('YYYY-MM-DD'),\n            to_date: moment(date.lastOfMonth, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'),\n            property_id: this.property_id,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      const currentReports = results[0];\n      let enrichedReports: DailyReport[] = [];\n      const { DailyStats, ...rest } = currentReports;\n\n      this.stats = { ...rest };\n\n      if (include_previous_year && results[isExportToExcel ? 0 : 1]) {\n        const previousYearReports = results[isExportToExcel ? 0 : 1];\n        let formattedReports = previousYearReports.DailyStats.map(getReportObj);\n        enrichedReports = DailyStats.map(getReportObj).map(current => {\n          const previous = formattedReports.find(prev => prev.day === moment(current.day, 'YYYY-MM-DD').add(-1, 'years').format('YYYY-MM-DD'));\n          return {\n            ...current,\n            last_year: previous ?? null,\n          };\n        });\n      } else {\n        enrichedReports = DailyStats.map(getReportObj);\n      }\n      this.reports = [...enrichedReports];\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Daily Occupancy</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries?.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getReports(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <section>\n            <div class=\"d-flex flex-column flex-md-row w-100\" style={{ gap: '1rem', alignItems: 'stretch' }}>\n              <ir-stats-card\n                icon={this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? 'arrow-trend-down' : 'arrow-trend-up'}\n                cardTitle=\"Average Occupancy\"\n                value={this.stats.AverageOccupancy ? this.stats?.AverageOccupancy.toFixed(2) + '%' : null}\n                subtitle={`${this.stats?.Occupancy_Difference_From_Previous_Month < 0 ? '' : '+'}${this.stats?.Occupancy_Difference_From_Previous_Month.toFixed(\n                  2,\n                )}% from last month`}\n              ></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"hotel\"\n                cardTitle=\"Total Units\"\n                value={this.stats?.TotalUnitsBooked ? this.stats?.TotalUnitsBooked.toString() : null}\n                subtitle=\"Booked\"\n              ></ir-stats-card>\n\n              <ir-stats-card icon=\"user_group\" cardTitle=\"Total Guests\" value={this.stats?.Total_Guests?.toString()} subtitle=\"Stayed\"></ir-stats-card>\n\n              <ir-stats-card\n                icon=\"calendar\"\n                cardTitle=\"Peak Days\"\n                value={this.stats?.PeakDays.length === 0 ? null : this.stats?.PeakDays?.map(pd => moment(pd.Date, 'YYYY-MM-DD').format('D').concat('th')).join(' - ')}\n                subtitle={`${Math.max(...(this.stats.PeakDays?.map(pd => pd.OccupancyPercent) || []))}% occupancy`}\n              ></ir-stats-card>\n            </div>\n            <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n              <ir-monthly-bookings-report-filter isLoading={this.isLoading === 'filter'} class=\"filters-card\" baseFilters={this.baseFilters}></ir-monthly-bookings-report-filter>\n              <ir-monthly-bookings-report-table reports={this.reports}></ir-monthly-bookings-report-table>\n            </div>\n          </section>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { BaseSalesRecord, CountrySalesFilter, MappedCountries, SalesRecord } from './types';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-sales-by-country',\n  styleUrl: 'ir-sales-by-country.css',\n  scoped: true,\n})\nexport class IrSalesByCountry {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n  @State() property_id: number;\n  @State() salesData: SalesRecord[];\n  @State() salesFilters: CountrySalesFilter;\n  @State() countries: MappedCountries = new Map();\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n\n  private baseFilters = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.salesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  private async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.bookingService.getCountries(this.language), this.roomService.fetchLanguage(this.language), this.getCountrySales()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [countries] = await Promise.all(requests);\n      const mappedCountries = new Map();\n      (countries as ICountry[]).map(country => {\n        mappedCountries.set(country.id, {\n          flag: country.flag,\n          name: country.name,\n        });\n      });\n      this.countries = mappedCountries;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getCountrySales(isExportToExcel = false) {\n    const formatSalesData = (data): Omit<BaseSalesRecord, 'id'> => {\n      return {\n        country: data.COUNTRY,\n        country_id: data.COUNTRY_ID,\n        nights: data.NIGHTS,\n        percentage: data.PCT,\n        revenue: data.REVENUE,\n        number_of_guests: data.Total_Guests,\n      };\n    };\n    try {\n      const { include_previous_year, ...filterParams } = this.salesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const currentSales = await this.propertyService.getCountrySales({\n        AC_ID: this.property_id,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n\n      let enrichedSales: SalesRecord[] = [];\n\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getCountrySales({\n          AC_ID: this.property_id,\n          is_export_to_excel: false,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.COUNTRY.toLowerCase() === current.COUNTRY.toLowerCase());\n          return {\n            id: v4(),\n            ...formatSalesData(current),\n            last_year: previous ? formatSalesData(previous) : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          id: v4(),\n          ...formatSalesData(record),\n          last_year: null,\n        }));\n      }\n\n      // this.salesData = enrichedSales.sort((a, b) => {\n      //   if (a.country_id === 0) return -1;\n      //   if (b.country_id === 0) return 1;\n      //   return 0;\n      // });\n      this.salesData = [...enrichedSales];\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Country</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getCountrySales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <ir-sales-by-country-summary salesReports={this.salesData}></ir-sales-by-country-summary>\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.salesFilters = e.detail;\n                this.getCountrySales();\n              }}\n              class=\"filters-card\"\n              baseFilters={this.baseFilters}\n            ></ir-sales-filters>\n            <ir-sales-table mappedCountries={this.countries} class=\"card mb-0\" records={this.salesData}></ir-sales-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  height: 100%;\n}\n","import Token from '@/models/Token';\nimport { User } from '@/models/Users';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport { UserService } from '@/services/user.service';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { AllowedUser } from './types';\nimport { bookingReasons } from '@/models/IBooking';\nimport { io, Socket } from 'socket.io-client';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-user-management',\n  styleUrl: 'ir-user-management.css',\n  scoped: true,\n})\nexport class IrUserManagement {\n  @Prop() language: string = '';\n  @Prop() baseUrl: string;\n  @Prop() ticket: string;\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() isSuperAdmin: boolean = true;\n  @Prop() userTypeCode: string | number;\n  @Prop() baseUserTypeCode: string | number;\n  @Prop() userId: string | number;\n\n  @State() isLoading = true;\n  @State() users: User[] = [];\n  @State() property_id: number;\n  @State() allowedUsersTypes: AllowedUser[] = [];\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private userService = new UserService();\n  private bookingService = new BookingService();\n\n  private userTypes: Map<number | string, string> = new Map();\n  private socket: Socket;\n\n  private superAdminId = '5';\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket) {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.fetchUsers();\n  }\n\n  private async initializeApp() {\n    try {\n      if (this.baseUrl) {\n        this.token.setBaseUrl(this.baseUrl);\n      }\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.fetchUserTypes(), this.fetchUsers(), this.roomService.fetchLanguage(this.language, ['_USER_MGT'])];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result = JSON.parse(PAYLOAD);\n    console.log(KEY, result);\n    // const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n    //   DORESERVATION: this.updateUserVerificationStatus,\n    // };\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n      EMAIL_VERIFIED: this.updateUserVerificationStatus,\n    };\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n\n  public updateUserVerificationStatus(result: { id: string | number }) {\n    const users = [...this.users];\n    const idx = users.findIndex(u => u.id === result.id);\n    if (idx === -1) {\n      console.warn(`User ${result.id} not found`);\n      return;\n    }\n    users[idx] = {\n      ...users[idx],\n      is_email_verified: true,\n    };\n    this.users = users;\n  }\n\n  private async fetchUsers() {\n    const users = await this.userService.getExposedPropertyUsers({ property_id: this.propertyid });\n    this.users = [...users].sort((u1: User, u2: User) => {\n      const priority = (u: User) => {\n        const t = u.type.toString();\n        if (t === this.superAdminId) return 0;\n        if (t === '17') return 1;\n        return 2;\n      };\n      //sort by priority\n      const p1 = priority(u1),\n        p2 = priority(u2);\n      if (p1 !== p2) {\n        return p1 - p2;\n      }\n      // //sort by user id\n      // if (p1 === 1) {\n      //   const id1 = u1.id.toString(),\n      //     id2 = u2.id.toString(),\n      //     me = this.userId.toString();\n      //   if (id1 === me) return -1; // u1 is me → goes before u2\n      //   if (id2 === me) return 1; // u2 is me → u1 goes after\n      // }\n\n      // 3) sort by username\n      return u1.username.localeCompare(u2.username);\n    });\n  }\n  private async fetchUserTypes() {\n    const res = await Promise.all([this.bookingService.getSetupEntriesByTableName('_USER_TYPE'), this.bookingService.getLov()]);\n    const allowedUsers = res[1]?.My_Result?.allowed_user_types;\n    for (const e of res[0]) {\n      const value = e[`CODE_VALUE_${this.language?.toUpperCase() ?? 'EN'}`];\n      if (allowedUsers.find(f => f.code === e.CODE_NAME)) {\n        this.allowedUsersTypes.push({ code: e.CODE_NAME, value });\n      }\n      this.userTypes.set(e.CODE_NAME.toString(), value);\n    }\n  }\n  disconnectedCallback() {\n    this.socket.disconnect();\n  }\n  render() {\n    if (this.isLoading) {\n      return (\n        <Host>\n          <ir-toast></ir-toast>\n          <ir-interceptor></ir-interceptor>\n          <ir-loading-screen></ir-loading-screen>\n        </Host>\n      );\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd', '/Handle_Exposed_User']}></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex  pb-2 align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">{locales.entries.Lcz_ExtranetUsers}</h3>\n          </div>\n\n          <div class=\"\" style={{ gap: '1rem' }}>\n            <ir-user-management-table\n              property_id={this.property_id}\n              baseUserTypeCode={this.baseUserTypeCode}\n              allowedUsersTypes={this.allowedUsersTypes}\n              userTypeCode={this.userTypeCode}\n              haveAdminPrivileges={[this.superAdminId, '17'].includes(this.userTypeCode?.toString())}\n              userTypes={this.userTypes}\n              class=\"card\"\n              isSuperAdmin={this.userTypeCode?.toString() === this.superAdminId}\n              users={this.users}\n            ></ir-user-management-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"6wBAAA,MAAMA,EAAwB,6CAC9B,MAAAC,EAAeD,E,MCQFE,EAAkB,MAL/B,WAAAC,CAAAC,G,UAWUC,KAAAC,MAAQ,IAAIC,C,CAEpB,iBAAAC,GACE,GAAIH,KAAKI,OAAQ,CACfJ,KAAKC,MAAMI,SAASL,KAAKI,O,EAK7B,kBAAAE,GACE,GAAIN,KAAKI,OAAQ,CACfJ,KAAKC,MAAMI,SAASL,KAAKI,O,EAI7B,MAAAG,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,OACVH,EAAA,kBAAAE,IAAA,2CAAgBE,iBAAkB,CAAC,gCACnCJ,EAAA,YAAAE,IAAA,6CACAF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,iCAAiCE,MAAO,CAAEC,IAAK,WACxDN,EAAA,iBAAAE,IAAA,2CACEC,MAAM,MACNI,oBAAqB,CAAEC,OAAQ,KAC/BC,MAAOjB,KAAKkB,cACZC,aAAcC,GAAMpB,KAAKkB,cAAgBE,EAAEC,OAC3CC,YAAY,mBAEdd,EAAA,aAAAE,IAAA,2CACEa,KAAK,KACLC,KAAK,SACLC,eAAgBC,UACd,MAAMC,KAAEA,SAAeC,EAAMC,KAAK,6BAA8B,CAC9DC,SAAU9B,KAAKkB,gBAEjB,GAAIS,EAAKI,aAAc,CACrB,M,CAEF/B,KAAK2B,KAAOA,EAAKK,SAAS,KAIhCxB,EAAA,KAAAE,IAAA,4CAAIuB,KAAKC,UAAUlC,KAAK2B,KAAM,KAAM,I,kFCG5BQ,IACd,MAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QACnD,MAAMC,EAA8B,GACpC,IAAK,MAAO/B,EAAKO,KAAUmB,EAAOM,UAAW,CAC3CD,EAAI/B,GAAOO,C,CAEb,OAAOwB,CACT,CCnEA,MAAME,EAAsB,y+DAC5B,MAAAC,EAAeD,E,MCoBFE,EAAgB,MAL7B,WAAA/C,CAAAC,G,UAQUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAEjBJ,KAAA+C,SAAmB,GAIlB/C,KAAAgD,UAAY,MACZhD,KAAAiD,YAAc,EACdjD,KAAAkD,WAAa,EACblD,KAAAmD,cAAgB,EAChBnD,KAAAoD,gBAA+F,KAC/FpD,KAAAqD,SAAW,MAGZrD,KAAAsD,sBAAwB,IAAIC,EAC5BvD,KAAAwD,eAAiB,IAAIC,EACrBzD,KAAA0D,YAAc,IAAIC,EAClB3D,KAAAC,MAAQ,IAAIC,EAIZF,KAAA4D,aAAe,CACrB,MAAO,gBACP,MAAO,gBACP,MAAO,eACP,MAAO,e,CAGT,iBAAAzD,GACE,GAAIH,KAAK6D,QAAS,CAChB7D,KAAKC,MAAM6D,WAAW9D,KAAK6D,Q,CAE7BE,EAAoB,UAAW/D,KAAK+C,UACpCiB,EAAgBjB,SAAW/C,KAAK+C,SAChC,GAAI/C,KAAKI,SAAW,GAAI,CACtB4D,EAAgB/D,MAAQD,KAAKI,OAC7BJ,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,CAEPC,EAAuB,iBAAiBxC,MAAMyC,IAC5C,MAAMC,EAAWD,EAASE,YAC1BrE,KAAKkD,WAAaoB,KAAKC,KAAKH,EAAWpE,KAAK+C,SAAS,IAEvDmB,EAAuB,YAAYxC,MAAMyC,IACvCnE,KAAKqD,SAAWc,EAASK,MAAKC,GAAWA,EAAQC,UAAUC,aAAe,MAAQF,EAAQC,UAAUC,WAAa,GAAE,G,CAIvH,aAAAC,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAKC,MAAMI,SAASL,KAAKI,QACzB4D,EAAgB/D,MAAQD,KAAKI,OAC7BJ,KAAKiE,e,CAGP,mBAAMA,GACJ,IACEjE,KAAKgD,UAAY,KACjB,IAAKhD,KAAK8E,aAAe9E,KAAK+E,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAElB,IAAIC,EAAajF,KAAK8E,WACtB,IAAKG,EAAY,CACf,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,OAEdL,EAAaC,EAAalD,UAAUoD,E,CAGtC,MAAMG,EAAW,CACfvF,KAAKwD,eAAegC,gCAAgC,CAAC,YAAa,kBAAmB,gBACrFxF,KAAKsD,sBAAsBmC,2BAA2BR,GACtDjF,KAAK0D,YAAYgC,cAAc1F,KAAK8C,SAAU,CAAC,yBAGjD,GAAI9C,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIpF,KAAK8E,WACThC,SAAU9C,KAAK8C,SACfwC,WAAY,O,CAKlB,MAAOM,SAAsBC,QAAQC,IAAIP,GACzC,MAAMQ,SAAEA,EAAQC,eAAEA,EAAcC,WAAEA,GAAejG,KAAKwD,eAAe0C,uBAAuBN,GAC5F5F,KAAKmG,eAAiB,CACpBC,OAAQJ,EACRK,QAASJ,EACTK,MAAOP,GAEThC,EAAoB,cAAekB,SAE7BjF,KAAKsD,sBAAsBiD,mBAAkBC,OAAAC,OAAAD,OAAAC,OAAA,GAAMzC,EAAgB0C,eAAa,CAAEC,aAAc,Q,CACtG,MAAOC,GACPC,QAAQD,MAAMA,E,SAEd5G,KAAKgD,UAAY,K,EAIrB,mBAAA8D,CAAoB1F,GAClB,GAAIA,EAAEC,OAAQ,CACZrB,KAAKoD,gBAAkB,I,EAG3B,yBAAA2D,GAEE,MAAM3E,EAASD,IACf,GAAIC,EAAQ,CACVyE,QAAQG,IAAI,iBACZ,IAAIC,EAAsC,GAC1C,GAAI7E,EAAOhB,EAAG,CACZ6F,EAAI,WAAaC,OAAO9E,EAAOhB,E,CAEjC,GAAIgB,EAAO+E,EAAG,CACZF,EAAI,aAAeC,OAAO9E,EAAO+E,E,CAEnC,GAAI/E,EAAOgF,OAAQ,CACjBH,EAAI,kBAAoB7E,EAAOgF,M,CAEjC,GAAIhF,EAAOiF,OAAQ,CACjBJ,EAAI,eAAiB7E,EAAOiF,M,CAE9B,GAAIjF,EAAOkF,KAAM,CACfL,EAAI,QAAU7E,EAAOkF,I,CAEvB,GAAIlF,EAAOmF,GAAI,CACbN,EAAI,MAAQ7E,EAAOmF,E,CAErBC,EAAqBP,E,CAEvBJ,QAAQG,IAAI,WAAY5E,E,CAE1B,mBAAAqF,GACE,MAAMC,EAAa1D,EAAgB0C,cAAcrC,YACjD,MAAMsD,GAAa3H,KAAKiD,YAAc,GAAKjD,KAAK+C,SAChD,IAAI6E,EAAU5H,KAAKiD,YAAcjD,KAAK+C,SACtC6E,EAAUA,EAAUF,EAAaA,EAAaE,EAC9C,MAAO,CAAED,YAAWC,UAASF,a,CAG/B,SAAAG,GACE7H,KAAK8H,oBAAsBC,YAAW,KACpC/H,KAAKgI,aAAehI,KAAKiI,GAAGC,cAAc,oBAC1ClI,KAAKgI,aAAaG,YAAcnI,KAAKoD,gBACrCpD,KAAKgI,aAAaH,WAAW,GAC5B,I,CAEL,oBAAAO,GACEC,aAAarI,KAAK8H,oB,CAGpB,qBAAMQ,CAAgBlH,GACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAKsD,sBAAsBiD,mBAAkBC,OAAAC,OAAAD,OAAAC,OAAA,GAAMzC,EAAgB0C,eAAa,CAAEC,aAAc,Q,CAIxG,0BAAM8B,CAAqBrH,GACzBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAKsD,sBAAsBiD,mBAAkBC,OAAAC,OAAAD,OAAAC,OAAA,GAAMzC,EAAgB0C,eAAa,CAAEC,aAAc,Q,CAGxG,oBAAA+B,CAAqBtH,GACnBA,EAAEmH,2BACFnH,EAAEoH,kBACFxE,EAAgB2E,SAAW,IACtB3E,EAAgB2E,SAASC,KAAIC,IAC9B,GAAIA,EAAEC,cAAgB1H,EAAEC,OAAOyH,YAAa,CAC1C,OAAO1H,EAAEC,M,CAEX,OAAOwH,CAAC,I,CAKd,eAAAE,GACE,MAAMnB,QAAEA,EAAOD,UAAEA,EAASD,WAAEA,GAAe1H,KAAKyH,sBAChD,MAAO,GAAGuB,EAAQtG,QAAQuG,YAAYtB,EAAY,OAAOC,KAAWoB,EAAQtG,QAAQwG,UAAUxB,G,CAGhG,gBAAMyB,GACJ,MAAMvB,QAAEA,EAAOD,UAAEA,GAAc3H,KAAKyH,4BAK9BzH,KAAKsD,sBAAsBiD,mBAAkBC,OAAAC,OAAAD,OAAAC,OAAA,GAC9CzC,EAAgB0C,eAAa,CAChCC,aAAc,MACdyC,UAAWzB,EACX0B,QAASzB,I,CAGL,qBAAA0B,CAAsB7E,GAC5B,MAAM8E,EAAiB,EAAGC,YAAWC,eAAcC,iBACzCF,IAAS,MAATA,SAAS,EAATA,EAAa,IAAMC,IAAY,MAAZA,SAAY,EAAZA,EAAgB,IAAMC,IAAU,MAAVA,SAAU,EAAVA,EAAc,GAEjE,OAAOjF,EAAQkF,MAAMC,QAAO,CAACC,EAAMC,IAC1BP,EAAeO,EAAIC,WAAaF,GACtC,E,CAEL,MAAAtJ,G,4CACE,GAAIP,KAAKgD,WAAahD,KAAKI,SAAW,GAAI,CACxC,OAAOI,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,iBACAA,EAAA,OAAKG,MAAM,sBACTH,EAAA,qBAAmByE,WAAYjF,KAAK8E,WAAYC,EAAG/E,KAAK+E,EAAGjC,SAAU9C,KAAK8C,WAC1EtC,EAAA,eACEA,EAAA,OAAKG,MAAM,+BACTH,EAAA,SAAOG,MAAM,0DACXH,EAAA,aACEA,EAAA,UACEA,EAAA,MAAIwJ,MAAM,MAAMrJ,MAAM,gBACnBsJ,EAAAjB,EAAQtG,WAAO,MAAAuH,SAAA,S,EAAEC,YAAW,KAE/B1J,EAAA,MAAIwJ,MAAM,QAAOG,EAAAnB,EAAQtG,WAAO,MAAAyH,SAAA,SAAAA,EAAEC,cAClC5J,EAAA,MAAIwJ,MAAM,QAAOK,EAAArB,EAAQtG,WAAO,MAAA2H,SAAA,SAAAA,EAAEC,iBAClC9J,EAAA,MAAIwJ,MAAM,MAAMrJ,MAAM,4BACnB4J,EAAAvB,EAAQtG,WAAO,MAAA6H,SAAA,SAAAA,EAAEC,cAEpBhK,EAAA,MAAIwJ,MAAM,MAAMrJ,MAAM,WACnB8J,EAAAzB,EAAQtG,WAAO,MAAA+H,SAAA,SAAAA,EAAEC,WAEpBlK,EAAA,MAAIwJ,MAAM,OACRxJ,EAAA,QAAMG,MAAM,eAAcgK,EAAA3B,EAAQtG,WAAO,MAAAiI,SAAA,SAAAA,EAAEC,YAE3CpK,EAAA,cACEqK,WAAU,KACVC,QAAS,4CAA2CC,EAAA/B,EAAQtG,WAAO,MAAAqI,SAAA,SAAAA,EAAEC,mCAAkCC,EAAAjC,EAAQtG,WAAO,MAAAuI,SAAA,SAAAA,EAAEC,4BAExH1K,EAAA,QAAM2K,KAAK,kBAAkBxK,MAAO,oBACjCyK,EAAApC,EAAQtG,WAAO,MAAA0I,SAAA,SAAAA,EAAEC,eAIvBrL,KAAKqD,UACJ7C,EAAA,MAAIwJ,MAAM,MAAMrJ,MAAM,kBACnB2K,EAAAtC,EAAQtG,WAAO,MAAA4I,SAAA,SAAAA,EAAEC,UAGtB/K,EAAA,MAAIwJ,MAAM,QAAOwB,EAAAxC,EAAQtG,WAAO,MAAA8I,SAAA,SAAAA,EAAEC,YAClCjL,EAAA,MAAIwJ,MAAM,OACRxJ,EAAA,KAAGG,MAAM,WAAS,cAIxBH,EAAA,SAAOG,MAAM,IACVqD,EAAgB2E,SAAS+C,SAAW,GACnClL,EAAA,UACEA,EAAA,MAAImL,QAAS,IAAIC,EAAA5C,EAAQtG,WAAO,MAAAkJ,SAAA,SAAAA,EAAEC,uBAGrCC,EAAA9H,EAAgB2E,YAAQ,MAAAmD,SAAA,S,EAAElD,KAAInE,I,cAC7B,IAAIsH,EAAyB/L,KAAK4D,aAAaa,EAAQuH,uBAAyB,MAAQvH,EAAQ2C,OAAO6E,MACvG,MAAMC,EAAmBzH,EAAQ0H,kBAAoB1H,EAAQ0H,kBAAkB1H,EAAQ0H,kBAAkBT,OAAS,GAAK,KACvH,MAAMU,EAAepM,KAAKsJ,sBAAsB7E,GAChD,OACEjE,EAAA,MAAIE,IAAK+D,EAAQqE,aACftI,EAAA,MAAIG,MAAM,aACRH,EAAA,aACE6L,UAAU,OACVC,SAAU,CAAEC,QAAS,IAAKvL,OAAQ,KAClCS,eAAgB,IAAOzB,KAAKoD,gBAAkB,CAAEqB,UAAS+H,MAAO,QAChEhL,KAAMiD,EAAQqE,cAEfrE,EAAQgI,qBAAuBjM,EAAA,KAAGG,MAAM,mCAAmC8D,EAAQgI,sBAEtFjM,EAAA,UACEA,EAAA,KAAGG,MAAM,kBAAkB+L,EAAOjI,EAAQkI,UAAUC,KAAM,cAAcC,OAAO,gBAC/ErM,EAAA,KAAGG,MAAM,uBAAuBmM,EAAYrI,EAAQkI,UAAUI,KAAKC,WAAYvI,EAAQkI,UAAUM,OAAOD,cAE1GxM,EAAA,UACEA,EAAA,OAAKG,MAAM,mCAAmCE,MAAO,CAAEqM,MAAO,gBAC5D1M,EAAA,OAAKG,MAAM,YAAYwM,IAAK1I,EAAQ2I,OAAOC,KAAMC,IAAK7I,EAAQ2I,OAAOG,QACrE/M,EAAA,OAAKG,MAAM,aACTH,EAAA,OAAKG,MAAM,6BACTH,EAAA,OAAKG,MAAM,wBACTH,EAAA,aACE6L,UAAU,OACV5K,eAAgB,IAAOzB,KAAKoD,gBAAkB,CAAEqB,UAAS+H,MAAO,SAChEhL,KAAM,GAAGiD,EAAQ+I,MAAMC,eAAcxD,EAAAxF,EAAQ+I,MAAME,aAAS,MAAAzD,SAAA,EAAAA,EAAI,KAChEqC,SAAU,CACRY,MAAO,cACPX,QAAS,IACTvL,OAAQ,KAEV2M,WAAY,CACVpB,QAAS,OAGZ9H,EAAQ+I,MAAMI,uBAAyB,IAAMnJ,EAAQoJ,OACpDrN,EAAA,OAAKG,MAAM,WACTH,EAAA,cAAYsK,QAAS,GAAG9B,EAAQtG,QAAQoL,kBAAkBC,QAAQ,KAAMtJ,EAAQ+I,MAAMI,uBAAuBZ,YAAanC,WAAU,MAClIrK,EAAA,OAAKG,MAAM,qCAAqCwK,KAAK,mBACnD3K,EAAA,YAAUK,MAAO,CAAE,cAAe,YAAcmN,MAAM,UAAUC,KAAK,kBAW7EzN,EAAA,QAAMG,MAAO,WAEVyL,EACApD,EAAQtG,QAAQwL,OAElBC,EAAe1J,EAAQ2J,SAAW5N,EAAA,QAAMG,MAAM,iBAGnDH,EAAA,OAAKG,MAAO,+CACVH,EAAA,KAAGG,MAAM,uBAAuB8D,EAAQ2I,OAAOG,OAC9C9I,EAAQ4J,qBAAuB5J,EAAQ6J,WACtC9N,EAAA,OAAK+N,MAAM,6BAA6BC,QAAQ,cAAcC,OAAQ,GAAIvB,MAAO,IAC/E1M,EAAA,aAAQwI,EAAQtG,QAAQgM,4BACxBlO,EAAA,QACEmO,KAAK,UACLC,EAAE,8sBAIPnK,EAAQ6J,WACP9N,EAAA,OAAK+N,MAAM,6BAA6BI,KAAK,OAAOH,QAAQ,YAAW,eAAc,MAAMK,OAAO,eAAeJ,OAAQ,GAAIvB,MAAO,IAClI1M,EAAA,aAAQwI,EAAQtG,QAAQoM,WAAa,IAAMrK,EAAQ6J,WACnD9N,EAAA,yBACiB,QAAO,kBACN,QAChBoO,EAAE,8RAUhBpO,EAAA,UACEA,EAAA,UACGiE,EAAQkF,MAAMf,KAAImG,I,kBAAQ,OACzBvO,EAAA,UACEA,EAAA,OAAKG,MAAO,gBACVH,EAAA,KAAGG,MAAO,WAAYoO,EAAKC,SAASf,MACnCc,EAAKE,OACHC,EAAaH,EAAKC,SAAS5J,QAC3B+E,GAAAF,EAAC8E,EAAKE,QAAc,MAAAhF,SAAA,SAAAA,EAAEgE,QAAI,MAAA9D,SAAA,SAAAA,EAAEuB,QAAS,EACpClL,EAAA,cAAYqK,WAAU,KAACC,SAAST,EAAC0E,EAAKE,QAAc,MAAA5E,SAAA,SAAAA,EAAE4D,MACpDzN,EAAA,KAAGG,MAAO,yCAA0CwK,KAAK,oBACtDV,GAAAF,EAACwE,EAAKE,QAAc,MAAA1E,SAAA,SAAAA,EAAE0D,QAAI,MAAAxD,SAAA,SAAAA,EAAE0E,UAAU,EAAG,KAI9C3O,EAAA,KAAGG,MAAO,6BAA6BoK,GAAAJ,EAACoE,EAAKE,QAAc,MAAAtE,SAAA,SAAAA,EAAEsD,QAAI,MAAAlD,SAAA,SAAAA,EAAEoE,UAAU,EAAG,MAGnF,IAEN1K,EAAQ2K,gBAAkB5O,EAAA,UAAKwI,EAAQtG,QAAQ2M,qBAGpD7O,EAAA,UACEA,EAAA,KAAGG,MAAM,kBAAkB+L,EAAOjI,EAAQ6K,UAAW,cAAczC,OAAO,gBAC1ErM,EAAA,KAAGG,MAAM,kBAAkB+L,EAAOjI,EAAQ8K,QAAS,cAAc1C,OAAO,iBAE1ErM,EAAA,UACEA,EAAA,KAAGG,MAAM,UAAUE,MAAO,CAAE2O,WAAY,WACrCC,EAAahL,EAAQiL,SAASC,QAAQtF,GAAAF,EAAA1F,EAAQC,aAAS,MAAAyF,SAAA,SAAAA,EAAEyF,eAAW,MAAAvF,SAAA,EAAAA,EAAI,IAE1E5F,EAAQC,UAAUmL,aAAe,GAChCrP,EAAA,UACEsP,QAAS,KACP9P,KAAKoD,gBAAkB,CAAEqB,UAAS+H,MAAO,WACzCxM,KAAK6H,WAAW,EAElBhH,MAAO,CAAE2O,WAAY,UACrB7O,MAAM,uBAEL8D,EAAQ2C,OAAO6E,OAAS,MACrBxH,EAAQC,UAAUqL,mCAAqC,GACrDvP,EAACwP,EAAQ,KACPxP,EAAA,YAAOiE,EAAQC,UAAUqL,iCAAmC,EAAI,SAAW,SAAQ,KAClFN,EAAahL,EAAQiL,SAASC,OAAQrL,KAAK2L,IAAIxL,EAAQC,UAAUqL,oCAGtEN,EAAahL,EAAQiL,SAASC,OAAQlL,EAAQC,UAAUmL,cAIjE7P,KAAKqD,UACJ7C,EAAA,UACGiE,EAAQC,UAAUC,aAAe,MAAQF,EAAQC,UAAUC,aAAe,EACvE,IACA8K,EAAahL,EAAQiL,SAASC,OAAQlL,EAAQC,UAAUC,aAIhEnE,EAAA,UACEA,EAAA,KAAGG,MAAO,aAAaoL,iBACpBtH,EAAQuH,wBAAyBzB,EAAAvB,IAAO,MAAPA,SAAO,SAAPA,EAAStG,WAAO,MAAA6H,SAAA,SAAAA,EAAE2F,0BAA4BzL,EAAQ2C,OAAO+I,cAE/FjE,KAAoBzB,EAAAhG,EAAQ2L,UAAM,MAAA3F,SAAA,SAAAA,EAAEiB,QAAS,GAAKjH,EAAQ2L,OAAO,GAAGC,KAAKC,gBAAkB,YAC3F9P,EAAA,KAAGG,MAAM,iBAAiBE,MAAO,CAAE0P,UAAW,UAAWC,aAAc,MAAK,YAI7EtE,GACC1L,EAAA,cACEiQ,QAAQ,QACRC,QAAS,eAAexE,EAAiByE,WAAWzE,EAAiBU,QAAQV,EAAiBa,QAAQb,EAAiBe,UAEvHzM,EAAA,KAAGG,MAAM,6BAA6BE,MAAO,CAAE0P,UAAW,UAAWC,aAAc,MACjFhQ,EAAA,wBAKRA,EAAA,UACEA,EAAA,OAAKG,MAAM,mDAAmDE,MAAO,CAAEC,IAAK,QAC1EN,EAAA,aAAWoQ,MAAM,eAAeC,QAAQ,OAAOC,UAAU,OAAOrP,eAAgB,IAAOzB,KAAKoD,gBAAkB,CAAEqB,UAAS+H,MAAO,UAChIhM,EAAA,aACEoQ,MAAM,iBACN/P,MAAO,CAAE,sBAAuB,UAAW,4BAA6B,WACxEgQ,QAAQ,OACRC,UAAU,QACVrP,eAAgB,KACdzB,KAAKoD,gBAAkB,CAAEqB,UAAS+H,MAAO,UACzCxM,KAAK6H,WAAW,MAKrB,MAKZ7H,KAAKkD,WAAa,GACjB1C,EAAA,WAASG,MAAO,kGACdH,EAAA,KAAGG,MAAM,oBAAoBX,KAAK+I,mBAClCvI,EAAA,OAAKG,MAAO,+CACVH,EAAA,aACEe,KAAK,KACLwP,aAAc/Q,KAAKiD,cAAgB,EACnCxB,eAAgBC,UACd1B,KAAKiD,YAAc,QACbjD,KAAKmJ,YAAY,EAEzB2H,UAAU,cACVjQ,MAAO,CAAE,cAAe,cAE1BL,EAAA,aACEe,KAAK,KACLwP,aAAc/Q,KAAKiD,cAAgB,EACnCxB,eAAgBC,UACd1B,KAAKiD,YAAcjD,KAAKiD,YAAc,QAChCjD,KAAKmJ,YAAY,EAEzB2H,UAAU,aACVjQ,MAAO,CAAE,cAAe,cAE1BL,EAAA,aACEwQ,cAAehR,KAAKiD,YAAY+J,WAChCiE,gBAAiB,MACjBC,eAAgBxP,MAAMN,IACpBpB,KAAKiD,aAAe7B,EAAEC,aAChBrB,KAAKmJ,YAAY,EAEzBxH,KAAMwP,MAAM7J,KAAK6J,MAAMnR,KAAKkD,aAAa,CAACkO,EAAGC,IAAMA,EAAI,IAAGzI,KAAIyI,IAAC,CAC7D7P,KAAM6P,EAAErE,WACR/L,MAAOoQ,EAAErE,iBAGbxM,EAAA,aACEe,KAAK,KACLwP,aAAc/Q,KAAKiD,cAAgBjD,KAAKkD,WACxCzB,eAAgBC,UACd1B,KAAKiD,YAAcjD,KAAKiD,YAAc,QAChCjD,KAAKmJ,YAAY,EAEzB2H,UAAU,cACVjQ,MAAO,CAAE,cAAe,cAE1BL,EAAA,aACEe,KAAK,KACLwP,aAAc/Q,KAAKiD,cAAgBjD,KAAKkD,WACxCzB,eAAgBC,UACd1B,KAAKiD,YAAcjD,KAAKkD,WACxB2D,QAAQG,IAAIhH,KAAKiD,mBACXjD,KAAKmJ,YAAY,EAEzB2H,UAAU,eACVjQ,MAAO,CAAE,cAAe,mBAQrCb,KAAKoD,iBAAmB5C,EAAA,oBAAkB2F,eAAgBnG,KAAKmG,eAAgBmL,cAAe,IAAOtR,KAAKoD,gBAAkB,OAC7H5C,EAAA,cACE+Q,kBAAmBvR,KAAK8G,oBAAoB0K,KAAKxR,MACjDyR,KAAMzR,KAAKoD,kBAAoB,MAAQ,CAAC,OAAQ,SAASsO,SAAS1R,KAAKoD,gBAAgBoJ,OACvFmF,gBAAiB,MACjBC,gBACEC,EAAA7R,KAAKoD,mBAAe,MAAAyO,SAAA,SAAAA,EAAErF,SAAU,QAAU,CAAEsF,WAAY,SAAY,CAAE5E,MAAOlN,KAAKoD,gBAAkB,QAAU,6BAA8B0O,WAAY,cAGzJC,EAAA/R,KAAKoD,mBAAe,MAAA2O,SAAA,SAAAA,EAAEvF,SAAU,QAC/BhM,EAAA,sBACE2K,KAAK,eACLpG,EAAG/E,KAAK+E,EACRiN,SAAQ,KACRC,WAAU,KACVC,mBAAkB,KAClBpN,WAAY9E,KAAK8E,WACjBqN,YAAW,KACXC,cAAa,KACbC,eAAc,KACdC,eAAgB,IAAOtS,KAAKoD,gBAAkB,KAC9ClC,cAAelB,KAAKoD,gBAAgBqB,QAAQqE,YAC5C1I,OAAQJ,KAAKI,OACb0C,SAAU9C,KAAK8C,SACfyP,WAAU,SAGbC,EAAAxS,KAAKoD,mBAAe,MAAAoP,SAAA,SAAAA,EAAEhG,SAAU,SAC/BhM,EAAA,iBACE2K,KAAK,eACLsH,YAAa,KACbC,YAAW,KACX5J,aAAa6J,GAAAC,EAAA5S,KAAKoD,mBAAe,MAAAwP,SAAA,SAAAA,EAAEnO,WAAO,MAAAkO,SAAA,SAAAA,EAAE7J,YAC5C+J,OAAOC,GAAAC,EAAA/S,KAAKoD,mBAAe,MAAA2P,SAAA,SAAAA,EAAEtO,WAAO,MAAAqO,SAAA,SAAAA,EAAEtF,MAAMqF,MAC5C/P,SAAU9C,KAAK8C,SACfkQ,eAAgB,IAAOhT,KAAKoD,gBAAkB,Q,kGCnhB/C6P,EACJ,wBAAM9N,CAAmB/C,G,QAQ9B,IACE,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,wBAAyBO,GAC3D,GAAIT,EAAKI,eAAiB,GAAI,CAC5B,MAAM,IAAIiD,MAAMrD,EAAKI,a,CAEvB,MAAMmR,EAAUvR,EAAKK,UACrBmR,EAAcC,sBAAwBF,EAAQG,wBAC9CF,EAAcG,sBAAwBJ,EAAQK,wBAC9CJ,EAAcK,wBAA0BN,EAAQM,wBAChDL,EAAczD,SAAWwD,EAAQxD,SACjCyD,EAAcM,mBAAqBP,EAAQO,mBAC3CN,EAAcO,eAAiBR,EAAQQ,eACvCP,EAAcQ,WAAaT,EAAQS,WACnCR,EAAcS,UAAYV,EAAQW,UAClCV,EAAcW,MAAQZ,EAAQY,MAC9BX,EAAc/N,GAAK8N,EAAQ9N,GAC3B+N,EAAcY,QAAUb,EAAQa,QAChCZ,EAAclF,KAAOiF,EAAQjF,KAC7BkF,EAAca,0BAA4Bd,EAAQc,0BAClDb,EAAcc,cAAgBf,EAAQe,cACtCd,EAAce,qBAAuBhB,EAAQgB,qBAC7Cf,EAAcgB,eAAiBjB,EAAQiB,eACvC,MAAMC,GAAWjK,GAAAF,EAAAiJ,IAAO,MAAPA,SAAO,SAAPA,EAASmB,oBAAgB,MAAApK,SAAA,SAAAA,EAAEqK,kBAAc,MAAAnK,SAAA,SAAAA,EAAEoK,MAAM,KAClEpB,EAAcqB,uBAAyB,CACrCC,OAAQvB,EAAQwB,KAAKC,WACrB5H,KAAM7F,OAAOkN,EAAS,IAAM,GAC5BnH,OAAQ/F,OAAOkN,EAAS,IAAM,IAEhC,OAAOzS,C,CACP,MAAOiF,GACPC,QAAQG,IAAIJ,GACZ,MAAM,IAAI5B,MAAM4B,E,EAGb,qBAAMgO,CAAgBxS,GAC3B,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,qBAAsBO,GACxD,GAAIT,EAAKI,eAAiB,GAAI,CAC5B,MAAM,IAAIiD,MAAMrD,EAAKI,a,CAEvB,GAAIK,EAAOyS,mBAAoB,CAC7BC,EAAanT,EAAKoT,4BAA4BC,W,CAEhD,OAAOrT,EAAKK,S,CAEP,2BAAMiT,CAAsB7S,GACjC,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,4BAA6BO,GAC/D,GAAIT,EAAKI,eAAiB,GAAI,CAC5B,MAAM,IAAIiD,MAAMrD,EAAKI,a,CAEvB,GAAIK,EAAOyS,mBAAoB,CAC7BC,EAAanT,EAAKuT,mCAAmCF,W,CAEvD,OAAOrT,EAAKK,S,CAEP,iCAAMmT,CAA4B/S,GACvC,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,kCAAmCO,GACrE,GAAIT,EAAKI,eAAiB,GAAI,CAC5B,MAAM,IAAIiD,MAAMrD,EAAKI,a,CAEvB,OAAOJ,EAAKK,S,CAEP,qBAAMoT,CAAgBhT,GAC3B,MAAMT,KAAEA,SAAeC,EAAMC,KAAK,qBAAsBO,GACxD,GAAIT,EAAKI,eAAiB,GAAI,CAC5B,MAAM,IAAIiD,MAAMrD,EAAKI,a,CAEvB,GAAIK,EAAOyS,mBAAoB,CAC7BC,EAAanT,EAAK0T,4BAA4BL,W,CAEhD,OAAOrT,EAAKK,S,EC3HhB,MAAMsT,EAAoB,0QAC1B,MAAAC,EAAeD,E,MCeFE,EAAc,MAL3B,WAAA1V,CAAAC,G,2DAMUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAShBJ,KAAAyV,QAA8B,CAAE7I,KAAMF,IAASG,OAAO,cAAe6I,MAAO,MAG7E1V,KAAA2V,aAAe,IAAIzV,EACnBF,KAAA0D,YAAc,IAAIC,EAClB3D,KAAA4V,gBAAkB,IAAI3C,EACtBjT,KAAAwD,eAAiB,IAAIC,EAyCrBzD,KAAA6V,mBAAsBzU,IAC5BA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAK8V,aAAe,IAAI,C,CAvC1B,iBAAA3V,GACE,GAAIH,KAAKI,OAAQ,CACfJ,KAAK2V,aAAatV,SAASL,KAAKI,QAChCJ,KAAKiE,e,EAKT,aAAAW,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAK2V,aAAatV,SAASL,KAAKI,QAChCJ,KAAKiE,e,CAIP,iBAAA8R,CAAkB3U,GAChBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAK8V,aAAe1U,EAAEC,M,CAGxB,qBAAA2U,CAAsB5U,GACpBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKyV,QAAOjP,OAAAC,OAAA,GAAQrF,EAAEC,QACtBrB,KAAKiW,mB,CAGP,wBAAMC,CAAmB9U,GACvBA,EAAEoH,kBACFpH,EAAEmH,2BACFvI,KAAKiW,kBAAkB,MAAO,K,CASxB,iBAAAE,GACN,IAAKnW,KAAK8V,aAAc,CACtB,M,CAEF,OAAQ9V,KAAK8V,aAAazF,MACxB,IAAK,UACH,OACE7P,EAAA,sBACE2K,KAAK,eACL6G,SAAQ,KACRC,WAAU,KACVI,eAAc,KACdC,eAAgBtS,KAAK6V,mBACrB3D,mBAAkB,KAClBpN,WAAY9E,KAAKoW,YACjBjE,YAAW,KACXC,cAAa,KACblR,cAAelB,KAAK8V,aAAaO,QAAQnV,cAAc8L,WACvD5M,OAAQJ,KAAKI,OACb0C,SAAU9C,KAAK8C,SACfyP,WAAU,OAGhB,QACE,OAAO,K,CAIL,mBAAMtO,GACZjE,KAAKsW,cAAgB,KAErB,IACE,IAAIrR,EAAajF,KAAK8E,WACtB,IAAKG,IAAejF,KAAK+E,EAAG,CAC1B,MAAM,IAAIC,MAAM,sC,CAElB,IAAKC,EAAY,CACf,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,OAE3BtR,EAAaC,EAAalD,UAAUoD,E,CAGtCpF,KAAKoW,YAAcnR,EAEnB,MAAMM,EAA2B,CAC/BvF,KAAKwD,eAAegC,gCAAgC,CAAC,YAAa,kBAAmB,gBACrFxF,KAAKiW,oBACLjW,KAAK0D,YAAYgC,cAAc1F,KAAK8C,WAEtC,GAAImC,EAAY,CACdM,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIH,EACJnC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,O,CAK/B,MAAO3Q,SAAsBC,QAAQC,IAAIP,GACzC,MAAMQ,SAAEA,EAAQC,eAAEA,EAAcC,WAAEA,GAAejG,KAAKwD,eAAe0C,uBAAuBN,GAC5F5F,KAAKmG,eAAiB,CACpBC,OAAQJ,EACRK,QAASJ,EACTK,MAAOP,E,CAET,MAAOa,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKsW,cAAgB,K,EAGjB,mBAAAE,CAAoBC,G,MAC1B,MAAMC,EAAsC,IAAIC,IAEhD,IAAK,MAAMC,KAAWH,EAAU,CAC9B,MAAM/V,EAAM,GAAGkW,EAAQC,eAAeD,EAAQE,gBAC9C,MAAM/R,GAAIkF,EAAAyM,EAAeK,IAAIrW,MAAI,MAAAuJ,SAAA,EAAAA,EAAI,GACrCyM,EAAeM,IAAItW,EAAK,IAAIqE,EAAG6R,G,CAEjC,OAAO,IAAID,IACT,IAAID,EAAehU,WAAWuU,MAAK,EAAEC,IAAKrO,MACxC,MAAMsO,EAAOjQ,OAAOgQ,GACpB,MAAME,EAAOlQ,OAAO2B,GACpB,IAAKwO,MAAMF,KAAUE,MAAMD,GAAO,CAChC,OAAOD,EAAOC,C,CAEhB,OAAOF,EAAEI,cAAczO,EAAE,I,CAKvB,uBAAMoN,CAAkBsB,EAAkB,MAAOC,EAAmB,O,YAC1E,IACE,MAAMC,EAAgBC,IACb,CACLC,OAAQD,EAAOE,OACff,YAAaa,EAAOG,cACpBf,cAAeY,EAAOI,gBACtBC,OAAQL,EAAOM,OACfpL,KAAM8K,EAAOO,KACblL,KAAM2K,EAAOQ,KACbjL,OAAQyK,EAAOS,OACfxH,KAAM+G,EAAOU,KACb1I,SAAUgI,EAAOW,SACjBC,WAAYZ,EAAOa,YACnBnT,GAAIoT,MAGRxY,KAAKgD,UAAYuU,EAAkB,SAAW,SAE9C,MAAMhS,EAAW,CACfvF,KAAK4V,gBAAgBX,sBAAsB,CACzCrI,KAAM5M,KAAKyV,QAAQ7I,KACnBwJ,aAAanM,EAAAjK,KAAKoW,eAAW,MAAAnM,SAAA,SAAAA,EAAE+C,WAC/B6H,mBAAoB0C,KAGxB,IAAKA,IAAoBC,EAAkB,CACzCjS,EAASI,KACP3F,KAAK4V,gBAAgBX,sBAAsB,CACzCrI,KAAMF,EAAO1M,KAAKyV,QAAQ7I,KAAM,cAAc6L,KAAK,EAAG,QAAQ5L,OAAO,cACrEuJ,aAAajM,EAAAnK,KAAKoW,eAAW,MAAAjM,SAAA,SAAAA,EAAE6C,WAC/B6H,mBAAoB0C,I,CAK1B,MAAMrE,QAAgBrN,QAAQC,IAAIP,GAClC,IAAKgS,EAAiB,CACpB,GAAIrE,EAAQ,GAAI,CACdlT,KAAK0W,eAAiB1W,KAAKwW,qBAAoBnM,EAAA6I,EAAQ,MAAE,MAAA7I,SAAA,SAAAA,EAAEzB,IAAI6O,G,KAC1D,CACLzX,KAAK0W,eAAiB,IAAIC,G,CAE5B,GAAIzD,EAAQ,GAAIlT,KAAK0Y,4BAA8B1Y,KAAKwW,qBAAoBjM,EAAA2I,EAAQ,MAAE,MAAA3I,SAAA,SAAAA,EAAE3B,IAAI6O,G,EAE9F,MAAOrW,GACPyF,QAAQG,IAAI5F,E,SAEZpB,KAAKgD,UAAY,I,EAIrB,MAAAzC,G,UACE,GAAIP,KAAKsW,cAAe,CACtB,OAAO9V,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,WAASG,MAAM,yBAAyBE,MAAO,CAAEC,IAAK,SACpDN,EAAA,OAAKG,MAAM,qDACTH,EAAA,MAAIG,MAAM,gBAAc,iBACxBH,EAAA,aACEe,KAAK,KACL8K,UAAU,UACVrJ,UAAWhD,KAAKgD,YAAc,SAC9BxB,MAAMyI,EAAAjB,EAAQtG,WAAO,MAAAuH,SAAA,SAAAA,EAAE0O,WACvBlX,eAAgBC,MAAMN,IACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAKiW,kBAAkB,KAAK,EAEpC3J,SAAU,CAAEmC,OAAQ,QACpBmK,aAAa,QACb9H,UAAU,OACV+H,WAAY,CAAE,cAAe,WAGjCrY,EAAA,sBACEkY,4BAA6B1Y,KAAK0Y,4BAClCI,gBAAiB9Y,KAAK0W,eACtBvQ,eAAgBnG,KAAKmG,iBAEvB3F,EAAA,OAAKG,MAAM,uBACTH,EAAA,4BAA0BwC,UAAWhD,KAAKgD,YAAc,SAAUyT,SAAUzW,KAAK0W,iBACjFlW,EAAA,oBAAkBiV,QAASzV,KAAKyV,QAAS9U,MAAO,uBAAwBwF,eAAgBnG,KAAKmG,eAAgBsQ,SAAUzW,KAAK0W,mBAGhIlW,EAAA,cACEoR,cAAe,CACb1E,QAAO/C,EAAAnK,KAAK8V,gBAAY,MAAA3L,SAAA,SAAAA,EAAEkG,QAAS,UAAY,QAAU,6BACzDyB,aAAYzH,EAAArK,KAAK8V,gBAAY,MAAAzL,SAAA,SAAAA,EAAEgG,QAAS,UAAY,UAAY,SAElEoB,KAAMsH,QAAQ/Y,KAAK8V,cACnBnE,gBAAiB,MACjBJ,kBAAmBvR,KAAK6V,oBAEvB7V,KAAKmW,qB,oECpRhB,MAAM6C,EAAe,0PACrB,MAAAC,EAAeD,E,MCmBFE,EAAS,MALtB,WAAApZ,CAAAC,G,qEAQUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAKhBJ,KAAAgD,UAAY,MACZhD,KAAAmZ,kBAAoB,MACpBnZ,KAAAoZ,iBAAmB,GACnBpZ,KAAAqZ,oBAAsB,IACtBrZ,KAAAsZ,aAAuC,KACvCtZ,KAAAuZ,cAAgB,MASjBvZ,KAAAwZ,YAAsC,GACtCxZ,KAAA0D,YAAc,IAAIC,EAClB3D,KAAAyZ,oBAAsB,IAAIC,EAC1B1Z,KAAAC,MAAQ,IAAIC,EACZF,KAAA2Z,cAA6C,IAAIhD,G,CAGzD,iBAAAxW,GACE,GAAIH,KAAK6D,QAAS,CAChB7D,KAAKC,MAAM6D,WAAW9D,KAAK6D,Q,CAE7B,GAAI7D,KAAKI,SAAW,GAAI,CACtBJ,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAK4Z,M,EAKT,aAAAhV,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAK4Z,M,CAIP,kBAAAC,CAAmBzY,GACjBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAK8Z,cAAgB,K,CAGvB,oBAAAC,CAAqB3Y,GACnBA,EAAEmH,2BACFnH,EAAEoH,kBACF,MAAMwR,MAAEA,EAAKC,UAAEA,GAAc7Y,EAAEC,OAC/BwF,QAAQG,IAAI5F,EAAEC,QACd,GAAI2Y,IAAU,OAAQ,CACpB,M,CAEFha,KAAK2Z,cAAc3C,IAAIgD,EAAOC,E,CAGhC,sBAAAC,CAAuB9Y,G,MACrBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKma,YAAc,CAAEC,KAAMhZ,EAAEC,OAAQmL,MAAO,SAC5CvC,EAAAjK,KAAKqa,SAAK,MAAApQ,SAAA,SAAAA,EAAEpC,W,CAGN,UAAM+R,G,kBACZ,IACE5Z,KAAKgD,UAAY,KACjBsX,EAAW,MACX,IAAIrV,EAAajF,KAAK8E,WACtB,IAAK9E,KAAK8E,aAAe9E,KAAK+E,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAGlB,IAAKC,EAAY,CACf4B,QAAQG,IAAI/B,GACZ,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,OAG3BtR,EAAaC,EAAalD,UAAUoD,E,CAEtCpF,KAAKoW,YAAcnR,EACnB,MAAMM,EAAW,CAACvF,KAAKyZ,oBAAoBc,kBAAkBva,KAAKoW,aAAcpW,KAAK0D,YAAYgC,cAAc1F,KAAK8C,WACpH,GAAI9C,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIpF,KAAK8E,WACThC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,O,OAKzB1Q,QAAQC,IAAIP,GAClB,MAAMiV,QAAoBxa,KAAKyZ,oBAAoBgB,WAAW,CAC5DrE,YAAapW,KAAKoW,YAClB9G,UAAW5C,IAASG,OAAO,cAC3B0C,QAAS7C,IAASG,OAAO,cACzB6N,aAAc,GACdC,oBAAoBtQ,GAACJ,EAAAkJ,EAAcwH,sBAAkB,MAAA1Q,SAAA,EAAAA,GAAIE,EAAAyQ,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAA1Q,SAAA,SAAAA,EAAE2Q,qBAAqB,MAAG,MAAAzQ,SAAA,SAAAA,EAAE4B,KACpH8O,cAActQ,GAAAF,EAAAqQ,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAtQ,SAAA,SAAAA,EAAEyQ,cAAc,MAAE,MAAAvQ,SAAA,SAAAA,EAAEwB,KACjEgP,kBAAkBlQ,GAAAJ,EAAAiQ,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAAlQ,SAAA,SAAAA,EAAEuQ,0BAA0B,MAAE,MAAAnQ,SAAA,SAAAA,EAAEkB,OAInF,GAAIuO,IAAW,MAAXA,SAAW,SAAXA,EAAaW,MAAO,CACtBnb,KAAKob,YAAYZ,EAAYW,M,EAE/B,MAAOvU,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKgD,UAAY,MACjBsX,EAAW,M,EAIP,yBAAAe,G,QACNrb,KAAKwZ,YAAc,IACnBrP,GAAAF,EAAA2Q,EAAmBC,eAAW,MAAA5Q,SAAA,SAAAA,EAAEyQ,gBAAY,MAAAvQ,SAAA,SAAAA,EAAEmR,SAAQC,IACpD,GAAIA,EAAGnW,IAAM,MAAQmW,EAAGtN,MAAQ,KAAM,CACpCjO,KAAKwZ,YAAY+B,EAAGnW,IAAMmW,EAAGtN,I,KAK3B,WAAAmN,CAAYD,GAClBnb,KAAKqb,4BACLG,EACEL,EAAMvS,KAAI6S,GAACjV,OAAAC,OAAAD,OAAAC,OAAA,GACNgV,GAAC,CACJrW,GAAIoT,IACJkD,YAAa,M,UACX,MAAMzN,EAAOjO,KAAKwZ,YAAYiC,EAAEE,QAChC,GAAI1N,EAAM,CACR,OAAOA,C,CAET,MAAM2N,GAASvR,GAAAF,GAAAF,EAAA2Q,EAAmBC,eAAW,MAAA5Q,SAAA,SAAAA,EAAEyQ,gBAAY,MAAAvQ,SAAA,SAAAA,EAAE0R,MAAKN,GAAMA,EAAGnW,KAAOqW,EAAEE,YAAO,MAAAtR,SAAA,SAAAA,EAAE4D,KAC7FjO,KAAKwZ,YAAYiC,EAAEE,QAAUC,EAC7B,OAAOA,CACR,EARY,O,CAanB,6BAAME,CAAwB1a,G,MAC5BA,EAAEmH,2BACFnH,EAAEoH,kBACF,MAAMyF,KAAEA,GAAS7M,EAAEC,OACnB,OAAQ4M,GACN,IAAK,UACL,IAAK,iBACHhE,EAAAjK,KAAKqa,SAAK,MAAApQ,SAAA,SAAAA,EAAEpC,YACZ7H,KAAKma,YAAc,CACjBC,KAAM,KACN5N,MAAO,QACPpF,OAAQ6G,IAAS,gBAAkB,MAAQ,OAE7C,MACF,IAAK,SACH,MAAM8N,EAAiD5K,MAAM7J,KAAKtH,KAAK2Z,cAAcjX,WAAWkG,KAAI,EAAElI,EAAKO,MAAM,CAC/GP,MACAO,YAEF4F,QAAQG,IAAI+U,GACZ,MAAMC,IAAEA,SAAchc,KAAKic,sBAAsB,MACjDnH,EAAakH,GACb,MACF,IAAK,UACHhc,KAAK8Z,cAAgB,KACrB,M,CAIN,+BAAAoC,CAAgC9a,G,MAC9BA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKma,YAAW3T,OAAAC,OAAAD,OAAAC,OAAA,GAAQrF,EAAEC,QAAM,CAAEmL,MAAO,WACzCvC,EAAAjK,KAAKqa,SAAK,MAAApQ,SAAA,SAAAA,EAAEpC,W,CAGN,6BAAMsU,CAAwB/a,G,MACpC,IACEA,EAAEmH,2BACFnH,EAAEoH,kBACF,GAAI4T,EAAaC,cAAc3Q,SAAW,EAAG,CAC3C,M,CAEF1L,KAAKmZ,kBAAoB,KACzB,KAAIlP,EAAAjK,KAAKma,eAAW,MAAAlQ,SAAA,SAAAA,EAAEuC,SAAU,OAAQ,CACtC,MAAM1D,YAAEA,EAAW8D,KAAEA,EAAIqC,KAAEA,GAASjP,KAAKma,YAAYC,WAC/Cpa,KAAKyZ,oBAAoB6C,WAAW,CACxCxa,SAAUgH,EACVmP,KAAMrL,EACN2P,QAAS,GACTC,YAAa,EACbC,oBAAqB,MACrBC,MAAOzN,EAAK7J,I,KAET,OACCpF,KAAKyZ,oBAAoBkD,gBAAgB,CAC7CC,QAASR,EAAaC,cAAczT,KAAI6S,I,QAAK,OAC3CtL,YAAa,UACbwL,OAAQF,EAAEE,SAAW,EAAI,KAAOF,EAAEE,OAClCkB,QAASpB,EAAExM,KAAK7J,GAChB0D,YAAa2S,EAAE3S,YACf1B,QAAQ+C,GAAAF,EAAAjK,KAAKma,eAAW,MAAAlQ,SAAA,SAAAA,EAAE7C,UAAM,MAAA+C,SAAA,EAAAA,EAAI,MACrC,K,OAGCnK,KAAKic,uB,SAEXa,IACA,GAAI9c,KAAKma,YAAa,CACpBna,KAAKma,YAAc,I,CAErBna,KAAKmZ,kBAAoB,MAEzBnZ,KAAKqa,MAAM0C,Y,EAIP,kBAAMC,CAAa5b,GACzB,IACEpB,KAAKid,sBAAwB,KAC7B7b,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKyV,QAAOjP,OAAAC,OAAA,GAAQrF,EAAEC,cAChBrB,KAAKic,uB,CACX,MAAOrV,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKid,sBAAwB,K,EAIzB,2BAAMhB,CAAsBiB,EAA2B,O,MAC7D,MAAMC,iBAAEA,EAAgBzC,aAAEA,EAAYI,qBAAEA,EAAoBsC,YAAEA,EAAWC,oBAAEA,IAAwBpT,EAAAjK,KAAKyV,WAAO,MAAAxL,SAAA,EAAAA,EAAI,GAEnH,MAAMkR,MAAEA,EAAKa,IAAEA,SAAchc,KAAKyZ,oBAAoBgB,WAAW,CAC/DC,eACAC,mBAAoBG,IAAoB,MAApBA,SAAoB,SAApBA,EAAsB7O,KAC1C8O,aAAcqC,IAAW,MAAXA,SAAW,SAAXA,EAAanR,KAC3BgP,iBAAkBoC,IAAmB,MAAnBA,SAAmB,SAAnBA,EAAqBpR,KACvCmK,YAAapW,KAAKoW,YAClB9G,UAAW5C,IAASG,OAAO,cAC3B0C,SAAS4N,IAAgB,MAAhBA,SAAgB,SAAhBA,EAAkBlR,OAAQS,IAASG,OAAO,cACnDgI,mBAAoBqI,IAEtBrW,QAAQG,IAAImU,GACZ,GAAIA,EAAO,CACTnb,KAAKob,YAAYD,E,CAEnB,MAAO,CAAEA,QAAOa,M,CAGlB,MAAAzb,G,YACE,GAAIP,KAAKgD,UAAW,CAClB,OAAOxC,EAAA,yB,CAET,OACEA,EAACC,EAAI,eAAa,iBAChBD,EAAA,iBACAA,EAAA,uBACAA,EAAA,WAASG,MAAM,yBAAyBE,MAAO,CAAEC,IAAK,SACpDN,EAAA,gCACAA,EAAA,OAAKG,MAAM,cAAcE,MAAO,CAAEC,IAAK,SACrCN,EAAA,oBACEwC,UAAWhD,KAAKid,sBAChBK,eAAgBlc,IACdpB,KAAKgd,aAAa5b,EAAE,IAGxBZ,EAAA,OAAKG,MAAM,2BAA2BE,MAAO,CAAEC,IAAK,SAClDN,EAAA,kBACE+c,kBAAmBnc,IACjBA,EAAEmH,2BACFnH,EAAEoH,kBACFgV,EAAoBpc,EAAEC,OAAO,EAE/BV,MAAM,yBAMdH,EAAA,YACEid,UAAW,MACXC,IAAKzV,GAAOjI,KAAKqa,MAAQpS,EACzBjF,UAAWhD,KAAKmZ,kBAChBwE,eAAgB3d,KAAKmc,wBAAwB3K,KAAKxR,MAClD4d,cAAe,KACb,GAAI5d,KAAKma,YAAa,CACpB2C,IACA9c,KAAKma,YAAc,I,GAGvB0D,cAAe,KACfC,KAAK,8BACLC,YAAa/U,EAAQtG,QAAQsb,WAC7BC,aAAcjV,EAAQtG,QAAQwb,YAC9BC,aAAa,YACbC,cAAe,UACfC,WAAYrV,EAAQtG,QAAQ4b,iBAC5BC,UACEve,KAAKma,cACDlQ,EAAAjK,KAAKma,eAAW,MAAAlQ,SAAA,SAAAA,EAAEuC,SAAU,QAC1BxM,KAAKma,YAAYC,KACf,WAAU7P,GAAAF,GAAAF,EAAAnK,KAAKma,eAAW,MAAAhQ,SAAA,SAAAA,EAAEiQ,QAAI,MAAA/P,SAAA,SAAAA,EAAE4E,QAAI,MAAA1E,SAAA,SAAAA,EAAE0D,gBACxC,mCACF,6CACF,qCAGRzN,EAAA,cACEiR,KAAMzR,KAAK8Z,cACX1U,GAAG,gBACHmM,kBAAmBnQ,IACjBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAK8Z,cAAgB,KAAK,EAK5BnI,gBAAiB,OAEhB3R,KAAK8Z,eAAiBtZ,EAAA,iBAAeJ,OAAQJ,KAAKC,MAAMue,WAAYvZ,WAAYjF,KAAKoW,YAAajL,KAAK,kB,4FCzWlH,MAAMsT,EAAoB,uCAC1B,MAAAC,EAAeD,E,MCcFE,EAAc,MAL3B,WAAA7e,CAAAC,G,uCAMUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAMhBJ,KAAAgD,UAAY,MAIbhD,KAAA0D,YAAc,IAAIC,EAClB3D,KAAAyZ,oBAAsB,IAAIC,EAC1B1Z,KAAA4V,gBAAkB,IAAI3C,EACtBjT,KAAAC,MAAQ,IAAIC,C,CAIpB,iBAAAC,GACE,GAAIH,KAAK6D,QAAS,CAChB7D,KAAKC,MAAM6D,WAAW9D,KAAK6D,Q,CAE7B,GAAI7D,KAAKI,SAAW,GAAI,CACtBJ,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,EAIT,qBAAMqE,CAAgBlH,GACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAKyZ,oBAAoBc,kBAAkBva,KAAK8E,W,CAGxD,aAAAF,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,CAGP,mBAAMA,G,MACJ,IACEjE,KAAKgD,UAAY,KACjB,IAAIiC,EAAajF,KAAK8E,WACtB,IAAKG,EAAY,CACf,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZsZ,yBAA0B,OAE5B3Z,EAAaC,EAAalD,UAAUoD,E,CAEtCyZ,EAAc,qBAAsB,CAAE5e,MAAOD,KAAKI,OAAQgW,YAAanR,EAAYnC,SAAU9C,KAAK8C,WAClG,MAAMyC,EAAgC,GACtC,GAAI4N,EAAc2L,qBAAsB,CACtCvZ,EAASI,KAAK3F,KAAKyZ,oBAAoBc,kBAAkBtV,G,CAE3DM,EAASI,KAAK3F,KAAK0D,YAAYgC,cAAc1F,KAAK8C,SAAU,CAAC,YAAa,gBAC1E,GAAI9C,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIH,EACJnC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZsZ,yBAA0B,O,OAK1B/Y,QAAQC,IAAIP,GAClBvF,KAAK+e,2BAA4B9U,EAAAkJ,EAAcwH,sBAAkB,MAAA1Q,SAAA,SAAAA,EAAEgC,I,CACnE,MAAOrF,GACPC,QAAQD,MAAMA,E,SAEd5G,KAAKgD,UAAY,K,EAGb,kCAAMgc,CAA6B5d,GACzCA,EAAEmH,2BACFnH,EAAEoH,kBACF,UACQxI,KAAK0D,YAAYub,uBAAuB,CAC5C7I,YAAawE,EAAmBsE,mBAAmB9I,YACnD+I,KAAM/d,EAAEC,SAAW,SAErBrB,KAAKof,MAAMC,KAAK,CACdC,SAAU,YACV1O,MAAO,qBACPT,YAAa,GACbE,KAAM,W,CAER,MAAOzJ,GACPC,QAAQG,IAAIJ,E,EAGR,2BAAM2Y,CAAsBne,GAClCA,EAAEmH,2BACFnH,EAAEoH,kBACF,UACQxI,KAAK4V,gBAAgBT,4BAA4B,CACrDiB,YAAawE,EAAmBsE,mBAAmB9I,YACnDnK,KAAMjM,KAAK+e,4BAEb5L,EAAcwH,mBAAqB,CAAE1O,KAAMjM,KAAK+e,0BAA2B5O,YAAa,IACxFnQ,KAAKof,MAAMC,KAAK,CACdC,SAAU,YACV1O,MAAO,qBACPT,YAAa,GACbE,KAAM,YAERrQ,KAAKqa,MAAM0C,Y,CACX,MAAOnW,GACPC,QAAQG,IAAIJ,E,EAGhB,MAAArG,G,MACE,GAAIP,KAAKgD,UAAW,CAClB,OAAOxC,EAAA,yB,CAETqG,QAAQG,IAAImM,EAAcwH,oBAC1B,OACEna,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,iBACAA,EAAA,WAASG,MAAM,OACbH,EAAA,MAAIG,MAAM,QAAQqI,EAAQtG,QAAQ8c,iCAClChf,EAAA,OAAKG,MAAM,YACTH,EAAA,YAAUif,YAAW,KAACC,MAAM,wBAC5Blf,EAAA,OAAKG,MAAO,kCACVH,EAAA,KAAGG,MAAM,kBAAkBqI,EAAQtG,QAAQid,mCAC3Cnf,EAAA,aACEyQ,gBAAiB,MACjBD,cAAemC,EAAca,0BAA4B,OAAS,SAClE9C,eAAgB9P,GAAKpB,KAAKgf,6BAA6B5d,GACvDO,KAAM,CACJ,CAAEH,KAAMwH,EAAQtG,QAAQkd,2BAA4B3e,MAAO,QAC3D,CAAEO,KAAMwH,EAAQtG,QAAQmd,wBAAyB5e,MAAO,cAI9DT,EAAA,OAAKG,MAAO,6BACVH,EAAA,KAAGG,MAAM,kBAAkBqI,EAAQtG,QAAQod,sBAAqB,KAChEtf,EAAA,aACEyQ,gBAAiB,MACjBD,cAAehR,KAAK+e,0BACpB7N,eAAgB9P,IACdA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAK+e,0BAA4B3d,EAAEC,OACnCrB,KAAKqa,MAAMxS,WAAW,EAExBlG,MAAMsI,EAAA2Q,IAAkB,MAAlBA,SAAkB,SAAlBA,EAAoBC,eAAW,MAAA5Q,SAAA,SAAAA,EAAE6Q,qBAAqBlS,KAAImX,IAAC,CAC/Dve,KAAMue,EAAE5P,YACRlP,MAAO8e,EAAE9T,aAMhBkH,EAAc2L,sBAAwBte,EAAA,cAAYG,MAAM,SACzDH,EAAA,YACEid,UAAW,MACXC,IAAKzV,GAAOjI,KAAKqa,MAAQpS,EACzBjF,UAAWgd,EAAiB,mCAC5BrC,eAAgB3d,KAAKuf,sBAAsB/N,KAAKxR,MAChD6d,cAAe,KACfD,cAAe,K,MACb5d,KAAK+e,2BAA4B9U,EAAAkJ,EAAcwH,sBAAkB,MAAA1Q,SAAA,SAAAA,EAAEgC,IAAI,EAEzE6R,KAAK,8BACLC,YAAa/U,EAAQtG,QAAQsb,WAC7BC,aAAcjV,EAAQtG,QAAQwb,YAC9BC,aAAa,YACbC,cAAe,UACfC,WAAYrV,EAAQtG,QAAQ4b,iBAC5BC,UAAW,8E,oECnMvB,MAAM0B,EAA6B,kDACnC,MAAAC,EAAeD,E,qXCYFE,GAAuB,MALpC,WAAArgB,CAAAC,G,UAMUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAIhBJ,KAAAsW,cAAgB,KAChBtW,KAAAgD,UAAwC,KAExChD,KAAAogB,QAAyB,GAO1BpgB,KAAA2V,aAAe,IAAIzV,EACnBF,KAAA0D,YAAc,IAAIC,EAClB3D,KAAA4V,gBAAkB,IAAI3C,C,CAE9B,iBAAA9S,GACEH,KAAKqgB,YAAc,CACjBzT,KAAM,CACJuD,YAAazD,IAASG,OAAO,aAC7ByT,aAAc5T,IAAS6T,QAAQ,SAAS1T,OAAO,cAC/C2T,YAAa9T,IAAS+T,MAAM,SAAS5T,OAAO,eAE9C6T,sBAAuB,OAEzB1gB,KAAKyV,QAAUzV,KAAKqgB,YACpB,GAAIrgB,KAAKI,OAAQ,CACfJ,KAAK2V,aAAatV,SAASL,KAAKI,QAChCJ,KAAK4Z,M,EAIT,kBAAAtZ,CAAmB6D,EAAkBU,GACnC,GAAIV,IAAaU,EAAU,CACzB7E,KAAK2V,aAAatV,SAASL,KAAKI,QAChCJ,KAAK4Z,M,EAIT,wBAAA+G,CAAyBvf,GACvBA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKyV,QAAUrU,EAAEC,OACjBrB,KAAK4gB,Y,CAGC,UAAMhH,GACZ,IACE,IAAI3U,EAAajF,KAAK8E,WACtB,IAAK9E,KAAK8E,aAAe9E,KAAK+E,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAGlB,IAAKC,EAAY,CACf4B,QAAQG,IAAI/B,GACZ,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,OAG3BtR,EAAaC,EAAalD,UAAUoD,E,CAEtCpF,KAAKoW,YAAcnR,EACnB,MAAMM,EAAW,CAACvF,KAAK0D,YAAYgC,cAAc1F,KAAK8C,UAAW9C,KAAK4gB,cACtE,GAAI5gB,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIpF,KAAK8E,WACThC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,O,OAKzB1Q,QAAQC,IAAIP,E,CAClB,MAAOqB,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKsW,cAAgB,K,EAIjB,gBAAMsK,CAAWrJ,EAAkB,OACzC,IACE,MAAME,EAAgBC,IACb,CACLmJ,IAAKnJ,EAAOoJ,KACZC,aAAcrJ,EAAOsJ,aACrBC,kBAAmBvJ,EAAOwJ,UAC1BC,IAAKzJ,EAAO0J,IACZC,cAAe3J,EAAO4J,cACtBC,aAAc7J,IAAM,MAANA,SAAM,SAANA,EAAQ8J,eAG1BxhB,KAAKgD,UAAYuU,EAAkB,SAAW,SAC9C,MAAM3K,KAAEA,EAAI8T,sBAAEA,GAA0B1gB,KAAKyV,QAE7C,MAAMlQ,EAAW,CACfvF,KAAK4V,gBAAgBR,gBAAgB,CACnC9F,UAAW1C,EAAK0T,aAChB/Q,QAAS3C,EAAK4T,YACdpK,YAAapW,KAAKoW,YAClBvB,mBAAoB0C,KAIxB,GAAImJ,EAAuB,CACzBnb,EAASI,KACP3F,KAAK4V,gBAAgBR,gBAAgB,CACnC9F,UAAW5C,EAAOE,EAAK0T,aAAc,cAAc7H,KAAK,EAAG,QAAQ5L,OAAO,cAC1E0C,QAAS7C,EAAOE,EAAK4T,YAAa,cAAc/H,KAAK,EAAG,SAAS5L,OAAO,cACxEuJ,YAAapW,KAAKoW,c,CAKxB,MAAMlD,QAAgBrN,QAAQC,IAAIP,GAClC,MAAMkc,EAAiBvO,EAAQ,GAC/B,IAAIwO,EAAiC,GACrC,MAAMC,WAAEA,GAAwBF,EAATG,EAAIC,GAAKJ,EAA1B,gBAENzhB,KAAK8hB,MAAKtb,OAAAC,OAAA,GAAQmb,GAElB,GAAIlB,GAAyBxN,EAAQqE,EAAkB,EAAI,GAAI,CAC7D,MAAMwK,EAAsB7O,EAAQqE,EAAkB,EAAI,GAC1D,IAAIyK,EAAmBD,EAAoBJ,WAAW/Y,IAAI6O,GAC1DiK,EAAkBC,EAAW/Y,IAAI6O,GAAc7O,KAAIqZ,IACjD,MAAMC,EAAWF,EAAiBnG,MAAKhS,GAAQA,EAAKgX,MAAQnU,EAAOuV,EAAQpB,IAAK,cAAcpI,KAAK,EAAG,SAAS5L,OAAO,gBACtH,OAAArG,OAAAC,OAAAD,OAAAC,OAAA,GACKwb,GAAO,CACVE,UAAWD,IAAQ,MAARA,SAAQ,EAARA,EAAY,MAAI,G,KAG1B,CACLR,EAAkBC,EAAW/Y,IAAI6O,E,CAEnCzX,KAAKogB,QAAU,IAAIsB,E,CACnB,MAAOtgB,GACPyF,QAAQG,IAAI5F,E,SAEZpB,KAAKgD,UAAY,I,EAGrB,MAAAzC,G,8BACE,GAAIP,KAAKsW,cAAe,CACtB,OAAO9V,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,WAASG,MAAM,yBAAyBE,MAAO,CAAEC,IAAK,SACpDN,EAAA,OAAKG,MAAM,qDACTH,EAAA,MAAIG,MAAM,gBAAc,mBACxBH,EAAA,aACEe,KAAK,KACL8K,UAAU,UACVrJ,UAAWhD,KAAKgD,YAAc,SAC9BxB,MAAMyI,EAAAjB,EAAQtG,WAAO,MAAAuH,SAAA,SAAAA,EAAE0O,WACvBlX,eAAgBC,MAAMN,IACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAK4gB,WAAW,KAAK,EAE7BtU,SAAU,CAAEmC,OAAQ,QACpBmK,aAAa,QACb9H,UAAU,OACV+H,WAAY,CAAE,cAAe,WAGjCrY,EAAA,eACEA,EAAA,OAAKG,MAAM,uCAAuCE,MAAO,CAAEC,IAAK,OAAQshB,WAAY,YAClF5hB,EAAA,iBACEsd,OAAM3T,EAAAnK,KAAK8hB,SAAK,MAAA3X,SAAA,SAAAA,EAAEkY,0CAA2C,EAAI,mBAAqB,iBACtFC,UAAU,oBACVrhB,MAAOjB,KAAK8hB,MAAMS,mBAAmBlY,EAAArK,KAAK8hB,SAAK,MAAAzX,SAAA,SAAAA,EAAEkY,iBAAiBC,QAAQ,IAAK,IAAM,KACrFC,SAAU,KAAGlY,EAAAvK,KAAK8hB,SAAK,MAAAvX,SAAA,SAAAA,EAAE8X,0CAA2C,EAAI,GAAK,OAAM5X,EAAAzK,KAAK8hB,SAAK,MAAArX,SAAA,SAAAA,EAAE4X,yCAAyCG,QACtI,wBAIJhiB,EAAA,iBACEsd,KAAK,QACLwE,UAAU,cACVrhB,QAAO0J,EAAA3K,KAAK8hB,SAAK,MAAAnX,SAAA,SAAAA,EAAE+X,mBAAmB3X,EAAA/K,KAAK8hB,SAAK,MAAA/W,SAAA,SAAAA,EAAE2X,iBAAiB1V,WAAa,KAChFyV,SAAS,WAGXjiB,EAAA,iBAAesd,KAAK,aAAawE,UAAU,eAAerhB,OAAOmK,GAAAH,EAAAjL,KAAK8hB,SAAK,MAAA7W,SAAA,SAAAA,EAAEuW,gBAAY,MAAApW,SAAA,SAAAA,EAAE4B,WAAYyV,SAAS,WAEhHjiB,EAAA,iBACEsd,KAAK,WACLwE,UAAU,YACVrhB,QAAOqK,EAAAtL,KAAK8hB,SAAK,MAAAxW,SAAA,SAAAA,EAAEqX,SAASjX,UAAW,EAAI,MAAOE,GAAAJ,EAAAxL,KAAK8hB,SAAK,MAAAtW,SAAA,SAAAA,EAAEmX,YAAQ,MAAA/W,SAAA,SAAAA,EAAEhD,KAAIga,GAAMlW,EAAOkW,EAAG9B,KAAM,cAAcjU,OAAO,KAAKgW,OAAO,QAAOC,KAAK,OAC/IL,SAAU,GAAGne,KAAKye,SAAQjX,EAAA9L,KAAK8hB,MAAMa,YAAQ,MAAA7W,SAAA,SAAAA,EAAElD,KAAIga,GAAMA,EAAGI,qBAAqB,oBAGrFxiB,EAAA,OAAKG,MAAM,uCAAuCE,MAAO,CAAEC,IAAK,SAC9DN,EAAA,qCAAmCwC,UAAWhD,KAAKgD,YAAc,SAAUrC,MAAM,eAAe0f,YAAargB,KAAKqgB,cAClH7f,EAAA,oCAAkC4f,QAASpgB,KAAKogB,a,0EC5N9D,MAAM6C,GAAsB,2CAC5B,MAAAC,GAAeD,G,qXCeFE,GAAgB,MAL7B,WAAArjB,CAAAC,G,UAMUC,KAAA8C,SAAmB,GACnB9C,KAAAI,OAAiB,GAIhBJ,KAAAgD,UAAwC,KACxChD,KAAAsW,cAAgB,KAIhBtW,KAAAojB,UAA6B,IAAIzM,IAElC3W,KAAAC,MAAQ,IAAIC,EACZF,KAAA0D,YAAc,IAAIC,EAClB3D,KAAA4V,gBAAkB,IAAI3C,EACtBjT,KAAAwD,eAAiB,IAAIC,EAErBzD,KAAAqgB,YAAc,CACpBgD,UAAW3W,IAAS+L,KAAK,EAAG,QAAQ5L,OAAO,cAC3CyW,QAAS5W,IAASG,OAAO,cACzB0W,UAAW,MACXC,OAAQ,EACR9C,sBAAuB,M,CAGzB,iBAAAvgB,GACEH,KAAKyjB,aAAezjB,KAAKqgB,YACzB,GAAIrgB,KAAKI,OAAQ,CACfJ,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,EAIT,aAAAW,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,CAEC,mBAAMA,GACZ,IACE,IAAIgB,EAAajF,KAAK8E,WACtB,IAAK9E,KAAK8E,aAAe9E,KAAK+E,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAGlB,IAAKC,EAAY,CACf4B,QAAQG,IAAI/B,GACZ,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,OAG3BtR,EAAaC,EAAalD,UAAUoD,E,CAEtCpF,KAAKoW,YAAcnR,EACnB,MAAMM,EAAW,CAACvF,KAAKwD,eAAekgB,aAAa1jB,KAAK8C,UAAW9C,KAAK0D,YAAYgC,cAAc1F,KAAK8C,UAAW9C,KAAK4U,mBACvH,GAAI5U,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIpF,KAAK8E,WACThC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,O,CAK/B,MAAO6M,SAAmBvd,QAAQC,IAAIP,GACtC,MAAMoe,EAAkB,IAAIhN,IAC3ByM,EAAyBxa,KAAImL,IAC5B4P,EAAgB3M,IAAIjD,EAAQ3O,GAAI,CAC9B+Z,KAAMpL,EAAQoL,KACdlR,KAAM8F,EAAQ9F,MACd,IAEJjO,KAAKojB,UAAYO,C,CACjB,MAAO/c,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKsW,cAAgB,K,EAIjB,qBAAM1B,CAAgB2C,EAAkB,OAC9C,MAAMqM,EAAmBjiB,IAChB,CACLoS,QAASpS,EAAKkiB,QACdC,WAAYniB,EAAKoiB,WACjBC,OAAQriB,EAAKsiB,OACbC,WAAYviB,EAAKwiB,IACjBC,QAASziB,EAAK0iB,QACdC,iBAAkB3iB,EAAK6f,eAG3B,IACE,MAAMvX,EAA6CjK,KAAKyjB,cAAlD/C,sBAAEA,GAAqBzW,EAAKsa,EAAYC,GAAAva,EAAxC,2BACNjK,KAAKgD,UAAYuU,EAAkB,SAAW,SAE9C,MAAMkN,QAAqBzkB,KAAK4V,gBAAgBhB,gBAAepO,OAAAC,OAAA,CAC7Die,MAAO1kB,KAAKoW,YACZvB,mBAAoB0C,GACjBgN,IAGL,MAAMI,GAA2BpN,GAAmBmJ,EAEpD,IAAIkE,EAA+B,GAEnC,GAAID,EAAyB,CAC3B,MAAME,QAA0B7kB,KAAK4V,gBAAgBhB,gBAAepO,OAAAC,OAAAD,OAAAC,OAAA,CAClEie,MAAO1kB,KAAKoW,YACZvB,mBAAoB,OACjB0P,GAAY,CACflB,UAAW3W,EAAO6X,EAAalB,WAAWyB,SAAS,EAAG,QAAQjY,OAAO,cACrEyW,QAAS5W,EAAO6X,EAAajB,SAASwB,SAAS,EAAG,QAAQjY,OAAO,iBAGnE+X,EAAgBH,EAAa7b,KAAIqZ,IAC/B,MAAMC,EAAW2C,EAAkBhJ,MAAKhS,GAAQA,EAAKga,QAAQvT,gBAAkB2R,EAAQ4B,QAAQvT,gBAC/F,OAAA9J,OAAAC,OAAAD,OAAAC,OAAA,CACErB,GAAIoT,KACDoL,EAAgB3B,IAAQ,CAC3BE,UAAWD,EAAW0B,EAAgB1B,GAAY,MAAI,G,KAGrD,CACL0C,EAAgBH,EAAa7b,KAAImc,GAAMve,OAAAC,OAAAD,OAAAC,OAAA,CACrCrB,GAAIoT,KACDoL,EAAgBmB,IAAO,CAC1B5C,UAAW,Q,CASfniB,KAAKglB,UAAY,IAAIJ,E,CACrB,MAAOhe,GACPC,QAAQD,MAAM,8BAA+BA,E,SAE7C5G,KAAKgD,UAAY,I,EAGrB,MAAAzC,GACE,GAAIP,KAAKsW,cAAe,CACtB,OAAO9V,EAAA,yB,CAET,OACEA,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,WAASG,MAAM,yBAAyBE,MAAO,CAAEC,IAAK,SACpDN,EAAA,OAAKG,MAAM,qDACTH,EAAA,MAAIG,MAAM,gBAAc,oBACxBH,EAAA,aACEe,KAAK,KACL8K,UAAU,UACVrJ,UAAWhD,KAAKgD,YAAc,SAC9BxB,KAAMwH,EAAQtG,QAAQiW,WACtBlX,eAAgBC,MAAMN,IACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAK4U,gBAAgB,KAAK,EAElCtI,SAAU,CAAEmC,OAAQ,QACpBmK,aAAa,QACb9H,UAAU,OACV+H,WAAY,CAAE,cAAe,WAGjCrY,EAAA,+BAA6BykB,aAAcjlB,KAAKglB,YAChDxkB,EAAA,OAAKG,MAAM,uCAAuCE,MAAO,CAAEC,IAAK,SAC9DN,EAAA,oBACEwC,UAAWhD,KAAKgD,YAAc,SAC9Bsa,eAAgBlc,IACdA,EAAEmH,2BACFnH,EAAEoH,kBACFxI,KAAKyjB,aAAeriB,EAAEC,OACtBrB,KAAK4U,iBAAiB,EAExBjU,MAAM,eACN0f,YAAargB,KAAKqgB,cAEpB7f,EAAA,kBAAgBmjB,gBAAiB3jB,KAAKojB,UAAWziB,MAAM,YAAYukB,QAASllB,KAAKglB,c,sEC/M7F,MAAMG,GAAsB,sDAC5B,MAAAC,GAAeD,G,MCeFE,GAAgB,MAL7B,WAAAvlB,CAAAC,G,UAMUC,KAAA8C,SAAmB,GAKnB9C,KAAAslB,aAAwB,KAKvBtlB,KAAAgD,UAAY,KACZhD,KAAA0V,MAAgB,GAEhB1V,KAAAulB,kBAAmC,GAEpCvlB,KAAAC,MAAQ,IAAIC,EACZF,KAAA0D,YAAc,IAAIC,EAClB3D,KAAAwlB,YAAc,IAAIC,EAClBzlB,KAAAwD,eAAiB,IAAIC,EAErBzD,KAAA0lB,UAA0C,IAAI/O,IAG9C3W,KAAA2lB,aAAe,G,CAEvB,iBAAAxlB,GACE,GAAIH,KAAK6D,QAAS,CAChB7D,KAAKC,MAAM6D,WAAW9D,KAAK6D,Q,CAE7B,GAAI7D,KAAKI,OAAQ,CACfJ,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,EAKT,aAAAW,CAAcT,EAAkBU,GAC9B,GAAIV,IAAaU,EAAU,CACzB,M,CAEF7E,KAAKC,MAAMI,SAASL,KAAKI,QACzBJ,KAAKiE,e,CAIP,qBAAMqE,CAAgBlH,GACpBA,EAAEmH,2BACFnH,EAAEoH,wBACIxI,KAAK4lB,Y,CAGL,mBAAM3hB,GACZ,IACE,GAAIjE,KAAK6D,QAAS,CAChB7D,KAAKC,MAAM6D,WAAW9D,KAAK6D,Q,CAE7B7D,KAAKgD,UAAY,KACjB,IAAIiC,EAAajF,KAAK8E,WACtB,IAAK9E,KAAK8E,aAAe9E,KAAK+E,EAAG,CAC/B,MAAM,IAAIC,MAAM,sC,CAGlB,IAAKC,EAAY,CACf4B,QAAQG,IAAI/B,GACZ,MAAMC,QAAqBlF,KAAK0D,YAAYyB,mBAAmB,CAC7DC,GAAI,EACJC,MAAOrF,KAAK+E,EACZjC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,OAG3BtR,EAAaC,EAAalD,UAAUoD,E,CAEtCpF,KAAKoW,YAAcnR,EACnB,MAAMM,EAAW,CAACvF,KAAK6lB,iBAAkB7lB,KAAK4lB,aAAc5lB,KAAK0D,YAAYgC,cAAc1F,KAAK8C,SAAU,CAAC,eAC3G,GAAI9C,KAAK8E,WAAY,CACnBS,EAASI,KACP3F,KAAK0D,YAAYyB,mBAAmB,CAClCC,GAAIpF,KAAK8E,WACThC,SAAU9C,KAAK8C,SACfwC,WAAY,KACZiR,wBAAyB,O,OAKzB1Q,QAAQC,IAAIP,GAClBvF,KAAK8lB,OAASC,EAAG,oCACjB/lB,KAAK8lB,OAAOE,GAAG,OAAOtkB,MAAMukB,UACpBjmB,KAAKkmB,oBAAoBD,EAAI,G,CAErC,MAAOrf,GACPC,QAAQG,IAAIJ,E,SAEZ5G,KAAKgD,UAAY,K,EAIb,yBAAMkjB,CAAoBD,GAChC,MAAME,EAAclkB,KAAKmkB,MAAMH,GAC/B,IAAKE,EAAa,CAChB,M,CAGF,MAAME,OAAEA,EAAMC,IAAEA,EAAGC,QAAEA,GAAgEJ,EAErF,GAAIG,EAAItZ,aAAehN,KAAKoW,YAAYpJ,WAAY,CAClD,M,CAGF,IAAIwZ,EAASvkB,KAAKmkB,MAAMG,GACxB1f,QAAQG,IAAIsf,EAAKE,GAIjB,MAAMC,EAA4D,CAChEC,eAAgB1mB,KAAK2mB,8BAEvB,MAAMC,EAAUH,EAAeJ,GAC/B,GAAIO,EAAS,OACLA,EAAQC,KAAK7mB,KAAMwmB,E,KACpB,CACL3f,QAAQigB,KAAK,qBAAqBT,I,EAI/B,4BAAAM,CAA6BH,GAClC,MAAM9Q,EAAQ,IAAI1V,KAAK0V,OACvB,MAAMqR,EAAMrR,EAAMsR,WAAUC,GAAKA,EAAE7hB,KAAOohB,EAAOphB,KACjD,GAAI2hB,KAAS,EAAG,CACdlgB,QAAQigB,KAAK,QAAQN,EAAOphB,gBAC5B,M,CAEFsQ,EAAMqR,GAAIvgB,OAAAC,OAAAD,OAAAC,OAAA,GACLiP,EAAMqR,IAAI,CACbG,kBAAmB,OAErBlnB,KAAK0V,MAAQA,C,CAGP,gBAAMkQ,GACZ,MAAMlQ,QAAc1V,KAAKwlB,YAAY2B,wBAAwB,CAAE/Q,YAAapW,KAAK8E,aACjF9E,KAAK0V,MAAQ,IAAIA,GAAOuB,MAAK,CAACmQ,EAAUC,KACtC,MAAMC,EAAYL,IAChB,MAAMxL,EAAIwL,EAAE5W,KAAKrD,WACjB,GAAIyO,IAAMzb,KAAK2lB,aAAc,OAAO,EACpC,GAAIlK,IAAM,KAAM,OAAO,EACvB,OAAO,CAAC,EAGV,MAAM8L,EAAKD,EAASF,GAClBI,EAAKF,EAASD,GAChB,GAAIE,IAAOC,EAAI,CACb,OAAOD,EAAKC,C,CAYd,OAAOJ,EAAGK,SAASnQ,cAAc+P,EAAGI,SAAS,G,CAGzC,oBAAM5B,G,YACZ,MAAM6B,QAAY7hB,QAAQC,IAAI,CAAC9F,KAAKwD,eAAemkB,2BAA2B,cAAe3nB,KAAKwD,eAAeokB,WACjH,MAAMC,GAAe1d,GAAAF,EAAAyd,EAAI,MAAE,MAAAzd,SAAA,SAAAA,EAAEjI,aAAS,MAAAmI,SAAA,SAAAA,EAAE2d,mBACxC,IAAK,MAAM1mB,KAAKsmB,EAAI,GAAI,CACtB,MAAMzmB,EAAQG,EAAE,eAAcmJ,GAAAF,EAAArK,KAAK8C,YAAQ,MAAAuH,SAAA,SAAAA,EAAE0d,iBAAa,MAAAxd,SAAA,EAAAA,EAAI,QAC9D,GAAIsd,EAAahM,MAAKmM,GAAKA,EAAE/b,OAAS7K,EAAE6mB,YAAY,CAClDjoB,KAAKulB,kBAAkB5f,KAAK,CAAEsG,KAAM7K,EAAE6mB,UAAWhnB,S,CAEnDjB,KAAK0lB,UAAU1O,IAAI5V,EAAE6mB,UAAUjb,WAAY/L,E,EAG/C,oBAAAmH,GACEpI,KAAK8lB,OAAOoC,Y,CAEd,MAAA3nB,G,QACE,GAAIP,KAAKgD,UAAW,CAClB,OACExC,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,0B,CAIN,OACEA,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,kBAAgB2nB,uBAAwB,CAAC,mBAAoB,0BAC7D3nB,EAAA,WAASG,MAAM,yBAAyBE,MAAO,CAAEC,IAAK,SACpDN,EAAA,OAAKG,MAAM,2DACTH,EAAA,MAAIG,MAAM,gBAAgBqI,EAAQtG,QAAQ0lB,oBAG5C5nB,EAAA,OAAKG,MAAM,GAAGE,MAAO,CAAEC,IAAK,SAC1BN,EAAA,4BACE4V,YAAapW,KAAKoW,YAClBiS,iBAAkBroB,KAAKqoB,iBACvB9C,kBAAmBvlB,KAAKulB,kBACxB+C,aAActoB,KAAKsoB,aACnBC,oBAAqB,CAACvoB,KAAK2lB,aAAc,MAAMjU,UAASzH,EAAAjK,KAAKsoB,gBAAY,MAAAre,SAAA,SAAAA,EAAE+C,YAC3E0Y,UAAW1lB,KAAK0lB,UAChB/kB,MAAM,OACN2kB,eAAcnb,EAAAnK,KAAKsoB,gBAAY,MAAAne,SAAA,SAAAA,EAAE6C,cAAehN,KAAK2lB,aACrDjQ,MAAO1V,KAAK0V,U","ignoreList":[]}