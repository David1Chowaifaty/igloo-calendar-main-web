{"file":"housekeeping.service.js","mappings":"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","names":[],"sources":["src/services/housekeeping.service.ts"],"sourcesContent":["import { RoomHkStatus } from '@/models/booking.dto';\r\nimport { ArchivedTask, IExposedHouseKeepingSetup, IInspectionMode, IPropertyHousekeepingAssignment, THKUser, TPendingHkSetupParams } from '@/models/housekeeping';\r\nimport { updateHKStore } from '@/stores/housekeeping.store';\r\nimport axios from 'axios';\r\n\r\nexport class HouseKeepingService {\r\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup`, {\r\n      property_id,\r\n    });\r\n    updateHKStore('hk_criteria', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n  public async getExposedHKStatusCriteria(property_id: number): Promise<IExposedHouseKeepingSetup> {\r\n    const { data } = await axios.post(`/Get_Exposed_HK_Status_Criteria`, { property_id });\r\n    updateHKStore('hk_tasks', data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n  public async getArchivedHKTasks(params: {\r\n    property_id: number;\r\n    from_date: string;\r\n    to_date: string;\r\n    filtered_by_hkm?: number[];\r\n    filtered_by_unit?: number[];\r\n    is_export_to_excel?: boolean;\r\n  }): Promise<{ tasks: ArchivedTask[]; url: string } | null> {\r\n    const { data } = await axios.post(`/Get_Archived_HK_Tasks`, params);\r\n    return { url: data.My_Params_Get_Archived_HK_Tasks.Link_excel, tasks: data['My_Result'] ?? [] };\r\n  }\r\n\r\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\r\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode`, {\r\n      property_id,\r\n      mode,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async manageExposedAssignedUnitToHKM(property_id: number, assignments: IPropertyHousekeepingAssignment[]) {\r\n    const { data } = await axios.post(`/Manage_Exposed_Assigned_Unit_To_HKM`, {\r\n      property_id,\r\n      links: assignments,\r\n    });\r\n    return data['My_Result'];\r\n  }\r\n  public async editExposedHKM(params: THKUser, is_to_remove: boolean = false) {\r\n    const { data } = await axios.post(`/Edit_Exposed_HKM`, { ...params, is_to_remove });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHKPendingActions(params: TPendingHkSetupParams) {\r\n    const { data } = await axios.post(`/Get_HK_Pending_Actions`, { ...params });\r\n    updateHKStore(\r\n      'pending_housekeepers',\r\n      [...data['My_Result']].map(d => ({ original: d, selected: false })),\r\n    );\r\n    return data['My_Result'];\r\n  }\r\n  public async setExposedUnitHKStatus(params: {\r\n    property_id: number;\r\n    status: {\r\n      code: RoomHkStatus;\r\n    };\r\n    unit: {\r\n      id: number;\r\n    };\r\n  }) {\r\n    const { data } = await axios.post(`/Set_Exposed_Unit_HK_Status`, { ...params });\r\n    return data['My_Result'];\r\n  }\r\n  public async getHkTasks(params: {\r\n    property_id: number;\r\n    from_date: string;\r\n    to_date: string;\r\n    housekeepers?: { ids: number[] };\r\n    cleaning_frequencies?: string;\r\n    dusty_units?: string;\r\n    highlight_window?: string;\r\n    is_export_to_excel?: boolean;\r\n  }) {\r\n    const { data } = await axios.post('/Get_HK_Tasks', params);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return { url: data.My_Params_Get_HK_Tasks?.Link_excel, tasks: data.My_Result };\r\n  }\r\n  public async executeHKAction(params: {\r\n    actions: {\r\n      unit_id: number;\r\n      hkm_id: number;\r\n      description: string;\r\n      booking_nbr?: string | number;\r\n    }[];\r\n  }) {\r\n    await axios.post(`/Execute_HK_Action`, { ...params });\r\n  }\r\n  public async generateUserName(name: string) {\r\n    const { data } = await axios.post(`/Generate_UserName`, { name });\r\n    return data.My_Result;\r\n  }\r\n}\r\n"],"version":3}