{"file":"ir-range-picker2.js","mappings":"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","names":["moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.css?tag=ir-range-picker&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-range-picker/ir-range-picker.tsx"],"sourcesContent":[":host {\n  display: block;\n  --ir-range-gap: 0.5rem;\n}\n\n.range-picker__container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: var(--ir-range-gap);\n  box-sizing: border-box;\n}\n.range-picker__container.focused {\n  border-bottom-color: rgb(198, 206, 231);\n  border-left-color: rgb(198, 206, 231);\n  border-right-color: rgb(198, 206, 231);\n  border-top-color: rgb(198, 206, 231);\n  color: #4e5154;\n  background-color: #fff;\n  border-color: var(--blue, #1e9ff2);\n  outline: 0;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n\n.range-picker__icon--hidden,\n.range-picker__date-picker--hidden {\n  opacity: 0;\n}\n\n.range-picker__overlay {\n  position: absolute;\n  inset: 0;\n  background-color: white;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  gap: var(--ir-range-gap);\n}\n\n.range-picker__overlay--active {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  pointer-events: auto;\n  border-radius: inherit;\n  padding-inline: 0.5rem;\n}\n.range-picker__date-picker:hover .range-picker__date-picker-button,\n.range-picker__date-picker.focused .range-picker__date-picker-button {\n  color: var(--blue, #1e9ff2);\n}\n.range-picker__date-picker-button {\n  background: inherit;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  font-size: 0.975rem;\n  line-height: 1.45;\n  height: 2rem;\n  color: #3b4781;\n  white-space: nowrap;\n  cursor: pointer;\n  padding-inline: 0.5rem;\n}\n/* Optional: additional styles for the icons if needed */\n.range-picker__calendar-icon,\n.range-picker__arrow-icon {\n  height: 14px;\n  width: 14px;\n}\n","import { Component, Host, Listen, Prop, Event, EventEmitter, h, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\n\n@Component({\n  tag: 'ir-range-picker',\n  styleUrl: 'ir-range-picker.css',\n  scoped: true,\n})\nexport class IrRangePicker {\n  /**\n   * The earliest date that can be selected.\n   */\n  @Prop() minDate?: string | Date;\n\n  /**\n   * The latest date that can be selected.\n   */\n  @Prop() maxDate?: string | Date;\n  /**\n   * The start date of the range.\n   */\n  @Prop() fromDate: Moment;\n  /**\n   * The end date of the range.\n   */\n  @Prop() toDate: Moment;\n\n  /**\n   * Whether to show the overlay before the date is selected.\n   */\n  @Prop() withOverlay: boolean = true;\n  /**\n   * Whether to all the emitted dates to be null.\n   */\n  @Prop() allowNullDates: boolean = true;\n\n  @State() lastFocusedPicker: string;\n\n  @Event() dateRangeChanged: EventEmitter<{ fromDate: Moment; toDate: Moment; wasFocused?: boolean }>;\n\n  private minSelectableDate = moment().subtract(90, 'days').toDate();\n  private fromDatePicker: HTMLIrDatePickerElement;\n  private toDatePicker: HTMLIrDatePickerElement;\n  private date_container: HTMLDivElement;\n  private focusTimeout: NodeJS.Timeout;\n\n  @Listen('dateChanged')\n  async handleDateChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const selectedDate = e.detail.start ? moment(e.detail.start) : null;\n    if (!this.lastFocusedPicker) {\n      return;\n    }\n    if ((e.target as HTMLElement).id === 'fromDate') {\n      let updatedToDate = this.toDate;\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: null, toDate: null, wasFocused: !!this.lastFocusedPicker });\n        return;\n      }\n      if (!updatedToDate || updatedToDate.isBefore(selectedDate, 'day')) {\n        updatedToDate = selectedDate;\n      }\n\n      this.dateRangeChanged.emit({ fromDate: selectedDate, toDate: updatedToDate, wasFocused: !!this.lastFocusedPicker });\n      await this.toDatePicker.openDatePicker();\n    } else {\n      if (!selectedDate) {\n        this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: this.fromDate, wasFocused: !!this.lastFocusedPicker });\n        return;\n      }\n      this.dateRangeChanged.emit({ fromDate: this.fromDate, toDate: selectedDate, wasFocused: !!this.lastFocusedPicker });\n    }\n    this.lastFocusedPicker = null;\n  }\n  @Listen('datePickerFocus')\n  handleDatePickerFocus(e: CustomEvent) {\n    e.stopPropagation();\n    clearTimeout(this.focusTimeout);\n    this.date_container.classList.add('focused');\n    (e.target as HTMLIrRangePickerElement).classList.add('focused');\n  }\n  @Listen('datePickerBlur')\n  handleDatePickerBlur(e: CustomEvent) {\n    e.stopPropagation();\n    (e.target as HTMLIrRangePickerElement).classList.remove('focused');\n    this.focusTimeout = setTimeout(() => {\n      this.date_container.classList.remove('focused');\n    }, 10);\n  }\n  disconnectedCallback() {\n    clearTimeout(this.focusTimeout);\n  }\n  private renderDatePicker(id: string, date: Moment, minDate: string | Date, refCallback: (el: HTMLIrDatePickerElement) => void, additionalProps: any = {}) {\n    return (\n      <ir-date-picker\n        class={{\n          'range-picker__date-picker': true,\n          'range-picker__date-picker--hidden': this.withOverlay && !this.fromDate,\n        }}\n        customPicker\n        ref={el => refCallback(el)}\n        minDate={minDate}\n        maxDate={this.maxDate}\n        date={date?.toDate()}\n        id={id}\n        onDatePickerFocus={() => {\n          this.lastFocusedPicker = id;\n        }}\n        emitEmptyDate={this.allowNullDates}\n        {...additionalProps}\n      >\n        <p class=\"range-picker__date-picker-button\" slot=\"trigger\">\n          {date?.format('YYYY-MM-DD') ?? '2025-03-02'}\n        </p>\n      </ir-date-picker>\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"form-control range-picker__container\" ref={el => (this.date_container = el)}>\n          {this.withOverlay && (\n            <div\n              class={{\n                'range-picker__overlay': true,\n                'range-picker__overlay--active': !this.fromDate,\n              }}\n              onClick={() => this.fromDatePicker.openDatePicker()}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" style={{ height: '14px', width: '14px' }}>\n                <path\n                  fill=\"currentColor\"\n                  d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n                ></path>\n              </svg>\n              <p class=\"m-0\">\n                <slot name=\"message\">Cleaned on</slot>\n              </p>\n            </div>\n          )}\n          <svg\n            class={{\n              'range-picker__calendar-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 448 512\"\n            style={{ height: '14px', width: '14px' }}\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"\n            ></path>\n          </svg>\n          {this.renderDatePicker('fromDate', this.fromDate, this.minDate, el => (this.fromDatePicker = el))}\n          <svg\n            class={{\n              'range-picker__arrow-icon': true,\n              'range-picker__icon--hidden': this.withOverlay && !this.fromDate,\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"14\"\n            width=\"14\"\n            viewBox=\"0 0 512 512\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z\"\n            />\n          </svg>\n          {this.renderDatePicker('toDate', this.toDate, this.fromDate?.toDate() || this.minSelectableDate, el => (this.toDatePicker = el), {\n            forceDestroyOnUpdate: true,\n          })}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}