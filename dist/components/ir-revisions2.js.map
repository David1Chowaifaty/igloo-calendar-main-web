{"file":"ir-revisions2.js","mappings":";;;;;AAAA,MAAM,cAAc,GAAG,2JAA2J,CAAC;AACnL,0BAAe,cAAc;;MCQhB,WAAW;;;;QAKd,mBAAc,GAAG,IAAI,cAAc,EAAE,CAAC;;;;IAE9C,iBAAiB;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;IAEO,MAAM,IAAI;QAChB,IAAI;YACF,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5F;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;KACF;IAED,MAAM;;QACJ,QACE,4DAAK,KAAK,EAAC,KAAK,IACd,4DAAK,KAAK,EAAC,gCAAgC,EAAC,KAAK,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAClE,2DAAI,KAAK,EAAC,mCAAmC,gBAAe,EAC5D,6DAAM,KAAK,EAAC,UAAU,WAAY,CAC9B,EAEL,gBAAgB,CAAC,6BAA6B,CAAC,IAC9C,WAAK,KAAK,EAAE,0EAA0E,IACpF,qBAAyB,CACrB,KAEN,EAAC,QAAQ,QACP,WAAK,KAAK,EAAC,0BAA0B,IAClC,CAAA,MAAA,IAAI,CAAC,aAAa,0CAAE,MAAM,MAAK,CAAC,IAAI,kCAAyB,EAC7D,MAAA,IAAI,CAAC,aAAa;eAAE,GAAG,CAAC,CAAC,KACxB,WAAK,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,mDAAmD,IACxE,WAAK,KAAK,EAAC,mDAAmD,IAC5D,aAAI,CAAC,CAAC,IAAI,CAAK,EACf,SAAG,KAAK,EAAC,MAAM,IACZ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,OAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CACtG,CACA,EACN,aAAI,CAAC,CAAC,IAAI,CAAK,CACX,CACP,CAAC,CACE,CACG,CACZ,CACG,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ir-booking-details/ir-booking-header/ir-revisions/ir-revisions.css?tag=ir-revisions&encapsulation=scoped","src/components/ir-booking-details/ir-booking-header/ir-revisions/ir-revisions.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.beta {\n  background: var(--red);\n  color: white;\n  padding: 0.2rem 0.3rem;\n  font-size: 12px;\n  border-radius: 4px;\n  margin: 0;\n}\n","import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport { Component, Fragment, Prop, State, h } from '@stencil/core';\nimport { BookingService, ExposedBookingEvent } from '@/services/booking.service';\n\n@Component({\n  tag: 'ir-revisions',\n  styleUrl: 'ir-revisions.css',\n  scoped: true,\n})\nexport class IrRevisions {\n  @Prop() bookingNumber: string;\n\n  @State() bookingEvents: ExposedBookingEvent[];\n\n  private bookingService = new BookingService();\n\n  componentWillLoad() {\n    this.init();\n  }\n\n  private async init() {\n    try {\n      this.bookingEvents = await this.bookingService.getExposedBookingEvents(this.bookingNumber);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"p-1\">\n        <div class=\"d-flex mb-1 align-items-center\" style={{ gap: '0.5rem' }}>\n          <h3 class=\" text-left p-0 m-0  dialog-title \">Revisions</h3>\n          <span class=\"m-0 beta\">Beta</span>\n        </div>\n\n        {isRequestPending('/Get_Exposed_Booking_Events') ? (\n          <div class={'d-flex align-items-center justify-content-center dialog-container-height'}>\n            <ir-spinner></ir-spinner>\n          </div>\n        ) : (\n          <Fragment>\n            <div class=\" dialog-container-height\">\n              {this.bookingEvents?.length === 0 && <p>No Revisions Found</p>}\n              {this.bookingEvents?.map(e => (\n                <div key={e.id} class={'d-flex align-items-center justify-content-between'}>\n                  <div class=\"d-flex align-items-center justify-content-between\">\n                    <p>{e.date}</p>\n                    <p class=\"ml-1\">\n                      {String(e.hour).padStart(2, '0')}:{String(e.minute).padStart(2, '0')}:{String(e.second).padStart(2, '0')}\n                    </p>\n                  </div>\n                  <p>{e.type}</p>\n                </div>\n              ))}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}