{"file":"igl-book-property2.js","mappings":"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","names":["moment","__stencil_proxyCustomElement"],"sources":["src/components/igloo-calendar/igl-book-property/igl-book-property.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx"],"sourcesContent":["import { Booking, Room } from '@/models/booking.dto';\r\nimport { TSourceOption } from '@/models/igl-book-property';\r\nimport VariationService from '@/services/variation.service';\r\nimport booking_store, { IRatePlanSelection } from '@/stores/booking.store';\r\nimport { calculateDaysBetweenDates } from '@/utils/booking';\r\nimport { extras } from '@/utils/utils';\r\nimport moment from 'moment';\r\n\r\nexport class IglBookPropertyService {\r\n  private variationService: VariationService;\r\n  public setBookingInfoFromAutoComplete(context, res) {\r\n    context.bookedByInfoData = {\r\n      id: res.guest.id,\r\n      email: res.guest.email,\r\n      firstName: res.guest.first_name,\r\n      lastName: res.guest.last_name,\r\n      countryId: res.guest.country_id,\r\n      isdCode: res.guest?.country_phone_prefix ?? res.guest?.country_id.toString(),\r\n      contactNumber: res.guest.mobile,\r\n      selectedArrivalTime: res.arrival,\r\n      emailGuest: res.guest.subscribe_to_news_letter,\r\n      message: res.remark,\r\n      cardNumber: '',\r\n      cardHolderName: '',\r\n      expiryMonth: '',\r\n      expiryYear: '',\r\n      bookingNumber: res.booking_nbr,\r\n      rooms: res.rooms,\r\n      from_date: res.from_date,\r\n      to_date: res.to_date,\r\n    };\r\n  }\r\n\r\n  public resetRoomsInfoAndMessage(context) {\r\n    context.defaultData.roomsInfo = [];\r\n    context.message = '';\r\n  }\r\n\r\n  public onDataRoomUpdate(event: CustomEvent, selectedUnits: Map<string, Map<string, any>>, isEdit: boolean, isEditBooking: boolean, name: string) {\r\n    let units = selectedUnits;\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = `c_${data.roomCategoryId}`;\r\n    const ratePlanKey = `p_${data.ratePlanId}`;\r\n\r\n    if (this.shouldClearData(key)) {\r\n      units = new Map();\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey, units);\r\n\r\n    if (isEditBooking) {\r\n      if (changedKey === 'rate') {\r\n        if (units.has(roomCategoryKey) && units.get(roomCategoryKey).has(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (units.has(roomCategoryKey) && selectedUnits.get(roomCategoryKey).has(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data, units, name, isEdit);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data, units);\r\n    }\r\n    this.cleanupEmptyData(roomCategoryKey, units);\r\n    return units;\r\n  }\r\n\r\n  private shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  private initializeRoomCategoryIfNeeded(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (!selectedUnits.has(roomCategoryKey)) {\r\n      selectedUnits.set(roomCategoryKey, new Map());\r\n    }\r\n  }\r\n  private setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any, selectedUnits: Map<string, Map<string, any>>) {\r\n    let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n    if (data.totalRooms === 0 || data.inventory === 0) {\r\n      selectedRatePlans.delete(ratePlanKey);\r\n    } else {\r\n      selectedUnits.set(roomCategoryKey, selectedRatePlans.set(ratePlanKey, { ...data, selectedUnits: Array(data.totalRooms).fill(-1) }));\r\n    }\r\n  }\r\n\r\n  private cleanupEmptyData(roomCategoryKey: string, selectedUnits: Map<string, Map<string, any>>) {\r\n    if (selectedUnits.has(roomCategoryKey)) {\r\n      let selectedRatePlans = selectedUnits.get(roomCategoryKey);\r\n      if (selectedRatePlans.size === 0) {\r\n        selectedUnits.delete(roomCategoryKey);\r\n      }\r\n    }\r\n  }\r\n  private applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data, selectedUnits: Map<string, Map<string, any>>, name: string, isEdit: boolean) {\r\n    selectedUnits.clear();\r\n    let res = {};\r\n    if (isEdit) {\r\n      res = { ...data, guestName: name || '', roomId: '' };\r\n    } else {\r\n      res = { ...data };\r\n    }\r\n    selectedUnits.set(roomCategoryKey, new Map().set(ratePlanKey, res));\r\n  }\r\n\r\n  private generateDailyRates(from_date: Date, to_date: Date, amount: number) {\r\n    const endDate = new Date(to_date);\r\n    endDate.setDate(endDate.getDate() - 1);\r\n\r\n    let currentDate = new Date(from_date);\r\n    const days: {\r\n      date: string;\r\n      amount: number;\r\n      cost: null;\r\n    }[] = [];\r\n\r\n    while (currentDate <= endDate) {\r\n      days.push({\r\n        date: moment(currentDate).format('YYYY-MM-DD'),\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n\r\n  // private extractFirstNameAndLastName(name: string) {\r\n  //   const names = name.split(' ');\r\n  //   return { first_name: names[0] || null, last_name: names[1] || null };\r\n  // }\r\n\r\n  private getBookedRooms({\r\n    check_in,\r\n    check_out,\r\n    notes,\r\n    identifier,\r\n    override_unit,\r\n    unit,\r\n    auto_check_in,\r\n  }: {\r\n    identifier: string | null;\r\n    check_in: Date;\r\n    check_out: Date;\r\n    override_unit: boolean;\r\n    unit: string;\r\n    notes: string | null;\r\n    auto_check_in: boolean;\r\n  }) {\r\n    const rooms = [];\r\n    const total_days = calculateDaysBetweenDates(moment(check_in).format('YYYY-MM-DD'), moment(check_out).format('YYYY-MM-DD'));\r\n    const calculateAmount = ({ is_amount_modified, selected_variation, view_mode, rp_amount, ratePlan }: IRatePlanSelection, infants: number) => {\r\n      if (is_amount_modified) {\r\n        return view_mode === '002' ? rp_amount : rp_amount / total_days;\r\n      }\r\n      let variation = selected_variation;\r\n      if (infants > 0) {\r\n        if (!this.variationService) {\r\n          this.variationService = new VariationService();\r\n        }\r\n        variation = this.variationService.getVariationBasedOnInfants({ variations: ratePlan.variations, baseVariation: selected_variation, infants });\r\n      }\r\n      return Number(variation.discounted_amount) / total_days;\r\n    };\r\n    for (const roomTypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomTypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (let i = 0; i < rateplan.reserved; i++) {\r\n            const { first_name, last_name } = rateplan.guest[i];\r\n            rooms.push({\r\n              identifier,\r\n              roomtype: rateplan.roomtype,\r\n              rateplan: rateplan.ratePlan,\r\n              prepayment_amount_gross: 0,\r\n              unit: override_unit ? { id: unit } : rateplan.guest[i].unit ? { id: rateplan.guest[i].unit } : null,\r\n              occupancy: {\r\n                adult_nbr: rateplan.selected_variation.adult_nbr,\r\n                children_nbr: rateplan.selected_variation.child_nbr - Math.max(rateplan.guest[i].infant_nbr, 0),\r\n                infant_nbr: rateplan.guest[i].infant_nbr,\r\n              },\r\n              bed_preference: rateplan.guest[i].bed_preference,\r\n              from_date: moment(check_in).format('YYYY-MM-DD'),\r\n              to_date: moment(check_out).format('YYYY-MM-DD'),\r\n              notes,\r\n              check_in: auto_check_in,\r\n              days: this.generateDailyRates(check_in, check_out, calculateAmount(rateplan, rateplan.guest[i].infant_nbr)),\r\n              guest: {\r\n                email: null,\r\n                first_name,\r\n                last_name,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n                cci: null,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return rooms;\r\n  }\r\n\r\n  async prepareBookUserServiceParams({ context, sourceOption, check_in }: { context: any; sourceOption: TSourceOption; check_in: boolean }) {\r\n    try {\r\n      // Validate context structure\r\n      if (!context || !context.dateRangeData) {\r\n        throw new Error('Invalid context: Missing date range data.');\r\n      }\r\n\r\n      const fromDate = new Date(context.dateRangeData.fromDate);\r\n      const toDate = new Date(context.dateRangeData.toDate);\r\n\r\n      const generateNewRooms = (identifier = null, check_in: boolean = false) => {\r\n        return this.getBookedRooms({\r\n          check_in: fromDate,\r\n          check_out: toDate,\r\n          identifier,\r\n          notes: '',\r\n          override_unit: context.isEventType('BAR_BOOKING') ? true : false,\r\n          unit: context.isEventType('BAR_BOOKING') ? context.bookingData.PR_ID : null,\r\n          auto_check_in: check_in,\r\n        });\r\n      };\r\n\r\n      const modifyBookingDetails = ({ pickup_info, extra_services, is_direct, is_in_loyalty_mode, promo_key, extras, ...rest }: Booking, rooms: Room[]) => {\r\n        return {\r\n          assign_units: true,\r\n          is_pms: true,\r\n          is_direct,\r\n          is_in_loyalty_mode,\r\n          promo_key,\r\n          extras,\r\n          booking: {\r\n            ...rest,\r\n            rooms,\r\n          },\r\n          extra_services,\r\n          pickup_info,\r\n        };\r\n      };\r\n\r\n      let newBooking = null;\r\n\r\n      switch (context.defaultData.event_type) {\r\n        case 'EDIT_BOOKING': {\r\n          const { booking, currentRoomType } = context.defaultData;\r\n\r\n          const filteredRooms = booking.rooms.filter(r => r.identifier !== currentRoomType.identifier);\r\n          console.log('currentRoomType', currentRoomType);\r\n          const newRooms = generateNewRooms(currentRoomType.identifier, currentRoomType.in_out?.code === '001');\r\n          newBooking = modifyBookingDetails(booking, [...filteredRooms, ...newRooms]);\r\n          break;\r\n        }\r\n        case 'ADD_ROOM':\r\n        case 'SPLIT_BOOKING': {\r\n          const { booking } = context.defaultData;\r\n          if (!booking) {\r\n            throw new Error('Missing booking');\r\n          }\r\n          console.log(booking);\r\n          const newRooms = generateNewRooms();\r\n          newBooking = modifyBookingDetails(booking, [...booking?.rooms, ...newRooms]);\r\n          break;\r\n        }\r\n        default: {\r\n          const newRooms = generateNewRooms(null, check_in);\r\n          const { bookedByInfoData } = context;\r\n          const isAgent = sourceOption.type === 'TRAVEL_AGENCY';\r\n          newBooking = {\r\n            assign_units: true,\r\n            is_pms: true,\r\n            is_direct: true,\r\n            is_in_loyalty_mode: false,\r\n            promo_key: null,\r\n            extras,\r\n            agent: isAgent ? { id: sourceOption.tag } : null,\r\n            booking: {\r\n              from_date: moment(fromDate).format('YYYY-MM-DD'),\r\n              to_date: moment(toDate).format('YYYY-MM-DD'),\r\n              remark: bookedByInfoData.message || null,\r\n              booking_nbr: '',\r\n              property: {\r\n                id: context.propertyid,\r\n              },\r\n              booked_on: {\r\n                date: moment().format('YYYY-MM-DD'),\r\n                hour: new Date().getHours(),\r\n                minute: new Date().getMinutes(),\r\n              },\r\n              source: isAgent ? '' : sourceOption,\r\n              rooms: newRooms,\r\n              currency: context.currency,\r\n              arrival: { code: bookedByInfoData.selectedArrivalTime },\r\n              guest: {\r\n                email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n                first_name: bookedByInfoData.firstName,\r\n                last_name: bookedByInfoData.lastName,\r\n                country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n                city: null,\r\n                mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n                country_phone_prefix: bookedByInfoData?.isdCode ?? null,\r\n                address: '',\r\n                dob: null,\r\n                subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n                cci: bookedByInfoData.cardNumber\r\n                  ? {\r\n                      nbr: bookedByInfoData.cardNumber,\r\n                      holder_name: bookedByInfoData.cardHolderName,\r\n                      expiry_month: bookedByInfoData.expiryMonth,\r\n                      expiry_year: bookedByInfoData.expiryYear,\r\n                    }\r\n                  : null,\r\n              },\r\n            },\r\n            pickup_info: null,\r\n          };\r\n          break;\r\n        }\r\n      }\r\n      return newBooking;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private getRoomCategoryByRoomId(bookingData) {\r\n    return bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.id === bookingData.RATE_TYPE;\r\n    });\r\n  }\r\n  public setEditingRoomInfo(bookingData, selectedUnits) {\r\n    const category = this.getRoomCategoryByRoomId(bookingData);\r\n    const room_id = !category ? '' : `c_${category?.id}`;\r\n    const ratePlanId = `p_${bookingData.RATE_PLAN_ID}`;\r\n    const data = {\r\n      adultCount: bookingData.ADULTS_COUNT,\r\n      rate: bookingData.RATE,\r\n      rateType: bookingData.RATE_TYPE,\r\n      ratePlanId: bookingData.RATE_PLAN_ID,\r\n      roomCategoryId: category ? category.id : '',\r\n      roomCategoryName: category ? category.name : '',\r\n      totalRooms: 1,\r\n      ratePlanName: bookingData.RATE_PLAN,\r\n      roomId: bookingData.PR_ID,\r\n      guestName: bookingData.NAME,\r\n      cancelation: bookingData.cancelation,\r\n      guarantee: bookingData.guarantee,\r\n      adult_child_offering: bookingData.adult_child_offering,\r\n    };\r\n    selectedUnits.set(room_id, new Map().set(ratePlanId, data));\r\n  }\r\n}\r\n",":host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n}\r\n.card-header-container {\r\n  border-bottom: 1px solid #e4e5ec;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 1rem 0;\r\n  justify-content: space-between;\r\n}\r\n.card-header-container h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n.gap-30 {\r\n  gap: 30px;\r\n}\r\n.block-date {\r\n  width: 100%;\r\n}\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n  width: 100vw;\r\n  overflow-y: auto;\r\n  padding-bottom: 85px !important;\r\n}\r\n.card {\r\n  top: 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n/* .row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n} */\r\n@media only screen and (min-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 70%;\r\n  }\r\n}\r\n@media only screen and (min-width: 2000px) {\r\n  .sideWindow {\r\n    max-width: 40%;\r\n  }\r\n}\r\n@media only screen and (min-width: 768px) and (max-width: 1200px) {\r\n  .sideWindow {\r\n    max-width: 90%;\r\n  }\r\n}\r\n@media only screen and (min-width: 600px) and (max-width: 768px) {\r\n  .sideWindow {\r\n    max-width: 75%;\r\n  }\r\n}\r\n@media only screen and (min-width: 641px) {\r\n  .block-date {\r\n    max-width: 450px;\r\n    padding-bottom: 0 !important;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen, Fragment } from '@stencil/core';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '@/utils/utils';\r\nimport { ICountry, IEntries, RoomBlockDetails } from '@/models/IBooking';\r\nimport { IPageTwoDataUpdateProps } from '@/models/models';\r\nimport { IglBookPropertyService } from './igl-book-property.service';\r\nimport { IglBookPropertyPayloadEditBooking, TAdultChildConstraints, TEventType, TPropertyButtonsTypes, TSourceOption, TSourceOptions } from '@/models/igl-book-property';\r\nimport locales from '@/stores/locales.store';\r\nimport { IToast } from '@/components/ui/ir-toast/toast';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport { ICurrency } from '@/models/calendarData';\r\nimport booking_store, { calculateTotalRooms, modifyBookingStore, reserveRooms, resetBookingStore } from '@/stores/booking.store';\r\nimport moment from 'moment';\r\nexport type IHistoryEntry = {\r\n  dates: { checkIn: Date; checkOut: Date };\r\n  adults: number;\r\n  children: number;\r\n};\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() allowedBookingSources: any;\r\n  @Prop() language: string;\r\n  @Prop() countries: ICountry[];\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: ICurrency;\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @Prop() adultChildConstraints: TAdultChildConstraints;\r\n\r\n  @State() adultChildCount: { adult: number; child: number } = { adult: 0, child: 0 };\r\n  @State() renderAgain: boolean = false;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() defaultData: any;\r\n  @State() isLoading: string;\r\n  @State() bookingHistory: Array<{\r\n    dates: { checkIn: Date; checkOut: Date };\r\n    adults: number;\r\n    children: number;\r\n  }> = [];\r\n\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) animateIrButton: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) animateIrSelect: EventEmitter<string>;\r\n  @Event({ bubbles: true, composed: true }) toast: EventEmitter<IToast>;\r\n\r\n  private initialRoomIds: { roomName: string; ratePlanId: number; roomId: string; roomTypeId: string } | null = null;\r\n  private sourceOption: TSourceOption;\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: TSourceOptions[] = [];\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private selectedUnits: Map<string, Map<string, any>> = new Map();\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private bookPropertyService = new IglBookPropertyService();\r\n  private defaultDateRange: { from_date: string; to_date: string };\r\n  private updatedBooking: boolean = false;\r\n  private MAX_HISTORY_LENGTH: number = 2;\r\n  private didReservation: boolean;\r\n  private wasBlockedUnit: boolean;\r\n\r\n  async componentWillLoad() {\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.initializeDefaultDateRange();\r\n\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n    // console.log(this.bookingData);\r\n    this.initializeDefaultData();\r\n    this.wasBlockedUnit = this.defaultData.hasOwnProperty('block_exposed_unit_props');\r\n    modifyBookingStore('event_type', { type: this.defaultData.event_type });\r\n    await this.fetchSetupEntriesAndInitialize();\r\n    this.initializeEventData();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  @Listen('inputCleared')\r\n  clearBooking(e: CustomEvent) {\r\n    if (this.isEventType('SPLIT_BOOKING')) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.bookedByInfoData = {};\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  @Listen('spiltBookingSelected')\r\n  async handleSpiltBookingSelected(e: CustomEvent<{ key: string; data: unknown }>) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { key, data } = e.detail;\r\n    if (key === 'select' || (key === 'blur' && data !== '')) {\r\n      const res = await this.bookingService.getExposedBooking((data as any).booking_nbr || (data as string), this.language);\r\n      this.defaultData = { ...this.defaultData, booking: res };\r\n      this.bookPropertyService.setBookingInfoFromAutoComplete(this, res);\r\n      this.sourceOption = res.source;\r\n      this.renderPage();\r\n    }\r\n  }\r\n\r\n  // @Listen('adultChild')\r\n  // handleAdultChildChange(event: CustomEvent) {\r\n  //   if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n  //     this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n  //   }\r\n  //   const { adult, child } = event.detail;\r\n  //   this.adultChildCount = { ...event.detail };\r\n  //   this.updateBookingHistory({ adults: adult, children: child });\r\n  // }\r\n  @Listen('adultChild')\r\n  handleAdultChildChange(event: CustomEvent) {\r\n    if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n    const { adult, child } = event.detail;\r\n    this.adultChildCount = { ...event.detail };\r\n\r\n    // Update the booking history\r\n    this.updateBookingHistory({ adults: Number(adult), children: Number(child) });\r\n  }\r\n\r\n  @Listen('dateSelectEvent')\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.updateBookingHistory({\r\n      dates: {\r\n        checkIn: new Date(this.dateRangeData.fromDate),\r\n        checkOut: new Date(new Date(opt.data.toDate)),\r\n      },\r\n    });\r\n    console.log('date changed', opt);\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      if (this.isEventType('ADD_ROOM') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.defaultData.roomsInfo = [];\r\n      } else if (this.adultChildCount.adult !== 0) {\r\n        this.checkBookingAvailability();\r\n        // this.checkBookingAvailability(dateToFormattedString(new Date(this.dateRangeData.fromDate)), dateToFormattedString(new Date(this.dateRangeData.toDate)));\r\n      }\r\n    }\r\n  }\r\n  @Listen('sourceDropDownChange')\r\n  handleSourceDropDown(event: CustomEvent) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const value = event.detail;\r\n    const selectedSource = this.sourceOptions.find(opt => opt.id === value.toString());\r\n    this.sourceOption = {\r\n      code: value,\r\n      description: selectedSource.value || '',\r\n      tag: selectedSource.tag,\r\n      id: selectedSource.id,\r\n      type: selectedSource.type,\r\n    };\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage('page_two');\r\n  }\r\n\r\n  @Listen('buttonClicked')\r\n  handleButtonClicked(event: CustomEvent<{ key: TPropertyButtonsTypes; data?: CustomEvent }>) {\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        this.gotoPage('page_one');\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      case 'next':\r\n        event.stopImmediatePropagation();\r\n        event.stopPropagation();\r\n        if (!this.adultChildCount?.adult) {\r\n          this.animateIrSelect.emit('adult_child_select');\r\n          break;\r\n        }\r\n        if (calculateTotalRooms() > 0) {\r\n          this.gotoPage('page_two');\r\n          break;\r\n        } else if (this.defaultData?.roomsInfo.length === 0) {\r\n          this.animateIrButton.emit('check_availability');\r\n          break;\r\n        }\r\n        this.toast.emit({\r\n          type: 'error',\r\n          description: locales.entries.Lcz_SelectRatePlan,\r\n          title: locales.entries.Lcz_SelectRatePlan,\r\n        });\r\n        break;\r\n      case 'check':\r\n        this.checkBookingAvailability();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private updateBookingHistory(partialData: Partial<IHistoryEntry>) {\r\n    const lastEntry = this.bookingHistory[this.bookingHistory.length - 1];\r\n\r\n    const newEntry: IHistoryEntry = {\r\n      dates: {\r\n        checkIn: partialData.dates?.checkIn || lastEntry?.dates?.checkIn || new Date(this.dateRangeData.fromDate),\r\n        checkOut: partialData.dates?.checkOut || lastEntry?.dates?.checkOut || new Date(this.dateRangeData.toDate),\r\n      },\r\n      adults: partialData.adults ?? lastEntry?.adults ?? this.adultChildCount.adult,\r\n      children: partialData.children ?? lastEntry?.children ?? this.adultChildCount.child,\r\n    };\r\n\r\n    // Update the booking history\r\n    this.bookingHistory.push(newEntry);\r\n    if (this.bookingHistory.length > this.MAX_HISTORY_LENGTH) {\r\n      this.bookingHistory.shift();\r\n    }\r\n  }\r\n\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key === 'Escape') {\r\n      this.closeWindow();\r\n    }\r\n  }\r\n\r\n  private initializeDefaultDateRange() {\r\n    this.defaultDateRange = {\r\n      from_date: this.bookingData.FROM_DATE,\r\n      to_date: this.bookingData.TO_DATE,\r\n    };\r\n  }\r\n\r\n  private initializeDefaultData() {\r\n    this.defaultData = this.bookingData;\r\n    this.dateRangeData = { ...this.defaultData.defaultDateRange };\r\n  }\r\n\r\n  private async fetchSetupEntriesAndInitialize() {\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(this.allowedBookingSources);\r\n      this.setOtherProperties(setupEntries);\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  private initializeEventData() {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.initializeEditBookingData();\r\n    }\r\n\r\n    if (!this.isEventType('BAR_BOOKING')) {\r\n      this.bookPropertyService.resetRoomsInfoAndMessage(this);\r\n    }\r\n\r\n    this.initializePage();\r\n  }\r\n\r\n  private initializeEditBookingData() {\r\n    this.adultChildCount = {\r\n      adult: this.defaultData.ADULTS_COUNT,\r\n      child: this.defaultData.CHILDREN_COUNT,\r\n    };\r\n\r\n    this.initialRoomIds = {\r\n      roomName: this.defaultData.roomName,\r\n      ratePlanId: this.defaultData.RATE_PLAN_ID,\r\n      roomId: this.defaultData.PR_ID,\r\n      roomTypeId: this.defaultData.RATE_TYPE,\r\n    };\r\n    const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n    console.log(GUEST);\r\n    modifyBookingStore('guest', {\r\n      bed_preference: currentRoomType.bed_preference?.toString(),\r\n      infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n      first_name: GUEST.first_name ?? '',\r\n      last_name: GUEST.last_name ?? '',\r\n      // name: currentRoomType.guest.last_name ? currentRoomType.guest.first_name + ' ' + currentRoomType.guest.last_name : currentRoomType.guest.first_name,\r\n      unit: (currentRoomType.unit as any)?.id?.toString(),\r\n    });\r\n    this.checkBookingAvailability();\r\n    this.bookPropertyService.setEditingRoomInfo(this.defaultData, this.selectedUnits);\r\n  }\r\n\r\n  private initializePage() {\r\n    switch (this.defaultData.event_type) {\r\n      case 'SPLIT_BOOKING':\r\n        this.showSplitBookingOption = true;\r\n        this.page = 'page_one';\r\n        break;\r\n      case 'BLOCK_DATES':\r\n        this.page = 'page_block_date';\r\n        break;\r\n      default:\r\n        this.page = 'page_one';\r\n        break;\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  private isGuestDataIncomplete() {\r\n    for (const roomtypeId in booking_store.ratePlanSelections) {\r\n      const roomtype = booking_store.ratePlanSelections[roomtypeId];\r\n      for (const rateplanId in roomtype) {\r\n        const rateplan = roomtype[rateplanId];\r\n        if (rateplan.reserved > 0) {\r\n          for (const guest of rateplan.guest) {\r\n            if (guest.first_name === '' || guest.last_name === '') {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isButtonDisabled() {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.guestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      if (key === 'selectedArrivalTime') {\r\n        if (property[key] !== undefined) {\r\n          return property[key].code === '';\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n    return (\r\n      isValidProperty(this.guestData, 'guestName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'firstName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'lastName', '') ||\r\n      isValidProperty(this.bookedByInfoData, 'selectedArrivalTime', '')\r\n    );\r\n  }\r\n\r\n  private setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.id,\r\n      value: source.description,\r\n      tag: source.tag,\r\n      type: source.type,\r\n    }));\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.sourceOption = { ...this.defaultData.SOURCE };\r\n    } else {\r\n      this.sourceOption = {\r\n        code: bookingSource[0].code,\r\n        description: bookingSource[0].description,\r\n        tag: bookingSource[0].tag,\r\n        type: bookingSource[0].type,\r\n        id: bookingSource[0].id,\r\n      };\r\n    }\r\n  }\r\n\r\n  private setOtherProperties(res: any) {\r\n    this.ratePricingMode = res?.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  private async checkBookingAvailability() {\r\n    resetBookingStore();\r\n    const from_date = moment(this.dateRangeData.fromDate).format('YYYY-MM-DD');\r\n    const to_date = moment(this.dateRangeData.toDate).format('YYYY-MM-DD');\r\n    const is_in_agent_mode = this.sourceOption['type'] === 'TRAVEL_AGENCY';\r\n    try {\r\n      const room_type_ids_to_update = this.isEventType('EDIT_BOOKING') ? [this.defaultData.RATE_TYPE] : [];\r\n      const room_type_ids = this.isEventType('BAR_BOOKING') ? this.defaultData.roomsInfo.map(room => room.id) : [];\r\n      const data = await this.bookingService.getBookingAvailability({\r\n        from_date,\r\n        to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: this.adultChildCount,\r\n        language: this.language,\r\n        room_type_ids,\r\n        currency: this.currency,\r\n        agent_id: is_in_agent_mode ? this.sourceOption['tag'] : null,\r\n        is_in_agent_mode,\r\n        room_type_ids_to_update,\r\n      });\r\n      if (!this.isEventType('EDIT_BOOKING')) {\r\n        this.defaultData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n        this.defaultData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      }\r\n      this.defaultData = { ...this.defaultData, roomsInfo: data };\r\n      if (this.isEventType('EDIT_BOOKING') && !this.updatedBooking) {\r\n        this.updateBooking();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing booking availability:', error);\r\n    }\r\n  }\r\n\r\n  private updateBooking() {\r\n    try {\r\n      const { currentRoomType, GUEST } = this.defaultData as IglBookPropertyPayloadEditBooking;\r\n      const roomtypeId = currentRoomType.roomtype.id;\r\n      const rateplanId = currentRoomType.rateplan.id;\r\n      console.log({ GUEST });\r\n      reserveRooms({\r\n        roomTypeId: roomtypeId,\r\n        ratePlanId: rateplanId,\r\n        rooms: 1,\r\n        guest: [\r\n          {\r\n            bed_preference: currentRoomType.bed_preference?.toString(),\r\n            infant_nbr: currentRoomType.occupancy.infant_nbr,\r\n            last_name: GUEST.last_name,\r\n            first_name: GUEST.first_name,\r\n            unit: (currentRoomType.unit as any)?.id?.toString(),\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private async checkAndBlockDate() {\r\n    try {\r\n      const { block_exposed_unit_props } = this.defaultData;\r\n      await this.bookingService.getBookingAvailability({\r\n        from_date: block_exposed_unit_props.from_date,\r\n        to_date: block_exposed_unit_props.to_date,\r\n        propertyid: this.propertyid,\r\n        adultChildCount: {\r\n          adult: 2,\r\n          child: 0,\r\n        },\r\n        language: this.language,\r\n        room_type_ids: this.defaultData.roomsInfo.map(room => room.id),\r\n        currency: this.currency,\r\n      });\r\n      const isAvailable = booking_store.roomTypes.every(rt => rt.is_available_to_book);\r\n      if (isAvailable) {\r\n        await this.handleBlockDate(false);\r\n      } else {\r\n        console.log('Blocked date is unavailable. Continuing...');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking and blocking date:', error);\r\n    }\r\n  }\r\n  private async closeWindow() {\r\n    resetBookingStore();\r\n    this.closeBookingWindow.emit();\r\n\r\n    if (this.wasBlockedUnit && !this.didReservation) {\r\n      await this.checkAndBlockDate();\r\n    }\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  private isEventType(key: TEventType) {\r\n    return this.defaultData.event_type === key;\r\n  }\r\n\r\n  private handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n  }\r\n\r\n  private handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING') || this.isEventType('SPLIT_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.defaultData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  private handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  private renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  private gotoPage(gotoPage: string) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  private getPageBlockDatesView() {\r\n    return (\r\n      <Fragment>\r\n        <igl-block-dates-view\r\n          fromDate={this.defaultData.FROM_DATE}\r\n          toDate={this.defaultData.TO_DATE}\r\n          entryDate={this.defaultData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"p-0 mb-1 mt-2 gap-30 d-flex align-items-center justify-content-between\">\r\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class=\"flex-fill\" onClick={() => this.closeWindow()}></ir-button>\r\n          <ir-button text={locales.entries.Lcz_Blockdates} isLoading={isRequestPending('/Block_Exposed_Unit')} class=\"flex-fill\" onClick={() => this.handleBlockDate()}></ir-button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  private handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n\r\n  private async handleBlockDate(auto_close = true) {\r\n    const props = this.wasBlockedUnit\r\n      ? this.defaultData.block_exposed_unit_props\r\n      : (() => {\r\n          const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n          return {\r\n            from_date: dateToFormattedString(this.defaultData.defaultDateRange.fromDate),\r\n            to_date: dateToFormattedString(this.defaultData.defaultDateRange.toDate),\r\n            NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n            pr_id: this.defaultData.PR_ID.toString(),\r\n            STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n            DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n            ...releaseData,\r\n          };\r\n        })();\r\n    await this.bookingService.blockUnit(props);\r\n    // const blockedUnit = await transformNewBLockedRooms(result);\r\n    // this.blockedCreated.emit(blockedUnit);\r\n    if (auto_close) this.closeWindow();\r\n  }\r\n\r\n  private async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      if (this.isGuestDataIncomplete()) {\r\n        this.isLoading = '';\r\n        return;\r\n      }\r\n    } else if (this.isButtonDisabled()) {\r\n      this.isLoading = '';\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n        this.bookedByInfoData.message = this.defaultData.NOTES;\r\n      }\r\n      this.didReservation = true;\r\n      const serviceParams = await this.bookPropertyService.prepareBookUserServiceParams({\r\n        context: this,\r\n        sourceOption: this.sourceOption,\r\n        check_in,\r\n      });\r\n      await this.bookingService.doReservation(serviceParams);\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.error('Error booking user:', error);\r\n    } finally {\r\n      // this.isLoading = null;\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  private setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  private resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n\r\n  private getCurrentPage(name: string) {\r\n    return this.page === name;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host data-testid=\"book_property_sheet\">\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow pb-5 pb-md-0 ' + (this.getCurrentPage('page_block_date') ? 'block-date' : '')}>\r\n          <div class=\"card position-sticky mb-0 shadow-none p-0 \">\r\n            <div class=\"card-header-container mb-2\">\r\n              <h3 class=\" text-left font-medium-2 px-2 px-md-3\">{this.getCurrentPage('page_block_date') ? this.defaultData.BLOCK_DATES_TITLE : this.defaultData.TITLE}</h3>\r\n              <ir-icon\r\n                class={'px-2'}\r\n                onIconClickHandler={() => {\r\n                  this.closeWindow();\r\n                }}\r\n              >\r\n                <svg slot=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" height={20} width={20}>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\r\n                  />\r\n                </svg>\r\n              </ir-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"px-2 px-md-3\">\r\n            {this.getCurrentPage('page_one') && (\r\n              <igl-booking-overview-page\r\n                initialRoomIds={this.initialRoomIds}\r\n                defaultDaterange={this.defaultDateRange}\r\n                class={'p-0 mb-1'}\r\n                eventType={this.defaultData.event_type}\r\n                selectedRooms={this.selectedUnits}\r\n                currency={this.currency}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                ratePricingMode={this.ratePricingMode}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                adultChildCount={this.adultChildCount}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                adultChildConstraints={this.adultChildConstraints}\r\n                sourceOptions={this.sourceOptions}\r\n                propertyId={this.propertyid}\r\n              ></igl-booking-overview-page>\r\n            )}\r\n\r\n            {this.getCurrentPage('page_two') && (\r\n              <igl-booking-form\r\n                currency={this.currency}\r\n                propertyId={this.propertyid}\r\n                showPaymentDetails={this.showPaymentDetails}\r\n                selectedGuestData={this.guestData}\r\n                countries={this.countries}\r\n                isLoading={this.isLoading}\r\n                selectedRooms={this.selectedUnits}\r\n                bedPreferenceType={this.bedPreferenceType}\r\n                dateRangeData={this.dateRangeData}\r\n                bookingData={this.defaultData}\r\n                showSplitBookingOption={this.showSplitBookingOption}\r\n                language={this.language}\r\n                bookedByInfoData={this.bookedByInfoData}\r\n                defaultGuestData={this.defaultData}\r\n                isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n                onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              ></igl-booking-form>\r\n            )}\r\n            {this.getCurrentPage('page_block_date') ? this.getPageBlockDatesView() : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}