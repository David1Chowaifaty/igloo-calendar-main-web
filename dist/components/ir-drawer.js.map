{"file":"ir-drawer.js","mappings":";;AAAA,MAAM,WAAW,GAAG,6jCAA6jC,CAAC;AACllC,uBAAe,WAAW;;MCMbA,UAAQ;;;;;;;QAqDnB,iBAAY,GAAG;YACb,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC,CAAC;0BAxD6B,KAAK;;yBAWE,OAAO;oBAKW,KAAK;;IAY7D,gBAAgB;QACd,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;KACF;IAMD,aAAa,CAAC,EAAiB;QAC7B,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,EAAE,CAAC,GAAG,KAAK,QAAQ,IAAI,EAAE,CAAC,GAAG,KAAK,KAAK,EAAE;gBAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;aAClC;SACF;KACF;IAGD,WAAW,CAAC,QAAiB;QAC3B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;KAC5B;IASD,MAAM,WAAW;QACf,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,iBAAe,CAAC,IAAI,CAAC,UAAU,IACpG,4DAAK,KAAK,EAAC,oBAAoB,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,iBAAe,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,GAAQ,EAEhJ,4DAAK,KAAK,EAAE,0CAA0C,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAC,QAAQ,gBAAY,MAAM,qBAAiB,cAAc,IACpI,4DAAK,KAAK,EAAC,mBAAmB,IAC5B,6DAAM,IAAI,EAAC,QAAQ,IACjB,2DAAI,EAAE,EAAC,cAAc,IAAE,IAAI,CAAC,WAAW,CAAM,CACxC,CACH,EAEN,4DAAK,KAAK,EAAC,iBAAiB,IAC1B,8DAAa,CACT,EAEN,4DAAK,KAAK,EAAC,mBAAmB,IAC5B,6DAAM,IAAI,EAAC,QAAQ,GAAQ,CACvB,CACF,CACF,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["IrDrawer"],"sources":["src/components/ir-drawer/ir-drawer.css?tag=ir-drawer&encapsulation=shadow","src/components/ir-drawer/ir-drawer.tsx"],"sourcesContent":[".app-drawer {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  z-index: 1000;\n}\n\n.app-drawer--open {\n  visibility: visible;\n}\n\n.app-drawer-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n  pointer-events: none;\n}\n\n.app-drawer--open .app-drawer-overlay {\n  opacity: 1;\n  pointer-events: auto;\n}\n\n.app-drawer-content {\n  position: fixed;\n  top: 0;\n  height: 100%;\n  width: 300px;\n  background-color: white;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-in-out;\n  display: flex;\n  flex-direction: column;\n}\n\n.app-drawer--open .app-drawer-content {\n  transform: translateX(0);\n}\n\n.app-drawer-content--right {\n  right: 0;\n  transform: translateX(100%);\n}\n\n.app-drawer--open .app-drawer-content--right {\n  transform: translateX(0);\n}\n\n.app-drawer-header {\n  padding: 16px;\n  border-bottom: 1px solid #ccc;\n  position: sticky;\n  top: 0;\n  background-color: white;\n  z-index: 1;\n}\n\n.app-drawer-body {\n  padding: 16px;\n  overflow-y: auto;\n  flex-grow: 1;\n}\n\n.app-drawer-footer {\n  padding: 16px;\n  border-top: 1px solid #ccc;\n  position: sticky;\n  bottom: 0;\n  background-color: white;\n  z-index: 1;\n}\n","import { Component, h, State, Element, EventEmitter, Event, Prop, Listen, Method, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ir-drawer',\n  styleUrl: 'ir-drawer.css',\n  shadow: true,\n})\nexport class IrDrawer {\n  @State() showDrawer: boolean = false;\n  @Element() el: HTMLElement;\n\n  /**\n   * The title of the drawer\n   */\n  @Prop() drawerTitle: string;\n\n  /**\n   * The placement of the drawer\n   */\n  @Prop() placement: 'left' | 'right' = 'right';\n\n  /**\n   * Is the drawer open?\n   */\n  @Prop({ mutable: true, reflect: true }) open: boolean = false;\n\n  /**\n   * Emitted when the drawer visibility changes.\n   */\n  @Event() drawerChange: EventEmitter<boolean>;\n\n  /**\n   * Emitted when the drawer is requested to be closed via keyboard\n   */\n  @Event() drawerCloseRequested: EventEmitter<void>;\n\n  componentDidLoad() {\n    if (this.open) {\n      this.showDrawer = true;\n    }\n  }\n\n  @Listen('keydown', {\n    target: 'document',\n    passive: true,\n  })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (this.open) {\n      if (ev.key === 'Escape' || ev.key === 'Esc') {\n        this.closeDrawer();\n        this.drawerCloseRequested.emit();\n      }\n    }\n  }\n\n  @Watch('open')\n  openHandler(newValue: boolean) {\n    this.showDrawer = newValue;\n  }\n\n  toggleDrawer = () => {\n    this.open = !this.open;\n    this.showDrawer = this.open;\n    this.drawerChange.emit(this.open);\n  };\n\n  @Method()\n  async closeDrawer() {\n    this.open = false;\n    this.showDrawer = false;\n    this.drawerChange.emit(this.open);\n  }\n\n  render() {\n    return (\n      <div class={{ 'app-drawer': true, 'app-drawer--open': this.showDrawer }} aria-hidden={!this.showDrawer}>\n        <div class=\"app-drawer-overlay\" onClick={() => this.closeDrawer()} aria-hidden={!this.showDrawer} tabindex={this.showDrawer ? '0' : '-1'}></div>\n\n        <div class={`app-drawer-content app-drawer-content--${this.placement}`} role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"drawer-title\">\n          <div class=\"app-drawer-header\">\n            <slot name=\"header\">\n              <h2 id=\"drawer-title\">{this.drawerTitle}</h2>\n            </slot>\n          </div>\n\n          <div class=\"app-drawer-body\">\n            <slot></slot>\n          </div>\n\n          <div class=\"app-drawer-footer\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}