{"file":"ir-room-guests2.js","mappings":";;;;;;;;;;;;;;;;AAIO,MAAM,YAAY,GAAiB;IACxC,EAAE,EAAE,CAAC,CAAC;IACN,SAAS,EAAE,EAAE;IACb,UAAU,EAAE,IAAI;IAChB,GAAG,EAAE,EAAE;IACP,OAAO,EAAE;QACP,IAAI,EAAE;YACJ,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,IAAI;SAClB;QACD,MAAM,EAAE,EAAE;KACX;IACD,OAAO,EAAE,IAAI;IACb,iBAAiB,EAAE,IAAI;IACvB,GAAG,EAAE,IAAI;IACT,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,SAAS;IAClB,oBAAoB,EAAE,IAAI;IAC1B,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,EAAE;IACd,SAAS,EAAE,EAAE;IACb,MAAM,EAAE,IAAI;IACZ,sBAAsB,EAAE,CAAC;IACzB,KAAK,EAAE,IAAI;IACX,QAAQ,EAAE,IAAI;IACd,wBAAwB,EAAE,IAAI;CAC/B,CAAC;AACF;AACO,MAAM,QAAQ,GAAe;IAClC,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,YAAY;IACrB,IAAI,EAAE,KAAK;IACX,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,GAAG,EAAE,IAAI,IAAI,EAAE;IACf,MAAM,EAAE,IAAI,IAAIA,KAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;IACjD,KAAK,EAAE,GAAG,IAAIA,KAAM,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,MAAM,EAAE;IAChD,OAAO,EAAE,IAAI;IACb,MAAM,EAAE;QACN,IAAI,EAAE;YACJ,IAAI,EAAE,KAAK,CAAC,WAAW;YACvB,IAAI,EAAE,IAAI;YACV,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YAC5B,eAAe,EAAE,GAAG;SACrB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK,CAAC,WAAW;YACvB,IAAI,EAAE,CAAC;YACP,EAAE,EAAE,EAAE;YACN,eAAe,EAAE,GAAG;SACrB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK,CAAC,WAAW;YACvB,IAAI,EAAE,CAAC;YACP,EAAE,EAAE,EAAE;YACN,eAAe,EAAE,GAAG;SACrB;KACF;CACF;;AC7DD,MAAM,eAAe,GAAG,0sCAA0sC,CAAC;AACnuC,2BAAe,eAAe;;MCajB,YAAY;IALzB;;;;;;;;;QAsBU,kBAAa,GAAmB,EAAE,CAAC;;;;;QAMnC,gBAAW,GAAW,CAAC,CAAC;;;;;QAkBxB,aAAQ,GAAW,IAAI,CAAC;QAQvB,WAAM,GAAmB,EAAE,CAAC;QAC5B,YAAO,GAAe,EAAE,CAAC;QACzB,UAAK,GAA4B,EAAE,CAAC;QAQrC,mBAAc,GAAG,IAAI,cAAc,EAAE,CAAC;KAiQ/C;IA/PC,iBAAiB;QACf,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,MAAM,IAAI;QAChB,IAAI;YACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACxJ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,UAAU,CAAC,CAAC;aAC9E;SACF;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;gBAAS;YACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;IAEO,gBAAgB;;QACtB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YAChD,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACxE,MAAM,GAAG;gBACP,GAAG,IAAI,CAAC,aAAa;gBACrB,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC,IAAI,iCAC5B,YAAY,KACf,OAAO,kCACF,YAAY,CAAC,OAAO,KACvB,IAAI,EAAE;4BACJ,IAAI,EAAE,CAAA,MAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,0CAAE,SAAS,KAAI,KAAK;4BACzC,WAAW,EAAE,CAAA,MAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,0CAAE,aAAa,KAAI,EAAE;yBAClD,EACD,MAAM,EAAE,EAAE,OAEZ;aACH,CAAC;SACH;aAAM;YACL,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAClC;QACD,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,qCAAU,CAAC,KAAE,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,IAAG,CAAC,CAAC;QACjG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,qCAAU,CAAC,KAAE,GAAG,EAAE,CAAC,CAAC,GAAG,GAAGA,KAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,IAAG,CAAC,CAAC;KAC3G;IAEO,eAAe,CAAC,KAAa,EAAE,MAA6B;QAClE,MAAM,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAClC,SAAS,mCAAQ,SAAS,GAAK,MAAM,CAAE,CAAC;QACxC,UAAU,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;KAC/B;IAEO,MAAM,UAAU;QACtB,IAAI;YACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC;gBAChD,WAAW,EAAE,IAAI,CAAC,aAAa;gBAC/B,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC;oBAC/C,WAAW,EAAE,IAAI,CAAC,aAAa;oBAC/B,eAAe,EAAE,IAAI,CAAC,UAAU;oBAChC,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,KAAK,YAAY,QAAQ,EAAE;gBAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,KAAK,qBAAQ,MAAM,CAAE,CAAC;aAC5B;SACF;KACF;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,QACE,WAAK,KAAK,EAAE,mBAAmB,IAC7B,qBAAyB,CACrB,EACN;SACH;QACD,QACE,WAAK,KAAK,EAAC,0BAA0B,EAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,IAChE,gBAAU,KAAK,EAAC,MAAM,EAAC,cAAc,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,IAAI,CAAC,QAAQ,EAAE,EAAE,cAAc,EAAC,SAAS,GAAY,EAC7I,eAAS,KAAK,EAAE,gCAAgC,IAC9C,WAAK,KAAK,EAAC,EAAE,IACX,WAAK,KAAK,EAAC,0BAA0B,IACnC,SAAG,KAAK,EAAC,EAAE,IAAE,OAAO,CAAC,OAAO,CAAC,aAAa,CAAK,EAC/C,SAAG,KAAK,EAAC,EAAE,GAAK,EAChB,SAAG,KAAK,EAAC,GAAG,IAAE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAK,EAC1C,SAAG,KAAK,EAAC,EAAE,IAAE,OAAO,CAAC,OAAO,CAAC,eAAe,CAAK,EACjD,SAAG,KAAK,EAAC,GAAG,IAAE,OAAO,CAAC,OAAO,CAAC,aAAa,CAAK,CAC5C,EACN,UAAI,KAAK,EAAC,oBAAoB,IAAE,OAAO,CAAC,OAAO,CAAC,aAAa,CAAM,EAClE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG;;YAAK,QAC/B,EAAC,QAAQ,QACN,GAAG,KAAK,CAAC,KACR,WAAK,KAAK,EAAC,kBAAkB,IAC3B,UAAI,KAAK,EAAC,mCAAmC,IAAE,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAM,EAC3F,SAAG,KAAK,EAAC,iCAAiC,IAAE,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAK,CACnF,CACP,EACD,WAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAC,YAAY,IAC/B,WAAK,KAAK,EAAE,yCAAyC,IACnD,SAAG,KAAK,EAAC,aAAa,iBAAe,EACrC,qBACE,KAAK,EAAC,mBAAmB,EACzB,EAAE,EAAE,cAAc,GAAG,EAAE,EACvB,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAC7C,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EACjC,YAAY,EAAE,KAAK,EACnB,OAAO,EAAC,YAAY,EACpB,cAAc,EAAE,KAAK,EACrB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,WAAW,EAAC,YAAY,EACxB,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EACtE,KAAK,EAAE,KAAK,CAAC,UAAU,GACR,CACb,EACN,WAAK,KAAK,EAAE,yCAAyC,IACnD,SAAG,KAAK,EAAC,aAAa,gBAAc,EACpC,qBACE,KAAK,EAAC,mBAAmB,EACzB,EAAE,EAAE,aAAa,GAAG,EAAE,EACtB,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAC5C,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAChC,YAAY,EAAE,KAAK,EACnB,OAAO,EAAC,WAAW,EACnB,cAAc,EAAE,KAAK,EACrB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,WAAW,EAAC,WAAW,EACvB,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EACrE,KAAK,EAAE,KAAK,CAAC,SAAS,GACP,CACb,EACN,WAAK,KAAK,EAAC,qDAAqD,IAC9D,SAAG,KAAK,EAAC,aAAa,IAAE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAK,EACpD,qBACE,KAAK,EAAC,mBAAmB,EACzB,EAAE,EAAE,OAAO,GAAG,EAAE,EAChB,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EACtC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAC1B,YAAY,EAAE,KAAK,EACnB,OAAO,EAAC,KAAK,EACb,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,IAAI,EAAE,QAAQ,EACd,cAAc,EAAE,KAAK,EACrB,WAAW,EAAC,YAAY,EACxB,YAAY,EAAE,CAAC;oBACb,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;iBAC9C,EACD,KAAK,EAAE,KAAK,CAAC,GAAG,GACD,CACb,EACN,WAAK,KAAK,EAAC,oCAAoC,IAC7C,SAAG,KAAK,EAAC,aAAa,IAAE,OAAO,CAAC,OAAO,CAAC,eAAe,CAAK,EAC5D,WAAK,KAAK,EAAC,yBAAyB,IAClC,yBACE,KAAK,EAAC,OAAO,EACb,eAAe,EAAE,IAAI,CAAC,eAAe,EACrC,EAAE,EAAE,qCAAqC,GAAG,EAAE,EAC9C,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EACtD,OAAO,EAAE,MAAA,IAAI,CAAC,SAAS,0CAAE,IAAI,CAAC,CAAC,sBAAI,OAAA,CAAA,MAAA,CAAC,CAAC,EAAE,0CAAE,QAAQ,EAAE,OAAK,MAAA,MAAA,KAAK,CAAC,OAAO,0CAAE,EAAE,0CAAE,QAAQ,EAAE,CAAA,CAAA,EAAA,CAAC,EACtF,eAAe,EAAE,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAC1G,SAAS,EAAE,IAAI,CAAC,SAAS,GACN,CACjB,CACF,EACN,WAAK,KAAK,EAAC,+CAA+C,IACxD,SAAG,KAAK,EAAC,aAAa,IAAE,OAAO,CAAC,OAAO,CAAC,aAAa,CAAK,EAC1D,WAAK,KAAK,EAAE,+BAA+B,IACzC,iBACE,kBAAkB,EAAE;oBAClB,oBAAoB,EAAE,KAAK;oBAC3B,uBAAuB,EAAE,KAAK;oBAC9B,WAAW,EAAE,GAAG;iBACjB,EACD,YAAY,EAAE,gCAAgC,EAC9C,cAAc,EAAE,CAAC;oBACf,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,OAAO,kCACF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,KAC3B,IAAI,EAAE;gCACJ,IAAI,EAAE,CAAC,CAAC,MAAM;gCACd,WAAW,EAAE,EAAE;6BAChB,GACF;qBACF,CAAC,CAAC;iBACJ,EACD,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EACtC,eAAe,EAAE,KAAK,EACtB,cAAc,EAAE,KAAK,EACrB,IAAI,EAAE,MAAA,IAAI,CAAC,OAAO,0CAAE,GAAG,CAAC,CAAC,cAAI,QAAC,EAAE,IAAI,EAAE,MAAA,CAAC,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,mCAAI,CAAC,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,EAAE,EAAC,EAAA,CAAC,GACvH,EACb,qBACE,WAAW,EAAC,OAAO,EACnB,KAAK,EAAC,4BAA4B,EAClC,IAAI,EAAC,MAAM,EACX,gBAAgB,EAAE,EAAE,mBAAmB,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,EAC/E,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,EAC3B,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EACnC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAC7B,YAAY,EAAE,KAAK,EACnB,OAAO,EAAC,QAAQ,EAChB,WAAW,EAAC,cAAc,EAC1B,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,cAAc,EAAE,KAAK,EACrB,YAAY,EAAE,CAAC,IACb,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;oBACxB,OAAO,kCACF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,KAC3B,MAAM,EAAE,CAAC,CAAC,MAAM,GACjB;iBACF,CAAC,GAEW,CACb,CACF,CACF,CACG,EACZ;SAAA,CAAC,CACE,EACN,WAAK,KAAK,EAAE,qDAAqD,IAC/D,iBACE,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EACzC,UAAU,EAAC,wBAAwB,EACnC,KAAK,EAAE,gCAAgC,EACvC,IAAI,EAAC,EAAE,EACP,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAChC,SAAS,EAAC,WAAW,GACV,EAEb,iBACE,UAAU,EAAC,2CAA2C,EACtD,KAAK,EAAE,2BAA2B,EAClC,IAAI,EAAC,EAAE,EACP,SAAS,EAAE,gBAAgB,CAAC,6BAA6B,CAAC,EAC1D,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAC3E,SAAS,EAAC,SAAS,EACnB,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAC/B,CACT,CACE,CACN,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["moment"],"sources":["src/components/ir-booking-details/ir-room-guests/data.ts","src/components/ir-booking-details/ir-room-guests/ir-room-guests.css?tag=ir-room-guests&encapsulation=scoped","src/components/ir-booking-details/ir-room-guests/ir-room-guests.tsx"],"sourcesContent":["import { SharedPerson } from '@/models/booking.dto';\r\nimport moment from 'moment';\r\nimport IMask, { FactoryArg } from 'imask';\r\n\r\nexport const defaultGuest: SharedPerson = {\r\n  id: -1,\r\n  full_name: '',\r\n  country_id: null,\r\n  dob: '',\r\n  id_info: {\r\n    type: {\r\n      code: null,\r\n      description: null,\r\n    },\r\n    number: '',\r\n  },\r\n  address: null,\r\n  alternative_email: null,\r\n  cci: null,\r\n  city: null,\r\n  country: undefined,\r\n  country_phone_prefix: null,\r\n  email: null,\r\n  first_name: '',\r\n  last_name: '',\r\n  mobile: null,\r\n  nbr_confirmed_bookings: 0,\r\n  notes: null,\r\n  password: null,\r\n  subscribe_to_news_letter: null,\r\n};\r\n/**Date of birth mask for room guests  with min */\r\nexport const dateMask: FactoryArg = {\r\n  mask: Date,\r\n  pattern: 'DD/MM/YYYY',\r\n  lazy: false,\r\n  min: new Date(1900, 0, 1),\r\n  max: new Date(),\r\n  format: date => moment(date).format('DD/MM/YYYY'),\r\n  parse: str => moment(str, 'DD/MM/YYYY').toDate(),\r\n  autofix: true,\r\n  blocks: {\r\n    YYYY: {\r\n      mask: IMask.MaskedRange,\r\n      from: 1970,\r\n      to: new Date().getFullYear(),\r\n      placeholderChar: 'Y',\r\n    },\r\n    MM: {\r\n      mask: IMask.MaskedRange,\r\n      from: 1,\r\n      to: 12,\r\n      placeholderChar: 'M',\r\n    },\r\n    DD: {\r\n      mask: IMask.MaskedRange,\r\n      from: 1,\r\n      to: 31,\r\n      placeholderChar: 'D',\r\n    },\r\n  },\r\n};\r\n",":host {\r\n  display: block;\r\n  height: 100%;\r\n  position: relative;\r\n  text-align: start !important;\r\n}\r\n.id-select {\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border-right-width: 0;\r\n}\r\n:host {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.guest-grid > * {\r\n  height: 100%;\r\n}\r\n\r\n.guests-labels {\r\n  display: none;\r\n}\r\n.guest_label {\r\n  width: 100px;\r\n  color: #6b6f82;\r\n}\r\n.sharing_persons_label {\r\n  display: none;\r\n}\r\n.loading-container {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.guest_document input {\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n.guests-labels *,\r\n.sharing_persons_label {\r\n  margin-bottom: 0.5rem;\r\n  padding-bottom: 0;\r\n}\r\n\r\n/*sm*/\r\n@media (min-width: 640px) {\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .sharing_persons_label {\r\n    display: block;\r\n  }\r\n  .guest_country_picker {\r\n    margin-bottom: 3px;\r\n  }\r\n  .guest-grid {\r\n    display: grid;\r\n    grid-template-columns: 2fr 2fr 2fr 2fr 5fr;\r\n    gap: 0.5rem;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .guest_label,\r\n  .sharing_persons_heading,\r\n  .main_guest_heading {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/*lg*/\r\n@media (min-width: 1024px) {\r\n}\r\n\r\n/*xl*/\r\n@media (min-width: 1280px) {\r\n}\r\n\r\n/*2xl*/\r\n@media (min-width: 1536px) {\r\n}\r\n","import { SharedPerson, ZIdInfo, ZSharedPerson, ZSharedPersons } from '@/models/booking.dto';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Event, EventEmitter, Fragment, Prop, State, h } from '@stencil/core';\r\nimport moment from 'moment';\r\nimport { dateMask, defaultGuest } from './data';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { ICountry, IEntries } from '@/models/IBooking';\r\nimport { ZodError } from 'zod';\r\n@Component({\r\n  tag: 'ir-room-guests',\r\n  styleUrl: 'ir-room-guests.css',\r\n  scoped: true,\r\n})\r\nexport class IrRoomGuests {\r\n  /**\r\n   * The name of the room currently being displayed.\r\n   * Used to label the room in the user interface for clarity.\r\n   */\r\n  @Prop() roomName: string;\r\n\r\n  /**\r\n   * A unique identifier for the room.\r\n   * This is used to distinguish between rooms, especially when performing operations like saving or checking in guests.\r\n   */\r\n  @Prop() identifier: string;\r\n\r\n  /**\r\n   * An array of people sharing the room.\r\n   * Contains information about the {locales.entries.Lcz_MainGuest} and additional guests, such as their name, date of birth, {locales.entries.Lcz_Nationality}, and ID details.\r\n   */\r\n  @Prop() sharedPersons: SharedPerson[] = [];\r\n\r\n  /**\r\n   * The total number of guests for the room.\r\n   * Determines how many guest input forms to display in the UI.\r\n   */\r\n  @Prop() totalGuests: number = 0;\r\n\r\n  /**\r\n   * A list of available countries.\r\n   * Used to populate dropdowns for selecting the {locales.entries.Lcz_Nationality} of guests.\r\n   */\r\n  @Prop() countries: ICountry[];\r\n\r\n  /**\r\n   * A boolean indicating whether the room is in the process of being checked in.\r\n   * If true, additional actions like saving the room state as \"checked in\" are performed.\r\n   */\r\n  @Prop() checkIn: boolean;\r\n\r\n  /**\r\n   * The language used for displaying text content in the component.\r\n   * Defaults to English ('en'), but can be set to other supported languages.\r\n   */\r\n  @Prop() language: string = 'en';\r\n\r\n  /**\r\n   * A unique booking number associated with the room.\r\n   * This is used for backend operations like saving guest information or checking in the room.\r\n   */\r\n  @Prop() bookingNumber: string;\r\n\r\n  @State() guests: SharedPerson[] = [];\r\n  @State() idTypes: IEntries[] = [];\r\n  @State() error: Record<string, boolean> = {};\r\n  @State() isLoading: boolean;\r\n  @State() submitted: boolean;\r\n  @State() propertyCountry: ICountry;\r\n\r\n  @Event() closeModal: EventEmitter<null>;\r\n  @Event() resetbooking: EventEmitter<null>;\r\n\r\n  private bookingService = new BookingService();\r\n\r\n  componentWillLoad() {\r\n    this.init();\r\n    this.initializeGuests();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.isLoading = true;\r\n      const [country, idTypes] = await Promise.all([this.bookingService.getUserDefaultCountry(), this.bookingService.getSetupEntriesByTableName('_ID_TYPE')]);\r\n      this.idTypes = idTypes;\r\n      if (country) {\r\n        this.propertyCountry = this.countries.find(c => c.id === country.COUNTRY_ID);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private initializeGuests(): void {\r\n    let guests = [];\r\n    if (this.totalGuests > this.sharedPersons.length) {\r\n      const defaultGuestsCount = this.totalGuests - this.sharedPersons.length;\r\n      guests = [\r\n        ...this.sharedPersons,\r\n        ...Array(defaultGuestsCount).fill({\r\n          ...defaultGuest,\r\n          id_info: {\r\n            ...defaultGuest.id_info,\r\n            type: {\r\n              code: this.idTypes[0]?.CODE_NAME || '001',\r\n              description: this.idTypes[0]?.CODE_VALUE_EN || '',\r\n            },\r\n            number: '',\r\n          },\r\n        }),\r\n      ];\r\n    } else {\r\n      guests = [...this.sharedPersons];\r\n    }\r\n    guests = guests.map(g => ({ ...g, dob: new Date(g.dob).getFullYear() === 1900 ? null : g.dob }));\r\n    this.guests = guests.map(g => ({ ...g, dob: g.dob ? moment(new Date(g.dob)).format('DD/MM/YYYY') : '' }));\r\n  }\r\n\r\n  private updateGuestInfo(index: number, params: Partial<SharedPerson>) {\r\n    const tempGuests = [...this.guests];\r\n    let tempGuest = tempGuests[index];\r\n    tempGuest = { ...tempGuest, ...params };\r\n    tempGuests[index] = tempGuest;\r\n    this.guests = [...tempGuests];\r\n  }\r\n\r\n  private async saveGuests() {\r\n    try {\r\n      this.submitted = true;\r\n      this.error = {};\r\n      ZSharedPersons.parse(this.guests);\r\n      await this.bookingService.handleExposedRoomGuests({\r\n        booking_nbr: this.bookingNumber,\r\n        identifier: this.identifier,\r\n        guests: this.guests,\r\n      });\r\n      if (this.checkIn) {\r\n        await this.bookingService.handleExposedRoomInOut({\r\n          booking_nbr: this.bookingNumber,\r\n          room_identifier: this.identifier,\r\n          status: '001',\r\n        });\r\n      }\r\n      this.closeModal.emit(null);\r\n      this.resetbooking.emit(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error instanceof ZodError) {\r\n        let errors = {};\r\n        error.issues.map(e => ({ [e.path[0].toString()]: true }));\r\n        this.error = { ...errors };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.isLoading) {\r\n      return (\r\n        <div class={'loading-container'}>\r\n          <ir-spinner></ir-spinner>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"h-100 d-flex flex-column\" style={{ minWidth: '300px' }}>\r\n        <ir-title class=\"px-1\" onCloseSideBar={() => this.closeModal.emit(null)} label={`Room ${this.roomName}`} displayContext=\"sidebar\"></ir-title>\r\n        <section class={'d-flex flex-column px-1 h-100 '}>\r\n          <div class=\"\">\r\n            <div class=\"guest-grid guests-labels\">\r\n              <p class=\"\">{locales.entries.Lcz_MainGuest}</p>\r\n              <p class=\"\"></p>\r\n              <p class=\" \">{locales.entries.Lcz_DOB}</p>\r\n              <p class=\"\">{locales.entries.Lcz_Nationality}</p>\r\n              <p class=\" \">{locales.entries.Lcz_Documents}</p>\r\n            </div>\r\n            <h5 class=\"main_guest_heading\">{locales.entries.Lcz_MainGuest}</h5>\r\n            {this.guests.map((guest, idx) => (\r\n              <Fragment>\r\n                {idx === 1 && (\r\n                  <div class=\"d-flex mx-0 px-0\">\r\n                    <h5 class=\"mx-0 px-0 sharing_persons_heading\">{locales.entries.Lcz_PersonsSharingRoom}</h5>\r\n                    <p class=\"mx-0 px-0 sharing_persons_label\">{locales.entries.Lcz_PersonsSharingRoom}</p>\r\n                  </div>\r\n                )}\r\n                <div key={idx} class=\"guest-grid\">\r\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\r\n                    <p class=\"guest_label\">First name</p>\r\n                    <ir-input-text\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`first_name_${idx}`}\r\n                      zod={ZSharedPerson.pick({ first_name: true })}\r\n                      error={!!this.error['first_name']}\r\n                      autoValidate={false}\r\n                      wrapKey=\"first_name\"\r\n                      LabelAvailable={false}\r\n                      submitted={this.submitted}\r\n                      placeholder=\"First name\"\r\n                      onTextChange={e => this.updateGuestInfo(idx, { first_name: e.detail })}\r\n                      value={guest.first_name}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\r\n                    <p class=\"guest_label\">Last name</p>\r\n                    <ir-input-text\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`last_name_${idx}`}\r\n                      zod={ZSharedPerson.pick({ last_name: true })}\r\n                      error={!!this.error['last_name']}\r\n                      autoValidate={false}\r\n                      wrapKey=\"last_name\"\r\n                      LabelAvailable={false}\r\n                      submitted={this.submitted}\r\n                      placeholder=\"Last name\"\r\n                      onTextChange={e => this.updateGuestInfo(idx, { last_name: e.detail })}\r\n                      value={guest.last_name}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class=\"flex-grow-0 m-0 p-0 h-100 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_DOB}</p>\r\n                    <ir-input-text\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`dob_${idx}`}\r\n                      zod={ZSharedPerson.pick({ dob: true })}\r\n                      error={!!this.error['dob']}\r\n                      autoValidate={false}\r\n                      wrapKey=\"dob\"\r\n                      submitted={this.submitted}\r\n                      mask={dateMask}\r\n                      LabelAvailable={false}\r\n                      placeholder=\"dd/mm/yyyy\"\r\n                      onTextChange={e => {\r\n                        this.updateGuestInfo(idx, { dob: e.detail });\r\n                      }}\r\n                      value={guest.dob}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class=\" m-0 p-0 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_Nationality}</p>\r\n                    <div class=\"mx-0 flex-grow-1  h-100\">\r\n                      <ir-country-picker\r\n                        class=\"h-100\"\r\n                        propertyCountry={this.propertyCountry}\r\n                        id={`{locales.entries.Lcz_Nationality}_${idx}`}\r\n                        error={!!this.error['country_id'] && !guest.country_id}\r\n                        country={this.countries?.find(c => c.id?.toString() === guest.country?.id?.toString())}\r\n                        onCountryChange={e => this.updateGuestInfo(idx, { country_id: e.detail.id.toString(), country: e.detail })}\r\n                        countries={this.countries}\r\n                      ></ir-country-picker>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"flex-grow-1 m-0 p-0 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_Documents}</p>\r\n                    <div class={' d-flex m-0 flex-grow-1 h-100'}>\r\n                      <ir-select\r\n                        selectForcedStyles={{\r\n                          borderTopRightRadius: '0px',\r\n                          borderBottomRightRadius: '0px',\r\n                          borderRight: '0',\r\n                        }}\r\n                        selectStyles={'rounded-top-0 rounded-bottom-0'}\r\n                        onSelectChange={e => {\r\n                          this.updateGuestInfo(idx, {\r\n                            id_info: {\r\n                              ...this.guests[idx].id_info,\r\n                              type: {\r\n                                code: e.detail,\r\n                                description: '',\r\n                              },\r\n                            },\r\n                          });\r\n                        }}\r\n                        selectedValue={guest.id_info.type.code}\r\n                        showFirstOption={false}\r\n                        LabelAvailable={false}\r\n                        data={this.idTypes?.map(t => ({ text: t[`CODE_VALUE_${this.language.toUpperCase()}`] ?? t[`CODE_VALUE_EN`], value: t.CODE_NAME }))}\r\n                      ></ir-select>\r\n                      <ir-input-text\r\n                        placeholder=\"12345\"\r\n                        class=\"flex-grow-1 guest_document\"\r\n                        type=\"text\"\r\n                        inputForcedStyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}\r\n                        value={guest.id_info.number}\r\n                        zod={ZIdInfo.pick({ number: true })}\r\n                        error={!!this.error['number']}\r\n                        autoValidate={false}\r\n                        wrapKey=\"number\"\r\n                        inputStyles=\"form-control\"\r\n                        submitted={this.submitted}\r\n                        LabelAvailable={false}\r\n                        onTextChange={e =>\r\n                          this.updateGuestInfo(idx, {\r\n                            id_info: {\r\n                              ...this.guests[idx].id_info,\r\n                              number: e.detail,\r\n                            },\r\n                          })\r\n                        }\r\n                      ></ir-input-text>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n          <div class={'d-flex flex-column flex-sm-row mt-3 action-buttons '}>\r\n            <ir-button\r\n              onClick={() => this.closeModal.emit(null)}\r\n              btn_styles=\"justify-content-center\"\r\n              class={`mb-1 mb-sm-0 flex-fill mr-sm-1`}\r\n              icon=\"\"\r\n              text={locales.entries.Lcz_Cancel}\r\n              btn_color=\"secondary\"\r\n            ></ir-button>\r\n\r\n            <ir-button\r\n              btn_styles=\"justify-content-center align-items-center\"\r\n              class={'m-0 flex-fill text-center'}\r\n              icon=\"\"\r\n              isLoading={isRequestPending('/Handle_Exposed_Room_Guests')}\r\n              text={this.checkIn ? locales.entries.Lcz_CheckIn : locales.entries.Lcz_Save}\r\n              btn_color=\"primary\"\r\n              onClickHandler={this.saveGuests.bind(this)}\r\n            ></ir-button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}