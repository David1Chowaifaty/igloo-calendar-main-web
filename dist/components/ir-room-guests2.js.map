{"file":"ir-room-guests2.js","mappings":"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","names":["moment","__stencil_proxyCustomElement","ZodError"],"sources":["src/components/ir-booking-details/ir-room-guests/data.ts","src/components/ir-booking-details/ir-room-guests/ir-room-guests.css?tag=ir-room-guests&encapsulation=scoped","src/components/ir-booking-details/ir-room-guests/ir-room-guests.tsx"],"sourcesContent":["import { SharedPerson } from '@/models/booking.dto';\r\nimport moment from 'moment';\r\nimport { FactoryArg, MaskedRange } from 'imask';\r\n\r\nexport const defaultGuest: SharedPerson = {\r\n  id: -1,\r\n  full_name: '',\r\n  country_id: null,\r\n  dob: '',\r\n  id_info: {\r\n    type: {\r\n      code: null,\r\n      description: null,\r\n    },\r\n    number: '',\r\n  },\r\n  address: null,\r\n  alternative_email: null,\r\n  cci: null,\r\n  city: null,\r\n  country: undefined,\r\n  country_phone_prefix: null,\r\n  email: null,\r\n  first_name: '',\r\n  last_name: '',\r\n  mobile: null,\r\n  nbr_confirmed_bookings: 0,\r\n  notes: null,\r\n  password: null,\r\n  subscribe_to_news_letter: null,\r\n};\r\n/**Date of birth mask for room guests  with min */\r\nexport const dateMask: FactoryArg = {\r\n  mask: Date,\r\n  pattern: 'DD/MM/YYYY',\r\n  lazy: false,\r\n  min: new Date(1900, 0, 1),\r\n  max: new Date(),\r\n  format: date => moment(date).format('DD/MM/YYYY'),\r\n  parse: str => moment(str, 'DD/MM/YYYY').toDate(),\r\n  autofix: true,\r\n  placeholderChar: '_',\r\n  blocks: {\r\n    YYYY: {\r\n      mask: MaskedRange,\r\n      from: 1970,\r\n      to: new Date().getFullYear(),\r\n      placeholderChar: 'Y',\r\n    },\r\n    MM: {\r\n      mask: MaskedRange,\r\n      from: 1,\r\n      to: 12,\r\n      placeholderChar: 'M',\r\n    },\r\n    DD: {\r\n      mask: MaskedRange,\r\n      from: 1,\r\n      to: 31,\r\n      placeholderChar: 'D',\r\n    },\r\n  },\r\n};\r\n",":host {\r\n  display: block;\r\n  height: 100%;\r\n  position: relative;\r\n  text-align: start !important;\r\n}\r\n.id-select {\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border-right-width: 0;\r\n}\r\n:host {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.guest-grid > * {\r\n  height: 100%;\r\n}\r\n\r\n.guests-labels {\r\n  display: none;\r\n}\r\n.guest_label {\r\n  width: 100px;\r\n  color: #6b6f82;\r\n}\r\n.sharing_persons_label {\r\n  display: none;\r\n}\r\n.loading-container {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.guest_document input {\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n.guests-labels *,\r\n.sharing_persons_label {\r\n  margin-bottom: 0.5rem;\r\n  padding-bottom: 0;\r\n}\r\n\r\n/*sm*/\r\n@media (min-width: 640px) {\r\n}\r\n\r\n/*md*/\r\n@media (min-width: 768px) {\r\n  .sharing_persons_label {\r\n    display: block;\r\n  }\r\n  .guest_country_picker {\r\n    margin-bottom: 3px;\r\n  }\r\n  .guest-grid {\r\n    display: grid;\r\n    grid-template-columns: 2fr 2fr 2fr 2fr 5fr;\r\n    gap: 0.5rem;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .guest_label,\r\n  .sharing_persons_heading,\r\n  .main_guest_heading {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/*lg*/\r\n@media (min-width: 1024px) {\r\n}\r\n\r\n/*xl*/\r\n@media (min-width: 1280px) {\r\n}\r\n\r\n/*2xl*/\r\n@media (min-width: 1536px) {\r\n}\r\n","import { SharedPerson, ZIdInfo, ZSharedPerson, ZSharedPersons } from '@/models/booking.dto';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Event, EventEmitter, Fragment, Prop, State, h } from '@stencil/core';\r\nimport moment from 'moment';\r\nimport { dateMask, defaultGuest } from './data';\r\nimport { BookingService } from '@/services/booking.service';\r\nimport { ICountry, IEntries } from '@/models/IBooking';\r\nimport { ZodError } from 'zod';\r\n@Component({\r\n  tag: 'ir-room-guests',\r\n  styleUrl: 'ir-room-guests.css',\r\n  scoped: true,\r\n})\r\nexport class IrRoomGuests {\r\n  /**\r\n   * The name of the room currently being displayed.\r\n   * Used to label the room in the user interface for clarity.\r\n   */\r\n  @Prop() roomName: string;\r\n\r\n  /**\r\n   * A unique identifier for the room.\r\n   * This is used to distinguish between rooms, especially when performing operations like saving or checking in guests.\r\n   */\r\n  @Prop() identifier: string;\r\n\r\n  /**\r\n   * An array of people sharing the room.\r\n   * Contains information about the {locales.entries.Lcz_MainGuest} and additional guests, such as their name, date of birth, {locales.entries.Lcz_Nationality}, and ID details.\r\n   */\r\n  @Prop() sharedPersons: SharedPerson[] = [];\r\n\r\n  /**\r\n   * The total number of guests for the room.\r\n   * Determines how many guest input forms to display in the UI.\r\n   */\r\n  @Prop() totalGuests: number = 0;\r\n\r\n  /**\r\n   * A list of available countries.\r\n   * Used to populate dropdowns for selecting the {locales.entries.Lcz_Nationality} of guests.\r\n   */\r\n  @Prop() countries: ICountry[];\r\n\r\n  /**\r\n   * A boolean indicating whether the room is in the process of being checked in.\r\n   * If true, additional actions like saving the room state as \"checked in\" are performed.\r\n   */\r\n  @Prop() checkIn: boolean;\r\n\r\n  /**\r\n   * The language used for displaying text content in the component.\r\n   * Defaults to English ('en'), but can be set to other supported languages.\r\n   */\r\n  @Prop() language: string = 'en';\r\n\r\n  /**\r\n   * A unique booking number associated with the room.\r\n   * This is used for backend operations like saving guest information or checking in the room.\r\n   */\r\n  @Prop() bookingNumber: string;\r\n\r\n  @State() guests: SharedPerson[] = [];\r\n  @State() idTypes: IEntries[] = [];\r\n  @State() error: Record<string, boolean> = {};\r\n  @State() isLoading: boolean;\r\n  @State() propertyCountry: ICountry;\r\n  @State() autoValidate = false;\r\n\r\n  @Event() closeModal: EventEmitter<null>;\r\n  @Event() resetBookingEvt: EventEmitter<null>;\r\n\r\n  private bookingService = new BookingService();\r\n\r\n  componentWillLoad() {\r\n    this.init();\r\n    this.initializeGuests();\r\n  }\r\n\r\n  private async init() {\r\n    try {\r\n      this.isLoading = true;\r\n      const [country, idTypes] = await Promise.all([this.bookingService.getUserDefaultCountry(), this.bookingService.getSetupEntriesByTableName('_ID_TYPE')]);\r\n      this.idTypes = idTypes;\r\n      if (country) {\r\n        this.propertyCountry = this.countries.find(c => c.id === country.COUNTRY_ID);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private initializeGuests(): void {\r\n    let guests = [];\r\n    if (this.totalGuests > this.sharedPersons.length) {\r\n      const defaultGuestsCount = this.totalGuests - this.sharedPersons.length;\r\n      guests = [\r\n        ...this.sharedPersons,\r\n        ...Array(defaultGuestsCount).fill({\r\n          ...defaultGuest,\r\n          id_info: {\r\n            ...defaultGuest.id_info,\r\n            type: {\r\n              code: this.idTypes[0]?.CODE_NAME || '001',\r\n              description: this.idTypes[0]?.CODE_VALUE_EN || '',\r\n            },\r\n            number: '',\r\n          },\r\n        }),\r\n      ];\r\n    } else {\r\n      guests = [...this.sharedPersons];\r\n    }\r\n    guests = guests.map(g => ({ ...g, dob: new Date(g.dob).getFullYear() === 1900 ? null : g.dob }));\r\n    this.guests = guests.map(g => ({ ...g, dob: g.dob ? moment(new Date(g.dob)).format('DD/MM/YYYY') : '', country_id: g.country ? g.country.id : null }));\r\n  }\r\n\r\n  private updateGuestInfo(index: number, params: Partial<SharedPerson>) {\r\n    const tempGuests = [...this.guests];\r\n    let tempGuest = tempGuests[index];\r\n    tempGuest = { ...tempGuest, ...params };\r\n    tempGuests[index] = tempGuest;\r\n    this.guests = [...tempGuests];\r\n  }\r\n\r\n  private async saveGuests() {\r\n    try {\r\n      this.error = {};\r\n      this.autoValidate = true;\r\n      ZSharedPersons.parse(this.guests);\r\n      await this.bookingService.handleExposedRoomGuests({\r\n        booking_nbr: this.bookingNumber,\r\n        identifier: this.identifier,\r\n        guests: this.guests.map(g => ({ ...g, dob: g.dob ? moment(g.dob, 'DD/MM/YYYY').format('YYYY-MM-DD') : null })),\r\n      });\r\n      if (this.checkIn) {\r\n        await this.bookingService.handleExposedRoomInOut({\r\n          booking_nbr: this.bookingNumber,\r\n          room_identifier: this.identifier,\r\n          status: '001',\r\n        });\r\n      }\r\n      this.closeModal.emit(null);\r\n      this.resetBookingEvt.emit(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error instanceof ZodError) {\r\n        let errors = {};\r\n        error.issues.forEach(e => {\r\n          errors[e.path[1]] = true;\r\n        });\r\n        this.error = { ...errors };\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.isLoading) {\r\n      return (\r\n        <div class={'loading-container'}>\r\n          <ir-spinner></ir-spinner>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"h-100 d-flex flex-column\" style={{ minWidth: '300px' }}>\r\n        <ir-title class=\"px-1\" onCloseSideBar={() => this.closeModal.emit(null)} label={`Room ${this.roomName}`} displayContext=\"sidebar\"></ir-title>\r\n        <section class={'d-flex flex-column px-1 h-100 '}>\r\n          <div class=\"\">\r\n            <div class=\"guest-grid guests-labels\">\r\n              <p class=\"\">{locales.entries.Lcz_MainGuest}</p>\r\n              <p class=\"\"></p>\r\n              <p class=\" \">{locales.entries.Lcz_DOB}</p>\r\n              <p class=\"\">{locales.entries.Lcz_Nationality}</p>\r\n              <p class=\" \">{locales.entries.Lcz_Documents}</p>\r\n            </div>\r\n            <h5 class=\"main_guest_heading\">{locales.entries.Lcz_MainGuest}</h5>\r\n            {this.guests.map((guest, idx) => (\r\n              <Fragment>\r\n                {idx === 1 && (\r\n                  <div class=\"d-flex mx-0 px-0\">\r\n                    <h5 class=\"mx-0 px-0 sharing_persons_heading\">{locales.entries.Lcz_PersonsSharingRoom}</h5>\r\n                    <p class=\"mx-0 px-0 sharing_persons_label\">{locales.entries.Lcz_PersonsSharingRoom}</p>\r\n                  </div>\r\n                )}\r\n                <div key={idx} class=\"guest-grid\">\r\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\r\n                    <p class=\"guest_label\">First name</p>\r\n                    <ir-input-text\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`first_name_${idx}`}\r\n                      zod={ZSharedPerson.pick({ first_name: true })}\r\n                      error={!!this.error['first_name']}\r\n                      autoValidate={this.autoValidate}\r\n                      wrapKey=\"first_name\"\r\n                      placeholder=\"First name\"\r\n                      onTextChange={e => this.updateGuestInfo(idx, { first_name: e.detail })}\r\n                      value={guest.first_name}\r\n                      maxLength={40}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class={'m-0 p-0 d-flex align-items-center h-100'}>\r\n                    <p class=\"guest_label\">Last name</p>\r\n                    <ir-input-text\r\n                      maxLength={40}\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`last_name_${idx}`}\r\n                      zod={ZSharedPerson.pick({ last_name: true })}\r\n                      error={!!this.error['last_name']}\r\n                      autoValidate={this.autoValidate}\r\n                      wrapKey=\"last_name\"\r\n                      placeholder=\"Last name\"\r\n                      onTextChange={e => this.updateGuestInfo(idx, { last_name: e.detail })}\r\n                      value={guest.last_name}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class=\"flex-grow-0 m-0 p-0 h-100 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_DOB}</p>\r\n                    <ir-input-text\r\n                      class=\"flex-grow-1 h-100\"\r\n                      id={`dob_${idx}`}\r\n                      zod={ZSharedPerson.pick({ dob: true })}\r\n                      error={!!this.error['dob']}\r\n                      autoValidate={this.autoValidate}\r\n                      wrapKey=\"dob\"\r\n                      mask={dateMask}\r\n                      placeholder=\"\"\r\n                      onTextChange={e => {\r\n                        this.updateGuestInfo(idx, { dob: e.detail });\r\n                      }}\r\n                      value={guest.dob}\r\n                    ></ir-input-text>\r\n                  </div>\r\n                  <div class=\" m-0 p-0 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_Nationality}</p>\r\n                    <div class=\"mx-0 flex-grow-1  h-100\">\r\n                      <ir-country-picker\r\n                        class=\"h-100\"\r\n                        propertyCountry={this.propertyCountry}\r\n                        id={`{locales.entries.Lcz_Nationality}_${idx}`}\r\n                        error={!!this.error['country_id'] && !guest.country_id}\r\n                        country={this.countries?.find(c => c.id?.toString() === guest.country?.id?.toString())}\r\n                        onCountryChange={e => this.updateGuestInfo(idx, { country_id: e.detail?.id?.toString() ?? null, country: e.detail })}\r\n                        countries={this.countries}\r\n                      ></ir-country-picker>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"flex-grow-1 m-0 p-0 d-flex align-items-center\">\r\n                    <p class=\"guest_label\">{locales.entries.Lcz_Documents}</p>\r\n                    <div class={' d-flex m-0 flex-grow-1 h-100'}>\r\n                      <ir-select\r\n                        selectForcedStyles={{\r\n                          borderTopRightRadius: '0px',\r\n                          borderBottomRightRadius: '0px',\r\n                          borderRight: '0',\r\n                        }}\r\n                        selectStyles={'rounded-top-0 rounded-bottom-0'}\r\n                        onSelectChange={e => {\r\n                          this.updateGuestInfo(idx, {\r\n                            id_info: {\r\n                              ...this.guests[idx].id_info,\r\n                              type: {\r\n                                code: e.detail,\r\n                                description: '',\r\n                              },\r\n                            },\r\n                          });\r\n                        }}\r\n                        selectedValue={guest.id_info.type.code}\r\n                        LabelAvailable={false}\r\n                        showFirstOption={false}\r\n                        data={this.idTypes?.map(t => ({ text: t[`CODE_VALUE_${this.language.toUpperCase()}`] ?? t[`CODE_VALUE_EN`], value: t.CODE_NAME }))}\r\n                      ></ir-select>\r\n                      <ir-input-text\r\n                        autoValidate={this.autoValidate}\r\n                        maxLength={18}\r\n                        placeholder=\"12345\"\r\n                        class=\"flex-grow-1 guest_document\"\r\n                        type=\"text\"\r\n                        inputForcedStyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px' }}\r\n                        value={guest.id_info.number}\r\n                        zod={ZIdInfo.pick({ number: true })}\r\n                        error={!!this.error['number']}\r\n                        wrapKey=\"number\"\r\n                        inputStyles=\"form-control\"\r\n                        onTextChange={e =>\r\n                          this.updateGuestInfo(idx, {\r\n                            id_info: {\r\n                              ...this.guests[idx].id_info,\r\n                              number: e.detail,\r\n                            },\r\n                          })\r\n                        }\r\n                      ></ir-input-text>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n          <div class={'d-flex flex-column flex-sm-row mt-3 action-buttons '}>\r\n            <ir-button\r\n              onClick={() => this.closeModal.emit(null)}\r\n              btn_styles=\"justify-content-center\"\r\n              class={`mb-1 mb-sm-0 flex-fill mr-sm-1`}\r\n              icon=\"\"\r\n              text={locales.entries.Lcz_Cancel}\r\n              btn_color=\"secondary\"\r\n            ></ir-button>\r\n\r\n            <ir-button\r\n              btn_styles=\"justify-content-center align-items-center\"\r\n              class={'m-0 flex-fill text-center'}\r\n              icon=\"\"\r\n              isLoading={isRequestPending('/Handle_Exposed_Room_Guests')}\r\n              text={this.checkIn ? locales.entries.Lcz_CheckIn : locales.entries.Lcz_Save}\r\n              btn_color=\"primary\"\r\n              onClickHandler={this.saveGuests.bind(this)}\r\n            ></ir-button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}