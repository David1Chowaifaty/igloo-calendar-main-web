{"file":"calendar-data.js","mappings":";;AAYA,MAAM,YAAY,GAAkB;IAClC,qBAAqB,EAAE;QACrB,aAAa,EAAE,CAAC;QAChB,aAAa,EAAE,CAAC;QAChB,aAAa,EAAE,CAAC;KACjB;IACD,sBAAsB,EAAE,IAAI;IAC5B,qBAAqB,EAAE,EAAE;IACzB,QAAQ,EAAE,SAAS;IACnB,UAAU,EAAE,CAAC;IACb,mBAAmB,EAAE,SAAS;IAC9B,kBAAkB,EAAE,KAAK;IACzB,UAAU,EAAE,EAAE;IACd,SAAS,EAAE,EAAE;IACb,YAAY,EAAE,CAAC;IACf,QAAQ,EAAE,EAAE;IACZ,kBAAkB,EAAE,EAAE;IACtB,uBAAuB,EAAE,EAAE;IAC3B,cAAc,EAAE,SAAS;IACzB,eAAe,EAAE,IAAI;IACrB,UAAU,EAAE,CAAC;IACb,oBAAoB,EAAE,KAAK;IAC3B,KAAK,EAAE,EAAE;IACT,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,EAAE;IACT,aAAa,EAAE,EAAE;IACjB,OAAO,EAAE,SAAS;IAClB,cAAc,EAAE,KAAK;IACrB,WAAW,EAAE,EAAE;IACf,yBAAyB,EAAE,KAAK;CACjC,CAAC;MACW,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,qBAAqB,EAAE,GAAG,WAAW,CAAgB,YAAY,EAAE;SAClG,YAAY,CAAC,EAAU;;IACrC,IAAI,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE;QACjC,OAAO,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;KACtC;IACD,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAChE,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,CAAC,IAAI,CAAC,+BAA+B,EAAE,EAAE,CAAC,CAAC;QAClD,OAAO,KAAK,CAAC;KACd;IACD,MAAM,MAAM,GAAG,CAAA,MAAA,QAAQ,CAAC,aAAa,0CAAE,MAAM,KAAI,CAAC,CAAC;IACnD,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;IACvC,OAAO,MAAM,CAAC;AAChB;;;;","names":[],"sources":["src/stores/calendar-data.ts"],"sourcesContent":["import { CalendarDataDetails } from '@/models/calendarData';\r\nimport { createStore } from '@stencil/store';\r\n\r\ntype CalendarStore = CalendarDataDetails & {\r\n  roomHistory: Record<string, boolean>;\r\n  checkin_enabled: boolean;\r\n  checkin_checkout_hours: {\r\n    hour: number;\r\n    minute: number;\r\n    offset: number;\r\n  };\r\n};\r\nconst initialState: CalendarStore = {\r\n  adultChildConstraints: {\r\n    adult_max_nbr: 0,\r\n    child_max_nbr: 0,\r\n    child_max_age: 0,\r\n  },\r\n  checkin_checkout_hours: null,\r\n  allowedBookingSources: [],\r\n  currency: undefined,\r\n  endingDate: 0,\r\n  formattedLegendData: undefined,\r\n  is_vacation_rental: false,\r\n  legendData: [],\r\n  roomsInfo: [],\r\n  startingDate: 0,\r\n  language: '',\r\n  toBeAssignedEvents: [],\r\n  allowed_payment_methods: [],\r\n  pickup_service: undefined,\r\n  checkin_enabled: true,\r\n  max_nights: 0,\r\n  is_frontdesk_enabled: false,\r\n  taxes: [],\r\n  id: null,\r\n  name: '',\r\n  token: '',\r\n  tax_statement: '',\r\n  country: undefined,\r\n  is_pms_enabled: false,\r\n  roomHistory: {},\r\n  is_automatic_check_in_out: false,\r\n};\r\nexport const { state: calendar_data, onChange: onCalendarDatesChange } = createStore<CalendarStore>(initialState);\r\nexport function isSingleUnit(id: number) {\r\n  if (calendar_data.roomHistory[id]) {\r\n    return calendar_data.roomHistory[id];\r\n  }\r\n  const roomtype = calendar_data.roomsInfo.find(r => r.id === id);\r\n  if (!roomtype) {\r\n    console.warn(`Room type not found for ID: ${id}`);\r\n    return false;\r\n  }\r\n  const result = roomtype.physicalrooms?.length <= 1;\r\n  calendar_data.roomHistory[id] = result;\r\n  return result;\r\n}\r\nexport default calendar_data;\r\n"],"version":3}