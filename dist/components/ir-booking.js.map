{"file":"ir-booking.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,YAAY,GAAG,iCAAiC,CAAC;AACvD,wBAAe,YAAY;;MCQdA,WAAS;IALtB;;;QASW,oBAAe,GAAY,KAAK,CAAC;QAClC,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;KAuC7B;IArCC,iBAAiB;QACf,MAAM,eAAe,GAAG,kBAAkB,EAAE,CAAC;QAC7C,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC5C;KACF;IAEO,gBAAgB,CAAC,CAAc;QACrC,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,mBAAmB,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;KAC/E;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,eAAe;YACvB,QACE,EAAC,IAAI,QACH,gBAAU,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAa,CAChE,EACP;QACJ,QACE,EAAC,IAAI,QACH,0BACE,CAAC,EAAE,IAAI,CAAC,CAAC,EACT,QAAQ,QACR,UAAU,QACV,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,QACX,aAAa,QACb,QAAQ,EAAC,IAAI,EACb,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAC7B,aAAa,EAAE,IAAI,CAAC,aAAa,GACb,CACjB,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["IrBooking"],"sources":["src/components/ir-booking/ir-booking.css?tag=ir-booking&encapsulation=scoped","src/components/ir-booking/ir-booking.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { checkUserAuthState, manageAnchorSession } from '@/utils/utils';\nimport { Component, Host, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-booking',\n  styleUrl: 'ir-booking.css',\n  scoped: true,\n})\nexport class IrBooking {\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() bookingNumber: string;\n  @State() isAuthenticated: boolean = false;\n  private token = new Token();\n\n  componentWillLoad() {\n    const isAuthenticated = checkUserAuthState();\n    if (isAuthenticated) {\n      this.isAuthenticated = true;\n      this.token.setToken(isAuthenticated.token);\n    }\n  }\n\n  private handleAuthFinish(e: CustomEvent) {\n    const token = e.detail.token;\n    this.token.setToken(token);\n    this.isAuthenticated = true;\n    manageAnchorSession({ login: { method: 'direct', isLoggedIn: true, token } });\n  }\n  render() {\n    if (!this.isAuthenticated)\n      return (\n        <Host>\n          <ir-login onAuthFinish={this.handleAuthFinish.bind(this)}></ir-login>\n        </Host>\n      );\n    return (\n      <Host>\n        <ir-booking-details\n          p={this.p}\n          hasPrint\n          hasReceipt\n          propertyid={this.propertyid}\n          hasRoomEdit\n          hasRoomDelete\n          language=\"en\"\n          ticket={this.token.getToken()}\n          bookingNumber={this.bookingNumber}\n        ></ir-booking-details>\n      </Host>\n    );\n  }\n}\n"],"version":3}