{"file":"igl-bulk-stop-sale2.js","mappings":";;;;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,qTAAqT,CAAC;AACjV,8BAAe,kBAAkB;;ACDjC,MAAM,QAAQ,GAAG,qrBAAqrB,CAAC;AACvsB,8BAAe,QAAQ;;MCeV,eAAe;IAL5B;;;;;QAMU,mBAAc,GAAG,CAAC,CAAC;QAGlB,sBAAiB,GAAoB,EAAE,CAAC;QAGxC,UAAK,GAGR,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAExB,qBAAgB,GAAgB,IAAI,GAAG,CAC9C,KAAK,CAAC,CAAC,CAAC;aACL,IAAI,CAAC,IAAI,CAAC;aACV,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CACpB,CAAC;QAMM,aAAQ,GAAuE,EAAE,CAAC;QAGlF,YAAO,GAAGA,KAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACxC,mBAAc,GAAG,IAAI,cAAc,EAAE,CAAC;QAItC,gBAAW,GAAG,CAAC,CAAC,KAAK,CAC3B,CAAC,CAAC,MAAM,CAAC;YACP,IAAI,EAAE,CAAC;iBACJ,GAAG,EAAE;iBACL,MAAM,CAAC,CAAC,GAAG,KAAoBA,KAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACpD,OAAO,EAAE,gDAAgD;aAC1D,CAAC;iBACD,SAAS,CAAC,CAAC,GAAW,KAAK,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACvD,EAAE,EAAE,CAAC;iBACF,GAAG,EAAE;iBACL,MAAM,CAAC,CAAC,GAAG,KAAoBA,KAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACpD,OAAO,EAAE,8CAA8C;aACxD,CAAC;iBACD,SAAS,CAAC,CAAC,GAAW,KAAK,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACxD,CAAC,CACH,CAAC;KA2bH;IA7cS,WAAW,CAAC,OAAe;QACjC,OAAOA,KAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;KAC5C;IAuBD,gBAAgB;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAyB,CAAC;KAC7E;IAED,oBAAoB;QAClB,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;KACrC;;;;;;;;;;IAYO,MAAM,aAAa;QACzB,MAAM,uBAAuB,GAAG,OAAO;YACrC,MAAM,CAAC,GAAG,EAAE,CAAC;YACb,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC5B,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC1B,MAAM,OAAO,GAAGA,KAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACpF,OAAO,OAAO,KAAK,OAAO,EAAE;oBAC1B,MAAM,OAAO,GAAGA,KAAM,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBAClF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE;wBACzD,OAAO,GAAG,OAAO,CAAC;wBAClB,SAAS;qBACV;oBACD,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,iBAAiB,EAAE;wBACjD,CAAC,CAAC,IAAI,CAAC;4BACL,YAAY,EAAE,YAAY,CAAC,EAAE;4BAC7B,KAAK,EAAE,OAAO;yBACf,CAAC,CAAC;qBACJ;oBACD,OAAO,GAAG,OAAO,CAAC;iBACnB;aACF;YACD,OAAO,CAAC,CAAC;SACV,CAAC;QACF,MAAM,mBAAmB,GAAG,CAC1B,QAMG;YAEH,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;;YAGjE,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3G,MAAM,eAAe,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAe,CAAC;YAErD,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC9B,KAAK,MAAM,WAAW,IAAI,OAAO,CAAC,YAAY,EAAE;oBAC9C,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,WAAW,CAAC;oBAC5C,MAAM,EAAE,QAAQ,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAErD,IAAI,CAAC,QAAQ;wBAAE,SAAS;oBAExB,MAAM,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAC5C,IAAI,QAAQ,KAAK,SAAS,EAAE;wBAC1B,OAAO,CAAC,IAAI,CAAC,sBAAsB,KAAK,EAAE,CAAC,CAAC;wBAC5C,SAAS;qBACV;oBAED,MAAM,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1C,MAAM,OAAO,GAAG,GAAG,YAAY,IAAI,KAAK,EAAE,CAAC;oBAC3C,IAAI,EAAE,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC5C,IAAI,CAAC,EAAE,EAAE;wBACP,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,CAAC;wBAC/C,IAAI,CAAC,EAAE,EAAE;4BACP,OAAO,CAAC,IAAI,CAAC,2BAA2B,YAAY,EAAE,CAAC,CAAC;4BACxD,SAAS;yBACV;wBACD,qBAAqB,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;qBACxC;oBAED,MAAM,gBAAgB,GAAI,EAAE,CAAC,iBAAyB,CAAC,GAAG,KAAK,CAAC,CAAC;oBACjE,KAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,aAAa,EAAE;wBACzC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC;wBAClC,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE;4BACzB,QAAQ,EAAE,OAAO,CAAC,SAAS,GAAG,IAAI,GAAG,gBAAgB;4BACrD,MAAM,EAAE,OAAO,CAAC,SAAS,GAAG,WAAW,GAAG,gBAAgB,GAAG,WAAW,GAAG,WAAW;yBACvF,CAAC,CAAC;qBACJ;iBACF;aACF;YACD,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,GAAG,CAAC,iBAAiB,CAAC,CAAC;SAC/D,CAAC;QACF,IAAI;YACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAC1E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;gBACtB,OAAO;aACR;YACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAC9E,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;gBACzB,OAAO;aACR;YACD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;YACzE,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;YAC7E,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC5B,MAAM,OAAO,GAAG;oBACd,SAAS,EAAE,WAAW;oBACtB,YAAY,EAAE,iBAAiB;oBAC/B,WAAW,EAAE,IAAI,CAAC,WAAW;iBAC9B,CAAC;gBACF,MAAM,IAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;gBACpE,mBAAmB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAChC;iBAAM;gBACL,MAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACzC,MAAM,OAAO,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC1E,QAAQ,CAAC,IAAI,CAAC;wBACZ,SAAS,EAAE,IAAI,CAAC,MAAM,KAAK,QAAQ;wBACnC,YAAY,EAAE,OAAO;wBACrB,WAAW,EAAE,IAAI,CAAC,WAAW;qBAC9B,CAAC,CAAC;iBACJ;gBACD,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9F,mBAAmB,CAAC,QAAQ,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,gCAAgC;gBACvD,WAAW,EAAE,EAAE;aAChB,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACxB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,KAAK,YAAY,QAAQ,EAAE;gBAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;gBACxE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;aACvB;SACF;gBAAS;YACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;IAEO,QAAQ;QACd,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;KACpD;IAEO,UAAU;QAChB,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QACpC,IAAI,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;KACrD;IAEO,gBAAgB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAuD;;;QAEhG,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,KAAK,CAAC,KAAK,CAAC,mCAAQ,KAAK,CAAC,KAAK,CAAC,KAAE,CAAC,GAAG,GAAG,IAAI,GAAE,CAAC;;QAGhD,IAAI,GAAG,KAAK,MAAM,KAAI,MAAA,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,0CAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA,EAAE;YAC9D,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;SACxB;;QAGD,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,MAAM,OAAO,GAAG,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,IAAI,CAAC;YAC/B,IAAI,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;gBAClD,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;aACrC;SACF;;QAGD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;QAGnB,UAAU,CAAC;;YACT,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,MAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,0CAAE,EAAE,CAAC,cAAc,EAAE,CAAC;aAC3C;iBAAM;gBACL,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;gBACvD,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE;oBACjB,MAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,0CAAE,IAAI,CAAC,cAAc,EAAE,CAAC;iBAChD;aACF;SACF,EAAE,GAAG,CAAC,CAAC;KACT;IAEO,UAAU;QAChB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;YACtB,OAAO;SACR;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QACvD,UAAU,CAAC;;YACT,MAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,0CAAE,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;SAClG,EAAE,GAAG,CAAC,CAAC;KACT;IAED,MAAM;QACJ,QACE,6DACE,KAAK,EAAE,sBAAsB,EAC7B,QAAQ,EAAE,CAAC;gBACT,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB,IAiBD,4DAAK,KAAK,EAAC,iBAAiB,IAC1B,4DAAK,KAAK,EAAC,gCAAgC,IACzC,gIAII,CACA,EACN,8DACG,IAAI,CAAC,MAAM,KAAK,OAAO,KACtB,0DAAG,KAAK,EAAE,oCAAoC,EAAE,KAAK,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,IACjF,aAAa,CAAC,kBAAkB,GAAG,OAAO,CAAC,OAAO,CAAC,uBAAuB,GAAG,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAChH,CACL,EACD,8DAAO,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,IACxC,gEACE,6DACE,2DAAI,KAAK,EAAC,SAAS,aAAY,EAC/B,2DAAI,KAAK,EAAC,SAAS,gBAAe,CAC/B,CACC,EACR,gEACG,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACvC,MAAM,SAAS,GAAG,CAAC,KAAK,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;YACzE,QACE,UAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,IAClB,UAAI,KAAK,EAAE,cAAc,SAAS,EAAE,IAClC,WAAK,KAAK,EAAE,4BAA4B,IACtC,iBACE,cAAc,EAAE,KAAK,EACrB,WAAW,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK,EAC/C,IAAI,EAAE;oBACJ,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACjD,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;iBACxD,EACD,cAAc,EAAE,CAAC;oBACf,MAAM,MAAM,GAAG,CAAC,CAAC,MAAuC,CAAC;;oBAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;;oBAE9E,IAAI,MAAM,EAAE;wBACV,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;qBAChD;oBACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBAC/B,GACU,CACT,CACH,EACL,UAAI,KAAK,EAAE,kBAAkB,SAAS,EAAE,IAAG,QAAQ,CAAC,IAAI,CAAM,CAC3D,EACL;SACH,CAAC,CACI,CACF,CACJ,EACN,0DAAG,KAAK,EAAC,2BAA2B,oBAAkB,EACrD,IAAI,CAAC,MAAM,KAAK,UAAU,IAAI,0DAAG,KAAK,EAAE,uCAAuC,qCAAoC,EACpH,4EACE,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,EACvC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAC3C,eAAe,EAAE,CAAC;gBAChB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,CAAC,CAAC,wBAAwB,EAAE,CAAC;gBAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;aAC3C,GACoB,EAEvB,8DAAO,KAAK,EAAC,MAAM,EAAC,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,IACtD,gEACE,6DACE,2DAAI,KAAK,EAAC,WAAW,IAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAM,EACrD,2DAAI,KAAK,EAAC,WAAW,IAAE,OAAO,CAAC,OAAO,CAAC,eAAe,CAAM,EAC5D,6DACG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,KACxC,kEACE,OAAO,EAAC,MAAM,EACd,SAAS,EAAC,MAAM,EAChB,cAAc,EAAE;gBACd,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB,GACU,CACd,CACE,CACF,CACC,EACR,gEACG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;;YACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aACvB;YAED,MAAM,eAAe,GAAG,CAAC,GAAG,CAAC,GAAG,MAAA,MAAA,MAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,0CAAE,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,0CAAE,MAAM,CAAC,YAAY,CAAC,mCAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAClI,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAA,MAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,0CAAE,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,0CAAE,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3H,QACE,UAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,IAClB,UAAI,KAAK,EAAC,WAAW,IACnB,sBACE,GAAG,EAAE,EAAE;oBACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;iBAC5B,EACD,oBAAoB,QACpB,OAAO,EAAE,eAAe,iBACZ,qBAAqB,EACjC,IAAI,EAAE,MAAA,CAAC,CAAC,IAAI,0CAAE,MAAM,CAAC,YAAY,CAAC,EAClC,aAAa,EAAE,IAAI,kBACL,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EACxD,aAAa,EAAE,GAAG;oBAChB,GAAG,CAAC,wBAAwB,EAAE,CAAC;oBAC/B,GAAG,CAAC,eAAe,EAAE,CAAC;oBACtB,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;iBAC1E,EACD,iBAAiB,EAAE,CAAC;;oBAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;oBAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,KAAK,CAAC,EAAE;wBACX,OAAO;qBACR;oBACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAE1D,IAAI,EAAC,MAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,0CAAE,IAAI,CAAA,EAAE;wBAC5B,MAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,0CAAE,IAAI,CAAC,cAAc,EAAE,CAAC;wBAC5C,OAAO;qBACR;oBACD,IAAI,EAAC,MAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,0CAAE,EAAE,CAAA,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;qBAC1C;iBACF,IAED,aACE,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,EACpD,KAAK,EAAE,yBAAyB,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,eAAe,GAAG,EAAE,cAAc,EACrG,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GACjB,CACM,CACd,EACL,UAAI,KAAK,EAAC,WAAW,IACnB,sBACE,oBAAoB,QACpB,GAAG,EAAE,EAAE;oBACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;iBAC1B,iBACW,qBAAqB,EACjC,IAAI,EAAE,MAAA,CAAC,CAAC,EAAE,0CAAE,MAAM,CAAC,YAAY,CAAC,EAChC,aAAa,EAAE,IAAI,EACnB,OAAO,EAAE,aAAa,kBACR,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EACtD,aAAa,EAAE,GAAG;oBAChB,GAAG,CAAC,wBAAwB,EAAE,CAAC;oBAC/B,GAAG,CAAC,eAAe,EAAE,CAAC;oBACtB,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;iBACxE,EACD,iBAAiB,EAAE,CAAC;;oBAClB,CAAC,CAAC,wBAAwB,EAAE,CAAC;oBAC7B,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBAE1D,IAAI,EAAC,MAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,0CAAE,IAAI,CAAA,EAAE;wBAC5B,MAAA,MAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,0CAAE,IAAI,0CAAE,cAAc,EAAE,CAAC;wBAC7C,OAAO;qBACR;oBACD,IAAI,EAAC,MAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,0CAAE,EAAE,CAAA,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;qBAC1C;iBACF,IAED,aACE,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,EAChD,KAAK,EAAE;4BACL,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,eAAe,GAAG,EAAE;sCAC7C,EACZ,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GACjB,CACM,CACd,EACJ,CAAC,GAAG,CAAC,KACJ,UAAI,KAAK,EAAC,MAAM,IACd,iBACE,OAAO,EAAC,MAAM,EACd,SAAS,EAAC,OAAO,EACjB,cAAc,EAAE;oBACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;iBACnD,GACU,CACV,CACN,CACE,EACL;SACH,CAAC,CACI,CACF,CACJ,EACN,4DAAK,KAAK,EAAE,cAAc,IACxB,kEAAW,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAC,WAAW,EAAC,KAAK,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAc,EACrJ,kEAAW,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,WAAW,GAAa,CAClH,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["moment"],"sources":["src/components/igloo-calendar/igl-bulk-operations/igl-bulk-stop-sale/igl-bulk-stop-sale.css?tag=igl-bulk-stop-sale&encapsulation=scoped","src/common/sheet.css?tag=igl-bulk-stop-sale&encapsulation=scoped","src/components/igloo-calendar/igl-bulk-operations/igl-bulk-stop-sale/igl-bulk-stop-sale.tsx"],"sourcesContent":[":host {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 0%;\n  height: 100%;\n}\n.bulk-sheet-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-height: 0;\n  gap: 1rem;\n}\n.animated-container {\n  transition: all 0.5s ease;\n}\n.days-checkbox {\n  gap: 0.5rem;\n}\n",":host {\n  height: 100%;\n}\n.sheet-container {\n  display: flex !important;\n  flex-direction: column !important;\n  background: white;\n  height: 100vh;\n  gap: 1rem;\n  z-index: 1000;\n}\n.sheet-container {\n  height: -webkit-fill-available;\n  height: 100vh;\n  height: 100dvh;\n}\n\n/* @supports (height: 100svh) {\n  .sheet-container {\n    height: 100svh;\n  }\n} */\n.sheet-footer {\n  position: sticky;\n  bottom: 0;\n  z-index: 20;\n  background: white;\n  border-top: 1px solid #e4e5ec;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n.sheet-header {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: white;\n}\n.sheet-body {\n  flex: 1 1 0%;\n}\n/* @media (max-width: 767px) {\n  .sheet-footer {\n    bottom: env(safe-area-inset-bottom);\n  }\n} */\n@media (min-width: 768px) {\n  .sheet-footer {\n    flex-direction: row;\n    align-items: center;\n  }\n}\n","import { BookingService } from '@/services/booking.service';\nimport calendar_data from '@/stores/calendar-data';\nimport { ReloadInterceptor } from '@/utils/ReloadInterceptor';\nimport { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\nimport moment, { Moment } from 'moment';\nimport { z, ZodError } from 'zod';\nimport { IToast } from '@components/ui/ir-toast/toast';\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nexport type SelectedRooms = { id: string | number; result: 'open' | 'closed' };\n\n@Component({\n  tag: 'igl-bulk-stop-sale',\n  styleUrls: ['igl-bulk-stop-sale.css', '../../../../common/sheet.css'],\n  scoped: true,\n})\nexport class IglBulkStopSale {\n  @Prop() maxDatesLength = 8;\n  @Prop() property_id: number;\n\n  @State() selectedRoomTypes: SelectedRooms[] = [];\n  @State() errors: 'dates' | 'rooms' | 'weekdays';\n  @State() isLoading: boolean;\n  @State() dates: {\n    from: Moment | null;\n    to: Moment | null;\n  }[] = [{ from: null, to: null }];\n\n  @State() selectedWeekdays: Set<number> = new Set(\n    Array(7)\n      .fill(null)\n      .map((_, i) => i),\n  );\n\n  @Event() closeModal: EventEmitter<null>;\n  @Event() toast: EventEmitter<IToast>;\n\n  private sidebar: HTMLIrSidebarElement;\n  private dateRefs: { from?: HTMLIrDatePickerElement; to?: HTMLIrDatePickerElement }[] = [];\n  // private allRoomTypes: SelectedRooms[] = [];\n  private reloadInterceptor: ReloadInterceptor;\n  private minDate = moment().format('YYYY-MM-DD');\n  private bookingService = new BookingService();\n  private getDayIndex(dateStr: string): number {\n    return moment(dateStr, 'YYYY-MM-DD').day();\n  }\n  private datesSchema = z.array(\n    z.object({\n      from: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'from' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n      to: z\n        .any()\n        .refine((val): val is Moment => moment.isMoment(val), {\n          message: \"Invalid 'to' date; expected a Moment object.\",\n        })\n        .transform((val: Moment) => val.format('YYYY-MM-DD')),\n    }),\n  );\n\n  //sections\n  private unitSections: HTMLTableElement;\n  private weekdaysSections: HTMLIrWeekdaySelectorElement;\n  private datesSections: HTMLTableElement;\n\n  componentDidLoad() {\n    this.reloadInterceptor = new ReloadInterceptor({ autoActivate: false });\n    this.sidebar = document.querySelector('ir-sidebar') as HTMLIrSidebarElement;\n  }\n\n  disconnectedCallback() {\n    this.reloadInterceptor.deactivate();\n  }\n\n  // @Listen('beforeSidebarClose', { target: 'body' })\n  // handleBeforeSidebarClose(e: CustomEvent) {\n  //   e.stopImmediatePropagation();\n  //   e.stopPropagation();\n  //   if (window.confirm('Do you really want to proceed?')) {\n  //     this.deactivate();\n  //     this.sidebar.toggleSidebar();\n  //   }\n  // }\n\n  private async addBlockDates() {\n    const generatePeriodsToModify = periods => {\n      const p = [];\n      for (const period of periods) {\n        let current = period.from;\n        const lastDay = moment(period.to, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n        while (current !== lastDay) {\n          const nextDay = moment(current, 'YYYY-MM-DD').add(1, 'days').format('YYYY-MM-DD');\n          if (!this.selectedWeekdays.has(this.getDayIndex(current))) {\n            current = nextDay;\n            continue;\n          }\n          for (const selectedRoom of this.selectedRoomTypes) {\n            p.push({\n              room_type_id: selectedRoom.id,\n              night: current,\n            });\n          }\n          current = nextDay;\n        }\n      }\n      return p;\n    };\n    const updateCalendarCells = (\n      payloads: {\n        is_closed: boolean;\n        restrictions: {\n          night: string;\n          room_type_id: number;\n        }[];\n      }[],\n    ) => {\n      const prevDisabledCells = new Map(calendar_dates.disabled_cells);\n\n      // Caches\n      const roomsInfoById = new Map(calendar_data.roomsInfo.map((rt, i) => [rt.id, { roomType: rt, index: i }]));\n      const dayIndexByValue = new Map(calendar_dates.days.map((day, i) => [day.value, i]));\n      const rateByRoomTypeAndDate = new Map<string, any>();\n\n      for (const payload of payloads) {\n        for (const restriction of payload.restrictions) {\n          const { night, room_type_id } = restriction;\n          const { roomType } = roomsInfoById.get(room_type_id);\n\n          if (!roomType) continue;\n\n          const dayIndex = dayIndexByValue.get(night);\n          if (dayIndex === undefined) {\n            console.warn(`Couldn't find date ${night}`);\n            continue;\n          }\n\n          const day = calendar_dates.days[dayIndex];\n          const rateKey = `${room_type_id}_${night}`;\n          let rp = rateByRoomTypeAndDate.get(rateKey);\n          if (!rp) {\n            rp = day.rate.find(r => r.id === room_type_id);\n            if (!rp) {\n              console.warn(`Couldn't find room type ${room_type_id}`);\n              continue;\n            }\n            rateByRoomTypeAndDate.set(rateKey, rp);\n          }\n\n          const haveAvailability = (rp.exposed_inventory as any).rts === 0;\n          for (const room of roomType.physicalrooms) {\n            const key = `${room.id}_${night}`;\n            prevDisabledCells.set(key, {\n              disabled: payload.is_closed ? true : haveAvailability,\n              reason: payload.is_closed ? 'stop_sale' : haveAvailability ? 'inventory' : 'stop_sale',\n            });\n          }\n        }\n      }\n      calendar_dates['disabled_cells'] = new Map(prevDisabledCells);\n    };\n    try {\n      this.errors = null;\n      this.isLoading = true;\n      const periods = this.datesSchema.parse(this.dates);\n      if (this.selectedRoomTypes.length === 0) {\n        this.unitSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'rooms';\n        return;\n      }\n      if (this.selectedWeekdays.size === 0) {\n        this.weekdaysSections.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        this.errors = 'weekdays';\n        return;\n      }\n      this.activate();\n      const periods_to_modify = generatePeriodsToModify(periods);\n      const isAllOpen = this.selectedRoomTypes.every(e => e.result === 'open');\n      const isAllClosed = this.selectedRoomTypes.every(e => e.result === 'closed');\n      if (isAllClosed || isAllOpen) {\n        const payload = {\n          is_closed: isAllClosed,\n          restrictions: periods_to_modify,\n          property_id: this.property_id,\n        };\n        await this.bookingService.setExposedRestrictionPerRoomType(payload);\n        updateCalendarCells([payload]);\n      } else {\n        const payloads = [];\n        for (const room of this.selectedRoomTypes) {\n          const periods = periods_to_modify.filter(f => f.room_type_id === room.id);\n          payloads.push({\n            is_closed: room.result === 'closed',\n            restrictions: periods,\n            property_id: this.property_id,\n          });\n        }\n        await Promise.all(payloads.map(p => this.bookingService.setExposedRestrictionPerRoomType(p)));\n        updateCalendarCells(payloads);\n      }\n      this.deactivate();\n      this.toast.emit({\n        type: 'success',\n        title: locales.entries.Lcz_RequestSubmittedSuccessfully,\n        description: '',\n      });\n      this.isLoading = false;\n      this.closeModal.emit();\n    } catch (error) {\n      console.log(error);\n      if (error instanceof ZodError) {\n        this.datesSections.scrollIntoView({ behavior: 'smooth', block: 'end' });\n        this.errors = 'dates';\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private activate() {\n    this.reloadInterceptor.activate();\n    if (this.sidebar) this.sidebar.preventClose = true;\n  }\n\n  private deactivate() {\n    this.reloadInterceptor.deactivate();\n    if (this.sidebar) this.sidebar.preventClose = false;\n  }\n\n  private handleDateChange({ index, date, key }: { index: number; date: Moment; key: 'from' | 'to' }) {\n    // 1) clone and set the new date\n    const dates = [...this.dates];\n    dates[index] = { ...dates[index], [key]: date };\n\n    // 1a) if they just changed the “from”, always clear that row’s “to”\n    if (key === 'from' && dates[index].to?.isBefore(date, 'dates')) {\n      dates[index].to = null;\n    }\n\n    // 2) clear any subsequent rows whose “from” is on or before the changed date\n    for (let i = index + 1; i < dates.length; i++) {\n      const rowFrom = dates[i]?.from;\n      if (rowFrom && rowFrom.isSameOrBefore(date, 'day')) {\n        dates[i] = { from: null, to: null };\n      }\n    }\n\n    // 3) commit\n    this.dates = dates;\n\n    // 4) open the appropriate picker\n    setTimeout(() => {\n      if (key === 'from') {\n        this.dateRefs[index]?.to.openDatePicker();\n      } else {\n        const nextFrom = dates.findIndex(d => d.from === null);\n        if (nextFrom > -1) {\n          this.dateRefs[nextFrom]?.from.openDatePicker();\n        }\n      }\n    }, 100);\n  }\n\n  private addDateRow() {\n    const last_dates = this.dates[this.dates.length - 1];\n    if (!last_dates.from || !last_dates.to) {\n      this.errors = 'dates';\n      return;\n    }\n    this.errors = null;\n    this.dates = [...this.dates, { from: null, to: null }];\n    setTimeout(() => {\n      this.dateRefs[this.dates.length - 1].to?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }, 100);\n  }\n\n  render() {\n    return (\n      <form\n        class={'bulk-sheet-container'}\n        onSubmit={e => {\n          e.preventDefault();\n          this.addBlockDates();\n        }}\n      >\n        {/* <div class=\"sheet-header d-flex align-items-center\">\n          <ir-title\n            onCloseSideBar={e => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              if (this.isLoading) {\n                return;\n              }\n              this.closeModal.emit(null);\n            }}\n            class=\"px-1 mb-0\"\n            label={locales.entries.Lcz_BulkStopOpenSale}\n            displayContext=\"sidebar\"\n          ></ir-title>\n        </div> */}\n        <div class=\"sheet-body px-1\">\n          <div class=\"text-muted text-left py-0 my-0\">\n            <p>\n              {/* {locales.entries.Lcz_SelectAffectedUnits} */}\n              Select the types to stop or open sales for all related rate plans\n              {/* <span class=\"text-warning\">{locales.entries.Lcz_OperationRequiresSeveralMinutes}</span> */}\n            </p>\n          </div>\n          <div>\n            {this.errors === 'rooms' && (\n              <p class={'text-danger text-left smaller p-0 '} style={{ 'margin-bottom': '0.5rem' }}>\n                {calendar_data.is_vacation_rental ? locales.entries.Lcz_PlzSelectOneListing : locales.entries.Lcz_PlzSelectOneUnit}\n              </p>\n            )}\n            <table ref={el => (this.unitSections = el)}>\n              <thead>\n                <tr>\n                  <th class=\"sr-only\">choice</th>\n                  <th class=\"sr-only\">room type</th>\n                </tr>\n              </thead>\n              <tbody>\n                {calendar_data.roomsInfo.map((roomType, i) => {\n                  const row_style = i === calendar_data.roomsInfo.length - 1 ? '' : 'pb-1';\n                  return (\n                    <tr key={roomType.id}>\n                      <td class={`choice-row ${row_style}`}>\n                        <div class={'d-flex justify-content-end'}>\n                          <ir-select\n                            LabelAvailable={false}\n                            firstOption={`${locales.entries.Lcz_Select}...`}\n                            data={[\n                              { value: 'open', text: locales.entries.Lcz_Open },\n                              { value: 'closed', text: locales.entries.Lcz_StopSale },\n                            ]}\n                            onSelectChange={e => {\n                              const choice = e.detail as 'open' | 'closed' | undefined;\n                              // drop any existing entry for this roomType\n                              const rest = this.selectedRoomTypes.filter(entry => entry.id !== roomType.id);\n                              // if they actually picked something, append it\n                              if (choice) {\n                                rest.push({ id: roomType.id, result: choice });\n                              }\n                              this.selectedRoomTypes = rest;\n                            }}\n                          ></ir-select>\n                        </div>\n                      </td>\n                      <td class={`pl-1 text-left ${row_style}`}>{roomType.name}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <p class=\"text-left mt-2 text-muted\">Included days</p>\n          {this.errors === 'weekdays' && <p class={'text-danger text-left smaller m-0 p-0'}>Please select at least one day</p>}\n          <ir-weekday-selector\n            ref={el => (this.weekdaysSections = el)}\n            weekdays={Array.from(this.selectedWeekdays)}\n            onWeekdayChange={e => {\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n              this.selectedWeekdays = new Set(e.detail);\n            }}\n          ></ir-weekday-selector>\n          {/* Dates */}\n          <table class=\"mt-1\" ref={el => (this.datesSections = el)}>\n            <thead>\n              <tr>\n                <th class=\"text-left\">{locales.entries.Lcz_From}</th>\n                <th class=\"text-left\">{locales.entries.Lcz_ToExclusive}</th>\n                <td>\n                  {this.dates.length !== this.maxDatesLength && (\n                    <ir-button\n                      variant=\"icon\"\n                      icon_name=\"plus\"\n                      onClickHandler={() => {\n                        this.addDateRow();\n                      }}\n                    ></ir-button>\n                  )}\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {this.dates.map((d, i) => {\n                if (!this.dateRefs[i]) {\n                  this.dateRefs[i] = {};\n                }\n\n                const fromDateMinDate = i > 0 ? this.dates[i - 1]?.to.clone().add(1, 'days')?.format('YYYY-MM-DD') ?? this.minDate : this.minDate;\n                const toDateMinDate = this.dates[i].from ? this.dates[i]?.from.clone().add(1, 'days')?.format('YYYY-MM-DD') : this.minDate;\n                return (\n                  <tr key={`date_${i}`}>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        ref={el => {\n                          this.dateRefs[i].from = el;\n                        }}\n                        forceDestroyOnUpdate\n                        minDate={fromDateMinDate}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.from?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        aria-invalid={String(this.errors === 'dates' && !d.from)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'from' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          if (i === 0) {\n                            return;\n                          }\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.from ? d.from.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm ${this.errors === 'dates' && !d.to ? 'border-danger' : ''} text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    <td class=\"pr-1 pb-1\">\n                      <ir-date-picker\n                        forceDestroyOnUpdate\n                        ref={el => {\n                          this.dateRefs[i].to = el;\n                        }}\n                        data-testid=\"pickup_arrival_date\"\n                        date={d.to?.format('YYYY-MM-DD')}\n                        emitEmptyDate={true}\n                        minDate={toDateMinDate}\n                        aria-invalid={String(this.errors === 'dates' && !d.to)}\n                        onDateChanged={evt => {\n                          evt.stopImmediatePropagation();\n                          evt.stopPropagation();\n                          this.handleDateChange({ index: i, date: evt.detail.start, key: 'to' });\n                        }}\n                        onDatePickerFocus={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          const index = this.dates.findIndex(d => !d.from || !d.to);\n\n                          if (!this.dates[index]?.from) {\n                            this.dateRefs[index]?.from?.openDatePicker();\n                            return;\n                          }\n                          if (!this.dates[index]?.to) {\n                            this.dateRefs[index].to.openDatePicker();\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"text\"\n                          slot=\"trigger\"\n                          value={d.to ? d.to.format('MMM DD, YYYY') : null}\n                          class={`form-control input-sm \n                          ${this.errors === 'dates' && !d.to ? 'border-danger' : ''}\n                          text-center`}\n                          style={{ width: '100%' }}\n                        ></input>\n                      </ir-date-picker>\n                    </td>\n                    {i > 0 && (\n                      <td class=\"pb-1\">\n                        <ir-button\n                          variant=\"icon\"\n                          icon_name=\"minus\"\n                          onClickHandler={() => {\n                            this.dates = this.dates.filter((_, j) => j !== i);\n                          }}\n                        ></ir-button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div class={'sheet-footer'}>\n          <ir-button text={locales.entries.Lcz_Cancel} btn_color=\"secondary\" class={'flex-fill'} onClickHandler={() => this.closeModal.emit(null)}></ir-button>\n          <ir-button isLoading={this.isLoading} text={locales.entries.Lcz_Save} btn_type=\"submit\" class=\"flex-fill\"></ir-button>\n        </div>\n      </form>\n    );\n  }\n}\n"],"version":3}