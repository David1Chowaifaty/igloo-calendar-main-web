{"file":"ir-tasks-table2.js","mappings":"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","names":["moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/common/table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.selected-row {\r\n  background-color: rgba(0, 0, 255, 0.1);\r\n}\r\n.selected-row:hover {\r\n  background-color: rgba(0, 0, 255, 0.15);\r\n}\r\n.header-content {\r\n  height: 100%;\r\n}\r\n\r\n.highlighted-unit {\r\n  background: #000;\r\n  color: white;\r\n  padding: 0.2rem 0.3rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n.table-container {\r\n  max-height: 80vh;\r\n}\r\n/* td,\r\nth {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  max-width: max-content !important;\r\n \r\n  text-align: start;\r\n}\r\ntr {\r\n  border-bottom: 1px solid #e0e0e0;\r\n} */\r\n.task-table-row td {\r\n  background: white !important;\r\n}\r\n.task-table-row:hover td {\r\n  background: #e2e6ea3f !important;\r\n}\r\n","/* Base styles */\r\n.ir-table-row td {\r\n  padding: 0.5rem 1rem !important;\r\n  text-align: left;\r\n  z-index: 2;\r\n  background-color: white;\r\n  white-space: nowrap;\r\n  width: max-content;\r\n  max-width: max-content;\r\n}\r\n.ir-table-row td:last-child {\r\n  width: 100%;\r\n}\r\n/* .ir-table-row td:first-child,\r\n.table thead th:first-child {\r\n  position: sticky;\r\n  left: var(--ir-table-sticky-padding,-1rem);\r\n} */\r\n\r\n.table td {\r\n  border-top: 0;\r\n  border-bottom: 1px solid #e3ebf3;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n/* .table thead th:first-child {\r\n  border-top-left-radius: 0.5rem;\r\n  }\r\n  .table thead th:last-child {\r\n    border-top-right-radius: 0.5rem;\r\n    } */\r\n.table thead th {\r\n  border: none !important;\r\n  background: #ececec;\r\n  color: #374151;\r\n  padding: 0.5rem 1rem !important;\r\n  text-align: left;\r\n}\r\n\r\n/* Selected Rows Styles */\r\n\r\n.selected td {\r\n  background: #e3f3fa !important;\r\n}\r\n.selected td {\r\n  color: var(--gray-dark) !important;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n\r\n/* Sorting styles */\r\n.sortable {\r\n  text-transform: capitalize;\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n.sortable:hover {\r\n  color: #212529;\r\n  background-color: #e2e8f0 !important;\r\n  border-color: #dae0e5;\r\n  cursor: pointer;\r\n}\r\n.sortable:active {\r\n  color: #212529;\r\n  background-color: #e2e8f0;\r\n  border-color: #d3d9df;\r\n}\r\n.sortable svg {\r\n  color: var(--blue);\r\n}\r\n/* .action-row {\r\n  position: sticky;\r\n  right:var(--ir-table-sticky-padding,-1rem);\r\n} */\r\n","import { Component, Event, EventEmitter, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Task } from '@/models/housekeeping';\r\nimport moment from 'moment';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport locales from '@/stores/locales.store';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-table',\r\n  styleUrls: ['ir-tasks-table.css', '../../../../common/table.css'],\r\n  scoped: true,\r\n})\r\nexport class IrTasksTable {\r\n  @Prop({ mutable: true }) tasks: Task[] = [];\r\n\r\n  /**\r\n   * Tracks which task IDs are currently selected via checkboxes.\r\n   */\r\n  @State() selectedIds: Task['id'][] = [];\r\n\r\n  /**\r\n   * Controls whether the \"Confirm Clean\" modal is shown.\r\n   */\r\n  @State() showConfirmModal: boolean = false;\r\n\r\n  /**\r\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\r\n   */\r\n  @State() sortKey: string = 'date';\r\n\r\n  /**\r\n   * The sort direction: ASC or DESC.\r\n   */\r\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\r\n  @State() checkableTasks: Task[] = [];\r\n\r\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\r\n  @Event({ bubbles: true, composed: true }) sortingChanged: EventEmitter<{ field: string; direction: 'ASC' | 'DESC' }>;\r\n\r\n  componentWillLoad() {\r\n    this.sortTasks('date', 'ASC');\r\n    if (this.tasks) {\r\n      this.assignCheckableTasks();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sorts the tasks by the given key. If no direction is provided,\r\n   * it toggles between ascending and descending.\r\n   */\r\n  private handleSort(key: string) {\r\n    let newDirection = this.sortDirection;\r\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\r\n    if (this.sortKey === key) {\r\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\r\n    } else {\r\n      newDirection = 'ASC';\r\n    }\r\n    this.sortingChanged.emit({ field: key, direction: newDirection });\r\n    this.sortTasks(key, newDirection);\r\n  }\r\n\r\n  @Listen('clearSelectedHkTasks', { target: 'body' })\r\n  handleClearSelectedHkTasks(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.selectedIds = [];\r\n  }\r\n\r\n  @Watch('tasks')\r\n  handleTasksChange(newTasks: Task[]) {\r\n    if (newTasks?.length) {\r\n      this.selectedIds = [];\r\n      this.assignCheckableTasks();\r\n    }\r\n  }\r\n  /**\r\n   * Helper to sort tasks array in state.\r\n   */\r\n  /**\r\n   * Sorts the tasks by the given key in ASC or DESC order.\r\n   * If values for `key` are duplicates, it sorts by `date` ascending.\r\n   * If `date` is also the same, it finally sorts by `unit.name` ascending.\r\n   */\r\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\r\n    const sorted = [...this.tasks].sort((a, b) => {\r\n      // Primary comparison: a[key] vs b[key]\r\n      let aPrimary = a[key];\r\n      let bPrimary = b[key];\r\n      if (key === 'status') {\r\n        aPrimary = a[key].description;\r\n        bPrimary = b[key].description;\r\n      }\r\n\r\n      if (aPrimary < bPrimary) {\r\n        return direction === 'ASC' ? -1 : 1;\r\n      }\r\n      if (aPrimary > bPrimary) {\r\n        return direction === 'ASC' ? 1 : -1;\r\n      }\r\n\r\n      // First tiebreaker: compare by date (always ascending)\r\n      if (a.date < b.date) return -1;\r\n      if (a.date > b.date) return 1;\r\n\r\n      // Second tiebreaker: compare by unit.name (always ascending)\r\n      if (a.unit?.name < b.unit?.name) return -1;\r\n      if (a.unit?.name > b.unit?.name) return 1;\r\n\r\n      return 0;\r\n    });\r\n\r\n    // Update component state\r\n    this.tasks = sorted;\r\n    this.sortKey = key;\r\n    this.sortDirection = direction;\r\n  }\r\n\r\n  /**\r\n   * Helper to toggle selection for a single row.\r\n   */\r\n  private toggleSelection(id: Task['id']) {\r\n    if (this.selectedIds.includes(id)) {\r\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\r\n    } else {\r\n      this.selectedIds = [...this.selectedIds, id];\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n  }\r\n\r\n  private emitSelectedTasks() {\r\n    if (this.tasks.length === 0) {\r\n      return;\r\n    }\r\n    const filteredTasks = this.tasks.filter(t => this.selectedIds.includes(t.id));\r\n    this.rowSelectChange.emit(filteredTasks);\r\n  }\r\n\r\n  /**\r\n   * Checks if every row is selected.\r\n   */\r\n  private get allSelected(): boolean {\r\n    return this.checkableTasks.length > 0 && this.selectedIds.length === this.checkableTasks.length;\r\n  }\r\n\r\n  /**\r\n   * Toggles selection on all visible tasks at once.\r\n   */\r\n  private toggleSelectAll() {\r\n    if (this.allSelected) {\r\n      this.selectedIds = [];\r\n    } else {\r\n      this.selectedIds = this.checkableTasks.map(t => t.id);\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n  }\r\n\r\n  /**\r\n   * Assigns checkable tasks based on predefined criteria.\r\n   *\r\n   * This method filters tasks and determines which ones are eligible\r\n   * to be selected using checkboxes. A task is considered \"checkable\"\r\n   * if its date is today or earlier.\r\n   *\r\n   * The filtered tasks are stored in `this.checkableTasks`, ensuring\r\n   * only relevant tasks can be interacted with by users.\r\n   */\r\n  private assignCheckableTasks() {\r\n    const tasks = [];\r\n    this.tasks.forEach(task => {\r\n      if (this.isCheckable(task)) {\r\n        tasks.push(task);\r\n      }\r\n    });\r\n    this.checkableTasks = [...tasks];\r\n  }\r\n\r\n  /**\r\n   * Determines if a task is checkable.\r\n   *\r\n   * A task is considered checkable if its date is today or any day before.\r\n   * This prevents users from selecting tasks with future dates.\r\n   *\r\n   * @param {string} date - The task's date in 'YYYY-MM-DD' format.\r\n   * @returns {boolean} - Returns `true` if the task's date is today or earlier, otherwise `false`.\r\n   */\r\n  private isCheckable(task: Task): boolean {\r\n    // if (!task.hkm_id) {\r\n    //   return false;\r\n    // }\r\n    return moment(task.date, 'YYYY-MM-DD').isSameOrBefore(moment(), 'days');\r\n  }\r\n\r\n  render() {\r\n    const haveManyHousekeepers = housekeeping_store?.hk_criteria?.housekeepers?.length > 1;\r\n    return (\r\n      <div class=\"card table-container h-100 p-1 m-0 table-responsive\">\r\n        <table class=\"table\" data-testid=\"hk_tasks_table\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th class={'task-row'}>\r\n                <ir-checkbox\r\n                  indeterminate={this.selectedIds.length > 0 && this.selectedIds.length < this.checkableTasks.length}\r\n                  checked={this.allSelected}\r\n                  onCheckChange={() => this.toggleSelectAll()}\r\n                ></ir-checkbox>\r\n              </th>\r\n              <th class=\"extra-padding\">{locales.entries.Lcz_Period}</th>\r\n              <th class=\"extra-padding\">{locales.entries.Lcz_Unit}</th>\r\n              <th class={'sortable extra-padding'} onClick={() => this.handleSort('status')}>\r\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                  <span>{locales.entries.Lcz_Status}</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    class=\"lucide lucide-arrow-up-down\"\r\n                  >\r\n                    <path d=\"m21 16-4 4-4-4\" />\r\n                    <path d=\"M17 20V4\" />\r\n                    <path d=\"m3 8 4-4 4 4\" />\r\n                    <path d=\"M7 4v16\" />\r\n                  </svg>\r\n                </div>\r\n              </th>\r\n              <th class=\"extra-padding\">{locales.entries.Lcz_Hint}</th>\r\n              <th class=\"text-left\">{locales.entries.Lcz_A}</th>\r\n              <th class=\"text-left\">{locales.entries.Lcz_C}</th>\r\n              <th class=\"text-left\">{locales.entries.Lcz_I}</th>\r\n              {haveManyHousekeepers && (\r\n                <th style={{ textAlign: 'start' }} class={'sortable extra-padding'} onClick={() => this.handleSort('housekeeper')}>\r\n                  <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                    <span>{locales.entries.Lcz_Housekeeper}</span>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"16\"\r\n                      height=\"16\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      stroke-width=\"2\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                      class=\"lucide lucide-arrow-up-down\"\r\n                    >\r\n                      <path d=\"m21 16-4 4-4-4\" />\r\n                      <path d=\"M17 20V4\" />\r\n                      <path d=\"m3 8 4-4 4 4\" />\r\n                      <path d=\"M7 4v16\" />\r\n                    </svg>\r\n                  </div>\r\n                </th>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {this.tasks.length === 0 && (\r\n              <tr class=\"ir-table-row\">\r\n                <td colSpan={9} class=\"text-center\">\r\n                  <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\r\n                    <span> {locales.entries.Lcz_NoTasksFound}</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {this.tasks.map(task => {\r\n              const isSelected = this.selectedIds.includes(task.id);\r\n              const isCheckable = this.isCheckable(task);\r\n              return (\r\n                <tr\r\n                  data-date={task.date}\r\n                  data-testid={`hk_task_row`}\r\n                  data-assigned={task.housekeeper ? 'true' : 'false'}\r\n                  style={isCheckable && { cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    if (!isCheckable) {\r\n                      return;\r\n                    }\r\n                    this.toggleSelection(task.id);\r\n                  }}\r\n                  class={{ 'selected': isSelected, 'task-table-row ir-table-row': true }}\r\n                  key={task.id}\r\n                >\r\n                  <td class=\"task-row \">{isCheckable && <ir-checkbox checked={isSelected}></ir-checkbox>}</td>\r\n                  <td class=\"task-row extra-padding\">{task.formatted_date}</td>\r\n                  <td class=\"task-row extra-padding\">\r\n                    <span class={{ 'highlighted-unit': task.is_highlight }}>{task.unit.name}</span>\r\n                  </td>\r\n                  <td class=\"task-row extra-padding\">{task.status.description}</td>\r\n                  <td class=\"task-row extra-padding\">{task.hint}</td>\r\n                  <td class=\"task-row text-left\">{task.adult}</td>\r\n                  <td class=\"task-row text-left\">{task.child}</td>\r\n                  <td class=\"task-row text-left\">{task.infant}</td>\r\n                  {haveManyHousekeepers && (\r\n                    <td class=\"w-50 task-row extra-padding\" style={{ textAlign: 'start' }}>\r\n                      {task.housekeeper ?? locales.entries.Lcz_Unassigned}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}