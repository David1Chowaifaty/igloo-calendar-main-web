{"file":"ir-tasks-table2.js","mappings":"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","names":["moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/common/table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\n  display: flex;\n  align-items: center;\n}\n.selected-row {\n  background-color: rgba(0, 0, 255, 0.1);\n}\n.selected td {\n  color: var(--gray-dark) !important;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.selected-row:hover {\n  background-color: rgba(0, 0, 255, 0.15);\n}\n.header-content {\n  height: 100%;\n}\n.sortable {\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.sortable svg {\n  color: var(--blue);\n}\n.task-row,\n.table th,\n.table td {\n  white-space: nowrap;\n  max-width: max-content !important;\n  /* background: white; */\n  border: 0;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.task-row {\n  padding: 0.25rem 0.5rem !important;\n}\n.extra-padding {\n  padding: 0.25rem 1rem !important;\n}\n.highlighted-unit {\n  background: #000;\n  color: white;\n  padding: 0.2rem 0.3rem;\n  border-radius: 4px;\n}\n.table th,\n.table td {\n  text-align: start;\n}\n.table-container {\n  max-height: 80vh;\n}\n/* td,\nth {\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  max-width: max-content !important;\n \n  text-align: start;\n}\ntr {\n  border-bottom: 1px solid #e0e0e0;\n} */\n.task-table-row {\n  background: white !important;\n}\n.task-table-row:hover {\n  background: #e2e6ea3f !important;\n}\n.selected {\n  background: #e3f3fa !important;\n}\n.sortable {\n  text-transform: capitalize;\n}\n.sortable:hover {\n  color: #212529;\n  background-color: #e2e6ea;\n  border-color: #dae0e5;\n  cursor: pointer;\n}\n.sortable:active {\n  color: #212529;\n  background-color: #dae0e5;\n  border-color: #d3d9df;\n}\n","/* .ir-table-row td {\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n  z-index: 2;\n}\n.ir-table-row td:last-child {\n  width: 100%;\n}\n.table td {\n  border-bottom: 1px solid #e3ebf3;\n}\n.table thead th {\n  border: none !important;\n  background: var(--light, #babfc7);\n  color: #464855;\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n} */\n","import { Component, Event, EventEmitter, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { Task } from '@/models/housekeeping';\nimport moment from 'moment';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\n\n@Component({\n  tag: 'ir-tasks-table',\n  styleUrls: ['ir-tasks-table.css', '../../../../common/table.css'],\n  scoped: true,\n})\nexport class IrTasksTable {\n  @Prop({ mutable: true }) tasks: Task[] = [];\n\n  /**\n   * Tracks which task IDs are currently selected via checkboxes.\n   */\n  @State() selectedIds: Task['id'][] = [];\n\n  /**\n   * Controls whether the \"Confirm Clean\" modal is shown.\n   */\n  @State() showConfirmModal: boolean = false;\n\n  /**\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\n   */\n  @State() sortKey: string = 'date';\n\n  /**\n   * The sort direction: ASC or DESC.\n   */\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\n  @State() checkableTasks: Task[] = [];\n\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\n  @Event({ bubbles: true, composed: true }) sortingChanged: EventEmitter<{ field: string; direction: 'ASC' | 'DESC' }>;\n\n  componentWillLoad() {\n    this.sortTasks('date', 'ASC');\n    if (this.tasks) {\n      this.assignCheckableTasks();\n    }\n  }\n\n  /**\n   * Sorts the tasks by the given key. If no direction is provided,\n   * it toggles between ascending and descending.\n   */\n  private handleSort(key: string) {\n    let newDirection = this.sortDirection;\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\n    if (this.sortKey === key) {\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\n    } else {\n      newDirection = 'ASC';\n    }\n    this.sortingChanged.emit({ field: key, direction: newDirection });\n    this.sortTasks(key, newDirection);\n  }\n\n  @Listen('clearSelectedHkTasks', { target: 'body' })\n  handleClearSelectedHkTasks(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.selectedIds = [];\n  }\n\n  @Watch('tasks')\n  handleTasksChange(newTasks: Task[]) {\n    if (newTasks?.length) {\n      this.selectedIds = [];\n      this.assignCheckableTasks();\n    }\n  }\n  /**\n   * Helper to sort tasks array in state.\n   */\n  /**\n   * Sorts the tasks by the given key in ASC or DESC order.\n   * If values for `key` are duplicates, it sorts by `date` ascending.\n   * If `date` is also the same, it finally sorts by `unit.name` ascending.\n   */\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\n    const sorted = [...this.tasks].sort((a, b) => {\n      // Primary comparison: a[key] vs b[key]\n      let aPrimary = a[key];\n      let bPrimary = b[key];\n      if (key === 'status') {\n        aPrimary = a[key].description;\n        bPrimary = b[key].description;\n      }\n\n      if (aPrimary < bPrimary) {\n        return direction === 'ASC' ? -1 : 1;\n      }\n      if (aPrimary > bPrimary) {\n        return direction === 'ASC' ? 1 : -1;\n      }\n\n      // First tiebreaker: compare by date (always ascending)\n      if (a.date < b.date) return -1;\n      if (a.date > b.date) return 1;\n\n      // Second tiebreaker: compare by unit.name (always ascending)\n      if (a.unit?.name < b.unit?.name) return -1;\n      if (a.unit?.name > b.unit?.name) return 1;\n\n      return 0;\n    });\n\n    // Update component state\n    this.tasks = sorted;\n    this.sortKey = key;\n    this.sortDirection = direction;\n  }\n\n  /**\n   * Helper to toggle selection for a single row.\n   */\n  private toggleSelection(id: Task['id']) {\n    if (this.selectedIds.includes(id)) {\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\n    } else {\n      this.selectedIds = [...this.selectedIds, id];\n      this.animateCleanedButton.emit(null);\n    }\n    this.emitSelectedTasks();\n  }\n\n  private emitSelectedTasks() {\n    if (this.tasks.length === 0) {\n      return;\n    }\n    const filteredTasks = this.tasks.filter(t => this.selectedIds.includes(t.id));\n    this.rowSelectChange.emit(filteredTasks);\n  }\n\n  /**\n   * Checks if every row is selected.\n   */\n  private get allSelected(): boolean {\n    return this.checkableTasks.length > 0 && this.selectedIds.length === this.checkableTasks.length;\n  }\n\n  /**\n   * Toggles selection on all visible tasks at once.\n   */\n  private toggleSelectAll() {\n    if (this.allSelected) {\n      this.selectedIds = [];\n    } else {\n      this.selectedIds = this.checkableTasks.map(t => t.id);\n      this.animateCleanedButton.emit(null);\n    }\n    this.emitSelectedTasks();\n  }\n\n  /**\n   * Assigns checkable tasks based on predefined criteria.\n   *\n   * This method filters tasks and determines which ones are eligible\n   * to be selected using checkboxes. A task is considered \"checkable\"\n   * if its date is today or earlier.\n   *\n   * The filtered tasks are stored in `this.checkableTasks`, ensuring\n   * only relevant tasks can be interacted with by users.\n   */\n  private assignCheckableTasks() {\n    const tasks = [];\n    this.tasks.forEach(task => {\n      if (this.isCheckable(task)) {\n        tasks.push(task);\n      }\n    });\n    this.checkableTasks = [...tasks];\n  }\n\n  /**\n   * Determines if a task is checkable.\n   *\n   * A task is considered checkable if its date is today or any day before.\n   * This prevents users from selecting tasks with future dates.\n   *\n   * @param {string} date - The task's date in 'YYYY-MM-DD' format.\n   * @returns {boolean} - Returns `true` if the task's date is today or earlier, otherwise `false`.\n   */\n  private isCheckable(task: Task): boolean {\n    // if (!task.hkm_id) {\n    //   return false;\n    // }\n    return moment(task.date, 'YYYY-MM-DD').isSameOrBefore(moment(), 'days');\n  }\n\n  render() {\n    const haveManyHousekeepers = housekeeping_store?.hk_criteria?.housekeepers?.length > 1;\n    return (\n      <div class=\"card table-container h-100 p-1 m-0 table-responsive\">\n        <table class=\"table\" data-testid=\"hk_tasks_table\">\n          <thead class=\"table-header\">\n            <tr>\n              <th class={'task-row'}>\n                <ir-checkbox\n                  indeterminate={this.selectedIds.length > 0 && this.selectedIds.length < this.checkableTasks.length}\n                  checked={this.allSelected}\n                  onCheckChange={() => this.toggleSelectAll()}\n                ></ir-checkbox>\n              </th>\n              <th class=\"extra-padding\">{locales.entries.Lcz_Period}</th>\n              <th class=\"extra-padding\">{locales.entries.Lcz_Unit}</th>\n              <th class={'sortable extra-padding'} onClick={() => this.handleSort('status')}>\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                  <span>{locales.entries.Lcz_Status}</span>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    class=\"lucide lucide-arrow-up-down\"\n                  >\n                    <path d=\"m21 16-4 4-4-4\" />\n                    <path d=\"M17 20V4\" />\n                    <path d=\"m3 8 4-4 4 4\" />\n                    <path d=\"M7 4v16\" />\n                  </svg>\n                </div>\n              </th>\n              <th class=\"extra-padding\">{locales.entries.Lcz_Hint}</th>\n              <th class=\"text-center\">{locales.entries.Lcz_A}</th>\n              <th class=\"text-center\">{locales.entries.Lcz_C}</th>\n              <th class=\"text-center\">{locales.entries.Lcz_I}</th>\n              {haveManyHousekeepers && (\n                <th style={{ textAlign: 'start' }} class={'sortable extra-padding'} onClick={() => this.handleSort('housekeeper')}>\n                  <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                    <span>{locales.entries.Lcz_Housekeeper}</span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      class=\"lucide lucide-arrow-up-down\"\n                    >\n                      <path d=\"m21 16-4 4-4-4\" />\n                      <path d=\"M17 20V4\" />\n                      <path d=\"m3 8 4-4 4 4\" />\n                      <path d=\"M7 4v16\" />\n                    </svg>\n                  </div>\n                </th>\n              )}\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.tasks.length === 0 && (\n              <tr class=\"ir-table-row\">\n                <td colSpan={9} class=\"text-center\">\n                  <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\n                    <span> {locales.entries.Lcz_NoTasksFound}</span>\n                  </div>\n                </td>\n              </tr>\n            )}\n            {this.tasks.map(task => {\n              const isSelected = this.selectedIds.includes(task.id);\n              const isCheckable = this.isCheckable(task);\n              return (\n                <tr\n                  data-date={task.date}\n                  data-testid={`hk_task_row`}\n                  data-assigned={task.housekeeper ? 'true' : 'false'}\n                  style={isCheckable && { cursor: 'pointer' }}\n                  onClick={() => {\n                    if (!isCheckable) {\n                      return;\n                    }\n                    this.toggleSelection(task.id);\n                  }}\n                  class={{ 'selected': isSelected, 'task-table-row ir-table-row': true }}\n                  key={task.id}\n                >\n                  <td class=\"task-row \">{isCheckable && <ir-checkbox checked={isSelected}></ir-checkbox>}</td>\n                  <td class=\"task-row extra-padding\">{task.formatted_date}</td>\n                  <td class=\"task-row extra-padding\">\n                    <span class={{ 'highlighted-unit': task.is_highlight }}>{task.unit.name}</span>\n                  </td>\n                  <td class=\"task-row extra-padding\">{task.status.description}</td>\n                  <td class=\"task-row extra-padding\">{task.hint}</td>\n                  <td class=\"task-row text-center\">{task.adult}</td>\n                  <td class=\"task-row text-center\">{task.child}</td>\n                  <td class=\"task-row text-center\">{task.infant}</td>\n                  {haveManyHousekeepers && (\n                    <td class=\"w-50 task-row extra-padding\" style={{ textAlign: 'start' }}>\n                      {task.housekeeper ?? locales.entries.Lcz_Unassigned}\n                    </td>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"],"version":3}