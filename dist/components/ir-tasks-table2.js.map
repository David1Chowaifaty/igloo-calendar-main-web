{"file":"ir-tasks-table2.js","mappings":"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","names":["moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/common/table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\n  display: flex;\n  align-items: center;\n}\n.selected-row {\n  background-color: rgba(0, 0, 255, 0.1);\n}\n.selected-row:hover {\n  background-color: rgba(0, 0, 255, 0.15);\n}\n.header-content {\n  height: 100%;\n}\n\n.highlighted-unit {\n  background: #000;\n  color: white;\n  padding: 0.2rem 0.3rem;\n  border-radius: 4px;\n}\n.table-container {\n  height: 100%;\n}\n\n/* .table-container {\n  height: 75vh;\n} */\n/* td,\nth {\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  max-width: max-content !important;\n \n  text-align: start;\n}\ntr {\n  border-bottom: 1px solid #e0e0e0;\n} */\n.task-table-row td {\n  background: white !important;\n}\n.task-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.table-container {\n  display: none;\n}\n/* .pagination-container {\n  position: sticky;\n  bottom: -1rem;\n  background-color: white;\n  padding: 1rem 0;\n  } */\n.mobile-tasks-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n/*sm*/\n@media (min-width: 640px) {\n  .mobile-tasks-container {\n    display: none;\n  }\n  .table-container {\n    display: flex;\n  }\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n/*lg*/\n@media (min-width: 1024px) {\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","/* Base styles */\n.ir-table-row td {\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n  z-index: 2;\n  background-color: white;\n  white-space: nowrap;\n  /* width: max-content;\n  max-width: max-content; */\n}\n/* .ir-table-row td:last-child {\n  width: 100%; \n}*/\n/* .ir-table-row td:first-child,\n.table thead th:first-child {\n  position: sticky;\n  left: var(--ir-table-sticky-padding,-1rem);\n} */\n\n.table td {\n  border-top: 0;\n  border-bottom: 1px solid #e3ebf3;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n/* .table thead th:first-child {\n  border-top-left-radius: 0.5rem;\n  }\n  .table thead th:last-child {\n    border-top-right-radius: 0.5rem;\n    } */\n.table thead th {\n  border: none !important;\n  background: #ececec;\n  color: #374151;\n  padding: 0.5rem 1rem !important;\n  text-align: left;\n}\n\n/* Selected Rows Styles */\n\n.selected td {\n  background: #e3f3fa !important;\n}\n.selected td {\n  color: var(--gray-dark) !important;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n/* Sorting styles */\n.sortable,\n.ir-table-row {\n  text-transform: capitalize;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n.sortable:hover {\n  color: #212529;\n  background-color: #e2e8f0 !important;\n  border-color: #dae0e5;\n  cursor: pointer;\n}\n.ir-table-row:hover td {\n  background: #e2e6ea3f !important;\n}\n.sortable:active {\n  color: #212529;\n  background-color: #e2e8f0;\n  border-color: #d3d9df;\n}\n.sortable svg {\n  color: var(--blue);\n}\n/* .action-row {\n  position: sticky;\n  right:var(--ir-table-sticky-padding,-1rem);\n} */\n","import { Component, Event, EventEmitter, Host, Listen, Prop, Watch, h } from '@stencil/core';\nimport { Task } from '@/models/housekeeping';\nimport moment from 'moment';\nimport housekeeping_store from '@/stores/housekeeping.store';\nimport locales from '@/stores/locales.store';\nimport {\n  hkTasksStore,\n  toggleTaskSelection,\n  selectAllTasks,\n  clearSelectedTasks,\n  getCheckableTasks,\n  isAllTasksSelected,\n  updateSorting,\n  getPaginatedTasks,\n  getMobileTasks,\n} from '@/stores/hk-tasks.store';\n\n@Component({\n  tag: 'ir-tasks-table',\n  styleUrls: ['ir-tasks-table.css', '../../../../common/table.css'],\n  scoped: true,\n})\nexport class IrTasksTable {\n  @Prop({ mutable: true }) tasks: Task[] = [];\n\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\n  @Event({ bubbles: true, composed: true }) sortingChanged: EventEmitter<{ field: string; direction: 'ASC' | 'DESC' }>;\n  @Event({ bubbles: true, composed: true }) skipSelectedTask: EventEmitter<Task>;\n\n  componentWillLoad() {\n    if (this.tasks && this.tasks.length > 0) {\n      updateSorting('date', 'ASC');\n    }\n  }\n\n  /**\n   * Sorts the tasks by the given key. If no direction is provided,\n   * it toggles between ascending and descending.\n   */\n  private handleSort(key: string) {\n    let newDirection = hkTasksStore.sorting.direction;\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\n    if (hkTasksStore.sorting.field === key) {\n      newDirection = hkTasksStore.sorting.direction === 'ASC' ? 'DESC' : 'ASC';\n    } else {\n      newDirection = 'ASC';\n    }\n    updateSorting(key, newDirection);\n    this.sortingChanged.emit({ field: key, direction: newDirection });\n  }\n\n  @Listen('clearSelectedHkTasks', { target: 'body' })\n  handleClearSelectedHkTasks(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    clearSelectedTasks();\n  }\n\n  @Watch('tasks')\n  handleTasksChange(newTasks: Task[]) {\n    if (newTasks?.length) {\n      clearSelectedTasks();\n    }\n  }\n\n  /**\n   * Helper to toggle selection for a single row.\n   */\n  private toggleSelection(task: Task) {\n    toggleTaskSelection(task);\n    this.animateCleanedButton.emit(null);\n    this.emitSelectedTasks();\n  }\n\n  private emitSelectedTasks() {\n    this.rowSelectChange.emit(hkTasksStore.selectedTasks);\n  }\n\n  /**\n   * Checks if every row is selected.\n   */\n  private get allSelected(): boolean {\n    return isAllTasksSelected();\n  }\n\n  /**\n   * Toggles selection on all visible tasks at once.\n   */\n  private toggleSelectAll() {\n    if (this.allSelected) {\n      clearSelectedTasks();\n    } else {\n      selectAllTasks(getCheckableTasks());\n      this.animateCleanedButton.emit(null);\n    }\n    this.emitSelectedTasks();\n  }\n\n  /**\n   * Determines if a task is checkable.\n   *\n   * A task is considered checkable if its date is today or any day before.\n   * This prevents users from selecting tasks with future dates.\n   *\n   * @param {Task} task - The task to check.\n   * @returns {boolean} - Returns `true` if the task's date is today or earlier, otherwise `false`.\n   */\n  private isCheckable(task: Task): boolean {\n    return moment(task.date, 'YYYY-MM-DD').isSameOrBefore(moment(), 'days');\n  }\n\n  /**\n   * Determines if a task is skippable.\n   *\n   * A task is considered skippable if its date is today and should be In house.\n   *\n   * @param {Task} task - The task to skip.\n   * @returns {boolean} - Returns `true` if the task's date is today and in house, otherwise `false`.\n   */\n  private isSkippable(task: Task): boolean {\n    console.log(task);\n    const isTodayTask = moment().isSame(moment(task.date, 'YYYY-MM-DD'), 'date');\n    return isTodayTask && task.status.code === 'IH';\n  }\n\n  render() {\n    const haveManyHousekeepers = housekeeping_store?.hk_criteria?.housekeepers?.length > 1;\n    const tasks = getPaginatedTasks();\n    // const tasks = hkTasksStore.tasks;\n    const mobileTasks = getMobileTasks();\n    return (\n      <Host class=\"flex-fill\">\n        <section class=\"mobile-tasks-container flex-fill\">\n          <div class=\"card p-1 m-0\">\n            <ir-tasks-header></ir-tasks-header>\n          </div>\n          {mobileTasks?.length === 0 && <p class=\"mx-auto\">{locales.entries.Lcz_NoTasksFound}</p>}\n          {mobileTasks.map(task => {\n            const isCheckable = this.isCheckable(task);\n            const isSkippable = this.isSkippable(task);\n            return <ir-tasks-card task={task} isSkippable={isSkippable} key={task.id} isCheckable={isCheckable}></ir-tasks-card>;\n          })}\n          <ir-tasks-table-pagination></ir-tasks-table-pagination>\n        </section>\n        <div class=\"card table-container flex-fill p-1 m-0\">\n          <ir-tasks-header></ir-tasks-header>\n          <div class={'table-responsive mb-auto'}>\n            <table class=\"table\" data-testid=\"hk_tasks_table\">\n              <thead class=\"table-header\">\n                <tr>\n                  <th class={'task-row'}>\n                    <ir-checkbox\n                      indeterminate={hkTasksStore.selectedTasks.length > 0 && hkTasksStore.selectedTasks.length < getCheckableTasks().length}\n                      checked={this.allSelected}\n                      onCheckChange={() => this.toggleSelectAll()}\n                    ></ir-checkbox>\n                  </th>\n                  <th class=\"extra-padding\">{locales.entries.Lcz_Period}</th>\n                  <th class=\"extra-padding\">\n                    {this.tasks.length > 1 && this.tasks.length + ' '}\n                    {locales.entries.Lcz_Unit}\n                  </th>\n                  <th class={'sortable extra-padding'} onClick={() => this.handleSort('status')}>\n                    <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                      <span>{locales.entries.Lcz_Status}</span>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        class=\"lucide lucide-arrow-up-down\"\n                      >\n                        <path d=\"m21 16-4 4-4-4\" />\n                        <path d=\"M17 20V4\" />\n                        <path d=\"m3 8 4-4 4 4\" />\n                        <path d=\"M7 4v16\" />\n                      </svg>\n                    </div>\n                  </th>\n                  <th class=\"extra-padding text-left\">{locales.entries.Lcz_Hint}</th>\n                  <th class=\"text-left\">{locales.entries.Lcz_A}d</th>\n                  <th class=\"text-left\">{locales.entries.Lcz_C}h</th>\n                  <th class=\"text-left text-left\">{locales.entries.Lcz_I}n</th>\n                  {haveManyHousekeepers && (\n                    <th style={{ textAlign: 'start' }} class={'sortable extra-padding'} onClick={() => this.handleSort('housekeeper')}>\n                      <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\n                        <span>{locales.entries.Lcz_Housekeeper}</span>\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"lucide lucide-arrow-up-down\"\n                        >\n                          <path d=\"m21 16-4 4-4-4\" />\n                          <path d=\"M17 20V4\" />\n                          <path d=\"m3 8 4-4 4 4\" />\n                          <path d=\"M7 4v16\" />\n                        </svg>\n                      </div>\n                    </th>\n                  )}\n                  <th></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {tasks.length === 0 && (\n                  <tr class=\"ir-table-row\">\n                    <td colSpan={9} class=\"text-left\">\n                      <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\n                        <span> {locales.entries.Lcz_NoTasksFound}</span>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {tasks?.map(task => {\n                  const isSelected = hkTasksStore.selectedTasks.some(t => t.id === task.id);\n                  const isCheckable = this.isCheckable(task);\n                  return (\n                    <tr\n                      data-date={task.date}\n                      data-testid={`hk_task_row`}\n                      data-assigned={task.housekeeper ? 'true' : 'false'}\n                      style={isCheckable && { cursor: 'pointer' }}\n                      onClick={() => {\n                        if (!isCheckable) {\n                          return;\n                        }\n                        this.toggleSelection(task);\n                      }}\n                      class={{ 'selected': isSelected, 'task-table-row ir-table-row': true }}\n                      key={task.id}\n                    >\n                      <td class=\"task-row \">{isCheckable && <ir-checkbox checked={isSelected}></ir-checkbox>}</td>\n                      <td class=\"task-row extra-padding\">{task.formatted_date}</td>\n                      <td class=\"task-row extra-padding\">\n                        <span class={{ 'highlighted-unit': task.is_highlight }}>{task.unit.name}</span>\n                      </td>\n                      <td class=\"task-row extra-padding text-left\">{task.status.description}</td>\n                      <td class=\"task-row extra-padding text-left\">{task.hint}</td>\n                      <td class=\"task-row text-left\">{task.adult}</td>\n                      <td class=\"task-row text-left\">{task.child}</td>\n                      <td class=\"task-row text-left\">{task.infant}</td>\n                      {haveManyHousekeepers && (\n                        <td class=\" task-row extra-padding\" style={{ textAlign: 'start' }}>\n                          {task.housekeeper ?? locales.entries.Lcz_Unassigned}\n                        </td>\n                      )}\n                      <td>\n                        {this.isSkippable(task) && (\n                          <ir-button\n                            text=\"Skip\"\n                            size=\"sm\"\n                            onClickHandler={() => {\n                              this.skipSelectedTask.emit(task);\n                            }}\n                          ></ir-button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div class=\"mt-auto\">\n            <ir-tasks-table-pagination></ir-tasks-table-pagination>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}