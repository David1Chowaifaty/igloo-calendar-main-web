{"file":"Token.js","mappings":";;AAAA;AAEA,MAAM,IAAI;IAKR;QACE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;KACF;IACM,MAAM,IAAI;;;;;KAKhB;IACM,SAAS,CAAC,QAA4C;QAC3D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjC;IACM,WAAW,CAAC,QAA4C;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,QAAQ,CAAC,CAAC;KACrE;IACM,kBAAkB,CAAC,KAAc;QACtC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,OAAO,iBAAiB,CAAC,eAAwB;QACvD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;KACjE;IACM,eAAe;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;AA/Bc,eAAU,GAAG,KAAK,CAAC;AACnB,qBAAgB,GAAG,KAAK,CAAC;AACzB,gBAAW,GAA8C,EAAE;;ACF5E,MAAM,KAAM,SAAQ,IAAI;IAMtB;QACE,KAAK,EAAE,CAAC;QANF,YAAO,GAAG,mCAAmC,CAAC;QAOpD,IAAI,KAAK,CAAC,eAAe,EAAE;YACzB,OAAO;SACR;QACD,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;KACvC;IACM,QAAQ;QACb,OAAO,KAAK,CAAC,KAAK,CAAC;KACpB;IACM,UAAU,CAAC,GAAW;QAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;KACvC;IACO,UAAU;QAChB,IAAI,KAAK,CAAC,kBAAkB,EAAE;YAC5B,OAAO;SACR;QAED,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM;YACnC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAChB,MAAM,IAAI,iBAAiB,EAAE,CAAC;aAC/B;YACD,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC;;;YAG3C,OAAO,MAAM,CAAC;SACf,CAAC,CAAC;QAEH,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;KACjC;IAEM,QAAQ,CAAC,KAAa;QAC3B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;AAxCc,WAAK,GAAkB,EAAlB,CAAqB;AAC1B,qBAAe,GAAY,KAAZ,CAAkB;AACjC,wBAAkB,GAAG,KAAH,CAAS;MAyC/B,iBAAkB,SAAQ,KAAK;IAC1C,YAAY,OAAO,GAAG,iBAAiB;QACrC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;KACjC;;;;;","names":[],"sources":["src/models/Auth.ts","src/models/Token.ts"],"sourcesContent":["// import axios from 'axios';\n\nclass Auth {\n  private static isAuthUsed = false;\n  private static _isAuthenticated = false;\n  private static subscribers: Array<(isAuthenticated: boolean) => void> = [];\n\n  constructor() {\n    if (!Auth.isAuthUsed) {\n      this.init();\n    }\n  }\n  public async init() {\n    // axios.defaults.withCredentials = true;\n    // Auth.isAuthUsed = true;\n    // const { data } = await axios.post('/Is_Already_Athenticated');\n    // this.setIsAuthenticated(data.My_Result);\n  }\n  public subscribe(callback: (isAuthenticated: boolean) => void) {\n    Auth.subscribers.push(callback);\n  }\n  public unsubscribe(callback: (isAuthenticated: boolean) => void) {\n    Auth.subscribers = Auth.subscribers.filter(sub => sub !== callback);\n  }\n  public setIsAuthenticated(value: boolean) {\n    Auth._isAuthenticated = value;\n    Auth.notifySubscribers(value);\n  }\n\n  private static notifySubscribers(isAuthenticated: boolean) {\n    Auth.subscribers.forEach(callback => callback(isAuthenticated));\n  }\n  public isAuthenticated() {\n    return Auth._isAuthenticated;\n  }\n}\n\nexport default Auth;\n","import axios from 'axios';\nimport Auth from './Auth';\n\nclass Token extends Auth {\n  private baseUrl = 'https://gateway.igloorooms.com/IR';\n  private static token: string | null = '';\n  private static modifiedBaseUrl: boolean = false;\n  private static isInterceptorAdded = false;\n\n  constructor() {\n    super();\n    if (Token.modifiedBaseUrl) {\n      return;\n    }\n    Token.modifiedBaseUrl = true;\n    axios.defaults.baseURL = this.baseUrl;\n  }\n  public getToken() {\n    return Token.token;\n  }\n  public setBaseUrl(url: string) {\n    this.baseUrl = url;\n    axios.defaults.baseURL = this.baseUrl;\n  }\n  private initialize() {\n    if (Token.isInterceptorAdded) {\n      return;\n    }\n\n    axios.interceptors.request.use(config => {\n      if (!Token.token) {\n        throw new MissingTokenError();\n      }\n      config.headers.Authorization = Token.token;\n      // config.params = config.params || {};\n      // config.params.Ticket = Token.token;\n      return config;\n    });\n\n    Token.isInterceptorAdded = true;\n  }\n\n  public setToken(token: string) {\n    Token.token = token;\n    this.initialize();\n  }\n}\nexport default Token;\nexport class MissingTokenError extends Error {\n  constructor(message = 'Missing token!!') {\n    super(message);\n    this.name = 'MissingTokenError';\n  }\n}\n"],"version":3}