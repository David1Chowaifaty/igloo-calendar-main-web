{"file":"hk-tasks.store.js","mappings":"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","names":[],"sources":["src/stores/hk-tasks.store.ts"],"sourcesContent":["import { Task, ArchivedTask } from '@/models/housekeeping';\nimport { createStore } from '@stencil/store';\nimport calendar_data from './calendar-data';\n\nconst defaultTasksList = [10, 20, 50, 100];\n\nexport type TaskFilters = {\n  cleaning_periods: { code: string };\n  housekeepers: { id: number }[];\n  cleaning_frequencies: { code: string };\n  dusty_units: { code: string };\n  highlight_check_ins: { code: string };\n};\n\nexport type ArchiveFilters = {\n  from_date: string;\n  to_date: string;\n  filtered_by_hkm?: number[];\n  filtered_by_unit?: number[];\n};\n\nexport type SortingState = {\n  field: string;\n  direction: 'ASC' | 'DESC';\n};\nexport type TasksPagination = {\n  currentPage: number;\n  pageSize: number;\n  totalPages: number;\n  totalItems: number;\n  tasksList: number[];\n  mobileCurrentPage: number;\n  mobilePageSize: number;\n};\nexport interface IHkTasksStore {\n  searchField: string;\n  tasks: Task[];\n  filteredTasks: Task[];\n  selectedTasks: Task[];\n  pagination: TasksPagination;\n  filters: TaskFilters | null;\n  isLoading: boolean;\n  isFiltersLoading: boolean;\n  isExportLoading: boolean;\n  archiveOpen: boolean;\n  archiveData: ArchivedTask[];\n  archiveFilters: ArchiveFilters;\n  archiveLoading: 'search' | 'excel' | null;\n  sorting: SortingState;\n  modalOpen: boolean;\n  sidebarOpen: boolean;\n}\nfunction getPaginationInitialParams() {\n  const tasks = getTaskList();\n  return {\n    tasksList: tasks,\n    currentPage: 1,\n    mobileCurrentPage: 1,\n    pageSize: tasks[0],\n    mobilePageSize: tasks[0],\n    totalPages: 0,\n    totalItems: 0,\n  };\n}\nconst initialState: IHkTasksStore = {\n  searchField: '',\n  tasks: [],\n  filteredTasks: [],\n  selectedTasks: [],\n  pagination: getPaginationInitialParams(),\n  filters: null,\n  isLoading: false,\n  isFiltersLoading: false,\n  isExportLoading: false,\n  archiveOpen: false,\n  archiveData: [],\n  archiveFilters: {\n    from_date: null,\n    to_date: null,\n    filtered_by_hkm: [],\n    filtered_by_unit: [],\n  },\n  archiveLoading: null,\n  sorting: {\n    field: 'date',\n    direction: 'ASC',\n  },\n  modalOpen: false,\n  sidebarOpen: false,\n};\n\nexport const { state: hkTasksStore, onChange } = createStore<IHkTasksStore>(initialState);\n\nexport function updateSearchField(searchField: string) {\n  hkTasksStore.searchField = searchField;\n  hkTasksStore.pagination.currentPage = 1;\n  filterTasks();\n}\n\nexport function updateTasks(tasks: Task[]) {\n  const wasEmpty = hkTasksStore.tasks.length === 0;\n  hkTasksStore.tasks = tasks;\n\n  // Update task list if significantly changed or was empty\n  if (wasEmpty || shouldUpdateTaskList(tasks.length)) {\n    updateTaskList();\n  }\n\n  filterTasks();\n}\nfunction updatePaginationFields(params: Partial<TasksPagination>) {\n  hkTasksStore.pagination = {\n    ...hkTasksStore.pagination,\n    ...params,\n  };\n}\nexport function updatePageSize(pageSize: number) {\n  updatePaginationFields({\n    pageSize,\n    currentPage: 1,\n  });\n  updatePagination();\n}\n\nexport function updateCurrentPage(page: number) {\n  if (page >= 1 && page <= hkTasksStore.pagination.totalPages) {\n    updatePaginationFields({ currentPage: page });\n  }\n}\nexport function updateTaskList() {\n  const list = getTaskList();\n  updatePaginationFields({\n    tasksList: list,\n    pageSize: list[0],\n    mobilePageSize: list[0],\n  });\n  updatePagination();\n}\n\nfunction getTaskList(): number[] {\n  if (!calendar_data.roomsInfo) {\n    return defaultTasksList;\n  }\n  const totalRooms = calendar_data.roomsInfo.length;\n  if (totalRooms <= 10) {\n    return defaultTasksList;\n  }\n  const calculatedList = [...Array(4)].map((_, i) => {\n    const t = totalRooms * (i + 1);\n    return i === 3 ? (t < 100 ? 100 : t) : t;\n  });\n  return calculatedList;\n}\n\nfunction shouldUpdateTaskList(newTaskCount: number): boolean {\n  const currentMax = Math.max(...hkTasksStore.pagination.tasksList);\n  return newTaskCount > currentMax * 1.5 || newTaskCount < currentMax * 0.5;\n}\n\nfunction filterTasks() {\n  const searchText = hkTasksStore?.searchField?.toLowerCase() ?? '';\n\n  if (!searchText) {\n    hkTasksStore.filteredTasks = [...hkTasksStore.tasks];\n  } else {\n    hkTasksStore.filteredTasks = hkTasksStore.tasks.filter(\n      task =>\n        task.unit?.name?.toLowerCase().includes(searchText) || task.status?.description?.toLowerCase().includes(searchText) || task.housekeeper?.toLowerCase().includes(searchText),\n    );\n  }\n\n  updatePagination();\n}\n\nfunction updatePagination() {\n  const totalItems = hkTasksStore.filteredTasks.length;\n  const totalPages = Math.max(1, Math.ceil(totalItems / hkTasksStore.pagination.pageSize));\n  updatePaginationFields({\n    totalItems,\n    totalPages,\n    currentPage: Math.min(hkTasksStore.pagination.currentPage, totalPages),\n  });\n}\n\nexport function getPaginatedTasks(): Task[] {\n  const start = (hkTasksStore.pagination.currentPage - 1) * hkTasksStore.pagination.pageSize;\n  const end = start + hkTasksStore.pagination.pageSize;\n  return hkTasksStore.filteredTasks.slice(start, end);\n}\n\nexport function getMobileTasks(): Task[] {\n  const { mobileCurrentPage, mobilePageSize } = hkTasksStore.pagination;\n  const start = (mobileCurrentPage - 1) * mobilePageSize;\n  const end = start + mobilePageSize;\n  return hkTasksStore.filteredTasks.slice(0, end);\n}\n\nexport function shouldLoadMore(): boolean {\n  const { mobileCurrentPage, mobilePageSize } = hkTasksStore.pagination;\n  return !(mobilePageSize * (mobileCurrentPage - 1) + mobilePageSize >= hkTasksStore.filteredTasks.length);\n}\n\nexport function loadMoreTasks(page: number) {\n  if (!shouldLoadMore()) {\n    return;\n  }\n  updatePaginationFields({\n    mobileCurrentPage: page,\n  });\n}\n\nexport function resetHkTasksStore() {\n  hkTasksStore.searchField = '';\n  hkTasksStore.tasks = [];\n  hkTasksStore.filteredTasks = [];\n  hkTasksStore.selectedTasks = [];\n  (hkTasksStore.pagination = getPaginationInitialParams()), (hkTasksStore.filters = null);\n  hkTasksStore.isLoading = false;\n  hkTasksStore.isFiltersLoading = false;\n  hkTasksStore.isExportLoading = false;\n  hkTasksStore.archiveOpen = false;\n  hkTasksStore.archiveData = [];\n  hkTasksStore.archiveFilters = {\n    from_date: null,\n    to_date: null,\n    filtered_by_hkm: [],\n    filtered_by_unit: [],\n  };\n  hkTasksStore.archiveLoading = null;\n  hkTasksStore.sorting = {\n    field: 'date',\n    direction: 'ASC',\n  };\n  hkTasksStore.modalOpen = false;\n  hkTasksStore.sidebarOpen = false;\n}\n\n// Task selection helpers\nexport function updateSelectedTasks(tasks: Task[]) {\n  hkTasksStore.selectedTasks = tasks;\n}\n\nexport function clearSelectedTasks() {\n  hkTasksStore.selectedTasks = [];\n}\n\nexport function toggleTaskSelection(task: Task) {\n  const index = hkTasksStore.selectedTasks.findIndex(t => t.id === task.id);\n  if (index > -1) {\n    hkTasksStore.selectedTasks = hkTasksStore.selectedTasks.filter(t => t.id !== task.id);\n  } else {\n    hkTasksStore.selectedTasks = [...hkTasksStore.selectedTasks, task];\n  }\n}\n\nexport function selectAllTasks(tasks: Task[]) {\n  hkTasksStore.selectedTasks = [...tasks];\n}\n\n// Filter helpers\nexport function updateFilters(filters: TaskFilters) {\n  hkTasksStore.filters = filters;\n}\n\nexport function clearFilters() {\n  hkTasksStore.filters = null;\n}\n\n// Loading state helpers\nexport function setLoading(loading: boolean) {\n  hkTasksStore.isLoading = loading;\n}\n\nexport function setFiltersLoading(loading: boolean) {\n  hkTasksStore.isFiltersLoading = loading;\n}\n\nexport function setExportLoading(loading: boolean) {\n  hkTasksStore.isExportLoading = loading;\n}\n\n// Sorting helpers\nexport function updateSorting(field: string, direction: 'ASC' | 'DESC') {\n  hkTasksStore.sorting = { field, direction };\n  // Apply sorting to original tasks, then re-filter\n  hkTasksStore.tasks = getSortedTasks(hkTasksStore.tasks);\n  filterTasks();\n}\n\nexport function getSortedTasks(tasksToSort: Task[] = hkTasksStore.filteredTasks): Task[] {\n  const { field, direction } = hkTasksStore.sorting;\n  return [...tasksToSort].sort((a, b) => {\n    let aValue = a[field];\n    let bValue = b[field];\n\n    if (field === 'status') {\n      aValue = a.status?.description;\n      bValue = b.status?.description;\n    } else if (field === 'unit') {\n      aValue = a.unit?.name;\n      bValue = b.unit?.name;\n    }\n\n    if (aValue < bValue) return direction === 'ASC' ? -1 : 1;\n    if (aValue > bValue) return direction === 'ASC' ? 1 : -1;\n\n    // Fallback sorting by date then unit name\n    if (a.date < b.date) return -1;\n    if (a.date > b.date) return 1;\n    if (a.unit?.name < b.unit?.name) return -1;\n    if (a.unit?.name > b.unit?.name) return 1;\n\n    return 0;\n  });\n}\n\n// Archive helpers\nexport function setArchiveOpen(open: boolean) {\n  hkTasksStore.archiveOpen = open;\n}\n\nexport function updateArchiveData(data: ArchivedTask[]) {\n  hkTasksStore.archiveData = data;\n}\n\nexport function updateArchiveFilters(filters: Partial<ArchiveFilters>) {\n  hkTasksStore.archiveFilters = { ...hkTasksStore.archiveFilters, ...filters };\n}\n\nexport function setArchiveLoading(loading: 'search' | 'excel' | null) {\n  hkTasksStore.archiveLoading = loading;\n}\n\n// Modal and sidebar helpers\nexport function setModalOpen(open: boolean) {\n  hkTasksStore.modalOpen = open;\n}\n\nexport function setSidebarOpen(open: boolean) {\n  hkTasksStore.sidebarOpen = open;\n}\n\n// Computed getters\nexport function getCheckableTasks(): Task[] {\n  return hkTasksStore.tasks.filter(task => {\n    const taskDate = new Date(task.date);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999);\n    return taskDate <= today;\n  });\n}\n\nexport function getSelectedTasksCount(): number {\n  return hkTasksStore.selectedTasks.length;\n}\n\nexport function isAllTasksSelected(): boolean {\n  const checkableTasks = getCheckableTasks();\n  return checkableTasks.length > 0 && hkTasksStore.selectedTasks.length === checkableTasks.length;\n}\n\nexport function getTasksByStatus(status: string): Task[] {\n  return hkTasksStore.tasks.filter(task => task.status?.description === status);\n}\n\nexport function getTasksByHousekeeper(housekeeperId: number): Task[] {\n  return hkTasksStore.tasks.filter(task => task.hkm_id === housekeeperId);\n}\n\nexport function getTasksByUnit(unitId: number): Task[] {\n  return hkTasksStore.tasks.filter(task => task.unit?.id === unitId);\n}\n\n// Utility helpers\nexport function updateStoreProperty<K extends keyof IHkTasksStore>(key: K, value: IHkTasksStore[K]) {\n  hkTasksStore[key] = value;\n}\n\nexport function getStoreSnapshot(): IHkTasksStore {\n  return { ...hkTasksStore };\n}\n\nexport default hkTasksStore;\n"],"version":3}