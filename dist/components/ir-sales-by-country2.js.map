{"file":"ir-sales-by-country2.js","mappings":"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","names":["moment"],"sources":["src/services/property.service.ts","src/components/ir-sales-by-country/ir-sales-by-country.css?tag=ir-sales-by-country&encapsulation=scoped","src/components/ir-sales-by-country/ir-sales-by-country.tsx"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\nimport { downloadFile } from '@/utils/utils';\nimport axios from 'axios';\nexport type CountrySalesParams = {\n  AC_ID: number;\n  WINDOW: number;\n  FROM_DATE: string;\n  TO_DATE: string;\n  BOOK_CASE: string;\n  is_export_to_excel: boolean;\n};\nexport class PropertyService {\n  public async getExposedProperty(params: {\n    id: number | null;\n    language: string;\n    is_backend?: boolean;\n    aname?: string;\n    include_units_hk_status?: boolean;\n    include_sales_rate_plans?: boolean;\n  }) {\n    try {\n      const { data } = await axios.post(`/Get_Exposed_Property`, params);\n      if (data.ExceptionMsg !== '') {\n        throw new Error(data.ExceptionMsg);\n      }\n      const results = data.My_Result;\n      calendar_data.adultChildConstraints = results.adult_child_constraints;\n      calendar_data.allowedBookingSources = results.allowed_booking_sources;\n      calendar_data.allowed_payment_methods = results.allowed_payment_methods;\n      calendar_data.currency = results.currency;\n      calendar_data.is_vacation_rental = results.is_vacation_rental;\n      calendar_data.pickup_service = results.pickup_service;\n      calendar_data.max_nights = results.max_nights;\n      calendar_data.roomsInfo = results.roomtypes;\n      calendar_data.taxes = results.taxes;\n      calendar_data.id = results.id;\n      calendar_data.country = results.country;\n      calendar_data.name = results.name;\n      calendar_data.is_automatic_check_in_out = results.is_automatic_check_in_out;\n      calendar_data.tax_statement = results.tax_statement;\n      calendar_data.is_frontdesk_enabled = results.is_frontdesk_enabled;\n      calendar_data.is_pms_enabled = results.is_pms_enabled;\n      const spitTime = results?.time_constraints?.check_out_till?.split(':');\n      calendar_data.checkin_checkout_hours = {\n        offset: results.city.gmt_offset,\n        hour: Number(spitTime[0] || 0),\n        minute: Number(spitTime[1] || 0),\n      };\n      return data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n  public async getCountrySales(params: CountrySalesParams) {\n    const { data } = await axios.post('/get_country_sales', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    if (params.is_export_to_excel) {\n      downloadFile(data.My_Params_Get_Country_Sales.Link_excel);\n    }\n    return data.My_Result;\n  }\n}\n",":host {\n  display: block;\n}\n","import Token from '@/models/Token';\nimport { PropertyService } from '@/services/property.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { CountrySalesFilter, MappedCountries, SalesRecord } from './types';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { BookingService } from '@/services/booking.service';\nimport { ICountry } from '@/models/IBooking';\n\n@Component({\n  tag: 'ir-sales-by-country',\n  styleUrl: 'ir-sales-by-country.css',\n  scoped: true,\n})\nexport class IrSalesByCountry {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n\n  @State() isLoading: 'filter' | 'export' | null = null;\n  @State() isPageLoading = true;\n  @State() property_id: number;\n  @State() salesData: SalesRecord[];\n  @State() salesFilters: CountrySalesFilter;\n  @State() countries: MappedCountries = new Map();\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private propertyService = new PropertyService();\n  private bookingService = new BookingService();\n\n  private baseFilters = {\n    FROM_DATE: moment().add(-7, 'days').format('YYYY-MM-DD'),\n    TO_DATE: moment().format('YYYY-MM-DD'),\n    BOOK_CASE: '001',\n    WINDOW: 7,\n    include_previous_year: false,\n  };\n\n  componentWillLoad() {\n    this.salesFilters = this.baseFilters;\n    if (this.ticket) {\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n  private async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.bookingService.getCountries(this.language), this.roomService.fetchLanguage(this.language), this.getCountrySales()];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      const [countries] = await Promise.all(requests);\n      const mappedCountries = new Map();\n      (countries as ICountry[]).map(country => {\n        mappedCountries.set(country.id, {\n          flag: country.flag,\n          name: country.name,\n        });\n      });\n      this.countries = mappedCountries;\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isPageLoading = false;\n    }\n  }\n\n  private async getCountrySales(isExportToExcel = false) {\n    try {\n      const { include_previous_year, ...filterParams } = this.salesFilters;\n      this.isLoading = isExportToExcel ? 'export' : 'filter';\n\n      const currentSales = await this.propertyService.getCountrySales({\n        AC_ID: this.property_id,\n        is_export_to_excel: isExportToExcel,\n        ...filterParams,\n      });\n\n      const shouldFetchPreviousYear = !isExportToExcel && include_previous_year;\n\n      let enrichedSales: SalesRecord[] = [];\n\n      if (shouldFetchPreviousYear) {\n        const previousYearSales = await this.propertyService.getCountrySales({\n          AC_ID: this.property_id,\n          is_export_to_excel: false,\n          ...filterParams,\n          FROM_DATE: moment(filterParams.FROM_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n          TO_DATE: moment(filterParams.TO_DATE).subtract(1, 'year').format('YYYY-MM-DD'),\n        });\n\n        enrichedSales = currentSales.map(current => {\n          const previous = previousYearSales.find(prev => prev.COUNTRY.toLowerCase() === current.COUNTRY.toLowerCase());\n          return {\n            id: v4(),\n            country: current.COUNTRY,\n            country_id: current.COUNTRY_ID,\n            nights: current.NIGHTS,\n            percentage: current.PCT,\n            revenue: current.REVENUE,\n            last_year: previous\n              ? {\n                  country: previous.COUNTRY,\n                  nights: previous.NIGHTS,\n                  country_id: previous.COUNTRY_ID,\n                  percentage: previous.PCT,\n                  revenue: previous.REVENUE,\n                }\n              : null,\n          };\n        });\n      } else {\n        enrichedSales = currentSales.map(record => ({\n          id: v4(),\n          country: record.COUNTRY,\n          country_id: record.COUNTRY_ID,\n          nights: record.NIGHTS,\n          percentage: record.PCT,\n          last_year: null,\n          revenue: record.REVENUE,\n        }));\n      }\n\n      this.salesData = enrichedSales;\n    } catch (error) {\n      console.error('Failed to fetch sales data:', error);\n    } finally {\n      this.isLoading = null;\n    }\n  }\n  render() {\n    if (this.isPageLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Sales by Country</h3>\n            <ir-button\n              size=\"sm\"\n              btn_color=\"outline\"\n              isLoading={this.isLoading === 'export'}\n              text={locales.entries.Lcz_Export}\n              onClickHandler={async e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                await this.getCountrySales(true);\n              }}\n              btnStyle={{ height: '100%' }}\n              iconPosition=\"right\"\n              icon_name=\"file\"\n              icon_style={{ '--icon-size': '14px' }}\n            ></ir-button>\n          </div>\n          <div class=\"d-flex flex-column flex-lg-row mt-1 \" style={{ gap: '1rem' }}>\n            <ir-sales-filters\n              isLoading={this.isLoading === 'filter'}\n              onApplyFilters={e => {\n                e.stopImmediatePropagation();\n                e.stopPropagation();\n                this.salesFilters = e.detail;\n                this.getCountrySales();\n              }}\n              class=\"filters-card\"\n              baseFilters={this.baseFilters}\n            ></ir-sales-filters>\n            <ir-sales-table mappedCountries={this.countries} class=\"card mb-0\" records={this.salesData}></ir-sales-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"version":3}