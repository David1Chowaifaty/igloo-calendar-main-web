{"file":"ir-payment-action2.js","mappings":";;;;;;AAAA,MAAM,kBAAkB,GAAG,27CAA27C,CAAC;AACv9C,8BAAe,kBAAkB;;MCSpB,eAAe;;;;;;IAK1B,MAAM;QACJ,QACE,4DAAK,KAAK,EAAE,oBAAoB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IACvD,4DAAK,KAAK,EAAE,YAAY,IACrB,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,KACrE,4DAAK,KAAK,EAAE,gBAAgB,IAC1B,4DAAK,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAC,4BAA4B,EAAC,OAAO,EAAC,aAAa,IAClF,6DACE,IAAI,EAAC,cAAc,EACnB,CAAC,EAAC,yTAAyT,GAC3T,CACE,EACN,yEAAoB,CAChB,CACP,EACA,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,KACpE,4DAAK,KAAK,EAAE,gBAAgB,IAC1B,4DAAK,KAAK,EAAC,4BAA4B,EAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAC,aAAa,IAClF,6DACE,IAAI,EAAC,cAAc,EACnB,CAAC,EAAC,0LAA0L,GAC5L,CACE,EACN,+DAAOA,KAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAQ,CAC9F,CACP,EACD,4DAAK,KAAK,EAAC,cAAc,IACvB,0DAAG,KAAK,EAAE,eAAe,IAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAK,EAC5G,0DAAG,KAAK,EAAE,aAAa,IAAGA,KAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAK,CACjG,CACF,EAEL,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,KAC5B,4DAAK,KAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,IAClC,kEAAW,SAAS,EAAC,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,IAAI,EAAC,cAAc,EAAE,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAc,CAChI,CACP,CACG,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["moment"],"sources":["src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-action/ir-payment-action.css?tag=ir-payment-action&encapsulation=scoped","src/components/ir-booking-details/ir-payment-details/ir-payment-actions/ir-payment-action/ir-payment-action.tsx"],"sourcesContent":[":host {\n  display: block;\n  --label-col: 6rem; /* width for icon + status text */\n  --amount-col: 12ch; /* width for currency (tabular) */\n  --payment-action-bg: rgba(255, 73, 97, 10%);\n  --payment-action-border: rgba(255, 73, 97, 40%);\n}\n\n.action-container.overdue {\n  --payment-action-bg: rgba(255, 73, 97, 5%);\n  --payment-action-border: rgba(255, 73, 97, 40%);\n}\n.action-container.future {\n  --payment-action-bg: rgb(30, 159, 242, 5%);\n  --payment-action-border: rgba(30, 159, 242, 40%);\n}\n\n/* One grid per row, but with fixed track sizes so all rows align */\n.action-container {\n  display: grid;\n  grid-template-columns: var(--label-col) 1fr auto; /* fixed | fills | button */\n  align-items: center;\n  gap: 1rem;\n  background: var(--payment-action-bg);\n  padding: 0.5rem 1rem;\n  box-sizing: border-box; /* (fixed the typo) */\n  border: 1px solid var(--payment-action-border);\n  border-radius: 0.25rem;\n}\n\n/* Left chip */\n.overdue_action,\n.future_action {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  border-radius: 0.25rem;\n  min-width: 0; /* donâ€™t overflow the fixed label column */\n}\n.overdue_action {\n  color: #ff4961;\n}\n.future_action {\n  color: #1e9ff2;\n}\n\n/* Middle meta: amount (fixed) + date (flex) */\n.payment-meta {\n  display: grid;\n  grid-template-columns: var(--amount-col) 1fr; /* fixed amount, date fills */\n  align-items: center;\n  column-gap: 1rem;\n  min-width: 0;\n}\n\n/* Numbers line up, date starts at same x every row */\n.amount_action {\n  font-weight: 600;\n  font-variant-numeric: tabular-nums;\n  text-align: right;\n  justify-self: end; /* hugs the right edge of the amount column */\n}\n.date_action {\n  font-weight: 500;\n  white-space: nowrap; /* optional: keep date on one line */\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n/* Tight text */\n.action-container p {\n  margin: 0;\n  padding: 0;\n}\n\n/* Remove any leftover layout from earlier */\n.action-row {\n  display: contents;\n}\n","import { Component, Event, EventEmitter, Prop, h } from '@stencil/core';\nimport { IPaymentAction } from '@/services/payment.service';\nimport { formatAmount } from '@/utils/utils';\nimport moment from 'moment';\n\n@Component({\n  tag: 'ir-payment-action',\n  styleUrl: 'ir-payment-action.css',\n  scoped: true,\n})\nexport class IrPaymentAction {\n  @Prop({ attribute: 'payment-action' }) paymentAction: IPaymentAction;\n\n  @Event() generatePayment: EventEmitter<IPaymentAction>;\n\n  render() {\n    return (\n      <div class={`action-container ${this.paymentAction.type}`}>\n        <div class={'action-row'}>\n          {this.paymentAction.type === 'overdue' && this.paymentAction.amount > 0 && (\n            <div class={'overdue_action'}>\n              <svg height={16} width={16} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"\n                />\n              </svg>\n              <span>Overdue</span>\n            </div>\n          )}\n          {this.paymentAction.type === 'future' && this.paymentAction.amount > 0 && (\n            <div class={'future_action '}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height={16} width={16} viewBox=\"0 0 512 512\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M256 0a256 256 0 1 1 0 512A256 256 0 1 1 256 0zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"\n                />\n              </svg>\n              <span>{moment(new Date(this.paymentAction.due_on)).isSame(new Date()) ? 'Today' : 'Future'}</span>\n            </div>\n          )}\n          <div class=\"payment-meta\">\n            <p class={'amount_action'}>{formatAmount(this.paymentAction.currency.symbol, this.paymentAction.amount)}</p>\n            <p class={'date_action'}>{moment(new Date(this.paymentAction.due_on)).format('ddd, MMM DD YYYY')}</p>\n          </div>\n        </div>\n\n        {this.paymentAction.amount > 0 && (\n          <div style={{ width: 'fit-content' }}>\n            <ir-button btn_color=\"dark\" text={'Pay'} size=\"sm\" onClickHandler={() => this.generatePayment.emit(this.paymentAction)}></ir-button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}