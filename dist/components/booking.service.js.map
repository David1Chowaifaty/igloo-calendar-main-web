{"file":"booking.service.js","mappings":"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","names":[],"sources":["src/services/booking.service.ts"],"sourcesContent":["import { HandleExposedRoomGuestsRequest } from './../models/booking.dto';\r\nimport { DayData } from '../models/DayType';\r\nimport axios from 'axios';\r\nimport { BookingDetails, IBlockUnit, ICountry, IEntries, ISetupEntries, MonthType } from '../models/IBooking';\r\nimport { convertDateToCustomFormat, convertDateToTime, dateToFormattedString, extras } from '../utils/utils';\r\nimport { getMyBookings } from '../utils/booking';\r\nimport { Booking, Day, ExtraService, Guest, IBookingPickupInfo, IPmsLog, RoomInOut } from '../models/booking.dto';\r\nimport booking_store from '@/stores/booking.store';\r\nimport calendar_data from '@/stores/calendar-data';\r\nexport interface IBookingParams {\r\n  bookedByInfoData: any;\r\n  check_in: boolean;\r\n  fromDate: Date;\r\n  toDate: Date;\r\n  guestData;\r\n  totalNights: number;\r\n  source: { code: string; description: string };\r\n  propertyid: number;\r\n  rooms: any[];\r\n  currency: { id: number; code: string };\r\n  pickup_info: IBookingPickupInfo | null;\r\n  bookingNumber?: string;\r\n  defaultGuest?: any;\r\n  arrivalTime?: any;\r\n  pr_id?: number;\r\n  identifier?: string;\r\n  extras: { key: string; value: string }[] | null;\r\n}\r\nexport interface ExposedBookingEvent {\r\n  date: string;\r\n  hour: number;\r\n  id: number;\r\n  minute: number;\r\n  second: number;\r\n  user: string;\r\n  type: string;\r\n}\r\nexport class BookingService {\r\n  public async handleExposedRoomInOut(props: { booking_nbr: string; room_identifier: string; status: RoomInOut['code'] }) {\r\n    const { data } = await axios.post(`/Handle_Exposed_Room_InOut`, props);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data;\r\n  }\r\n  public async getCalendarData(propertyid: number, from_date: string, to_date: string): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Calendar`, {\r\n        propertyid,\r\n        from_date,\r\n        to_date,\r\n        extras,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const months: MonthType[] = data.My_Result.months;\r\n      const customMonths: { daysCount: number; monthName: string }[] = [];\r\n      const myBooking = await getMyBookings(months);\r\n      const days: DayData[] = months\r\n        .map(month => {\r\n          customMonths.push({\r\n            daysCount: month.days.length,\r\n            monthName: month.description,\r\n          });\r\n          return month.days.map(day => ({\r\n            day: convertDateToCustomFormat(day.description, month.description),\r\n            currentDate: convertDateToTime(day.description, month.description),\r\n            dayDisplayName: day.description,\r\n            rate: day.room_types,\r\n            unassigned_units_nbr: day.unassigned_units_nbr,\r\n            occupancy: day.occupancy,\r\n          }));\r\n        })\r\n        .flat();\r\n\r\n      return Promise.resolve({\r\n        ExceptionCode: null,\r\n        ExceptionMsg: '',\r\n        My_Params_Get_Rooming_Data: {\r\n          AC_ID: propertyid,\r\n          FROM: data.My_Params_Get_Exposed_Calendar.from_date,\r\n          TO: data.My_Params_Get_Exposed_Calendar.to_date,\r\n        },\r\n        days,\r\n        months: customMonths,\r\n        myBookings: myBooking,\r\n        defaultMonths: months,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  public async handleExposedRoomGuests(props: HandleExposedRoomGuestsRequest) {\r\n    const { data } = await axios.post('/Handle_Exposed_Room_Guests', props);\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data;\r\n  }\r\n  public async fetchGuest(email: string): Promise<Guest> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Guest`, { email });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async changeExposedBookingStatus(props: { book_nbr: string; status: string }) {\r\n    try {\r\n      const { data } = await axios.post(`/Change_Exposed_Booking_Status`, props);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async fetchPMSLogs(booking_nbr: string | number): Promise<IPmsLog> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_PMS_Logs`, { booking_nbr });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedBookingEvents(booking_nbr: string | number): Promise<ExposedBookingEvent[] | null> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Booking_Events`, { booking_nbr });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async editExposedGuest(guest: Guest, book_nbr: string): Promise<any> {\r\n    try {\r\n      const { data } = await axios.post(`/Edit_Exposed_Guest`, { ...guest, book_nbr });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getBookingAvailability(props: {\r\n    from_date: string;\r\n    to_date: string;\r\n    propertyid: number;\r\n    adultChildCount: { adult: number; child: number };\r\n    language: string;\r\n    room_type_ids: number[];\r\n    room_type_ids_to_update?: number[];\r\n    rate_plan_ids?: number[];\r\n    currency: { id: number; code: string };\r\n    is_in_agent_mode?: boolean;\r\n    agent_id?: string | number;\r\n  }): Promise<BookingDetails> {\r\n    try {\r\n      const { adultChildCount, currency, ...rest } = props;\r\n      const { data } = await axios.post(`/Check_Availability`, {\r\n        ...rest,\r\n        adult_nbr: adultChildCount.adult,\r\n        child_nbr: adultChildCount.child,\r\n        currency_ref: currency.code,\r\n        skip_getting_assignable_units: !calendar_data.is_frontdesk_enabled,\r\n        is_backend: true,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const results = this.modifyRateplans(this.sortRoomTypes(data['My_Result'], { adult_nbr: Number(adultChildCount.adult), child_nbr: Number(adultChildCount.child) }));\r\n      booking_store.roomTypes = [...results];\r\n      booking_store.tax_statement = { message: data.My_Result.tax_statement };\r\n      return results;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private sortRoomTypes(roomTypes, userCriteria: { adult_nbr: number; child_nbr: number }) {\r\n    return roomTypes.sort((a, b) => {\r\n      // Priority to available rooms\r\n      if (a.is_available_to_book && !b.is_available_to_book) return -1;\r\n      if (!a.is_available_to_book && b.is_available_to_book) return 1;\r\n\r\n      // Check for variations where is_calculated is true and amount is 0 or null\r\n      const zeroCalculatedA = a.rateplans?.some(plan => plan.variations?.some(variation => variation.discounted_amount === 0 || variation.discounted_amount === null));\r\n      const zeroCalculatedB = b.rateplans?.some(plan => plan.variations?.some(variation => variation.discounted_amount === 0 || variation.discounted_amount === null));\r\n\r\n      // Prioritize these types to be before inventory 0 but after all available ones\r\n      if (zeroCalculatedA && !zeroCalculatedB) return 1;\r\n      if (!zeroCalculatedA && zeroCalculatedB) return -1;\r\n\r\n      // Check for exact matching variations based on user criteria\r\n      const matchA = a.rateplans?.some(plan =>\r\n        plan.variations?.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr),\r\n      );\r\n      const matchB = b.rateplans?.some(plan =>\r\n        plan.variations?.some(variation => variation.adult_nbr === userCriteria.adult_nbr && variation.child_nbr === userCriteria.child_nbr),\r\n      );\r\n\r\n      if (matchA && !matchB) return -1;\r\n      if (!matchA && matchB) return 1;\r\n\r\n      // Sort by the highest variation amount\r\n      const maxVariationA = Math.max(...a.rateplans.flatMap(plan => plan.variations?.map(variation => variation.discounted_amount ?? 0)));\r\n      const maxVariationB = Math.max(...b.rateplans.flatMap(plan => plan.variations?.map(variation => variation.discounted_amount ?? 0)));\r\n\r\n      if (maxVariationA < maxVariationB) return -1;\r\n      if (maxVariationA > maxVariationB) return 1;\r\n\r\n      return 0;\r\n    });\r\n  }\r\n  private modifyRateplans(roomTypes) {\r\n    return roomTypes?.map(rt => ({ ...rt, rateplans: rt.rateplans?.map(rp => ({ ...rp, variations: this.sortVariations(rp?.variations ?? []) })) }));\r\n  }\r\n  private sortVariations(variations) {\r\n    return variations.sort((a, b) => {\r\n      if (a.adult_nbr !== b.adult_nbr) {\r\n        return b.adult_nbr - a.adult_nbr;\r\n      }\r\n      return b.child_nbr - a.child_nbr;\r\n    });\r\n  }\r\n  public async getCountries(language: string): Promise<ICountry[]> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Countries`, {\r\n        language,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getSetupEntriesByTableName(TBL_NAME: string) {\r\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME`, {\r\n      TBL_NAME,\r\n    });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    const res: IEntries[] = data.My_Result;\r\n    return res;\r\n  }\r\n\r\n  public async fetchSetupEntries(): Promise<ISetupEntries> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`, {\r\n        TBL_NAMES: ['_ARRIVAL_TIME', '_RATE_PRICING_MODE', '_BED_PREFERENCE_TYPE'],\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const res: any[] = data.My_Result;\r\n      return {\r\n        arrivalTime: res.filter(e => e.TBL_NAME === '_ARRIVAL_TIME'),\r\n\r\n        ratePricingMode: res.filter(e => e.TBL_NAME === '_RATE_PRICING_MODE'),\r\n        bedPreferenceType: res.filter(e => e.TBL_NAME === '_BED_PREFERENCE_TYPE'),\r\n      };\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async doBookingExtraService({ booking_nbr, service, is_remove }: { service: ExtraService; booking_nbr: number | string; is_remove: boolean }) {\r\n    const { data } = await axios.post(`/Do_Booking_Extra_Service`, { ...service, booking_nbr, is_remove });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    return data.My_Result;\r\n  }\r\n  public async getBlockedInfo(): Promise<IEntries[]> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_MULTI`, { TBL_NAMES: ['_CALENDAR_BLOCKED_TILL'] });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUserDefaultCountry() {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Country_By_IP`, {\r\n        IP: '',\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async blockUnit(params: IBlockUnit) {\r\n    try {\r\n      const { data } = await axios.post(`/Block_Exposed_Unit`, params);\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      console.log(data);\r\n      return data['My_Params_Block_Exposed_Unit'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async getUserInfo(email: string) {\r\n    try {\r\n      const { data } = await axios.post(`/GET_EXPOSED_GUEST`, {\r\n        email,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedBooking(booking_nbr: string, language: string, withExtras: boolean = true): Promise<Booking> {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Booking`, {\r\n        booking_nbr,\r\n        language,\r\n        extras: withExtras ? extras : null,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data.My_Result;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  private generateDays(from_date: string, to_date: string, amount: number): Day[] {\r\n    const startDate = new Date(from_date);\r\n    const endDate = new Date(to_date);\r\n    const days: Day[] = [];\r\n\r\n    while (startDate < endDate) {\r\n      days.push({\r\n        date: startDate.toISOString().split('T')[0],\r\n        amount: amount,\r\n        cost: null,\r\n      });\r\n      startDate.setDate(startDate.getDate() + 1);\r\n    }\r\n\r\n    return days;\r\n  }\r\n  private calculateTotalRate(rate: number, totalNights: number, isRateModified: boolean, preference: number) {\r\n    if (isRateModified && preference === 2) {\r\n      return +rate;\r\n    }\r\n    return +rate / +totalNights;\r\n  }\r\n  public async fetchExposedGuest(email: string, property_id: number) {\r\n    try {\r\n      const { data } = await axios.post(`/Fetch_Exposed_Guests`, {\r\n        email,\r\n        property_id,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async fetchExposedBookings(booking_nbr: string, property_id: number, from_date: string, to_date: string) {\r\n    try {\r\n      const { data } = await axios.post(`/Fetch_Exposed_Bookings`, {\r\n        booking_nbr,\r\n        property_id,\r\n        from_date,\r\n        to_date,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getPCICardInfoURL(BOOK_NBR: string) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_PCI_Card_Info_URL`, {\r\n        BOOK_NBR,\r\n      });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      return data['My_Result'];\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async doReservation(body: any) {\r\n    const { data } = await axios.post(`/DoReservation`, { ...body, extras: body.extras ? body.extras : extras });\r\n    if (data.ExceptionMsg !== '') {\r\n      throw new Error(data.ExceptionMsg);\r\n    }\r\n    console.log(data['My_Result']);\r\n    return data['My_Result'];\r\n  }\r\n\r\n  public async bookUser({\r\n    bookedByInfoData,\r\n    check_in,\r\n    currency,\r\n    extras = null,\r\n    fromDate,\r\n    guestData,\r\n    pickup_info,\r\n    propertyid,\r\n    rooms,\r\n    source,\r\n    toDate,\r\n    totalNights,\r\n    arrivalTime,\r\n    bookingNumber,\r\n    defaultGuest,\r\n    identifier,\r\n    pr_id,\r\n  }: IBookingParams) {\r\n    try {\r\n      const fromDateStr = dateToFormattedString(fromDate);\r\n      const toDateStr = dateToFormattedString(toDate);\r\n      let guest: any = {\r\n        email: bookedByInfoData.email === '' ? null : bookedByInfoData.email || null,\r\n        first_name: bookedByInfoData.firstName,\r\n        last_name: bookedByInfoData.lastName,\r\n        country_id: bookedByInfoData.countryId === '' ? null : bookedByInfoData.countryId,\r\n        city: null,\r\n        mobile: bookedByInfoData.contactNumber === null ? '' : bookedByInfoData.contactNumber,\r\n        phone_prefix: null,\r\n        address: '',\r\n        dob: null,\r\n        subscribe_to_news_letter: bookedByInfoData.emailGuest || false,\r\n        cci: bookedByInfoData.cardNumber\r\n          ? {\r\n              nbr: bookedByInfoData.cardNumber,\r\n              holder_name: bookedByInfoData.cardHolderName,\r\n              expiry_month: bookedByInfoData.expiryMonth,\r\n              expiry_year: bookedByInfoData.expiryYear,\r\n            }\r\n          : null,\r\n      };\r\n      if (defaultGuest) {\r\n        guest = { ...defaultGuest, email: defaultGuest.email === '' ? null : defaultGuest.email };\r\n      }\r\n      if (bookedByInfoData.id) {\r\n        guest = { ...guest, id: bookedByInfoData.id };\r\n      }\r\n      const body = {\r\n        assign_units: true,\r\n        check_in,\r\n        is_pms: true,\r\n        is_direct: true,\r\n        is_in_loyalty_mode: false,\r\n        promo_key: null,\r\n        extras,\r\n        booking: {\r\n          booking_nbr: bookingNumber || '',\r\n          from_date: fromDateStr,\r\n          to_date: toDateStr,\r\n          remark: bookedByInfoData.message || null,\r\n          property: {\r\n            id: propertyid,\r\n          },\r\n          source,\r\n          currency,\r\n          arrival: { code: arrivalTime ? arrivalTime : bookedByInfoData.selectedArrivalTime },\r\n\r\n          guest,\r\n          rooms: [\r\n            ...guestData.map(data => ({\r\n              identifier: identifier || null,\r\n              roomtype: {\r\n                id: data.roomCategoryId,\r\n                name: data.roomCategoryName,\r\n                physicalrooms: null,\r\n                rateplans: null,\r\n                availabilities: null,\r\n                inventory: data.inventory,\r\n                rate: data.rate / totalNights,\r\n              },\r\n              rateplan: {\r\n                id: data.ratePlanId,\r\n                name: data.ratePlanName,\r\n                rate_restrictions: null,\r\n                variations: null,\r\n                cancelation: data.cancelation,\r\n                guarantee: data.guarantee,\r\n              },\r\n              unit: typeof pr_id === 'undefined' && data.roomId === '' ? null : { id: +pr_id || +data.roomId },\r\n              occupancy: {\r\n                adult_nbr: data.adultCount,\r\n                children_nbr: data.childrenCount,\r\n                infant_nbr: null,\r\n              },\r\n              bed_preference: data.preference,\r\n              from_date: fromDateStr,\r\n              to_date: toDateStr,\r\n              notes: null,\r\n              days: this.generateDays(fromDateStr, toDateStr, this.calculateTotalRate(data.rate, totalNights, data.isRateModified, data.rateType)),\r\n              guest: {\r\n                email: null,\r\n                first_name: data.guestName,\r\n                last_name: null,\r\n                country_id: null,\r\n                city: null,\r\n                mobile: null,\r\n                address: null,\r\n                dob: null,\r\n                subscribe_to_news_letter: null,\r\n              },\r\n            })),\r\n            ...rooms,\r\n          ],\r\n        },\r\n        pickup_info,\r\n      };\r\n      console.log('book user payload', body);\r\n      // const result = await this.doReservation(body);\r\n      // return result;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n"],"version":3}