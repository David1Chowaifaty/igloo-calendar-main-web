{"file":"ir-country-picker2.js","mappings":"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","names":[],"sources":["src/components/ui/ir-country-picker/ir-country-picker.css?tag=ir-country-picker&encapsulation=scoped","src/components/ui/ir-country-picker/ir-country-picker.tsx"],"sourcesContent":[":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n.combobox-menu {\n  max-height: 200px;\n  overflow: auto;\n}\n","import { ICountry } from '@/models/IBooking';\nimport { Component, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-country-picker',\n  styleUrl: 'ir-country-picker.css',\n  scoped: true,\n})\nexport class IrCountryPicker {\n  @Prop() countries: ICountry[] = [];\n  @Prop() country: ICountry;\n  @Prop({ mutable: true }) error: boolean;\n  @Prop() propertyCountry: ICountry;\n  @Prop() label: string;\n  @Prop() testId: string;\n  @Prop() autoValidate: boolean = false;\n\n  @State() inputValue: string;\n  @State() selectedCountry: ICountry;\n  @State() filteredCountries: ICountry[] = [];\n  @State() searching: boolean = false;\n\n  @Event() countryChange: EventEmitter<ICountry>;\n\n  private debounceTimeout: NodeJS.Timeout;\n\n  componentWillLoad() {\n    this.filteredCountries = [...this.countries];\n    if (this.country) {\n      this.inputValue = this.country.name;\n      this.selectedCountry = this.country;\n    }\n  }\n\n  @Watch('country')\n  handleCountryChange(newCountry: ICountry, oldCountry: ICountry) {\n    if (newCountry?.id !== oldCountry?.id) {\n      this.inputValue = this.country?.name;\n      this.selectedCountry = newCountry;\n    }\n  }\n\n  private filterCountries() {\n    if (this.inputValue === '' && this.country) {\n      this.selectCountry(null);\n    }\n    clearTimeout(this.debounceTimeout);\n    this.debounceTimeout = setTimeout(() => {\n      if (!this.inputValue) {\n        this.filteredCountries = [...this.countries];\n      } else {\n        this.filteredCountries = this.countries.filter(c => c.name.toLowerCase().includes(this.inputValue.toLowerCase()));\n      }\n    }, 300);\n  }\n\n  private selectCountry(c: ICountry | null) {\n    this.selectedCountry = c;\n    this.inputValue = c?.name;\n    this.filteredCountries = [...this.countries];\n    this.countryChange.emit(c);\n  }\n  private scrollToSelected() {\n    setTimeout(() => {\n      const dropdownItem = document.querySelector(`.dropdown-item.active`);\n      if (dropdownItem) {\n        dropdownItem.scrollIntoView({ behavior: 'instant', block: 'center' });\n      }\n    }, 100);\n  }\n  render() {\n    const shouldShowPropertyCountry = this.filteredCountries.length > 0 && this.propertyCountry && (!this.searching || (this.searching && this.inputValue === ''));\n    return (\n      <form class=\"dropdown m-0 p-0\">\n        <ir-input-text\n          onTextChange={e => {\n            if (!this.searching) {\n              this.searching = true;\n            }\n            this.inputValue = e.detail;\n            this.filterCountries();\n          }}\n          testId={this.testId}\n          autoValidate={this.autoValidate}\n          label={this.label}\n          error={this.error}\n          placeholder=\"\"\n          class=\"m-0 p-0\"\n          value={this.inputValue}\n          id=\"dropdownMenuCombobox\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          onInputFocus={() => this.scrollToSelected()}\n          onInputBlur={() => {\n            this.searching = false;\n            if (this.filteredCountries.length > 0 && this.inputValue && this.inputValue.trim() !== '') {\n              this.selectCountry(this.filteredCountries[0]);\n            }\n          }}\n        ></ir-input-text>\n\n        <div class=\"dropdown-menu combobox-menu\" aria-labelledby=\"dropdownMenuCombobox\">\n          {shouldShowPropertyCountry && (\n            <Fragment>\n              <button\n                type=\"button\"\n                class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === this.propertyCountry.id ? 'active' : ''}`}\n                onClick={() => {\n                  this.selectCountry(this.propertyCountry);\n                }}\n              >\n                <img src={this.propertyCountry.flag} alt={this.propertyCountry.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n                <p class=\"pl-1 m-0\">{this.propertyCountry.name}</p>\n              </button>\n              <div class=\"dropdown-divider\"></div>\n            </Fragment>\n          )}\n          {this.filteredCountries?.map(c => (\n            <button\n              key={c.id}\n              type=\"button\"\n              class={`dropdown-item d-flex align-items-center ${this.selectedCountry?.id === c.id ? 'active' : ''}`}\n              onClick={() => {\n                this.selectCountry(c);\n              }}\n            >\n              <img src={c.flag} alt={c.name} style={{ aspectRatio: '1', height: '15px', borderRadius: '4px' }} />\n              <p class=\"pl-1 m-0\">{c.name}</p>\n            </button>\n          ))}\n          {this.filteredCountries?.length === 0 && <p class=\"dropdown-item-text\">Invalid Country</p>}\n        </div>\n      </form>\n    );\n  }\n}\n"],"version":3}