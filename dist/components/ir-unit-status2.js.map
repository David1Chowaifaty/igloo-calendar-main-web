{"file":"ir-unit-status2.js","mappings":";;;;AAAA,MAAM,eAAe,GAAG,usBAAusB,CAAC;AAChuB,2BAAe,eAAe;;MCSjB,YAAY;IALzB;;;QAMU,wBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;KA2EzD;IA1EC,iBAAiB;QACf,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAChF;IACD,MAAM,kBAAkB,CAAC,CAAc;QACrC,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,wBAAwB,EAAE,CAAC;QAC7B,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACxB,IAAI,IAAqB,CAAC;QAC1B,IAAI,MAAM,KAAK,EAAE,EAAE;YACjB,IAAI,GAAG;gBACL,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,CAAC,CAAC;aACX,CAAC;SACH;aAAM;YACL,IAAI,GAAG;gBACL,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,CAAC,MAAM;aAChB,CAAC;SACH;QACD,MAAM,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;KAClH;IACD,MAAM;;QACJ,QACE,EAAC,IAAI,qDAAC,KAAK,EAAC,UAAU,IACpB,mFAA4B,EAC5B,4DAAK,KAAK,EAAC,iBAAiB,IAC1B,gEACE,gEACE,6DACE,sEAAe,EACf,2DAAI,KAAK,EAAE,aAAa,WAAW,EACnC,sEAAe,CACZ,CACC,EACR,gEACG,MAAA,kBAAkB,CAAC,WAAW,CAAC,QAAQ,0CAAE,GAAG,CAAC,MAAM;;YAAI,QACtD,UAAI,GAAG,EAAE,MAAM,CAAC,IAAI,IAClB,cACE,WAAK,KAAK,EAAC,kBAAkB,IAC3B,YAAM,KAAK,EAAE,UAAU,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAS,EAC1E,aAAI,MAAM,CAAC,WAAW,CAAK,CACvB,CACH,EACL,cAAK,MAAM,CAAC,IAAI,CAAM,EACtB,cACE,WAAK,KAAK,EAAC,kBAAkB,IAC3B,SAAG,KAAK,EAAE,KAAK,IAAG,MAAM,CAAC,MAAM,CAAK,EACnC,CAAA,MAAA,MAAM,CAAC,eAAe,0CAAE,SAAS,MAChC,eACE;;gBAEE,cAAc,EAAE,KAAK,EACrB,WAAW,EAAC,IAAI,EAChB,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAClD,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC3E,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,sBAAsB,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,aAAa,CAAC;oBAC7E,OAAO;wBACL,IAAI;wBACJ,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE;qBACpB,CAAC;iBACH,CAAC;cACS,CACT,CACP,CACG,CACH,CACF,EACN;SAAA,CAAC,CACI,CACF,CACJ,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/ir-housekeeping/ir-unit-status/ir-unit-status.css?tag=ir-unit-status&encapsulation=scoped","src/components/ir-housekeeping/ir-unit-status/ir-unit-status.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n.circle {\r\n  display: inline-flex;\r\n  border-radius: 50%;\r\n}\r\n.green {\r\n  background: #629a4c;\r\n}\r\n.red {\r\n  background: #ff4961;\r\n}\r\n.orange {\r\n  background: #ff9149;\r\n}\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n/* td,\r\nth {\r\n  font-size: 12px !important;\r\n} */\r\n.black {\r\n  background: #000;\r\n}\r\ntable {\r\n  width: max-content;\r\n}\r\ntd {\r\n  min-width: 140px;\r\n  text-align: center;\r\n}\r\n\r\n.smallcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n.bigcircle {\r\n  height: 7px;\r\n  width: 7px;\r\n}\r\n\r\n.status-container,\r\n.action-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n.status-container p {\r\n  margin: 0;\r\n}\r\n","import { IInspectionMode } from '@/models/housekeeping';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { Component, Host, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-unit-status',\r\n  styleUrl: 'ir-unit-status.css',\r\n  scoped: true,\r\n})\r\nexport class IrUnitStatus {\r\n  private housekeepingService = new HouseKeepingService();\r\n  componentWillLoad() {\r\n    this.housekeepingService.setToken(housekeeping_store.default_properties.token);\r\n  }\r\n  async handleSelectChange(e: CustomEvent) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n    const window = e.detail;\r\n    let mode: IInspectionMode;\r\n    if (window === '') {\r\n      mode = {\r\n        is_active: false,\r\n        window: -1,\r\n      };\r\n    } else {\r\n      mode = {\r\n        is_active: true,\r\n        window: +window,\r\n      };\r\n    }\r\n    await this.housekeepingService.setExposedInspectionMode(housekeeping_store.default_properties.property_id, mode);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host class=\"card p-1\">\r\n        <h4>Room or Unit Status</h4>\r\n        <div class=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Status</th>\r\n                <th class={'text-center'}>Code</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {housekeeping_store.hk_criteria.statuses?.map(status => (\r\n                <tr key={status.code}>\r\n                  <td>\r\n                    <div class=\"status-container\">\r\n                      <span class={`circle ${status.style.shape} ${status.style.color}`}></span>\r\n                      <p>{status.description}</p>\r\n                    </div>\r\n                  </td>\r\n                  <td>{status.code}</td>\r\n                  <td>\r\n                    <div class=\"action-container\">\r\n                      <p class={'m-0'}>{status.action}</p>\r\n                      {status.inspection_mode?.is_active && (\r\n                        <div>\r\n                          <ir-select\r\n                            //selectedValue={status.inspection_mode?.window.toString()}\r\n                            LabelAvailable={false}\r\n                            firstOption=\"No\"\r\n                            onSelectChange={this.handleSelectChange.bind(this)}\r\n                            data={Array.from(Array(status.inspection_mode.window + 1), (_, i) => i).map(i => {\r\n                              const text = i === 0 ? 'Yes on the same day.' : i.toString() + ' day prior.';\r\n                              return {\r\n                                text,\r\n                                value: i.toString(),\r\n                              };\r\n                            })}\r\n                          ></ir-select>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}