{"file":"igloo-calendar2.js","mappings":"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","names":["moment","io"],"sources":["src/utils/Queue/batch-queue.ts","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx"],"sourcesContent":["import { v4 } from 'uuid';\nimport { BatchProcessor, QueueItem, QueueOptions } from './types';\n\nexport class BatchingQueue<T, R = void> {\n  private queue: QueueItem<T>[] = [];\n  private isProcessing = false;\n  private flushTimer: NodeJS.Timeout | null = null;\n  private readonly options: Required<QueueOptions>;\n  private readonly processor: BatchProcessor<T, R>;\n\n  constructor(processor: BatchProcessor<T, R>, options: QueueOptions) {\n    this.processor = processor;\n    this.options = {\n      maxQueueSize: 10000,\n      onError: error => console.error('Queue processing error:', error),\n      onBatchProcessed: () => {},\n      ...options,\n    };\n  }\n  /**\n   * Add a single item to the queue\n   */\n  offer(data: T): boolean {\n    if (this.queue.length >= this.options.maxQueueSize) {\n      return false; // Queue is full\n    }\n\n    const item: QueueItem<T> = {\n      data,\n      timestamp: Date.now(),\n      id: this.generateId(),\n    };\n\n    this.queue.push(item);\n    this.scheduleFlush();\n    return true;\n  }\n\n  /**\n   * Add multiple items to the queue\n   */\n  offerAll(items: T[]): number {\n    let added = 0;\n    for (const item of items) {\n      if (this.offer(item)) {\n        added++;\n      } else {\n        break; // Queue is full\n      }\n    }\n    return added;\n  }\n\n  /**\n   * Get current queue size\n   */\n  size(): number {\n    return this.queue.length;\n  }\n\n  /**\n   * Check if queue is empty\n   */\n  isEmpty(): boolean {\n    return this.queue.length === 0;\n  }\n\n  /**\n   * Force flush the current queue\n   */\n  async flush(): Promise<void> {\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n    await this.processBatch();\n  }\n\n  /**\n   * Clear all items from the queue\n   */\n  clear(): void {\n    this.queue = [];\n    if (this.flushTimer) {\n      clearTimeout(this.flushTimer);\n      this.flushTimer = null;\n    }\n  }\n\n  /**\n   * Shutdown the queue and process remaining items\n   */\n  async shutdown(): Promise<void> {\n    await this.flush();\n  }\n\n  private scheduleFlush(): void {\n    // If we've reached batch size, process immediately\n    if (this.queue.length >= this.options.batchSize) {\n      this.processBatch();\n      return;\n    }\n\n    // If no timer is set, schedule one\n    if (!this.flushTimer) {\n      this.flushTimer = setTimeout(() => {\n        this.processBatch();\n      }, this.options.flushInterval);\n    }\n  }\n\n  private async processBatch(): Promise<void> {\n    if (this.isProcessing || this.queue.length === 0) {\n      return;\n    }\n\n    this.isProcessing = true;\n\n    try {\n      // Extract batch to process\n      const batchSize = Math.min(this.options.batchSize, this.queue.length);\n      const batch = this.queue.splice(0, batchSize);\n      const data = batch.map(item => item.data);\n\n      const startTime = Date.now();\n\n      // Process the batch\n      await this.processor(data);\n\n      const processingTime = Date.now() - startTime;\n      this.options.onBatchProcessed(batchSize, processingTime);\n\n      // Clear the timer since we've processed\n      if (this.flushTimer) {\n        clearTimeout(this.flushTimer);\n        this.flushTimer = null;\n      }\n\n      // If there are more items, schedule next batch\n      if (this.queue.length > 0) {\n        this.scheduleFlush();\n      }\n    } catch (error) {\n      this.options.onError(error as Error);\n    } finally {\n      this.isProcessing = false;\n    }\n  }\n\n  private generateId(): string {\n    return v4();\n  }\n}\n",":host {\n  display: block;\n  position: relative;\n  background-color: #ffffff;\n  height: 100%;\n  text-align: center;\n}\n\n.igl-calendar {\n  display: grid;\n  grid-template-columns: 1fr;\n  height: 100%;\n}\n\n/* .calendarScrollContainer div {\n  position: relative;\n} */\n\n.calendarScrollContainer {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  white-space: nowrap;\n  border-left: 2px solid grey;\n}\n\n.showToBeAssigned,\n.showLegend {\n  grid-template-columns: 330px 1fr;\n}\n\n#calendarContainer {\n  position: absolute;\n}\n\n/* div {\n  position: relative;\n} */\n\n.legendContainer,\n.tobeAssignedContainer {\n  display: none;\n  height: 100%;\n  overflow-y: auto;\n  padding-left: 0.5em !important;\n  padding-right: 0.5em !important;\n}\n\n.showToBeAssigned .tobeAssignedContainer {\n  display: block;\n}\n\n.showLegend .legendContainer {\n  display: block;\n}\n\n.tobeBooked {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-align: left;\n}\n","import { Component, Element, Event, EventEmitter, Fragment, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { RoomService } from '@/services/room.service';\nimport { BookingService } from '@/services/booking.service';\nimport { addTwoMonthToDate, computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors, getNextDay, isBlockUnit } from '@/utils/utils';\nimport io, { Socket } from 'socket.io-client';\nimport { EventsService } from '@/services/events.service';\nimport { ICountry, RoomBlockDetails, RoomBookingDetails, RoomDetail, bookingReasons } from '@/models/IBooking';\nimport moment, { Moment } from 'moment';\nimport { ToBeAssignedService } from '@/services/toBeAssigned.service';\nimport { bookingStatus, calculateDaysBetweenDates, formatName, getPrivateNote, getRoomStatus, transformNewBLockedRooms, transformNewBooking } from '@/utils/booking';\nimport { IRoomNightsData, IRoomNightsDataEventPayload, CalendarModalEvent } from '@/models/property-types';\nimport { TIglBookPropertyPayload } from '@/models/igl-book-property';\nimport calendar_dates, { addCleaningTasks, addRoomForCleaning, cleanRoom } from '@/stores/calendar-dates.store';\nimport locales from '@/stores/locales.store';\nimport calendar_data from '@/stores/calendar-data';\nimport { addUnassignedDates, handleUnAssignedDatesChange, removeUnassignedDates } from '@/stores/unassigned_dates.store';\nimport Token from '@/models/Token';\nimport { RoomHkStatus, RoomType } from '@/models/booking.dto';\nimport { BatchingQueue } from '@/utils/Queue';\nimport { HKSkipParams, HouseKeepingService } from '@/services/housekeeping.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import Auth from '@/models/Auth';\nexport interface UnitHkStatusChangePayload {\n  PR_ID: number;\n  ROOM_CATEGORY_ID: number;\n  NAME: string;\n  DESCRIPTION: string;\n  ENTRY_USER_ID: number;\n  ENTRY_DATE: string;\n  OWNER_ID: number;\n  IS_ACTIVE: boolean;\n  HKS_CODE: RoomHkStatus;\n  HKM_ID: number;\n  CHECKLIST: null;\n  My_Room_category: null;\n  My_Hkm: null;\n}\nexport type SalesBatchPayload = { rate_plan_id: number; night: string; is_available_to_book: boolean };\nexport type AvailabilityBatchPayload = { room_type_id: number; date: string; availability: number };\nexport type CalendarSidebarState = {\n  type: 'room-guests' | 'booking-details' | 'add-days' | 'bulk-blocks';\n  payload: any;\n};\n@Component({\n  tag: 'igloo-calendar',\n  styleUrl: 'igloo-calendar.css',\n  scoped: true,\n})\nexport class IglooCalendar {\n  @Prop() propertyid: number;\n  @Prop({ mutable: true }) from_date: string;\n  @Prop() to_date: string;\n  @Prop() language: string;\n  @Prop() loadingMessage: string;\n  @Prop() currencyName: string;\n  @Prop() ticket: string = '';\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @Element() private element: HTMLElement;\n\n  @State() calendarData: { [key: string]: any } = new Object();\n  @State() property_id: number;\n  @State() days: { [key: string]: any }[] = new Array();\n  @State() scrollViewDragging: boolean = false;\n  @State() dialogData: CalendarModalEvent | null = null;\n  @State() bookingItem: TIglBookPropertyPayload | null = null;\n  @State() editBookingItem: TIglBookPropertyPayload | null = null;\n  @State() showLegend: boolean = false;\n  @State() showPaymentDetails: boolean = false;\n  @State() showToBeAssigned: boolean = false;\n  @State() unassignedDates = {};\n  @State() roomNightsData: IRoomNightsData | null = null;\n  @State() renderAgain = false;\n  @State() showBookProperty: boolean = false;\n  @State() highlightedDate: string;\n  @State() calDates: { from: string; to: string };\n  @State() isAuthenticated = false;\n  @State() calendarSidebarState: CalendarSidebarState;\n\n  @Event({ bubbles: true, composed: true })\n  dragOverHighlightElement: EventEmitter;\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\n  @Event() calculateUnassignedDates: EventEmitter;\n  @Event({ bubbles: true, composed: true })\n  reduceAvailableUnitEvent: EventEmitter<{ fromDate: string; toDate: string }>;\n  @Event({ bubbles: true }) revertBooking: EventEmitter;\n  @Event() openCalendarSidebar: EventEmitter<CalendarSidebarState>;\n  @Event() showRoomNightsDialog: EventEmitter<IRoomNightsData>;\n\n  private bookingService: BookingService = new BookingService();\n  private roomService: RoomService = new RoomService();\n  private eventsService = new EventsService();\n  private toBeAssignedService = new ToBeAssignedService();\n  private housekeepingService = new HouseKeepingService();\n  // private auth = new Auth();\n  private countries: ICountry[] = [];\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\n  private scrollContainer: HTMLElement;\n  private today: String = '';\n  private reachedEndOfCalendar = false;\n\n  private socket: Socket;\n  private token = new Token();\n  private calendarModalEl: HTMLIrModalElement;\n\n  private salesQueue = new BatchingQueue<SalesBatchPayload[]>(this.processSalesBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Sales Update Error:', e),\n  });\n\n  private availabilityQueue = new BatchingQueue<AvailabilityBatchPayload[]>(this.processAvailabilityBatch.bind(this), {\n    batchSize: 50,\n    flushInterval: 1000,\n    maxQueueSize: 5000,\n    onError: e => console.error('Batch Availability Update Error:', e),\n  });\n\n  private roomTypeIdsCache: Map<number, { id: number; index: number } | 'skip'> = new Map();\n  private tasksEndDate: string;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    this.init();\n  }\n  componentDidLoad() {\n    this.scrollToElement(this.today);\n  }\n  @Listen('deleteButton')\n  async handleDeleteEvent(ev: CustomEvent) {\n    try {\n      ev.stopImmediatePropagation();\n      ev.preventDefault();\n      await this.eventsService.deleteEvent(ev.detail);\n    } catch (error) {\n      //toastr.error(error);\n    }\n  }\n  @Listen('openCalendarSidebar', { target: 'window' })\n  async handleCalendarSidebarEvents(ev: CustomEvent) {\n    console.log('hit 🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥');\n    ev.stopImmediatePropagation();\n    ev.stopPropagation();\n    this.calendarSidebarState = ev.detail;\n  }\n  @Listen('scrollPageToRoom', { target: 'window' })\n  scrollPageToRoom(event: CustomEvent) {\n    let targetScrollClass = event.detail.refClass;\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\n    if (gotoRoom) {\n      this.scrollContainer.scrollTo({ top: 0 });\n      const gotoRect = gotoRoom.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\n      });\n    }\n  }\n  @Listen('showDialog')\n  handleShowDialog(event: CustomEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    this.dialogData = event.detail;\n    this.calendarModalEl?.openModal();\n  }\n  @Listen('showRoomNightsDialog')\n  handleShowRoomNightsDialog(event: CustomEvent<IRoomNightsData>) {\n    this.roomNightsData = event.detail;\n  }\n  @Listen('addBookingDatasEvent')\n  handleBookingDatasChange(event: CustomEvent) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    let bookings = [...this.calendarData.bookingEvents];\n    bookings = bookings.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\n    bookings.push(...event.detail.filter(ev => ev.STATUS === 'PENDING-CONFIRMATION'));\n    this.updateBookingEventsDateRange(event.detail);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n  }\n  @Listen('updateBookingEvent')\n  handleUpdateBookingEvent(e: CustomEvent) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    const newBookingEvent = e.detail;\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (newBookingEvent.ID === event.ID) {\n          return newBookingEvent;\n        }\n        return event;\n      }),\n    };\n  }\n  @Listen('showBookingPopup', { target: 'window' })\n  showBookingPopupEventDataHandler(event: CustomEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.onOptionSelect(event);\n    //console.log(\"show booking event\", event);\n  }\n\n  @Listen('updateEventData')\n  updateEventDataHandler(event: CustomEvent) {\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\n    if (bookedData && event.detail && event.detail.data) {\n      Object.entries(event.detail.data).forEach(([key, value]) => {\n        bookedData[key] = value;\n      });\n    }\n  }\n\n  @Listen('dragOverEventData')\n  dragOverEventDataHandler(event: CustomEvent) {\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\n      this.visibleCalendarCells = { x: [], y: [] };\n\n      containerDays.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.x.push({\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\n          width: htmlElement.offsetWidth,\n          id: htmlElement.getAttribute('data-day'),\n        });\n      });\n\n      containerRooms.forEach(element => {\n        const htmlElement = element as HTMLElement;\n        this.visibleCalendarCells.y.push({\n          top: htmlElement.offsetTop,\n          height: htmlElement.offsetHeight,\n          id: htmlElement.getAttribute('data-room'),\n        });\n      });\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER') {\n      this.highlightDragOver(true, event.detail.data);\n    } else if (event.detail.id === 'DRAG_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\n      this.highlightDragOver(false, event.detail.data);\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  private init() {\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.initializeApp();\n    }\n    this.calDates = {\n      from: this.from_date,\n      to: this.to_date,\n    };\n    handleUnAssignedDatesChange('unassigned_dates', newValue => {\n      if (Object.keys(newValue).length === 0 && this.highlightedDate !== '') {\n        this.highlightedDate = '';\n      }\n    });\n  }\n  private renderModalBody() {\n    switch (this.dialogData?.reason) {\n      case 'checkin': {\n        return `Are you sure you want to Check In this unit?`;\n      }\n      case 'checkout': {\n        return 'Are you sure you want to Check Out this unit?';\n      }\n      case 'reallocate':\n        return this.dialogData?.description || '';\n      case 'stretch':\n        return 'Warning ';\n      default:\n        return 'Unknown modal content';\n    }\n  }\n  private setUpCalendarData(roomResp, bookingResp) {\n    this.calendarData.currency = roomResp['My_Result'].currency;\n    this.calendarData.allowedBookingSources = roomResp['My_Result'].allowed_booking_sources;\n    this.calendarData.adultChildConstraints = roomResp['My_Result'].adult_child_constraints;\n    this.calendarData.legendData = this.getLegendData(roomResp);\n    this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\n    this.calendarData.from_date = bookingResp.My_Params_Get_Rooming_Data.FROM;\n    this.calendarData.to_date = bookingResp.My_Params_Get_Rooming_Data.TO;\n    this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\n    this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\n    this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\n    let bookings = bookingResp.myBookings || [];\n    bookings = bookings.filter(bookingEvent => {\n      const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n      const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n      return !toDate.isSame(fromDate);\n    });\n    this.calendarData.bookingEvents = bookings;\n\n    this.calendarData.toBeAssignedEvents = [];\n  }\n\n  async initializeApp() {\n    try {\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n          include_sales_rate_plans: true,\n        });\n        roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [\n        this.bookingService.getCalendarData(propertyId, this.from_date, this.to_date),\n        this.bookingService.getCountries(this.language),\n        this.roomService.fetchLanguage(this.language),\n        this.housekeepingService.getExposedHKSetup(this.property_id),\n      ];\n\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n            include_sales_rate_plans: true,\n          }),\n        );\n      }\n\n      const results = await Promise.all(requests);\n      // this.tasksEndDate=housekeeping_store?.hk_criteria?.cleaning_periods[housekeeping_store?.hk_criteria?.cleaning_periods.length - 1].code\n      this.tasksEndDate = moment().add(30, 'days').format('YYYY-MM-DD');\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n      if (!roomResp) {\n        roomResp = results[results.length - 1];\n      }\n      const [bookingResp, countries] = results as any;\n      calendar_dates.days = bookingResp.days;\n      calendar_dates.months = bookingResp.months;\n      this.setRoomsData(roomResp);\n      this.countries = countries;\n      this.setUpCalendarData(roomResp, bookingResp);\n      let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\n      this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\n      this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\n      this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\n      this.today = this.transformDateForScroll(new Date());\n      let startingDay: Date = new Date(this.calendarData.startingDate);\n      startingDay.setHours(0, 0, 0, 0);\n      this.days = bookingResp.days;\n      this.calendarData.days = this.days;\n      this.calendarData.monthsInfo = bookingResp.months;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      calendar_dates.toDate = this.calendarData.to_date;\n\n      setTimeout(() => {\n        this.scrollToElement(this.today);\n      }, 200);\n      if (!this.calendarData.is_vacation_rental) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, this.from_date, this.to_date);\n        this.unassignedDates = { fromDate: this.from_date, toDate: this.to_date, data: { ...this.unassignedDates, ...data } };\n        this.calendarData = { ...this.calendarData, unassignedDates: data };\n        addUnassignedDates(data);\n      }\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.error('Initializing Calendar Error', error);\n    }\n  }\n  private async getHousekeepingTasks({ from_date, to_date }: { from_date: string; to_date: string }) {\n    const { tasks } = await this.housekeepingService.getHkTasks({\n      property_id: this.property_id,\n      from_date,\n      to_date,\n      housekeepers: [],\n      cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n      dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n      highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n    });\n    addCleaningTasks(tasks);\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result: any;\n    if (['DELETE_CALENDAR_POOL', 'GET_UNASSIGNED_DATES'].includes(REASON)) {\n      result = PAYLOAD;\n    } else {\n      result = JSON.parse(PAYLOAD);\n    }\n    console.log({ [REASON]: result });\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n      DORESERVATION: this.handleDoReservation,\n      BLOCK_EXPOSED_UNIT: this.handleBlockExposedUnit,\n      ASSIGN_EXPOSED_ROOM: this.handleAssignExposedRoom,\n      REALLOCATE_EXPOSED_ROOM_BLOCK: this.handleReallocateExposedRoomBlock,\n      DELETE_CALENDAR_POOL: this.handleDeleteCalendarPool,\n      GET_UNASSIGNED_DATES: this.handleGetUnassignedDates,\n      UPDATE_CALENDAR_AVAILABILITY: r => this.availabilityQueue.offer(r),\n      CHANGE_IN_DUE_AMOUNT: this.handleChangeInDueAmount,\n      CHANGE_IN_BOOK_STATUS: this.handleChangeInBookStatus,\n      NON_TECHNICAL_CHANGE_IN_BOOKING: this.handleNonTechnicalChangeInBooking,\n      ROOM_STATUS_CHANGED: this.handleRoomStatusChanged,\n      UNIT_HK_STATUS_CHANGED: this.handleUnitHKStatusChanged,\n      SHARING_PERSONS_UPDATED: this.handleSharingPersonsUpdated,\n      ROOM_TYPE_CLOSE: r => this.salesQueue.offer({ ...r, is_available_to_book: false }),\n      ROOM_TYPE_OPEN: r => this.salesQueue.offer({ ...r, is_available_to_book: true }),\n      HK_SKIP: this.handleHkSkip,\n    };\n\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n  private handleSharingPersonsUpdated(result: any) {\n    console.log('sharing persons updated', result);\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.identifier) {\n            const mainGuest = result.guests?.find(p => p.is_main);\n            return { ...e, NAME: formatName(mainGuest.first_name, mainGuest.last_name), ROOM_INFO: { ...e.ROOM_INFO, sharing_persons: result.guests } };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleRoomStatusChanged(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: [\n        ...this.calendarData.bookingEvents.map(e => {\n          if (e.IDENTIFIER === result.room_identifier) {\n            const STATUS = getRoomStatus({\n              from_date: e.FROM_DATE,\n              to_date: e.TO_DATE,\n              in_out: { ...e.ROOM_INFO.in_out, code: result.status },\n              status_code: e.BASE_STATUS_CODE,\n            });\n            return {\n              ...e,\n              CHECKIN: result.status === '001',\n              CHECKOUT: result.status === '002',\n              STATUS,\n            };\n          }\n          return e;\n        }),\n      ],\n    };\n  }\n  private handleHkSkip(result: HKSkipParams) {\n    cleanRoom({ date: result.DATE, unitId: result.PR_ID });\n  }\n  private handleUnitHKStatusChanged(result: UnitHkStatusChangePayload) {\n    console.log('hk unit change', result);\n    const updatedRooms: RoomType[] = [...this.calendarData.roomsInfo];\n    const changedRoomTypeIdx = updatedRooms.findIndex((roomType: RoomType) => roomType.id === result.ROOM_CATEGORY_ID);\n    if (changedRoomTypeIdx !== -1) {\n      const changedRoomType = { ...updatedRooms[changedRoomTypeIdx] };\n      const changedPhysicalRoomIdx = changedRoomType.physicalrooms.findIndex(room => room.id === result.PR_ID);\n      if (changedPhysicalRoomIdx !== -1) {\n        const updatedPhysicalRooms = [...changedRoomType.physicalrooms];\n        const targetPhysicalRoom = { ...updatedPhysicalRooms[changedPhysicalRoomIdx] };\n        targetPhysicalRoom.hk_status = result.HKS_CODE;\n        updatedPhysicalRooms[changedPhysicalRoomIdx] = targetPhysicalRoom;\n        changedRoomType.physicalrooms = updatedPhysicalRooms;\n        updatedRooms[changedRoomTypeIdx] = changedRoomType;\n        this.calendarData = {\n          ...this.calendarData,\n          roomsInfo: updatedRooms,\n        };\n      }\n    }\n    const roomPayload = { date: moment().format('YYYY-MM-DD'), unitId: result.PR_ID };\n    if (result.HKS_CODE === '002') {\n      addRoomForCleaning(roomPayload);\n    } else {\n      cleanRoom(roomPayload);\n    }\n  }\n  private async handleDoReservation(result: any) {\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleBlockExposedUnit(result: any) {\n    const transformedBooking = [await transformNewBLockedRooms(result)];\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleAssignExposedRoom(result: any) {\n    console.log(result);\n    const transformedBooking = transformNewBooking(result);\n    this.AddOrUpdateRoomBookings(transformedBooking);\n  }\n\n  private async handleReallocateExposedRoomBlock(result: any) {\n    await this.handleBlockExposedUnit(result);\n  }\n\n  private async handleDeleteCalendarPool(result: any) {\n    console.log('delete calendar pool');\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.filter(e => e.POOL !== result),\n    };\n  }\n\n  private async handleGetUnassignedDates(result: any) {\n    const parsedResult = this.parseDateRange(result);\n    if (\n      !this.calendarData.is_vacation_rental &&\n      new Date(parsedResult.FROM_DATE).getTime() >= this.calendarData.startingDate &&\n      new Date(parsedResult.TO_DATE).getTime() <= this.calendarData.endingDate\n    ) {\n      const data = await this.toBeAssignedService.getUnassignedDates(\n        this.property_id,\n        dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        dateToFormattedString(new Date(parsedResult.TO_DATE)),\n      );\n      addUnassignedDates(data);\n      this.unassignedDates = {\n        fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n        toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        data,\n      };\n      if (Object.keys(data).length === 0) {\n        removeUnassignedDates(dateToFormattedString(new Date(parsedResult.FROM_DATE)), dateToFormattedString(new Date(parsedResult.TO_DATE)));\n        this.reduceAvailableUnitEvent.emit({\n          fromDate: dateToFormattedString(new Date(parsedResult.FROM_DATE)),\n          toDate: dateToFormattedString(new Date(parsedResult.TO_DATE)),\n        });\n      }\n    }\n  }\n\n  private parseDateRange(str: string): Record<string, string> {\n    const result: Record<string, string> = {};\n    const pairs = str.split('|');\n\n    pairs.forEach(pair => {\n      const res = pair.split(':');\n      result[res[0]] = res[1];\n    });\n    return result;\n  }\n\n  private handleChangeInDueAmount(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return { ...event, BALANCE: result.due_amount };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleChangeInBookStatus(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (result.pools.includes(event.ID)) {\n          return {\n            ...event,\n            STATUS: event.STATUS !== 'IN-HOUSE' ? bookingStatus[result.status_code] : result.status_code === '001' ? bookingStatus[result.status_code] : 'IN-HOUSE',\n          };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private handleNonTechnicalChangeInBooking(result: any) {\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: this.calendarData.bookingEvents.map(event => {\n        if (event.BOOKING_NUMBER === result.booking_nbr) {\n          return { ...event, PRIVATE_NOTE: getPrivateNote(result.extras) };\n        }\n        return event;\n      }),\n    };\n  }\n\n  private checkBookingAvailability(data) {\n    return this.calendarData.bookingEvents.some(\n      booking => booking.ID === data.ID || (booking.FROM_DATE === data.FROM_DATE && booking.TO_DATE === data.TO_DATE && booking.PR_ID === data.PR_ID),\n    );\n  }\n\n  private updateBookingEventsDateRange(eventData) {\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        // if (calendar_data.checkin_enabled) {\n        bookingEvent.STATUS = getRoomStatus({\n          in_out: bookingEvent.ROOM_INFO?.in_out,\n          from_date: bookingEvent.FROM_DATE,\n          to_date: bookingEvent.TO_DATE,\n          status_code: bookingEvent.BASE_STATUS_CODE,\n        });\n        // } else {\n        //   const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        //   const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        //   if (bookingEvent.STATUS !== 'PENDING') {\n        //     if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n        //       bookingEvent.STATUS = bookingStatus['000'];\n        //     } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n        //       bookingEvent.STATUS = bookingStatus['003'];\n        //     }\n        //   }\n        // }\n      }\n    });\n  }\n  /**\n   * \n   *private updateBookingEventsDateRange(eventData) {\n    const now = moment();\n    eventData.forEach(bookingEvent => {\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\n      bookingEvent.defaultDateRange = {};\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\n\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\n\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\n      if (!isBlockUnit(bookingEvent.STATUS_CODE)) {\n        const toDate = moment(bookingEvent.TO_DATE, 'YYYY-MM-DD');\n        const fromDate = moment(bookingEvent.FROM_DATE, 'YYYY-MM-DD');\n        if (bookingEvent.STATUS !== 'PENDING') {\n          if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n            bookingEvent.STATUS = bookingStatus['000'];\n          } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n            bookingEvent.STATUS = bookingStatus['003'];\n          }\n        }\n      }\n    });\n  }\n   */\n  private processSalesBatch(batch: SalesBatchPayload[]) {\n    const days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const sale of batch) {\n      // 1) find the day index\n      const dayIdx = days.findIndex(d => d.value === sale.night);\n      if (dayIdx === -1) {\n        console.warn(`Couldn't find day ${sale.night}`);\n        continue;\n      }\n\n      // 2) check cache entry\n      let entry = this.roomTypeIdsCache.get(sale.rate_plan_id);\n      if (entry === 'skip') {\n        // previously determined no matching room type for this rate_plan_id\n        continue;\n      }\n\n      // 3) if not cached, look it up and cache it\n      if (!entry) {\n        const rtIdx = days[dayIdx].rate.findIndex(rt => rt.rateplans.some(rp => rp.id === sale.rate_plan_id));\n        if (rtIdx === -1) {\n          this.roomTypeIdsCache.set(sale.rate_plan_id, 'skip');\n          console.warn(`Couldn't find room type for rate plan ${sale.rate_plan_id}`);\n          continue;\n        }\n        const roomType = days[dayIdx].rate[rtIdx];\n        const rpIdx = roomType.rateplans.findIndex(rp => rp.id === sale.rate_plan_id);\n        entry = { id: rtIdx, index: rpIdx };\n        this.roomTypeIdsCache.set(sale.rate_plan_id, entry);\n      }\n\n      // 4) apply cached indices\n      const { id: roomTypeIdx, index: ratePlanIdx } = entry as { id: number; index: number };\n      const roomType = days[dayIdx].rate[roomTypeIdx];\n\n      // 5) update that specific rateplan\n      const updatedRateplans = roomType.rateplans.map((rp, i) => (i === ratePlanIdx ? { ...rp, is_available_to_book: sale.is_available_to_book } : rp));\n      const is_available_to_book = updatedRateplans.some(rp => rp.is_available_to_book);\n      days[dayIdx].rate[roomTypeIdx] = {\n        ...roomType,\n        rateplans: updatedRateplans,\n        // overall room availability = true if any rateplan is bookable\n        is_available_to_book,\n      };\n      //update the disabled cells\n      for (const room of roomType.physicalrooms) {\n        const key = `${room.id}_${days[dayIdx].value}`;\n        disabled_cells.set(key, { disabled: !is_available_to_book, reason: 'stop_sale' });\n      }\n    }\n\n    // 6) write back to the store\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = days;\n  }\n  private processAvailabilityBatch(batch: AvailabilityBatchPayload[]) {\n    let days = [...calendar_dates.days];\n    const disabled_cells = new Map(calendar_dates.disabled_cells);\n    for (const queue of batch) {\n      //find the selected day\n      const index = days.findIndex(day => day.value === queue.date);\n      if (index === -1) {\n        console.warn(`Couldn't find day ${queue.date}`);\n        return;\n      }\n      //find room_type_id\n      const room_type_index = days[index].rate.findIndex(room => room.id === queue.room_type_id);\n      if (room_type_index === -1) {\n        console.warn(`Couldn't find room type ${queue.room_type_id}`);\n        return;\n      }\n      const room_type = days[index].rate[room_type_index];\n      //update the availability\n      room_type.exposed_inventory.rts = queue.availability;\n      // if (queue.availability === 0) {\n      const isClosed = room_type.rateplans.every(rp => !rp.is_available_to_book);\n      for (const room of room_type.physicalrooms) {\n        const key = `${room.id}_${queue.date}`;\n        disabled_cells.set(key, { disabled: queue.availability === 0, reason: isClosed ? 'stop_sale' : 'inventory' });\n      }\n      // }\n    }\n    calendar_dates['disabled_cells'] = new Map(disabled_cells);\n    calendar_dates.days = [...days];\n  }\n\n  private setRoomsData(roomServiceResp) {\n    let roomsData: RoomDetail[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    calendar_data.roomsInfo = roomsData;\n    this.calendarData.roomsInfo = roomsData;\n  }\n\n  private getLegendData(aData) {\n    return aData['My_Result'].calendar_legends;\n  }\n\n  private getDateStr(date, locale = 'default') {\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\n  }\n\n  private scrollToElement(goToDate) {\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\n    const topLeftCell = this.element.querySelector('.topLeftCell');\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\n    if (gotoDay) {\n      this.scrollContainer.scrollTo({ left: 0 });\n      const gotoRect = gotoDay.getBoundingClientRect();\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\n      this.scrollContainer.scrollTo({\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\n      });\n    }\n  }\n  private AddOrUpdateRoomBookings(data: RoomBlockDetails[] | RoomBookingDetails[], pool: string | undefined = undefined) {\n    let bookings = [...this.calendarData.bookingEvents];\n    data.forEach(d => {\n      if (!this.checkBookingAvailability(d)) {\n        bookings = bookings.filter(booking => booking.ID !== d.ID);\n      }\n    });\n    this.updateBookingEventsDateRange(data);\n    if (pool) {\n      bookings = bookings.filter(booking => booking.POOL === pool);\n    }\n    data.forEach(d => {\n      if (!bookings.some(booking => booking.ID === d.ID)) {\n        bookings.push(d);\n      }\n    });\n    this.calendarData = {\n      ...this.calendarData,\n      bookingEvents: bookings,\n    };\n\n    const isDateInBetweenTheLastPeriodDate = (d: any): boolean => {\n      const endDate = moment(this.tasksEndDate, 'YYYY-MM-DD');\n      // return moment(d.FROM_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate) || moment(d.TO_DATE, 'YYYY-MM-DD').isBetween(moment(), endDate);\n      return moment(d.FROM_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date') || moment(d.TO_DATE, 'YYYY-MM-DD').isSameOrBefore(endDate, 'date');\n    };\n\n    if (data.some(isDateInBetweenTheLastPeriodDate)) {\n      this.getHousekeepingTasks({\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: this.tasksEndDate,\n      });\n    }\n  }\n\n  private transformDateForScroll(date: Date) {\n    return moment(date).format('D_M_YYYY');\n  }\n\n  shouldRenderCalendarView() {\n    // console.log(\"rendering...\")\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\n  }\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\n    const opt: { [key: string]: any } = event.detail;\n    const calendarElement = this.element.querySelector('#iglooCalendar');\n    switch (opt.key) {\n      case 'showAssigned':\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.toggle('showToBeAssigned');\n\n        this.showLegend = false;\n        this.showToBeAssigned = true;\n        break;\n      case 'showLegend':\n        calendarElement.classList.remove('showToBeAssigned');\n        calendarElement.classList.remove('showLegend');\n        calendarElement.classList.toggle('showLegend');\n\n        this.showLegend = true;\n        this.showToBeAssigned = false;\n        break;\n      case 'calendar':\n        let dt = new Date();\n        if (opt.data.start !== undefined && opt.data.end !== undefined) {\n          dt = opt.data.start.toDate();\n          this.handleDateSearch(opt.data);\n        } else {\n          //scroll to unassigned dates\n          dt = new Date(opt.data);\n          dt.setDate(dt.getDate() + 1);\n          if (!opt?.noScroll) {\n            this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\n          }\n        }\n        this.highlightedDate = this.transformDateForScroll(dt);\n        break;\n      case 'search':\n        break;\n      case 'bulk':\n        this.calendarSidebarState = {\n          type: 'bulk-blocks',\n          payload: null,\n        };\n        break;\n      case 'add':\n        //console.log('data:', opt.data);\n        if (opt.data.event_type !== 'EDIT_BOOKING') {\n          this.bookingItem = opt.data;\n        } else {\n          this.editBookingItem = opt.data;\n        }\n        break;\n      case 'gotoToday':\n        this.scrollToElement(this.today);\n        break;\n      case 'closeSideMenu':\n        this.closeSideMenu();\n        this.highlightedDate = '';\n        this.showBookProperty = false;\n        break;\n    }\n  }\n\n  private async addDatesToCalendar(fromDate: string, toDate: string) {\n    const [results] = await Promise.all([this.bookingService.getCalendarData(this.property_id, fromDate, toDate)]);\n\n    const newBookings = results.myBookings || [];\n    this.updateBookingEventsDateRange(newBookings);\n    if (new Date(fromDate).getTime() < new Date(this.calendarData.startingDate).getTime()) {\n      this.calendarData.startingDate = new Date(fromDate).getTime();\n      this.calendarData.from_date = fromDate;\n      calendar_dates.fromDate = this.calendarData.from_date;\n      this.days = [...results.days, ...this.days];\n      let newMonths = [...results.months];\n      if (this.calendarData.monthsInfo[0].monthName === results.months[results.months.length - 1].monthName) {\n        this.calendarData.monthsInfo[0].daysCount = this.calendarData.monthsInfo[0].daysCount + results.months[results.months.length - 1].daysCount;\n        newMonths.pop();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE = newBooking.FROM_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            newBooking.FROM_DATE,\n            this.calendarData.bookingEvents[existingBookingIndex].TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...newMonths, ...this.calendarData.monthsInfo],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      if (Math.abs(moment().diff(moment(fromDate, 'YYYY-MM-DD'), 'days')) <= 10) {\n        const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n        this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n        this.unassignedDates = {\n          fromDate,\n          toDate,\n          data,\n        };\n        addUnassignedDates(data);\n      }\n    } else {\n      this.calendarData.endingDate = new Date(toDate).getTime();\n      this.calendarData.to_date = toDate;\n      calendar_dates.toDate = this.calendarData.to_date;\n      let newMonths = [...results.months];\n      this.days = [...this.days, ...results.days];\n      if (this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].monthName === results.months[0].monthName) {\n        this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount =\n          this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount + results.months[0].daysCount;\n        newMonths.shift();\n      }\n      let bookings = JSON.parse(JSON.stringify(newBookings));\n      bookings = bookings.filter(newBooking => {\n        const existingBookingIndex = this.calendarData.bookingEvents.findIndex(event => event.ID === newBooking.ID);\n        if (existingBookingIndex !== -1) {\n          this.calendarData.bookingEvents[existingBookingIndex].TO_DATE = newBooking.TO_DATE;\n          this.calendarData.bookingEvents[existingBookingIndex].NO_OF_DAYS = calculateDaysBetweenDates(\n            this.calendarData.bookingEvents[existingBookingIndex].FROM_DATE,\n            newBooking.TO_DATE,\n          );\n          return false;\n        }\n        return true;\n      });\n      calendar_dates.days = this.days as any;\n      //calendar_dates.months = bookingResp.months;\n      this.calendarData = {\n        ...this.calendarData,\n        days: this.days,\n        monthsInfo: [...this.calendarData.monthsInfo, ...newMonths],\n        bookingEvents: [...this.calendarData.bookingEvents, ...bookings],\n      };\n      const data = await this.toBeAssignedService.getUnassignedDates(this.property_id, fromDate, toDate);\n      this.calendarData.unassignedDates = { ...this.calendarData.unassignedDates, ...data };\n      this.unassignedDates = {\n        fromDate,\n        toDate,\n        data,\n      };\n      addUnassignedDates(data);\n    }\n  }\n  async handleDateSearch(dates: { start: Moment; end: Moment }) {\n    const startDate = moment(dates.start).toDate();\n    const defaultFromDate = moment(this.calDates.from).toDate();\n    const endDate = dates.end.toDate();\n    const defaultToDate = this.calendarData.endingDate;\n    if (startDate.getTime() < new Date(this.calDates.from).getTime()) {\n      await this.addDatesToCalendar(moment(startDate).add(-1, 'days').format('YYYY-MM-DD'), moment(defaultFromDate).add(-1, 'days').format('YYYY-MM-DD'));\n      this.calDates = { ...this.calDates, from: dates.start.add(-1, 'days').format('YYYY-MM-DD') };\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultFromDate.getTime() && startDate.getTime() < defaultToDate && endDate.getTime() < defaultToDate) {\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    } else if (startDate.getTime() > defaultToDate) {\n      const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n      await this.addDatesToCalendar(nextDay, moment(endDate).add(2, 'months').format('YYYY-MM-DD'));\n      this.scrollToElement(this.transformDateForScroll(startDate));\n    }\n  }\n\n  private closeSideMenu() {\n    // const calendarElement = this.element.querySelector('#iglooCalendar');\n    // calendarElement.classList.remove('showToBeAssigned');\n    // calendarElement.classList.remove('showLegend');\n\n    this.showLegend = false;\n    this.showToBeAssigned = false;\n  }\n\n  private scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\n  private dragScrollContent(event: MouseEvent) {\n    this.scrollViewDragging = false;\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\n    if (!isPreventPageScroll && event.buttons === 1) {\n      this.scrollViewDragPos = {\n        left: this.scrollContainer.scrollLeft,\n        top: this.scrollContainer.scrollTop,\n        x: event.clientX,\n        y: event.clientY,\n      };\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\n    }\n  }\n\n  private onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\n    if (event.buttons !== 1) {\n      return;\n    }\n\n    const dx = event.clientX - this.scrollViewDragPos.x;\n    const dy = event.clientY - this.scrollViewDragPos.y;\n\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\n      this.scrollViewDragging = true;\n    }\n  };\n\n  private onScrollContentMoveEndHandler: EventListener = () => {\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\n  };\n\n  private calendarScrolling() {\n    if (this.scrollContainer) {\n      if (this.highlightedDate) {\n        const highlightedElement = document.querySelector(`.day-${this.highlightedDate}`);\n        if (highlightedElement) {\n          const { left, right } = highlightedElement.getBoundingClientRect();\n          const isVisible = left >= 0 && right <= window.innerWidth;\n          if (!isVisible) {\n            this.highlightedDate = '';\n          }\n        }\n      }\n      const containerRect = this.scrollContainer.getBoundingClientRect();\n      let leftSideMenuSize = 170;\n      let maxWidth = containerRect.width - leftSideMenuSize;\n      let leftX = containerRect.x + leftSideMenuSize;\n      let rightX = containerRect.x + containerRect.width;\n\n      let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\n\n      if (cells.length) {\n        cells.map(async (monthContainer: HTMLElement) => {\n          let monthRect = monthContainer.getBoundingClientRect();\n          if (cells.indexOf(monthContainer) === cells.length - 1) {\n            if (monthRect.x + monthRect.width <= rightX && !this.reachedEndOfCalendar) {\n              this.reachedEndOfCalendar = true;\n              //await this.addNextTwoMonthsToCalendar();\n              const nextTwoMonths = addTwoMonthToDate(new Date(this.calendarData.endingDate));\n              const nextDay = getNextDay(new Date(this.calendarData.endingDate));\n              await this.addDatesToCalendar(nextDay, nextTwoMonths);\n              this.reachedEndOfCalendar = false;\n            }\n          }\n          if (monthRect.x + monthRect.width < leftX) {\n            // item end is scrolled outside view, in -x\n          } else if (monthRect.x > rightX) {\n            // item is outside scrollview, in +x\n          } else {\n            let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\n            let marginLeft = 0;\n            let monthWidth = monthRect.width;\n            if (monthRect.x < leftX) {\n              marginLeft = Math.abs(monthRect.x) - leftX;\n              marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\n              monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\n            } else {\n              monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\n            }\n            titleElement.style.marginLeft = marginLeft + 'px';\n            titleElement.style.width = monthWidth + 'px';\n          }\n        });\n      }\n    }\n  }\n\n  private hasAncestorWithClass(element: HTMLElement, className: string): boolean {\n    let currentElement = element;\n    while (currentElement !== null) {\n      if (currentElement.matches(`.${className}`)) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n\n  private async highlightDragOver(hightLightElement, currentPosition) {\n    let xElement, yElement;\n    if (currentPosition) {\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\n    }\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\n    if (hightLightElement && xElement && yElement) {\n      this.dragOverHighlightElement.emit({\n        dragOverElement: yElement.id + '_' + xElement.id,\n      });\n    } else {\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\n    }\n    if (!hightLightElement) {\n      this.moveBookingTo.emit({\n        bookingId: currentPosition.id,\n        fromRoomId: currentPosition.fromRoomId,\n        toRoomId: (yElement && yElement.id) || 'revert',\n        moveToDay: (xElement && xElement.id) || 'revert',\n        pool: currentPosition.pool,\n        from_date: convertDMYToISO(xElement && xElement.id),\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\n      });\n    }\n  }\n  private handleModalConfirm() {\n    // Helper to reset modal state\n    const resetModalState = () => {\n      this.dialogData = null;\n    };\n\n    try {\n      switch (this.dialogData?.reason) {\n        case 'checkin':\n        case 'checkout': {\n          const { bookingNumber, roomIdentifier } = this.dialogData;\n          const status = this.dialogData.reason === 'checkin' ? '001' : '002';\n          this.bookingService.handleExposedRoomInOut({ booking_nbr: bookingNumber, room_identifier: roomIdentifier, status }).finally(resetModalState);\n          if (this.dialogData.reason === 'checkin') {\n            this.openCalendarSidebar.emit({ type: 'room-guests', payload: this.dialogData.sidebarPayload });\n          }\n          break;\n        }\n        case 'stretch':\n          const { reason, ...rest } = this.dialogData;\n          this.showRoomNightsDialog.emit(rest);\n          break;\n        case 'reallocate': {\n          if (!this.dialogData) {\n            console.warn('No dialog data available for reallocation.');\n            return;\n          }\n          const { pool, toRoomId, from_date, to_date } = this.dialogData;\n\n          // Handle room reallocation\n          this.eventsService\n            .reallocateEvent(pool, toRoomId, from_date, to_date)\n            .then(resetModalState)\n            .catch(() => {\n              console.error('Reallocation failed. Reverting booking.');\n              this.revertBooking.emit(pool);\n            })\n            .finally(resetModalState);\n          break;\n        }\n\n        default:\n          resetModalState();\n          break;\n      }\n    } catch (error) {\n      console.error('Error handling modal confirm:', error);\n      resetModalState();\n    }\n  }\n  private handleModalCancel() {\n    if (this.dialogData?.reason === 'reallocate' || this.dialogData.reason === 'stretch') {\n      this.revertBooking.emit(this.dialogData.pool);\n    }\n    this.dialogData = null;\n  }\n  private handleRoomNightsDialogClose(e: CustomEvent<IRoomNightsDataEventPayload>) {\n    if (e.detail.type === 'cancel') {\n      this.revertBooking.emit(this.roomNightsData.pool);\n    }\n    this.roomNightsData = null;\n  }\n  private handleSideBarToggle(e: CustomEvent<boolean>) {\n    if (e.detail) {\n      this.calendarSidebarState = null;\n      if (this.editBookingItem) {\n        this.editBookingItem = null;\n      }\n      if (this.roomNightsData) {\n        this.revertBooking.emit(this.roomNightsData.pool);\n        this.roomNightsData = null;\n      }\n      if (this.dialogData?.reason === 'reallocate') {\n        this.revertBooking.emit(this.dialogData.pool);\n        this.dialogData = null;\n      }\n    }\n  }\n  private handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  render() {\n    // if (!this.isAuthenticated) {\n    //   return <ir-login onAuthFinish={() => this.auth.setIsAuthenticated(true)}></ir-login>;\n    // }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <div id=\"iglooCalendar\" class={{ 'igl-calendar': true, 'showToBeAssigned': this.showToBeAssigned, 'showLegend': this.showLegend }}>\n          {this.shouldRenderCalendarView() ? (\n            <Fragment data-testid=\"ir-calendar\">\n              {this.showToBeAssigned && (\n                <igl-to-be-assigned\n                  unassignedDatesProp={this.unassignedDates}\n                  to_date={this.to_date}\n                  from_date={this.from_date}\n                  propertyid={this.property_id}\n                  class=\"tobeAssignedContainer\"\n                  calendarData={this.calendarData}\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\n                ></igl-to-be-assigned>\n              )}\n              {this.showLegend && <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>}\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\n                <div id=\"calendarContainer\">\n                  <igl-cal-header\n                    unassignedDates={this.unassignedDates}\n                    to_date={this.to_date}\n                    propertyid={this.property_id}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    highlightedDate={this.highlightedDate}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-header>\n                  <igl-cal-body\n                    propertyId={this.property_id}\n                    language={this.language}\n                    countries={this.countries}\n                    currency={this.calendarData.currency}\n                    today={this.today}\n                    highlightedDate={this.highlightedDate}\n                    isScrollViewDragging={this.scrollViewDragging}\n                    calendarData={this.calendarData}\n                  ></igl-cal-body>\n                  <igl-cal-footer\n                    highlightedDate={this.highlightedDate}\n                    today={this.today}\n                    calendarData={this.calendarData}\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\n                  ></igl-cal-footer>\n                </div>\n              </div>\n            </Fragment>\n          ) : (\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\n          )}\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowedBookingSources}\n            adultChildConstraints={this.calendarData.adultChildConstraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countries={this.countries}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.property_id}\n            bookingData={this.bookingItem}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n        <ir-sidebar\n          onIrSidebarToggle={this.handleSideBarToggle.bind(this)}\n          open={!!this.calendarSidebarState || this.roomNightsData !== null || (this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING')}\n          showCloseButton={false}\n          sidebarStyles={{\n            width: this.calendarSidebarState?.type === 'room-guests' ? '60rem' : this.editBookingItem ? '80rem' : 'var(--sidebar-width,40rem)',\n            background: this.editBookingItem ? '#F2F3F8' : 'white',\n          }}\n        >\n          {this.roomNightsData && (\n            <ir-room-nights\n              slot=\"sidebar-body\"\n              pool={this.roomNightsData.pool}\n              onCloseRoomNightsDialog={this.handleRoomNightsDialogClose.bind(this)}\n              language={this.language}\n              bookingNumber={this.roomNightsData.bookingNumber}\n              identifier={this.roomNightsData.identifier}\n              toDate={this.roomNightsData.to_date}\n              fromDate={this.roomNightsData.from_date}\n              defaultDates={this.roomNightsData.defaultDates}\n              ticket={this.ticket}\n              propertyId={this.property_id}\n            ></ir-room-nights>\n          )}\n          {this.editBookingItem && this.editBookingItem.event_type === 'EDIT_BOOKING' && (\n            <ir-booking-details\n              slot=\"sidebar-body\"\n              hasPrint\n              hasReceipt\n              hasCloseButton\n              onCloseSidebar={() => (this.editBookingItem = null)}\n              is_from_front_desk\n              propertyid={this.property_id}\n              hasRoomEdit\n              hasRoomDelete\n              bookingNumber={this.editBookingItem.BOOKING_NUMBER}\n              ticket={this.ticket}\n              language={this.language}\n              hasRoomAdd\n            ></ir-booking-details>\n          )}\n          {this.calendarSidebarState?.type === 'room-guests' && (\n            <ir-room-guests\n              countries={this.countries}\n              language={this.language}\n              identifier={this.calendarSidebarState?.payload?.identifier}\n              bookingNumber={this.calendarSidebarState?.payload.bookingNumber}\n              roomName={this.calendarSidebarState?.payload?.roomName}\n              totalGuests={this.calendarSidebarState?.payload?.totalGuests}\n              sharedPersons={this.calendarSidebarState?.payload?.sharing_persons}\n              slot=\"sidebar-body\"\n              checkIn={this.calendarSidebarState?.payload?.checkin}\n              onCloseModal={() => (this.calendarSidebarState = null)}\n            ></ir-room-guests>\n          )}\n          {this.calendarSidebarState?.type === 'bulk-blocks' && (\n            <igl-bulk-operations slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-operations>\n            // <igl-bulk-stop-sale slot=\"sidebar-body\" property_id={this.property_id} onCloseModal={() => (this.calendarSidebarState = null)}></igl-bulk-stop-sale>\n          )}\n        </ir-sidebar>\n        <ir-modal\n          ref={el => (this.calendarModalEl = el)}\n          modalTitle={''}\n          rightBtnActive={this.dialogData?.reason === 'reallocate' ? !this.dialogData.hideConfirmButton : true}\n          leftBtnText={locales?.entries?.Lcz_Cancel}\n          rightBtnText={locales?.entries?.Lcz_Confirm}\n          modalBody={this.renderModalBody()}\n          onConfirmModal={this.handleModalConfirm.bind(this)}\n          onCancelModal={this.handleModalCancel.bind(this)}\n        ></ir-modal>\n      </Host>\n    );\n  }\n}\n"],"version":3}