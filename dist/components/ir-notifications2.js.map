{"file":"ir-notifications2.js","mappings":"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","names":[],"sources":["src/components/ir-notifications/ir-notifications.css?tag=ir-notifications&encapsulation=scoped","src/components/ir-notifications/ir-notifications.tsx"],"sourcesContent":[":host {\n  display: block;\n  box-sizing: border-box !important;\n  width: fit-content;\n  height: fit-content;\n}\n.dropdown-menu,\n.dropdown-item,\n.dropdown {\n  box-sizing: border-box !important;\n}\n\n.notification-trigger {\n  width: fit-content;\n}\n.notification-trigger::after {\n  content: attr(data-notifications);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 1.2rem;\n  height: 1.2rem;\n  font-size: 11px;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  background-color: #dc3545;\n  color: white;\n  border-radius: 50%;\n  position: absolute;\n  right: -6px;\n  top: -2px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transform: scale(1);\n  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  animation: badge-pulse 2s infinite;\n}\n\n.notification-trigger:hover::after {\n  transform: scale(1.1);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.notification-trigger[data-notifications='0']::after {\n  display: none;\n}\n\n.notification-trigger.badge-animate::after {\n  animation: badge-bounce 0.6s ease-in-out;\n}\n\n@keyframes badge-pulse {\n  0%,\n  70%,\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  35% {\n    transform: scale(1.05);\n    opacity: 0.9;\n  }\n}\n\n@keyframes badge-bounce {\n  0% {\n    transform: scale(1);\n  }\n  25% {\n    transform: scale(0.8) rotate(-5deg);\n  }\n  50% {\n    transform: scale(1.2) rotate(5deg);\n  }\n  75% {\n    transform: scale(0.95) rotate(-2deg);\n  }\n  100% {\n    transform: scale(1) rotate(0deg);\n  }\n}\n\n@keyframes badge-number-change {\n  0% {\n    transform: scale(1) translateY(0);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.3) translateY(-5px);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(1) translateY(0);\n    opacity: 1;\n  }\n}\n.notifications-dropdown .dropdown-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  cursor: pointer;\n}\n.notifications-dropdown .dropdown-menu {\n  width: max-content !important;\n  min-width: 300px;\n}\n\n.notifications-dropdown .dropdown-item.active,\n.notifications-dropdown .dropdown-item:active,\n.notifications-dropdown .dropdown-item:focus {\n  background-color: var(--blue);\n}\n\n.notification-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n.notification-item p {\n  padding: 0;\n  margin: 0;\n}\n.notification-item:active {\n  background-color: #f4f5fa !important;\n}\n","import { Component, Host, h, Prop, Element, Watch, State, Event, EventEmitter } from '@stencil/core';\nimport { Notification } from './types';\n\n@Component({\n  tag: 'ir-notifications',\n  styleUrl: 'ir-notifications.css',\n  scoped: true,\n})\nexport class IrNotifications {\n  @Element() el: HTMLElement;\n\n  // Make notifications reactive;\n  @Prop({ mutable: true }) notifications: Notification[] = [];\n\n  @State() isOpen: boolean = false;\n\n  @Event() notificationCleared: EventEmitter<Notification>;\n\n  private buttonRef: HTMLIrButtonElement;\n\n  componentDidLoad() {\n    this.updateNotificationBadge();\n    document.addEventListener('click', this.onDocumentClick, true);\n    document.addEventListener('keydown', this.onDocumentKeydown, true);\n  }\n\n  componentDidUpdate() {\n    this.updateNotificationBadge();\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.onDocumentClick, true);\n    document.removeEventListener('keydown', this.onDocumentKeydown, true);\n  }\n\n  @Watch('notifications')\n  handleNotificationCountChange(newValue: Notification[], oldValue: Notification[]) {\n    if (oldValue && newValue.length !== oldValue.length) {\n      this.animateNotificationChange();\n    }\n  }\n\n  private updateNotificationBadge() {\n    if (this.buttonRef) {\n      this.buttonRef.setAttribute('data-notifications', this.notifications.length.toString());\n    }\n  }\n\n  private animateNotificationChange() {\n    if (this.buttonRef) {\n      this.buttonRef.classList.add('badge-animate');\n      setTimeout(() => {\n        this.buttonRef.classList.remove('badge-animate');\n      }, 600);\n    }\n  }\n\n  private dismissNotification(notification: Notification) {\n    this.notificationCleared.emit(notification);\n    this.notifications = this.notifications.filter(n => n.id !== notification.id);\n  }\n\n  private onDocumentClick = (ev: MouseEvent) => {\n    if (!this.isOpen) return;\n    const target = ev.target as Node | null;\n    if (target && !this.el.contains(target)) {\n      this.isOpen = false;\n    }\n  };\n\n  private onDocumentKeydown = (ev: KeyboardEvent) => {\n    if (!this.isOpen) return;\n    if (ev.key === 'Escape' || ev.key === 'Esc') {\n      this.isOpen = false;\n      (this.buttonRef as any)?.focus?.();\n    }\n  };\n\n  render() {\n    return (\n      <Host>\n        <div class={`dropdown notifications-dropdown ${this.isOpen ? 'show' : ''}`}>\n          <ir-button\n            ref={el => (this.buttonRef = el)}\n            variant=\"icon\"\n            icon_name=\"bell\"\n            data-notifications={this.notifications.length.toString()}\n            class=\"notification-trigger\"\n            btn_type=\"button\"\n            data-reference=\"parent\"\n            aria-expanded={String(this.isOpen)}\n            onClickHandler={() => (this.isOpen = !this.isOpen)}\n          ></ir-button>\n\n          <div class={`dropdown-menu dropdown-menu-right `}>\n            {this.notifications.length === 0 ? (\n              <p class=\"m-0 dropdown-header\">All caught up.</p>\n            ) : (\n              this.notifications.map(notification => (\n                <div class={`notification-item dropdown-item ${notification.type}`} key={notification.id}>\n                  <div class=\"notification-content\">\n                    <strong>{notification.title}</strong>\n                    <p>{notification.message}</p>\n                    {notification.link && (\n                      <a href={notification.link.href} target={notification.link.target || '_self'}>\n                        {notification.link.text || 'View more'}\n                      </a>\n                    )}\n                  </div>\n                  {notification.dismissible && (\n                    <ir-button onClickHandler={() => this.dismissNotification(notification)} variant=\"icon\" btn_color=\"light\" icon_name=\"xmark\"></ir-button>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n          {/* </div> */}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}