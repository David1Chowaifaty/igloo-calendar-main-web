{"file":"ir-hk-tasks2.js","mappings":"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","names":["moment","updateTasksStore"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.css?tag=ir-hk-tasks&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-tasks.tsx"],"sourcesContent":[":host {\n  display: block;\n  box-sizing: border-box;\n}\n:host * {\n  box-sizing: border-box;\n}\n\n@media only screen and (min-width: 900px) {\n  /* td {\n    min-width: 140px !important;\n    width: max-content !important;\n  } */\n}\n@media only screen and (max-width: 900px) {\n  /* td {\n    min-width: 100px !important;\n  } */\n  /* .table-container {\n    width: max-content !important;\n  } */\n}\n/*sm*/\n@media (min-width: 640px) {\n}\n\n/*md*/\n@media (min-width: 768px) {\n}\n\n.tasks-view {\n  display: flex;\n  flex-direction: column;\n}\n/*lg*/\n@media (min-width: 1024px) {\n  .tasks-view {\n    flex-direction: row;\n  }\n}\n\n/*xl*/\n@media (min-width: 1280px) {\n}\n\n/*2xl*/\n@media (min-width: 1536px) {\n}\n","import { CleanTaskEvent, IPendingActions } from '@/models/housekeeping';\nimport Token from '@/models/Token';\nimport { HouseKeepingService } from '@/services/housekeeping.service';\nimport { RoomService } from '@/services/room.service';\nimport housekeeping_store from '@/stores/housekeeping.store';\n// import { isRequestPending } from '@/stores/ir-interceptor.store';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, Prop, State, h, Element, Watch, Event, EventEmitter, Listen } from '@stencil/core';\nimport moment from 'moment';\nimport { v4 } from 'uuid';\nimport { TaskFilters } from './types';\nimport { downloadFile } from '@/utils/utils';\nimport { updateTasks as updateTasksStore, updateSelectedTasks, clearSelectedTasks, hkTasksStore, setLoading } from '@/stores/hk-tasks.store';\nimport calendar_data from '@/stores/calendar-data';\n\n@Component({\n  tag: 'ir-hk-tasks',\n  styleUrl: 'ir-hk-tasks.css',\n  scoped: true,\n})\nexport class IrHkTasks {\n  @Element() el: HTMLElement;\n\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() baseUrl: string;\n\n  @State() isLoading = false;\n  @State() isCleaningLoading = false;\n  @State() selectedDuration = '';\n  @State() selectedHouseKeeper = '0';\n  @State() selectedRoom: IPendingActions | null = null;\n  @State() archiveOpened = false;\n  @State() property_id: number;\n  @State() isSidebarOpen: boolean;\n  @State() isApplyFiltersLoading: boolean;\n  @State() filters: TaskFilters;\n  @State() modalCauses: CleanTaskEvent & { cause: 'skip' | 'clean' };\n\n  @Event({ bubbles: true, composed: true }) clearSelectedHkTasks: EventEmitter<void>;\n\n  private hkNameCache: Record<number, string> = {};\n  private roomService = new RoomService();\n  private houseKeepingService = new HouseKeepingService();\n  private token = new Token();\n  private table_sorting: Map<string, 'ASC' | 'DESC'> = new Map();\n  private modal: HTMLIrModalElement;\n\n  componentWillLoad() {\n    if (this.baseUrl) {\n      this.token.setBaseUrl(this.baseUrl);\n    }\n    if (this.ticket !== '') {\n      this.token.setToken(this.ticket);\n      this.init();\n    }\n  }\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.init();\n  }\n\n  @Listen('closeSideBar')\n  handleCloseSidebar(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.isSidebarOpen = false;\n  }\n  @Listen('sortingChanged')\n  handleSortingChanged(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { field, direction } = e.detail;\n    console.log(e.detail);\n    if (field === 'date') {\n      return;\n    }\n    this.table_sorting.set(field, direction);\n  }\n  @Listen('skipSelectedTask')\n  handleSkipSelectedTask(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { task: e.detail, cause: 'skip' };\n    this.modal?.openModal();\n  }\n\n  private async init() {\n    try {\n      this.isLoading = true;\n      setLoading(true);\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.houseKeepingService.getExposedHKSetup(this.property_id), this.roomService.fetchLanguage(this.language)];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      const tasksResult = await this.houseKeepingService.getHkTasks({\n        property_id: this.property_id,\n        from_date: moment().format('YYYY-MM-DD'),\n        to_date: moment().format('YYYY-MM-DD'),\n        housekeepers: [],\n        cleaning_frequency: (calendar_data.cleaning_frequency ?? housekeeping_store?.hk_criteria?.cleaning_frequencies[0])?.code,\n        dusty_window: housekeeping_store?.hk_criteria?.dusty_periods[0]?.code,\n        highlight_window: housekeeping_store?.hk_criteria?.highlight_checkin_options[0]?.code,\n      });\n\n      // updateTaskList();\n      if (tasksResult?.tasks) {\n        this.updateTasks(tasksResult.tasks);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n      setLoading(false);\n    }\n  }\n\n  private buildHousekeeperNameCache() {\n    this.hkNameCache = {};\n    housekeeping_store.hk_criteria?.housekeepers?.forEach(hk => {\n      if (hk.id != null && hk.name != null) {\n        this.hkNameCache[hk.id] = hk.name;\n      }\n    });\n  }\n\n  private updateTasks(tasks: any[]) {\n    this.buildHousekeeperNameCache();\n    updateTasksStore(\n      tasks.map(t => ({\n        ...t,\n        id: v4(),\n        housekeeper: (() => {\n          const name = this.hkNameCache[t.hkm_id];\n          if (name) {\n            return name;\n          }\n          const hkName = housekeeping_store.hk_criteria?.housekeepers?.find(hk => hk.id === t.hkm_id)?.name;\n          this.hkNameCache[t.hkm_id] = hkName;\n          return hkName;\n        })(),\n      })),\n    );\n  }\n  @Listen('headerButtonPress')\n  async handleHeaderButtonPress(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    const { name } = e.detail;\n    switch (name) {\n      case 'cleaned':\n      case 'clean-inspect':\n        this.modal?.openModal();\n        this.modalCauses = {\n          task: null,\n          cause: 'clean',\n          status: name === 'clean-inspect' ? '004' : '001',\n        };\n        break;\n      case 'export':\n        const sortingArray: { key: string; value: string }[] = Array.from(this.table_sorting.entries()).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        console.log(sortingArray);\n        const { url } = await this.fetchTasksWithFilters(true);\n        downloadFile(url);\n        break;\n      case 'archive':\n        this.isSidebarOpen = true;\n        break;\n    }\n  }\n  @Listen('cleanSelectedTask')\n  handleSelectedTaskCleaningEvent(e: CustomEvent<CleanTaskEvent>) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    this.modalCauses = { ...e.detail, cause: 'clean' };\n    this.modal?.openModal();\n  }\n\n  private async handleModalConfirmation(e: CustomEvent) {\n    try {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      if (hkTasksStore.selectedTasks.length === 0) {\n        return;\n      }\n      this.isCleaningLoading = true;\n      if (this.modalCauses?.cause === 'skip') {\n        const { booking_nbr, date, unit } = this.modalCauses.task;\n        await this.houseKeepingService.editHkSkip({\n          BOOK_NBR: booking_nbr,\n          DATE: date,\n          COMMENT: '',\n          HK_SKIP_ID: -1,\n          HK_SKIP_REASON_CODE: '001',\n          PR_ID: unit.id,\n        });\n      } else {\n        await this.houseKeepingService.executeHKAction({\n          actions: hkTasksStore.selectedTasks.map(t => ({\n            description: 'Cleaned',\n            hkm_id: t.hkm_id === 0 ? null : t.hkm_id,\n            unit_id: t.unit.id,\n            booking_nbr: t.booking_nbr,\n            status: this.modalCauses?.status ?? '001',\n          })),\n        });\n      }\n      await this.fetchTasksWithFilters();\n    } finally {\n      clearSelectedTasks();\n      if (this.modalCauses) {\n        this.modalCauses = null;\n      }\n      this.isCleaningLoading = false;\n      // this.clearSelectedTasks.emit();\n      this.modal.closeModal();\n    }\n  }\n\n  private async applyFilters(e: CustomEvent) {\n    try {\n      this.isApplyFiltersLoading = true;\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n      this.filters = { ...e.detail };\n      await this.fetchTasksWithFilters();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isApplyFiltersLoading = false;\n    }\n  }\n\n  private async fetchTasksWithFilters(export_to_excel: boolean = false) {\n    const { cleaning_periods, housekeepers, cleaning_frequencies, dusty_units, highlight_check_ins } = this.filters ?? {};\n\n    const { tasks, url } = await this.houseKeepingService.getHkTasks({\n      housekeepers,\n      cleaning_frequency: cleaning_frequencies?.code,\n      dusty_window: dusty_units?.code,\n      highlight_window: highlight_check_ins?.code,\n      property_id: this.property_id,\n      from_date: moment().format('YYYY-MM-DD'),\n      to_date: cleaning_periods?.code || moment().format('YYYY-MM-DD'),\n      is_export_to_excel: export_to_excel,\n    });\n    console.log(tasks);\n    if (tasks) {\n      this.updateTasks(tasks);\n    }\n    return { tasks, url };\n  }\n\n  render() {\n    if (this.isLoading) {\n      return <ir-loading-screen></ir-loading-screen>;\n    }\n    return (\n      <Host data-testid=\"hk_tasks_base\">\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <section class=\"p-1 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <h3>Housekeeping Tasks</h3>\n          <div class=\"tasks-view \" style={{ gap: '1rem' }}>\n            <ir-tasks-filters\n              isLoading={this.isApplyFiltersLoading}\n              onApplyFilters={e => {\n                this.applyFilters(e);\n              }}\n            ></ir-tasks-filters>\n            <div class=\"d-flex w-100 flex-column\" style={{ gap: '1rem' }}>\n              <ir-tasks-table\n                onRowSelectChange={e => {\n                  e.stopImmediatePropagation();\n                  e.stopPropagation();\n                  updateSelectedTasks(e.detail);\n                }}\n                class=\"flex-grow-1 w-100\"\n              ></ir-tasks-table>\n              {/* <ir-tasks-table-pagination></ir-tasks-table-pagination> */}\n            </div>\n          </div>\n        </section>\n        <ir-modal\n          autoClose={false}\n          ref={el => (this.modal = el)}\n          isLoading={this.isCleaningLoading}\n          onConfirmModal={this.handleModalConfirmation.bind(this)}\n          onCancelModal={() => {\n            if (this.modalCauses) {\n              clearSelectedTasks();\n              this.modalCauses = null;\n            }\n          }}\n          iconAvailable={true}\n          icon=\"ft-alert-triangle danger h1\"\n          leftBtnText={locales.entries.Lcz_Cancel}\n          rightBtnText={locales.entries.Lcz_Confirm}\n          leftBtnColor=\"secondary\"\n          rightBtnColor={'primary'}\n          modalTitle={locales.entries.Lcz_Confirmation}\n          modalBody={\n            this.modalCauses\n              ? this.modalCauses?.cause === 'clean'\n                ? this.modalCauses.task\n                  ? `Update ${this.modalCauses?.task?.unit?.name} to Clean`\n                  : 'Update selected unit(s) to Clean'\n                : 'Skip cleaning and reschedule for tomorrow.'\n              : 'Update selected unit(s) to Clean'\n          }\n        ></ir-modal>\n        <ir-sidebar\n          open={this.isSidebarOpen}\n          id=\"editGuestInfo\"\n          onIrSidebarToggle={e => {\n            e.stopImmediatePropagation();\n            e.stopPropagation();\n            this.isSidebarOpen = false;\n          }}\n          // sidebarStyles={{\n          //   width: '80vw',\n          // }}\n          showCloseButton={false}\n        >\n          {this.isSidebarOpen && <ir-hk-archive ticket={this.token.getToken()} propertyId={this.property_id} slot=\"sidebar-body\"></ir-hk-archive>}\n        </ir-sidebar>\n        {/* <ir-title class=\"d-none d-md-flex\" label={locales.entries.Lcz_HousekeepingTasks} justifyContent=\"space-between\">\n            <ir-button slot=\"title-body\" text={locales.entries.Lcz_Archive} size=\"sm\"></ir-button>\n          </ir-title> */}\n      </Host>\n    );\n  }\n}\n"],"version":3}