{"file":"utils.js","mappings":"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","names":["moment","calendarData"],"sources":["src/stores/calendar-dates.store.ts","src/utils/booking.ts","src/utils/utils.ts"],"sourcesContent":["import { DayData } from '@/models/DayType';\nimport { createStore } from '@stencil/store';\nexport interface ICalendarDates {\n  days: DayData[];\n  disabled_cells: Map<\n    string,\n    {\n      disabled: boolean;\n      reason: 'inventory' | 'stop_sale';\n    }\n  >;\n  months: { daysCount: number; monthName: string }[];\n  fromDate: string;\n  toDate: string;\n}\nconst initialState: ICalendarDates = {\n  days: [],\n  months: [],\n  fromDate: '',\n  toDate: '',\n  disabled_cells: new Map(),\n};\nexport const { state: calendar_dates, onChange: onCalendarDatesChange } = createStore<ICalendarDates>(initialState);\n\nexport default calendar_dates;\n","import { Extras, Room } from './../models/booking.dto';\nimport moment from 'moment';\nimport { PhysicalRoomType, MonthType, CellType, STATUS, RoomBookingDetails, RoomBlockDetails } from '../models/IBooking';\nimport { dateDifference, isBlockUnit } from './utils';\nimport axios from 'axios';\nimport locales from '@/stores/locales.store';\nimport calendar_dates from '@/stores/calendar-dates.store';\nimport calendar_data from '@/stores/calendar-data';\n\nexport async function getMyBookings(months: MonthType[]): Promise<any[]> {\n  const myBookings: any[] = [];\n  const stayStatus = await getStayStatus();\n  for (const month of months) {\n    for (const day of month.days) {\n      for (const room of day.room_types) {\n        assignBooking(room.physicalrooms, myBookings, stayStatus);\n      }\n    }\n  }\n\n  return myBookings;\n}\n\nfunction assignBooking(physicalRoom: PhysicalRoomType[], myBookings: any[], stayStatus: { code: string; value: string }[]): void {\n  for (const room of physicalRoom) {\n    for (const key in room.calendar_cell) {\n      if (room.calendar_cell[key].Is_Available === false) {\n        addOrUpdateBooking(room.calendar_cell[key], myBookings, stayStatus);\n      }\n    }\n  }\n}\nconst status: Record<string, STATUS> = {\n  '004': 'BLOCKED',\n  '003': 'BLOCKED-WITH-DATES',\n  '002': 'BLOCKED',\n};\nexport const bookingStatus: Record<string, STATUS> = {\n  '000': 'IN-HOUSE',\n  '001': 'PENDING-CONFIRMATION',\n  '002': 'CONFIRMED',\n  '003': 'CHECKED-OUT',\n};\n\nexport function formatName(firstName: string | null, lastName: string | null) {\n  if ((firstName === null && lastName === null) || !firstName) return '';\n  if (!!lastName) {\n    return `${firstName ?? ''} ${lastName ?? ''}`;\n  }\n  return firstName;\n}\nasync function getStayStatus() {\n  try {\n    const { data } = await axios.post(`/Get_Setup_Entries_By_TBL_NAME_Multi`, {\n      TBL_NAMES: ['_STAY_STATUS'],\n    });\n    return data.My_Result.map(d => ({\n      code: d.CODE_NAME,\n      value: d.CODE_VALUE_EN,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction renderBlock003Date(date, hour, minute) {\n  const dt = new Date(date);\n  dt.setHours(hour);\n  dt.setMinutes(minute);\n  return `${locales.entries.Lcz_BlockedTill} ${moment(dt).format('MMM DD, HH:mm')}`;\n}\nfunction getDefaultData(cell: CellType, stayStatus: { code: string; value: string }[]): any {\n  if (isBlockUnit(cell.STAY_STATUS_CODE)) {\n    const blockedFromDate = moment(cell.My_Block_Info.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.from_date : cell.DATE;\n    const blockedToDate = moment(cell.My_Block_Info.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.My_Block_Info.to_date : cell.DATE;\n    return {\n      ID: cell.POOL,\n      NOTES: '',\n      BALANCE: '',\n      NAME:\n        cell.My_Block_Info.NOTES !== ''\n          ? cell.My_Block_Info.NOTES\n          : cell.STAY_STATUS_CODE === '003'\n          ? renderBlock003Date(cell.My_Block_Info.BLOCKED_TILL_DATE, cell.My_Block_Info.BLOCKED_TILL_HOUR, cell.My_Block_Info.BLOCKED_TILL_MINUTE)\n          : stayStatus.find(st => st.code === cell.STAY_STATUS_CODE).value || '',\n      RELEASE_AFTER_HOURS: cell.My_Block_Info.DESCRIPTION,\n      PR_ID: cell.My_Block_Info.pr_id,\n      ENTRY_DATE: cell.My_Block_Info.BLOCKED_TILL_DATE,\n      ENTRY_HOUR: cell.My_Block_Info.BLOCKED_TILL_HOUR,\n      ENTRY_MINUTE: cell.My_Block_Info.BLOCKED_TILL_MINUTE,\n      OPTIONAL_REASON: cell.My_Block_Info.NOTES,\n      FROM_DATE: blockedFromDate,\n      TO_DATE: blockedToDate,\n      NO_OF_DAYS: dateDifference(blockedFromDate, blockedToDate),\n      STATUS: status[cell.STAY_STATUS_CODE],\n      POOL: cell.POOL,\n      STATUS_CODE: cell.STAY_STATUS_CODE,\n      OUT_OF_SERVICE: cell.STAY_STATUS_CODE === '004',\n      FROM_DATE_STR: cell.My_Block_Info.format.from_date,\n      TO_DATE_STR: cell.My_Block_Info.format.to_date,\n      defaultDates: {\n        from_date: cell.My_Block_Info.from_date,\n        to_date: cell.My_Block_Info.to_date,\n      },\n    };\n  }\n  // if (cell.booking.booking_nbr === '61249849') {\n  //   console.log('cell');\n  //   console.log(moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE);\n  //   console.log(cell);\n  // }\n  const bookingFromDate = moment(cell.room.from_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.from_date : cell.DATE;\n  const bookingToDate = moment(cell.room.to_date, 'YYYY-MM-DD').isAfter(cell.DATE) ? cell.room.to_date : cell.DATE;\n  const mainGuest = cell.room.sharing_persons?.find(p => p.is_main);\n  return {\n    ID: cell.POOL,\n    FROM_DATE: bookingFromDate,\n    TO_DATE: bookingToDate,\n    NO_OF_DAYS: dateDifference(bookingFromDate, bookingToDate),\n    STATUS: bookingStatus[cell.booking?.status.code],\n    // NAME: formatName(mainGuest?.first_name, mainGuest?.last_name),\n    NAME: formatName(mainGuest?.first_name, mainGuest?.last_name) || formatName(cell?.booking.guest?.first_name, cell?.booking?.guest?.last_name),\n    IDENTIFIER: cell.room.identifier,\n    PR_ID: cell.pr_id,\n    POOL: cell.POOL,\n    BOOKING_NUMBER: cell.booking.booking_nbr,\n    NOTES: cell.booking.is_direct ? cell.booking.remark : null,\n    PRIVATE_NOTE: getPrivateNote(cell.booking.extras),\n    is_direct: cell.booking.is_direct,\n    BALANCE: cell.booking.financial?.due_amount,\n    channel_booking_nbr: cell.booking.channel_booking_nbr,\n    ARRIVAL_TIME: cell.booking.arrival.description,\n    defaultDates: {\n      from_date: cell.room.from_date,\n      to_date: cell.room.to_date,\n    },\n    ///from here\n    ENTRY_DATE: cell.booking.booked_on.date,\n    PHONE_PREFIX: cell.booking.guest.country_phone_prefix,\n    IS_EDITABLE: cell.booking.is_editable,\n    ARRIVAL: cell.booking.arrival,\n    PHONE: cell.booking.guest.mobile_without_prefix ?? '',\n    RATE: cell.room.total,\n    RATE_PLAN: cell.room.rateplan.name,\n    SPLIT_BOOKING: false,\n    RATE_PLAN_ID: cell.room.rateplan.id,\n    RATE_TYPE: cell.room?.roomtype?.id,\n    ADULTS_COUNT: cell.room.occupancy.adult_nbr,\n    CHILDREN_COUNT: cell.room.occupancy.children_nbr,\n    origin: cell.booking.origin,\n    GUEST: cell.booking.guest,\n    ROOMS: cell.booking.rooms,\n    cancelation: cell.room.rateplan.cancelation,\n    guarantee: cell.room.rateplan.guarantee,\n    TOTAL_PRICE: cell.booking.financial?.gross_total,\n    COUNTRY: cell.booking.guest.country_id,\n    FROM_DATE_STR: cell.booking.format.from_date,\n    TO_DATE_STR: cell.booking.format.to_date,\n    adult_child_offering: cell.room.rateplan.selected_variation.adult_child_offering,\n    SOURCE: { code: cell.booking.source.code, description: cell.booking.source.description, tag: cell.booking.source.tag },\n    //TODO:Implement checkin-checkout\n    CHECKIN: cell.room.in_out?.code === '001',\n    CHECKOUT: cell.room.in_out?.code === '002',\n    ROOM_INFO: {\n      occupancy: cell.room.occupancy,\n      sharing_persons: cell.room.sharing_persons,\n      unit: cell.room.unit,\n      in_out: cell.room.in_out,\n    },\n    BASE_STATUS_CODE: cell.booking.status?.code,\n  };\n}\n\n// function updateBookingWithStayData(data: any, cell: CellType): any {\n//   data.NO_OF_DAYS = dateDifference(data.FROM_DATE, cell.DATE);\n//   data.TO_DATE = cell.DATE;\n//   if (cell.booking) {\n//     const { arrival } = cell.booking;\n//     if (cell.booking.booking_nbr === '88231897') {\n//       console.log(data.NO_OF_DAYS, data.TO_DATE);\n//     }\n//     Object.assign(data, {\n//       ARRIVAL_TIME: arrival.description,\n//     });\n//   }\n//   return data;\n// }\nexport function getRoomStatus(params: Pick<Room, 'in_out' | 'from_date' | 'to_date'> & { status_code: string }) {\n  const { in_out, status_code, from_date, to_date } = params;\n  if (calendar_data.checkin_enabled) {\n    if (in_out?.code === '001') {\n      return bookingStatus['000'];\n    } else if (in_out?.code === '002') {\n      if (!calendar_data.is_automatic_check_in_out) {\n        const now = moment();\n        const toDate = moment(to_date, 'YYYY-MM-DD');\n        const fromDate = moment(from_date, 'YYYY-MM-DD');\n        const isNowAfterOrSameAsHotelHour = compareTime(\n          now.toDate(),\n          createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour),\n        );\n        if ((now.isSame(toDate, 'days') && now.isAfter(fromDate, 'days') && isNowAfterOrSameAsHotelHour) || now.isAfter(toDate, 'days')) {\n          return bookingStatus['003'];\n        } else {\n          return bookingStatus['002'];\n        }\n      }\n    }\n    return bookingStatus[status_code || '001'];\n  } else {\n    const now = moment();\n    // const toDate = moment(to_date, 'YYYY-MM-DD');\n    // const fromDate = moment(from_date, 'YYYY-MM-DD');\n    // const isNowAfterOrSameAsHotelHour = compareTime(\n    //   now.toDate(),\n    //   createDateWithOffsetAndHour(calendar_data.checkin_checkout_hours?.offset, calendar_data.checkin_checkout_hours?.hour),\n    // );\n    // if (fromDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) {\n    //   return bookingStatus['000'];\n    // } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n    //   return bookingStatus['000'];\n    // } else if (toDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) {\n    //   return bookingStatus['000'];\n    // } else if ((toDate.isSame(now, 'day') && isNowAfterOrSameAsHotelHour) || toDate.isBefore(now, 'day')) {\n    //   return bookingStatus['003'];\n    // } else {\n    //   return bookingStatus[status_code || '001'];\n    // }\n    const toDate = moment(to_date, 'YYYY-MM-DD');\n    const fromDate = moment(from_date, 'YYYY-MM-DD');\n    if (status_code !== 'PENDING') {\n      if (fromDate.isSame(now, 'day') && now.hour() >= 12) {\n        return bookingStatus['000'];\n      } else if (now.isAfter(fromDate, 'day') && now.isBefore(toDate, 'day')) {\n        return bookingStatus['000'];\n      } else if (toDate.isSame(now, 'day') && now.hour() < 12) {\n        return bookingStatus['000'];\n      } else if ((toDate.isSame(now, 'day') && now.hour() >= 12) || toDate.isBefore(now, 'day')) {\n        return bookingStatus['003'];\n      } else {\n        return bookingStatus[status_code || '001'];\n      }\n    }\n  }\n}\nfunction addOrUpdateBooking(cell: CellType, myBookings: any[], stayStatus: { code: string; value: string }[]): void {\n  const index = myBookings.findIndex(booking => booking.POOL === cell.POOL);\n  if (index === -1) {\n    const newData = getDefaultData(cell, stayStatus);\n    myBookings.push(newData);\n  }\n  //else {\n  //   const updatedData = updateBookingWithStayData(myBookings[index], cell);\n  //   myBookings[index] = updatedData;\n  // }\n}\nexport function getPrivateNote(extras: Extras[] | null) {\n  if (!extras) {\n    return null;\n  }\n  return extras.find(e => e.key === 'private_note')?.value || null;\n}\nexport function transformNewBooking(data: any): RoomBookingDetails[] {\n  let bookings: RoomBookingDetails[] = [];\n  const rooms = data.rooms.filter(room => !!room['assigned_units_pool']);\n  rooms.forEach(room => {\n    const bookingFromDate = moment(room.from_date, 'YYYY-MM-DD').isAfter(moment(calendar_dates.fromDate, 'YYYY-MM-DD')) ? room.from_date : calendar_dates.fromDate;\n    const bookingToDate = room.to_date;\n    if (moment(room.to_date, 'YYYY-MM-DD').isBefore(moment(calendar_dates.fromDate, 'YYYY-MM-DD'))) {\n      return;\n    }\n    const mainGuest = room.sharing_persons?.find(p => p.is_main);\n    // console.log('bookingToDate:', bookingToDate, 'bookingFromDate:', bookingFromDate, 'room from date:', room.from_date, 'room to date', room.to_date);\n    bookings.push({\n      CHECKIN: false,\n      CHECKOUT: false,\n      ID: room['assigned_units_pool'],\n      TO_DATE: bookingToDate,\n      FROM_DATE: bookingFromDate,\n      PRIVATE_NOTE: getPrivateNote(data.extras),\n      NO_OF_DAYS: dateDifference(bookingFromDate, bookingToDate),\n      ARRIVAL: data.arrival,\n      IS_EDITABLE: true,\n      BALANCE: data.financial?.due_amount,\n      STATUS: getRoomStatus({\n        in_out: room.in_out,\n        from_date: room.from_date,\n        to_date: room.to_date,\n        status_code: data.status?.code,\n      }),\n      // NAME: formatName(mainGuest?.first_name, mainGuest.last_name),\n      NAME: formatName(mainGuest?.first_name, mainGuest.last_name) || formatName(room.guest.first_name, room.guest.last_name),\n      PHONE: data.guest.mobile_without_prefix ?? '',\n      ENTRY_DATE: '12-12-2023',\n      PHONE_PREFIX: data.guest.country_phone_prefix,\n      RATE: room.total,\n      RATE_PLAN: room.rateplan.name,\n      SPLIT_BOOKING: false,\n      RATE_PLAN_ID: room.rateplan.id,\n      IDENTIFIER: room.identifier,\n      RATE_TYPE: room.roomtype.id,\n      ADULTS_COUNT: room.occupancy.adult_nbr,\n      CHILDREN_COUNT: room.occupancy.children_nbr,\n      PR_ID: +room.unit.id,\n      POOL: room['assigned_units_pool'],\n      GUEST: data.guest,\n      ROOMS: data.rooms,\n      BOOKING_NUMBER: data.booking_nbr,\n      cancelation: room.rateplan.cancelation,\n      guarantee: room.rateplan.guarantee,\n      TOTAL_PRICE: data.financial?.gross_total,\n      COUNTRY: data.guest.country_id,\n      FROM_DATE_STR: data.format.from_date,\n      TO_DATE_STR: data.format.to_date,\n      adult_child_offering: room.rateplan.selected_variation.adult_child_offering,\n      ARRIVAL_TIME: data.arrival.description,\n      origin: data.origin,\n      channel_booking_nbr: data.channel_booking_nbr,\n      is_direct: data.is_direct,\n      NOTES: data.is_direct ? data.remark : null,\n      SOURCE: { code: data.source.code, description: data.source.description, tag: data.source.tag },\n      ota_notes: data.ota_notes,\n      defaultDates: {\n        from_date: room.from_date,\n        to_date: room.to_date,\n      },\n      ROOM_INFO: {\n        occupancy: room.occupancy,\n        sharing_persons: room.sharing_persons,\n        unit: room.unit,\n        in_out: room.in_out,\n      },\n      BASE_STATUS_CODE: data.status?.code,\n    });\n  });\n  return bookings;\n}\nexport async function transformNewBLockedRooms(data: any): Promise<RoomBlockDetails> {\n  const stayStatus = await getStayStatus();\n  return {\n    ID: data.POOL,\n    NOTES: '',\n    BALANCE: '',\n    NAME:\n      data.NOTES !== ''\n        ? data.NOTES\n        : data.STAY_STATUS_CODE === '003'\n        ? renderBlock003Date(data.BLOCKED_TILL_DATE, data.BLOCKED_TILL_HOUR, data.BLOCKED_TILL_MINUTE)\n        : stayStatus.find(st => st.code === data.STAY_STATUS_CODE).value || '',\n    RELEASE_AFTER_HOURS: data.DESCRIPTION,\n    PR_ID: data.pr_id,\n    ENTRY_DATE: data.BLOCKED_TILL_DATE,\n    ENTRY_HOUR: data.BLOCKED_TILL_HOUR,\n    ENTRY_MINUTE: data.BLOCKED_TILL_MINUTE,\n    OPTIONAL_REASON: data.NOTES,\n    FROM_DATE: data.from_date,\n    TO_DATE: data.to_date,\n    NO_OF_DAYS: calculateDaysBetweenDates(data.from_date, data.to_date),\n    STATUS: status[data.STAY_STATUS_CODE],\n    POOL: data.POOL,\n    STATUS_CODE: data.STAY_STATUS_CODE,\n    OUT_OF_SERVICE: data.STAY_STATUS_CODE === '004',\n    FROM_DATE_STR: data.format.from_date,\n    TO_DATE_STR: data.format.to_date,\n    defaultDates: {\n      from_date: data.from_date,\n      to_date: data.to_date,\n    },\n  };\n}\nexport function calculateDaysBetweenDates(from_date: string, to_date: string) {\n  const startDate = moment(from_date, 'YYYY-MM-DD').startOf('day');\n  const endDate = moment(to_date, 'YYYY-MM-DD').endOf('day');\n  const daysDiff = endDate.diff(startDate, 'days');\n  return daysDiff || 1;\n}\nexport function compareTime(date1: Date, date2: Date) {\n  return date1.getHours() >= date2.getHours() && date1.getMinutes() >= date2.getMinutes();\n}\n/**\n * Creates a Date object for today at the specified hour in a given time zone.\n * The offset is the number of hours that the target time zone is ahead of UTC.\n *\n * For example, if offset = 3 and hour = 9, then the function returns a Date\n * which, when converted to the target time zone, represents 9:00.\n *\n * @param offset - The timezone offset in hours (e.g., 2, 3, etc.)\n * @param hour - The desired hour in the target time zone (0-23)\n * @returns Date object representing the target time (in UTC)\n */\nexport function createDateWithOffsetAndHour(offset: number, hour: number): Date {\n  const now = new Date();\n  const offsetMs = offset * 60 * 60 * 1000;\n  const targetTzDate = new Date(now.getTime() + offsetMs);\n  const year = targetTzDate.getUTCFullYear();\n  const month = targetTzDate.getUTCMonth();\n  const day = targetTzDate.getUTCDate();\n  const utcHour = hour - offset;\n  return new Date(Date.UTC(year, month, day, utcHour));\n}\n","import moment from 'moment';\nimport IBooking, { ICountry, PhysicalRoomType } from '../models/IBooking';\nimport { z } from 'zod';\nimport { compareTime, createDateWithOffsetAndHour } from '@/utils/booking';\nimport calendarData from '@/stores/calendar-data';\n\nexport function convertDateToCustomFormat(dayWithWeekday: string, monthWithYear: string, format: string = 'D_M_YYYY'): string {\n  const dateStr = `${dayWithWeekday.split(' ')[1]} ${monthWithYear}`;\n  const date = moment(dateStr, 'DD MMM YYYY');\n  if (!date.isValid()) {\n    throw new Error('Invalid Date');\n  }\n  return date.format(format);\n}\n\nexport function convertDateToTime(dayWithWeekday: string, monthWithYear: string): number {\n  const date = moment(dayWithWeekday + ' ' + monthWithYear, 'ddd DD MMM YYYY').toDate();\n  date.setHours(0, 0, 0, 0);\n  return date.getTime();\n}\nexport function dateDifference(FROM_DATE: string, TO_DATE: string): number {\n  const startDate = new Date(FROM_DATE);\n  const endDate = new Date(TO_DATE);\n  return Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n}\nexport const getBrowserLanguage = (): string => {\n  const defaultLang = 'en';\n  const lang = navigator.language || defaultLang;\n  return lang.toUpperCase().split('-')[0];\n};\n\nexport const transformBooking = (physicalRoom: PhysicalRoomType[]): IBooking[] => {\n  const myBookings: IBooking[] = [];\n  physicalRoom.forEach(room => {\n    Object.keys(room.calendar_cell).forEach(key => {\n      if (room.calendar_cell[key].Is_Available === false) {\n        if (myBookings.find(b => b.ID === room.id.toString())) {\n        } else {\n          //myBookings.push({})\n        }\n      }\n    });\n  });\n  return myBookings;\n};\n\nexport function dateToFormattedString(date: Date): string {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0'); // +1 because months are 0-based in JS\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nexport function formatLegendColors(legendData) {\n  let formattedLegendData: any = {};\n\n  const statusId = {\n    'IN-HOUSE': { id: 1, clsName: 'IN_HOUSE' },\n    'CONFIRMED': { id: 2, clsName: 'CONFIRMED' },\n    'PENDING-CONFIRMATION': { id: 3, clsName: 'PENDING_CONFIRMATION' },\n    'SPLIT-UNIT': { id: 4, clsName: 'SPLIT_UNIT' },\n    'CHECKED-IN': { id: 5, clsName: 'CHECKED_IN' },\n    'CHECKED-OUT': { id: 5, clsName: 'CHECKED_OUT' },\n    'BLOCKED': { id: 6, clsName: 'BLOCKED' },\n    'BLOCKED-WITH-DATES': { id: 7, clsName: 'BLOCKED_WITH_DATES' },\n    'NOTES': { id: 8, clsName: 'NOTES' },\n    'OUTSTANDING-BALANCE': { id: 9, clsName: 'OUTSTANDING_BALANCE' },\n    'TEMP-EVENT': { id: 10, clsName: 'PENDING_CONFIRMATION' },\n  };\n  legendData.forEach(legend => {\n    formattedLegendData[legend.id] = legend;\n    formattedLegendData.statusId = statusId; // NOTE: This will overwrite the 'statusId' property with every iteration.\n  });\n\n  return formattedLegendData;\n}\nexport function isBlockUnit(status_code: any) {\n  return ['003', '002', '004'].includes(status_code);\n}\nexport function getCurrencySymbol(currencyCode) {\n  const formatter = new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: currencyCode,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n  return formatter.format(0).replace(/[0-9]/g, '').trim();\n}\nexport const findCountry = (id: number, countries: ICountry[]): ICountry => countries.find(country => country.id === id);\n\nexport function getReleaseHoursString(releaseDate: number) {\n  const dt = new Date();\n  const releaseAfterHours = releaseDate;\n\n  dt.setHours(dt.getHours() + releaseAfterHours, dt.getMinutes(), 0, 0);\n\n  return {\n    BLOCKED_TILL_DATE: dateToFormattedString(dt),\n    BLOCKED_TILL_HOUR: dt.getHours().toString(),\n    BLOCKED_TILL_MINUTE: dt.getMinutes().toString(),\n  };\n}\n\nexport function computeEndDate(startDate: string, numberOfDays: number): string {\n  const dateObj = moment(startDate, 'D_M_YYYY');\n  dateObj.add(numberOfDays, 'days');\n  return dateObj.format('YYYY-MM-DD');\n}\n\nexport function convertDMYToISO(date: string) {\n  const dateObj = moment(date, 'D_M_YYYY');\n  return dateObj.format('YYYY-MM-DD');\n}\nexport function addTwoMonthToDate(date: Date) {\n  return moment(date).add(2, 'months').format('YYYY-MM-DD');\n}\nexport function formatDate(dateString, option = 'DD MMM YYYY') {\n  const formattedDate = moment(dateString, option).format('ddd, DD MMM YYYY');\n  return formattedDate;\n}\nexport function getNextDay(date: Date) {\n  return moment(date).add(1, 'days').format('YYYY-MM-DD');\n}\n\nexport function convertDatePrice(date: string) {\n  return moment(date, 'YYYY-MM-DD').format('DD/MM ddd');\n}\nexport function getDaysArray(date1: string, date2: string) {\n  let dates = [];\n  let start = moment.min(moment(date1).add(1, 'days'), moment(date2));\n  let end = moment.max(moment(date1), moment(date2));\n  while (start < end) {\n    dates.push(start.format('YYYY-MM-DD'));\n    start = start.clone().add(1, 'days');\n  }\n\n  return dates;\n}\nexport function renderTime(time: number) {\n  return time < 10 ? time.toString().padStart(2, '0') : time.toString();\n}\nexport function validateEmail(email: string) {\n  if (email === '') {\n    return true;\n  }\n  const parsedEmailResults = z.string().email().safeParse(email);\n  return !parsedEmailResults.success;\n}\nexport function formatAmount(currency: string, amount: number) {\n  return currency + ' ' + amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n}\n\nexport const extras = [\n  {\n    key: 'private_note',\n    value: '',\n  },\n  {\n    key: 'is_backend',\n    value: true,\n  },\n  {\n    key: 'ERROR_EMAIL',\n    value: '',\n  },\n  {\n    key: 'agent_payment_mode',\n    value: '',\n  },\n  { key: 'payment_code', value: '' },\n];\n\nexport function manageAnchorSession(data: Record<string, unknown>, mode: 'add' | 'remove' = 'add') {\n  const anchor = JSON.parse(sessionStorage.getItem('backend_anchor'));\n  if (anchor) {\n    if (mode === 'add') {\n      return sessionStorage.setItem('backend_anchor', JSON.stringify({ ...anchor, ...data }));\n    } else if (mode === 'remove') {\n      const keys = Object.keys(data);\n      keys.forEach(key => {\n        if (key in anchor) {\n          delete anchor[key];\n        }\n      });\n      return sessionStorage.setItem('backend_anchor', JSON.stringify(anchor));\n    }\n  } else {\n    if (mode === 'add') {\n      return sessionStorage.setItem('backend_anchor', JSON.stringify({ ...data }));\n    }\n  }\n}\nexport function checkUserAuthState() {\n  const anchor = JSON.parse(sessionStorage.getItem('backend_anchor'));\n  if (anchor) {\n    return anchor.login || null;\n  }\n  return null;\n}\n\nexport interface CheckInParams {\n  from_date: string;\n  to_date: string;\n  isCheckedIn?: boolean;\n}\n\n/**\n * Determines whether a booking is eligible for check-in.\n *\n * @param params - An object containing the booking event, calendar data, current check-in status, and a flag indicating if check-in or checkout is allowed.\n * @returns True if check-in is allowed; otherwise, false.\n */\nexport function canCheckIn({ from_date, to_date, isCheckedIn }: CheckInParams): boolean {\n  if (!calendarData.checkin_enabled || calendarData.is_automatic_check_in_out) {\n    return false;\n  }\n  if (isCheckedIn) {\n    return false;\n  }\n  const now = moment();\n  if (\n    (moment().isSameOrAfter(new Date(from_date), 'days') && moment().isBefore(new Date(to_date), 'days')) ||\n    (moment().isSame(new Date(to_date), 'days') &&\n      !compareTime(now.toDate(), createDateWithOffsetAndHour(calendarData.checkin_checkout_hours?.offset, calendarData.checkin_checkout_hours?.hour)))\n  ) {\n    return true;\n  }\n  return false;\n}\n/**\n * Downloads a file from a given URL.\n *\n * @param url - The URL of the file to download.\n * @param filename - The name of the file to save. If not provided, the URL will be used as the filename.\n */\nexport function downloadFile(url: string, filename?: string) {\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename || url;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\n/**\n * Converts an integer value into a float by shifting the decimal point.\n *\n * @param value - The integer value to convert (e.g. 29016).\n * @param decimalPlaces - The number of decimal places to shift (e.g. 2 results in 290.16).\n * @returns The converted floating point number.\n */\nexport function toFloat(value: number, decimalPlaces: number): number {\n  const factor = Math.pow(10, decimalPlaces);\n  return value / factor;\n}\n\nexport async function sleep(time: number = 200) {\n  return new Promise(r => setTimeout(() => r(null), time));\n}\nexport function handleBodyOverflow(open: boolean) {\n  const attr = 'data-ir-scroll-locked';\n  let counter = document.body.getAttribute(attr);\n  if (!document.getElementById('scroll-lock-style')) {\n    const style = document.createElement('style');\n    style.id = 'scroll-lock-style';\n    style.innerHTML = `\n      body:dir(ltr)[data-ir-scroll-locked] {\n        overflow: hidden !important;\n        overscroll-behavior: contain;\n        position: relative !important;\n        padding-left: 0px;\n        padding-top: 0px;\n        padding-right: 0px;\n        margin-left: 0;\n        margin-top: 0;\n        margin-right: 15px !important;\n      }\n      body:dir(rtl)[data-ir-scroll-locked] {\n        overflow: hidden !important;\n        overscroll-behavior: contain;\n        position: relative !important;\n        padding-left: 0px;\n        padding-top: 0px;\n        padding-right: 0px;\n        margin-right: 0;\n        margin-top: 0;\n        margin-left: 15px !important;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n  if (!counter) {\n    document.body.setAttribute(attr, '1');\n  } else {\n    const newCount = open ? Number(counter) + 1 : Number(counter) - 1;\n    document.body.setAttribute(attr, newCount.toString());\n    if (newCount <= 0) {\n      document.body.removeAttribute(attr);\n    }\n  }\n}\nexport function generatePassword(length = 16): string {\n  const CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789' + '!@#$%^&*()-_=+[]{}|;:,.<>?';\n\n  const cryptoObj = (window.crypto || (window as any).msCrypto) as Crypto & { getRandomValues?: Function };\n  if (cryptoObj && typeof cryptoObj.getRandomValues === 'function') {\n    const randomValues = new Uint32Array(length);\n    cryptoObj.getRandomValues(randomValues);\n    return Array.from(randomValues, rv => CHARSET[rv % CHARSET.length]).join('');\n  } else {\n    console.warn('Secure crypto RNG not available—falling back to Math.random()');\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const idx = Math.floor(Math.random() * CHARSET.length);\n      password += CHARSET.charAt(idx);\n    }\n    return password;\n  }\n}\n/**\n * Generates a list of time strings in military time (24-hour format) between two specified times,\n * incremented by a given number of minutes.\n *\n * @param from - Start time in \"HH:mm\" (24-hour/military) format (e.g., \"04:00\").\n * @param to - End time in \"HH:mm\" (24-hour/military) format (e.g., \"18:00\").\n * @param stepMinutes - The interval step in minutes between time slots (default is 60).\n * @returns An array of time strings in \"HH:mm\" format representing each step between the start and end times.\n */\nexport function generateTimeSlotsMilitary(from: string, to: string, stepMinutes: number = 60): string[] {\n  const startTime = moment(from, 'HH:mm');\n  const endTime = moment(to, 'HH:mm');\n\n  const timeSlots: string[] = [];\n\n  let currentTime = startTime.clone();\n\n  while (currentTime <= endTime) {\n    timeSlots.push(currentTime.format('HH:mm'));\n    currentTime.add(stepMinutes, 'minutes');\n  }\n\n  return timeSlots;\n}\n"],"version":3}