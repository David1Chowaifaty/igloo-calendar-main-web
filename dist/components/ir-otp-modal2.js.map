{"file":"ir-otp-modal2.js","mappings":"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","names":[],"sources":["src/services/system.service.ts","src/components/ir-otp-modal/ir-otp-modal.css?tag=ir-otp-modal","src/components/ir-otp-modal/ir-otp-modal.tsx"],"sourcesContent":["import axios from 'axios';\n\nexport class SystemService {\n  public async validateOTP(params: { METHOD_NAME: string; OTP: string }) {\n    const { data } = await axios.post('/Validate_OTP', params);\n    return data;\n  }\n}\n",":host {\n  display: block;\n}\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n.modal-header {\n  border-bottom: 0px !important;\n}\n.modal-footer {\n  border-top: 0 !important;\n}\n","import { SystemService } from '@/services/system.service';\nimport { Component, Event, EventEmitter, Host, Method, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-otp-modal',\n  styleUrl: 'ir-otp-modal.css',\n  scoped: false,\n})\nexport class IrOtpModal {\n  @Prop() resendTimer = 60;\n  @Prop() requestUrl: string;\n  @Prop() showResend: boolean = true;\n  @State() otp = '';\n  @State() error = '';\n  @State() isLoading = false;\n  @State() timer = 60;\n\n  private modalRef!: HTMLDivElement;\n  private timerInterval: number;\n  private systemService = new SystemService();\n\n  /** Emits the final OTP (or empty on cancel) */\n  @Event({ bubbles: true, composed: true }) otpFinished: EventEmitter<string>;\n\n  /** Open & reset everything */\n  @Method()\n  async openModal() {\n    this.resetState();\n    $(this.modalRef).modal({ backdrop: 'static', keyboard: false });\n    $(this.modalRef).modal('show');\n    if (this.showResend) this.startTimer();\n    await this.focusFirstInput();\n  }\n\n  /** Hide & clear timer */\n  @Method()\n  async closeModal() {\n    $(this.modalRef).modal('hide');\n    this.clearTimer();\n  }\n\n  private resetState() {\n    this.otp = '';\n    this.error = '';\n    this.isLoading = false;\n    this.timer = 60;\n    this.clearTimer();\n  }\n\n  private startTimer() {\n    this.clearTimer();\n    this.timerInterval = window.setInterval(() => {\n      if (this.timer > 0) {\n        this.timer--;\n      } else {\n        this.clearTimer();\n      }\n    }, 1000);\n  }\n\n  private clearTimer() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  private async focusFirstInput() {\n    await new Promise(r => setTimeout(r, 50));\n    const first = this.modalRef.querySelector('input');\n    first && (first as HTMLInputElement).focus();\n  }\n\n  /** Called by your <ir-otp> child whenever the 6-digit value changes/pastes */\n  private handleOtpComplete = (e: CustomEvent<string>) => {\n    this.error = '';\n    this.otp = e.detail;\n    if (this.otp.length === 6) {\n      // auto-submit\n      this.verifyOtp();\n    }\n  };\n\n  private async verifyOtp() {\n    if (this.otp.length < 6) return;\n\n    this.isLoading = true;\n    try {\n      await this.systemService.validateOTP({ METHOD_NAME: this.requestUrl, OTP: this.otp });\n      // emit the filled OTP back to the interceptor\n      this.otpFinished.emit(this.otp);\n      this.closeModal();\n    } catch (err) {\n      this.error = 'Verification failed. Please try again.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /** Allow the user to request a new OTP */\n  private async resendOtp() {\n    if (this.timer > 0) return;\n    // you’d trigger your API here; then:\n    this.timer = 60;\n    this.startTimer();\n  }\n\n  private onCancel = () => {\n    this.otpFinished.emit('');\n    this.closeModal();\n  };\n\n  render() {\n    return (\n      <Host>\n        <div ref={el => (this.modalRef = el as any)} class=\"modal fade\" id=\"staticBackdrop\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Verify Code</h5>\n                <button type=\"button\" class=\"close\" onClick={this.onCancel}>\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n\n              <div class=\"modal-body d-flex  flex-column\">\n                <p>Please enter the 6-digit code we just sent you.</p>\n                <ir-otp\n                  autoFocus\n                  // value={this.otp}\n                  onOtpComplete={this.handleOtpComplete}\n                ></ir-otp>\n\n                {this.error && <p class=\"text-danger small mt-2\">{this.error}</p>}\n\n                {this.showResend && (\n                  <p class=\"small mt-1\">\n                    {this.timer > 0 ? (\n                      `Resend code in 00:${String(this.timer).padStart(2, '0')}`\n                    ) : (\n                      <a\n                        href=\"#\"\n                        onClick={e => {\n                          e.preventDefault();\n                          this.resendOtp();\n                        }}\n                      >\n                        Didn’t receive code? Resend\n                      </a>\n                    )}\n                  </p>\n                )}\n              </div>\n\n              <div class=\"modal-footer\">\n                <ir-button text=\"Cancel\" btn_color=\"secondary\" onClick={this.onCancel} btn_disabled={this.isLoading}></ir-button>\n                <ir-button text=\"Verify\" isLoading={this.isLoading} btn_disabled={this.otp.length < 6 || this.isLoading} onClick={() => this.verifyOtp()}></ir-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}