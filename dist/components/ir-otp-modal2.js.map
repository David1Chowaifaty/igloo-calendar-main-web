{"file":"ir-otp-modal2.js","mappings":"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","names":[],"sources":["src/services/system.service.ts","src/components/ir-otp-modal/ir-otp-modal.css?tag=ir-otp-modal","src/components/ir-otp-modal/ir-otp-modal.tsx"],"sourcesContent":["import axios from 'axios';\n\nexport class SystemService {\n  public async validateOTP(params: { METHOD_NAME: string; OTP: string }) {\n    const { data } = await axios.post('/Validate_Exposed_OTP', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async resendOTP(params: { METHOD_NAME: string }) {\n    const { data } = await axios.post('/Resend_Exposed_OTP', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return data;\n  }\n  public async checkOTPNecessity(params: { METHOD_NAME: string }) {\n    const { data } = await axios.post('/Check_OTP_Necessity', params);\n    return data;\n  }\n}\n",":host {\n  display: block;\n}\n.modal-backdrop {\n  background-color: rgba(0, 0, 0, 0.5) !important;\n}\n.modal-header {\n  border-bottom: 0px !important;\n}\n.otp-modal {\n  z-index: 9999999 !important;\n}\n.modal-dialog {\n  z-index: 9999999 !important;\n}\n.modal-footer {\n  padding-top: 0.5rem !important;\n  border-top: 0 !important;\n}\n.verification-message {\n  max-width: 90%;\n}\n@media (min-width: 768px) {\n  .modal-dialog,\n  .modal-content {\n    width: fit-content !important;\n  }\n  .verification-message {\n    max-width: 350px !important;\n  }\n}\n","import Token from '@/models/Token';\nimport { SystemService } from '@/services/system.service';\nimport { Component, Event, EventEmitter, Fragment, Host, Method, Prop, State, Watch, h } from '@stencil/core';\nimport { z } from 'zod';\n\n@Component({\n  tag: 'ir-otp-modal',\n  styleUrl: 'ir-otp-modal.css',\n  scoped: false,\n})\nexport class IrOtpModal {\n  /** Number of seconds to wait before allowing OTP resend */\n  @Prop() resendTimer = 60;\n\n  /** URL or endpoint used to validate the OTP */\n  @Prop() requestUrl: string;\n  /** URL or endpoint used to validate the OTP */\n  @Prop() baseOTPUrl: string;\n\n  /** Whether the resend option should be visible */\n  @Prop() showResend: boolean = true;\n\n  /** User's email address to display in the modal and send the OTP to */\n  @Prop() email: string;\n\n  /** Number of digits the OTP should have */\n  @Prop() otpLength: number = 6;\n\n  /** ticket for verifying and resending the verification code */\n  @Prop() ticket: string;\n\n  @State() otp = '';\n  @State() error = '';\n  @State() isLoading = false;\n  @State() timer = 60;\n\n  private modalRef!: HTMLDivElement;\n  private timerInterval: number;\n  private systemService = new SystemService();\n  private tokenService = new Token();\n\n  private otpVerificationSchema = z.object({ email: z.string().nonempty(), requestUrl: z.string().nonempty(), otp: z.string().length(this.otpLength) });\n\n  /** Emits the final OTP (or empty on cancel) */\n  @Event({ bubbles: true, composed: true }) otpFinished: EventEmitter<{\n    otp: string;\n    type: 'success' | 'cancelled';\n  }>;\n\n  componentWillLoad() {\n    if (this.ticket) {\n      this.tokenService.setToken(this.ticket);\n    }\n  }\n  @Watch('ticket')\n  handleTicketChange(newValue: string, oldValue: string) {\n    if (newValue !== oldValue) {\n      this.tokenService.setToken(newValue);\n    }\n  }\n  /** Open & reset everything */\n  @Method()\n  async openModal() {\n    this.resetState();\n    $(this.modalRef).modal({ backdrop: 'static', keyboard: false });\n    $(this.modalRef).modal('show');\n    if (this.showResend) this.startTimer();\n    await this.focusFirstInput();\n  }\n\n  /** Hide & clear timer */\n  @Method()\n  async closeModal() {\n    $(this.modalRef).modal('hide');\n    this.otp = null;\n    this.clearTimer();\n  }\n\n  private resetState() {\n    this.otp = '';\n    this.error = '';\n    this.isLoading = false;\n    this.timer = 60;\n    this.clearTimer();\n  }\n\n  private startTimer() {\n    this.clearTimer();\n    this.timerInterval = window.setInterval(() => {\n      if (this.timer > 0) {\n        this.timer--;\n      } else {\n        this.clearTimer();\n      }\n    }, 1000);\n  }\n\n  private clearTimer() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  private async focusFirstInput() {\n    await new Promise(r => setTimeout(r, 50));\n    const first = this.modalRef.querySelector('input');\n    first && (first as HTMLInputElement).focus();\n  }\n\n  private handleOtpComplete = (e: CustomEvent<string>) => {\n    this.error = '';\n    this.otp = e.detail;\n  };\n\n  private async verifyOtp() {\n    if (this.otp.length < this.otpLength) return;\n    this.isLoading = true;\n    this.otpVerificationSchema.parse({\n      otp: this.otp,\n      requestUrl: this.requestUrl,\n      email: this.email,\n    });\n    try {\n      await this.systemService.validateOTP({ METHOD_NAME: this.requestUrl, OTP: this.otp });\n      // emit the filled OTP back to the interceptor\n      this.otpFinished.emit({ otp: this.otp, type: 'success' });\n      this.closeModal();\n    } catch (err) {\n      this.error = 'Verification failed. Please try again.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async resendOtp() {\n    if (this.timer > 0) return;\n    // Resend otp\n    try {\n      await this.systemService.resendOTP({ METHOD_NAME: this.requestUrl });\n      this.timer = 60;\n      this.startTimer();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  private handleCancelClicked() {\n    if (this.baseOTPUrl === 'Check_OTP_Necessity') {\n      this.closeModal();\n      this.otpFinished.emit({\n        otp: null,\n        type: 'cancelled',\n      });\n      return;\n    }\n    window.location.reload();\n  }\n  disconnectedCallback() {\n    this.clearTimer();\n  }\n  render() {\n    return (\n      <Host>\n        <div ref={el => (this.modalRef = el as any)} class=\"modal otp-modal fade\" id=\"staticBackdrop\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Verify Your Identity</h5>\n              </div>\n\n              <div class=\"modal-body d-flex  align-items-center flex-column\">\n                <p class=\"verification-message text-truncate\">We sent a verification code to {this.email}</p>\n                <ir-otp\n                  autoFocus\n                  length={this.otpLength}\n                  defaultValue={this.otp}\n                  // value={this.otp}\n                  onOtpComplete={this.handleOtpComplete}\n                ></ir-otp>\n\n                {this.error && <p class=\"text-danger small mt-1 p-0 mb-0\">{this.error}</p>}\n\n                {this.showResend && (\n                  <Fragment>\n                    {this.timer > 0 ? (\n                      <p class=\"small mt-1\">Resend code in 00:{String(this.timer).padStart(2, '0')}</p>\n                    ) : (\n                      <ir-button\n                        class=\"mt-1\"\n                        btn_color=\"link\"\n                        onClickHandler={e => {\n                          e.stopImmediatePropagation();\n                          e.stopPropagation();\n                          this.resendOtp();\n                        }}\n                        size=\"sm\"\n                        text=\"Didn’t receive code? Resend\"\n                      ></ir-button>\n                    )}\n                  </Fragment>\n                )}\n              </div>\n\n              <div class=\"modal-footer justify-content-auto\">\n                <ir-button class=\"w-100\" btn_styles={'flex-fill'} text=\"Cancel\" btn_color=\"secondary\" onClick={this.handleCancelClicked.bind(this)}></ir-button>\n                <ir-button\n                  class=\"w-100\"\n                  btn_styles={'flex-fill'}\n                  text=\"Verify now\"\n                  isLoading={this.isLoading}\n                  btn_disabled={this.otp?.length < this.otpLength || this.isLoading}\n                  onClick={() => this.verifyOtp()}\n                ></ir-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}