{"file":"ir-user-management.js","mappings":"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","names":["IrUserManagement","io"],"sources":["src/components/ir-user-management/ir-user-management.css?tag=ir-user-management&encapsulation=scoped","src/components/ir-user-management/ir-user-management.tsx"],"sourcesContent":[":host {\n  display: block;\n  height: 100%;\n}\n","import Token from '@/models/Token';\nimport { User } from '@/models/Users';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport { UserService } from '@/services/user.service';\nimport { Component, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { AllowedUser } from './types';\nimport { bookingReasons } from '@/models/IBooking';\nimport { io, Socket } from 'socket.io-client';\n\n@Component({\n  tag: 'ir-user-management',\n  styleUrl: 'ir-user-management.css',\n  scoped: true,\n})\nexport class IrUserManagement {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() propertyid: number;\n  @Prop() p: string;\n  @Prop() isSuperAdmin: boolean = true;\n  @Prop() userTypeCode: string | number;\n  @Prop() userId: string | number;\n\n  @State() isLoading = true;\n  @State() users: User[] = [];\n  @State() property_id: number;\n  @State() allowedUsersTypes: AllowedUser[] = [];\n\n  private token = new Token();\n  private roomService = new RoomService();\n  private userService = new UserService();\n  private bookingService = new BookingService();\n\n  private userTypes: Map<number | string, string> = new Map();\n  private socket: Socket;\n\n  @Watch('ticket')\n  ticketChanged(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.token.setToken(this.ticket);\n    this.initializeApp();\n  }\n\n  @Listen('resetData')\n  async handleResetData(e: CustomEvent) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    await this.fetchUsers();\n  }\n\n  private async initializeApp() {\n    try {\n      this.isLoading = true;\n      let propertyId = this.propertyid;\n      if (!this.propertyid && !this.p) {\n        throw new Error('Property ID or username is required');\n      }\n      // let roomResp = null;\n      if (!propertyId) {\n        console.log(propertyId);\n        const propertyData = await this.roomService.getExposedProperty({\n          id: 0,\n          aname: this.p,\n          language: this.language,\n          is_backend: true,\n          include_units_hk_status: true,\n        });\n        // roomResp = propertyData;\n        propertyId = propertyData.My_Result.id;\n      }\n      this.property_id = propertyId;\n      const requests = [this.fetchUserTypes(), this.fetchUsers(), this.roomService.fetchLanguage(this.language)];\n      if (this.propertyid) {\n        requests.push(\n          this.roomService.getExposedProperty({\n            id: this.propertyid,\n            language: this.language,\n            is_backend: true,\n            include_units_hk_status: true,\n          }),\n        );\n      }\n\n      await Promise.all(requests);\n      this.socket = io('https://realtime.igloorooms.com/');\n      this.socket.on('MSG', async msg => {\n        await this.handleSocketMessage(msg);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private async handleSocketMessage(msg: string) {\n    const msgAsObject = JSON.parse(msg);\n    if (!msgAsObject) {\n      return;\n    }\n\n    const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\n\n    if (KEY.toString() !== this.property_id.toString()) {\n      return;\n    }\n\n    let result = JSON.parse(PAYLOAD);\n    console.log(KEY, result);\n    // const reasonHandlers: Partial<Record<bookingReasons, Function>> = {\n    //   DORESERVATION: this.updateUserVerificationStatus,\n    // };\n    const reasonHandlers: Partial<Record<bookingReasons, Function>> = {};\n    const handler = reasonHandlers[REASON];\n    if (handler) {\n      await handler.call(this, result);\n    } else {\n      console.warn(`Unhandled REASON: ${REASON}`);\n    }\n  }\n\n  public updateUserVerificationStatus(result: { id: string | number; is_email_verified: boolean }) {\n    const users = [...this.users];\n    const idx = users.findIndex(u => u.id === result.id);\n    if (idx === -1) {\n      console.warn(`User ${result.id} not found`);\n      return;\n    }\n    users[idx] = {\n      ...users[idx],\n      is_email_verified: result.is_email_verified,\n    };\n    this.users = users;\n  }\n\n  private async fetchUsers() {\n    const users = await this.userService.getExposedPropertyUsers();\n    this.users = [...users].sort((u1: User, u2: User) => {\n      const priority = (u: User) => {\n        const t = u.type.toString();\n        if (t === '1') return 0;\n        if (t === '17') return 1;\n        return 2;\n      };\n      //sort by priority\n      const p1 = priority(u1),\n        p2 = priority(u2);\n      if (p1 !== p2) {\n        return p1 - p2;\n      }\n      //sort by user id\n      if (p1 === 1) {\n        const id1 = u1.id.toString(),\n          id2 = u2.id.toString(),\n          me = this.userId.toString();\n        if (id1 === me) return -1; // u1 is me → goes before u2\n        if (id2 === me) return 1; // u2 is me → u1 goes after\n      }\n\n      // 3) sort by username\n      return u1.username.localeCompare(u2.username);\n    });\n  }\n  private async fetchUserTypes() {\n    const res = await Promise.all([this.bookingService.getSetupEntriesByTableName('_USER_TYPE'), this.bookingService.getLov()]);\n    const allowedUsers = res[1]?.My_Result?.allowed_user_types;\n    for (const e of res[0]) {\n      const value = e[`CODE_VALUE_${this.language?.toUpperCase() ?? 'EN'}`];\n      if (allowedUsers.find(f => f.code === e.CODE_NAME)) {\n        this.allowedUsersTypes.push({ code: e.CODE_NAME, value });\n      }\n      this.userTypes.set(e.CODE_NAME.toString(), value);\n    }\n  }\n  disconnectedCallback() {\n    this.socket.disconnect();\n  }\n  render() {\n    if (this.isLoading) {\n      return (\n        <Host>\n          <ir-toast></ir-toast>\n          <ir-interceptor></ir-interceptor>\n          <ir-loading-screen></ir-loading-screen>\n        </Host>\n      );\n    }\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor suppressToastEndpoints={['/Change_User_Pwd']}></ir-interceptor>\n        <section class=\"p-2 d-flex flex-column\" style={{ gap: '1rem' }}>\n          <div class=\"d-flex  pb-2 align-items-center justify-content-between\">\n            <h3 class=\"mb-1 mb-md-0\">Extranet Users</h3>\n          </div>\n          <div class=\"\" style={{ gap: '1rem' }}>\n            <ir-user-management-table\n              allowedUsersTypes={this.allowedUsersTypes}\n              userTypeCode={this.userTypeCode}\n              haveAdminPrivileges={['1', '17'].includes(this.userTypeCode?.toString())}\n              userTypes={this.userTypes}\n              class=\"card\"\n              isSuperAdmin={this.userTypeCode?.toString() === '1'}\n              users={this.users}\n            ></ir-user-management-table>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"version":3}