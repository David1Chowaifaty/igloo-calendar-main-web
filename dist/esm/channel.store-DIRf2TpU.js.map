{"version":3,"file":"channel.store-DIRf2TpU.js","sources":["src/stores/channel.store.ts"],"sourcesContent":["import { IChannel, IExposedChannel, IMap } from '@/models/calendarData';\r\nimport { createStore } from '@stencil/store';\r\nexport interface IChannelSettings {\r\n  hotel_id: string;\r\n  hotel_title: string;\r\n}\r\nexport interface IChannelStore {\r\n  channels: IExposedChannel[];\r\n  connected_channels: IChannel[];\r\n  selectedChannel: IExposedChannel | null;\r\n  mappedChannels: IMap[];\r\n  isConnectedToChannel: boolean;\r\n  channel_settings: IChannelSettings | null;\r\n  property_id: number | null;\r\n  channel_id: number;\r\n  is_active: boolean;\r\n}\r\nconst initialState: IChannelStore = {\r\n  channels: [],\r\n  selectedChannel: null,\r\n  mappedChannels: [],\r\n  connected_channels: [],\r\n  isConnectedToChannel: false,\r\n  channel_settings: null,\r\n  property_id: null,\r\n  channel_id: -1,\r\n  is_active: false,\r\n};\r\nexport const { state: channels_data, onChange: onChannelChange, dispose } = createStore<IChannelStore>(initialState);\r\nexport function setChannelIdAndActiveState(id: number, is_active: boolean) {\r\n  channels_data.channel_id = id;\r\n  channels_data.is_active = is_active;\r\n}\r\nexport function selectChannel(channel_id: string) {\r\n  if (channel_id === '') {\r\n    channels_data.selectedChannel = null;\r\n    return;\r\n  }\r\n  const selectedChannel = channels_data.channels.find(c => c.id.toString() === channel_id);\r\n  if (selectedChannel) {\r\n    channels_data.selectedChannel = selectedChannel;\r\n  } else {\r\n    channels_data.selectedChannel = {\r\n      id: channel_id,\r\n      name: '',\r\n      properties: [],\r\n    };\r\n  }\r\n  setMappedChannel();\r\n}\r\nexport function updateChannelSettings(key: keyof IChannelSettings, value: string) {\r\n  if (!channels_data.channel_settings) {\r\n    channels_data.channel_settings = {\r\n      hotel_id: '',\r\n      hotel_title: '',\r\n    };\r\n  }\r\n  channels_data.channel_settings[key] = value;\r\n}\r\nexport function setMappedChannel() {\r\n  let selectedChannelMap = channels_data.connected_channels.find(c => c.channel.id.toString() === channels_data.selectedChannel.id.toString());\r\n  if (!selectedChannelMap) {\r\n    channels_data.mappedChannels = [];\r\n    return;\r\n  }\r\n  channels_data.mappedChannels = [...selectedChannelMap.map];\r\n}\r\nexport function resetStore() {\r\n  channels_data.selectedChannel = null;\r\n  channels_data.mappedChannels = [];\r\n  channels_data.isConnectedToChannel = false;\r\n  channels_data.channel_settings = null;\r\n}\r\nexport function addMapping(ir_id: string, fr_id: string, isRoomType: boolean) {\r\n  channels_data.mappedChannels.push({\r\n    channel_id: fr_id,\r\n    ir_id,\r\n    type: isRoomType ? 'room_type' : 'rate_plan',\r\n  });\r\n}\r\nexport function testConnection() {\r\n  // const hotelConnection = channels_data.selectedChannel.properties.find(property => property.id === 'd09e6374-1ebf-45e0-a130-64c8c9930987');\r\n  const hotelConnection = channels_data.selectedChannel.properties.find(property => property.id === channels_data.channel_settings.hotel_id);\r\n  if (!hotelConnection) {\r\n    if (channels_data.isConnectedToChannel) {\r\n      channels_data.isConnectedToChannel = false;\r\n    }\r\n    return false;\r\n  }\r\n  channels_data.selectedChannel.property = hotelConnection;\r\n  if (channels_data.mappedChannels.length === 0) {\r\n    channels_data.mappedChannels.push({ ir_id: (channels_data.property_id ?? -1).toString(), channel_id: channels_data.channel_settings.hotel_id, type: 'property' });\r\n  }\r\n  channels_data.isConnectedToChannel = true;\r\n  return true;\r\n}\r\n\r\nexport function saveChannel() {\r\n  console.log(channels_data.channel_settings, channels_data.mappedChannels, channels_data.selectedChannel);\r\n}\r\nexport default channels_data;\r\n"],"names":[],"mappings":"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"}