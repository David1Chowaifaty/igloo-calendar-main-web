{"file":"ir-checkboxes.entry.js","mappings":";;MAMa,YAAY;IAHzB;;;QAIU,eAAU,GAAiB,EAAE,CAAC;QACtC,sBAAiB,GAAiB,EAAE,CAAC;KA8BtC;IAzBC,oBAAoB,CAAC,KAAK;QACxB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3E;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChH;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACpD;IAED,iBAAiB;QACf,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9E,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACpD;KACF;IAED,MAAM;QACJ,QACE,8DACG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,MACnC,mBAAa,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,OAAO,IAAI,KAAK,GAAgB,CAC9G,CAAC,CACE,EACN;KACH;;;;;","names":[],"sources":["src/components/ui/ir-checkboxes/ir-checkboxes.tsx"],"sourcesContent":["import { Component, Listen, Prop, h, Event, EventEmitter } from '@stencil/core';\nimport { checkboxes } from '@/common/models';\n\n@Component({\n  tag: 'ir-checkboxes',\n})\nexport class IrCheckBoxes {\n  @Prop() checkboxes: checkboxes[] = [];\n  checkedCheckboxes: checkboxes[] = [];\n\n  @Event({ bubbles: true, composed: true }) checkboxesChange: EventEmitter<checkboxes[]>;\n\n  @Listen('checkboxChange')\n  handleCheckboxChange(event) {\n    if (event.detail.checked) {\n      this.checkedCheckboxes.push(this.checkboxes[parseInt(event.detail.name)]);\n    } else {\n      this.checkedCheckboxes.splice(this.checkedCheckboxes.indexOf(this.checkboxes[parseInt(event.detail.name)]), 1);\n    }\n    this.checkboxesChange.emit(this.checkedCheckboxes);\n  }\n\n  componentWillLoad() {\n    this.checkedCheckboxes = this.checkboxes.filter(checkbox => checkbox.checked);\n    if (this.checkedCheckboxes.length > 0) {\n      this.checkboxesChange.emit(this.checkedCheckboxes);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.checkboxes.map((checkbox, index) => (\n          <ir-checkbox name={index.toString()} label={checkbox.text} checked={checkbox.checked || false}></ir-checkbox>\n        ))}\n      </div>\n    );\n  }\n}\n"],"version":3}