{"file":"ir-hk-archive.ir-tasks-filters.ir-tasks-header.ir-tasks-table.entry.js","mappings":"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","names":["moment"],"sources":["src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.css?tag=ir-hk-archive&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-hk-archive/ir-hk-archive.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.css?tag=ir-tasks-filters&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-filters/ir-tasks-filters.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.css?tag=ir-tasks-header&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-header/ir-tasks-header.tsx","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.css?tag=ir-tasks-table&encapsulation=scoped","src/components/ir-housekeeping/ir-hk-tasks/ir-tasks-table/ir-tasks-table.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","// import { HouseKeepingService } from '@/services/housekeeping.service';\r\n// import housekeeping_store from '@/stores/housekeeping.store';\r\nimport { ArchivedTask } from '@/models/housekeeping';\r\nimport { HouseKeepingService } from '@/services/housekeeping.service';\r\nimport calendar_data from '@/stores/calendar-data';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nimport { isRequestPending } from '@/stores/ir-interceptor.store';\r\nimport locales from '@/stores/locales.store';\r\nimport { Component, Host, Listen, Prop, State, h } from '@stencil/core';\r\nimport moment from 'moment';\r\nimport { v4 } from 'uuid';\r\nexport type ArchivesFilters = {\r\n  from_date: string;\r\n  to_date: string;\r\n  filtered_by_hkm?: number[];\r\n  filtered_by_unit?: number[];\r\n};\r\n@Component({\r\n  tag: 'ir-hk-archive',\r\n  styleUrl: 'ir-hk-archive.css',\r\n  scoped: true,\r\n})\r\nexport class IrHkArchive {\r\n  @Prop() propertyId: string | number;\r\n\r\n  @State() filters: ArchivesFilters = {\r\n    from_date: moment().add(-90, 'days').format('YYYY-MM-DD'),\r\n    to_date: moment().format('YYYY-MM-DD'),\r\n    filtered_by_hkm: [],\r\n    filtered_by_unit: [],\r\n  };\r\n  @State() data: (ArchivedTask & { id: string })[] = [];\r\n  @State() isLoading: 'search' | 'excel' | null = null;\r\n\r\n  private houseKeepingService = new HouseKeepingService();\r\n  private units: { id: number; name: string }[] = [];\r\n\r\n  componentWillLoad() {\r\n    this.initializeData();\r\n    this.setUpUnits();\r\n  }\r\n  private setUpUnits() {\r\n    const units = [];\r\n    calendar_data.roomsInfo.forEach(r => {\r\n      r.physicalrooms.forEach(room => {\r\n        units.push({ id: room.id, name: room.name });\r\n      });\r\n    });\r\n    this.units = units;\r\n  }\r\n  private async initializeData() {\r\n    await this.getArchivedTasks();\r\n  }\r\n  private async getArchivedTasks() {\r\n    const res = await this.houseKeepingService.getArchivedHKTasks({ property_id: Number(this.propertyId), ...this.filters });\r\n    this.data = [...(res || [])]?.map(t => ({ ...t, id: v4() }));\r\n  }\r\n\r\n  @Listen('dateChanged')\r\n  handleDateRangeChange(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    const { start, end } = e.detail;\r\n    this.updateFilters({\r\n      from_date: start.format('YYYY-MM-DD'),\r\n      to_date: end.format('YYYY-MM-DD'),\r\n    });\r\n  }\r\n\r\n  private updateFilters(props: Partial<ArchivesFilters>) {\r\n    this.filters = { ...this.filters, ...props };\r\n  }\r\n  async searchArchive(e: CustomEvent) {\r\n    try {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.isLoading = 'search';\r\n      await this.getArchivedTasks();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isLoading = null;\r\n    }\r\n  }\r\n\r\n  async exportArchive(e: CustomEvent) {\r\n    try {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      this.isLoading = 'excel';\r\n      this.getArchivedTasks();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.isLoading = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-title class=\"px-1\" label=\"Cleaning Archives (90 days)\" displayContext=\"sidebar\"></ir-title>\r\n        <section class=\"px-1\">\r\n          <div class=\"d-flex\">\r\n            <ir-select\r\n              class=\"w-100\"\r\n              showFirstOption={false}\r\n              LabelAvailable={false}\r\n              data={[\r\n                { text: 'All units', value: '000' },\r\n                ,\r\n                ...this.units?.map(v => ({\r\n                  text: v.name,\r\n                  value: v.id.toString(),\r\n                })),\r\n              ]}\r\n              onSelectChange={e => {\r\n                e.stopImmediatePropagation();\r\n                e.stopPropagation();\r\n                if (e.detail === '000') {\r\n                  this.updateFilters({ filtered_by_unit: [] });\r\n                } else {\r\n                  this.updateFilters({ filtered_by_unit: [e.detail] });\r\n                }\r\n              }}\r\n            ></ir-select>\r\n            <ir-select\r\n              class=\"ml-1 w-100\"\r\n              selectedValue={this.filters?.filtered_by_hkm?.length === housekeeping_store.hk_criteria.housekeepers.length ? '000' : this.filters?.filtered_by_hkm[0]?.toString()}\r\n              LabelAvailable={false}\r\n              showFirstOption={false}\r\n              data={[\r\n                { text: 'All housekeepers', value: '000' },\r\n                ...housekeeping_store?.hk_criteria?.housekeepers.map(v => ({\r\n                  text: v.name,\r\n                  value: v.id.toString(),\r\n                })),\r\n              ]}\r\n              onSelectChange={e => {\r\n                if (e.detail === '000') {\r\n                  this.updateFilters({ filtered_by_hkm: [] });\r\n                } else {\r\n                  this.updateFilters({ filtered_by_hkm: [e.detail] });\r\n                }\r\n              }}\r\n            ></ir-select>\r\n          </div>\r\n          <div class=\"d-flex mt-1 align-items-center\">\r\n            <igl-date-range\r\n              class=\"mr-1\"\r\n              dateLabel={locales.entries.Lcz_Dates}\r\n              minDate={moment().add(-90, 'days').format('YYYY-MM-DD')}\r\n              defaultData={{\r\n                fromDate: this.filters.from_date,\r\n                toDate: this.filters.to_date,\r\n              }}\r\n            ></igl-date-range>\r\n            <ir-button\r\n              title={locales.entries?.Lcz_Search}\r\n              variant=\"icon\"\r\n              icon_name=\"search\"\r\n              class=\"mr-1\"\r\n              isLoading={this.isLoading === 'search'}\r\n              onClickHandler={e => this.searchArchive(e)}\r\n            ></ir-button>\r\n            <ir-button\r\n              title={locales.entries?.Lcz_ExportToExcel}\r\n              variant=\"icon\"\r\n              icon_name=\"file\"\r\n              isLoading={this.isLoading === 'excel'}\r\n              onClickHandler={e => this.exportArchive(e)}\r\n            ></ir-button>\r\n          </div>\r\n          {/* route to booking details */}\r\n          {this.data?.length === 0 && !isRequestPending('/Get_Archived_HK_Tasks') ? (\r\n            <p class={'text-center mt-2'}>No Results Found</p>\r\n          ) : (\r\n            <table class=\"mt-2\">\r\n              <thead>\r\n                <th class=\"sr-only\">period</th>\r\n                <th class=\"sr-only\">housekeeper name</th>\r\n                <th class=\"sr-only\">unit</th>\r\n                <th class=\"sr-only\">booking number</th>\r\n              </thead>\r\n              <tbody>\r\n                {this.data?.map(d => (\r\n                  <tr key={d.id}>\r\n                    <td class=\"pr-2\">{d.date}</td>\r\n                    <td class=\"px-2\">{d.house_keeper}</td>\r\n                    <td class=\"px-2\">{d.unit}</td>\r\n                    <td class=\"px-2\">\r\n                      {d.booking_nbr ? (\r\n                        <ir-button\r\n                          btn_color=\"link\"\r\n                          btnStyle={{\r\n                            width: 'fit-content',\r\n                            padding: '0',\r\n                            margin: '0',\r\n                          }}\r\n                          labelStyle={{\r\n                            padding: '0',\r\n                          }}\r\n                          text={d.booking_nbr.toString()}\r\n                          onClick={() => {\r\n                            window.open(`https://x.igloorooms.com/manage/acbookingeditV2.aspx?BN=${d.booking_nbr}`, '_blank');\r\n                          }}\r\n                        ></ir-button>\r\n                      ) : (\r\n                        'N/A'\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </section>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n  min-width: 20vw;\r\n  height: 100%;\r\n}\r\n@media (min-width: 768px) {\r\n  .collapse-btn {\r\n    display: none;\r\n  }\r\n  #hkTasksFiltersCollapse.collapse:not(.show) {\r\n    display: block;\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\r\nimport { TaskFilters } from '../types';\r\nimport housekeeping_store from '@/stores/housekeeping.store';\r\nexport type ModifiedTaskFilters = Omit<TaskFilters, 'housekeepers'> & { housekeepers: string };\r\n@Component({\r\n  tag: 'ir-tasks-filters',\r\n  styleUrl: 'ir-tasks-filters.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksFilters {\r\n  @Prop() isLoading: boolean;\r\n\r\n  @State() filters: ModifiedTaskFilters = {\r\n    cleaning_periods: {\r\n      code: '',\r\n    },\r\n    housekeepers: '000',\r\n    cleaning_frequencies: { code: '' },\r\n    dusty_units: { code: '' },\r\n    highlight_check_ins: { code: '' },\r\n  };\r\n\r\n  @State() collapsed: boolean = false;\r\n\r\n  @Event() applyFilters: EventEmitter<TaskFilters>;\r\n\r\n  private baseFilters: TaskFilters;\r\n\r\n  componentWillLoad() {\r\n    this.baseFilters = {\r\n      cleaning_periods: housekeeping_store?.hk_criteria?.cleaning_periods[0],\r\n      housekeepers: { ids: housekeeping_store.hk_criteria.housekeepers?.map(h => h.id) },\r\n      cleaning_frequencies: housekeeping_store?.hk_criteria?.cleaning_frequencies[0],\r\n      dusty_units: housekeeping_store?.hk_criteria?.dusty_periods[0],\r\n      highlight_check_ins: housekeeping_store?.hk_criteria?.highlight_checkin_options[0],\r\n    };\r\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\r\n  }\r\n\r\n  private updateFilter(params: Partial<ModifiedTaskFilters>) {\r\n    this.filters = { ...this.filters, ...params };\r\n  }\r\n  private applyFiltersEvt(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.applyFilters.emit({\r\n      ...this.filters,\r\n      housekeepers: {\r\n        ids: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers.ids : [Number(this.filters.housekeepers)],\r\n      },\r\n    });\r\n  }\r\n  private resetFilters(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.filters = { ...this.baseFilters, housekeepers: '000' };\r\n    this.applyFilters.emit({\r\n      ...this.filters,\r\n      housekeepers: {\r\n        ids: this.filters.housekeepers === '000' ? this.baseFilters.housekeepers.ids : [Number(this.filters.housekeepers)],\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card mb-0 p-1 d-flex flex-column\">\r\n        <div class=\"d-flex align-items-center justify-content-between\">\r\n          <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={18} width={18}>\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z\"\r\n              />\r\n            </svg>\r\n            <h4 class=\"m-0 p-0 flex-grow-1\">Filters</h4>\r\n          </div>\r\n          <ir-button\r\n            variant=\"icon\"\r\n            id=\"drawer-icon\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#hkTasksFiltersCollapse\"\r\n            aria-expanded={this.collapsed ? 'true' : 'false'}\r\n            aria-controls=\"hkTasksFiltersCollapse\"\r\n            class=\"mr-1 collapse-btn\"\r\n            icon_name={this.collapsed ? 'closed_eye' : 'open_eye'}\r\n            onClickHandler={() => {\r\n              this.collapsed = !this.collapsed;\r\n            }}\r\n            style={{ '--icon-size': '1.6rem' }}\r\n          ></ir-button>\r\n        </div>\r\n        <div class=\"m-0 p-0 collapse\" id=\"hkTasksFiltersCollapse\">\r\n          <div class=\"d-flex flex-column\" style={{ gap: '0.5rem' }}>\r\n            <fieldset class=\"pt-1\">\r\n              <p class=\"m-0 p-0\">Period</p>\r\n              <ir-select\r\n                testId=\"period\"\r\n                selectedValue={this.filters?.cleaning_periods?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_periods.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_periods: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Housekeepers</p>\r\n              <ir-select\r\n                testId=\"housekeepers\"\r\n                selectedValue={this.filters?.housekeepers}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={[\r\n                  { text: 'All housekeepers', value: '000' },\r\n                  ...housekeeping_store?.hk_criteria?.housekeepers.map(v => ({\r\n                    text: v.name,\r\n                    value: v.id.toString(),\r\n                  })),\r\n                ]}\r\n                onSelectChange={e => {\r\n                  // if (e.detail === '000') {\r\n                  //   this.updateFilter({ housekeepers: { ids: this.baseFilters?.housekeepers?.ids } });\r\n                  // } else {\r\n                  //   this.updateFilter({ housekeepers: { ids: [e.detail] } });\r\n                  // }\r\n                  this.updateFilter({ housekeepers: e.detail });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Cleaning frequency</p>\r\n              <ir-select\r\n                testId=\"cleaning_frequency\"\r\n                selectedValue={this.filters?.cleaning_frequencies?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                data={housekeeping_store?.hk_criteria?.cleaning_frequencies.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ cleaning_frequencies: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset>\r\n              <p class=\"m-0 p-0\">Dusty units</p>\r\n              <ir-select\r\n                testId=\"dusty_units\"\r\n                showFirstOption={false}\r\n                LabelAvailable={false}\r\n                selectedValue={this.filters?.dusty_units?.code}\r\n                data={housekeeping_store.hk_criteria?.dusty_periods?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n                onSelectChange={e => {\r\n                  e.stopImmediatePropagation();\r\n                  e.stopPropagation();\r\n                  this.updateFilter({ dusty_units: { code: e.detail } });\r\n                }}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <fieldset class=\"mb-1\">\r\n              <p class=\"m-0 p-0\">Highlight check-ins</p>\r\n              <ir-select\r\n                testId=\"highlight_check_ins\"\r\n                selectedValue={this.filters?.highlight_check_ins?.code}\r\n                LabelAvailable={false}\r\n                showFirstOption={false}\r\n                onSelectChange={e => {\r\n                  this.updateFilter({ highlight_check_ins: { code: e.detail } });\r\n                }}\r\n                data={housekeeping_store.hk_criteria?.highlight_checkin_options?.map(v => ({\r\n                  text: v.description,\r\n                  value: v.code,\r\n                }))}\r\n              ></ir-select>\r\n            </fieldset>\r\n            <div class=\"d-flex align-items-center justify-content-end\" style={{ gap: '1rem' }}>\r\n              <ir-button btn_type=\"button\" data-testid=\"reset\" text=\"Reset\" size=\"sm\" btn_color=\"outline\" onClickHandler={e => this.resetFilters(e)}></ir-button>\r\n              <ir-button btn_type=\"button\" data-testid=\"apply\" isLoading={this.isLoading} text=\"Apply\" size=\"sm\" onClickHandler={e => this.applyFiltersEvt(e)}></ir-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, h, Listen, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-header',\r\n  styleUrl: 'ir-tasks-header.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksHeader {\r\n  @Prop() isCleanedEnabled: boolean = false;\r\n\r\n  private btnRef: HTMLIrButtonElement;\r\n\r\n  @Event() headerButtonPress: EventEmitter<{ name: 'cleaned' | 'export' | 'archive' }>;\r\n\r\n  @Listen('animateCleanedButton', { target: 'body' })\r\n  handleCleanedButtonAnimation(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.btnRef.bounce();\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"d-flex align-items-center justify-content-between\">\r\n        <h3>Housekeeping Tasks</h3>\r\n        <div class=\"d-flex align-items-center\" style={{ gap: '1rem' }}>\r\n          <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Export\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'export' });\r\n            }}\r\n          ></ir-button>\r\n          <ir-button\r\n            size=\"sm\"\r\n            btn_color=\"outline\"\r\n            text=\"Archive\"\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'archive' });\r\n            }}\r\n          ></ir-button>\r\n          <ir-button\r\n            onClickHandler={e => {\r\n              e.stopImmediatePropagation();\r\n              e.stopPropagation();\r\n              this.headerButtonPress.emit({ name: 'cleaned' });\r\n            }}\r\n            size=\"sm\"\r\n            btn_disabled={!this.isCleanedEnabled}\r\n            text=\"Cleaned\"\r\n            ref={el => (this.btnRef = el)}\r\n          ></ir-button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",":host {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.selected-row {\r\n  background-color: rgba(0, 0, 255, 0.1);\r\n}\r\n.selected-row:hover {\r\n  background-color: rgba(0, 0, 255, 0.15);\r\n}\r\n.header-content {\r\n  height: 100%;\r\n}\r\n.sortable {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n}\r\n.sortable svg {\r\n  color: var(--blue);\r\n}\r\n.task-row,\r\n.table th,\r\n.table td {\r\n  padding: 0.25rem 0.5rem !important;\r\n  white-space: nowrap;\r\n  max-width: max-content !important;\r\n  /* background: white; */\r\n  border: 0;\r\n}\r\n.highlighted-unit {\r\n  background: #000;\r\n  color: white;\r\n  padding: 0.2rem 0.3rem;\r\n  border-radius: 4px;\r\n}\r\n.table th,\r\n.table td {\r\n  text-align: start;\r\n}\r\n.table-container {\r\n  max-height: 80vh;\r\n}\r\n/* td,\r\nth {\r\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  max-width: max-content !important;\r\n \r\n  text-align: start;\r\n}\r\ntr {\r\n  border-bottom: 1px solid #e0e0e0;\r\n} */\r\n.task-table-row {\r\n  background: white !important;\r\n}\r\n.task-table-row:hover {\r\n  background: #e2e6ea3f !important;\r\n}\r\n.selected {\r\n  background: #e3f3fa !important;\r\n}\r\n.sortable:hover {\r\n  color: #212529;\r\n  background-color: #e2e6ea;\r\n  border-color: #dae0e5;\r\n  cursor: pointer;\r\n}\r\n.sortable:active {\r\n  color: #212529;\r\n  background-color: #dae0e5;\r\n  border-color: #d3d9df;\r\n}\r\n","import { Component, Event, EventEmitter, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { Task } from '@/models/housekeeping';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'ir-tasks-table',\r\n  styleUrl: 'ir-tasks-table.css',\r\n  scoped: true,\r\n})\r\nexport class IrTasksTable {\r\n  @Prop({ mutable: true }) tasks: Task[] = [];\r\n\r\n  /**\r\n   * Tracks which task IDs are currently selected via checkboxes.\r\n   */\r\n  @State() selectedIds: Task['id'][] = [];\r\n\r\n  /**\r\n   * Controls whether the \"Confirm Clean\" modal is shown.\r\n   */\r\n  @State() showConfirmModal: boolean = false;\r\n\r\n  /**\r\n   * The key we are sorting by (e.g., \"date\", \"unit\", \"status\", \"housekeeper\").\r\n   */\r\n  @State() sortKey: string = 'date';\r\n\r\n  /**\r\n   * The sort direction: ASC or DESC.\r\n   */\r\n  @State() sortDirection: 'ASC' | 'DESC' = 'ASC';\r\n  @State() checkableTasks: Task[] = [];\r\n\r\n  @Event({ bubbles: true, composed: true }) animateCleanedButton: EventEmitter<null>;\r\n  @Event({ bubbles: true, composed: true }) rowSelectChange: EventEmitter<Task[]>;\r\n\r\n  componentWillLoad() {\r\n    this.sortTasks('date', 'ASC');\r\n    if (this.tasks) {\r\n      this.assignCheckableTasks();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sorts the tasks by the given key. If no direction is provided,\r\n   * it toggles between ascending and descending.\r\n   */\r\n  private handleSort(key: string) {\r\n    let newDirection = this.sortDirection;\r\n    // If we're clicking the same column, flip the direction. If a new column, default to ASC.\r\n    if (this.sortKey === key) {\r\n      newDirection = this.sortDirection === 'ASC' ? 'DESC' : 'ASC';\r\n    } else {\r\n      newDirection = 'ASC';\r\n    }\r\n    this.sortTasks(key, newDirection);\r\n  }\r\n\r\n  @Listen('clearSelectedHkTasks', { target: 'body' })\r\n  handleClearSelectedHkTasks(e: CustomEvent) {\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    this.selectedIds = [];\r\n  }\r\n\r\n  @Watch('tasks')\r\n  handleTasksChange(newTasks: Task[]) {\r\n    if (newTasks?.length) {\r\n      this.selectedIds = [];\r\n      this.assignCheckableTasks();\r\n    }\r\n  }\r\n  /**\r\n   * Helper to sort tasks array in state.\r\n   */\r\n  /**\r\n   * Sorts the tasks by the given key in ASC or DESC order.\r\n   * If values for `key` are duplicates, it sorts by `date` ascending.\r\n   * If `date` is also the same, it finally sorts by `unit.name` ascending.\r\n   */\r\n  private sortTasks(key: string, direction: 'ASC' | 'DESC') {\r\n    const sorted = [...this.tasks].sort((a, b) => {\r\n      // Primary comparison: a[key] vs b[key]\r\n      let aPrimary = a[key];\r\n      let bPrimary = b[key];\r\n      if (key === 'status') {\r\n        aPrimary = a[key].description;\r\n        bPrimary = b[key].description;\r\n      }\r\n\r\n      if (aPrimary < bPrimary) {\r\n        return direction === 'ASC' ? -1 : 1;\r\n      }\r\n      if (aPrimary > bPrimary) {\r\n        return direction === 'ASC' ? 1 : -1;\r\n      }\r\n\r\n      // First tiebreaker: compare by date (always ascending)\r\n      if (a.date < b.date) return -1;\r\n      if (a.date > b.date) return 1;\r\n\r\n      // Second tiebreaker: compare by unit.name (always ascending)\r\n      if (a.unit?.name < b.unit?.name) return -1;\r\n      if (a.unit?.name > b.unit?.name) return 1;\r\n\r\n      return 0;\r\n    });\r\n\r\n    // Update component state\r\n    this.tasks = sorted;\r\n    this.sortKey = key;\r\n    this.sortDirection = direction;\r\n  }\r\n\r\n  /**\r\n   * Helper to toggle selection for a single row.\r\n   */\r\n  private toggleSelection(id: Task['id']) {\r\n    if (this.selectedIds.includes(id)) {\r\n      this.selectedIds = this.selectedIds.filter(item => item !== id);\r\n    } else {\r\n      this.selectedIds = [...this.selectedIds, id];\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n  }\r\n\r\n  private emitSelectedTasks() {\r\n    if (this.tasks.length === 0) {\r\n      return;\r\n    }\r\n    const filteredTasks = this.tasks.filter(t => this.selectedIds.includes(t.id));\r\n    this.rowSelectChange.emit(filteredTasks);\r\n  }\r\n\r\n  /**\r\n   * Checks if every row is selected.\r\n   */\r\n  private get allSelected(): boolean {\r\n    return this.checkableTasks.length > 0 && this.selectedIds.length === this.checkableTasks.length;\r\n  }\r\n\r\n  /**\r\n   * Toggles selection on all visible tasks at once.\r\n   */\r\n  private toggleSelectAll() {\r\n    if (this.allSelected) {\r\n      this.selectedIds = [];\r\n    } else {\r\n      this.selectedIds = this.checkableTasks.map(t => t.id);\r\n      this.animateCleanedButton.emit(null);\r\n    }\r\n    this.emitSelectedTasks();\r\n  }\r\n\r\n  /**\r\n   * Assigns checkable tasks based on predefined criteria.\r\n   *\r\n   * This method filters tasks and determines which ones are eligible\r\n   * to be selected using checkboxes. A task is considered \"checkable\"\r\n   * if its date is today or earlier.\r\n   *\r\n   * The filtered tasks are stored in `this.checkableTasks`, ensuring\r\n   * only relevant tasks can be interacted with by users.\r\n   */\r\n  private assignCheckableTasks() {\r\n    const tasks = [];\r\n    this.tasks.forEach(task => {\r\n      if (this.isCheckable(task)) {\r\n        tasks.push(task);\r\n      }\r\n    });\r\n    this.checkableTasks = [...tasks];\r\n  }\r\n\r\n  /**\r\n   * Determines if a task is checkable.\r\n   *\r\n   * A task is considered checkable if its date is today or any day before.\r\n   * This prevents users from selecting tasks with future dates.\r\n   *\r\n   * @param {string} date - The task's date in 'YYYY-MM-DD' format.\r\n   * @returns {boolean} - Returns `true` if the task's date is today or earlier, otherwise `false`.\r\n   */\r\n  private isCheckable(task: Task): boolean {\r\n    if (!task.hkm_id) {\r\n      return false;\r\n    }\r\n    return moment(task.date, 'YYYY-MM-DD').isSameOrBefore(moment(), 'days');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"card table-container h-100 p-1 m-0 table-responsive\">\r\n        <table class=\"table\" data-testid=\"hk_tasks_table\">\r\n          <thead class=\"table-header\">\r\n            <tr>\r\n              <th>\r\n                <ir-checkbox\r\n                  indeterminate={this.selectedIds.length > 0 && this.selectedIds.length < this.checkableTasks.length}\r\n                  checked={this.allSelected}\r\n                  onCheckChange={() => this.toggleSelectAll()}\r\n                ></ir-checkbox>\r\n              </th>\r\n              <th>Period</th>\r\n              <th>Unit</th>\r\n              <th class={'sortable'} onClick={() => this.handleSort('status')}>\r\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                  <span>Status</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    class=\"lucide lucide-arrow-up-down\"\r\n                  >\r\n                    <path d=\"m21 16-4 4-4-4\" />\r\n                    <path d=\"M17 20V4\" />\r\n                    <path d=\"m3 8 4-4 4 4\" />\r\n                    <path d=\"M7 4v16\" />\r\n                  </svg>\r\n                </div>\r\n              </th>\r\n              <th>Hint</th>\r\n              <th>A</th>\r\n              <th>C</th>\r\n              <th>I</th>\r\n              <th style={{ textAlign: 'start' }} class={'sortable'} onClick={() => this.handleSort('housekeeper')}>\r\n                <div class={'d-flex align-items-center'} style={{ gap: '0.5rem' }}>\r\n                  <span>Housekeeper</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    class=\"lucide lucide-arrow-up-down\"\r\n                  >\r\n                    <path d=\"m21 16-4 4-4-4\" />\r\n                    <path d=\"M17 20V4\" />\r\n                    <path d=\"m3 8 4-4 4 4\" />\r\n                    <path d=\"M7 4v16\" />\r\n                  </svg>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {this.tasks.length === 0 && (\r\n              <tr>\r\n                <td colSpan={9} class=\"text-center\">\r\n                  <div style={{ height: '300px' }} class=\"d-flex align-items-center justify-content-center\">\r\n                    <span> No Tasks Found</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n            {this.tasks.map(task => {\r\n              const isSelected = this.selectedIds.includes(task.id);\r\n              const isCheckable = this.isCheckable(task);\r\n              return (\r\n                <tr\r\n                  data-date={task.date}\r\n                  data-testid={`hk_task_row`}\r\n                  data-assigned={task.housekeeper ? 'true' : 'false'}\r\n                  style={isCheckable && { cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    if (!isCheckable) {\r\n                      return;\r\n                    }\r\n                    this.toggleSelection(task.id);\r\n                  }}\r\n                  class={{ 'selected': isSelected, 'task-table-row': true }}\r\n                  key={task.id}\r\n                >\r\n                  <td class=\"task-row\">{isCheckable && <ir-checkbox checked={isSelected}></ir-checkbox>}</td>\r\n                  <td class=\"task-row\">{task.formatted_date}</td>\r\n                  <td class=\"task-row\">\r\n                    <span class={{ 'highlighted-unit': task.is_highlight }}>{task.unit.name}</span>\r\n                  </td>\r\n                  <td class=\"task-row\">{task.status.description}</td>\r\n                  <td class=\"task-row\">{task.hint}</td>\r\n                  <td class=\"task-row\">{task.adult}</td>\r\n                  <td class=\"task-row\">{task.child}</td>\r\n                  <td class=\"task-row\">{task.infant}</td>\r\n                  <td class=\"w-50 task-row\" style={{ textAlign: 'start' }}>\r\n                    {task.housekeeper ?? 'Unassigned'}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}