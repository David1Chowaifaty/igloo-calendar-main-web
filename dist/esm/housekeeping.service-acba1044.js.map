{"file":"housekeeping.service-acba1044.js","mappings":";;;AAcA,MAAM,YAAY,GAAuB;IACvC,kBAAkB,EAAE,SAAS;IAC7B,WAAW,EAAE,SAAS;IACtB,QAAQ,EAAE,SAAS;IACnB,oBAAoB,EAAE,EAAE;CACzB,CAAC;MAEW,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,WAAW,CAAqB,YAAY,EAAE;SAC3E,aAAa,CAAC,GAA6B,EAAE,KAAU;IACrE,kBAAkB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAClC,CAAC;SACe,oBAAoB;IAClC,OAAO,kBAAkB,CAAC,kBAAkB,CAAC;AAC/C;;MCtBa,mBAAmB;IACvB,MAAM,iBAAiB,CAAC,WAAmB;QAChD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACzD,WAAW;SACZ,CAAC,CAAC;QACH,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,0BAA0B,CAAC,WAAmB;QACzD,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;QACtF,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,kBAAkB,CAAC,MAO/B;;QACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;QACpE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,+BAA+B,CAAC,UAAU,EAAE,KAAK,EAAE,MAAA,IAAI,CAAC,WAAW,CAAC,mCAAI,EAAE,EAAE,CAAC;KACjG;IAEM,MAAM,wBAAwB,CAAC,WAAmB,EAAE,IAAqB;QAC9E,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAChE,WAAW;YACX,IAAI;SACL,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,8BAA8B,CAAC,WAAmB,EAAE,WAA8C;QAC7G,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE;YACxE,WAAW;YACX,KAAK,EAAE,WAAW;SACnB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,cAAc,CAAC,MAAe,EAAE,eAAwB,KAAK;QACxE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,mBAAmB,kCAAO,MAAM,KAAE,YAAY,IAAG,CAAC;QACpF,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,mBAAmB,CAAC,MAA6B;QAC5D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,yBAAyB,oBAAO,MAAM,EAAG,CAAC;QAC5E,aAAa,CACX,sBAAsB,EACtB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CACpE,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,sBAAsB,CAAC,MAQnC;QACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,6BAA6B,oBAAO,MAAM,EAAG,CAAC;QAChF,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1B;IACM,MAAM,UAAU,CAAC,MASvB;;QACC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpC;QACD,OAAO,EAAE,GAAG,EAAE,MAAA,IAAI,CAAC,sBAAsB,0CAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;KAChF;IACM,MAAM,eAAe,CAAC,MAO5B;QACC,MAAM,KAAK,CAAC,IAAI,CAAC,oBAAoB,oBAAO,MAAM,EAAG,CAAC;KACvD;IACM,MAAM,gBAAgB,CAAC,IAAY;QACxC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;","names":[],"sources":["src/stores/housekeeping.store.ts","src/services/housekeeping.service.ts"],"sourcesContent":["import { IExposedHouseKeepingSetup, IHKTasks, IPendingActions } from '@/models/housekeeping';\nimport { createStore } from '@stencil/store';\n\nexport interface IHouseKeepingStore {\n  hk_criteria: IExposedHouseKeepingSetup;\n  default_properties: {\n    token: string;\n    property_id: number;\n    language: string;\n  };\n  hk_tasks: IHKTasks;\n  pending_housekeepers: { original: IPendingActions; selected?: boolean }[];\n}\n\nconst initialValue: IHouseKeepingStore = {\n  default_properties: undefined,\n  hk_criteria: undefined,\n  hk_tasks: undefined,\n  pending_housekeepers: [],\n};\n\nexport const { state: housekeeping_store } = createStore<IHouseKeepingStore>(initialValue);\nexport function updateHKStore(key: keyof IHouseKeepingStore, value: any) {\n  housekeeping_store[key] = value;\n}\nexport function getDefaultProperties() {\n  return housekeeping_store.default_properties;\n}\nexport default housekeeping_store;\n","import { RoomHkStatus } from '@/models/booking.dto';\nimport { ArchivedTask, IExposedHouseKeepingSetup, IInspectionMode, IPropertyHousekeepingAssignment, THKUser, TPendingHkSetupParams } from '@/models/housekeeping';\nimport { updateHKStore } from '@/stores/housekeeping.store';\nimport axios from 'axios';\n\nexport class HouseKeepingService {\n  public async getExposedHKSetup(property_id: number): Promise<IExposedHouseKeepingSetup> {\n    const { data } = await axios.post(`/Get_Exposed_HK_Setup`, {\n      property_id,\n    });\n    updateHKStore('hk_criteria', data['My_Result']);\n    return data['My_Result'];\n  }\n  public async getExposedHKStatusCriteria(property_id: number): Promise<IExposedHouseKeepingSetup> {\n    const { data } = await axios.post(`/Get_Exposed_HK_Status_Criteria`, { property_id });\n    updateHKStore('hk_tasks', data['My_Result']);\n    return data['My_Result'];\n  }\n  public async getArchivedHKTasks(params: {\n    property_id: number;\n    from_date: string;\n    to_date: string;\n    filtered_by_hkm?: number[];\n    filtered_by_unit?: number[];\n    is_export_to_excel?: boolean;\n  }): Promise<{ tasks: ArchivedTask[]; url: string } | null> {\n    const { data } = await axios.post(`/Get_Archived_HK_Tasks`, params);\n    return { url: data.My_Params_Get_Archived_HK_Tasks.Link_excel, tasks: data['My_Result'] ?? [] };\n  }\n\n  public async setExposedInspectionMode(property_id: number, mode: IInspectionMode) {\n    const { data } = await axios.post(`/Set_Exposed_Inspection_Mode`, {\n      property_id,\n      mode,\n    });\n    return data['My_Result'];\n  }\n  public async manageExposedAssignedUnitToHKM(property_id: number, assignments: IPropertyHousekeepingAssignment[]) {\n    const { data } = await axios.post(`/Manage_Exposed_Assigned_Unit_To_HKM`, {\n      property_id,\n      links: assignments,\n    });\n    return data['My_Result'];\n  }\n  public async editExposedHKM(params: THKUser, is_to_remove: boolean = false) {\n    const { data } = await axios.post(`/Edit_Exposed_HKM`, { ...params, is_to_remove });\n    return data['My_Result'];\n  }\n  public async getHKPendingActions(params: TPendingHkSetupParams) {\n    const { data } = await axios.post(`/Get_HK_Pending_Actions`, { ...params });\n    updateHKStore(\n      'pending_housekeepers',\n      [...data['My_Result']].map(d => ({ original: d, selected: false })),\n    );\n    return data['My_Result'];\n  }\n  public async setExposedUnitHKStatus(params: {\n    property_id: number;\n    status: {\n      code: RoomHkStatus;\n    };\n    unit: {\n      id: number;\n    };\n  }) {\n    const { data } = await axios.post(`/Set_Exposed_Unit_HK_Status`, { ...params });\n    return data['My_Result'];\n  }\n  public async getHkTasks(params: {\n    property_id: number;\n    from_date: string;\n    to_date: string;\n    housekeepers?: { id: number }[];\n    cleaning_frequency?: string;\n    dusty_window?: string;\n    highlight_window?: string;\n    is_export_to_excel?: boolean;\n  }) {\n    const { data } = await axios.post('/Get_HK_Tasks', params);\n    if (data.ExceptionMsg !== '') {\n      throw new Error(data.ExceptionMsg);\n    }\n    return { url: data.My_Params_Get_HK_Tasks?.Link_excel, tasks: data.My_Result };\n  }\n  public async executeHKAction(params: {\n    actions: {\n      unit_id: number;\n      hkm_id: number;\n      description: string;\n      booking_nbr?: string | number;\n    }[];\n  }) {\n    await axios.post(`/Execute_HK_Action`, { ...params });\n  }\n  public async generateUserName(name: string) {\n    const { data } = await axios.post(`/Generate_UserName`, { name });\n    return data.My_Result;\n  }\n}\n"],"version":3}