{"file":"channel.service-7da1b8d2.js","mappings":";;;;MAIa,cAAc;IAClB,MAAM,kBAAkB;QAC7B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;YAC/D,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YAC/B,aAAa,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;YACtC,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,2BAA2B,CAAC,WAAmB;QAC1D,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;YACtF,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACpC;YACD,aAAa,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SACxD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IACM,MAAM,oBAAoB,CAAC,KAAa,IAAI,EAAE,SAAkB;QACrE,IAAI;YACF,IAAI,IAAI,GAAQ,EAAE,CAAC;YACnB,IAAI,SAAS,EAAE;gBACb,IAAI,GAAG;oBACL,EAAE;oBACF,SAAS;iBACV,CAAC;aACH;iBAAM;gBACL,IAAI,GAAG;oBACL,EAAE,EAAE,aAAa,CAAC,UAAU;oBAC5B,KAAK,EAAE,aAAa,CAAC,gBAAgB,CAAC,WAAW;oBACjD,SAAS,EAAE,aAAa,CAAC,SAAS;oBAClC,OAAO,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE;oBAC3F,QAAQ,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE;oBAC5D,GAAG,EAAE,aAAa,CAAC,cAAc;oBACjC,SAAS;iBACV,CAAC;aACH;YAED,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;YAErE,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;KACF;;;;;","names":[],"sources":["src/services/channel.service.ts"],"sourcesContent":["import calendar_data from '@/stores/calendar-data';\r\nimport channels_data from '@/stores/channel.store';\r\nimport axios from 'axios';\r\n\r\nexport class ChannelService {\r\n  public async getExposedChannels() {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Channels`, {});\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      const results = data.My_Result;\r\n      channels_data.channels = [...results];\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getExposedConnectedChannels(property_id: number) {\r\n    try {\r\n      const { data } = await axios.post(`/Get_Exposed_Connected_Channels`, { property_id });\r\n      if (data.ExceptionMsg !== '') {\r\n        throw new Error(data.ExceptionMsg);\r\n      }\r\n      channels_data.connected_channels = [...data.My_Result];\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async saveConnectedChannel(id: number = null, is_remove: boolean) {\r\n    try {\r\n      let body: any = {};\r\n      if (is_remove) {\r\n        body = {\r\n          id,\r\n          is_remove,\r\n        };\r\n      } else {\r\n        body = {\r\n          id: channels_data.channel_id,\r\n          title: channels_data.channel_settings.hotel_title,\r\n          is_active: channels_data.is_active,\r\n          channel: { id: channels_data.selectedChannel.id, name: channels_data.selectedChannel.name },\r\n          property: { id: calendar_data.id, name: calendar_data.name },\r\n          map: channels_data.mappedChannels,\r\n          is_remove,\r\n        };\r\n      }\r\n\r\n      const { data } = await axios.post(`/Handle_Connected_Channel`, body);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n"],"version":3}