{"version":3,"file":"ir-test-cmp.entry.js","sources":["src/components/ir-test-cmp/ir-test-cmp.css?tag=ir-test-cmp&encapsulation=scoped","src/components/ir-test-cmp/ir-test-cmp.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, State, h } from '@stencil/core';\r\nimport { z, ZodError } from 'zod';\r\nconst userSchema = z.object({ password: z.string().regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+]).{8,16}$/) });\r\ntype User = z.infer<typeof userSchema>;\r\n@Component({\r\n  tag: 'ir-test-cmp',\r\n  styleUrl: 'ir-test-cmp.css',\r\n  scoped: true,\r\n})\r\nexport class IrTestCmp {\r\n  @State() user: User = {\r\n    password: '',\r\n  };\r\n  @State() error: Record<keyof User, boolean>;\r\n  @State() autoValidate = false;\r\n  render() {\r\n    return (\r\n      <Host class=\"card p-4\">\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            try {\r\n              this.error = null;\r\n              this.autoValidate = true;\r\n              console.log('here');\r\n              userSchema.parse(this.user);\r\n              alert('passed');\r\n            } catch (error) {\r\n              const er = {};\r\n              if (error instanceof ZodError) {\r\n                error.issues.forEach(e => {\r\n                  er[e.path[0]] = true;\r\n                });\r\n                this.error = er as any;\r\n              }\r\n              console.log(error);\r\n            }\r\n          }}\r\n        >\r\n          <ir-input-text\r\n            value={this.user.password}\r\n            autoValidate={this.autoValidate}\r\n            zod={userSchema.pick({ password: true })}\r\n            wrapKey=\"password\"\r\n            error={this.error?.password}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            onTextChange={e => (this.user = { ...this.user, password: e.detail })}\r\n            maxLength={14}\r\n          ></ir-input-text>\r\n          <p> {this.user.password}</p> <button class={'btn btn-primary'}>Submit</button>\r\n        </form>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"names":["z","ZodError"],"mappings":";;;AAAA,MAAM,YAAY,GAAG,kCAAkC;;ACEvD,MAAM,UAAU,GAAGA,YAAC,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAEA,YAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,gEAAgE,CAAC,EAAE,CAAC;MAOhH,SAAS,GAAA,MAAA;AALtB,IAAA,WAAA,CAAA,OAAA,EAAA;;QAMW,IAAA,CAAA,IAAI,GAAS;AACpB,YAAA,QAAQ,EAAE,EAAE;SACb;AAEQ,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK;AAyC9B;IAxCC,MAAM,GAAA;;AACJ,QAAA,QACE,CAAC,CAAA,IAAI,EAAC,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,UAAU,EAAA,EACpB,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,QAAQ,EAAE,CAAC,IAAG;gBACZ,CAAC,CAAC,cAAc,EAAE;AAClB,gBAAA,IAAI;AACF,oBAAA,IAAI,CAAC,KAAK,GAAG,IAAI;AACjB,oBAAA,IAAI,CAAC,YAAY,GAAG,IAAI;AACxB,oBAAA,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;AACnB,oBAAA,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC3B,KAAK,CAAC,QAAQ,CAAC;;gBACf,OAAO,KAAK,EAAE;oBACd,MAAM,EAAE,GAAG,EAAE;AACb,oBAAA,IAAI,KAAK,YAAYC,mBAAQ,EAAE;AAC7B,wBAAA,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;4BACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACtB,yBAAC,CAAC;AACF,wBAAA,IAAI,CAAC,KAAK,GAAG,EAAS;;AAExB,oBAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;;AAEtB,aAAC,EAAA,EAED,CAAA,CAAA,eAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EACzB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACxC,OAAO,EAAC,UAAU,EAClB,KAAK,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,QAAQ,EAC3B,IAAI,EAAC,UAAU,EACf,KAAK,EAAC,UAAU,EAChB,YAAY,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,mCAAQ,IAAI,CAAC,IAAI,CAAA,EAAA,EAAE,QAAQ,EAAE,CAAC,CAAC,MAAM,GAAE,CAAC,EACrE,SAAS,EAAE,EAAE,EACE,CAAA,EACjB,CAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,OAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAK,OAAC,CAAA,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAQ,KAAK,EAAE,iBAAiB,aAAiB,CACzE,CACF;;;;;;;"}