{"file":"ir-price-input.entry.js","mappings":"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","names":[],"sources":["src/components/ui/ir-price-input/ir-price-input.css?tag=ir-price-input&encapsulation=scoped","src/components/ui/ir-price-input/ir-price-input.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  --ir-input-border-color: #cacfe7;\r\n  flex: 1 1 0%;\r\n}\r\n\r\n:host .input-group-text {\r\n  border-color: var(--ir-input-border-color);\r\n}\r\n:host .form-control,\r\n.currency-label {\r\n  font-size: 14px !important;\r\n}\r\n\r\n.ir-bl-lbl-none,\r\n.ir-bl-input-none {\r\n  border-top-left-radius: 0 !important;\r\n  border-bottom-left-radius: 0 !important;\r\n}\r\n.ir-br-lbl-none,\r\n.ir-br-input-none {\r\n  border-top-right-radius: 0 !important;\r\n  border-bottom-right-radius: 0 !important;\r\n}\r\n.ir-br-none {\r\n  border-right: none;\r\n}\r\n.ir-bl-none {\r\n  border-left: none;\r\n}\r\n\r\n.rate-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n  padding: 0 !important;\r\n}\r\n:host([class='special-style']) .rate-input {\r\n  background: black !important;\r\n}\r\n.rate-input {\r\n  font-size: 0.875rem;\r\n  line-height: 0;\r\n  padding: 0;\r\n  height: 0;\r\n  box-sizing: border-box;\r\n  border-left: 0;\r\n  padding-left: 0px !important;\r\n  border-top-left-radius: 0 !important;\r\n  border-bottom-left-radius: 0 !important;\r\n}\r\n\r\n.currency-label.with-label {\r\n  border-radius: 0;\r\n}\r\n\r\n.currency-label {\r\n  box-sizing: border-box;\r\n  color: #3b4781;\r\n  border: 1px solid #cacfe7;\r\n  font-size: 0.875rem;\r\n  height: 2rem;\r\n  background: white;\r\n  border-right: 0;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  pointer-events: none;\r\n  transition: border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\r\n}\r\n.currency-label.disabled,\r\n.rate-input:disabled {\r\n  background-color: #eceff1;\r\n  border-color: rgba(118, 118, 118, 0.3);\r\n}\r\n\r\n.price-input-group:focus-within .currency-label {\r\n  border-top: 1px solid #1e9ff2;\r\n  border-bottom: 1px solid #1e9ff2;\r\n  border-left: 1px solid #1e9ff2;\r\n}\r\n:host([data-state='error']) .currency-label,\r\n:host([data-state='error']) .rate-input,\r\n.error {\r\n  border-color: var(--red, #ff4961) !important;\r\n}\r\n.price-input:focus {\r\n  border-right-width: 1px !important;\r\n}\r\n\r\n.is-invalid {\r\n  background-image: none !important;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Prop, State, h } from '@stencil/core';\nimport { v4 } from 'uuid';\nimport { ZodType } from 'zod';\nimport IMask, { InputMask } from 'imask';\n@Component({\n  tag: 'ir-price-input',\n  styleUrl: 'ir-price-input.css',\n  scoped: true,\n})\nexport class IrPriceInput {\n  @Element() el: HTMLIrPriceInputElement;\n\n  /** The label for the input, optional */\n  @Prop() label?: string;\n\n  /** Extra classnames for the input, optional */\n  @Prop() inputStyle?: string;\n\n  /** Extra classnames for the label, optional */\n  @Prop() labelStyle?: string;\n\n  /** The disabled for the input, optional */\n  @Prop() disabled?: boolean;\n\n  /** The Currency for the input, optional */\n  @Prop() currency?: string;\n\n  /** The AutoValidate for the input, optional */\n  @Prop() autoValidate?: boolean = true;\n\n  /** Indicates the key to wrap the value (e.g., 'price' or 'cost') */\n  @Prop() wrapKey?: string;\n\n  /**\n   * A Zod schema for validating the input\n   * Example: z.coerce.number()\n   */\n  @Prop() zod?: ZodType<any, any>;\n\n  /** Placeholder text for the input */\n  @Prop() placeholder: string = '';\n\n  /** Initial value for the input */\n  @Prop({ mutable: true }) value: string = '';\n\n  /** Whether the input is required */\n  @Prop() required: boolean = false;\n\n  /** Minimum value for the price */\n  @Prop() minValue?: number;\n\n  /** Maximum value for the price */\n  @Prop() maxValue?: number;\n\n  /** Unique id for testing */\n  @Prop() testId?: string;\n\n  /** Error*/\n  @State() error: boolean;\n\n  /** Emits the current value on change */\n  @Event() textChange: EventEmitter<string>;\n\n  /** Emits the current value on blur */\n  @Event() inputBlur: EventEmitter<string>;\n\n  /** Emits the current value on focus */\n  @Event() inputFocus: EventEmitter<void>;\n\n  private id: string;\n\n  private opts = {\n    mask: Number,\n    scale: 2,\n    radix: '.',\n    mapToRadix: [','],\n    normalizeZeros: true,\n    padFractionalZeros: true,\n    thousandsSeparator: ',',\n  };\n  private mask: InputMask<any>;\n  private inputRef: HTMLInputElement;\n\n  componentWillLoad() {\n    if (this.el.id) {\n      this.id = this.el.id;\n    } else {\n      this.id = v4();\n    }\n  }\n\n  componentDidLoad() {\n    if (!this.mask) {\n      this.initializeMask();\n    }\n  }\n\n  private initializeMask() {\n    // Create options object with min/max if provided\n    const maskOpts = {\n      ...this.opts,\n    };\n\n    if (this.minValue !== undefined) {\n      maskOpts['min'] = this.minValue;\n    }\n\n    if (this.maxValue !== undefined) {\n      maskOpts['max'] = this.maxValue;\n    }\n\n    this.mask = IMask(this.inputRef, maskOpts);\n\n    // Set initial value if provided\n    if (this.value) {\n      this.mask.value = this.value;\n    }\n\n    this.mask.on('accept', () => {\n      const isEmpty = this.inputRef.value.trim() === '' || this.mask.unmaskedValue === '';\n      if (isEmpty) {\n        this.value = '';\n        this.textChange.emit(null);\n      } else {\n        this.value = this.mask.unmaskedValue;\n        this.textChange.emit(this.value);\n      }\n    });\n  }\n\n  private hasSpecialClass(className: string): boolean {\n    return this.el.classList.contains(className);\n  }\n\n  private validateInput(value: string): void {\n    if (!this.autoValidate) {\n      return;\n    }\n    if (this.zod) {\n      try {\n        this.zod.parse(this.wrapKey ? { [this.wrapKey]: value } : value); // Validate the value using the Zod schema\n        this.error = false; // Clear the error if valid\n      } catch (error) {\n        console.log(error);\n        this.error = true; // Set the error message\n      }\n    }\n  }\n\n  private handleInputChange = (): void => {\n    // The value is already being updated by the mask's 'accept' event\n    // Just validate here if needed\n    this.validateInput(this.value);\n  };\n\n  private handleBlur = (): void => {\n    this.validateInput(this.value);\n\n    // Format to 2 decimal places on blur\n    if (this.value) {\n      const numValue = parseFloat(this.value);\n      this.value = numValue.toFixed(2);\n\n      // Update the mask value to show the formatted value\n      if (this.mask) {\n        this.mask.value = this.value;\n      }\n    }\n\n    // Emit the blur event\n    this.inputBlur.emit(this.value);\n  };\n\n  private handleFocus = (): void => {\n    // Emit the focus event\n    this.inputFocus.emit();\n  };\n\n  render() {\n    return (\n      <fieldset class=\"input-group price-input-group m-0 p-0\">\n        {this.label && (\n          <div class=\"input-group-prepend\">\n            <span\n              class={`input-group-text \n                ${this.labelStyle}\n              ${this.hasSpecialClass('ir-bl-lbl-none') ? 'ir-bl-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-lbl-none') ? 'ir-br-lbl-none' : ''}\n              ${this.hasSpecialClass('ir-br-none') ? 'ir-br-none' : ''} \n              ${this.hasSpecialClass('ir-bl-none') ? 'ir-bl-none' : ''} \n              `}\n            >\n              <label class={'p-0 m-0 '} htmlFor={this.id}>\n                {this.label}\n              </label>\n            </span>\n          </div>\n        )}\n        <div class=\"position-relative has-icon-left rate-input-container\">\n          {this.currency && (\n            <div class={`input-group-prepend`}>\n              <span class={`input-group-text ${this.disabled ? 'disabled' : ''} currency-label ${this.error ? 'error' : ''} ${this.label ? 'with-label' : ''}`}>\n                {this.currency}\n              </span>\n            </div>\n          )}\n          <input\n            ref={el => (this.inputRef = el)}\n            data-testid={this.testId}\n            disabled={this.disabled}\n            id={this.id}\n            class={`form-control input-sm rate-input \n              ${this.inputStyle}\n              ${this.hasSpecialClass('ir-br-input-none') ? 'ir-br-input-none' : ''} \n              ${this.hasSpecialClass('ir-bl-input-none') ? 'ir-bl-input-none' : ''} \n              ${this.error ? 'error' : ''} py-0 m-0 ${this.currency ? 'ir-bl-none' : ''}`}\n            onInput={this.handleInputChange}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            type=\"text\"\n            placeholder={this.placeholder}\n            aria-label={this.el.ariaLabel ?? 'price-input'}\n            aria-describedby={this.el.ariaDescription ?? 'price-input'}\n          />\n        </div>\n      </fieldset>\n    );\n  }\n}\n"],"version":3}